// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Calendar API (calendar/v3)
// Description:
//   Manipulates events and other calendar data.
// Documentation:
//   https://developers.google.com/google-apps/calendar/firstapp

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRService.h"
#else
  #import "GTLRService.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Authorization scopes

/**
 *  Authorization scope: See, edit, share, and permanently delete all the
 *  calendars you can access using Google Calendar
 *
 *  Value "https://www.googleapis.com/auth/calendar"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendar;
/**
 *  Authorization scope: See and change the sharing permissions of Google
 *  calendars you own
 *
 *  Value "https://www.googleapis.com/auth/calendar.acls"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarAcls;
/**
 *  Authorization scope: See the sharing permissions of Google calendars you own
 *
 *  Value "https://www.googleapis.com/auth/calendar.acls.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarAclsReadonly;
/**
 *  Authorization scope: Make secondary Google calendars, and see, create,
 *  change, and delete events on them
 *
 *  Value "https://www.googleapis.com/auth/calendar.app.created"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarAppCreated;
/**
 *  Authorization scope: See, add, and remove Google calendars you’re subscribed
 *  to
 *
 *  Value "https://www.googleapis.com/auth/calendar.calendarlist"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarCalendarlist;
/**
 *  Authorization scope: See the list of Google calendars you’re subscribed to
 *
 *  Value "https://www.googleapis.com/auth/calendar.calendarlist.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarCalendarlistReadonly;
/**
 *  Authorization scope: See and change the properties of Google calendars you
 *  have access to, and create secondary calendars
 *
 *  Value "https://www.googleapis.com/auth/calendar.calendars"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarCalendars;
/**
 *  Authorization scope: See the title, description, default time zone, and
 *  other properties of Google calendars you have access to
 *
 *  Value "https://www.googleapis.com/auth/calendar.calendars.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarCalendarsReadonly;
/**
 *  Authorization scope: View and edit events on all your calendars
 *
 *  Value "https://www.googleapis.com/auth/calendar.events"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEvents;
/**
 *  Authorization scope: See the availability on Google calendars you have
 *  access to
 *
 *  Value "https://www.googleapis.com/auth/calendar.events.freebusy"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEventsFreebusy;
/**
 *  Authorization scope: See, create, change, and delete events on Google
 *  calendars you own
 *
 *  Value "https://www.googleapis.com/auth/calendar.events.owned"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEventsOwned;
/**
 *  Authorization scope: See the events on Google calendars you own
 *
 *  Value "https://www.googleapis.com/auth/calendar.events.owned.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEventsOwnedReadonly;
/**
 *  Authorization scope: See the events on public calendars
 *
 *  Value "https://www.googleapis.com/auth/calendar.events.public.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEventsPublicReadonly;
/**
 *  Authorization scope: View events on all your calendars
 *
 *  Value "https://www.googleapis.com/auth/calendar.events.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarEventsReadonly;
/**
 *  Authorization scope: View your calendars
 *
 *  Value "https://www.googleapis.com/auth/calendar.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarReadonly;
/**
 *  Authorization scope: View your Calendar settings
 *
 *  Value "https://www.googleapis.com/auth/calendar.settings.readonly"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeCalendarSettingsReadonly;

// ----------------------------------------------------------------------------
//   GTLRCalendarService
//

/**
 *  Service for executing Calendar API queries.
 *
 *  Manipulates events and other calendar data.
 */
@interface GTLRCalendarService : GTLRService

// No new methods

// Clients should create a standard query with any of the class methods in
// GTLRCalendarQuery.h. The query can the be sent with GTLRService's execute
// methods,
//
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                     completionHandler:(void (^)(GTLRServiceTicket *ticket,
//                                                 id object, NSError *error))handler;
// or
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                              delegate:(id)delegate
//                     didFinishSelector:(SEL)finishedSelector;
//
// where finishedSelector has a signature of:
//
//   - (void)serviceTicket:(GTLRServiceTicket *)ticket
//      finishedWithObject:(id)object
//                   error:(NSError *)error;
//
// The object passed to the completion handler or delegate method
// is a subclass of GTLRObject, determined by the query method executed.

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
