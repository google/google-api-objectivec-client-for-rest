// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Support API (cloudsupport/v2beta)
// Description:
//   Manages Google Cloud technical support cases for Customer Care support
//   offerings.
// Documentation:
//   https://cloud.google.com/support/docs/apis

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudSupport_Case;
@class GTLRCloudSupport_CloseCaseRequest;
@class GTLRCloudSupport_Comment;
@class GTLRCloudSupport_CreateAttachmentRequest;
@class GTLRCloudSupport_EscalateCaseRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Support query classes.
 */
@interface GTLRCloudSupportQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Create a file attachment on a case or Cloud resource.
 *
 *  Method: cloudsupport.attachments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_AttachmentsCreate : GTLRCloudSupportQuery

/**
 *  Required. The resource name of the case to which attachment should be
 *  attached.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Attachment.
 *
 *  Create a file attachment on a case or Cloud resource.
 *
 *  @param object The @c GTLRCloudSupport_CreateAttachmentRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the case to which attachment
 *    should be attached.
 *
 *  @return GTLRCloudSupportQuery_AttachmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_CreateAttachmentRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieve valid classifications to be used when creating a support case. The
 *  classications are hierarchical, with each classification containing all
 *  levels of the hierarchy, separated by " > ". For example "Technical Issue >
 *  Compute > Compute Engine".
 *
 *  Method: cloudsupport.caseClassifications.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CaseClassificationsSearch : GTLRCloudSupportQuery

/** The maximum number of cases fetched with each request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  An expression written in the Cloud filter language. If non-empty, then only
 *  cases whose fields match the filter are returned. If empty, then no messages
 *  are filtered out.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudSupport_SearchCaseClassificationsResponse.
 *
 *  Retrieve valid classifications to be used when creating a support case. The
 *  classications are hierarchical, with each classification containing all
 *  levels of the hierarchy, separated by " > ". For example "Technical Issue >
 *  Compute > Compute Engine".
 *
 *  @return GTLRCloudSupportQuery_CaseClassificationsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Retrieve all attachments associated with a support case.
 *
 *  Method: cloudsupport.cases.attachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesAttachmentsList : GTLRCloudSupportQuery

/**
 *  The maximum number of attachments fetched with each request. If not
 *  provided, the default is 10. The maximum page size that will be returned is
 *  100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of Case object for which attachments should be
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListAttachmentsResponse.
 *
 *  Retrieve all attachments associated with a support case.
 *
 *  @param parent Required. The resource name of Case object for which
 *    attachments should be listed.
 *
 *  @return GTLRCloudSupportQuery_CasesAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Close the specified case.
 *
 *  Method: cloudsupport.cases.close
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesClose : GTLRCloudSupportQuery

/** Required. The fully qualified name of the case resource to be closed. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Close the specified case.
 *
 *  @param object The @c GTLRCloudSupport_CloseCaseRequest to include in the
 *    query.
 *  @param name Required. The fully qualified name of the case resource to be
 *    closed.
 *
 *  @return GTLRCloudSupportQuery_CasesClose
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_CloseCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Add a new comment to the specified Case.
 *
 *  Method: cloudsupport.cases.comments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCommentsCreate : GTLRCloudSupportQuery

/**
 *  Required. The resource name of Case to which this comment should be added.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Comment.
 *
 *  Add a new comment to the specified Case.
 *
 *  @param object The @c GTLRCloudSupport_Comment to include in the query.
 *  @param parent Required. The resource name of Case to which this comment
 *    should be added.
 *
 *  @return GTLRCloudSupportQuery_CasesCommentsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Comment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieve all Comments associated with the Case object.
 *
 *  Method: cloudsupport.cases.comments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCommentsList : GTLRCloudSupportQuery

/**
 *  The maximum number of comments fetched with each request. Defaults to 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of Case object for which comments should be
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListCommentsResponse.
 *
 *  Retrieve all Comments associated with the Case object.
 *
 *  @param parent Required. The resource name of Case object for which comments
 *    should be listed.
 *
 *  @return GTLRCloudSupportQuery_CasesCommentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Create a new case and associate it with the given Cloud resource.
 *
 *  Method: cloudsupport.cases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCreate : GTLRCloudSupportQuery

/**
 *  Required. The name of the Cloud resource under which the case should be
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Create a new case and associate it with the given Cloud resource.
 *
 *  @param object The @c GTLRCloudSupport_Case to include in the query.
 *  @param parent Required. The name of the Cloud resource under which the case
 *    should be created.
 *
 *  @return GTLRCloudSupportQuery_CasesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                         parent:(NSString *)parent;

@end

/**
 *  Escalate a case. Escalating a case will initiate the Cloud Support
 *  escalation management process. This operation is only available to certain
 *  Customer Care tiers. Go to https://cloud.google.com/support and look for
 *  'Technical support escalations' in the feature list to find out which tiers
 *  are able to perform escalations.
 *
 *  Method: cloudsupport.cases.escalate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesEscalate : GTLRCloudSupportQuery

/**
 *  Required. The fully qualified name of the Case resource to be escalated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Escalate a case. Escalating a case will initiate the Cloud Support
 *  escalation management process. This operation is only available to certain
 *  Customer Care tiers. Go to https://cloud.google.com/support and look for
 *  'Technical support escalations' in the feature list to find out which tiers
 *  are able to perform escalations.
 *
 *  @param object The @c GTLRCloudSupport_EscalateCaseRequest to include in the
 *    query.
 *  @param name Required. The fully qualified name of the Case resource to be
 *    escalated.
 *
 *  @return GTLRCloudSupportQuery_CasesEscalate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_EscalateCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Retrieve the specified case.
 *
 *  Method: cloudsupport.cases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesGet : GTLRCloudSupportQuery

/** Required. The fully qualified name of a case to be retrieved. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Retrieve the specified case.
 *
 *  @param name Required. The fully qualified name of a case to be retrieved.
 *
 *  @return GTLRCloudSupportQuery_CasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve all cases under the specified parent.
 *
 *  Method: cloudsupport.cases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesList : GTLRCloudSupportQuery

/**
 *  An expression written in the Cloud filter language. If non-empty, then only
 *  cases whose fields match the filter are returned. If empty, then no messages
 *  are filtered out. Filter strings can use the following fields: - status
 *  (Accepted values: OPEN or CLOSED) - severity (Accepted values: S0, S1, S2,
 *  S3, or S4) - creator.email with the operators equals (=) and AND.
 *  Additionally, a global restriction (with no operator) can be used to search
 *  across displayName, description, and comments (e.g. "my search").
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The maximum number of cases fetched with each request. Defaults to 10. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The fully qualified name of parent resource to list cases under.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListCasesResponse.
 *
 *  Retrieve all cases under the specified parent.
 *
 *  @param parent Required. The fully qualified name of parent resource to list
 *    cases under.
 *
 *  @return GTLRCloudSupportQuery_CasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update the specified case. Only a subset of fields (display_name,
 *  description, time_zone, subscriber_email_addresses, related_resources,
 *  severity, priority, primary_contact, and labels) can be updated.
 *
 *  Method: cloudsupport.cases.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesPatch : GTLRCloudSupportQuery

/** The resource name for the case. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A field that represents attributes of a case object that should be updated
 *  as part of this request. Supported values are severity, display_name, and
 *  subscriber_email_addresses. If no fields are specified, all supported fields
 *  will be updated. WARNING: If you do not provide a field mask then you may
 *  accidentally clear some fields. For example, if you leave field mask empty
 *  and do not provide a value for subscriber_email_addresses then
 *  subscriber_email_addresses will be updated to empty.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Update the specified case. Only a subset of fields (display_name,
 *  description, time_zone, subscriber_email_addresses, related_resources,
 *  severity, priority, primary_contact, and labels) can be updated.
 *
 *  @param object The @c GTLRCloudSupport_Case to include in the query.
 *  @param name The resource name for the case.
 *
 *  @return GTLRCloudSupportQuery_CasesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                           name:(NSString *)name;

@end

/**
 *  Search cases using the specified query.
 *
 *  Method: cloudsupport.cases.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesSearch : GTLRCloudSupportQuery

/**
 *  The maximum number of cases fetched with each request. The default page size
 *  is 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  An expression written in the Cloud filter language. Filter strings can use
 *  the following fields: - organization (A name of the form organizations/) -
 *  project (A name of the form projects/) - customer (A name of the form
 *  customers/) - state (Accepted values: OPEN or CLOSED) - severity (Accepted
 *  values: S0, S1, S2, S3, or S4) - creator.email with the operators equals (=)
 *  and AND. Additionally, a global restriction (with no key/operator) can be
 *  used to search across display_name, description, and comments (e.g. "my
 *  search"). One of organization, project, or customer field must be specified.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudSupport_SearchCasesResponse.
 *
 *  Search cases using the specified query.
 *
 *  @return GTLRCloudSupportQuery_CasesSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Download a file attachment on a case. Note: HTTP requests must append
 *  "?alt=media" to the URL.
 *
 *  Method: cloudsupport.media.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_MediaDownload : GTLRCloudSupportQuery

/** The resource name of the attachment to be downloaded. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Media.
 *
 *  Download a file attachment on a case. Note: HTTP requests must append
 *  "?alt=media" to the URL.
 *
 *  @param name The resource name of the attachment to be downloaded.
 *
 *  @return GTLRCloudSupportQuery_MediaDownload
 */
+ (instancetype)queryWithName:(NSString *)name;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Download a file attachment on a case. Note: HTTP requests must append
 *  "?alt=media" to the URL.
 *
 *  @param name The resource name of the attachment to be downloaded.
 *
 *  @return GTLRCloudSupportQuery_MediaDownload
 */
+ (instancetype)queryForMediaWithName:(NSString *)name;

@end

/**
 *  Create a file attachment on a case or Cloud resource.
 *
 *  Method: cloudsupport.media.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_MediaUpload : GTLRCloudSupportQuery

/**
 *  Required. The resource name of the case to which attachment should be
 *  attached.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Attachment.
 *
 *  Create a file attachment on a case or Cloud resource.
 *
 *  @param object The @c GTLRCloudSupport_CreateAttachmentRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the case to which attachment
 *    should be attached.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRCloudSupportQuery_MediaUpload
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_CreateAttachmentRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
