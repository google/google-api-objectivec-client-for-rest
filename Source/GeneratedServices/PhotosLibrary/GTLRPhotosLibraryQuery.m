// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Photos Library API (photoslibrary/v1)
// Description:
//   Manage photos, videos, and albums in Google Photos
// Documentation:
//   https://developers.google.com/photos/

#import "GTLRPhotosLibraryQuery.h"

#import "GTLRPhotosLibraryObjects.h"

@implementation GTLRPhotosLibraryQuery

@dynamic fields;

@end

@implementation GTLRPhotosLibraryQuery_AlbumsAddEnrichment

@dynamic albumId;

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_AddEnrichmentToAlbumRequest *)object
                        albumId:(NSString *)albumId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"albumId" ];
  NSString *pathURITemplate = @"v1/albums/{+albumId}:addEnrichment";
  GTLRPhotosLibraryQuery_AlbumsAddEnrichment *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.albumId = albumId;
  query.expectedObjectClass = [GTLRPhotosLibrary_AddEnrichmentToAlbumResponse class];
  query.loggingName = @"photoslibrary.albums.addEnrichment";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_AlbumsCreate

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_CreateAlbumRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/albums";
  GTLRPhotosLibraryQuery_AlbumsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRPhotosLibrary_Album class];
  query.loggingName = @"photoslibrary.albums.create";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_AlbumsGet

@dynamic albumId;

+ (instancetype)queryWithAlbumId:(NSString *)albumId {
  NSArray *pathParams = @[ @"albumId" ];
  NSString *pathURITemplate = @"v1/albums/{+albumId}";
  GTLRPhotosLibraryQuery_AlbumsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.albumId = albumId;
  query.expectedObjectClass = [GTLRPhotosLibrary_Album class];
  query.loggingName = @"photoslibrary.albums.get";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_AlbumsList

@dynamic pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/albums";
  GTLRPhotosLibraryQuery_AlbumsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRPhotosLibrary_ListAlbumsResponse class];
  query.loggingName = @"photoslibrary.albums.list";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_AlbumsShare

@dynamic albumId;

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_ShareAlbumRequest *)object
                        albumId:(NSString *)albumId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"albumId" ];
  NSString *pathURITemplate = @"v1/albums/{+albumId}:share";
  GTLRPhotosLibraryQuery_AlbumsShare *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.albumId = albumId;
  query.expectedObjectClass = [GTLRPhotosLibrary_ShareAlbumResponse class];
  query.loggingName = @"photoslibrary.albums.share";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_MediaItemsBatchCreate

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_BatchCreateMediaItemsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/mediaItems:batchCreate";
  GTLRPhotosLibraryQuery_MediaItemsBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRPhotosLibrary_BatchCreateMediaItemsResponse class];
  query.loggingName = @"photoslibrary.mediaItems.batchCreate";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_MediaItemsGet

@dynamic mediaItemId;

+ (instancetype)queryWithMediaItemId:(NSString *)mediaItemId {
  NSArray *pathParams = @[ @"mediaItemId" ];
  NSString *pathURITemplate = @"v1/mediaItems/{+mediaItemId}";
  GTLRPhotosLibraryQuery_MediaItemsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.mediaItemId = mediaItemId;
  query.expectedObjectClass = [GTLRPhotosLibrary_MediaItem class];
  query.loggingName = @"photoslibrary.mediaItems.get";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_MediaItemsSearch

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_SearchMediaItemsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/mediaItems:search";
  GTLRPhotosLibraryQuery_MediaItemsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRPhotosLibrary_SearchMediaItemsResponse class];
  query.loggingName = @"photoslibrary.mediaItems.search";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_SharedAlbumsJoin

+ (instancetype)queryWithObject:(GTLRPhotosLibrary_JoinSharedAlbumRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/sharedAlbums:join";
  GTLRPhotosLibraryQuery_SharedAlbumsJoin *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRPhotosLibrary_JoinSharedAlbumResponse class];
  query.loggingName = @"photoslibrary.sharedAlbums.join";
  return query;
}

@end

@implementation GTLRPhotosLibraryQuery_SharedAlbumsList

@dynamic pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/sharedAlbums";
  GTLRPhotosLibraryQuery_SharedAlbumsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRPhotosLibrary_ListSharedAlbumsResponse class];
  query.loggingName = @"photoslibrary.sharedAlbums.list";
  return query;
}

@end
