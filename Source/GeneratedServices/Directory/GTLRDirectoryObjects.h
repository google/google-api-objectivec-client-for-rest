// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Admin Directory API (admin/directory_v1)
// Description:
//   Manages enterprise resources such as users and groups, administrative
//   notifications, security features, and more.
// Documentation:
//   https://developers.google.com/admin-sdk/directory/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDirectory_Asp;
@class GTLRDirectory_Building;
@class GTLRDirectory_BuildingCoordinates;
@class GTLRDirectory_CalendarResource;
@class GTLRDirectory_Channel_Params;
@class GTLRDirectory_ChromeOsDevice;
@class GTLRDirectory_ChromeOsDevice_ActiveTimeRanges_Item;
@class GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item;
@class GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item_CpuTemperatureInfo_Item;
@class GTLRDirectory_ChromeOsDevice_DeviceFiles_Item;
@class GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item;
@class GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item_VolumeInfo_Item;
@class GTLRDirectory_ChromeOsDevice_RecentUsers_Item;
@class GTLRDirectory_ChromeOsDevice_SystemRamFreeReports_Item;
@class GTLRDirectory_ChromeOsDevice_TpmVersionInfo;
@class GTLRDirectory_CustomerPostalAddress;
@class GTLRDirectory_DomainAlias;
@class GTLRDirectory_Domains;
@class GTLRDirectory_Feature;
@class GTLRDirectory_Group;
@class GTLRDirectory_Member;
@class GTLRDirectory_MobileDevice;
@class GTLRDirectory_MobileDevice_Applications_Item;
@class GTLRDirectory_Notification;
@class GTLRDirectory_OrgUnit;
@class GTLRDirectory_Privilege;
@class GTLRDirectory_Role;
@class GTLRDirectory_Role_RolePrivileges_Item;
@class GTLRDirectory_RoleAssignment;
@class GTLRDirectory_Schema;
@class GTLRDirectory_SchemaFieldSpec;
@class GTLRDirectory_SchemaFieldSpec_NumericIndexingSpec;
@class GTLRDirectory_Token;
@class GTLRDirectory_TrustedAppId;
@class GTLRDirectory_User;
@class GTLRDirectory_User_CustomSchemas;
@class GTLRDirectory_UserCustomProperties;
@class GTLRDirectory_UserName;
@class GTLRDirectory_VerificationCode;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  JSON template for Alias object in Directory API.
 */
@interface GTLRDirectory_Alias : GTLRObject

/** A alias email */
@property(nonatomic, copy, nullable) NSString *alias;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Unique id of the group (Read-only) Unique id of the user (Read-only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Group's primary email (Read-only) User's primary email (Read-only) */
@property(nonatomic, copy, nullable) NSString *primaryEmail;

@end


/**
 *  JSON response template to list aliases in Directory API.
 */
@interface GTLRDirectory_Aliases : GTLRObject

/**
 *  List of alias objects.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *aliases;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for App Access Collections Resource object in Directory API.
 */
@interface GTLRDirectory_AppAccessCollections : GTLRObject

/** List of blocked api access buckets. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *blockedApiAccessBuckets;

/**
 *  Boolean to indicate whether to enforce app access settings on Android Drive
 *  or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforceSettingsForAndroidDrive;

/**
 *  Error message provided by the Admin that will be shown to the user when an
 *  app is blocked.
 */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Identifies the resource as an app access collection. Value:
 *  admin#directory#appaccesscollection
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Unique ID of app access collection. (Readonly)
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourceId;

/**
 *  Resource name given by the customer while creating/updating. Should be
 *  unique under given customer.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Boolean that indicates whether to trust domain owned apps.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trustDomainOwnedApps;

@end


/**
 *  The template that returns individual ASP (Access Code) data.
 */
@interface GTLRDirectory_Asp : GTLRObject

/**
 *  The unique ID of the ASP.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *codeId;

/**
 *  The time when the ASP was created. Expressed in Unix time format.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creationTime;

/** ETag of the ASP. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** The type of the API resource. This is always admin#directory#asp. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The time when the ASP was last used. Expressed in Unix time format.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lastTimeUsed;

/**
 *  The name of the application that the user, represented by their userId,
 *  entered when the ASP was created.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The unique ID of the user who issued the ASP. */
@property(nonatomic, copy, nullable) NSString *userKey;

@end


/**
 *  GTLRDirectory_Asps
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDirectory_Asps : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of ASP resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Asp *> *items;

/** The type of the API resource. This is always admin#directory#aspList. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for Building object in Directory API.
 */
@interface GTLRDirectory_Building : GTLRObject

/**
 *  Unique identifier for the building. The maximum length is 100 characters.
 */
@property(nonatomic, copy, nullable) NSString *buildingId;

/**
 *  The building name as seen by users in Calendar. Must be unique for the
 *  customer. For example, "NYC-CHEL". The maximum length is 100 characters.
 */
@property(nonatomic, copy, nullable) NSString *buildingName;

/**
 *  The geographic coordinates of the center of the building, expressed as
 *  latitude and longitude in decimal degrees.
 */
@property(nonatomic, strong, nullable) GTLRDirectory_BuildingCoordinates *coordinates;

/**
 *  A brief description of the building. For example, "Chelsea Market".
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *etags;

/**
 *  The display names for all floors in this building. The floors are expected
 *  to be sorted in ascending order, from lowest floor to highest floor. For
 *  example, ["B2", "B1", "L", "1", "2", "2M", "3", "PH"] Must contain at least
 *  one entry.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *floorNames;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for coordinates of a building in Directory API.
 */
@interface GTLRDirectory_BuildingCoordinates : GTLRObject

/**
 *  Latitude in decimal degrees.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  Longitude in decimal degrees.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  JSON template for Building List Response object in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "buildings" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Buildings : GTLRCollectionObject

/**
 *  The Buildings in this page of results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Building *> *buildings;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The continuation token, used to page through large result sets. Provide this
 *  value in a subsequent request to return the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON template for Calendar Resource object in Directory API.
 */
@interface GTLRDirectory_CalendarResource : GTLRObject

/** Unique ID for the building a resource is located in. */
@property(nonatomic, copy, nullable) NSString *buildingId;

/**
 *  Capacity of a resource, number of seats in a room.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacity;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *etags;

/**
 *  featureInstances
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id featureInstances;

/** Name of the floor a resource is located on. */
@property(nonatomic, copy, nullable) NSString *floorName;

/** Name of the section within a floor a resource is located in. */
@property(nonatomic, copy, nullable) NSString *floorSection;

/**
 *  The read-only auto-generated name of the calendar resource which includes
 *  metadata about the resource such as building name, floor, capacity, etc. For
 *  example, "NYC-2-Training Room 1A (16)".
 */
@property(nonatomic, copy, nullable) NSString *generatedResourceName;

/**
 *  The type of the resource. For calendar resources, the value is
 *  admin#directory#resources#calendars#CalendarResource.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The category of the calendar resource. Either CONFERENCE_ROOM or OTHER.
 *  Legacy data is set to CATEGORY_UNKNOWN.
 */
@property(nonatomic, copy, nullable) NSString *resourceCategory;

/** Description of the resource, visible only to admins. */
@property(nonatomic, copy, nullable) NSString *resourceDescription;

/**
 *  The read-only email for the calendar resource. Generated as part of creating
 *  a new calendar resource.
 */
@property(nonatomic, copy, nullable) NSString *resourceEmail;

/** The unique ID for the calendar resource. */
@property(nonatomic, copy, nullable) NSString *resourceId;

/** The name of the calendar resource. For example, "Training Room 1A". */
@property(nonatomic, copy, nullable) NSString *resourceName;

/** The type of the calendar resource, intended for non-room resources. */
@property(nonatomic, copy, nullable) NSString *resourceType;

/** Description of the resource, visible to users and admins. */
@property(nonatomic, copy, nullable) NSString *userVisibleDescription;

@end


/**
 *  JSON template for Calendar Resource List Response object in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_CalendarResources : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The CalendarResources in this page of results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_CalendarResource *> *items;

/**
 *  Identifies this as a collection of CalendarResources. This is always
 *  admin#directory#resources#calendars#calendarResourcesList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The continuation token, used to page through large result sets. Provide this
 *  value in a subsequent request to return the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  An notification channel used to watch for resource changes.
 */
@interface GTLRDirectory_Channel : GTLRObject

/** The address where notifications are delivered for this channel. */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  Date and time of notification channel expiration, expressed as a Unix
 *  timestamp, in milliseconds. Optional.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expiration;

/**
 *  A UUID or similar unique string that identifies this channel.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifies this as a notification channel used to watch for changes to a
 *  resource. Value: the fixed string "api#channel".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Additional parameters controlling delivery channel behavior. Optional. */
@property(nonatomic, strong, nullable) GTLRDirectory_Channel_Params *params;

/**
 *  A Boolean value to indicate whether payload is wanted. Optional.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *payload;

/**
 *  An opaque ID that identifies the resource being watched on this channel.
 *  Stable across different API versions.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/** A version-specific identifier for the watched resource. */
@property(nonatomic, copy, nullable) NSString *resourceUri;

/**
 *  An arbitrary string delivered to the target address with each notification
 *  delivered over this channel. Optional.
 */
@property(nonatomic, copy, nullable) NSString *token;

/** The type of delivery mechanism used for this channel. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Additional parameters controlling delivery channel behavior. Optional.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDirectory_Channel_Params : GTLRObject
@end


/**
 *  JSON template for Chrome Os Device resource in Directory API.
 */
@interface GTLRDirectory_ChromeOsDevice : GTLRObject

/** List of active time ranges (Read-only) */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_ActiveTimeRanges_Item *> *activeTimeRanges;

/** AssetId specified during enrollment or through later annotation */
@property(nonatomic, copy, nullable) NSString *annotatedAssetId;

/** Address or location of the device as noted by the administrator */
@property(nonatomic, copy, nullable) NSString *annotatedLocation;

/** User of the device */
@property(nonatomic, copy, nullable) NSString *annotatedUser;

/** Chromebook boot mode (Read-only) */
@property(nonatomic, copy, nullable) NSString *bootMode;

/** Reports of CPU utilization and temperature (Read-only) */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item *> *cpuStatusReports;

/** List of device files to download (Read-only) */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_DeviceFiles_Item *> *deviceFiles;

/** Unique identifier of Chrome OS Device (Read-only) */
@property(nonatomic, copy, nullable) NSString *deviceId;

/** Reports of disk space and other info about mounted/connected volumes. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item *> *diskVolumeReports;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Chromebook Mac Address on ethernet network interface (Read-only) */
@property(nonatomic, copy, nullable) NSString *ethernetMacAddress;

/** Chromebook firmware version (Read-only) */
@property(nonatomic, copy, nullable) NSString *firmwareVersion;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Date and time the device was last enrolled (Read-only) */
@property(nonatomic, strong, nullable) GTLRDateTime *lastEnrollmentTime;

/**
 *  Date and time the device was last synchronized with the policy settings in
 *  the G Suite administrator control panel (Read-only)
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastSync;

/** Chromebook Mac Address on wifi network interface (Read-only) */
@property(nonatomic, copy, nullable) NSString *macAddress;

/**
 *  Mobile Equipment identifier for the 3G mobile card in the Chromebook
 *  (Read-only)
 */
@property(nonatomic, copy, nullable) NSString *meid;

/** Chromebook Model (Read-only) */
@property(nonatomic, copy, nullable) NSString *model;

/** Notes added by the administrator */
@property(nonatomic, copy, nullable) NSString *notes;

/** Chromebook order number (Read-only) */
@property(nonatomic, copy, nullable) NSString *orderNumber;

/** OrgUnit of the device */
@property(nonatomic, copy, nullable) NSString *orgUnitPath;

/** Chromebook Os Version (Read-only) */
@property(nonatomic, copy, nullable) NSString *osVersion;

/** Chromebook platform version (Read-only) */
@property(nonatomic, copy, nullable) NSString *platformVersion;

/**
 *  List of recent device users, in descending order by last login time
 *  (Read-only)
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_RecentUsers_Item *> *recentUsers;

/** Chromebook serial number (Read-only) */
@property(nonatomic, copy, nullable) NSString *serialNumber;

/** status of the device (Read-only) */
@property(nonatomic, copy, nullable) NSString *status;

/** Final date the device will be supported (Read-only) */
@property(nonatomic, strong, nullable) GTLRDateTime *supportEndDate;

/** Reports of amounts of available RAM memory (Read-only) */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_SystemRamFreeReports_Item *> *systemRamFreeReports;

/**
 *  Total RAM on the device [in bytes] (Read-only)
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *systemRamTotal;

/** Trusted Platform Module (TPM) (Read-only) */
@property(nonatomic, strong, nullable) GTLRDirectory_ChromeOsDevice_TpmVersionInfo *tpmVersionInfo;

/**
 *  Will Chromebook auto renew after support end date (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *willAutoRenew;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_ActiveTimeRanges_Item
 */
@interface GTLRDirectory_ChromeOsDevice_ActiveTimeRanges_Item : GTLRObject

/**
 *  Duration in milliseconds
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *activeTime;

/**
 *  Date of usage
 *
 *  Date only (yyyy-mm-dd).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *date;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item
 */
@interface GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item : GTLRObject

/** List of CPU temperature samples. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item_CpuTemperatureInfo_Item *> *cpuTemperatureInfo;

/**
 *  cpuUtilizationPercentageInfo
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *cpuUtilizationPercentageInfo;

/** Date and time the report was received. */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_DeviceFiles_Item
 */
@interface GTLRDirectory_ChromeOsDevice_DeviceFiles_Item : GTLRObject

/** Date and time the file was created */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** File download URL */
@property(nonatomic, copy, nullable) NSString *downloadUrl;

/** File name */
@property(nonatomic, copy, nullable) NSString *name;

/** File type */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item
 */
@interface GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item : GTLRObject

/** Disk volumes */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item_VolumeInfo_Item *> *volumeInfo;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_RecentUsers_Item
 */
@interface GTLRDirectory_ChromeOsDevice_RecentUsers_Item : GTLRObject

/** Email address of the user. Present only if the user type is managed */
@property(nonatomic, copy, nullable) NSString *email;

/** The type of the user */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_SystemRamFreeReports_Item
 */
@interface GTLRDirectory_ChromeOsDevice_SystemRamFreeReports_Item : GTLRObject

/** Date and time the report was received. */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/**
 *  systemRamFreeInfo
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *systemRamFreeInfo;

@end


/**
 *  Trusted Platform Module (TPM) (Read-only)
 */
@interface GTLRDirectory_ChromeOsDevice_TpmVersionInfo : GTLRObject

/** TPM family. */
@property(nonatomic, copy, nullable) NSString *family;

/** TPM firmware version. */
@property(nonatomic, copy, nullable) NSString *firmwareVersion;

/** TPM manufacturer code. */
@property(nonatomic, copy, nullable) NSString *manufacturer;

/** TPM specification level. */
@property(nonatomic, copy, nullable) NSString *specLevel;

/** TPM model number. */
@property(nonatomic, copy, nullable) NSString *tpmModel;

/** Vendor-specific information such as Vendor ID. */
@property(nonatomic, copy, nullable) NSString *vendorSpecific;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item_CpuTemperatureInfo_Item
 */
@interface GTLRDirectory_ChromeOsDevice_CpuStatusReports_Item_CpuTemperatureInfo_Item : GTLRObject

/** CPU label */
@property(nonatomic, copy, nullable) NSString *label;

/**
 *  Temperature in Celsius degrees.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temperature;

@end


/**
 *  GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item_VolumeInfo_Item
 */
@interface GTLRDirectory_ChromeOsDevice_DiskVolumeReports_Item_VolumeInfo_Item : GTLRObject

/**
 *  Free disk space [in bytes]
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageFree;

/**
 *  Total disk space [in bytes]
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageTotal;

/** Volume id */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  JSON request template for firing actions on ChromeOs Device in Directory
 *  Devices API.
 */
@interface GTLRDirectory_ChromeOsDeviceAction : GTLRObject

/** Action to be taken on the ChromeOs Device */
@property(nonatomic, copy, nullable) NSString *action;

@property(nonatomic, copy, nullable) NSString *deprovisionReason;

@end


/**
 *  JSON response template for List Chrome OS Devices operation in Directory
 *  API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "chromeosdevices" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDirectory_ChromeOsDevices : GTLRCollectionObject

/**
 *  List of Chrome OS Device objects.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_ChromeOsDevice *> *chromeosdevices;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Token used to access next page of this result. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON request template for moving ChromeOs Device to given OU in Directory
 *  Devices API.
 */
@interface GTLRDirectory_ChromeOsMoveDevicesToOu : GTLRObject

/** ChromeOs Devices to be moved to OU */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deviceIds;

@end


/**
 *  JSON template for Customer Resource object in Directory API.
 */
@interface GTLRDirectory_Customer : GTLRObject

/**
 *  The customer's secondary contact email address. This email address cannot be
 *  on the same domain as the customerDomain
 */
@property(nonatomic, copy, nullable) NSString *alternateEmail;

/** The customer's creation time (Readonly) */
@property(nonatomic, strong, nullable) GTLRDateTime *customerCreationTime;

/**
 *  The customer's primary domain name string. Do not include the www prefix
 *  when creating a new customer.
 */
@property(nonatomic, copy, nullable) NSString *customerDomain;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The unique ID for the customer's G Suite account. (Readonly)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Identifies the resource as a customer. Value: admin#directory#customer */
@property(nonatomic, copy, nullable) NSString *kind;

/** The customer's ISO 639-2 language code. The default value is en-US */
@property(nonatomic, copy, nullable) NSString *language;

/** The customer's contact phone number in E.164 format. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** The customer's postal address information. */
@property(nonatomic, strong, nullable) GTLRDirectory_CustomerPostalAddress *postalAddress;

@end


/**
 *  JSON template for postal address of a customer.
 */
@interface GTLRDirectory_CustomerPostalAddress : GTLRObject

/**
 *  A customer's physical address. The address can be composed of one to three
 *  lines.
 */
@property(nonatomic, copy, nullable) NSString *addressLine1;

/** Address line 2 of the address. */
@property(nonatomic, copy, nullable) NSString *addressLine2;

/** Address line 3 of the address. */
@property(nonatomic, copy, nullable) NSString *addressLine3;

/** The customer contact's name. */
@property(nonatomic, copy, nullable) NSString *contactName;

/**
 *  This is a required property. For countryCode information see the ISO 3166
 *  country code elements.
 */
@property(nonatomic, copy, nullable) NSString *countryCode;

/**
 *  Name of the locality. An example of a locality value is the city of San
 *  Francisco.
 */
@property(nonatomic, copy, nullable) NSString *locality;

/** The company or company division name. */
@property(nonatomic, copy, nullable) NSString *organizationName;

/**
 *  The postal code. A postalCode example is a postal zip code such as 10009.
 *  This is in accordance with -
 *  http://portablecontacts.net/draft-spec.html#address_element.
 */
@property(nonatomic, copy, nullable) NSString *postalCode;

/**
 *  Name of the region. An example of a region value is NY for the state of New
 *  York.
 */
@property(nonatomic, copy, nullable) NSString *region;

@end


/**
 *  JSON template for Domain Alias object in Directory API.
 */
@interface GTLRDirectory_DomainAlias : GTLRObject

/**
 *  The creation time of the domain alias. (Read-only).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creationTime;

/** The domain alias name. */
@property(nonatomic, copy, nullable) NSString *domainAliasName;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The parent domain name that the domain alias is associated with. This can
 *  either be a primary or secondary domain name within a customer.
 */
@property(nonatomic, copy, nullable) NSString *parentDomainName;

/**
 *  Indicates the verification state of a domain alias. (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verified;

@end


/**
 *  JSON response template to list domain aliases in Directory API.
 */
@interface GTLRDirectory_DomainAliases : GTLRObject

/** List of domain alias objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_DomainAlias *> *domainAliases;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for Domain object in Directory API.
 */
@interface GTLRDirectory_Domains : GTLRObject

/**
 *  Creation time of the domain. (Read-only).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creationTime;

/** List of domain alias objects. (Read-only) */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_DomainAlias *> *domainAliases;

/** The domain name of the customer. */
@property(nonatomic, copy, nullable) NSString *domainName;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Indicates if the domain is a primary domain (Read-only).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPrimary;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Indicates the verification state of a domain. (Read-only).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verified;

@end


/**
 *  JSON response template to list Domains in Directory API.
 */
@interface GTLRDirectory_Domains2 : GTLRObject

/** List of domain objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Domains *> *domains;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for Feature object in Directory API.
 */
@interface GTLRDirectory_Feature : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *etags;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** The name of the feature. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  JSON template for a "feature instance".
 */
@interface GTLRDirectory_FeatureInstance : GTLRObject

/**
 *  The feature that this is an instance of. A calendar resource may have
 *  multiple instances of a feature.
 */
@property(nonatomic, strong, nullable) GTLRDirectory_Feature *feature;

@end


/**
 *  JSON request template for renaming a feature.
 */
@interface GTLRDirectory_FeatureRename : GTLRObject

/** New name of the feature. */
@property(nonatomic, copy, nullable) NSString *newName NS_RETURNS_NOT_RETAINED;

@end


/**
 *  JSON template for Feature List Response object in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "features" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Features : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The Features in this page of results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Feature *> *features;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The continuation token, used to page through large result sets. Provide this
 *  value in a subsequent request to return the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON template for Group resource in Directory API.
 */
@interface GTLRDirectory_Group : GTLRObject

/**
 *  Is the group created by admin (Read-only) *
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adminCreated;

/** List of aliases (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *aliases;

/**
 *  Description of the group
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Group direct members count
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *directMembersCount;

/** Email of Group */
@property(nonatomic, copy, nullable) NSString *email;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Unique identifier of Group (Read-only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Group name */
@property(nonatomic, copy, nullable) NSString *name;

/** List of non editable aliases (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *nonEditableAliases;

@end


/**
 *  JSON response template for List Groups operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groups" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Groups : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  List of group objects.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Group *> *groups;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Token used to access next page of this result. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON template for Member resource in Directory API.
 */
@interface GTLRDirectory_Member : GTLRObject

/** Delivery settings of member */
@property(nonatomic, copy, nullable) NSString *deliverySettings;

/** Email of member (Read-only) */
@property(nonatomic, copy, nullable) NSString *email;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Unique identifier of customer member (Read-only) Unique identifier of group
 *  (Read-only) Unique identifier of member (Read-only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Role of member */
@property(nonatomic, copy, nullable) NSString *role;

/** Status of member (Immutable) */
@property(nonatomic, copy, nullable) NSString *status;

/** Type of member (Immutable) */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON response template for List Members operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "members" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Members : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  List of member objects.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Member *> *members;

/** Token used to access next page of this result. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON template for Has Member response in Directory API.
 */
@interface GTLRDirectory_MembersHasMember : GTLRObject

/**
 *  Identifies whether the given user is a member of the group. Membership can
 *  be direct or nested.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isMember;

@end


/**
 *  JSON template for Mobile Device resource in Directory API.
 */
@interface GTLRDirectory_MobileDevice : GTLRObject

/**
 *  Adb (USB debugging) enabled or disabled on device (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adbStatus;

/** List of applications installed on Mobile Device */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_MobileDevice_Applications_Item *> *applications;

/** Mobile Device Baseband version (Read-only) */
@property(nonatomic, copy, nullable) NSString *basebandVersion;

/** Mobile Device Bootloader version (Read-only) */
@property(nonatomic, copy, nullable) NSString *bootloaderVersion;

/** Mobile Device Brand (Read-only) */
@property(nonatomic, copy, nullable) NSString *brand;

/** Mobile Device Build number (Read-only) */
@property(nonatomic, copy, nullable) NSString *buildNumber;

/** The default locale used on the Mobile Device (Read-only) */
@property(nonatomic, copy, nullable) NSString *defaultLanguage;

/**
 *  Developer options enabled or disabled on device (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *developerOptionsStatus;

/** Mobile Device compromised status (Read-only) */
@property(nonatomic, copy, nullable) NSString *deviceCompromisedStatus;

/** Mobile Device serial number (Read-only) */
@property(nonatomic, copy, nullable) NSString *deviceId;

/** DevicePasswordStatus (Read-only) */
@property(nonatomic, copy, nullable) NSString *devicePasswordStatus;

/** List of owner user's email addresses (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *email;

/** Mobile Device Encryption Status (Read-only) */
@property(nonatomic, copy, nullable) NSString *encryptionStatus;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Date and time the device was first synchronized with the policy settings in
 *  the G Suite administrator control panel (Read-only)
 */
@property(nonatomic, strong, nullable) GTLRDateTime *firstSync;

/** Mobile Device Hardware (Read-only) */
@property(nonatomic, copy, nullable) NSString *hardware;

/** Mobile Device Hardware Id (Read-only) */
@property(nonatomic, copy, nullable) NSString *hardwareId;

/** Mobile Device IMEI number (Read-only) */
@property(nonatomic, copy, nullable) NSString *imei;

/** Mobile Device Kernel version (Read-only) */
@property(nonatomic, copy, nullable) NSString *kernelVersion;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Date and time the device was last synchronized with the policy settings in
 *  the G Suite administrator control panel (Read-only)
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastSync;

/**
 *  Boolean indicating if this account is on owner/primary profile or not
 *  (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *managedAccountIsOnOwnerProfile;

/** Mobile Device manufacturer (Read-only) */
@property(nonatomic, copy, nullable) NSString *manufacturer;

/** Mobile Device MEID number (Read-only) */
@property(nonatomic, copy, nullable) NSString *meid;

/** Name of the model of the device */
@property(nonatomic, copy, nullable) NSString *model;

/** List of owner user's names (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *name;

/** Mobile Device mobile or network operator (if available) (Read-only) */
@property(nonatomic, copy, nullable) NSString *networkOperator;

/** Name of the mobile operating system */
@property(nonatomic, copy, nullable) NSString *os;

/** List of accounts added on device (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *otherAccountsInfo;

/** DMAgentPermission (Read-only) */
@property(nonatomic, copy, nullable) NSString *privilege;

/** Mobile Device release version version (Read-only) */
@property(nonatomic, copy, nullable) NSString *releaseVersion;

/** Unique identifier of Mobile Device (Read-only) */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Mobile Device Security patch level (Read-only)
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *securityPatchLevel;

/** Mobile Device SSN or Serial Number (Read-only) */
@property(nonatomic, copy, nullable) NSString *serialNumber;

/** Status of the device (Read-only) */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Work profile supported on device (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportsWorkProfile;

/** The type of device (Read-only) */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Unknown sources enabled or disabled on device (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unknownSourcesStatus;

/** Mobile Device user agent */
@property(nonatomic, copy, nullable) NSString *userAgent;

/** Mobile Device WiFi MAC address (Read-only) */
@property(nonatomic, copy, nullable) NSString *wifiMacAddress;

@end


/**
 *  GTLRDirectory_MobileDevice_Applications_Item
 */
@interface GTLRDirectory_MobileDevice_Applications_Item : GTLRObject

/** Display name of application */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Package name of application */
@property(nonatomic, copy, nullable) NSString *packageName;

/** List of Permissions for application */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permission;

/**
 *  Version code of application
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *versionCode;

/** Version name of application */
@property(nonatomic, copy, nullable) NSString *versionName;

@end


/**
 *  JSON request template for firing commands on Mobile Device in Directory
 *  Devices API.
 */
@interface GTLRDirectory_MobileDeviceAction : GTLRObject

/** Action to be taken on the Mobile Device */
@property(nonatomic, copy, nullable) NSString *action;

@end


/**
 *  JSON response template for List Mobile Devices operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mobiledevices" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_MobileDevices : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  List of Mobile Device objects.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_MobileDevice *> *mobiledevices;

/** Token used to access next page of this result. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Template for a notification resource.
 */
@interface GTLRDirectory_Notification : GTLRObject

/** Body of the notification (Read-only) */
@property(nonatomic, copy, nullable) NSString *body;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Address from which the notification is received (Read-only) */
@property(nonatomic, copy, nullable) NSString *fromAddress;

/**
 *  Boolean indicating whether the notification is unread or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isUnread;

/** The type of the resource. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *notificationId;

/** Time at which notification was sent (Read-only) */
@property(nonatomic, strong, nullable) GTLRDateTime *sendTime;

/** Subject of the notification (Read-only) */
@property(nonatomic, copy, nullable) NSString *subject;

@end


/**
 *  Template for notifications list response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Notifications : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  List of notifications in this page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Notification *> *items;

/** The type of the resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Token for fetching the next page of notifications. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Number of unread notification for the domain.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unreadNotificationsCount;

@end


/**
 *  JSON template for Org Unit resource in Directory API.
 */
@interface GTLRDirectory_OrgUnit : GTLRObject

/**
 *  Should block inheritance
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blockInheritance;

/**
 *  Description of OrgUnit
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Name of OrgUnit */
@property(nonatomic, copy, nullable) NSString *name;

/** Id of OrgUnit */
@property(nonatomic, copy, nullable) NSString *orgUnitId;

/** Path of OrgUnit */
@property(nonatomic, copy, nullable) NSString *orgUnitPath;

/** Id of parent OrgUnit */
@property(nonatomic, copy, nullable) NSString *parentOrgUnitId;

/** Path of parent OrgUnit */
@property(nonatomic, copy, nullable) NSString *parentOrgUnitPath;

@end


/**
 *  JSON response template for List Organization Units operation in Directory
 *  API.
 */
@interface GTLRDirectory_OrgUnits : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** List of user objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_OrgUnit *> *organizationUnits;

@end


/**
 *  JSON template for privilege resource in Directory API.
 */
@interface GTLRDirectory_Privilege : GTLRObject

/**
 *  A list of child privileges. Privileges for a service form a tree. Each
 *  privilege can have a list of child privileges; this list is empty for a leaf
 *  privilege.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Privilege *> *childPrivileges;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If the privilege can be restricted to an organization unit.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isOuScopable;

/** The type of the API resource. This is always admin#directory#privilege. */
@property(nonatomic, copy, nullable) NSString *kind;

/** The name of the privilege. */
@property(nonatomic, copy, nullable) NSString *privilegeName;

/** The obfuscated ID of the service this privilege is for. */
@property(nonatomic, copy, nullable) NSString *serviceId;

/** The name of the service this privilege is for. */
@property(nonatomic, copy, nullable) NSString *serviceName;

@end


/**
 *  JSON response template for List privileges operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDirectory_Privileges : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of Privilege resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Privilege *> *items;

/**
 *  The type of the API resource. This is always admin#directory#privileges.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for role resource in Directory API.
 */
@interface GTLRDirectory_Role : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Returns true if the role is a super admin role.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSuperAdminRole;

/**
 *  Returns true if this is a pre-defined system role.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSystemRole;

/** The type of the API resource. This is always admin#directory#role. */
@property(nonatomic, copy, nullable) NSString *kind;

/** A short description of the role. */
@property(nonatomic, copy, nullable) NSString *roleDescription;

/**
 *  ID of the role.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *roleId;

/** Name of the role. */
@property(nonatomic, copy, nullable) NSString *roleName;

/** The set of privileges that are granted to this role. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Role_RolePrivileges_Item *> *rolePrivileges;

@end


/**
 *  GTLRDirectory_Role_RolePrivileges_Item
 */
@interface GTLRDirectory_Role_RolePrivileges_Item : GTLRObject

/** The name of the privilege. */
@property(nonatomic, copy, nullable) NSString *privilegeName;

/** The obfuscated ID of the service this privilege is for. */
@property(nonatomic, copy, nullable) NSString *serviceId;

@end


/**
 *  JSON template for roleAssignment resource in Directory API.
 */
@interface GTLRDirectory_RoleAssignment : GTLRObject

/** The unique ID of the user this role is assigned to. */
@property(nonatomic, copy, nullable) NSString *assignedTo;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The type of the API resource. This is always admin#directory#roleAssignment.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  If the role is restricted to an organization unit, this contains the ID for
 *  the organization unit the exercise of this role is restricted to.
 */
@property(nonatomic, copy, nullable) NSString *orgUnitId;

/**
 *  ID of this roleAssignment.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *roleAssignmentId;

/**
 *  The ID of the role that is assigned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *roleId;

/**
 *  The scope in which this role is assigned. Possible values are:
 *  - CUSTOMER
 *  - ORG_UNIT
 */
@property(nonatomic, copy, nullable) NSString *scopeType;

@end


/**
 *  JSON response template for List roleAssignments operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_RoleAssignments : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of RoleAssignment resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_RoleAssignment *> *items;

/**
 *  The type of the API resource. This is always
 *  admin#directory#roleAssignments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON response template for List roles operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Roles : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of Role resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Role *> *items;

/** The type of the API resource. This is always admin#directory#roles. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  JSON template for Schema resource in Directory API.
 */
@interface GTLRDirectory_Schema : GTLRObject

/** Display name for the schema. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Fields of Schema */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_SchemaFieldSpec *> *fields;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Unique identifier of Schema (Read-only) */
@property(nonatomic, copy, nullable) NSString *schemaId;

/** Schema name */
@property(nonatomic, copy, nullable) NSString *schemaName;

@end


/**
 *  JSON template for FieldSpec resource for Schemas in Directory API.
 */
@interface GTLRDirectory_SchemaFieldSpec : GTLRObject

/** Display Name of the field. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Unique identifier of Field (Read-only) */
@property(nonatomic, copy, nullable) NSString *fieldId;

/** Name of the field. */
@property(nonatomic, copy, nullable) NSString *fieldName;

/** Type of the field. */
@property(nonatomic, copy, nullable) NSString *fieldType;

/**
 *  Boolean specifying whether the field is indexed or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *indexed;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Boolean specifying whether this is a multi-valued field or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiValued;

/**
 *  Indexing spec for a numeric field. By default, only exact match queries will
 *  be supported for numeric fields. Setting the numericIndexingSpec allows
 *  range queries to be supported.
 */
@property(nonatomic, strong, nullable) GTLRDirectory_SchemaFieldSpec_NumericIndexingSpec *numericIndexingSpec;

/**
 *  Read ACLs on the field specifying who can view values of this field. Valid
 *  values are "ALL_DOMAIN_USERS" and "ADMINS_AND_SELF".
 */
@property(nonatomic, copy, nullable) NSString *readAccessType;

@end


/**
 *  Indexing spec for a numeric field. By default, only exact match queries will
 *  be supported for numeric fields. Setting the numericIndexingSpec allows
 *  range queries to be supported.
 */
@interface GTLRDirectory_SchemaFieldSpec_NumericIndexingSpec : GTLRObject

/**
 *  Maximum value of this field. This is meant to be indicative rather than
 *  enforced. Values outside this range will still be indexed, but search may
 *  not be as performant.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Minimum value of this field. This is meant to be indicative rather than
 *  enforced. Values outside this range will still be indexed, but search may
 *  not be as performant.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  JSON response template for List Schema operation in Directory API.
 */
@interface GTLRDirectory_Schemas : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** List of UserSchema objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Schema *> *schemas;

@end


/**
 *  JSON template for token resource in Directory API.
 */
@interface GTLRDirectory_Token : GTLRObject

/**
 *  Whether the application is registered with Google. The value is true if the
 *  application has an anonymous Client ID.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *anonymous;

/** The Client ID of the application the token is issued to. */
@property(nonatomic, copy, nullable) NSString *clientId;

/** The displayable name of the application the token is issued to. */
@property(nonatomic, copy, nullable) NSString *displayText;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** The type of the API resource. This is always admin#directory#token. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Whether the token is issued to an installed application. The value is true
 *  if the application is installed to a desktop or mobile device.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nativeApp;

/** A list of authorization scopes the application is granted. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *scopes;

/** The unique ID of the user that issued the token. */
@property(nonatomic, copy, nullable) NSString *userKey;

@end


/**
 *  JSON response template for List tokens operation in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDirectory_Tokens : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of Token resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_Token *> *items;

/** The type of the API resource. This is always admin#directory#tokenList. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for Trusted App Ids Resource object in Directory API.
 */
@interface GTLRDirectory_TrustedAppId : GTLRObject

/** Android package name. */
@property(nonatomic, copy, nullable) NSString *androidPackageName;

/** SHA1 signature of the app certificate. */
@property(nonatomic, copy, nullable) NSString *certificateHashSHA1;

/** SHA256 signature of the app certificate. */
@property(nonatomic, copy, nullable) NSString *certificateHashSHA256;

@property(nonatomic, copy, nullable) NSString *ETag;

/** Identifies the resource as a trusted AppId. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  JSON template for Trusted Apps response object of a user in Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "trustedApps" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_TrustedApps : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Identifies the resource as trusted apps response. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Trusted Apps list.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_TrustedAppId *> *trustedApps;

@end


/**
 *  JSON template for User object in Directory API.
 */
@interface GTLRDirectory_User : GTLRObject

/**
 *  addresses
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id addresses;

/**
 *  Indicates if user has agreed to terms (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agreedToTerms;

/** List of aliases (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *aliases;

/**
 *  Indicates if user is archived.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *archived;

/**
 *  Boolean indicating if the user should change password in next login
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *changePasswordAtNextLogin;

/** User's G Suite account creation time. (Read-only) */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/** CustomerId of User (Read-only) */
@property(nonatomic, copy, nullable) NSString *customerId;

/** Custom fields of the user. */
@property(nonatomic, strong, nullable) GTLRDirectory_User_CustomSchemas *customSchemas;

@property(nonatomic, strong, nullable) GTLRDateTime *deletionTime;

/**
 *  emails
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id emails;

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  externalIds
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id externalIds;

/**
 *  gender
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id gender;

/** Hash function name for password. Supported are MD5, SHA-1 and crypt */
@property(nonatomic, copy, nullable) NSString *hashFunction;

/**
 *  Unique identifier of User (Read-only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  ims
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id ims;

/**
 *  Boolean indicating if user is included in Global Address List
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeInGlobalAddressList;

/**
 *  Boolean indicating if ip is whitelisted
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ipWhitelisted;

/**
 *  Boolean indicating if the user is admin (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAdmin;

/**
 *  Boolean indicating if the user is delegated admin (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDelegatedAdmin;

/**
 *  Is 2-step verification enforced (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isEnforcedIn2Sv;

/**
 *  Is enrolled in 2-step verification (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isEnrolledIn2Sv;

/**
 *  Is mailbox setup (Read-only)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isMailboxSetup;

/**
 *  keywords
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id keywords;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  languages
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id languages;

/** User's last login time. (Read-only) */
@property(nonatomic, strong, nullable) GTLRDateTime *lastLoginTime;

/**
 *  locations
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id locations;

/** User's name */
@property(nonatomic, strong, nullable) GTLRDirectory_UserName *name;

/** List of non editable aliases (Read-only) */
@property(nonatomic, strong, nullable) NSArray<NSString *> *nonEditableAliases;

/**
 *  notes
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id notes;

/**
 *  organizations
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id organizations;

/** OrgUnit of User */
@property(nonatomic, copy, nullable) NSString *orgUnitPath;

/** User's password */
@property(nonatomic, copy, nullable) NSString *password;

/**
 *  phones
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id phones;

/**
 *  posixAccounts
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id posixAccounts;

/** username of User */
@property(nonatomic, copy, nullable) NSString *primaryEmail;

/**
 *  relations
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id relations;

/**
 *  sshPublicKeys
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id sshPublicKeys;

/**
 *  Indicates if user is suspended.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suspended;

/** Suspension reason if user is suspended (Read-only) */
@property(nonatomic, copy, nullable) NSString *suspensionReason;

/** ETag of the user's photo (Read-only) */
@property(nonatomic, copy, nullable) NSString *thumbnailPhotoEtag;

/** Photo Url of the user (Read-only) */
@property(nonatomic, copy, nullable) NSString *thumbnailPhotoUrl;

/**
 *  websites
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id websites;

@end


/**
 *  Custom fields of the user.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDirectory_UserCustomProperties. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRDirectory_User_CustomSchemas : GTLRObject
@end


/**
 *  JSON template for About (notes) of a user in Directory API.
 */
@interface GTLRDirectory_UserAbout : GTLRObject

/**
 *  About entry can have a type which indicates the content type. It can either
 *  be plain or html. By default, notes contents are assumed to contain plain
 *  text.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/** Actual value of notes. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  JSON template for address.
 */
@interface GTLRDirectory_UserAddress : GTLRObject

/** Country. */
@property(nonatomic, copy, nullable) NSString *country;

/** Country code. */
@property(nonatomic, copy, nullable) NSString *countryCode;

/** Custom type. */
@property(nonatomic, copy, nullable) NSString *customType;

/** Extended Address. */
@property(nonatomic, copy, nullable) NSString *extendedAddress;

/** Formatted address. */
@property(nonatomic, copy, nullable) NSString *formatted;

/** Locality. */
@property(nonatomic, copy, nullable) NSString *locality;

/** Other parts of address. */
@property(nonatomic, copy, nullable) NSString *poBox;

/** Postal code. */
@property(nonatomic, copy, nullable) NSString *postalCode;

/**
 *  If this is user's primary address. Only one entry could be marked as
 *  primary.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/** Region. */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  User supplied address was structured. Structured addresses are NOT supported
 *  at this time. You might be able to write structured addresses, but any
 *  values will eventually be clobbered.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sourceIsStructured;

/** Street. */
@property(nonatomic, copy, nullable) NSString *streetAddress;

/**
 *  Each entry can have a type which indicates standard values of that entry.
 *  For example address could be of home, work etc. In addition to the standard
 *  type, an entry can have a custom type and can take any value. Such type
 *  should have the CUSTOM value as type and also have a customType value.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON template for a set of custom properties (i.e. all fields in a
 *  particular schema)
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDirectory_UserCustomProperties : GTLRObject
@end


/**
 *  JSON template for an email.
 */
@interface GTLRDirectory_UserEmail : GTLRObject

/** Email id of the user. */
@property(nonatomic, copy, nullable) NSString *address;

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/**
 *  If this is user's primary email. Only one entry could be marked as primary.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example email could be of home, work etc. In addition to the standard type,
 *  an entry can have a custom type and can take any value Such types should
 *  have the CUSTOM value as type and also have a customType value.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON template for an externalId entry.
 */
@interface GTLRDirectory_UserExternalId : GTLRObject

/** Custom type. */
@property(nonatomic, copy, nullable) NSString *customType;

/** The type of the Id. */
@property(nonatomic, copy, nullable) NSString *type;

/** The value of the id. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDirectory_UserGender
 */
@interface GTLRDirectory_UserGender : GTLRObject

/**
 *  AddressMeAs. A human-readable string containing the proper way to refer to
 *  the profile owner by humans, for example "he/him/his" or "they/them/their".
 */
@property(nonatomic, copy, nullable) NSString *addressMeAs;

/** Custom gender. */
@property(nonatomic, copy, nullable) NSString *customGender;

/** Gender. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON template for instant messenger of an user.
 */
@interface GTLRDirectory_UserIm : GTLRObject

/** Custom protocol. */
@property(nonatomic, copy, nullable) NSString *customProtocol;

/** Custom type. */
@property(nonatomic, copy, nullable) NSString *customType;

/** Instant messenger id. */
@property(nonatomic, copy, nullable) NSString *im;

/**
 *  If this is user's primary im. Only one entry could be marked as primary.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/**
 *  Protocol used in the instant messenger. It should be one of the values from
 *  ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify
 *  the custom name in customProtocol field.
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example instant messengers could be of home, work etc. In addition to the
 *  standard type, an entry can have a custom type and can take any value. Such
 *  types should have the CUSTOM value as type and also have a customType value.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON template for a keyword entry.
 */
@interface GTLRDirectory_UserKeyword : GTLRObject

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/**
 *  Each entry can have a type which indicates standard type of that entry. For
 *  example, keyword could be of type occupation or outlook. In addition to the
 *  standard type, an entry can have a custom type and can give it any name.
 *  Such types should have the CUSTOM value as type and also have a customType
 *  value.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Keyword. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  JSON template for a language entry.
 */
@interface GTLRDirectory_UserLanguage : GTLRObject

/**
 *  Other language. User can provide own language name if there is no
 *  corresponding Google III language code. If this is set LanguageCode can't be
 *  set
 */
@property(nonatomic, copy, nullable) NSString *customLanguage;

/**
 *  Language Code. Should be used for storing Google III LanguageCode string
 *  representation for language. Illegal values cause SchemaException.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

@end


/**
 *  JSON template for a location entry.
 */
@interface GTLRDirectory_UserLocation : GTLRObject

/**
 *  Textual location. This is most useful for display purposes to concisely
 *  describe the location. For example, "Mountain View, CA", "Near Seattle",
 *  "US-NYC-9TH 9A209A".
 */
@property(nonatomic, copy, nullable) NSString *area;

/** Building Identifier. */
@property(nonatomic, copy, nullable) NSString *buildingId;

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/** Most specific textual code of individual desk location. */
@property(nonatomic, copy, nullable) NSString *deskCode;

/** Floor name/number. */
@property(nonatomic, copy, nullable) NSString *floorName;

/**
 *  Floor section. More specific location within the floor. For example, if a
 *  floor is divided into sections "A", "B", and "C", this field would identify
 *  one of those values.
 */
@property(nonatomic, copy, nullable) NSString *floorSection;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example location could be of types default and desk. In addition to standard
 *  type, an entry can have a custom type and can give it any name. Such types
 *  should have "custom" as type and also have a customType value.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON request template for setting/revoking admin status of a user in
 *  Directory API.
 */
@interface GTLRDirectory_UserMakeAdmin : GTLRObject

/**
 *  Boolean indicating new admin status of the user
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *status;

@end


/**
 *  JSON template for name of a user in Directory API.
 */
@interface GTLRDirectory_UserName : GTLRObject

/** Last Name */
@property(nonatomic, copy, nullable) NSString *familyName;

/** Full Name */
@property(nonatomic, copy, nullable) NSString *fullName;

/** First Name */
@property(nonatomic, copy, nullable) NSString *givenName;

@end


/**
 *  JSON template for an organization entry.
 */
@interface GTLRDirectory_UserOrganization : GTLRObject

/** The cost center of the users department. */
@property(nonatomic, copy, nullable) NSString *costCenter;

/** Custom type. */
@property(nonatomic, copy, nullable) NSString *customType;

/** Department within the organization. */
@property(nonatomic, copy, nullable) NSString *department;

/**
 *  Description of the organization.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The domain to which the organization belongs to. */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  The full-time equivalent percent within the organization (100000 = 100%).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullTimeEquivalent;

/** Location of the organization. This need not be fully qualified address. */
@property(nonatomic, copy, nullable) NSString *location;

/** Name of the organization */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If it user's primary organization.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/** Symbol of the organization. */
@property(nonatomic, copy, nullable) NSString *symbol;

/** Title (designation) of the user in the organization. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example organization could be of school, work etc. In addition to the
 *  standard type, an entry can have a custom type and can give it any name.
 *  Such types should have the CUSTOM value as type and also have a CustomType
 *  value.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  JSON template for a phone entry.
 */
@interface GTLRDirectory_UserPhone : GTLRObject

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/**
 *  If this is user's primary phone or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example phone could be of home_fax, work, mobile etc. In addition to the
 *  standard type, an entry can have a custom type and can give it any name.
 *  Such types should have the CUSTOM value as type and also have a customType
 *  value.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Phone number. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  JSON template for Photo object in Directory API.
 */
@interface GTLRDirectory_UserPhoto : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Height in pixels of the photo
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  Unique identifier of User (Read-only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Mime Type of the photo */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 *  Base64 encoded photo data
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *photoData;

/** Primary email of User (Read-only) */
@property(nonatomic, copy, nullable) NSString *primaryEmail;

/**
 *  Width in pixels of the photo
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  JSON template for a POSIX account entry. Description of the field family:
 *  go/fbs-posix.
 */
@interface GTLRDirectory_UserPosixAccount : GTLRObject

/** A POSIX account field identifier. (Read-only) */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GECOS (user information) for this account. */
@property(nonatomic, copy, nullable) NSString *gecos;

/**
 *  The default group ID.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gid;

/** The path to the home directory for this account. */
@property(nonatomic, copy, nullable) NSString *homeDirectory;

/** The operating system type for this account. */
@property(nonatomic, copy, nullable) NSString *operatingSystemType;

/**
 *  If this is user's primary account within the SystemId.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/** The path to the login shell for this account. */
@property(nonatomic, copy, nullable) NSString *shell;

/** System identifier for which account Username or Uid apply to. */
@property(nonatomic, copy, nullable) NSString *systemId;

/**
 *  The POSIX compliant user ID.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *uid;

/** The username of the account. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  JSON template for a relation entry.
 */
@interface GTLRDirectory_UserRelation : GTLRObject

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/**
 *  The relation of the user. Some of the possible values are mother, father,
 *  sister, brother, manager, assistant, partner.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The name of the relation. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  JSON response template for List Users operation in Apps Directory API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "users" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDirectory_Users : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Kind of resource this is. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Token used to access next page of this result. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Event that triggered this response (only used in case of Push Response) */
@property(nonatomic, copy, nullable) NSString *triggerEvent;

/**
 *  List of user objects.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_User *> *users;

@end


/**
 *  JSON template for a POSIX account entry.
 */
@interface GTLRDirectory_UserSshPublicKey : GTLRObject

/**
 *  An expiration time in microseconds since epoch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expirationTimeUsec;

/** A SHA-256 fingerprint of the SSH public key. (Read-only) */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** An SSH public key. */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  JSON request template to undelete a user in Directory API.
 */
@interface GTLRDirectory_UserUndelete : GTLRObject

/** OrgUnit of User */
@property(nonatomic, copy, nullable) NSString *orgUnitPath;

@end


/**
 *  JSON template for a website entry.
 */
@interface GTLRDirectory_UserWebsite : GTLRObject

/** Custom Type. */
@property(nonatomic, copy, nullable) NSString *customType;

/**
 *  If this is user's primary website or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/**
 *  Each entry can have a type which indicates standard types of that entry. For
 *  example website could be of home, work, blog etc. In addition to the
 *  standard type, an entry can have a custom type and can give it any name.
 *  Such types should have the CUSTOM value as type and also have a customType
 *  value.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Website. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  JSON template for verification codes in Directory API.
 */
@interface GTLRDirectory_VerificationCode : GTLRObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The type of the resource. This is always admin#directory#verificationCode.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The obfuscated unique ID of the user. */
@property(nonatomic, copy, nullable) NSString *userId;

/**
 *  A current verification code for the user. Invalidated or used verification
 *  codes are not returned as part of the result.
 */
@property(nonatomic, copy, nullable) NSString *verificationCode;

@end


/**
 *  JSON response template for List verification codes operation in Directory
 *  API.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDirectory_VerificationCodes : GTLRCollectionObject

/** ETag of the resource. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  A list of verification code resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDirectory_VerificationCode *> *items;

/**
 *  The type of the resource. This is always
 *  admin#directory#verificationCodesList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
