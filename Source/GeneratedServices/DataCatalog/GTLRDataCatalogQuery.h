// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Data Catalog API (datacatalog/v1beta1)
// Description:
//   A fully managed and highly scalable data discovery and metadata management
//   service.
// Documentation:
//   https://cloud.google.com/data-catalog/docs/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDataCatalog_GetIamPolicyRequest;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequest;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy;
@class GTLRDataCatalog_SetIamPolicyRequest;
@class GTLRDataCatalog_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Data Catalog query classes.
 */
@interface GTLRDataCatalogQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Searches Data Catalog for multiple resources like entries, tags that
 *  match a query.
 *  This is a custom method
 *  (https://cloud.google.com/apis/design/custom_methods) and does not return
 *  the complete resource, only the resource identifier and high level
 *  fields. Clients can subsequentally call `Get` methods.
 *  Note that Data Catalog search queries do not guarantee full recall. Query
 *  results that match your query may not be returned, even in subsequent
 *  result pages. Also note that results returned (and not returned) can vary
 *  across repeated search queries.
 *  See [Data Catalog Search
 *  Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
 *  for more information.
 *
 *  Method: datacatalog.catalog.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_CatalogSearch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForCatalogSearchWithObject:]

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
 *
 *  Searches Data Catalog for multiple resources like entries, tags that
 *  match a query.
 *  This is a custom method
 *  (https://cloud.google.com/apis/design/custom_methods) and does not return
 *  the complete resource, only the resource identifier and high level
 *  fields. Clients can subsequentally call `Get` methods.
 *  Note that Data Catalog search queries do not guarantee full recall. Query
 *  results that match your query may not be returned, even in subsequent
 *  result pages. Also note that results returned (and not returned) can vary
 *  across repeated search queries.
 *  See [Data Catalog Search
 *  Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
 *  for more information.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequest to
 *    include in the query.
 *
 *  @return GTLRDataCatalogQuery_CatalogSearch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequest *)object;

@end

/**
 *  Get an entry by target resource name. This method allows clients to use
 *  the resource name from the source Google Cloud Platform service to get the
 *  Data Catalog Entry.
 *
 *  Method: datacatalog.entries.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_EntriesLookup : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForEntriesLookup]

/**
 *  The full name of the Google Cloud Platform resource the Data Catalog
 *  entry represents. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name.
 *  Full names are case-sensitive.
 *  Examples:
 *  *
 *  //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
 *  * //pubsub.googleapis.com/projects/projectId/topics/topicId
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/**
 *  The SQL name of the entry. SQL names are case-sensitive.
 *  Examples:
 *  * `pubsub.project_id.topic_id`
 *  * ``pubsub.project_id.`topic.id.with.dots` ``
 *  * `bigquery.table.project_id.dataset_id.table_id`
 *  * `bigquery.dataset.project_id.dataset_id`
 *  * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id`
 *  `*_id`s shoud satisfy the standard SQL rules for identifiers.
 *  https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.
 */
@property(nonatomic, copy, nullable) NSString *sqlResource;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.
 *
 *  Get an entry by target resource name. This method allows clients to use
 *  the resource name from the source Google Cloud Platform service to get the
 *  Data Catalog Entry.
 *
 *  @return GTLRDataCatalogQuery_EntriesLookup
 */
+ (instancetype)query;

@end

/**
 *  A maximum of 10,000 entry groups may be created per organization across all
 *  locations.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `parent` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.entryGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsCreateWithObject:parent:]

/**
 *  Required. The id of the entry group to create.
 *  The id must begin with a letter or underscore, contain only English
 *  letters, numbers and underscores, and be at most 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *entryGroupId;

/**
 *  Required. The name of the project this entry group is in. Example:
 *  * projects/{project_id}/locations/{location}
 *  Note that this EntryGroup and its child resources may not actually be
 *  stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup.
 *
 *  A maximum of 10,000 entry groups may be created per organization across all
 *  locations.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `parent` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup
 *    to include in the query.
 *  @param parent Required. The name of the project this entry group is in.
 *    Example:
 *    * projects/{project_id}/locations/{location}
 *    Note that this EntryGroup and its child resources may not actually be
 *    stored in the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an EntryGroup. Only entry groups that do not contain entries can be
 *  deleted. Users should enable the Data Catalog API in the project
 *  identified by the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.entryGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsDeleteWithname:]

/** Optional. If true, deletes all entries in the entry group. */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the entry group. For example,
 *  `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes an EntryGroup. Only entry groups that do not contain entries can be
 *  deleted. Users should enable the Data Catalog API in the project
 *  identified by the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param name Required. The name of the entry group. For example,
 *    `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an entry. Only entries of 'FILESET' type or user-specified type can
 *  be created.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `parent` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *  A maximum of 100,000 entries may be created per entry group.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesCreateWithObject:parent:]

/** Required. The id of the entry to create. */
@property(nonatomic, copy, nullable) NSString *entryId;

/**
 *  Required. The name of the entry group this entry is in. Example:
 *  * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *  Note that this Entry and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.
 *
 *  Creates an entry. Only entries of 'FILESET' type or user-specified type can
 *  be created.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `parent` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *  A maximum of 100,000 entries may be created per entry group.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry to
 *    include in the query.
 *  @param parent Required. The name of the entry group this entry is in.
 *    Example:
 *    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *    Note that this Entry and its child resources may not actually be stored in
 *    the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing entry. Only entries created through
 *  CreateEntry
 *  method can be deleted.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesDeleteWithname:]

/**
 *  Required. The name of the entry. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes an existing entry. Only entries created through
 *  CreateEntry
 *  method can be deleted.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param name Required. The name of the entry. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an entry.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGet : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesGetWithname:]

/**
 *  Required. The name of the entry. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.
 *
 *  Gets an entry.
 *
 *  @param name Required. The name of the entry. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists entries.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesListWithparent:]

/**
 *  The maximum number of items to return. Default is 10. Max limit is 1000.
 *  Throws an invalid argument for `page_size > 1000`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token that specifies which page is requested. If empty, the first page is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the entry group that contains the entries, which can
 *  be provided in URL format. Example:
 *  * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The fields to return for each Entry. If not set or empty, all
 *  fields are returned.
 *  For example, setting read_mask to contain only one path "name" will cause
 *  ListEntries to return a list of Entries with only "name" field.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListEntriesResponse.
 *
 *  Lists entries.
 *
 *  @param parent Required. The name of the entry group that contains the
 *    entries, which can
 *    be provided in URL format. Example:
 *    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing entry.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `entry.name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesPatchWithObject:name:]

/**
 *  The Data Catalog resource name of the entry in URL format. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *  Note that this Entry and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to update on the entry. If absent or empty, all modifiable
 *  fields are updated.
 *  The following fields are modifiable:
 *  * For entries with type `DATA_STREAM`:
 *  * `schema`
 *  * For entries with type `FILESET`
 *  * `schema`
 *  * `display_name`
 *  * `description`
 *  * `gcs_fileset_spec`
 *  * `gcs_fileset_spec.file_patterns`
 *  * For entries with `user_specified_type`
 *  * `schema`
 *  * `display_name`
 *  * `description`
 *  * user_specified_type
 *  * user_specified_system
 *  * linked_resource
 *  * source_system_timestamps
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.
 *
 *  Updates an existing entry.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `entry.name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry to
 *    include in the query.
 *  @param name The Data Catalog resource name of the entry in URL format.
 *    Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *    Note that this Entry and its child resources may not actually be stored in
 *    the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a tag on an Entry.
 *  Note: The project identified by the `parent` parameter for the
 *  [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the
 *  [tag
 *  template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be from the same organization.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesTagsCreateWithObject:parent:]

/**
 *  Required. The name of the resource to attach this tag to. Tags can be
 *  attached to
 *  Entries. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *  Note that this Tag and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag.
 *
 *  Creates a tag on an Entry.
 *  Note: The project identified by the `parent` parameter for the
 *  [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the
 *  [tag
 *  template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be from the same organization.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag to
 *    include in the query.
 *  @param parent Required. The name of the resource to attach this tag to. Tags
 *    can be attached to
 *    Entries. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *    Note that this Tag and its child resources may not actually be stored in
 *    the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesTagsDeleteWithname:]

/**
 *  Required. The name of the tag to delete. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag.
 *
 *  @param name Required. The name of the tag to delete. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the tags on an Entry.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesTagsListWithparent:]

/** The maximum number of tags to return. Default is 10. Max limit is 1000. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token that specifies which page is requested. If empty, the first page is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Data Catalog resource to list the tags of. The
 *  resource
 *  could be an Entry or an
 *  EntryGroup.
 *  Examples:
 *  * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListTagsResponse.
 *
 *  Lists the tags on an Entry.
 *
 *  @param parent Required. The name of the Data Catalog resource to list the
 *    tags of. The resource
 *    could be an Entry or an
 *    EntryGroup.
 *    Examples:
 *    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesTagsPatchWithObject:name:]

/**
 *  The resource name of the tag in URL format. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *  where `tag_id` is a system-generated identifier.
 *  Note that this Tag may not actually be stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to update on the Tag. If absent or empty, all modifiable fields
 *  are updated. Currently the only modifiable field is the field `fields`.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag.
 *
 *  Updates an existing tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag to
 *    include in the query.
 *  @param name The resource name of the tag in URL format. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *    where `tag_id` is a system-generated identifier.
 *    Note that this Tag may not actually be stored in the location in this
 *    name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTestIamPermissions : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsEntriesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets an EntryGroup.
 *
 *  Method: datacatalog.projects.locations.entryGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGet : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsGetWithname:]

/**
 *  Required. The name of the entry group. For example,
 *  `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to return. If not set or empty, all fields are returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup.
 *
 *  Gets an EntryGroup.
 *
 *  @param name Required. The name of the entry group. For example,
 *    `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsListWithparent:]

/**
 *  Optional. The maximum number of items to return. Default is 10. Max limit is
 *  1000.
 *  Throws an invalid argument for `page_size > 1000`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Token that specifies which page is requested. If empty, the first
 *  page is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the location that contains the entry groups, which can
 *  be
 *  provided in URL format. Example:
 *  * projects/{project_id}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse.
 *
 *  Lists entry groups.
 *
 *  @param parent Required. The name of the location that contains the entry
 *    groups, which can be
 *    provided in URL format. Example:
 *    * projects/{project_id}/locations/{location}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an EntryGroup. The user should enable the Data Catalog API in the
 *  project identified by the `entry_group.name` parameter (see [Data Catalog
 *  Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.entryGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsPatchWithObject:name:]

/**
 *  The resource name of the entry group in URL format. Example:
 *  * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *  Note that this EntryGroup and its child resources may not actually be
 *  stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to update on the entry group. If absent or empty, all modifiable
 *  fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup.
 *
 *  Updates an EntryGroup. The user should enable the Data Catalog API in the
 *  project identified by the `entry_group.name` parameter (see [Data Catalog
 *  Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup
 *    to include in the query.
 *  @param name The resource name of the entry group in URL format. Example:
 *    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *    Note that this EntryGroup and its child resources may not actually be
 *    stored in the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy for a resource. Replaces any existing
 *  policy.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
 *  templates.
 *  - `datacatalog.entries.setIamPolicy` to set policies on entries.
 *  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsSetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the access control policy for a resource. Replaces any existing
 *  policy.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
 *  templates.
 *  - `datacatalog.entries.setIamPolicy` to set policies on entries.
 *  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a tag on an Entry.
 *  Note: The project identified by the `parent` parameter for the
 *  [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the
 *  [tag
 *  template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be from the same organization.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsTagsCreateWithObject:parent:]

/**
 *  Required. The name of the resource to attach this tag to. Tags can be
 *  attached to
 *  Entries. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *  Note that this Tag and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag.
 *
 *  Creates a tag on an Entry.
 *  Note: The project identified by the `parent` parameter for the
 *  [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the
 *  [tag
 *  template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be from the same organization.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag to
 *    include in the query.
 *  @param parent Required. The name of the resource to attach this tag to. Tags
 *    can be attached to
 *    Entries. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *    Note that this Tag and its child resources may not actually be stored in
 *    the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsTagsDeleteWithname:]

/**
 *  Required. The name of the tag to delete. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag.
 *
 *  @param name Required. The name of the tag to delete. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the tags on an Entry.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsTagsListWithparent:]

/** The maximum number of tags to return. Default is 10. Max limit is 1000. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token that specifies which page is requested. If empty, the first page is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Data Catalog resource to list the tags of. The
 *  resource
 *  could be an Entry or an
 *  EntryGroup.
 *  Examples:
 *  * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *  *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListTagsResponse.
 *
 *  Lists the tags on an Entry.
 *
 *  @param parent Required. The name of the Data Catalog resource to list the
 *    tags of. The resource
 *    could be an Entry or an
 *    EntryGroup.
 *    Examples:
 *    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
 *    *
 *    projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsTagsPatchWithObject:name:]

/**
 *  The resource name of the tag in URL format. Example:
 *  *
 *  projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *  where `tag_id` is a system-generated identifier.
 *  Note that this Tag may not actually be stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to update on the Tag. If absent or empty, all modifiable fields
 *  are updated. Currently the only modifiable field is the field `fields`.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag.
 *
 *  Updates an existing tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag to
 *    include in the query.
 *  @param name The resource name of the tag in URL format. Example:
 *    *
 *    projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *    where `tag_id` is a system-generated identifier.
 *    Note that this Tag may not actually be stored in the location in this
 *    name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  Method: datacatalog.projects.locations.entryGroups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTestIamPermissions : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsEntryGroupsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a tag template. The user should enable the Data Catalog API in
 *  the project identified by the `parent` parameter (see [Data Catalog
 *  Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesCreateWithObject:parent:]

/**
 *  Required. The name of the project and the template location
 *  [region](https://cloud.google.com/data-catalog/docs/concepts/regions.
 *  Example:
 *  * projects/{project_id}/locations/us-central1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The id of the tag template to create. */
@property(nonatomic, copy, nullable) NSString *tagTemplateId;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate.
 *
 *  Creates a tag template. The user should enable the Data Catalog API in
 *  the project identified by the `parent` parameter (see [Data Catalog
 *  Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate to include in the
 *    query.
 *  @param parent Required. The name of the project and the template location
 *    [region](https://cloud.google.com/data-catalog/docs/concepts/regions.
 *    Example:
 *    * projects/{project_id}/locations/us-central1
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag template and all tags using the template.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesDeleteWithname:]

/**
 *  Required. Currently, this field must always be set to `true`.
 *  This confirms the deletion of any possible tags using this template.
 *  `force = false` will be supported in the future.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the tag template to delete. Example:
 *  * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag template and all tags using the template.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param name Required. The name of the tag template to delete. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a field in a tag template. The user should enable the Data Catalog
 *  API in the project identified by the `parent` parameter (see
 *  [Data Catalog Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesFieldsCreateWithObject:parent:]

/**
 *  Required. The name of the project and the template location
 *  [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 *  Example:
 *  * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID of the tag template field to create.
 *  Field ids can contain letters (both uppercase and lowercase), numbers
 *  (0-9), underscores (_) and dashes (-). Field IDs must be at least 1
 *  character long and at most 128 characters long. Field IDs must also be
 *  unique within their template.
 */
@property(nonatomic, copy, nullable) NSString *tagTemplateFieldId;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField.
 *
 *  Creates a field in a tag template. The user should enable the Data Catalog
 *  API in the project identified by the `parent` parameter (see
 *  [Data Catalog Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField to include
 *    in the query.
 *  @param parent Required. The name of the project and the template location
 *    [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 *    Example:
 *    *
 *    projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a field in a tag template and all uses of that field.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesFieldsDeleteWithname:]

/**
 *  Required. Currently, this field must always be set to `true`.
 *  This confirms the deletion of this field from any tags using this field.
 *  `force = false` will be supported in the future.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the tag template field to delete. Example:
 *  *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a field in a tag template and all uses of that field.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param name Required. The name of the tag template field to delete. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Renames an enum value in a tag template. The enum values have to be unique
 *  within one enum field. Thus, an enum value cannot be renamed with a name
 *  used in any other enum value within the same enum field.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.enumValues.rename
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsEnumValuesRename : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesFieldsEnumValuesRenameWithObject:name:]

/**
 *  Required. The name of the enum field value. Example:
 *  *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField.
 *
 *  Renames an enum value in a tag template. The enum values have to be unique
 *  within one enum field. Thus, an enum value cannot be renamed with a name
 *  used in any other enum value within the same enum field.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest
 *    to include in the query.
 *  @param name Required. The name of the enum field value. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsEnumValuesRename
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a field in a tag template. This method cannot be used to update the
 *  field type. Users should enable the Data Catalog API in the project
 *  identified by the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesFieldsPatchWithObject:name:]

/**
 *  Required. The name of the tag template field. Example:
 *  *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The field mask specifies the parts of the template to be updated.
 *  Allowed fields:
 *  * `display_name`
 *  * `type.enum_type`
 *  * `is_required`
 *  If `update_mask` is not set or empty, all of the allowed fields above will
 *  be updated.
 *  When updating an enum type, the provided values will be merged with the
 *  existing values. Therefore, enum values can only be added, existing enum
 *  values cannot be deleted nor renamed. Updating a template field from
 *  optional to required is NOT allowed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField.
 *
 *  Updates a field in a tag template. This method cannot be used to update the
 *  field type. Users should enable the Data Catalog API in the project
 *  identified by the `name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField to include
 *    in the query.
 *  @param name Required. The name of the tag template field. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField *)object
                           name:(NSString *)name;

@end

/**
 *  Renames a field in a tag template. The user should enable the Data Catalog
 *  API in the project identified by the `name` parameter (see [Data Catalog
 *  Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.rename
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsRename : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesFieldsRenameWithObject:name:]

/**
 *  Required. The name of the tag template. Example:
 *  *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField.
 *
 *  Renames a field in a tag template. The user should enable the Data Catalog
 *  API in the project identified by the `name` parameter (see [Data Catalog
 *  Resource
 *  Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
 *  for more information).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest
 *    to include in the query.
 *  @param name Required. The name of the tag template. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsRename
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a tag template.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGet : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesGetWithname:]

/**
 *  Required. The name of the tag template. Example:
 *  * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate.
 *
 *  Gets a tag template.
 *
 *  @param name Required. The name of the tag template. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. A `NOT_FOUND` error
 *  is returned if the resource does not exist. An empty policy is returned
 *  if the resource exists but does not have a policy set on it.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
 *  templates.
 *  - `datacatalog.entries.getIamPolicy` to get policies on entries.
 *  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Updates a tag template. This method cannot be used to update the fields of
 *  a template. The tag template fields are represented as separate resources
 *  and should be updated using their own create/update/delete methods.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `tag_template.name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesPatchWithObject:name:]

/**
 *  The resource name of the tag template in URL format. Example:
 *  * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *  Note that this TagTemplate and its child resources may not actually be
 *  stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The field mask specifies the parts of the template to overwrite.
 *  Allowed fields:
 *  * `display_name`
 *  If absent or empty, all of the allowed fields above will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate.
 *
 *  Updates a tag template. This method cannot be used to update the fields of
 *  a template. The tag template fields are represented as separate resources
 *  and should be updated using their own create/update/delete methods.
 *  Users should enable the Data Catalog API in the project identified by
 *  the `tag_template.name` parameter (see [Data Catalog Resource Project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
 *  more information).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate to include in the
 *    query.
 *  @param name The resource name of the tag template in URL format. Example:
 *    *
 *    projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *    Note that this TagTemplate and its child resources may not actually be
 *    stored in the location in this name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy for a resource. Replaces any existing
 *  policy.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
 *  templates.
 *  - `datacatalog.entries.setIamPolicy` to set policies on entries.
 *  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesSetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the access control policy for a resource. Replaces any existing
 *  policy.
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  Callers must have following Google IAM permission
 *  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
 *  templates.
 *  - `datacatalog.entries.setIamPolicy` to set policies on entries.
 *  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesTestIamPermissions : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTagTemplatesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns the caller's permissions on a resource.
 *  If the resource does not exist, an empty set of permissions is returned
 *  (We don't return a `NOT_FOUND` error).
 *  Supported resources are:
 *  - Tag templates.
 *  - Entries.
 *  - Entry groups.
 *  Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
 *  and any external Google Cloud Platform resources synced to Data Catalog.
 *  A caller is not required to have Google IAM permission to make this
 *  request.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a taxonomy in the specified project.
 *
 *  Method: datacatalog.projects.locations.taxonomies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesCreateWithObject:parent:]

/**
 *  Required. Resource name of the project that the taxonomy will belong to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy.
 *
 *  Creates a taxonomy in the specified project.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy
 *    to include in the query.
 *  @param parent Required. Resource name of the project that the taxonomy will
 *    belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a taxonomy. This operation will also delete all
 *  policy tags in this taxonomy along with their associated policies.
 *
 *  Method: datacatalog.projects.locations.taxonomies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesDeleteWithname:]

/**
 *  Required. Resource name of the taxonomy to be deleted. All policy tags in
 *  this taxonomy will also be deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a taxonomy. This operation will also delete all
 *  policy tags in this taxonomy along with their associated policies.
 *
 *  @param name Required. Resource name of the taxonomy to be deleted. All
 *    policy tags in
 *    this taxonomy will also be deleted.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports all taxonomies and their policy tags in a project.
 *  This method generates SerializedTaxonomy protos with nested policy tags
 *  that can be used as an input for future ImportTaxonomies calls.
 *
 *  Method: datacatalog.projects.locations.taxonomies.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesExport : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesExportWithparent:]

/**
 *  Required. Resource name of the project that taxonomies to be exported
 *  will share.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Export taxonomies as serialized taxonomies. */
@property(nonatomic, assign) BOOL serializedTaxonomies;

/** Required. Resource names of the taxonomies to be exported. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *taxonomies;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse.
 *
 *  Exports all taxonomies and their policy tags in a project.
 *  This method generates SerializedTaxonomy protos with nested policy tags
 *  that can be used as an input for future ImportTaxonomies calls.
 *
 *  @param parent Required. Resource name of the project that taxonomies to be
 *    exported
 *    will share.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesExport
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGet : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesGetWithname:]

/** Required. Resource name of the requested taxonomy. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy.
 *
 *  Gets a taxonomy.
 *
 *  @param name Required. Resource name of the requested taxonomy.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for a taxonomy or a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the IAM policy for a taxonomy or a policy tag.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Imports all taxonomies and their policy tags to a project as new
 *  taxonomies.
 *  This method provides a bulk taxonomy / policy tag creation using nested
 *  proto structure.
 *
 *  Method: datacatalog.projects.locations.taxonomies.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesImport : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesImportWithObject:parent:]

/**
 *  Required. Resource name of project that the imported taxonomies will belong
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse.
 *
 *  Imports all taxonomies and their policy tags to a project as new
 *  taxonomies.
 *  This method provides a bulk taxonomy / policy tag creation using nested
 *  proto structure.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest to
 *    include in the query.
 *  @param parent Required. Resource name of project that the imported
 *    taxonomies will belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesImport
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists all taxonomies in a project in a particular location that the caller
 *  has permission to view.
 *
 *  Method: datacatalog.projects.locations.taxonomies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesListWithparent:]

/**
 *  The maximum number of items to return. Must be a value between 1 and 1000.
 *  If not set, defaults to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any. If
 *  not set, defaults to an empty string.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Resource name of the project to list the taxonomies of. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse.
 *
 *  Lists all taxonomies in a project in a particular location that the caller
 *  has permission to view.
 *
 *  @param parent Required. Resource name of the project to list the taxonomies
 *    of.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPatchWithObject:name:]

/**
 *  Output only. Resource name of this taxonomy, whose format is:
 *  "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. For the `FieldMask` definition,
 *  see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *  If not set, defaults to all of the fields that are allowed to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy.
 *
 *  Updates a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy
 *    to include in the query.
 *  @param name Output only. Resource name of this taxonomy, whose format is:
 *    "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a policy tag in the specified taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsCreate : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsCreateWithObject:parent:]

/**
 *  Required. Resource name of the taxonomy that the policy tag will belong to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag.
 *
 *  Creates a policy tag in the specified taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag
 *    to include in the query.
 *  @param parent Required. Resource name of the taxonomy that the policy tag
 *    will belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a policy tag. Also deletes all of its descendant policy tags.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsDelete : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsDeleteWithname:]

/**
 *  Required. Resource name of the policy tag to be deleted. All of its
 *  descendant
 *  policy tags will also be deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a policy tag. Also deletes all of its descendant policy tags.
 *
 *  @param name Required. Resource name of the policy tag to be deleted. All of
 *    its descendant
 *    policy tags will also be deleted.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGet : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsGetWithname:]

/** Required. Resource name of the requested policy tag. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag.
 *
 *  Gets a policy tag.
 *
 *  @param name Required. Resource name of the requested policy tag.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for a taxonomy or a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the IAM policy for a taxonomy or a policy tag.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all policy tags in a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsList : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsListWithparent:]

/**
 *  The maximum number of items to return. Must be a value between 1 and 1000.
 *  If not set, defaults to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any. If
 *  not set, defaults to an empty string.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Resource name of the taxonomy to list the policy tags of. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse.
 *
 *  Lists all policy tags in a taxonomy.
 *
 *  @param parent Required. Resource name of the taxonomy to list the policy
 *    tags of.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsPatch : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsPatchWithObject:name:]

/**
 *  Output only. Resource name of this policy tag, whose format is:
 *  "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. Only display_name, description and
 *  parent_policy_tag can be updated and thus can be listed in the mask. If
 *  update_mask is not provided, all allowed fields (i.e. display_name,
 *  description and parent) will be updated. For more information including the
 *  `FieldMask` definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *  If not set, defaults to all of the fields that are allowed to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag.
 *
 *  Updates a policy tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag
 *    to include in the query.
 *  @param name Output only. Resource name of this policy tag, whose format is:
 *    "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy for a taxonomy or a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the IAM policy for a taxonomy or a policy tag.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns the permissions that a caller has on the specified taxonomy or
 *  policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesPolicyTagsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns the permissions that a caller has on the specified taxonomy or
 *  policy tag.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the IAM policy for a taxonomy or a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesSetIamPolicy : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the IAM policy for a taxonomy or a policy tag.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns the permissions that a caller has on the specified taxonomy or
 *  policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesTestIamPermissions : GTLRDataCatalogQuery
// Previous library name was
//   +[GTLQueryDataCatalog queryForProjectsLocationsTaxonomiesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns the permissions that a caller has on the specified taxonomy or
 *  policy tag.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
