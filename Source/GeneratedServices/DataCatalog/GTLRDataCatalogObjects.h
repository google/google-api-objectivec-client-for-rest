// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Data Catalog API (datacatalog/v1beta1)
// Description:
//   A fully managed and highly scalable data discovery and metadata management
//   service.
// Documentation:
//   https://cloud.google.com/data-catalog/docs/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDataCatalog_Binding;
@class GTLRDataCatalog_Expr;
@class GTLRDataCatalog_GetPolicyOptions;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ColumnSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumType;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFilesetSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFileSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1InlineSource;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Schema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedPolicyTag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedTaxonomy;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SystemTimestamps;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag_Fields;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagField;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagFieldEnumValue;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate_Fields;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ViewSpec;
@class GTLRDataCatalog_Policy;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec.tableSourceType

/**
 *  BigQuery materialized view.
 *
 *  Value: "BIGQUERY_MATERIALIZED_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryMaterializedView;
/**
 *  BigQuery native table.
 *
 *  Value: "BIGQUERY_TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryTable;
/**
 *  Table view.
 *
 *  Value: "BIGQUERY_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryView;
/**
 *  Default unknown type.
 *
 *  Value: "TABLE_SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_TableSourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.integratedSystem

/**
 *  BigQuery.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_Bigquery;
/**
 *  Cloud Pub/Sub.
 *
 *  Value: "CLOUD_PUBSUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_CloudPubsub;
/**
 *  Default unknown system.
 *
 *  Value: "INTEGRATED_SYSTEM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_IntegratedSystemUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry.type

/**
 *  Output only. An entry type which is used for streaming entries. Example:
 *  Pub/Sub topic.
 *
 *  Value: "DATA_STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_DataStream;
/**
 *  Default unknown type.
 *
 *  Value: "ENTRY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_EntryTypeUnspecified;
/**
 *  An entry type which is a set of files or objects. Example: Cloud Storage
 *  fileset.
 *
 *  Value: "FILESET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Fileset;
/**
 *  Output only. The type of models.
 *  https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
 *
 *  Value: "MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Model;
/**
 *  Output only. The type of entry that has a GoogleSQL schema, including
 *  logical views.
 *
 *  Value: "TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Table;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType.primitiveType

/**
 *  A boolean value.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Bool;
/**
 *  A double precision number.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Double;
/**
 *  This is the default invalid value for a type.
 *
 *  Value: "PRIMITIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_PrimitiveTypeUnspecified;
/**
 *  An UTF-8 string.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_String;
/**
 *  A timestamp.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Timestamp;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult.searchResultType

/**
 *  An Entry.
 *
 *  Value: "ENTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_Entry;
/**
 *  An EntryGroup.
 *
 *  Value: "ENTRY_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_EntryGroup;
/**
 *  Default unknown type.
 *
 *  Value: "SEARCH_RESULT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_SearchResultTypeUnspecified;
/**
 *  A TagTemplate.
 *
 *  Value: "TAG_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_TagTemplate;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy.activatedPolicyTypes

/**
 *  Fine grained access control policy, which enables access control on tagged
 *  resources.
 *
 *  Value: "FINE_GRAINED_ACCESS_CONTROL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy_ActivatedPolicyTypes_FineGrainedAccessControl;
/**
 *  Unspecified policy type.
 *
 *  Value: "POLICY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy_ActivatedPolicyTypes_PolicyTypeUnspecified;

/**
 *  Associates `members` with a `role`.
 */
@interface GTLRDataCatalog_Binding : GTLRObject

/**
 *  A client-specified ID for this binding. Expected to be globally unique to
 *  support the internal bindings-by-ID API.
 */
@property(nonatomic, copy, nullable) NSString *bindingId;

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the members in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_Expr *condition;

/**
 *  Specifies the identities requesting access for a Cloud Platform resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. *
 *  `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@example.com` . * `serviceAccount:{emailid}`:
 *  An email address that represents a service account. For example,
 *  `my-other-app\@appspot.gserviceaccount.com`. * `group:{emailid}`: An email
 *  address that represents a Google group. For example, `admins\@example.com`.
 *  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to `members`. For example, `roles/viewer`,
 *  `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
 *  representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRDataCatalog_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRDataCatalog_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRDataCatalog_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRDataCatalog_GetPolicyOptions : GTLRObject

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`.
 *  Context:
 *  https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec : GTLRObject

/**
 *  Output only. The Data Catalog resource name of the dataset entry the current
 *  table belongs to, for example,
 *  `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Output only. Total number of shards.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardCount;

/**
 *  Output only. The table name prefix of the shards. The name of any given
 *  shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`,
 *  the `table_prefix` is `MyTable`.
 */
@property(nonatomic, copy, nullable) NSString *tablePrefix;

@end


/**
 *  Describes a BigQuery table.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec : GTLRObject

/**
 *  Output only. The table source type.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryMaterializedView
 *        BigQuery materialized view. (Value: "BIGQUERY_MATERIALIZED_VIEW")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryTable
 *        BigQuery native table. (Value: "BIGQUERY_TABLE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_BigqueryView
 *        Table view. (Value: "BIGQUERY_VIEW")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec_TableSourceType_TableSourceTypeUnspecified
 *        Default unknown type. (Value: "TABLE_SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *tableSourceType;

/**
 *  Spec of a BigQuery table. This field should only be populated if
 *  `table_source_type` is `BIGQUERY_TABLE`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TableSpec *tableSpec;

/**
 *  Table view specification. This field should only be populated if
 *  `table_source_type` is `BIGQUERY_VIEW`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ViewSpec *viewSpec;

@end


/**
 *  Representation of a column within a schema. Columns could be nested inside
 *  other columns.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ColumnSchema : GTLRObject

/** Required. Name of the column. */
@property(nonatomic, copy, nullable) NSString *column;

/**
 *  Optional. Description of the column. Default value is an empty string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. A column's mode indicates whether the values in this column are
 *  required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are
 *  supported. Default mode is `NULLABLE`.
 */
@property(nonatomic, copy, nullable) NSString *mode;

/**
 *  Optional. Schema of sub-columns. A column can have zero or more sub-columns.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ColumnSchema *> *subcolumns;

/** Required. Type of the column. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Entry Metadata. A Data Catalog Entry resource represents another resource in
 *  Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or
 *  outside of Google Cloud Platform. Clients can use the `linked_resource`
 *  field in the Entry resource to refer to the original resource ID of the
 *  source system. An Entry resource contains resource details, such as its
 *  schema. An Entry can also be used to attach flexible metadata, such as a
 *  Tag.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry : GTLRObject

/**
 *  Specification for a group of BigQuery tables with name pattern
 *  `[prefix]YYYYMMDD`. Context:
 *  https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec *bigqueryDateShardedSpec;

/**
 *  Specification that applies to a BigQuery table. This is only valid on
 *  entries of type `TABLE`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1BigQueryTableSpec *bigqueryTableSpec;

/**
 *  Entry description, which can consist of several sentences or paragraphs that
 *  describe entry contents. Default value is an empty string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Display information such as title and description. A short name to identify
 *  the entry, for example, "Analytics Data - Jan 2011". Default value is an
 *  empty string.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Specification that applies to a Cloud Storage fileset. This is only valid on
 *  entries of type FILESET.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFilesetSpec *gcsFilesetSpec;

/**
 *  Output only. This field indicates the entry's source system that Data
 *  Catalog integrates with, such as BigQuery or Pub/Sub.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_Bigquery
 *        BigQuery. (Value: "BIGQUERY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_CloudPubsub
 *        Cloud Pub/Sub. (Value: "CLOUD_PUBSUB")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_IntegratedSystem_IntegratedSystemUnspecified
 *        Default unknown system. (Value: "INTEGRATED_SYSTEM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *integratedSystem;

/**
 *  The resource this metadata entry refers to. For Google Cloud Platform
 *  resources, `linked_resource` is the [full name of the
 *  resource](https://cloud.google.com/apis/design/resource_names#full_resource_name).
 *  For example, the `linked_resource` for a table resource from BigQuery is: *
 *  //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
 *  Output only when Entry is of type in the EntryType enum. For entries with
 *  user_specified_type, this field is optional and defaults to an empty string.
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/**
 *  The Data Catalog resource name of the entry in URL format. Example: *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
 *  Note that this Entry and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Schema of the entry. An entry might not have any schema attached to it. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Schema *schema;

/**
 *  Output only. Timestamps about the underlying resource, not about this Data
 *  Catalog entry. Output only when Entry is of type in the EntryType enum. For
 *  entries with user_specified_type, this field is optional and defaults to an
 *  empty timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SystemTimestamps *sourceSystemTimestamps;

/**
 *  The type of the entry. Only used for Entries with types in the EntryType
 *  enum.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_DataStream
 *        Output only. An entry type which is used for streaming entries.
 *        Example: Pub/Sub topic. (Value: "DATA_STREAM")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_EntryTypeUnspecified
 *        Default unknown type. (Value: "ENTRY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Fileset
 *        An entry type which is a set of files or objects. Example: Cloud
 *        Storage fileset. (Value: "FILESET")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Model
 *        Output only. The type of models.
 *        https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro (Value:
 *        "MODEL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry_Type_Table
 *        Output only. The type of entry that has a GoogleSQL schema, including
 *        logical views. (Value: "TABLE")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  This field indicates the entry's source system that Data Catalog does not
 *  integrate with. `user_specified_system` strings must begin with a letter or
 *  underscore and can only contain letters, numbers, and underscores; are case
 *  insensitive; must be at least 1 character and at most 64 characters long.
 */
@property(nonatomic, copy, nullable) NSString *userSpecifiedSystem;

/**
 *  Entry type if it does not fit any of the input-allowed values listed in
 *  `EntryType` enum above. When creating an entry, users should check the enum
 *  values first, if nothing matches the entry to be created, then provide a
 *  custom value, for example "my_special_type". `user_specified_type` strings
 *  must begin with a letter or underscore and can only contain letters,
 *  numbers, and underscores; are case insensitive; must be at least 1 character
 *  and at most 64 characters long. Currently, only FILESET enum value is
 *  allowed. All other entries created through Data Catalog must use
 *  `user_specified_type`.
 */
@property(nonatomic, copy, nullable) NSString *userSpecifiedType;

@end


/**
 *  EntryGroup Metadata. An EntryGroup resource represents a logical grouping of
 *  zero or more Data Catalog Entry resources.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup : GTLRObject

/**
 *  Output only. Timestamps about this EntryGroup. Default value is empty
 *  timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SystemTimestamps *dataCatalogTimestamps;

/**
 *  Entry group description, which can consist of several sentences or
 *  paragraphs that describe entry group contents. Default value is an empty
 *  string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A short name to identify the entry group, for example, "analytics data - jan
 *  2011". Default value is an empty string.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The resource name of the entry group in URL format. Example: *
 *  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note
 *  that this EntryGroup and its child resources may not actually be stored in
 *  the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Response message for ExportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse : GTLRObject

/** List of taxonomies and policy tags in a tree structure. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedTaxonomy *> *taxonomies;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType : GTLRObject

/** Represents an enum type. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumType *enumType;

/**
 *  Represents primitive types - string, bool etc.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Bool
 *        A boolean value. (Value: "BOOL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Double
 *        A double precision number. (Value: "DOUBLE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_PrimitiveTypeUnspecified
 *        This is the default invalid value for a type. (Value:
 *        "PRIMITIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_String
 *        An UTF-8 string. (Value: "STRING")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType_PrimitiveType_Timestamp
 *        A timestamp. (Value: "TIMESTAMP")
 */
@property(nonatomic, copy, nullable) NSString *primitiveType;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumType
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumType : GTLRObject

/**
 *  The set of allowed values for this enum. This set must not be empty, the
 *  display names of the values in this set must not be empty and the display
 *  names of the values must be case-insensitively unique within this set. The
 *  order of items in this list is preserved. This field can be used to Required
 *  on create; optional on update. The set of allowed values for this enum. This
 *  set must not be empty, the display names of the values in this set must not
 *  be empty and the display names of the values must be case-insensitively
 *  unique within this set. Currently, enum values can only be added to the list
 *  of allowed values. Deletion and renaming of enum values are not supported.
 *  Can have up to 500 allowed values.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue *> *allowedValues;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue : GTLRObject

/**
 *  Required. The display name of the enum value. Must not be an empty string.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Describes a Cloud Storage fileset entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFilesetSpec : GTLRObject

/**
 *  Required. Patterns to identify a set of files in Google Cloud Storage. See
 *  [Cloud Storage
 *  documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
 *  for more information. Note that bucket wildcards are currently not
 *  supported. Examples of valid file_patterns: * `gs://bucket_name/dir/ *`:
 *  matches all files within `bucket_name/dir` directory. *
 *  `gs://bucket_name/dir/ **`: matches all files in `bucket_name/dir` spanning
 *  all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by
 *  `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two
 *  characters followed by `.txt` in `bucket_name` *
 *  `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel
 *  character followed by `.txt` in `bucket_name` *
 *  `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or
 *  `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/ * /b`:
 *  matches all files in `bucket_name` that match `a/ * /b` pattern, such as
 *  `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches
 *  `gs://another_bucket/a.txt` You can combine wildcards to provide more
 *  powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filePatterns;

/**
 *  Output only. Sample files contained in this fileset, not all files contained
 *  in this fileset are represented here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFileSpec *> *sampleGcsFileSpecs;

@end


/**
 *  Specifications of a single file in Cloud Storage.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1GcsFileSpec : GTLRObject

/** Required. The full file path. Example: `gs://bucket_name/a/b.txt`. */
@property(nonatomic, copy, nullable) NSString *filePath;

/** Output only. Timestamps about the Cloud Storage file. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SystemTimestamps *gcsTimestamps;

/**
 *  Output only. The size of the file, in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

@end


/**
 *  Request message for ImportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest : GTLRObject

/** Inline source used for taxonomies to be imported. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1InlineSource *inlineSource;

@end


/**
 *  Response message for ImportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse : GTLRObject

/** Taxonomies that were imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy *> *taxonomies;

@end


/**
 *  Inline source used for taxonomies import.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1InlineSource : GTLRObject

/** Required. Taxonomies to be imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedTaxonomy *> *taxonomies;

@end


/**
 *  Response message for ListEntries.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entries" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListEntriesResponse : GTLRCollectionObject

/**
 *  Entry details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Entry *> *entries;

/**
 *  Token to retrieve the next page of results. It is set to empty if no items
 *  remain in results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListEntryGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entryGroups" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse : GTLRCollectionObject

/**
 *  EntryGroup details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1EntryGroup *> *entryGroups;

/**
 *  Token to retrieve the next page of results. It is set to empty if no items
 *  remain in results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListPolicyTags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "policyTags" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse : GTLRCollectionObject

/**
 *  Token used to retrieve the next page of results, or empty if there are no
 *  more results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The policy tags that are in the requested taxonomy.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag *> *policyTags;

@end


/**
 *  Response message for ListTags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tags" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListTagsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results. It is set to empty if no items
 *  remain in results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Tag details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag *> *tags;

@end


/**
 *  Response message for ListTaxonomies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "taxonomies" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse : GTLRCollectionObject

/**
 *  Token used to retrieve the next page of results, or empty if there are no
 *  more results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Taxonomies that the project contains.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy *> *taxonomies;

@end


/**
 *  Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined
 *  in a hierarchy. For example, consider the following hierarchy: Geolocation
 *  -> (LatLong, City, ZipCode). PolicyTag "Geolocation" contains three child
 *  policy tags: "LatLong", "City", and "ZipCode".
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1PolicyTag : GTLRObject

/** Output only. Resource names of child policy tags of this policy tag. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *childPolicyTags;

/**
 *  Description of this policy tag. It must: contain only unicode characters,
 *  tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes
 *  long when encoded in UTF-8. If not set, defaults to an empty description. If
 *  not set, defaults to an empty description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User defined name of this policy tag. It must: be unique within
 *  the parent taxonomy; contain only unicode letters, numbers, underscores,
 *  dashes and spaces; not start or end with spaces; and be at most 200 bytes
 *  long when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Resource name of this policy tag, whose format is:
 *  "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Resource name of this policy tag's parent policy tag (e.g. for the "LatLong"
 *  policy tag in the example above, this field contains the resource name of
 *  the "Geolocation" policy tag). If empty, it means this policy tag is a top
 *  level policy tag (e.g. this field is empty for the "Geolocation" policy tag
 *  in the example above). If not set, defaults to an empty string.
 */
@property(nonatomic, copy, nullable) NSString *parentPolicyTag;

@end


/**
 *  Request message for RenameTagTemplateFieldEnumValue.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest : GTLRObject

/**
 *  Required. The new display name of the enum value. For example,
 *  `my_new_enum_value`.
 */
@property(nonatomic, copy, nullable) NSString *newEnumValueDisplayName NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Request message for RenameTagTemplateField.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest : GTLRObject

/**
 *  Required. The new ID of this tag template field. For example,
 *  `my_new_field`.
 */
@property(nonatomic, copy, nullable) NSString *newTagTemplateFieldId NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Schema : GTLRObject

/**
 *  Required. Schema of columns. A maximum of 10,000 columns and sub-columns can
 *  be specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ColumnSchema *> *columns;

@end


/**
 *  Request message for SearchCatalog.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequest : GTLRObject

/**
 *  Specifies the ordering of results, currently supported case-sensitive
 *  choices are: * `relevance`, only supports descending *
 *  `last_modified_timestamp [asc|desc]`, defaults to descending if not
 *  specified If not specified, defaults to `relevance` descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Number of results in the search page. If <=0 then defaults to 10. Max limit
 *  for page_size is 1000. Throws an invalid argument for page_size > 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Optional. Pagination token returned in an earlier
 *  SearchCatalogResponse.next_page_token, which indicates that this is a
 *  continuation of a prior SearchCatalogRequest call, and that the system
 *  should return the next page of data. If empty, the first page is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The query string in search query syntax. An empty query string
 *  will result in all data assets (in the specified scope) that the user has
 *  access to. Query strings can be simple as "x" or more qualified as: * name:x
 *  * column:x * description:y Note: Query tokens need to have a minimum of 3
 *  characters for substring matching to work correctly. See [Data Catalog
 *  Search
 *  Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required. The scope of this search request. A `scope` that has empty
 *  `include_org_ids`, `include_project_ids` AND false
 *  `include_gcp_public_datasets` is considered invalid. Data Catalog will
 *  return an error in such a case.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope *scope;

@end


/**
 *  The criteria that select the subspace used for query matching.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope : GTLRObject

/**
 *  If `true`, include Google Cloud Platform (GCP) public datasets in the search
 *  results. Info on GCP public datasets is available at
 *  https://cloud.google.com/public-datasets/. By default, GCP public datasets
 *  are excluded.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeGcpPublicDatasets;

/**
 *  The list of organization IDs to search within. To find your organization ID,
 *  follow instructions in
 *  https://cloud.google.com/resource-manager/docs/creating-managing-organization.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeOrgIds;

/**
 *  The list of project IDs to search within. To learn more about the
 *  distinction between project names/IDs/numbers, go to
 *  https://cloud.google.com/docs/overview/#projects.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeProjectIds;

/**
 *  Optional. The list of locations to search within. 1. If empty, search will
 *  be performed in all locations; 2. If any of the locations are NOT in the
 *  valid locations list, error will be returned; 3. Otherwise, search only the
 *  given locations for matching results. Typical usage is to leave this field
 *  empty. When a location is unreachable as returned in the
 *  `SearchCatalogResponse.unreachable` field, users can repeat the search
 *  request with this parameter set to get additional information on the error.
 *  Valid locations: * asia-east1 * asia-east2 * asia-northeast1 *
 *  asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 *
 *  australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 *
 *  europe-west3 * europe-west4 * europe-west6 * global *
 *  northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 *
 *  us-east4 * us-west1 * us-west2
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedLocations;

@end


/**
 *  Response message for SearchCatalog.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "results" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResponse : GTLRCollectionObject

/** The token that can be used to retrieve the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Search results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult *> *results;

/**
 *  Unreachable locations. Search result does not include data from those
 *  locations. Users can get additional information on the error by repeating
 *  the search request with a more restrictive parameter -- setting the value
 *  for `SearchDataCatalogRequest.scope.include_locations`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A result that appears in the response of a search request. Each result
 *  captures details of one entry that matches the search.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult : GTLRObject

/**
 *  The full name of the cloud resource the entry belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name.
 *  Example: *
 *  `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/**
 *  The relative resource name of the resource in URL format. Examples: *
 *  `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}`
 *  * `projects/{project_id}/tagTemplates/{tag_template_id}`
 */
@property(nonatomic, copy, nullable) NSString *relativeResourceName;

/**
 *  Sub-type of the search result. This is a dot-delimited description of the
 *  resource's full type, and is the same as the value callers would provide in
 *  the "type" search facet. Examples: `entry.table`, `entry.dataStream`,
 *  `tagTemplate`.
 */
@property(nonatomic, copy, nullable) NSString *searchResultSubtype;

/**
 *  Type of the search result. This field can be used to determine which Get
 *  method to call to fetch the full resource.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_Entry
 *        An Entry. (Value: "ENTRY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_EntryGroup
 *        An EntryGroup. (Value: "ENTRY_GROUP")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_SearchResultTypeUnspecified
 *        Default unknown type. (Value: "SEARCH_RESULT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1beta1SearchCatalogResult_SearchResultType_TagTemplate
 *        A TagTemplate. (Value: "TAG_TEMPLATE")
 */
@property(nonatomic, copy, nullable) NSString *searchResultType;

@end


/**
 *  Message representing one policy tag when exported as a nested proto.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedPolicyTag : GTLRObject

/** Children of the policy tag if any. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedPolicyTag *> *childPolicyTags;

/**
 *  Description of the serialized policy tag. The length of the description is
 *  limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an
 *  empty description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Display name of the policy tag. Max 200 bytes when encoded in
 *  UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Resource name of the policy tag. This field will be ignored when calling
 *  ImportTaxonomies.
 */
@property(nonatomic, copy, nullable) NSString *policyTag;

@end


/**
 *  Message capturing a taxonomy and its policy tag hierarchy as a nested proto.
 *  Used for taxonomy import/export and mutation.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedTaxonomy : GTLRObject

/**
 *  Description of the serialized taxonomy. The length of the description is
 *  limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an
 *  empty description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Top level policy tags associated with the taxonomy if any. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SerializedPolicyTag *> *policyTags;

@end


/**
 *  Timestamps about this resource according to a particular system.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1SystemTimestamps : GTLRObject

/** The creation time of the resource within the given system. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The expiration time of the resource within the given system.
 *  Currently only apllicable to BigQuery resources.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/** The last-modified time of the resource within the given system. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Normal BigQuery table spec.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TableSpec : GTLRObject

/**
 *  Output only. If the table is a dated shard, i.e., with name pattern
 *  `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the
 *  date sharded grouped entry, for example,
 *  `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
 *  Otherwise, `grouped_entry` is empty.
 */
@property(nonatomic, copy, nullable) NSString *groupedEntry;

@end


/**
 *  Tags are used to attach custom metadata to Data Catalog resources. Tags
 *  conform to the specifications within their tag template. See [Data Catalog
 *  IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for
 *  information on the permissions needed to create or view tags.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag : GTLRObject

/**
 *  Resources like Entry can have schemas associated with them. This scope
 *  allows users to attach tags to an individual column based on that schema.
 *  For attaching a tag to a nested column, use `.` to separate the column
 *  names. Example: * `outer_column.inner_column`
 */
@property(nonatomic, copy, nullable) NSString *column;

/**
 *  Required. This maps the ID of a tag field to the value of and additional
 *  information about that field. Valid field IDs are defined by the tag's
 *  template. A tag must have at least 1 field and at most 500 fields.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag_Fields *fields;

/**
 *  The resource name of the tag in URL format. Example: *
 *  projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
 *  where `tag_id` is a system-generated identifier. Note that this Tag may not
 *  actually be stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The resource name of the tag template that this tag uses. Example:
 *  * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *  This field cannot be modified after creation.
 *
 *  Remapped to 'templateProperty' to avoid language reserved word 'template'.
 */
@property(nonatomic, copy, nullable) NSString *templateProperty;

/** Output only. The display name of the tag template. */
@property(nonatomic, copy, nullable) NSString *templateDisplayName;

@end


/**
 *  Required. This maps the ID of a tag field to the value of and additional
 *  information about that field. Valid field IDs are defined by the tag's
 *  template. A tag must have at least 1 field and at most 500 fields.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagField. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Tag_Fields : GTLRObject
@end


/**
 *  Contains the value and supporting information for a field within a Tag.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagField : GTLRObject

/**
 *  Holds the value for a tag field with boolean type.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/** Output only. The display name of this field. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Holds the value for a tag field with double type.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  Holds the value for a tag field with enum type. This value must be one of
 *  the allowed values in the definition of this enum.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagFieldEnumValue *enumValue;

/**
 *  Output only. The order of this field with respect to other fields in this
 *  tag. It can be set in Tag. For example, a higher value can indicate a more
 *  important field. The value can be negative. Multiple fields can have the
 *  same order, and field orders within a tag do not have to be sequential.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *order;

/** Holds the value for a tag field with string type. */
@property(nonatomic, copy, nullable) NSString *stringValue;

/** Holds the value for a tag field with timestamp type. */
@property(nonatomic, strong, nullable) GTLRDateTime *timestampValue;

@end


/**
 *  Holds an enum value.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagFieldEnumValue : GTLRObject

/** The display name of the enum value. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  A tag template defines a tag, which can have one or more typed fields. The
 *  template is used to create and attach the tag to GCP resources. [Tag
 *  template
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles)
 *  provide permissions to create, edit, and use the template. See, for example,
 *  the [TagTemplate
 *  User](https://cloud.google.com/data-catalog/docs/how-to/template-user) role,
 *  which includes permission to use the tag template to tag resources.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate : GTLRObject

/** The display name for this template. Defaults to an empty string. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Map of tag template field IDs to the settings for the field. This
 *  map is an exhaustive list of the allowed fields. This map must contain at
 *  least one field and at most 500 fields. The keys to this map are tag
 *  template field IDs. Field IDs can contain letters (both uppercase and
 *  lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1
 *  character long and at most 64 characters long. Field IDs must start with a
 *  letter or underscore.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate_Fields *fields;

/**
 *  The resource name of the tag template in URL format. Example: *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
 *  Note that this TagTemplate and its child resources may not actually be
 *  stored in the location in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Required. Map of tag template field IDs to the settings for the field. This
 *  map is an exhaustive list of the allowed fields. This map must contain at
 *  least one field and at most 500 fields. The keys to this map are tag
 *  template field IDs. Field IDs can contain letters (both uppercase and
 *  lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1
 *  character long and at most 64 characters long. Field IDs must start with a
 *  letter or underscore.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplate_Fields : GTLRObject
@end


/**
 *  The template for an individual field within a tag template.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1TagTemplateField : GTLRObject

/** The display name for this field. Defaults to an empty string. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Whether this is a required field. Defaults to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRequired;

/**
 *  Output only. The resource name of the tag template field in URL format.
 *  Example: *
 *  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}
 *  Note that this TagTemplateField may not actually be stored in the location
 *  in this name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The order of this field with respect to other fields in this tag template. A
 *  higher value indicates a more important field. The value can be negative.
 *  Multiple fields can have the same order, and field orders within a tag do
 *  not have to be sequential.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *order;

/** Required. The type of value this tag field can contain. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1beta1FieldType *type;

@end


/**
 *  A taxonomy is a collection of policy tags that classify data along a common
 *  axis. For instance a data *sensitivity* taxonomy could contain policy tags
 *  denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could
 *  contain policy tags to distinguish user data, employee data, partner data,
 *  public data.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1Taxonomy : GTLRObject

/**
 *  Optional. A list of policy types that are activated for this taxonomy. If
 *  not set, defaults to an empty list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *activatedPolicyTypes;

/**
 *  Optional. Description of this taxonomy. It must: contain only unicode
 *  characters, tabs, newlines, carriage returns and page breaks; and be at most
 *  2000 bytes long when encoded in UTF-8. If not set, defaults to an empty
 *  description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User defined name of this taxonomy. It must: contain only unicode
 *  letters, numbers, underscores, dashes and spaces; not start or end with
 *  spaces; and be at most 200 bytes long when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Resource name of this taxonomy, whose format is:
 *  "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Table view specification.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1beta1ViewSpec : GTLRObject

/** Output only. The query that defines the table view. */
@property(nonatomic, copy, nullable) NSString *viewQuery;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members` to a single `role`.
 *  Members can be user accounts, service accounts, Google groups, and domains
 *  (such as G Suite). A `role` is a named list of permissions; each `role` can
 *  be an IAM predefined role or a user-created custom role. For some types of
 *  Google Cloud resources, a `binding` can also specify a `condition`, which is
 *  a logical expression that allows access to a resource only if the expression
 *  evaluates to `true`. A condition can add constraints based on attributes of
 *  the request, the resource, or both. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= -
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRDataCatalog_Policy : GTLRObject

/**
 *  Associates a list of `members` to a `role`. Optionally, may specify a
 *  `condition` that determines how and when the `bindings` are applied. Each of
 *  the `bindings` must contain at least one member.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRDataCatalog_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Cloud Platform services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_Policy *policy;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRDataCatalog_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRDataCatalog_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
