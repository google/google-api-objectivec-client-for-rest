// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   DLP API (dlp/v2beta1)
// Description:
//   The Google Data Loss Prevention API provides methods for detection of
//   privacy-sensitive fragments in text, images, and Google Cloud Platform
//   storage repositories.
// Documentation:
//   https://cloud.google.com/dlp/docs/

#import "GTLRDLPObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRDLP_Finding.likelihood
NSString * const kGTLRDLP_Finding_Likelihood_LikelihoodUnspecified = @"LIKELIHOOD_UNSPECIFIED";
NSString * const kGTLRDLP_Finding_Likelihood_Likely            = @"LIKELY";
NSString * const kGTLRDLP_Finding_Likelihood_Possible          = @"POSSIBLE";
NSString * const kGTLRDLP_Finding_Likelihood_Unlikely          = @"UNLIKELY";
NSString * const kGTLRDLP_Finding_Likelihood_VeryLikely        = @"VERY_LIKELY";
NSString * const kGTLRDLP_Finding_Likelihood_VeryUnlikely      = @"VERY_UNLIKELY";

// GTLRDLP_InspectConfig.minLikelihood
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_LikelihoodUnspecified = @"LIKELIHOOD_UNSPECIFIED";
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_Likely   = @"LIKELY";
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_Possible = @"POSSIBLE";
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_Unlikely = @"UNLIKELY";
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_VeryLikely = @"VERY_LIKELY";
NSString * const kGTLRDLP_InspectConfig_MinLikelihood_VeryUnlikely = @"VERY_UNLIKELY";

// ----------------------------------------------------------------------------
//
//   GTLRDLP_CancelOperationRequest
//

@implementation GTLRDLP_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_CategoryDescription
//

@implementation GTLRDLP_CategoryDescription
@dynamic displayName, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_CloudStorageKey
//

@implementation GTLRDLP_CloudStorageKey
@dynamic filePath, startOffset;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_CloudStorageOptions
//

@implementation GTLRDLP_CloudStorageOptions
@dynamic fileSet;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ContentItem
//

@implementation GTLRDLP_ContentItem
@dynamic data, type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_CreateInspectOperationRequest
//

@implementation GTLRDLP_CreateInspectOperationRequest
@dynamic inspectConfig, storageConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_DatastoreKey
//

@implementation GTLRDLP_DatastoreKey
@dynamic entityKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_DatastoreOptions
//

@implementation GTLRDLP_DatastoreOptions
@dynamic kind, partitionId, projection;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"projection" : [GTLRDLP_Projection class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Empty
//

@implementation GTLRDLP_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_FieldId
//

@implementation GTLRDLP_FieldId
@dynamic columnName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_FileSet
//

@implementation GTLRDLP_FileSet
@dynamic url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Finding
//

@implementation GTLRDLP_Finding
@dynamic createTime, infoType, likelihood, location, quote;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ImageLocation
//

@implementation GTLRDLP_ImageLocation
@dynamic height, left, top, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InfoType
//

@implementation GTLRDLP_InfoType
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InfoTypeDescription
//

@implementation GTLRDLP_InfoTypeDescription
@dynamic categories, displayName, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [GTLRDLP_CategoryDescription class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InspectConfig
//

@implementation GTLRDLP_InspectConfig
@dynamic excludeTypes, includeQuote, infoTypes, maxFindings, minLikelihood;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"infoTypes" : [GTLRDLP_InfoType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InspectContentRequest
//

@implementation GTLRDLP_InspectContentRequest
@dynamic inspectConfig, items;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRDLP_ContentItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InspectContentResponse
//

@implementation GTLRDLP_InspectContentResponse
@dynamic results;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"results" : [GTLRDLP_InspectResult class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_InspectResult
//

@implementation GTLRDLP_InspectResult
@dynamic findings, findingsTruncated;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"findings" : [GTLRDLP_Finding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Key
//

@implementation GTLRDLP_Key
@dynamic partitionId, path;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"path" : [GTLRDLP_PathElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_KindExpression
//

@implementation GTLRDLP_KindExpression
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ListInfoTypesResponse
//

@implementation GTLRDLP_ListInfoTypesResponse
@dynamic infoTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"infoTypes" : [GTLRDLP_InfoTypeDescription class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ListInspectFindingsResponse
//

@implementation GTLRDLP_ListInspectFindingsResponse
@dynamic nextPageToken, result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ListOperationsResponse
//

@implementation GTLRDLP_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDLP_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ListRootCategoriesResponse
//

@implementation GTLRDLP_ListRootCategoriesResponse
@dynamic categories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [GTLRDLP_CategoryDescription class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Location
//

@implementation GTLRDLP_Location
@dynamic byteRange, codepointRange, fieldId, imageBoxes, recordKey;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageBoxes" : [GTLRDLP_ImageLocation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Operation
//

@implementation GTLRDLP_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Operation_Metadata
//

@implementation GTLRDLP_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Operation_Response
//

@implementation GTLRDLP_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_PartitionId
//

@implementation GTLRDLP_PartitionId
@dynamic databaseId, namespaceId, projectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_PathElement
//

@implementation GTLRDLP_PathElement
@dynamic identifier, kind, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Projection
//

@implementation GTLRDLP_Projection
@dynamic property;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_PropertyReference
//

@implementation GTLRDLP_PropertyReference
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Range
//

@implementation GTLRDLP_Range
@dynamic end, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_RecordKey
//

@implementation GTLRDLP_RecordKey
@dynamic cloudStorageKey, datastoreKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_RedactContentRequest
//

@implementation GTLRDLP_RedactContentRequest
@dynamic inspectConfig, items, replaceConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRDLP_ContentItem class],
    @"replaceConfigs" : [GTLRDLP_ReplaceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_RedactContentResponse
//

@implementation GTLRDLP_RedactContentResponse
@dynamic items;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRDLP_ContentItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_ReplaceConfig
//

@implementation GTLRDLP_ReplaceConfig
@dynamic infoType, replaceWith;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Status
//

@implementation GTLRDLP_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDLP_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_Status_Details_Item
//

@implementation GTLRDLP_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDLP_StorageConfig
//

@implementation GTLRDLP_StorageConfig
@dynamic cloudStorageOptions, datastoreOptions;
@end
