// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   DLP API (dlp/v2beta1)
// Description:
//   The Google Data Loss Prevention API provides methods for detection of
//   privacy-sensitive fragments in text, images, and Google Cloud Platform
//   storage repositories.
// Documentation:
//   https://cloud.google.com/dlp/docs/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDLP_CancelOperationRequest;
@class GTLRDLP_CreateInspectOperationRequest;
@class GTLRDLP_InspectContentRequest;
@class GTLRDLP_RedactContentRequest;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other DLP query classes.
 */
@interface GTLRDLPQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Find potentially sensitive info in a list of strings.
 *  This method has limits on input size, processing time, and output size.
 *
 *  Method: dlp.content.inspect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_ContentInspect : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForContentInspectWithObject:]

/**
 *  Fetches a @c GTLRDLP_InspectContentResponse.
 *
 *  Find potentially sensitive info in a list of strings.
 *  This method has limits on input size, processing time, and output size.
 *
 *  @param object The @c GTLRDLP_InspectContentRequest to include in the query.
 *
 *  @returns GTLRDLPQuery_ContentInspect
 */
+ (instancetype)queryWithObject:(GTLRDLP_InspectContentRequest *)object;

@end

/**
 *  Redact potentially sensitive info from a list of strings.
 *  This method has limits on input size, processing time, and output size.
 *
 *  Method: dlp.content.redact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_ContentRedact : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForContentRedactWithObject:]

/**
 *  Fetches a @c GTLRDLP_RedactContentResponse.
 *
 *  Redact potentially sensitive info from a list of strings.
 *  This method has limits on input size, processing time, and output size.
 *
 *  @param object The @c GTLRDLP_RedactContentRequest to include in the query.
 *
 *  @returns GTLRDLPQuery_ContentRedact
 */
+ (instancetype)queryWithObject:(GTLRDLP_RedactContentRequest *)object;

@end

/**
 *  Cancels an operation. Use the get method to check whether the cancellation
 *  succeeded or whether the operation completed despite cancellation.
 *
 *  Method: dlp.inspect.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectOperationsCancel : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDLP_Empty.
 *
 *  Cancels an operation. Use the get method to check whether the cancellation
 *  succeeded or whether the operation completed despite cancellation.
 *
 *  @param object The @c GTLRDLP_CancelOperationRequest to include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @returns GTLRDLPQuery_InspectOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRDLP_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Schedule a job scanning content in a Google Cloud Platform data repository.
 *
 *  Method: dlp.inspect.operations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectOperationsCreate : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectOperationsCreateWithObject:]

/**
 *  Fetches a @c GTLRDLP_Operation.
 *
 *  Schedule a job scanning content in a Google Cloud Platform data repository.
 *
 *  @param object The @c GTLRDLP_CreateInspectOperationRequest to include in the
 *    query.
 *
 *  @returns GTLRDLPQuery_InspectOperationsCreate
 */
+ (instancetype)queryWithObject:(GTLRDLP_CreateInspectOperationRequest *)object;

@end

/**
 *  This method is not supported and the server returns `UNIMPLEMENTED`.
 *
 *  Method: dlp.inspect.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectOperationsDelete : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDLP_Empty.
 *
 *  This method is not supported and the server returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @returns GTLRDLPQuery_InspectOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: dlp.inspect.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectOperationsGet : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDLP_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @returns GTLRDLPQuery_InspectOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding below allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`.
 *
 *  Method: dlp.inspect.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectOperationsList : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectOperationsListWithname:]

/** This parameter supports filtering by done, ie done=true or done=false. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation collection. */
@property(nonatomic, copy, nullable) NSString *name;

/** The list page size. The max allowed value is 256 and default is 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDLP_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding below allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`.
 *
 *  @param name The name of the operation collection.
 *
 *  @returns GTLRDLPQuery_InspectOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns list of results for given inspect operation result set id.
 *
 *  Method: dlp.inspect.results.findings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_InspectResultsFindingsList : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForInspectResultsFindingsListWithname:]

/**
 *  Identifier of the results set returned as metadata of
 *  the longrunning operation created by a call to CreateInspectOperation.
 *  Should be in the format of `inspect/results/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Maximum number of results to return.
 *  If 0, the implementation will select a reasonable value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListInspectFindingsResponse`; indicates
 *  that this is a continuation of a prior `ListInspectFindings` call, and that
 *  the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDLP_ListInspectFindingsResponse.
 *
 *  Returns list of results for given inspect operation result set id.
 *
 *  @param name Identifier of the results set returned as metadata of
 *    the longrunning operation created by a call to CreateInspectOperation.
 *    Should be in the format of `inspect/results/{id}.
 *
 *  @returns GTLRDLPQuery_InspectResultsFindingsList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns sensitive information types for given category.
 *
 *  Method: dlp.rootCategories.infoTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_RootCategoriesInfoTypesList : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForRootCategoriesInfoTypesListWithcategory:]

/** Category name as returned by ListRootCategories. */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Optional BCP-47 language code for localized info type friendly
 *  names. If omitted, or if localized strings are not available,
 *  en-US strings will be returned.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Fetches a @c GTLRDLP_ListInfoTypesResponse.
 *
 *  Returns sensitive information types for given category.
 *
 *  @param category Category name as returned by ListRootCategories.
 *
 *  @returns GTLRDLPQuery_RootCategoriesInfoTypesList
 */
+ (instancetype)queryWithCategory:(NSString *)category;

@end

/**
 *  Returns the list of root categories of sensitive information.
 *
 *  Method: dlp.rootCategories.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDLPCloudPlatform
 */
@interface GTLRDLPQuery_RootCategoriesList : GTLRDLPQuery
// Previous library name was
//   +[GTLQueryDLP queryForRootCategoriesList]

/**
 *  Optional language code for localized friendly category names.
 *  If omitted or if localized strings are not available,
 *  en-US strings will be returned.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Fetches a @c GTLRDLP_ListRootCategoriesResponse.
 *
 *  Returns the list of root categories of sensitive information.
 *
 *  @returns GTLRDLPQuery_RootCategoriesList
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END
