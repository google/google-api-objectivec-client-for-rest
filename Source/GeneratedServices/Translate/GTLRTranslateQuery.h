// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Translation API (translate/v2)
// Description:
//   The Google Cloud Translation API lets websites and programs integrate with
//   Google Translate programmatically.
// Documentation:
//   https://code.google.com/apis/language/translate/v2/getting_started.html

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRTranslate_DetectLanguageRequest;
@class GTLRTranslate_TextRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// format

/**
 *  Specifies the input is in HTML
 *
 *  Value: "html"
 */
GTLR_EXTERN NSString * const kGTLRTranslateFormatHtml;
/**
 *  Specifies the input is in plain textual format
 *
 *  Value: "text"
 */
GTLR_EXTERN NSString * const kGTLRTranslateFormatText;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Translate query classes.
 */
@interface GTLRTranslateQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Detects the language of text within a request.
 *
 *  Method: language.detections.detect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTranslateCloudPlatform
 *    @c kGTLRAuthScopeTranslateCloudTranslation
 */
@interface GTLRTranslateQuery_DetectionsDetect : GTLRTranslateQuery
// Previous library name was
//   +[GTLQueryTranslate queryForDetectionsDetectWithObject:]

/**
 *  Fetches a @c GTLRTranslate_DetectionsListResponse.
 *
 *  Detects the language of text within a request.
 *
 *  @param object The @c GTLRTranslate_DetectLanguageRequest to include in the
 *    query.
 *
 *  @return GTLRTranslateQuery_DetectionsDetect
 */
+ (instancetype)queryWithObject:(GTLRTranslate_DetectLanguageRequest *)object;

@end

/**
 *  Detects the language of text within a request.
 *
 *  Method: language.detections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTranslateCloudPlatform
 *    @c kGTLRAuthScopeTranslateCloudTranslation
 */
@interface GTLRTranslateQuery_DetectionsList : GTLRTranslateQuery
// Previous library name was
//   +[GTLQueryTranslate queryForDetectionsListWithq:]

/**
 *  The input text upon which to perform language detection. Repeat this
 *  parameter to perform language detection on multiple text inputs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *q;

/**
 *  Fetches a @c GTLRTranslate_DetectionsListResponse.
 *
 *  Detects the language of text within a request.
 *
 *  @param q The input text upon which to perform language detection. Repeat
 *    this
 *    parameter to perform language detection on multiple text inputs.
 *
 *  @return GTLRTranslateQuery_DetectionsList
 */
+ (instancetype)queryWithQ:(NSArray<NSString *> *)q;

@end

/**
 *  Returns a list of supported languages for translation.
 *
 *  Method: language.languages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTranslateCloudPlatform
 *    @c kGTLRAuthScopeTranslateCloudTranslation
 */
@interface GTLRTranslateQuery_LanguagesList : GTLRTranslateQuery
// Previous library name was
//   +[GTLQueryTranslate queryForLanguagesList]

/** The model type for which supported languages should be returned. */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  The language to use to return localized, human readable names of supported
 *  languages.
 */
@property(nonatomic, copy, nullable) NSString *target;

/**
 *  Fetches a @c GTLRTranslate_LanguagesListResponse.
 *
 *  Returns a list of supported languages for translation.
 *
 *  @return GTLRTranslateQuery_LanguagesList
 */
+ (instancetype)query;

@end

/**
 *  Translates input text, returning translated text.
 *
 *  Method: language.translations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTranslateCloudPlatform
 *    @c kGTLRAuthScopeTranslateCloudTranslation
 */
@interface GTLRTranslateQuery_TranslationsList : GTLRTranslateQuery
// Previous library name was
//   +[GTLQueryTranslate queryForTranslationsListWithq:target:]

/** The customization id for translate */
@property(nonatomic, strong, nullable) NSArray<NSString *> *cid;

/**
 *  The format of the source text, in either HTML (default) or plain-text. A
 *  value of "html" indicates HTML and a value of "text" indicates plain-text.
 *
 *  Likely values:
 *    @arg @c kGTLRTranslateFormatHtml Specifies the input is in HTML (Value:
 *        "html")
 *    @arg @c kGTLRTranslateFormatText Specifies the input is in plain textual
 *        format (Value: "text")
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  The `model` type requested for this translation. Valid values are
 *  listed in public documentation.
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  The input text to translate. Repeat this parameter to perform translation
 *  operations on multiple text inputs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *q;

/**
 *  The language of the source text, set to one of the language codes listed in
 *  Language Support. If the source language is not specified, the API will
 *  attempt to identify the source language automatically and return it within
 *  the response.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  The language to use for translation of the input text, set to one of the
 *  language codes listed in Language Support.
 */
@property(nonatomic, copy, nullable) NSString *target;

/**
 *  Fetches a @c GTLRTranslate_TranslationsListResponse.
 *
 *  Translates input text, returning translated text.
 *
 *  @param q The input text to translate. Repeat this parameter to perform
 *    translation
 *    operations on multiple text inputs.
 *  @param target The language to use for translation of the input text, set to
 *    one of the
 *    language codes listed in Language Support.
 *
 *  @return GTLRTranslateQuery_TranslationsList
 */
+ (instancetype)queryWithQ:(NSArray<NSString *> *)q
                    target:(NSString *)target;

@end

/**
 *  Translates input text, returning translated text.
 *
 *  Method: language.translations.translate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTranslateCloudPlatform
 *    @c kGTLRAuthScopeTranslateCloudTranslation
 */
@interface GTLRTranslateQuery_TranslationsTranslate : GTLRTranslateQuery
// Previous library name was
//   +[GTLQueryTranslate queryForTranslationsTranslateWithObject:]

/**
 *  Fetches a @c GTLRTranslate_TranslationsListResponse.
 *
 *  Translates input text, returning translated text.
 *
 *  @param object The @c GTLRTranslate_TextRequest to include in the query.
 *
 *  @return GTLRTranslateQuery_TranslationsTranslate
 */
+ (instancetype)queryWithObject:(GTLRTranslate_TextRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
