// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dialogflow API (dialogflow/v3)
// Description:
//   Builds conversational interfaces (for example, chatbots, and voice-powered
//   apps and devices).
// Documentation:
//   https://cloud.google.com/dialogflow/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDialogflow_GoogleCloudDialogflowCxV3Agent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Environment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Flow;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Intent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3LoadVersionRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Page;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TrainFlowRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateAgentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateFlowRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Version;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// intentView

/**
 *  All fields are populated.
 *
 *  Value: "INTENT_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowIntentViewIntentViewFull;
/**
 *  Training phrases field is not populated in the response.
 *
 *  Value: "INTENT_VIEW_PARTIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowIntentViewIntentViewPartial;
/**
 *  Not specified. Treated as INTENT_VIEW_FULL.
 *
 *  Value: "INTENT_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowIntentViewIntentViewUnspecified;

// ----------------------------------------------------------------------------
// type

/**
 *  Should never be used.
 *
 *  Value: "COVERAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowTypeCoverageTypeUnspecified;
/**
 *  Intent coverage.
 *
 *  Value: "INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowTypeIntent;
/**
 *  Page transition coverage
 *
 *  Value: "PAGE_TRANSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowTypePageTransition;

// ----------------------------------------------------------------------------
// view

/**
 *  Include basic metadata about the test case, but not the conversation turns.
 *  This is the default value.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowViewBasic;
/**
 *  Include everything.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowViewFull;
/**
 *  The default / unset value. The API will default to the BASIC view.
 *
 *  Value: "TEST_CASE_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflowViewTestCaseViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Dialogflow query classes.
 */
@interface GTLRDialogflowQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an agent in the specified location.
 *
 *  Method: dialogflow.projects.locations.agents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsCreateWithObject:parent:]

/**
 *  Required. The location to create a agent for. Format:
 *  `projects//locations/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Agent.
 *
 *  Creates an agent in the specified location.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Agent to
 *    include in the query.
 *  @param parent Required. The location to create a agent for. Format:
 *    `projects//locations/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Agent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsDeleteWithname:]

/**
 *  Required. The name of the agent to delete. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified agent.
 *
 *  @param name Required. The name of the agent to delete. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an entity type in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.entityTypes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEntityTypesCreateWithObject:parent:]

/**
 *  The language of the following fields in `entity_type`: *
 *  `EntityType.entities.value` * `EntityType.entities.synonyms` *
 *  `EntityType.excluded_phrases.value` If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The agent to create a entity type for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType.
 *
 *  Creates an entity type in the specified agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType to
 *    include in the query.
 *  @param parent Required. The agent to create a entity type for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified entity type.
 *
 *  Method: dialogflow.projects.locations.agents.entityTypes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEntityTypesDeleteWithname:]

/**
 *  This field has no effect for entity type not being used. For entity types
 *  that are used by intents or pages: * If `force` is set to false, an error
 *  will be returned with message indicating the referencing resources. * If
 *  `force` is set to true, Dialogflow will remove the entity type, as well as
 *  any references to the entity type (i.e. Page parameter of the entity type
 *  will be changed to '\@sys.any' and intent parameter of the entity type will
 *  be removed).
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the entity type to delete. Format:
 *  `projects//locations//agents//entityTypes/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified entity type.
 *
 *  @param name Required. The name of the entity type to delete. Format:
 *    `projects//locations//agents//entityTypes/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified entity type.
 *
 *  Method: dialogflow.projects.locations.agents.entityTypes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEntityTypesGetWithname:]

/**
 *  The language to retrieve the entity type for. The following fields are
 *  language dependent: * `EntityType.entities.value` *
 *  `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not
 *  specified, the agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the entity type. Format:
 *  `projects//locations//agents//entityTypes/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType.
 *
 *  Retrieves the specified entity type.
 *
 *  @param name Required. The name of the entity type. Format:
 *    `projects//locations//agents//entityTypes/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all entity types in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.entityTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEntityTypesListWithparent:]

/**
 *  The language to list entity types for. The following fields are language
 *  dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` *
 *  `EntityType.excluded_phrases.value` If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The agent to list all entity types for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListEntityTypesResponse.
 *
 *  Returns the list of all entity types in the specified agent.
 *
 *  @param parent Required. The agent to list all entity types for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified entity type.
 *
 *  Method: dialogflow.projects.locations.agents.entityTypes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEntityTypesPatchWithObject:name:]

/**
 *  The language of the following fields in `entity_type`: *
 *  `EntityType.entities.value` * `EntityType.entities.synonyms` *
 *  `EntityType.excluded_phrases.value` If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The unique identifier of the entity type. Required for
 *  EntityTypes.UpdateEntityType. Format:
 *  `projects//locations//agents//entityTypes/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType.
 *
 *  Updates the specified entity type.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType to
 *    include in the query.
 *  @param name The unique identifier of the entity type. Required for
 *    EntityTypes.UpdateEntityType. Format:
 *    `projects//locations//agents//entityTypes/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEntityTypesPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an Environment in the specified Agent.
 *
 *  Method: dialogflow.projects.locations.agents.environments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsCreateWithObject:parent:]

/**
 *  Required. The Agent to create an Environment for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Creates an Environment in the specified Agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Environment to
 *    include in the query.
 *  @param parent Required. The Agent to create an Environment for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Environment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified Environment.
 *
 *  Method: dialogflow.projects.locations.agents.environments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsDeleteWithname:]

/**
 *  Required. The name of the Environment to delete. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified Environment.
 *
 *  @param name Required. The name of the Environment to delete. Format:
 *    `projects//locations//agents//environments/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified Environment.
 *
 *  Method: dialogflow.projects.locations.agents.environments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsGetWithname:]

/**
 *  Required. The name of the Environment. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Environment.
 *
 *  Retrieves the specified Environment.
 *
 *  @param name Required. The name of the Environment. Format:
 *    `projects//locations//agents//environments/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all environments in the specified Agent.
 *
 *  Method: dialogflow.projects.locations.agents.environments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 20 and at
 *  most 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The Agent to list all environments for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListEnvironmentsResponse.
 *
 *  Returns the list of all environments in the specified Agent.
 *
 *  @param parent Required. The Agent to list all environments for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Looks up the history of the specified Environment.
 *
 *  Method: dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistory : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryWithname:]

/**
 *  Required. Resource name of the environment to look up the history for.
 *  Format: `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse.
 *
 *  Looks up the history of the specified Environment.
 *
 *  @param name Required. Resource name of the environment to look up the
 *    history for. Format: `projects//locations//agents//environments/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistory
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the specified Environment.
 *
 *  Method: dialogflow.projects.locations.agents.environments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsPatchWithObject:name:]

/**
 *  The name of the environment. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The mask to control which fields get updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Updates the specified Environment.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Environment to
 *    include in the query.
 *  @param name The name of the environment. Format:
 *    `projects//locations//agents//environments/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Environment *)object
                           name:(NSString *)name;

@end

/**
 *  Processes a natural language query and returns structured, actionable data
 *  as a result. This method is not idempotent, because it may cause session
 *  entity types to be updated, which in turn might affect results of future
 *  queries. Note: Always use agent versions for production traffic. See
 *  [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.detectIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsDetectIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsDetectIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note:
 *  Always use agent versions for production traffic. See [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse.
 *
 *  Processes a natural language query and returns structured, actionable data
 *  as a result. This method is not idempotent, because it may cause session
 *  entity types to be updated, which in turn might affect results of future
 *  queries. Note: Always use agent versions for production traffic. See
 *  [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note:
 *    Always use agent versions for production traffic. See [Versions and
 *    environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsDetectIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Creates a session entity type. If the specified session entity type already
 *  exists, overrides the session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.entityTypes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsEntityTypesCreateWithObject:parent:]

/**
 *  Required. The session to create a session entity type for. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Creates a session entity type. If the specified session entity type already
 *  exists, overrides the session entity type.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType to include in
 *    the query.
 *  @param parent Required. The session to create a session entity type for.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.entityTypes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsEntityTypesDeleteWithname:]

/**
 *  Required. The name of the session entity type to delete. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified session entity type.
 *
 *  @param name Required. The name of the session entity type to delete. Format:
 *    `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.entityTypes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsEntityTypesGetWithname:]

/**
 *  Required. The name of the session entity type. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Retrieves the specified session entity type.
 *
 *  @param name Required. The name of the session entity type. Format:
 *    `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all session entity types in the specified session.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.entityTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsEntityTypesListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The session to list all session entity types from. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse.
 *
 *  Returns the list of all session entity types in the specified session.
 *
 *  @param parent Required. The session to list all session entity types from.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.entityTypes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsEntityTypesPatchWithObject:name:]

/**
 *  Required. The unique identifier of the session entity type. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Updates the specified session entity type.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType to include in
 *    the query.
 *  @param name Required. The unique identifier of the session entity type.
 *    Format: `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsEntityTypesPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *)object
                           name:(NSString *)name;

@end

/**
 *  Fulfills a matched intent returned by MatchIntent. Must be called after
 *  MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is
 *  undefined.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.fulfillIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsFulfillIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsFulfillIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentResponse.
 *
 *  Fulfills a matched intent returned by MatchIntent. Must be called after
 *  MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is
 *  undefined.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsFulfillIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Returns preliminary intent match results, doesn't change the session status.
 *
 *  Method: dialogflow.projects.locations.agents.environments.sessions.matchIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsMatchIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsEnvironmentsSessionsMatchIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentResponse.
 *
 *  Returns preliminary intent match results, doesn't change the session status.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsEnvironmentsSessionsMatchIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Exports the specified agent to a binary file.
 *
 *  Method: dialogflow.projects.locations.agents.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsExport : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsExportWithObject:name:]

/**
 *  Required. The name of the agent to export. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Exports the specified agent to a binary file.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest to include in
 *    the query.
 *  @param name Required. The name of the agent to export. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsExport
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a flow in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.flows.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsCreateWithObject:parent:]

/**
 *  The language of the following fields in `flow`: *
 *  `Flow.event_handlers.trigger_fulfillment.messages` *
 *  `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The agent to create a flow for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Flow.
 *
 *  Creates a flow in the specified agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Flow to include
 *    in the query.
 *  @param parent Required. The agent to create a flow for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Flow *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsDeleteWithname:]

/**
 *  This field has no effect for flows with no incoming transitions. For flows
 *  with incoming transitions: * If `force` is set to false, an error will be
 *  returned with message indicating the incoming transitions. * If `force` is
 *  set to true, Dialogflow will remove the flow, as well as any transitions to
 *  the flow (i.e. Target flow in event handlers or Target flow in transition
 *  routes that point to this flow will be cleared).
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the flow to delete. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes a specified flow.
 *
 *  @param name Required. The name of the flow to delete. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsGetWithname:]

/**
 *  The language to retrieve the flow for. The following fields are language
 *  dependent: * `Flow.event_handlers.trigger_fulfillment.messages` *
 *  `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the flow to get. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Flow.
 *
 *  Retrieves the specified flow.
 *
 *  @param name Required. The name of the flow to get. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest flow validation result. Flow validation is performed when
 *  ValidateFlow is called.
 *
 *  Method: dialogflow.projects.locations.agents.flows.getValidationResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsGetValidationResult : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsGetValidationResultWithname:]

/** If not specified, the agent's default language is used. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The flow name. Format:
 *  `projects//locations//agents//flows//validationResult`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3FlowValidationResult.
 *
 *  Gets the latest flow validation result. Flow validation is performed when
 *  ValidateFlow is called.
 *
 *  @param name Required. The flow name. Format:
 *    `projects//locations//agents//flows//validationResult`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsGetValidationResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all flows in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.flows.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsListWithparent:]

/**
 *  The language to list flows for. The following fields are language dependent:
 *  * `Flow.event_handlers.trigger_fulfillment.messages` *
 *  `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The agent containing the flows. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListFlowsResponse.
 *
 *  Returns the list of all flows in the specified agent.
 *
 *  @param parent Required. The agent containing the flows. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a page in the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.pages.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPagesCreateWithObject:parent:]

/**
 *  The language of the following fields in `page`: *
 *  `Page.entry_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` *
 *  `Page.transition_routes.trigger_fulfillment.messages` *
 *  `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages`
 *  If not specified, the agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The flow to create a page for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Page.
 *
 *  Creates a page in the specified flow.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Page to include
 *    in the query.
 *  @param parent Required. The flow to create a page for. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Page *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified page.
 *
 *  Method: dialogflow.projects.locations.agents.flows.pages.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPagesDeleteWithname:]

/**
 *  This field has no effect for pages with no incoming transitions. For pages
 *  with incoming transitions: * If `force` is set to false, an error will be
 *  returned with message indicating the incoming transitions. * If `force` is
 *  set to true, Dialogflow will remove the page, as well as any transitions to
 *  the page (i.e. Target page in event handlers or Target page in transition
 *  routes that point to this page will be cleared).
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the page to delete. Format:
 *  `projects//locations//agents//Flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified page.
 *
 *  @param name Required. The name of the page to delete. Format:
 *    `projects//locations//agents//Flows//pages/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified page.
 *
 *  Method: dialogflow.projects.locations.agents.flows.pages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPagesGetWithname:]

/**
 *  The language to retrieve the page for. The following fields are language
 *  dependent: * `Page.entry_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` *
 *  `Page.transition_routes.trigger_fulfillment.messages` *
 *  `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages`
 *  If not specified, the agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the page. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Page.
 *
 *  Retrieves the specified page.
 *
 *  @param name Required. The name of the page. Format:
 *    `projects//locations//agents//flows//pages/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all pages in the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.pages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPagesListWithparent:]

/**
 *  The language to list pages for. The following fields are language dependent:
 *  * `Page.entry_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` *
 *  `Page.transition_routes.trigger_fulfillment.messages` *
 *  `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages`
 *  If not specified, the agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The flow to list all pages for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListPagesResponse.
 *
 *  Returns the list of all pages in the specified flow.
 *
 *  @param parent Required. The flow to list all pages for. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified page.
 *
 *  Method: dialogflow.projects.locations.agents.flows.pages.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPagesPatchWithObject:name:]

/**
 *  The language of the following fields in `page`: *
 *  `Page.entry_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` *
 *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` *
 *  `Page.transition_routes.trigger_fulfillment.messages` *
 *  `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages`
 *  If not specified, the agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The unique identifier of the page. Required for the Pages.UpdatePage method.
 *  Pages.CreatePage populates the name automatically. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated. If the mask is not present,
 *  all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Page.
 *
 *  Updates the specified page.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Page to include
 *    in the query.
 *  @param name The unique identifier of the page. Required for the
 *    Pages.UpdatePage method. Pages.CreatePage populates the name
 *    automatically. Format: `projects//locations//agents//flows//pages/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPagesPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Page *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsPatchWithObject:name:]

/**
 *  The language of the following fields in `flow`: *
 *  `Flow.event_handlers.trigger_fulfillment.messages` *
 *  `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The unique identifier of the flow. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The mask to control which fields get updated. If `update_mask` is
 *  not specified, an error will be returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Flow.
 *
 *  Updates the specified flow.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Flow to include
 *    in the query.
 *  @param name The unique identifier of the flow. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Flow *)object
                           name:(NSString *)name;

@end

/**
 *  Trains the specified flow. Note that only the flow in 'draft' environment is
 *  trained.
 *
 *  Method: dialogflow.projects.locations.agents.flows.train
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTrain : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTrainWithObject:name:]

/**
 *  Required. The flow to train. Format: `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Trains the specified flow. Note that only the flow in 'draft' environment is
 *  trained.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3TrainFlowRequest to include in the
 *    query.
 *  @param name Required. The flow to train. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTrain
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3TrainFlowRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an TransitionRouteGroup in the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.transitionRouteGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateWithObject:parent:]

/**
 *  The language to list transition route groups for. The field `messages` in
 *  TransitionRoute is language dependent. If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The flow to create an TransitionRouteGroup for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup.
 *
 *  Creates an TransitionRouteGroup in the specified flow.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup to include in
 *    the query.
 *  @param parent Required. The flow to create an TransitionRouteGroup for.
 *    Format: `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified TransitionRouteGroup.
 *
 *  Method: dialogflow.projects.locations.agents.flows.transitionRouteGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTransitionRouteGroupsDeleteWithname:]

/**
 *  This field has no effect for transition route group that no page is using.
 *  If the transition route group is referenced by any page: * If `force` is set
 *  to false, an error will be returned with message indicating pages that
 *  reference the transition route group. * If `force` is set to true,
 *  Dialogflow will remove the transition route group, as well as any reference
 *  to it.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the TransitionRouteGroup to delete. Format:
 *  `projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified TransitionRouteGroup.
 *
 *  @param name Required. The name of the TransitionRouteGroup to delete.
 *    Format: `projects//locations//agents//flows//transitionRouteGroups/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified TransitionRouteGroup.
 *
 *  Method: dialogflow.projects.locations.agents.flows.transitionRouteGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTransitionRouteGroupsGetWithname:]

/**
 *  The language to list transition route groups for. The field `messages` in
 *  TransitionRoute is language dependent. If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the TransitionRouteGroup. Format:
 *  `projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup.
 *
 *  Retrieves the specified TransitionRouteGroup.
 *
 *  @param name Required. The name of the TransitionRouteGroup. Format:
 *    `projects//locations//agents//flows//transitionRouteGroups/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all transition route groups in the specified flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.transitionRouteGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTransitionRouteGroupsListWithparent:]

/**
 *  The language to list transition route groups for. The field `messages` in
 *  TransitionRoute is language dependent. If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The flow to list all transition route groups for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse.
 *
 *  Returns the list of all transition route groups in the specified flow.
 *
 *  @param parent Required. The flow to list all transition route groups for.
 *    Format: `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified TransitionRouteGroup.
 *
 *  Method: dialogflow.projects.locations.agents.flows.transitionRouteGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsTransitionRouteGroupsPatchWithObject:name:]

/**
 *  The language to list transition route groups for. The field `messages` in
 *  TransitionRoute is language dependent. If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The unique identifier of the transition route group.
 *  TransitionRouteGroups.CreateTransitionRouteGroup populates the name
 *  automatically. Format:
 *  `projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup.
 *
 *  Updates the specified TransitionRouteGroup.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup to include in
 *    the query.
 *  @param name The unique identifier of the transition route group.
 *    TransitionRouteGroups.CreateTransitionRouteGroup populates the name
 *    automatically. Format:
 *    `projects//locations//agents//flows//transitionRouteGroups/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsTransitionRouteGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Validates the specified flow and creates or updates validation results.
 *  Please call this API after the training is completed to get the complete
 *  validation results.
 *
 *  Method: dialogflow.projects.locations.agents.flows.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsValidate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsValidateWithObject:name:]

/**
 *  Required. The flow to validate. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3FlowValidationResult.
 *
 *  Validates the specified flow and creates or updates validation results.
 *  Please call this API after the training is completed to get the complete
 *  validation results.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateFlowRequest to include in
 *    the query.
 *  @param name Required. The flow to validate. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsValidate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateFlowRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Version in the specified Flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsCreateWithObject:parent:]

/**
 *  Required. The Flow to create an Version for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Creates a Version in the specified Flow.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Version to
 *    include in the query.
 *  @param parent Required. The Flow to create an Version for. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Version *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified Version.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsDeleteWithname:]

/**
 *  Required. The name of the Version to delete. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified Version.
 *
 *  @param name Required. The name of the Version to delete. Format:
 *    `projects//locations//agents//flows//versions/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified Version.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsGetWithname:]

/**
 *  Required. The name of the Version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Version.
 *
 *  Retrieves the specified Version.
 *
 *  @param name Required. The name of the Version. Format:
 *    `projects//locations//agents//flows//versions/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all versions in the specified Flow.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 20 and at
 *  most 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The Flow to list all versions for. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListVersionsResponse.
 *
 *  Returns the list of all versions in the specified Flow.
 *
 *  @param parent Required. The Flow to list all versions for. Format:
 *    `projects//locations//agents//flows/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Loads a specified version to draft version.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.load
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsLoad : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsLoadWithObject:name:]

/**
 *  Required. The Version to be loaded to draft version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Loads a specified version to draft version.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3LoadVersionRequest to include in
 *    the query.
 *  @param name Required. The Version to be loaded to draft version. Format:
 *    `projects//locations//agents//flows//versions/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsLoad
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3LoadVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the specified Version.
 *
 *  Method: dialogflow.projects.locations.agents.flows.versions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsFlowsVersionsPatchWithObject:name:]

/**
 *  Format: projects//locations//agents//flows//versions/. Version ID is a
 *  self-increasing number generated by Dialogflow upon version creation.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The mask to control which fields get updated. Currently only
 *  `description` and `display_name` can be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Version.
 *
 *  Updates the specified Version.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Version to
 *    include in the query.
 *  @param name Format: projects//locations//agents//flows//versions/. Version
 *    ID is a self-increasing number generated by Dialogflow upon version
 *    creation.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsFlowsVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Version *)object
                           name:(NSString *)name;

@end

/**
 *  Retrieves the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsGetWithname:]

/**
 *  Required. The name of the agent. Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Agent.
 *
 *  Retrieves the specified agent.
 *
 *  @param name Required. The name of the agent. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest agent validation result. Agent validation is performed when
 *  ValidateAgent is called.
 *
 *  Method: dialogflow.projects.locations.agents.getValidationResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsGetValidationResult : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsGetValidationResultWithname:]

/** If not specified, the agent's default language is used. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The agent name. Format:
 *  `projects//locations//agents//validationResult`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3AgentValidationResult.
 *
 *  Gets the latest agent validation result. Agent validation is performed when
 *  ValidateAgent is called.
 *
 *  @param name Required. The agent name. Format:
 *    `projects//locations//agents//validationResult`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsGetValidationResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an intent in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.intents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsIntentsCreateWithObject:parent:]

/**
 *  The language of the following fields in `intent`: *
 *  `Intent.training_phrases.parts.text` If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The agent to create an intent for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Intent.
 *
 *  Creates an intent in the specified agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Intent to
 *    include in the query.
 *  @param parent Required. The agent to create an intent for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified intent.
 *
 *  Method: dialogflow.projects.locations.agents.intents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsIntentsDeleteWithname:]

/**
 *  Required. The name of the intent to delete. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified intent.
 *
 *  @param name Required. The name of the intent to delete. Format:
 *    `projects//locations//agents//intents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified intent.
 *
 *  Method: dialogflow.projects.locations.agents.intents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsIntentsGetWithname:]

/**
 *  The language to retrieve the intent for. The following fields are language
 *  dependent: * `Intent.training_phrases.parts.text` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the intent. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Intent.
 *
 *  Retrieves the specified intent.
 *
 *  @param name Required. The name of the intent. Format:
 *    `projects//locations//agents//intents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all intents in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.intents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsIntentsListWithparent:]

/**
 *  The resource view to apply to the returned intent.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflowIntentViewIntentViewUnspecified Not specified.
 *        Treated as INTENT_VIEW_FULL. (Value: "INTENT_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRDialogflowIntentViewIntentViewPartial Training phrases field
 *        is not populated in the response. (Value: "INTENT_VIEW_PARTIAL")
 *    @arg @c kGTLRDialogflowIntentViewIntentViewFull All fields are populated.
 *        (Value: "INTENT_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *intentView;

/**
 *  The language to list intents for. The following fields are language
 *  dependent: * `Intent.training_phrases.parts.text` If not specified, the
 *  agent's default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The agent to list all intents for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListIntentsResponse.
 *
 *  Returns the list of all intents in the specified agent.
 *
 *  @param parent Required. The agent to list all intents for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified intent.
 *
 *  Method: dialogflow.projects.locations.agents.intents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsIntentsPatchWithObject:name:]

/**
 *  The language of the following fields in `intent`: *
 *  `Intent.training_phrases.parts.text` If not specified, the agent's default
 *  language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The unique identifier of the intent. Required for the Intents.UpdateIntent
 *  method. Intents.CreateIntent populates the name automatically. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated. If the mask is not present,
 *  all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Intent.
 *
 *  Updates the specified intent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Intent to
 *    include in the query.
 *  @param name The unique identifier of the intent. Required for the
 *    Intents.UpdateIntent method. Intents.CreateIntent populates the name
 *    automatically. Format: `projects//locations//agents//intents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsIntentsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the list of all agents in the specified location.
 *
 *  Method: dialogflow.projects.locations.agents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location to list all agents for. Format:
 *  `projects//locations/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListAgentsResponse.
 *
 *  Returns the list of all agents in the specified location.
 *
 *  @param parent Required. The location to list all agents for. Format:
 *    `projects//locations/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsPatchWithObject:name:]

/**
 *  The unique identifier of the agent. Required for the Agents.UpdateAgent
 *  method. Agents.CreateAgent populates the name automatically. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated. If the mask is not present,
 *  all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Agent.
 *
 *  Updates the specified agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Agent to
 *    include in the query.
 *  @param name The unique identifier of the agent. Required for the
 *    Agents.UpdateAgent method. Agents.CreateAgent populates the name
 *    automatically. Format: `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Agent *)object
                           name:(NSString *)name;

@end

/**
 *  Restores the specified agent from a binary file. Replaces the current agent
 *  with a new one. Note that all existing resources in agent (e.g. intents,
 *  entity types, flows) will be removed.
 *
 *  Method: dialogflow.projects.locations.agents.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsRestore : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsRestoreWithObject:name:]

/**
 *  Required. The name of the agent to restore into. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Restores the specified agent from a binary file. Replaces the current agent
 *  with a new one. Note that all existing resources in agent (e.g. intents,
 *  entity types, flows) will be removed.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest to include in
 *    the query.
 *  @param name Required. The name of the agent to restore into. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsRestore
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Processes a natural language query and returns structured, actionable data
 *  as a result. This method is not idempotent, because it may cause session
 *  entity types to be updated, which in turn might affect results of future
 *  queries. Note: Always use agent versions for production traffic. See
 *  [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  Method: dialogflow.projects.locations.agents.sessions.detectIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsDetectIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsDetectIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note:
 *  Always use agent versions for production traffic. See [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse.
 *
 *  Processes a natural language query and returns structured, actionable data
 *  as a result. This method is not idempotent, because it may cause session
 *  entity types to be updated, which in turn might affect results of future
 *  queries. Note: Always use agent versions for production traffic. See
 *  [Versions and
 *  environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note:
 *    Always use agent versions for production traffic. See [Versions and
 *    environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsDetectIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Creates a session entity type. If the specified session entity type already
 *  exists, overrides the session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.entityTypes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsEntityTypesCreateWithObject:parent:]

/**
 *  Required. The session to create a session entity type for. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Creates a session entity type. If the specified session entity type already
 *  exists, overrides the session entity type.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType to include in
 *    the query.
 *  @param parent Required. The session to create a session entity type for.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.entityTypes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsEntityTypesDeleteWithname:]

/**
 *  Required. The name of the session entity type to delete. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified session entity type.
 *
 *  @param name Required. The name of the session entity type to delete. Format:
 *    `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.entityTypes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsEntityTypesGetWithname:]

/**
 *  Required. The name of the session entity type. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Retrieves the specified session entity type.
 *
 *  @param name Required. The name of the session entity type. Format:
 *    `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all session entity types in the specified session.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.entityTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsEntityTypesListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The session to list all session entity types from. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse.
 *
 *  Returns the list of all session entity types in the specified session.
 *
 *  @param parent Required. The session to list all session entity types from.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified session entity type.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.entityTypes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsEntityTypesPatchWithObject:name:]

/**
 *  Required. The unique identifier of the session entity type. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.
 *
 *  Updates the specified session entity type.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType to include in
 *    the query.
 *  @param name Required. The unique identifier of the session entity type.
 *    Format: `projects//locations//agents//sessions//entityTypes/` or
 *    `projects//locations//agents//environments//sessions//entityTypes/`. If
 *    `Environment ID` is not specified, we assume default 'draft' environment.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsEntityTypesPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *)object
                           name:(NSString *)name;

@end

/**
 *  Fulfills a matched intent returned by MatchIntent. Must be called after
 *  MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is
 *  undefined.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.fulfillIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsFulfillIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsFulfillIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentResponse.
 *
 *  Fulfills a matched intent returned by MatchIntent. Must be called after
 *  MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is
 *  undefined.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsFulfillIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Returns preliminary intent match results, doesn't change the session status.
 *
 *  Method: dialogflow.projects.locations.agents.sessions.matchIntent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsMatchIntent : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsSessionsMatchIntentWithObject:session:]

/**
 *  Required. The name of the session this query is sent to. Format:
 *  `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/`. If `Environment ID`
 *  is not specified, we assume default 'draft' environment. It's up to the API
 *  caller to choose an appropriate `Session ID`. It can be a random number or
 *  some type of session identifiers (preferably hashed). The length of the
 *  `Session ID` must not exceed 36 characters. For more information, see the
 *  [sessions
 *  guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentResponse.
 *
 *  Returns preliminary intent match results, doesn't change the session status.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest to include in
 *    the query.
 *  @param session Required. The name of the session this query is sent to.
 *    Format: `projects//locations//agents//sessions/` or
 *    `projects//locations//agents//environments//sessions/`. If `Environment
 *    ID` is not specified, we assume default 'draft' environment. It's up to
 *    the API caller to choose an appropriate `Session ID`. It can be a random
 *    number or some type of session identifiers (preferably hashed). The length
 *    of the `Session ID` must not exceed 36 characters. For more information,
 *    see the [sessions
 *    guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsSessionsMatchIntent
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest *)object
                        session:(NSString *)session;

@end

/**
 *  Batch deletes test cases.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesBatchDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesBatchDeleteWithObject:parent:]

/**
 *  Required. The agent to delete test cases from. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Batch deletes test cases.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest to
 *    include in the query.
 *  @param parent Required. The agent to delete test cases from. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Kicks off a batch run of test cases.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.batchRun
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesBatchRun : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesBatchRunWithObject:parent:]

/** Required. Agent name. Format: `projects//locations//agents/ `. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Kicks off a batch run of test cases.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesRequest to
 *    include in the query.
 *  @param parent Required. Agent name. Format: `projects//locations//agents/ `.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesBatchRun
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Calculates the test coverage for an agent.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.calculateCoverage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesCalculateCoverage : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesCalculateCoverageWithagent:]

/**
 *  Required. The agent to calculate coverage for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *agent;

/**
 *  Required. The type of coverage requested.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflowTypeCoverageTypeUnspecified Should never be used.
 *        (Value: "COVERAGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflowTypeIntent Intent coverage. (Value: "INTENT")
 *    @arg @c kGTLRDialogflowTypePageTransition Page transition coverage (Value:
 *        "PAGE_TRANSITION")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3CalculateCoverageResponse.
 *
 *  Calculates the test coverage for an agent.
 *
 *  @param agent Required. The agent to calculate coverage for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesCalculateCoverage
 */
+ (instancetype)queryWithAgent:(NSString *)agent;

@end

/**
 *  Creates a test case for the given agent.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesCreateWithObject:parent:]

/**
 *  Required. The agent to create the test case for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase.
 *
 *  Creates a test case for the given agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase to
 *    include in the query.
 *  @param parent Required. The agent to create the test case for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase *)object
                         parent:(NSString *)parent;

@end

/**
 *  Exports the test cases under the agent to a Cloud Storage bucket or a local
 *  file. Filter can be applied to export a subset of test cases.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesExport : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesExportWithObject:parent:]

/**
 *  Required. The agent where to export test cases from. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Exports the test cases under the agent to a Cloud Storage bucket or a local
 *  file. Filter can be applied to export a subset of test cases.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest to include
 *    in the query.
 *  @param parent Required. The agent where to export test cases from. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesExport
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a test case.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesGetWithname:]

/**
 *  Required. The name of the testcase. Format:
 *  `projects//locations//agents//testCases/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase.
 *
 *  Gets a test case.
 *
 *  @param name Required. The name of the testcase. Format:
 *    `projects//locations//agents//testCases/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports the test cases from a Cloud Storage bucket or a local file. It
 *  always creates new test cases and won't overwite any existing ones. The
 *  provided ID in the imported test case is neglected.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesImport : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesImportWithObject:parent:]

/**
 *  Required. The agent to import test cases to. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Imports the test cases from a Cloud Storage bucket or a local file. It
 *  always creates new test cases and won't overwite any existing ones. The
 *  provided ID in the imported test case is neglected.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesRequest to include
 *    in the query.
 *  @param parent Required. The agent to import test cases to. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesImport
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Fetches a list of test cases for a given agent.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 20. Note
 *  that when TestCaseView = FULL, the maximum page size allowed is 20. When
 *  TestCaseView = BASIC, the maximum page size allowed is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The agent to list all pages for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Specifies whether response should include all fields or just the metadata.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflowViewTestCaseViewUnspecified The default / unset
 *        value. The API will default to the BASIC view. (Value:
 *        "TEST_CASE_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRDialogflowViewBasic Include basic metadata about the test
 *        case, but not the conversation turns. This is the default value.
 *        (Value: "BASIC")
 *    @arg @c kGTLRDialogflowViewFull Include everything. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListTestCasesResponse.
 *
 *  Fetches a list of test cases for a given agent.
 *
 *  @param parent Required. The agent to list all pages for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified test case.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesPatchWithObject:name:]

/**
 *  The unique identifier of the test case. TestCases.CreateTestCase will
 *  populate the name automatically. Otherwise use format:
 *  `projects//locations//agents/ /testCases/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The mask to specify which fields should be updated. The
 *  `creationTime` and `lastTestResult` cannot be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase.
 *
 *  Updates the specified test case.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase to
 *    include in the query.
 *  @param name The unique identifier of the test case. TestCases.CreateTestCase
 *    will populate the name automatically. Otherwise use format:
 *    `projects//locations//agents/ /testCases/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase *)object
                           name:(NSString *)name;

@end

/**
 *  Fetches a list of results for a given test case.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.results.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesResultsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesResultsListWithparent:]

/**
 *  The filter expression used to filter test case results. See [API
 *  Filtering](https://aip.dev/160). The expression is case insensitive. Only
 *  'AND' is supported for logical operators. The supported syntax is listed
 *  below in detail: [AND ] ... [AND latest] The supported fields and operators
 *  are: field operator `environment` `=`, `IN` (Use value `draft` for draft
 *  environment) `test_time` `>`, `<` `latest` only returns the latest test
 *  result in all results for each test case. Examples: * "environment=draft AND
 *  latest" matches the latest test result for each test case in the draft
 *  environment. * "environment IN (e1,e2)" matches any test case results with
 *  an environment resource name of either "e1" or "e2". * "test_time >
 *  1602540713" matches any test case results with test time later than a unix
 *  timestamp in seconds 1602540713.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The test case to list results for. Format:
 *  `projects//locations//agents// testCases/`. Specify a `-` as a wildcard for
 *  TestCase ID to list results across multiple test cases.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListTestCaseResultsResponse.
 *
 *  Fetches a list of results for a given test case.
 *
 *  @param parent Required. The test case to list results for. Format:
 *    `projects//locations//agents// testCases/`. Specify a `-` as a wildcard
 *    for TestCase ID to list results across multiple test cases.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesResultsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Kicks off a test case run.
 *
 *  Method: dialogflow.projects.locations.agents.testCases.run
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesRun : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsTestCasesRunWithObject:projectsId:locationsId:agentsId:]

@property(nonatomic, copy, nullable) NSString *agentsId;

@property(nonatomic, copy, nullable) NSString *locationsId;

@property(nonatomic, copy, nullable) NSString *projectsId;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Kicks off a test case run.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseRequest to include in
 *    the query.
 *  @param projectsId NSString
 *  @param locationsId NSString
 *  @param agentsId NSString
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsTestCasesRun
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseRequest *)object
                     projectsId:(NSString *)projectsId
                    locationsId:(NSString *)locationsId
                       agentsId:(NSString *)agentsId;

@end

/**
 *  Validates the specified agent and creates or updates validation results. The
 *  agent in draft version is validated. Please call this API after the training
 *  is completed to get the complete validation results.
 *
 *  Method: dialogflow.projects.locations.agents.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsValidate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsValidateWithObject:name:]

/**
 *  Required. The agent to validate. Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3AgentValidationResult.
 *
 *  Validates the specified agent and creates or updates validation results. The
 *  agent in draft version is validated. Please call this API after the training
 *  is completed to get the complete validation results.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateAgentRequest to include in
 *    the query.
 *  @param name Required. The agent to validate. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsValidate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateAgentRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a webhook in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.webhooks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsWebhooksCreateWithObject:parent:]

/**
 *  Required. The agent to create a webhook for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook.
 *
 *  Creates a webhook in the specified agent.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook to
 *    include in the query.
 *  @param parent Required. The agent to create a webhook for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified webhook.
 *
 *  Method: dialogflow.projects.locations.agents.webhooks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsWebhooksDeleteWithname:]

/**
 *  This field has no effect for webhook not being used. For webhooks that are
 *  used by pages/flows/transition route groups: * If `force` is set to false,
 *  an error will be returned with message indicating the referenced resources.
 *  * If `force` is set to true, Dialogflow will remove the webhook, as well as
 *  any references to the webhook (i.e. Webhook and tagin fulfillments that
 *  point to this webhook will be removed).
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the webhook to delete. Format:
 *  `projects//locations//agents//webhooks/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified webhook.
 *
 *  @param name Required. The name of the webhook to delete. Format:
 *    `projects//locations//agents//webhooks/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified webhook.
 *
 *  Method: dialogflow.projects.locations.agents.webhooks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsWebhooksGetWithname:]

/**
 *  Required. The name of the webhook. Format:
 *  `projects//locations//agents//webhooks/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook.
 *
 *  Retrieves the specified webhook.
 *
 *  @param name Required. The name of the webhook. Format:
 *    `projects//locations//agents//webhooks/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all webhooks in the specified agent.
 *
 *  Method: dialogflow.projects.locations.agents.webhooks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsWebhooksListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 100 and
 *  at most 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The agent to list all webhooks for. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3ListWebhooksResponse.
 *
 *  Returns the list of all webhooks in the specified agent.
 *
 *  @param parent Required. The agent to list all webhooks for. Format:
 *    `projects//locations//agents/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified webhook.
 *
 *  Method: dialogflow.projects.locations.agents.webhooks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsAgentsWebhooksPatchWithObject:name:]

/**
 *  The unique identifier of the webhook. Required for the
 *  Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name
 *  automatically. Format: `projects//locations//agents//webhooks/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The mask to control which fields get updated. If the mask is not present,
 *  all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook.
 *
 *  Updates the specified webhook.
 *
 *  @param object The @c GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook to
 *    include in the query.
 *  @param name The unique identifier of the webhook. Required for the
 *    Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name
 *    automatically. Format: `projects//locations//agents//webhooks/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsAgentsWebhooksPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: dialogflow.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsOperationsCancel : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsOperationsCancelWithname:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: dialogflow.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsOperationsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: dialogflow.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsOperationsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create security settings in the specified location.
 *
 *  Method: dialogflow.projects.locations.securitySettings.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsCreate : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsSecuritySettingsCreateWithObject:parent:]

/**
 *  Required. The location to create an SecuritySettings for. Format:
 *  `projects//locations/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.
 *
 *  Create security settings in the specified location.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings to include in the
 *    query.
 *  @param parent Required. The location to create an SecuritySettings for.
 *    Format: `projects//locations/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsCreate
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified SecuritySettings.
 *
 *  Method: dialogflow.projects.locations.securitySettings.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsDelete : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsSecuritySettingsDeleteWithname:]

/**
 *  Required. The name of the SecuritySettings to delete. Format:
 *  `projects//locations//securitySettings/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Deletes the specified SecuritySettings.
 *
 *  @param name Required. The name of the SecuritySettings to delete. Format:
 *    `projects//locations//securitySettings/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified SecuritySettings. The returned settings may be stale
 *  by up to 1 minute.
 *
 *  Method: dialogflow.projects.locations.securitySettings.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsSecuritySettingsGetWithname:]

/**
 *  Required. Resource name of the settings. Format:
 *  `projects//locations//securitySettings/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.
 *
 *  Retrieves the specified SecuritySettings. The returned settings may be stale
 *  by up to 1 minute.
 *
 *  @param name Required. Resource name of the settings. Format:
 *    `projects//locations//securitySettings/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all security settings in the specified location.
 *
 *  Method: dialogflow.projects.locations.securitySettings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsSecuritySettingsListWithparent:]

/**
 *  The maximum number of items to return in a single page. By default 20 and at
 *  most 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The next_page_token value returned from a previous list request. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location to list all security settings for. Format:
 *  `projects//locations/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3ListSecuritySettingsResponse.
 *
 *  Returns the list of all security settings in the specified location.
 *
 *  @param parent Required. The location to list all security settings for.
 *    Format: `projects//locations/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified SecuritySettings.
 *
 *  Method: dialogflow.projects.locations.securitySettings.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsPatch : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsLocationsSecuritySettingsPatchWithObject:name:]

/**
 *  Required. Resource name of the settings. Format:
 *  `projects//locations//securitySettings/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The mask to control which fields get updated. If the mask is not
 *  present, all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.
 *
 *  Updates the specified SecuritySettings.
 *
 *  @param object The @c
 *    GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings to include in the
 *    query.
 *  @param name Required. Resource name of the settings. Format:
 *    `projects//locations//securitySettings/`.
 *
 *  @return GTLRDialogflowQuery_ProjectsLocationsSecuritySettingsPatch
 */
+ (instancetype)queryWithObject:(GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: dialogflow.projects.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsOperationsCancel : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsOperationsCancelWithname:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDialogflowQuery_ProjectsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: dialogflow.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsOperationsGet : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDialogflowQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: dialogflow.projects.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDialogflow
 *    @c kGTLRAuthScopeDialogflowCloudPlatform
 */
@interface GTLRDialogflowQuery_ProjectsOperationsList : GTLRDialogflowQuery
// Previous library name was
//   +[GTLQueryDialogflow queryForProjectsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDialogflow_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDialogflowQuery_ProjectsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
