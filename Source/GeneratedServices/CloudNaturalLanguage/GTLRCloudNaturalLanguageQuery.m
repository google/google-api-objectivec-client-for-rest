// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Natural Language API (language/v1)
// Description:
//   Provides natural language understanding technologies, such as sentiment
//   analysis, entity recognition, entity sentiment analysis, and other text
//   annotations, to developers.
// Documentation:
//   https://cloud.google.com/natural-language/

#import "GTLRCloudNaturalLanguageQuery.h"

#import "GTLRCloudNaturalLanguageObjects.h"

@implementation GTLRCloudNaturalLanguageQuery

@dynamic fields;

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeEntities

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_AnalyzeEntitiesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:analyzeEntities";
  GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeEntities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_AnalyzeEntitiesResponse class];
  query.loggingName = @"language.documents.analyzeEntities";
  return query;
}

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeEntitySentiment

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_AnalyzeEntitySentimentRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:analyzeEntitySentiment";
  GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeEntitySentiment *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_AnalyzeEntitySentimentResponse class];
  query.loggingName = @"language.documents.analyzeEntitySentiment";
  return query;
}

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeSentiment

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_AnalyzeSentimentRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:analyzeSentiment";
  GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeSentiment *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_AnalyzeSentimentResponse class];
  query.loggingName = @"language.documents.analyzeSentiment";
  return query;
}

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeSyntax

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_AnalyzeSyntaxRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:analyzeSyntax";
  GTLRCloudNaturalLanguageQuery_DocumentsAnalyzeSyntax *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_AnalyzeSyntaxResponse class];
  query.loggingName = @"language.documents.analyzeSyntax";
  return query;
}

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsAnnotateText

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_AnnotateTextRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:annotateText";
  GTLRCloudNaturalLanguageQuery_DocumentsAnnotateText *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_AnnotateTextResponse class];
  query.loggingName = @"language.documents.annotateText";
  return query;
}

@end

@implementation GTLRCloudNaturalLanguageQuery_DocumentsClassifyText

+ (instancetype)queryWithObject:(GTLRCloudNaturalLanguage_ClassifyTextRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents:classifyText";
  GTLRCloudNaturalLanguageQuery_DocumentsClassifyText *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudNaturalLanguage_ClassifyTextResponse class];
  query.loggingName = @"language.documents.classifyText";
  return query;
}

@end
