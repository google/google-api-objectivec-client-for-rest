// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Compute Engine API (compute/v1)
// Description:
//   Creates and runs virtual machines on Google Cloud Platform.
// Documentation:
//   https://developers.google.com/compute/docs/reference/latest/

#import "GTLRComputeObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRCompute_AcceleratorTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AcceleratorTypeList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AcceleratorTypesScopedList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AccessConfig.networkTier
NSString * const kGTLRCompute_AccessConfig_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_AccessConfig_NetworkTier_Standard = @"STANDARD";

// GTLRCompute_AccessConfig.type
NSString * const kGTLRCompute_AccessConfig_Type_OneToOneNat = @"ONE_TO_ONE_NAT";

// GTLRCompute_Address.addressType
NSString * const kGTLRCompute_Address_AddressType_External     = @"EXTERNAL";
NSString * const kGTLRCompute_Address_AddressType_Internal     = @"INTERNAL";
NSString * const kGTLRCompute_Address_AddressType_UnspecifiedType = @"UNSPECIFIED_TYPE";

// GTLRCompute_Address.ipVersion
NSString * const kGTLRCompute_Address_IpVersion_Ipv4           = @"IPV4";
NSString * const kGTLRCompute_Address_IpVersion_Ipv6           = @"IPV6";
NSString * const kGTLRCompute_Address_IpVersion_UnspecifiedVersion = @"UNSPECIFIED_VERSION";

// GTLRCompute_Address.networkTier
NSString * const kGTLRCompute_Address_NetworkTier_Premium  = @"PREMIUM";
NSString * const kGTLRCompute_Address_NetworkTier_Standard = @"STANDARD";

// GTLRCompute_Address.purpose
NSString * const kGTLRCompute_Address_Purpose_DnsResolver = @"DNS_RESOLVER";
NSString * const kGTLRCompute_Address_Purpose_GceEndpoint = @"GCE_ENDPOINT";
NSString * const kGTLRCompute_Address_Purpose_VpcPeering  = @"VPC_PEERING";

// GTLRCompute_Address.status
NSString * const kGTLRCompute_Address_Status_InUse     = @"IN_USE";
NSString * const kGTLRCompute_Address_Status_Reserved  = @"RESERVED";
NSString * const kGTLRCompute_Address_Status_Reserving = @"RESERVING";

// GTLRCompute_AddressAggregatedList_Warning.code
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AddressesScopedList_Warning.code
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AddressList_Warning.code
NSString * const kGTLRCompute_AddressList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AttachedDisk.interface
NSString * const kGTLRCompute_AttachedDisk_Interface_Nvme = @"NVME";
NSString * const kGTLRCompute_AttachedDisk_Interface_Scsi = @"SCSI";

// GTLRCompute_AttachedDisk.mode
NSString * const kGTLRCompute_AttachedDisk_Mode_ReadOnly  = @"READ_ONLY";
NSString * const kGTLRCompute_AttachedDisk_Mode_ReadWrite = @"READ_WRITE";

// GTLRCompute_AttachedDisk.type
NSString * const kGTLRCompute_AttachedDisk_Type_Persistent = @"PERSISTENT";
NSString * const kGTLRCompute_AttachedDisk_Type_Scratch    = @"SCRATCH";

// GTLRCompute_AuditLogConfig.logType
NSString * const kGTLRCompute_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCompute_AuditLogConfig_LogType_DataRead  = @"DATA_READ";
NSString * const kGTLRCompute_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCompute_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRCompute_AuthorizationLoggingOptions.permissionType
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminWrite = @"ADMIN_WRITE";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataRead = @"DATA_READ";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_PermissionTypeUnspecified = @"PERMISSION_TYPE_UNSPECIFIED";

// GTLRCompute_Autoscaler.status
NSString * const kGTLRCompute_Autoscaler_Status_Active   = @"ACTIVE";
NSString * const kGTLRCompute_Autoscaler_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_Autoscaler_Status_Error    = @"ERROR";
NSString * const kGTLRCompute_Autoscaler_Status_Pending  = @"PENDING";

// GTLRCompute_AutoscalerAggregatedList_Warning.code
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalerList_Warning.code
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalersScopedList_Warning.code
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalerStatusDetails.type
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_AllInstancesUnhealthy = @"ALL_INSTANCES_UNHEALTHY";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_BackendServiceDoesNotExist = @"BACKEND_SERVICE_DOES_NOT_EXIST";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CappedAtMaxNumReplicas = @"CAPPED_AT_MAX_NUM_REPLICAS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricDataPointsTooSparse = @"CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricInvalid = @"CUSTOM_METRIC_INVALID";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MinEqualsMax = @"MIN_EQUALS_MAX";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingCustomMetricDataPoints = @"MISSING_CUSTOM_METRIC_DATA_POINTS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingLoadBalancingDataPoints = @"MISSING_LOAD_BALANCING_DATA_POINTS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MoreThanOneBackendService = @"MORE_THAN_ONE_BACKEND_SERVICE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_NotEnoughQuotaAvailable = @"NOT_ENOUGH_QUOTA_AVAILABLE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_RegionResourceStockout = @"REGION_RESOURCE_STOCKOUT";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScalingTargetDoesNotExist = @"SCALING_TARGET_DOES_NOT_EXIST";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_Unknown = @"UNKNOWN";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_UnsupportedMaxRateLoadBalancingConfiguration = @"UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ZoneResourceStockout = @"ZONE_RESOURCE_STOCKOUT";

// GTLRCompute_AutoscalingPolicyCustomMetricUtilization.utilizationTargetType
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerMinute = @"DELTA_PER_MINUTE";
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerSecond = @"DELTA_PER_SECOND";
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_Gauge = @"GAUGE";

// GTLRCompute_Backend.balancingMode
NSString * const kGTLRCompute_Backend_BalancingMode_Connection = @"CONNECTION";
NSString * const kGTLRCompute_Backend_BalancingMode_Rate       = @"RATE";
NSString * const kGTLRCompute_Backend_BalancingMode_Utilization = @"UTILIZATION";

// GTLRCompute_BackendBucketList_Warning.code
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendService.loadBalancingScheme
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_External = @"EXTERNAL";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_Internal = @"INTERNAL";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InvalidLoadBalancingScheme = @"INVALID_LOAD_BALANCING_SCHEME";

// GTLRCompute_BackendService.protocol
NSString * const kGTLRCompute_BackendService_Protocol_Http  = @"HTTP";
NSString * const kGTLRCompute_BackendService_Protocol_Https = @"HTTPS";
NSString * const kGTLRCompute_BackendService_Protocol_Ssl   = @"SSL";
NSString * const kGTLRCompute_BackendService_Protocol_Tcp   = @"TCP";
NSString * const kGTLRCompute_BackendService_Protocol_Udp   = @"UDP";

// GTLRCompute_BackendService.sessionAffinity
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIp = @"CLIENT_IP";
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpPortProto = @"CLIENT_IP_PORT_PROTO";
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpProto = @"CLIENT_IP_PROTO";
NSString * const kGTLRCompute_BackendService_SessionAffinity_GeneratedCookie = @"GENERATED_COOKIE";
NSString * const kGTLRCompute_BackendService_SessionAffinity_None = @"NONE";

// GTLRCompute_BackendServiceAggregatedList_Warning.code
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendServiceList_Warning.code
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendServicesScopedList_Warning.code
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Commitment.plan
NSString * const kGTLRCompute_Commitment_Plan_Invalid        = @"INVALID";
NSString * const kGTLRCompute_Commitment_Plan_ThirtySixMonth = @"THIRTY_SIX_MONTH";
NSString * const kGTLRCompute_Commitment_Plan_TwelveMonth    = @"TWELVE_MONTH";

// GTLRCompute_Commitment.status
NSString * const kGTLRCompute_Commitment_Status_Active       = @"ACTIVE";
NSString * const kGTLRCompute_Commitment_Status_Creating     = @"CREATING";
NSString * const kGTLRCompute_Commitment_Status_Expired      = @"EXPIRED";
NSString * const kGTLRCompute_Commitment_Status_NotYetActive = @"NOT_YET_ACTIVE";

// GTLRCompute_CommitmentAggregatedList_Warning.code
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_CommitmentList_Warning.code
NSString * const kGTLRCompute_CommitmentList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_CommitmentsScopedList_Warning.code
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Condition.iam
NSString * const kGTLRCompute_Condition_Iam_Approver          = @"APPROVER";
NSString * const kGTLRCompute_Condition_Iam_Attribution       = @"ATTRIBUTION";
NSString * const kGTLRCompute_Condition_Iam_Authority         = @"AUTHORITY";
NSString * const kGTLRCompute_Condition_Iam_CredentialsType   = @"CREDENTIALS_TYPE";
NSString * const kGTLRCompute_Condition_Iam_JustificationType = @"JUSTIFICATION_TYPE";
NSString * const kGTLRCompute_Condition_Iam_NoAttr            = @"NO_ATTR";
NSString * const kGTLRCompute_Condition_Iam_SecurityRealm     = @"SECURITY_REALM";

// GTLRCompute_Condition.op
NSString * const kGTLRCompute_Condition_Op_Discharged = @"DISCHARGED";
NSString * const kGTLRCompute_Condition_Op_Equals     = @"EQUALS";
NSString * const kGTLRCompute_Condition_Op_In         = @"IN";
NSString * const kGTLRCompute_Condition_Op_NoOp       = @"NO_OP";
NSString * const kGTLRCompute_Condition_Op_NotEquals  = @"NOT_EQUALS";
NSString * const kGTLRCompute_Condition_Op_NotIn      = @"NOT_IN";

// GTLRCompute_Condition.sys
NSString * const kGTLRCompute_Condition_Sys_Ip      = @"IP";
NSString * const kGTLRCompute_Condition_Sys_Name    = @"NAME";
NSString * const kGTLRCompute_Condition_Sys_NoAttr  = @"NO_ATTR";
NSString * const kGTLRCompute_Condition_Sys_Region  = @"REGION";
NSString * const kGTLRCompute_Condition_Sys_Service = @"SERVICE";

// GTLRCompute_DeprecationStatus.state
NSString * const kGTLRCompute_DeprecationStatus_State_Deleted  = @"DELETED";
NSString * const kGTLRCompute_DeprecationStatus_State_Deprecated = @"DEPRECATED";
NSString * const kGTLRCompute_DeprecationStatus_State_Obsolete = @"OBSOLETE";

// GTLRCompute_Disk.status
NSString * const kGTLRCompute_Disk_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_Disk_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_Disk_Status_Failed    = @"FAILED";
NSString * const kGTLRCompute_Disk_Status_Ready     = @"READY";
NSString * const kGTLRCompute_Disk_Status_Restoring = @"RESTORING";

// GTLRCompute_DiskAggregatedList_Warning.code
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskInstantiationConfig.instantiateFrom
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_AttachReadOnly = @"ATTACH_READ_ONLY";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Blank = @"BLANK";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_CustomImage = @"CUSTOM_IMAGE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Default = @"DEFAULT";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_DoNotInclude = @"DO_NOT_INCLUDE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImage = @"SOURCE_IMAGE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImageFamily = @"SOURCE_IMAGE_FAMILY";

// GTLRCompute_DiskList_Warning.code
NSString * const kGTLRCompute_DiskList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DisksScopedList_Warning.code
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypeList_Warning.code
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypesScopedList_Warning.code
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Firewall.direction
NSString * const kGTLRCompute_Firewall_Direction_Egress  = @"EGRESS";
NSString * const kGTLRCompute_Firewall_Direction_Ingress = @"INGRESS";

// GTLRCompute_FirewallList_Warning.code
NSString * const kGTLRCompute_FirewallList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_FirewallList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_FirewallList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_FirewallList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ForwardingRule.IPProtocol
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Ah   = @"AH";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Esp  = @"ESP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Icmp = @"ICMP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Sctp = @"SCTP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Tcp  = @"TCP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Udp  = @"UDP";

// GTLRCompute_ForwardingRule.ipVersion
NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv4    = @"IPV4";
NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv6    = @"IPV6";
NSString * const kGTLRCompute_ForwardingRule_IpVersion_UnspecifiedVersion = @"UNSPECIFIED_VERSION";

// GTLRCompute_ForwardingRule.loadBalancingScheme
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_External = @"EXTERNAL";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Internal = @"INTERNAL";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Invalid = @"INVALID";

// GTLRCompute_ForwardingRule.networkTier
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Standard = @"STANDARD";

// GTLRCompute_ForwardingRuleAggregatedList_Warning.code
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ForwardingRuleList_Warning.code
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ForwardingRulesScopedList_Warning.code
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_GuestOsFeature.type
NSString * const kGTLRCompute_GuestOsFeature_Type_FeatureTypeUnspecified = @"FEATURE_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_GuestOsFeature_Type_MultiIpSubnet = @"MULTI_IP_SUBNET";
NSString * const kGTLRCompute_GuestOsFeature_Type_SecureBoot   = @"SECURE_BOOT";
NSString * const kGTLRCompute_GuestOsFeature_Type_UefiCompatible = @"UEFI_COMPATIBLE";
NSString * const kGTLRCompute_GuestOsFeature_Type_VirtioScsiMultiqueue = @"VIRTIO_SCSI_MULTIQUEUE";
NSString * const kGTLRCompute_GuestOsFeature_Type_Windows      = @"WINDOWS";

// GTLRCompute_HealthCheck.type
NSString * const kGTLRCompute_HealthCheck_Type_Http    = @"HTTP";
NSString * const kGTLRCompute_HealthCheck_Type_Https   = @"HTTPS";
NSString * const kGTLRCompute_HealthCheck_Type_Invalid = @"INVALID";
NSString * const kGTLRCompute_HealthCheck_Type_Ssl     = @"SSL";
NSString * const kGTLRCompute_HealthCheck_Type_Tcp     = @"TCP";

// GTLRCompute_HealthCheckList_Warning.code
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HealthStatus.healthState
NSString * const kGTLRCompute_HealthStatus_HealthState_Healthy = @"HEALTHY";
NSString * const kGTLRCompute_HealthStatus_HealthState_Unhealthy = @"UNHEALTHY";

// GTLRCompute_HTTPHealthCheck.proxyHeader
NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_HttpHealthCheckList_Warning.code
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HTTPSHealthCheck.proxyHeader
NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_HttpsHealthCheckList_Warning.code
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Image.sourceType
NSString * const kGTLRCompute_Image_SourceType_Raw = @"RAW";

// GTLRCompute_Image.status
NSString * const kGTLRCompute_Image_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_Image_Status_Failed   = @"FAILED";
NSString * const kGTLRCompute_Image_Status_Pending  = @"PENDING";
NSString * const kGTLRCompute_Image_Status_Ready    = @"READY";

// GTLRCompute_Image_RawDisk.containerType
NSString * const kGTLRCompute_Image_RawDisk_ContainerType_Tar = @"TAR";

// GTLRCompute_ImageList_Warning.code
NSString * const kGTLRCompute_ImageList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ImageList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ImageList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ImageList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ImageList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ImageList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ImageList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ImageList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ImageList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ImageList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Instance.status
NSString * const kGTLRCompute_Instance_Status_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_Instance_Status_Running      = @"RUNNING";
NSString * const kGTLRCompute_Instance_Status_Staging      = @"STAGING";
NSString * const kGTLRCompute_Instance_Status_Stopped      = @"STOPPED";
NSString * const kGTLRCompute_Instance_Status_Stopping     = @"STOPPING";
NSString * const kGTLRCompute_Instance_Status_Suspended    = @"SUSPENDED";
NSString * const kGTLRCompute_Instance_Status_Suspending   = @"SUSPENDING";
NSString * const kGTLRCompute_Instance_Status_Terminated   = @"TERMINATED";

// GTLRCompute_InstanceAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupList_Warning.code
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagerAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagerList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagersScopedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.minimalAction
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Restart = @"RESTART";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.type
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Opportunistic = @"OPPORTUNISTIC";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Proactive = @"PROACTIVE";

// GTLRCompute_InstanceGroupsListInstances_Warning.code
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupsListInstancesRequest.instanceState
NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_All = @"ALL";
NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_Running = @"RUNNING";

// GTLRCompute_InstanceGroupsScopedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceList_Warning.code
NSString * const kGTLRCompute_InstanceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceListReferrers_Warning.code
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstancesScopedList_Warning.code
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceTemplateList_Warning.code
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceWithNamedPorts.status
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Running = @"RUNNING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Staging = @"STAGING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopped = @"STOPPED";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopping = @"STOPPING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspended = @"SUSPENDED";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Terminated = @"TERMINATED";

// GTLRCompute_Interconnect.interconnectType
NSString * const kGTLRCompute_Interconnect_InterconnectType_Dedicated = @"DEDICATED";
NSString * const kGTLRCompute_Interconnect_InterconnectType_ItPrivate = @"IT_PRIVATE";
NSString * const kGTLRCompute_Interconnect_InterconnectType_Partner = @"PARTNER";

// GTLRCompute_Interconnect.linkType
NSString * const kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet10gLr = @"LINK_TYPE_ETHERNET_10G_LR";

// GTLRCompute_Interconnect.operationalStatus
NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsActive = @"OS_ACTIVE";
NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsUnprovisioned = @"OS_UNPROVISIONED";

// GTLRCompute_Interconnect.state
NSString * const kGTLRCompute_Interconnect_State_Active        = @"ACTIVE";
NSString * const kGTLRCompute_Interconnect_State_Unprovisioned = @"UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.bandwidth
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps100m = @"BPS_100M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps10g = @"BPS_10G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps1g = @"BPS_1G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps200m = @"BPS_200M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps2g = @"BPS_2G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps300m = @"BPS_300M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps400m = @"BPS_400M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps500m = @"BPS_500M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50m = @"BPS_50M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps5g = @"BPS_5G";

// GTLRCompute_InterconnectAttachment.edgeAvailabilityDomain
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain1 = @"AVAILABILITY_DOMAIN_1";
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain2 = @"AVAILABILITY_DOMAIN_2";
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomainAny = @"AVAILABILITY_DOMAIN_ANY";

// GTLRCompute_InterconnectAttachment.operationalStatus
NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsActive = @"OS_ACTIVE";
NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsUnprovisioned = @"OS_UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.state
NSString * const kGTLRCompute_InterconnectAttachment_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectAttachment_State_Defunct = @"DEFUNCT";
NSString * const kGTLRCompute_InterconnectAttachment_State_PartnerRequestReceived = @"PARTNER_REQUEST_RECEIVED";
NSString * const kGTLRCompute_InterconnectAttachment_State_PendingCustomer = @"PENDING_CUSTOMER";
NSString * const kGTLRCompute_InterconnectAttachment_State_PendingPartner = @"PENDING_PARTNER";
NSString * const kGTLRCompute_InterconnectAttachment_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_InterconnectAttachment_State_Unprovisioned = @"UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.type
NSString * const kGTLRCompute_InterconnectAttachment_Type_Dedicated = @"DEDICATED";
NSString * const kGTLRCompute_InterconnectAttachment_Type_Partner = @"PARTNER";
NSString * const kGTLRCompute_InterconnectAttachment_Type_PartnerProvider = @"PARTNER_PROVIDER";

// GTLRCompute_InterconnectAttachmentAggregatedList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectAttachmentList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectAttachmentsScopedList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectDiagnosticsLinkLACPStatus.state
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Detached = @"DETACHED";

// GTLRCompute_InterconnectDiagnosticsLinkOpticalPower.state
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighAlarm = @"HIGH_ALARM";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighWarning = @"HIGH_WARNING";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowAlarm = @"LOW_ALARM";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowWarning = @"LOW_WARNING";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_Ok = @"OK";

// GTLRCompute_InterconnectList_Warning.code
NSString * const kGTLRCompute_InterconnectList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectLocation.continent
NSString * const kGTLRCompute_InterconnectLocation_Continent_Africa = @"AFRICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_AsiaPac = @"ASIA_PAC";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CAfrica = @"C_AFRICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CAsiaPac = @"C_ASIA_PAC";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CEurope = @"C_EUROPE";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CNorthAmerica = @"C_NORTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CSouthAmerica = @"C_SOUTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_Europe = @"EUROPE";
NSString * const kGTLRCompute_InterconnectLocation_Continent_NorthAmerica = @"NORTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_SouthAmerica = @"SOUTH_AMERICA";

// GTLRCompute_InterconnectLocation.status
NSString * const kGTLRCompute_InterconnectLocation_Status_Available = @"AVAILABLE";
NSString * const kGTLRCompute_InterconnectLocation_Status_Closed = @"CLOSED";

// GTLRCompute_InterconnectLocationList_Warning.code
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectLocationRegionInfo.locationPresence
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_Global = @"GLOBAL";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LocalRegion = @"LOCAL_REGION";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpGlobal = @"LP_GLOBAL";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpLocalRegion = @"LP_LOCAL_REGION";

// GTLRCompute_InterconnectOutageNotification.issueType
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItOutage = @"IT_OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItPartialOutage = @"IT_PARTIAL_OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_Outage = @"OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_PartialOutage = @"PARTIAL_OUTAGE";

// GTLRCompute_InterconnectOutageNotification.source
NSString * const kGTLRCompute_InterconnectOutageNotification_Source_Google = @"GOOGLE";
NSString * const kGTLRCompute_InterconnectOutageNotification_Source_NsrcGoogle = @"NSRC_GOOGLE";

// GTLRCompute_InterconnectOutageNotification.state
NSString * const kGTLRCompute_InterconnectOutageNotification_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_Cancelled = @"CANCELLED";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsActive = @"NS_ACTIVE";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsCanceled = @"NS_CANCELED";

// GTLRCompute_LicenseCode.state
NSString * const kGTLRCompute_LicenseCode_State_Disabled       = @"DISABLED";
NSString * const kGTLRCompute_LicenseCode_State_Enabled        = @"ENABLED";
NSString * const kGTLRCompute_LicenseCode_State_Restricted     = @"RESTRICTED";
NSString * const kGTLRCompute_LicenseCode_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_LicenseCode_State_Terminated     = @"TERMINATED";

// GTLRCompute_LicensesListResponse_Warning.code
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_LogConfigCloudAuditOptions.logName
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_AdminActivity = @"ADMIN_ACTIVITY";
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_DataAccess = @"DATA_ACCESS";
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_UnspecifiedLogName = @"UNSPECIFIED_LOG_NAME";

// GTLRCompute_LogConfigDataAccessOptions.logMode
NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogFailClosed = @"LOG_FAIL_CLOSED";
NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogModeUnspecified = @"LOG_MODE_UNSPECIFIED";

// GTLRCompute_MachineTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_MachineTypeList_Warning.code
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_MachineTypesScopedList_Warning.code
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ManagedInstance.currentAction
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Abandoning = @"ABANDONING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Creating = @"CREATING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_CreatingWithoutRetries = @"CREATING_WITHOUT_RETRIES";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Deleting = @"DELETING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_None = @"NONE";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Recreating = @"RECREATING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Refreshing = @"REFRESHING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Restarting = @"RESTARTING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Verifying = @"VERIFYING";

// GTLRCompute_ManagedInstance.instanceStatus
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Running = @"RUNNING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Staging = @"STAGING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopped = @"STOPPED";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopping = @"STOPPING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspended = @"SUSPENDED";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Terminated = @"TERMINATED";

// GTLRCompute_NetworkList_Warning.code
NSString * const kGTLRCompute_NetworkList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkPeering.state
NSString * const kGTLRCompute_NetworkPeering_State_Active   = @"ACTIVE";
NSString * const kGTLRCompute_NetworkPeering_State_Inactive = @"INACTIVE";

// GTLRCompute_NetworkRoutingConfig.routingMode
NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Global = @"GLOBAL";
NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Regional = @"REGIONAL";

// GTLRCompute_NodeGroup.status
NSString * const kGTLRCompute_NodeGroup_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_NodeGroup_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_NodeGroup_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_NodeGroup_Status_Ready    = @"READY";

// GTLRCompute_NodeGroupAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupList_Warning.code
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupNode.status
NSString * const kGTLRCompute_NodeGroupNode_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_NodeGroupNode_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_NodeGroupNode_Status_Invalid   = @"INVALID";
NSString * const kGTLRCompute_NodeGroupNode_Status_Ready     = @"READY";
NSString * const kGTLRCompute_NodeGroupNode_Status_Repairing = @"REPAIRING";

// GTLRCompute_NodeGroupsListNodes_Warning.code
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupsScopedList_Warning.code
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplate.status
NSString * const kGTLRCompute_NodeTemplate_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_NodeTemplate_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_NodeTemplate_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_NodeTemplate_Status_Ready    = @"READY";

// GTLRCompute_NodeTemplateAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplateList_Warning.code
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplatesScopedList_Warning.code
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypeList_Warning.code
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypesScopedList_Warning.code
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Operation.status
NSString * const kGTLRCompute_Operation_Status_Done    = @"DONE";
NSString * const kGTLRCompute_Operation_Status_Pending = @"PENDING";
NSString * const kGTLRCompute_Operation_Status_Running = @"RUNNING";

// GTLRCompute_Operation_Warnings_Item.code
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationAggregatedList_Warning.code
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationList_Warning.code
NSString * const kGTLRCompute_OperationList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationsScopedList_Warning.code
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Project.defaultNetworkTier
NSString * const kGTLRCompute_Project_DefaultNetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_Project_DefaultNetworkTier_Standard = @"STANDARD";

// GTLRCompute_Project.xpnProjectStatus
NSString * const kGTLRCompute_Project_XpnProjectStatus_Host    = @"HOST";
NSString * const kGTLRCompute_Project_XpnProjectStatus_UnspecifiedXpnProjectStatus = @"UNSPECIFIED_XPN_PROJECT_STATUS";

// GTLRCompute_ProjectsSetDefaultNetworkTierRequest.networkTier
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Standard = @"STANDARD";

// GTLRCompute_Quota.metric
NSString * const kGTLRCompute_Quota_Metric_Autoscalers         = @"AUTOSCALERS";
NSString * const kGTLRCompute_Quota_Metric_BackendBuckets      = @"BACKEND_BUCKETS";
NSString * const kGTLRCompute_Quota_Metric_BackendServices     = @"BACKEND_SERVICES";
NSString * const kGTLRCompute_Quota_Metric_Commitments         = @"COMMITMENTS";
NSString * const kGTLRCompute_Quota_Metric_Cpus                = @"CPUS";
NSString * const kGTLRCompute_Quota_Metric_CpusAllRegions      = @"CPUS_ALL_REGIONS";
NSString * const kGTLRCompute_Quota_Metric_DisksTotalGb        = @"DISKS_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_Firewalls           = @"FIREWALLS";
NSString * const kGTLRCompute_Quota_Metric_ForwardingRules     = @"FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_GlobalInternalAddresses = @"GLOBAL_INTERNAL_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_GpusAllRegions      = @"GPUS_ALL_REGIONS";
NSString * const kGTLRCompute_Quota_Metric_HealthChecks        = @"HEALTH_CHECKS";
NSString * const kGTLRCompute_Quota_Metric_Images              = @"IMAGES";
NSString * const kGTLRCompute_Quota_Metric_InstanceGroupManagers = @"INSTANCE_GROUP_MANAGERS";
NSString * const kGTLRCompute_Quota_Metric_InstanceGroups      = @"INSTANCE_GROUPS";
NSString * const kGTLRCompute_Quota_Metric_Instances           = @"INSTANCES";
NSString * const kGTLRCompute_Quota_Metric_InstanceTemplates   = @"INSTANCE_TEMPLATES";
NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsPerRegion = @"INTERCONNECT_ATTACHMENTS_PER_REGION";
NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsTotalMbps = @"INTERCONNECT_ATTACHMENTS_TOTAL_MBPS";
NSString * const kGTLRCompute_Quota_Metric_Interconnects       = @"INTERCONNECTS";
NSString * const kGTLRCompute_Quota_Metric_InternalAddresses   = @"INTERNAL_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_InUseAddresses      = @"IN_USE_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_InUseBackupSchedules = @"IN_USE_BACKUP_SCHEDULES";
NSString * const kGTLRCompute_Quota_Metric_InUseSnapshotSchedules = @"IN_USE_SNAPSHOT_SCHEDULES";
NSString * const kGTLRCompute_Quota_Metric_LocalSsdTotalGb     = @"LOCAL_SSD_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_Networks            = @"NETWORKS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaK80Gpus       = @"NVIDIA_K80_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP100Gpus      = @"NVIDIA_P100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP100VwsGpus   = @"NVIDIA_P100_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP4Gpus        = @"NVIDIA_P4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP4VwsGpus     = @"NVIDIA_P4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaT4Gpus        = @"NVIDIA_T4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaT4VwsGpus     = @"NVIDIA_T4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaV100Gpus      = @"NVIDIA_V100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleCpus     = @"PREEMPTIBLE_CPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleLocalSsdGb = @"PREEMPTIBLE_LOCAL_SSD_GB";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaK80Gpus = @"PREEMPTIBLE_NVIDIA_K80_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100Gpus = @"PREEMPTIBLE_NVIDIA_P100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100VwsGpus = @"PREEMPTIBLE_NVIDIA_P100_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4Gpus = @"PREEMPTIBLE_NVIDIA_P4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4VwsGpus = @"PREEMPTIBLE_NVIDIA_P4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4Gpus = @"PREEMPTIBLE_NVIDIA_T4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4VwsGpus = @"PREEMPTIBLE_NVIDIA_T4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaV100Gpus = @"PREEMPTIBLE_NVIDIA_V100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_RegionalAutoscalers = @"REGIONAL_AUTOSCALERS";
NSString * const kGTLRCompute_Quota_Metric_RegionalInstanceGroupManagers = @"REGIONAL_INSTANCE_GROUP_MANAGERS";
NSString * const kGTLRCompute_Quota_Metric_ResourcePolicies    = @"RESOURCE_POLICIES";
NSString * const kGTLRCompute_Quota_Metric_Routers             = @"ROUTERS";
NSString * const kGTLRCompute_Quota_Metric_Routes              = @"ROUTES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicies    = @"SECURITY_POLICIES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyRules = @"SECURITY_POLICY_RULES";
NSString * const kGTLRCompute_Quota_Metric_Snapshots           = @"SNAPSHOTS";
NSString * const kGTLRCompute_Quota_Metric_SsdTotalGb          = @"SSD_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_SslCertificates     = @"SSL_CERTIFICATES";
NSString * const kGTLRCompute_Quota_Metric_StaticAddresses     = @"STATIC_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_Subnetworks         = @"SUBNETWORKS";
NSString * const kGTLRCompute_Quota_Metric_TargetHttpProxies   = @"TARGET_HTTP_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetHttpsProxies  = @"TARGET_HTTPS_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetInstances     = @"TARGET_INSTANCES";
NSString * const kGTLRCompute_Quota_Metric_TargetPools         = @"TARGET_POOLS";
NSString * const kGTLRCompute_Quota_Metric_TargetSslProxies    = @"TARGET_SSL_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetTcpProxies    = @"TARGET_TCP_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetVpnGateways   = @"TARGET_VPN_GATEWAYS";
NSString * const kGTLRCompute_Quota_Metric_UrlMaps             = @"URL_MAPS";
NSString * const kGTLRCompute_Quota_Metric_VpnGateways         = @"VPN_GATEWAYS";
NSString * const kGTLRCompute_Quota_Metric_VpnTunnels          = @"VPN_TUNNELS";

// GTLRCompute_Region.status
NSString * const kGTLRCompute_Region_Status_Down = @"DOWN";
NSString * const kGTLRCompute_Region_Status_Up   = @"UP";

// GTLRCompute_RegionAutoscalerList_Warning.code
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionDiskTypeList_Warning.code
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupList_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupManagerList_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupsListInstances_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupsListInstancesRequest.instanceState
NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_All = @"ALL";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_Running = @"RUNNING";

// GTLRCompute_RegionList_Warning.code
NSString * const kGTLRCompute_RegionList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ResourceCommitment.type
NSString * const kGTLRCompute_ResourceCommitment_Type_Memory   = @"MEMORY";
NSString * const kGTLRCompute_ResourceCommitment_Type_Unspecified = @"UNSPECIFIED";
NSString * const kGTLRCompute_ResourceCommitment_Type_Vcpu     = @"VCPU";

// GTLRCompute_Route_Warnings_Item.code
NSString * const kGTLRCompute_Route_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouteList_Warning.code
NSString * const kGTLRCompute_RouteList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouteList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouteList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouteList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouteList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouteList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouteList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouteList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouteList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouteList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterAggregatedList_Warning.code
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterBgp.advertisedGroups
NSString * const kGTLRCompute_RouterBgp_AdvertisedGroups_AllSubnets = @"ALL_SUBNETS";

// GTLRCompute_RouterBgp.advertiseMode
NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Custom  = @"CUSTOM";
NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Default = @"DEFAULT";

// GTLRCompute_RouterBgpPeer.advertisedGroups
NSString * const kGTLRCompute_RouterBgpPeer_AdvertisedGroups_AllSubnets = @"ALL_SUBNETS";

// GTLRCompute_RouterBgpPeer.advertiseMode
NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Custom = @"CUSTOM";
NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Default = @"DEFAULT";

// GTLRCompute_RouterBgpPeer.managementType
NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByAttachment = @"MANAGED_BY_ATTACHMENT";
NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByUser = @"MANAGED_BY_USER";

// GTLRCompute_RouterInterface.managementType
NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByAttachment = @"MANAGED_BY_ATTACHMENT";
NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByUser = @"MANAGED_BY_USER";

// GTLRCompute_RouterList_Warning.code
NSString * const kGTLRCompute_RouterList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouterList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouterList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouterList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouterList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouterList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouterList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouterList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouterList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouterList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterNat.natIpAllocateOption
NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_AutoOnly = @"AUTO_ONLY";
NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_ManualOnly = @"MANUAL_ONLY";

// GTLRCompute_RouterNat.sourceSubnetworkIpRangesToNat
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllIpRanges = @"ALL_SUBNETWORKS_ALL_IP_RANGES";
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllPrimaryIpRanges = @"ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES";
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_ListOfSubnetworks = @"LIST_OF_SUBNETWORKS";

// GTLRCompute_RouterNatSubnetworkToNat.sourceIpRangesToNat
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_AllIpRanges = @"ALL_IP_RANGES";
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_ListOfSecondaryIpRanges = @"LIST_OF_SECONDARY_IP_RANGES";
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_PrimaryIpRange = @"PRIMARY_IP_RANGE";

// GTLRCompute_RoutersScopedList_Warning.code
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterStatusBgpPeerStatus.status
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Down = @"DOWN";
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Unknown = @"UNKNOWN";
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Up = @"UP";

// GTLRCompute_Rule.action
NSString * const kGTLRCompute_Rule_Action_Allow        = @"ALLOW";
NSString * const kGTLRCompute_Rule_Action_AllowWithLog = @"ALLOW_WITH_LOG";
NSString * const kGTLRCompute_Rule_Action_Deny         = @"DENY";
NSString * const kGTLRCompute_Rule_Action_DenyWithLog  = @"DENY_WITH_LOG";
NSString * const kGTLRCompute_Rule_Action_Log          = @"LOG";
NSString * const kGTLRCompute_Rule_Action_NoAction     = @"NO_ACTION";

// GTLRCompute_Scheduling.onHostMaintenance
NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Migrate = @"MIGRATE";
NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Terminate = @"TERMINATE";

// GTLRCompute_SchedulingNodeAffinity.operatorProperty
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_In = @"IN";
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_NotIn = @"NOT_IN";
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_OperatorUnspecified = @"OPERATOR_UNSPECIFIED";

// GTLRCompute_SecurityPolicyList_Warning.code
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SecurityPolicyRuleMatcher.versionedExpr
NSString * const kGTLRCompute_SecurityPolicyRuleMatcher_VersionedExpr_SrcIpsV1 = @"SRC_IPS_V1";

// GTLRCompute_Snapshot.status
NSString * const kGTLRCompute_Snapshot_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_Snapshot_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_Snapshot_Status_Failed    = @"FAILED";
NSString * const kGTLRCompute_Snapshot_Status_Ready     = @"READY";
NSString * const kGTLRCompute_Snapshot_Status_Uploading = @"UPLOADING";

// GTLRCompute_Snapshot.storageBytesStatus
NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_Updating = @"UPDATING";
NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_UpToDate = @"UP_TO_DATE";

// GTLRCompute_SnapshotList_Warning.code
NSString * const kGTLRCompute_SnapshotList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslCertificateList_Warning.code
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SSLHealthCheck.proxyHeader
NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_SslPoliciesList_Warning.code
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslPolicy.minTlsVersion
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls10 = @"TLS_1_0";
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls11 = @"TLS_1_1";
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls12 = @"TLS_1_2";

// GTLRCompute_SslPolicy.profile
NSString * const kGTLRCompute_SslPolicy_Profile_Compatible = @"COMPATIBLE";
NSString * const kGTLRCompute_SslPolicy_Profile_Custom     = @"CUSTOM";
NSString * const kGTLRCompute_SslPolicy_Profile_Modern     = @"MODERN";
NSString * const kGTLRCompute_SslPolicy_Profile_Restricted = @"RESTRICTED";

// GTLRCompute_SslPolicy_Warnings_Item.code
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SubnetworkAggregatedList_Warning.code
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SubnetworkList_Warning.code
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SubnetworksScopedList_Warning.code
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpProxyList_Warning.code
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest.quicOverride
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Disable = @"DISABLE";
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Enable = @"ENABLE";
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_None = @"NONE";

// GTLRCompute_TargetHttpsProxy.quicOverride
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Disable = @"DISABLE";
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Enable = @"ENABLE";
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_None = @"NONE";

// GTLRCompute_TargetHttpsProxyList_Warning.code
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstance.natPolicy
NSString * const kGTLRCompute_TargetInstance_NatPolicy_NoNat = @"NO_NAT";

// GTLRCompute_TargetInstanceAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstanceList_Warning.code
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstancesScopedList_Warning.code
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPool.sessionAffinity
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIp = @"CLIENT_IP";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpPortProto = @"CLIENT_IP_PORT_PROTO";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpProto = @"CLIENT_IP_PROTO";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_GeneratedCookie = @"GENERATED_COOKIE";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_None  = @"NONE";

// GTLRCompute_TargetPoolAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPoolList_Warning.code
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPoolsScopedList_Warning.code
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetSslProxiesSetProxyHeaderRequest.proxyHeader
NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetSslProxy.proxyHeader
NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetSslProxyList_Warning.code
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest.proxyHeader
NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetTcpProxy.proxyHeader
NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetTcpProxyList_Warning.code
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGateway.status
NSString * const kGTLRCompute_TargetVpnGateway_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Failed   = @"FAILED";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Ready    = @"READY";

// GTLRCompute_TargetVpnGatewayAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGatewayList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGatewaysScopedList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TCPHealthCheck.proxyHeader
NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_UrlMapList_Warning.code
NSString * const kGTLRCompute_UrlMapList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_UsableSubnetworksAggregatedList_Warning.code
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VmEndpointNatMappingsList_Warning.code
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnTunnel.status
NSString * const kGTLRCompute_VpnTunnel_Status_AllocatingResources = @"ALLOCATING_RESOURCES";
NSString * const kGTLRCompute_VpnTunnel_Status_AuthorizationError = @"AUTHORIZATION_ERROR";
NSString * const kGTLRCompute_VpnTunnel_Status_Deprovisioning  = @"DEPROVISIONING";
NSString * const kGTLRCompute_VpnTunnel_Status_Established     = @"ESTABLISHED";
NSString * const kGTLRCompute_VpnTunnel_Status_Failed          = @"FAILED";
NSString * const kGTLRCompute_VpnTunnel_Status_FirstHandshake  = @"FIRST_HANDSHAKE";
NSString * const kGTLRCompute_VpnTunnel_Status_NegotiationFailure = @"NEGOTIATION_FAILURE";
NSString * const kGTLRCompute_VpnTunnel_Status_NetworkError    = @"NETWORK_ERROR";
NSString * const kGTLRCompute_VpnTunnel_Status_NoIncomingPackets = @"NO_INCOMING_PACKETS";
NSString * const kGTLRCompute_VpnTunnel_Status_Provisioning    = @"PROVISIONING";
NSString * const kGTLRCompute_VpnTunnel_Status_Rejected        = @"REJECTED";
NSString * const kGTLRCompute_VpnTunnel_Status_WaitingForFullConfig = @"WAITING_FOR_FULL_CONFIG";

// GTLRCompute_VpnTunnelAggregatedList_Warning.code
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnTunnelList_Warning.code
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnTunnelsScopedList_Warning.code
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_XpnHostList_Warning.code
NSString * const kGTLRCompute_XpnHostList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_XpnResourceId.type
NSString * const kGTLRCompute_XpnResourceId_Type_Project       = @"PROJECT";
NSString * const kGTLRCompute_XpnResourceId_Type_XpnResourceTypeUnspecified = @"XPN_RESOURCE_TYPE_UNSPECIFIED";

// GTLRCompute_Zone.status
NSString * const kGTLRCompute_Zone_Status_Down = @"DOWN";
NSString * const kGTLRCompute_Zone_Status_Up   = @"UP";

// GTLRCompute_ZoneList_Warning.code
NSString * const kGTLRCompute_ZoneList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ZoneList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ZoneList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ZoneList_Warning_Code_Unreachable = @"UNREACHABLE";

// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorConfig
//

@implementation GTLRCompute_AcceleratorConfig
@dynamic acceleratorCount, acceleratorType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorType
//

@implementation GTLRCompute_AcceleratorType
@dynamic creationTimestamp, deprecated, descriptionProperty, identifier, kind,
         maximumCardsPerInstance, name, selfLink, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Items
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AcceleratorTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Warning
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList
//

@implementation GTLRCompute_AcceleratorTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_AcceleratorType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList_Warning
//

@implementation GTLRCompute_AcceleratorTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList
//

@implementation GTLRCompute_AcceleratorTypesScopedList
@dynamic acceleratorTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acceleratorTypes" : [GTLRCompute_AcceleratorType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList_Warning
//

@implementation GTLRCompute_AcceleratorTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AccessConfig
//

@implementation GTLRCompute_AccessConfig
@dynamic kind, name, natIP, networkTier, publicPtrDomainName, setPublicPtr,
         type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Address
//

@implementation GTLRCompute_Address
@dynamic address, addressType, creationTimestamp, descriptionProperty,
         identifier, ipVersion, kind, name, network, networkTier, prefixLength,
         purpose, region, selfLink, status, subnetwork, users;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList
//

@implementation GTLRCompute_AddressAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Items
//

@implementation GTLRCompute_AddressAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AddressesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Warning
//

@implementation GTLRCompute_AddressAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AddressAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList
//

@implementation GTLRCompute_AddressesScopedList
@dynamic addresses, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"addresses" : [GTLRCompute_Address class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList_Warning
//

@implementation GTLRCompute_AddressesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AddressesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList
//

@implementation GTLRCompute_AddressList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Address class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList_Warning
//

@implementation GTLRCompute_AddressList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList_Warning_Data_Item
//

@implementation GTLRCompute_AddressList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AliasIpRange
//

@implementation GTLRCompute_AliasIpRange
@dynamic ipCidrRange, subnetworkRangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDisk
//

@implementation GTLRCompute_AttachedDisk
@dynamic autoDelete, boot, deviceName, diskEncryptionKey, guestOsFeatures,
         index, initializeParams, interface, kind, licenses, mode, source, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDiskInitializeParams
//

@implementation GTLRCompute_AttachedDiskInitializeParams
@dynamic descriptionProperty, diskName, diskSizeGb, diskType, labels,
         sourceImage, sourceImageEncryptionKey;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDiskInitializeParams_Labels
//

@implementation GTLRCompute_AttachedDiskInitializeParams_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuditConfig
//

@implementation GTLRCompute_AuditConfig
@dynamic auditLogConfigs, exemptedMembers, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCompute_AuditLogConfig class],
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuditLogConfig
//

@implementation GTLRCompute_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuthorizationLoggingOptions
//

@implementation GTLRCompute_AuthorizationLoggingOptions
@dynamic permissionType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Autoscaler
//

@implementation GTLRCompute_Autoscaler
@dynamic autoscalingPolicy, creationTimestamp, descriptionProperty, identifier,
         kind, name, region, selfLink, status, statusDetails, target,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"statusDetails" : [GTLRCompute_AutoscalerStatusDetails class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList
//

@implementation GTLRCompute_AutoscalerAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Items
//

@implementation GTLRCompute_AutoscalerAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AutoscalersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Warning
//

@implementation GTLRCompute_AutoscalerAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList
//

@implementation GTLRCompute_AutoscalerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList_Warning
//

@implementation GTLRCompute_AutoscalerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList
//

@implementation GTLRCompute_AutoscalersScopedList
@dynamic autoscalers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoscalers" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList_Warning
//

@implementation GTLRCompute_AutoscalersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerStatusDetails
//

@implementation GTLRCompute_AutoscalerStatusDetails
@dynamic message, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicy
//

@implementation GTLRCompute_AutoscalingPolicy
@dynamic coolDownPeriodSec, cpuUtilization, customMetricUtilizations,
         loadBalancingUtilization, maxNumReplicas, minNumReplicas;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customMetricUtilizations" : [GTLRCompute_AutoscalingPolicyCustomMetricUtilization class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyCpuUtilization
//

@implementation GTLRCompute_AutoscalingPolicyCpuUtilization
@dynamic utilizationTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyCustomMetricUtilization
//

@implementation GTLRCompute_AutoscalingPolicyCustomMetricUtilization
@dynamic metric, utilizationTarget, utilizationTargetType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyLoadBalancingUtilization
//

@implementation GTLRCompute_AutoscalingPolicyLoadBalancingUtilization
@dynamic utilizationTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Backend
//

@implementation GTLRCompute_Backend
@dynamic balancingMode, capacityScaler, descriptionProperty, group,
         maxConnections, maxConnectionsPerInstance, maxRate, maxRatePerInstance,
         maxUtilization;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucket
//

@implementation GTLRCompute_BackendBucket
@dynamic bucketName, cdnPolicy, creationTimestamp, descriptionProperty,
         enableCdn, identifier, kind, name, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketCdnPolicy
//

@implementation GTLRCompute_BackendBucketCdnPolicy
@dynamic signedUrlCacheMaxAgeSec, signedUrlKeyNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signedUrlKeyNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList
//

@implementation GTLRCompute_BackendBucketList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_BackendBucket class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList_Warning
//

@implementation GTLRCompute_BackendBucketList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendBucketList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList_Warning_Data_Item
//

@implementation GTLRCompute_BackendBucketList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendService
//

@implementation GTLRCompute_BackendService
@dynamic affinityCookieTtlSec, backends, cdnPolicy, connectionDraining,
         creationTimestamp, descriptionProperty, enableCDN, fingerprint,
         healthChecks, iap, identifier, kind, loadBalancingScheme, name, port,
         portName, protocol, region, securityPolicy, selfLink, sessionAffinity,
         timeoutSec;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backends" : [GTLRCompute_Backend class],
    @"healthChecks" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList
//

@implementation GTLRCompute_BackendServiceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Items
//

@implementation GTLRCompute_BackendServiceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_BackendServicesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Warning
//

@implementation GTLRCompute_BackendServiceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceCdnPolicy
//

@implementation GTLRCompute_BackendServiceCdnPolicy
@dynamic cacheKeyPolicy, signedUrlCacheMaxAgeSec, signedUrlKeyNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signedUrlKeyNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceGroupHealth
//

@implementation GTLRCompute_BackendServiceGroupHealth
@dynamic healthStatus, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthStatus" : [GTLRCompute_HealthStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceIAP
//

@implementation GTLRCompute_BackendServiceIAP
@dynamic enabled, oauth2ClientId, oauth2ClientSecret, oauth2ClientSecretSha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList
//

@implementation GTLRCompute_BackendServiceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_BackendService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList_Warning
//

@implementation GTLRCompute_BackendServiceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServiceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServiceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList
//

@implementation GTLRCompute_BackendServicesScopedList
@dynamic backendServices, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backendServices" : [GTLRCompute_BackendService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList_Warning
//

@implementation GTLRCompute_BackendServicesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServicesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServicesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Binding
//

@implementation GTLRCompute_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CacheInvalidationRule
//

@implementation GTLRCompute_CacheInvalidationRule
@dynamic host, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CacheKeyPolicy
//

@implementation GTLRCompute_CacheKeyPolicy
@dynamic includeHost, includeProtocol, includeQueryString, queryStringBlacklist,
         queryStringWhitelist;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"queryStringBlacklist" : [NSString class],
    @"queryStringWhitelist" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Commitment
//

@implementation GTLRCompute_Commitment
@dynamic creationTimestamp, descriptionProperty, endTimestamp, identifier, kind,
         name, plan, region, resources, selfLink, startTimestamp, status,
         statusMessage;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRCompute_ResourceCommitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList
//

@implementation GTLRCompute_CommitmentAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Items
//

@implementation GTLRCompute_CommitmentAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_CommitmentsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Warning
//

@implementation GTLRCompute_CommitmentAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList
//

@implementation GTLRCompute_CommitmentList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Commitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList_Warning
//

@implementation GTLRCompute_CommitmentList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList
//

@implementation GTLRCompute_CommitmentsScopedList
@dynamic commitments, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"commitments" : [GTLRCompute_Commitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList_Warning
//

@implementation GTLRCompute_CommitmentsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Condition
//

@implementation GTLRCompute_Condition
@dynamic iam, op, svc, sys, value, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ConnectionDraining
//

@implementation GTLRCompute_ConnectionDraining
@dynamic drainingTimeoutSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CustomerEncryptionKey
//

@implementation GTLRCompute_CustomerEncryptionKey
@dynamic kmsKeyName, rawKey, sha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CustomerEncryptionKeyProtectedDisk
//

@implementation GTLRCompute_CustomerEncryptionKeyProtectedDisk
@dynamic diskEncryptionKey, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DeprecationStatus
//

@implementation GTLRCompute_DeprecationStatus
@dynamic deleted, deprecated, obsolete, replacement, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Disk
//

@implementation GTLRCompute_Disk
@dynamic creationTimestamp, descriptionProperty, diskEncryptionKey,
         guestOsFeatures, identifier, kind, labelFingerprint, labels,
         lastAttachTimestamp, lastDetachTimestamp, licenseCodes, licenses, name,
         options, physicalBlockSizeBytes, region, replicaZones, selfLink,
         sizeGb, sourceImage, sourceImageEncryptionKey, sourceImageId,
         sourceSnapshot, sourceSnapshotEncryptionKey, sourceSnapshotId, status,
         type, users, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class],
    @"replicaZones" : [NSString class],
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Disk_Labels
//

@implementation GTLRCompute_Disk_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList
//

@implementation GTLRCompute_DiskAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Items
//

@implementation GTLRCompute_DiskAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_DisksScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Warning
//

@implementation GTLRCompute_DiskAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskInstantiationConfig
//

@implementation GTLRCompute_DiskInstantiationConfig
@dynamic autoDelete, customImage, deviceName, instantiateFrom;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList
//

@implementation GTLRCompute_DiskList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Disk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList_Warning
//

@implementation GTLRCompute_DiskList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList_Warning_Data_Item
//

@implementation GTLRCompute_DiskList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskMoveRequest
//

@implementation GTLRCompute_DiskMoveRequest
@dynamic destinationZone, targetDisk;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksResizeRequest
//

@implementation GTLRCompute_DisksResizeRequest
@dynamic sizeGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList
//

@implementation GTLRCompute_DisksScopedList
@dynamic disks, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_Disk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList_Warning
//

@implementation GTLRCompute_DisksScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DisksScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList_Warning_Data_Item
//

@implementation GTLRCompute_DisksScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskType
//

@implementation GTLRCompute_DiskType
@dynamic creationTimestamp, defaultDiskSizeGb, deprecated, descriptionProperty,
         identifier, kind, name, region, selfLink, validDiskSize, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList
//

@implementation GTLRCompute_DiskTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Items
//

@implementation GTLRCompute_DiskTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_DiskTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Warning
//

@implementation GTLRCompute_DiskTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList
//

@implementation GTLRCompute_DiskTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList_Warning
//

@implementation GTLRCompute_DiskTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList
//

@implementation GTLRCompute_DiskTypesScopedList
@dynamic diskTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diskTypes" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList_Warning
//

@implementation GTLRCompute_DiskTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DistributionPolicy
//

@implementation GTLRCompute_DistributionPolicy
@dynamic zones;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"zones" : [GTLRCompute_DistributionPolicyZoneConfiguration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DistributionPolicyZoneConfiguration
//

@implementation GTLRCompute_DistributionPolicyZoneConfiguration
@dynamic zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Expr
//

@implementation GTLRCompute_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall
//

@implementation GTLRCompute_Firewall
@dynamic allowed, creationTimestamp, denied, descriptionProperty,
         destinationRanges, direction, disabled, identifier, kind, logConfig,
         name, network, priority, selfLink, sourceRanges, sourceServiceAccounts,
         sourceTags, targetServiceAccounts, targetTags;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowed" : [GTLRCompute_Firewall_Allowed_Item class],
    @"denied" : [GTLRCompute_Firewall_Denied_Item class],
    @"destinationRanges" : [NSString class],
    @"sourceRanges" : [NSString class],
    @"sourceServiceAccounts" : [NSString class],
    @"sourceTags" : [NSString class],
    @"targetServiceAccounts" : [NSString class],
    @"targetTags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall_Allowed_Item
//

@implementation GTLRCompute_Firewall_Allowed_Item
@dynamic IPProtocol, ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall_Denied_Item
//

@implementation GTLRCompute_Firewall_Denied_Item
@dynamic IPProtocol, ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList
//

@implementation GTLRCompute_FirewallList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Firewall class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList_Warning
//

@implementation GTLRCompute_FirewallList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_FirewallList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList_Warning_Data_Item
//

@implementation GTLRCompute_FirewallList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallLogConfig
//

@implementation GTLRCompute_FirewallLogConfig
@dynamic enable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FixedOrPercent
//

@implementation GTLRCompute_FixedOrPercent
@dynamic calculated, fixed, percent;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRule
//

@implementation GTLRCompute_ForwardingRule
@dynamic backendService, creationTimestamp, descriptionProperty, identifier,
         IPAddress, IPProtocol, ipVersion, kind, loadBalancingScheme, name,
         network, networkTier, portRange, ports, region, selfLink, serviceLabel,
         serviceName, subnetwork, target;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList
//

@implementation GTLRCompute_ForwardingRuleAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Items
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ForwardingRulesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Warning
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList
//

@implementation GTLRCompute_ForwardingRuleList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ForwardingRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList_Warning
//

@implementation GTLRCompute_ForwardingRuleList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRuleList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRuleList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList
//

@implementation GTLRCompute_ForwardingRulesScopedList
@dynamic forwardingRules, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"forwardingRules" : [GTLRCompute_ForwardingRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList_Warning
//

@implementation GTLRCompute_ForwardingRulesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetLabelsRequest
//

@implementation GTLRCompute_GlobalSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetLabelsRequest_Labels
//

@implementation GTLRCompute_GlobalSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetPolicyRequest
//

@implementation GTLRCompute_GlobalSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GuestOsFeature
//

@implementation GTLRCompute_GuestOsFeature
@dynamic type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheck
//

@implementation GTLRCompute_HealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         healthyThreshold, httpHealthCheck, httpsHealthCheck, identifier, kind,
         name, selfLink, sslHealthCheck, tcpHealthCheck, timeoutSec, type,
         unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList
//

@implementation GTLRCompute_HealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList_Warning
//

@implementation GTLRCompute_HealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckReference
//

@implementation GTLRCompute_HealthCheckReference
@dynamic healthCheck;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthStatus
//

@implementation GTLRCompute_HealthStatus
@dynamic healthState, instance, ipAddress, port;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HostRule
//

@implementation GTLRCompute_HostRule
@dynamic descriptionProperty, hosts, pathMatcher;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hosts" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheck
//

@implementation GTLRCompute_HttpHealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         healthyThreshold, host, identifier, kind, name, port, requestPath,
         selfLink, timeoutSec, unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HTTPHealthCheck
//

@implementation GTLRCompute_HTTPHealthCheck
@dynamic host, port, portName, proxyHeader, requestPath, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList
//

@implementation GTLRCompute_HttpHealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HttpHealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList_Warning
//

@implementation GTLRCompute_HttpHealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HttpHealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HttpHealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HTTPSHealthCheck
//

@implementation GTLRCompute_HTTPSHealthCheck
@dynamic host, port, portName, proxyHeader, requestPath, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheck
//

@implementation GTLRCompute_HttpsHealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         healthyThreshold, host, identifier, kind, name, port, requestPath,
         selfLink, timeoutSec, unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList
//

@implementation GTLRCompute_HttpsHealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HttpsHealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList_Warning
//

@implementation GTLRCompute_HttpsHealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HttpsHealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HttpsHealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image
//

@implementation GTLRCompute_Image
@dynamic archiveSizeBytes, creationTimestamp, deprecated, descriptionProperty,
         diskSizeGb, family, guestOsFeatures, identifier, imageEncryptionKey,
         kind, labelFingerprint, labels, licenseCodes, licenses, name, rawDisk,
         selfLink, sourceDisk, sourceDiskEncryptionKey, sourceDiskId,
         sourceImage, sourceImageEncryptionKey, sourceImageId, sourceSnapshot,
         sourceSnapshotEncryptionKey, sourceSnapshotId, sourceType, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image_Labels
//

@implementation GTLRCompute_Image_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image_RawDisk
//

@implementation GTLRCompute_Image_RawDisk
@dynamic containerType, sha1Checksum, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList
//

@implementation GTLRCompute_ImageList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Image class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList_Warning
//

@implementation GTLRCompute_ImageList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ImageList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList_Warning_Data_Item
//

@implementation GTLRCompute_ImageList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Instance
//

@implementation GTLRCompute_Instance
@dynamic canIpForward, cpuPlatform, creationTimestamp, deletionProtection,
         descriptionProperty, disks, guestAccelerators, hostname, identifier,
         kind, labelFingerprint, labels, machineType, metadata, minCpuPlatform,
         name, networkInterfaces, scheduling, selfLink, serviceAccounts,
         startRestricted, status, statusMessage, tags, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_AttachedDisk class],
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"networkInterfaces" : [GTLRCompute_NetworkInterface class],
    @"serviceAccounts" : [GTLRCompute_ServiceAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Instance_Labels
//

@implementation GTLRCompute_Instance_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList
//

@implementation GTLRCompute_InstanceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Items
//

@implementation GTLRCompute_InstanceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstancesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Warning
//

@implementation GTLRCompute_InstanceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroup
//

@implementation GTLRCompute_InstanceGroup
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, namedPorts, network, region, selfLink, size, subnetwork,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList
//

@implementation GTLRCompute_InstanceGroupAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Items
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstanceGroupsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Warning
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList
//

@implementation GTLRCompute_InstanceGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList_Warning
//

@implementation GTLRCompute_InstanceGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManager
//

@implementation GTLRCompute_InstanceGroupManager
@dynamic autoHealingPolicies, baseInstanceName, creationTimestamp,
         currentActions, descriptionProperty, distributionPolicy, fingerprint,
         identifier, instanceGroup, instanceTemplate, kind, name, namedPorts,
         region, selfLink, status, targetPools, targetSize, updatePolicy,
         versions, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoHealingPolicies" : [GTLRCompute_InstanceGroupManagerAutoHealingPolicy class],
    @"namedPorts" : [GTLRCompute_NamedPort class],
    @"targetPools" : [NSString class],
    @"versions" : [GTLRCompute_InstanceGroupManagerVersion class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerActionsSummary
//

@implementation GTLRCompute_InstanceGroupManagerActionsSummary
@dynamic abandoning, creating, creatingWithoutRetries, deleting, none,
         recreating, refreshing, restarting, verifying;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Items
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstanceGroupManagersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Warning
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAutoHealingPolicy
//

@implementation GTLRCompute_InstanceGroupManagerAutoHealingPolicy
@dynamic healthCheck, initialDelaySec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList
//

@implementation GTLRCompute_InstanceGroupManagerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList_Warning
//

@implementation GTLRCompute_InstanceGroupManagerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersAbandonInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersAbandonInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersDeleteInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersDeleteInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListManagedInstancesResponse
//

@implementation GTLRCompute_InstanceGroupManagersListManagedInstancesResponse
@dynamic managedInstances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"managedInstances" : [GTLRCompute_ManagedInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersRecreateInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersRecreateInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList
//

@implementation GTLRCompute_InstanceGroupManagersScopedList
@dynamic instanceGroupManagers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceGroupManagers" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList_Warning
//

@implementation GTLRCompute_InstanceGroupManagersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest
//

@implementation GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest
@dynamic instanceTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest
//

@implementation GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest
@dynamic fingerprint, targetPools;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerStatus
//

@implementation GTLRCompute_InstanceGroupManagerStatus
@dynamic isStable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerUpdatePolicy
//

@implementation GTLRCompute_InstanceGroupManagerUpdatePolicy
@dynamic maxSurge, maxUnavailable, minimalAction, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerVersion
//

@implementation GTLRCompute_InstanceGroupManagerVersion
@dynamic instanceTemplate, name, targetSize;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsAddInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsAddInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances
//

@implementation GTLRCompute_InstanceGroupsListInstances
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceWithNamedPorts class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances_Warning
//

@implementation GTLRCompute_InstanceGroupsListInstances_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsListInstancesRequest
@dynamic instanceState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsRemoveInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsRemoveInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList
//

@implementation GTLRCompute_InstanceGroupsScopedList
@dynamic instanceGroups, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceGroups" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList_Warning
//

@implementation GTLRCompute_InstanceGroupsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsSetNamedPortsRequest
//

@implementation GTLRCompute_InstanceGroupsSetNamedPortsRequest
@dynamic fingerprint, namedPorts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList
//

@implementation GTLRCompute_InstanceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Instance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList_Warning
//

@implementation GTLRCompute_InstanceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers
//

@implementation GTLRCompute_InstanceListReferrers
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Reference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers_Warning
//

@implementation GTLRCompute_InstanceListReferrers_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceListReferrers_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers_Warning_Data_Item
//

@implementation GTLRCompute_InstanceListReferrers_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceMoveRequest
//

@implementation GTLRCompute_InstanceMoveRequest
@dynamic destinationZone, targetInstance;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceProperties
//

@implementation GTLRCompute_InstanceProperties
@dynamic canIpForward, descriptionProperty, disks, guestAccelerators, labels,
         machineType, metadata, minCpuPlatform, networkInterfaces, scheduling,
         serviceAccounts, tags;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_AttachedDisk class],
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"networkInterfaces" : [GTLRCompute_NetworkInterface class],
    @"serviceAccounts" : [GTLRCompute_ServiceAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceProperties_Labels
//

@implementation GTLRCompute_InstanceProperties_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceReference
//

@implementation GTLRCompute_InstanceReference
@dynamic instance;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList
//

@implementation GTLRCompute_InstancesScopedList
@dynamic instances, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_Instance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList_Warning
//

@implementation GTLRCompute_InstancesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstancesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstancesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetLabelsRequest
//

@implementation GTLRCompute_InstancesSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetLabelsRequest_Labels
//

@implementation GTLRCompute_InstancesSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMachineResourcesRequest
//

@implementation GTLRCompute_InstancesSetMachineResourcesRequest
@dynamic guestAccelerators;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMachineTypeRequest
//

@implementation GTLRCompute_InstancesSetMachineTypeRequest
@dynamic machineType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMinCpuPlatformRequest
//

@implementation GTLRCompute_InstancesSetMinCpuPlatformRequest
@dynamic minCpuPlatform;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetServiceAccountRequest
//

@implementation GTLRCompute_InstancesSetServiceAccountRequest
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesStartWithEncryptionKeyRequest
//

@implementation GTLRCompute_InstancesStartWithEncryptionKeyRequest
@dynamic disks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_CustomerEncryptionKeyProtectedDisk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplate
//

@implementation GTLRCompute_InstanceTemplate
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         properties, selfLink, sourceInstance, sourceInstanceParams;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList
//

@implementation GTLRCompute_InstanceTemplateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList_Warning
//

@implementation GTLRCompute_InstanceTemplateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceTemplateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceTemplateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceWithNamedPorts
//

@implementation GTLRCompute_InstanceWithNamedPorts
@dynamic instance, namedPorts, status;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Interconnect
//

@implementation GTLRCompute_Interconnect
@dynamic adminEnabled, circuitInfos, creationTimestamp, customerName,
         descriptionProperty, expectedOutages, googleIpAddress,
         googleReferenceId, identifier, interconnectAttachments,
         interconnectType, kind, linkType, location, name, nocContactEmail,
         operationalStatus, peerIpAddress, provisionedLinkCount,
         requestedLinkCount, selfLink, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"circuitInfos" : [GTLRCompute_InterconnectCircuitInfo class],
    @"expectedOutages" : [GTLRCompute_InterconnectOutageNotification class],
    @"interconnectAttachments" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachment
//

@implementation GTLRCompute_InterconnectAttachment
@dynamic adminEnabled, bandwidth, candidateSubnets, cloudRouterIpAddress,
         creationTimestamp, customerRouterIpAddress, descriptionProperty,
         edgeAvailabilityDomain, googleReferenceId, identifier, interconnect,
         kind, name, operationalStatus, pairingKey, partnerAsn, partnerMetadata,
         privateInterconnectInfo, region, router, selfLink, state, type,
         vlanTag8021q;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"candidateSubnets" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Items
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InterconnectAttachmentsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList
//

@implementation GTLRCompute_InterconnectAttachmentList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InterconnectAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentPartnerMetadata
//

@implementation GTLRCompute_InterconnectAttachmentPartnerMetadata
@dynamic interconnectName, partnerName, portalUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentPrivateInfo
//

@implementation GTLRCompute_InterconnectAttachmentPrivateInfo
@dynamic tag8021q;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList
@dynamic interconnectAttachments, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"interconnectAttachments" : [GTLRCompute_InterconnectAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectCircuitInfo
//

@implementation GTLRCompute_InterconnectCircuitInfo
@dynamic customerDemarcId, googleCircuitId, googleDemarcId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnostics
//

@implementation GTLRCompute_InterconnectDiagnostics
@dynamic arpCaches, links, macAddress;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arpCaches" : [GTLRCompute_InterconnectDiagnosticsARPEntry class],
    @"links" : [GTLRCompute_InterconnectDiagnosticsLinkStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsARPEntry
//

@implementation GTLRCompute_InterconnectDiagnosticsARPEntry
@dynamic ipAddress, macAddress;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkLACPStatus
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkLACPStatus
@dynamic googleSystemId, neighborSystemId, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkOpticalPower
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkOpticalPower
@dynamic state, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkStatus
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkStatus
@dynamic arpCaches, circuitId, googleDemarc, lacpStatus, receivingOpticalPower,
         transmittingOpticalPower;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arpCaches" : [GTLRCompute_InterconnectDiagnosticsARPEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList
//

@implementation GTLRCompute_InterconnectList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Interconnect class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList_Warning
//

@implementation GTLRCompute_InterconnectList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocation
//

@implementation GTLRCompute_InterconnectLocation
@dynamic address, availabilityZone, city, continent, creationTimestamp,
         descriptionProperty, facilityProvider, facilityProviderFacilityId,
         identifier, kind, name, peeringdbFacilityId, regionInfos, selfLink,
         status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"regionInfos" : [GTLRCompute_InterconnectLocationRegionInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList
//

@implementation GTLRCompute_InterconnectLocationList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InterconnectLocation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList_Warning
//

@implementation GTLRCompute_InterconnectLocationList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectLocationList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectLocationList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationRegionInfo
//

@implementation GTLRCompute_InterconnectLocationRegionInfo
@dynamic expectedRttMs, locationPresence, region;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectOutageNotification
//

@implementation GTLRCompute_InterconnectOutageNotification
@dynamic affectedCircuits, descriptionProperty, endTime, issueType, name,
         source, startTime, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"affectedCircuits" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectsGetDiagnosticsResponse
//

@implementation GTLRCompute_InterconnectsGetDiagnosticsResponse
@dynamic result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_License
//

@implementation GTLRCompute_License
@dynamic chargesUseFee, creationTimestamp, descriptionProperty, identifier,
         kind, licenseCode, name, resourceRequirements, selfLink, transferable;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseCode
//

@implementation GTLRCompute_LicenseCode
@dynamic creationTimestamp, descriptionProperty, identifier, kind, licenseAlias,
         name, selfLink, state, transferable;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenseAlias" : [GTLRCompute_LicenseCodeLicenseAlias class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseCodeLicenseAlias
//

@implementation GTLRCompute_LicenseCodeLicenseAlias
@dynamic descriptionProperty, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseResourceRequirements
//

@implementation GTLRCompute_LicenseResourceRequirements
@dynamic minGuestCpuCount, minMemoryMb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse
//

@implementation GTLRCompute_LicensesListResponse
@dynamic identifier, items, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_License class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse_Warning
//

@implementation GTLRCompute_LicensesListResponse_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_LicensesListResponse_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse_Warning_Data_Item
//

@implementation GTLRCompute_LicensesListResponse_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfig
//

@implementation GTLRCompute_LogConfig
@dynamic cloudAudit, counter, dataAccess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigCloudAuditOptions
//

@implementation GTLRCompute_LogConfigCloudAuditOptions
@dynamic authorizationLoggingOptions, logName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigCounterOptions
//

@implementation GTLRCompute_LogConfigCounterOptions
@dynamic field, metric;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigDataAccessOptions
//

@implementation GTLRCompute_LogConfigDataAccessOptions
@dynamic logMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineType
//

@implementation GTLRCompute_MachineType
@dynamic creationTimestamp, deprecated, descriptionProperty, guestCpus,
         identifier, imageSpaceGb, isSharedCpu, kind, maximumPersistentDisks,
         maximumPersistentDisksSizeGb, memoryMb, name, scratchDisks, selfLink,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scratchDisks" : [GTLRCompute_MachineType_ScratchDisks_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineType_ScratchDisks_Item
//

@implementation GTLRCompute_MachineType_ScratchDisks_Item
@dynamic diskGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList
//

@implementation GTLRCompute_MachineTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Items
//

@implementation GTLRCompute_MachineTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_MachineTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Warning
//

@implementation GTLRCompute_MachineTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList
//

@implementation GTLRCompute_MachineTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_MachineType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList_Warning
//

@implementation GTLRCompute_MachineTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList
//

@implementation GTLRCompute_MachineTypesScopedList
@dynamic machineTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"machineTypes" : [GTLRCompute_MachineType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList_Warning
//

@implementation GTLRCompute_MachineTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstance
//

@implementation GTLRCompute_ManagedInstance
@dynamic currentAction, identifier, instance, instanceStatus, lastAttempt;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt
//

@implementation GTLRCompute_ManagedInstanceLastAttempt
@dynamic errors;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt_Errors
//

@implementation GTLRCompute_ManagedInstanceLastAttempt_Errors
@dynamic errors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item
//

@implementation GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item
@dynamic code, location, message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Metadata
//

@implementation GTLRCompute_Metadata
@dynamic fingerprint, items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Metadata_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Metadata_Items_Item
//

@implementation GTLRCompute_Metadata_Items_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NamedPort
//

@implementation GTLRCompute_NamedPort
@dynamic name, port;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Network
//

@implementation GTLRCompute_Network
@dynamic autoCreateSubnetworks, creationTimestamp, descriptionProperty,
         gatewayIPv4, identifier, IPv4Range, kind, name, peerings,
         routingConfig, selfLink, subnetworks;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"peerings" : [GTLRCompute_NetworkPeering class],
    @"subnetworks" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkInterface
//

@implementation GTLRCompute_NetworkInterface
@dynamic accessConfigs, aliasIpRanges, fingerprint, kind, name, network,
         networkIP, subnetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessConfigs" : [GTLRCompute_AccessConfig class],
    @"aliasIpRanges" : [GTLRCompute_AliasIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList
//

@implementation GTLRCompute_NetworkList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Network class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList_Warning
//

@implementation GTLRCompute_NetworkList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkPeering
//

@implementation GTLRCompute_NetworkPeering
@dynamic autoCreateRoutes, name, network, state, stateDetails;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkRoutingConfig
//

@implementation GTLRCompute_NetworkRoutingConfig
@dynamic routingMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksAddPeeringRequest
//

@implementation GTLRCompute_NetworksAddPeeringRequest
@dynamic autoCreateRoutes, name, peerNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksRemovePeeringRequest
//

@implementation GTLRCompute_NetworksRemovePeeringRequest
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroup
//

@implementation GTLRCompute_NodeGroup
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         nodeTemplate, selfLink, size, status, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList
//

@implementation GTLRCompute_NodeGroupAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Items
//

@implementation GTLRCompute_NodeGroupAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeGroupsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Warning
//

@implementation GTLRCompute_NodeGroupAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList
//

@implementation GTLRCompute_NodeGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList_Warning
//

@implementation GTLRCompute_NodeGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupNode
//

@implementation GTLRCompute_NodeGroupNode
@dynamic instances, name, nodeType, status;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsAddNodesRequest
//

@implementation GTLRCompute_NodeGroupsAddNodesRequest
@dynamic additionalNodeCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsDeleteNodesRequest
//

@implementation GTLRCompute_NodeGroupsDeleteNodesRequest
@dynamic nodes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes
//

@implementation GTLRCompute_NodeGroupsListNodes
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeGroupNode class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes_Warning
//

@implementation GTLRCompute_NodeGroupsListNodes_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupsListNodes_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupsListNodes_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList
//

@implementation GTLRCompute_NodeGroupsScopedList
@dynamic nodeGroups, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeGroups" : [GTLRCompute_NodeGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList_Warning
//

@implementation GTLRCompute_NodeGroupsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsSetNodeTemplateRequest
//

@implementation GTLRCompute_NodeGroupsSetNodeTemplateRequest
@dynamic nodeTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplate
//

@implementation GTLRCompute_NodeTemplate
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         nodeAffinityLabels, nodeType, nodeTypeFlexibility, region, selfLink,
         status, statusMessage;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplate_NodeAffinityLabels
//

@implementation GTLRCompute_NodeTemplate_NodeAffinityLabels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList
//

@implementation GTLRCompute_NodeTemplateAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Items
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeTemplatesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Warning
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList
//

@implementation GTLRCompute_NodeTemplateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList_Warning
//

@implementation GTLRCompute_NodeTemplateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateNodeTypeFlexibility
//

@implementation GTLRCompute_NodeTemplateNodeTypeFlexibility
@dynamic cpus, localSsd, memory;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList
//

@implementation GTLRCompute_NodeTemplatesScopedList
@dynamic nodeTemplates, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeTemplates" : [GTLRCompute_NodeTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList_Warning
//

@implementation GTLRCompute_NodeTemplatesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeType
//

@implementation GTLRCompute_NodeType
@dynamic cpuPlatform, creationTimestamp, deprecated, descriptionProperty,
         guestCpus, identifier, kind, localSsdGb, memoryMb, name, selfLink,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList
//

@implementation GTLRCompute_NodeTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Items
//

@implementation GTLRCompute_NodeTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Warning
//

@implementation GTLRCompute_NodeTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList
//

@implementation GTLRCompute_NodeTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList_Warning
//

@implementation GTLRCompute_NodeTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList
//

@implementation GTLRCompute_NodeTypesScopedList
@dynamic nodeTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeTypes" : [GTLRCompute_NodeType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList_Warning
//

@implementation GTLRCompute_NodeTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation
//

@implementation GTLRCompute_Operation
@dynamic clientOperationId, creationTimestamp, descriptionProperty, endTime,
         error, httpErrorMessage, httpErrorStatusCode, identifier, insertTime,
         kind, name, operationType, progress, region, selfLink, startTime,
         status, statusMessage, targetId, targetLink, user, warnings,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"warnings" : [GTLRCompute_Operation_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Error
//

@implementation GTLRCompute_Operation_Error
@dynamic errors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRCompute_Operation_Error_Errors_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Warnings_Item
//

@implementation GTLRCompute_Operation_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_Operation_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Error_Errors_Item
//

@implementation GTLRCompute_Operation_Error_Errors_Item
@dynamic code, location, message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Warnings_Item_Data_Item
//

@implementation GTLRCompute_Operation_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList
//

@implementation GTLRCompute_OperationAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Items
//

@implementation GTLRCompute_OperationAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_OperationsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Warning
//

@implementation GTLRCompute_OperationAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_OperationAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList
//

@implementation GTLRCompute_OperationList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Operation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList_Warning
//

@implementation GTLRCompute_OperationList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList_Warning_Data_Item
//

@implementation GTLRCompute_OperationList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList
//

@implementation GTLRCompute_OperationsScopedList
@dynamic operations, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCompute_Operation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList_Warning
//

@implementation GTLRCompute_OperationsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_OperationsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PathMatcher
//

@implementation GTLRCompute_PathMatcher
@dynamic defaultService, descriptionProperty, name, pathRules;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pathRules" : [GTLRCompute_PathRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PathRule
//

@implementation GTLRCompute_PathRule
@dynamic paths, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"paths" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Policy
//

@implementation GTLRCompute_Policy
@dynamic auditConfigs, bindings, ETag, iamOwned, rules, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCompute_AuditConfig class],
    @"bindings" : [GTLRCompute_Binding class],
    @"rules" : [GTLRCompute_Rule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Project
//

@implementation GTLRCompute_Project
@dynamic commonInstanceMetadata, creationTimestamp, defaultNetworkTier,
         defaultServiceAccount, descriptionProperty, enabledFeatures,
         identifier, kind, name, quotas, selfLink, usageExportLocation,
         xpnProjectStatus;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enabledFeatures" : [NSString class],
    @"quotas" : [GTLRCompute_Quota class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsDisableXpnResourceRequest
//

@implementation GTLRCompute_ProjectsDisableXpnResourceRequest
@dynamic xpnResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsEnableXpnResourceRequest
//

@implementation GTLRCompute_ProjectsEnableXpnResourceRequest
@dynamic xpnResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsGetXpnResources
//

@implementation GTLRCompute_ProjectsGetXpnResources
@dynamic kind, nextPageToken, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRCompute_XpnResourceId class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"resources";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsListXpnHostsRequest
//

@implementation GTLRCompute_ProjectsListXpnHostsRequest
@dynamic organization;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsSetDefaultNetworkTierRequest
//

@implementation GTLRCompute_ProjectsSetDefaultNetworkTierRequest
@dynamic networkTier;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Quota
//

@implementation GTLRCompute_Quota
@dynamic limit, metric, owner, usage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Reference
//

@implementation GTLRCompute_Reference
@dynamic kind, referenceType, referrer, target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Region
//

@implementation GTLRCompute_Region
@dynamic creationTimestamp, deprecated, descriptionProperty, identifier, kind,
         name, quotas, selfLink, status, zones;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"quotas" : [GTLRCompute_Quota class],
    @"zones" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList
//

@implementation GTLRCompute_RegionAutoscalerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList_Warning
//

@implementation GTLRCompute_RegionAutoscalerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionAutoscalerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList_Warning_Data_Item
//

@implementation GTLRCompute_RegionAutoscalerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDisksResizeRequest
//

@implementation GTLRCompute_RegionDisksResizeRequest
@dynamic sizeGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList
//

@implementation GTLRCompute_RegionDiskTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList_Warning
//

@implementation GTLRCompute_RegionDiskTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionDiskTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList_Warning_Data_Item
//

@implementation GTLRCompute_RegionDiskTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList
//

@implementation GTLRCompute_RegionInstanceGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList_Warning
//

@implementation GTLRCompute_RegionInstanceGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList
//

@implementation GTLRCompute_RegionInstanceGroupManagerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList_Warning
//

@implementation GTLRCompute_RegionInstanceGroupManagerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListInstancesResponse
//

@implementation GTLRCompute_RegionInstanceGroupManagersListInstancesResponse
@dynamic managedInstances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"managedInstances" : [GTLRCompute_ManagedInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersRecreateRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersRecreateRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest
@dynamic fingerprint, targetPools;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest
@dynamic instanceTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceWithNamedPorts class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances_Warning
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupsListInstancesRequest
@dynamic instanceState, portName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest
//

@implementation GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest
@dynamic fingerprint, namedPorts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList
//

@implementation GTLRCompute_RegionList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Region class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList_Warning
//

@implementation GTLRCompute_RegionList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList_Warning_Data_Item
//

@implementation GTLRCompute_RegionList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetLabelsRequest
//

@implementation GTLRCompute_RegionSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetLabelsRequest_Labels
//

@implementation GTLRCompute_RegionSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetPolicyRequest
//

@implementation GTLRCompute_RegionSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourceCommitment
//

@implementation GTLRCompute_ResourceCommitment
@dynamic amount, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourceGroupReference
//

@implementation GTLRCompute_ResourceGroupReference
@dynamic group;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route
//

@implementation GTLRCompute_Route
@dynamic creationTimestamp, descriptionProperty, destRange, identifier, kind,
         name, network, nextHopGateway, nextHopInstance, nextHopIp,
         nextHopNetwork, nextHopPeering, nextHopVpnTunnel, priority, selfLink,
         tags, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tags" : [NSString class],
    @"warnings" : [GTLRCompute_Route_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route_Warnings_Item
//

@implementation GTLRCompute_Route_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_Route_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route_Warnings_Item_Data_Item
//

@implementation GTLRCompute_Route_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList
//

@implementation GTLRCompute_RouteList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Route class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList_Warning
//

@implementation GTLRCompute_RouteList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouteList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList_Warning_Data_Item
//

@implementation GTLRCompute_RouteList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Router
//

@implementation GTLRCompute_Router
@dynamic bgp, bgpPeers, creationTimestamp, descriptionProperty, identifier,
         interfaces, kind, name, nats, network, region, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bgpPeers" : [GTLRCompute_RouterBgpPeer class],
    @"interfaces" : [GTLRCompute_RouterInterface class],
    @"nats" : [GTLRCompute_RouterNat class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAdvertisedIpRange
//

@implementation GTLRCompute_RouterAdvertisedIpRange
@dynamic descriptionProperty, range;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList
//

@implementation GTLRCompute_RouterAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Items
//

@implementation GTLRCompute_RouterAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_RoutersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Warning
//

@implementation GTLRCompute_RouterAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouterAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_RouterAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterBgp
//

@implementation GTLRCompute_RouterBgp
@dynamic advertisedGroups, advertisedIpRanges, advertiseMode, asn;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedGroups" : [NSString class],
    @"advertisedIpRanges" : [GTLRCompute_RouterAdvertisedIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterBgpPeer
//

@implementation GTLRCompute_RouterBgpPeer
@dynamic advertisedGroups, advertisedIpRanges, advertisedRoutePriority,
         advertiseMode, interfaceName, ipAddress, managementType, name, peerAsn,
         peerIpAddress;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedGroups" : [NSString class],
    @"advertisedIpRanges" : [GTLRCompute_RouterAdvertisedIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterInterface
//

@implementation GTLRCompute_RouterInterface
@dynamic ipRange, linkedInterconnectAttachment, linkedVpnTunnel, managementType,
         name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList
//

@implementation GTLRCompute_RouterList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Router class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList_Warning
//

@implementation GTLRCompute_RouterList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouterList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList_Warning_Data_Item
//

@implementation GTLRCompute_RouterList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNat
//

@implementation GTLRCompute_RouterNat
@dynamic icmpIdleTimeoutSec, minPortsPerVm, name, natIpAllocateOption, natIps,
         sourceSubnetworkIpRangesToNat, subnetworks,
         tcpEstablishedIdleTimeoutSec, tcpTransitoryIdleTimeoutSec,
         udpIdleTimeoutSec;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"natIps" : [NSString class],
    @"subnetworks" : [GTLRCompute_RouterNatSubnetworkToNat class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNatSubnetworkToNat
//

@implementation GTLRCompute_RouterNatSubnetworkToNat
@dynamic name, secondaryIpRangeNames, sourceIpRangesToNat;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRangeNames" : [NSString class],
    @"sourceIpRangesToNat" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersPreviewResponse
//

@implementation GTLRCompute_RoutersPreviewResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList
//

@implementation GTLRCompute_RoutersScopedList
@dynamic routers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routers" : [GTLRCompute_Router class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList_Warning
//

@implementation GTLRCompute_RoutersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RoutersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_RoutersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatus
//

@implementation GTLRCompute_RouterStatus
@dynamic bestRoutes, bestRoutesForRouter, bgpPeerStatus, natStatus, network;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bestRoutes" : [GTLRCompute_Route class],
    @"bestRoutesForRouter" : [GTLRCompute_Route class],
    @"bgpPeerStatus" : [GTLRCompute_RouterStatusBgpPeerStatus class],
    @"natStatus" : [GTLRCompute_RouterStatusNatStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusBgpPeerStatus
//

@implementation GTLRCompute_RouterStatusBgpPeerStatus
@dynamic advertisedRoutes, ipAddress, linkedVpnTunnel, name, numLearnedRoutes,
         peerIpAddress, state, status, uptime, uptimeSeconds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedRoutes" : [GTLRCompute_Route class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusNatStatus
//

@implementation GTLRCompute_RouterStatusNatStatus
@dynamic autoAllocatedNatIps, minExtraNatIpsNeeded, name,
         numVmEndpointsWithNatMappings, userAllocatedNatIpResources,
         userAllocatedNatIps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoAllocatedNatIps" : [NSString class],
    @"userAllocatedNatIpResources" : [NSString class],
    @"userAllocatedNatIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusResponse
//

@implementation GTLRCompute_RouterStatusResponse
@dynamic kind, result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Rule
//

@implementation GTLRCompute_Rule
@dynamic action, conditions, descriptionProperty, ins, logConfigs, notIns,
         permissions;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCompute_Condition class],
    @"ins" : [NSString class],
    @"logConfigs" : [GTLRCompute_LogConfig class],
    @"notIns" : [NSString class],
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Scheduling
//

@implementation GTLRCompute_Scheduling
@dynamic automaticRestart, nodeAffinities, onHostMaintenance, preemptible;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeAffinities" : [GTLRCompute_SchedulingNodeAffinity class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SchedulingNodeAffinity
//

@implementation GTLRCompute_SchedulingNodeAffinity
@dynamic key, operatorProperty, values;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"operatorProperty" : @"operator" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicy
//

@implementation GTLRCompute_SecurityPolicy
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, rules, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCompute_SecurityPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList
//

@implementation GTLRCompute_SecurityPolicyList
@dynamic identifier, items, kind, nextPageToken, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SecurityPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList_Warning
//

@implementation GTLRCompute_SecurityPolicyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SecurityPolicyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList_Warning_Data_Item
//

@implementation GTLRCompute_SecurityPolicyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyReference
//

@implementation GTLRCompute_SecurityPolicyReference
@dynamic securityPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRule
//

@implementation GTLRCompute_SecurityPolicyRule
@dynamic action, descriptionProperty, kind, match, preview, priority;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleMatcher
//

@implementation GTLRCompute_SecurityPolicyRuleMatcher
@dynamic config, versionedExpr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleMatcherConfig
//

@implementation GTLRCompute_SecurityPolicyRuleMatcherConfig
@dynamic srcIpRanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"srcIpRanges" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SerialPortOutput
//

@implementation GTLRCompute_SerialPortOutput
@dynamic contents, kind, next, selfLink, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAccount
//

@implementation GTLRCompute_ServiceAccount
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SignedUrlKey
//

@implementation GTLRCompute_SignedUrlKey
@dynamic keyName, keyValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Snapshot
//

@implementation GTLRCompute_Snapshot
@dynamic creationTimestamp, descriptionProperty, diskSizeGb, identifier, kind,
         labelFingerprint, labels, licenseCodes, licenses, name, selfLink,
         snapshotEncryptionKey, sourceDisk, sourceDiskEncryptionKey,
         sourceDiskId, status, storageBytes, storageBytesStatus;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Snapshot_Labels
//

@implementation GTLRCompute_Snapshot_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList
//

@implementation GTLRCompute_SnapshotList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Snapshot class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList_Warning
//

@implementation GTLRCompute_SnapshotList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SnapshotList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList_Warning_Data_Item
//

@implementation GTLRCompute_SnapshotList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SourceInstanceParams
//

@implementation GTLRCompute_SourceInstanceParams
@dynamic diskConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diskConfigs" : [GTLRCompute_DiskInstantiationConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificate
//

@implementation GTLRCompute_SslCertificate
@dynamic certificate, creationTimestamp, descriptionProperty, identifier, kind,
         name, privateKey, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList
//

@implementation GTLRCompute_SslCertificateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SslCertificate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList_Warning
//

@implementation GTLRCompute_SslCertificateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslCertificateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList_Warning_Data_Item
//

@implementation GTLRCompute_SslCertificateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SSLHealthCheck
//

@implementation GTLRCompute_SSLHealthCheck
@dynamic port, portName, proxyHeader, request, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList
//

@implementation GTLRCompute_SslPoliciesList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SslPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList_Warning
//

@implementation GTLRCompute_SslPoliciesList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPoliciesList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList_Warning_Data_Item
//

@implementation GTLRCompute_SslPoliciesList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesListAvailableFeaturesResponse
//

@implementation GTLRCompute_SslPoliciesListAvailableFeaturesResponse
@dynamic features;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"features" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy
//

@implementation GTLRCompute_SslPolicy
@dynamic creationTimestamp, customFeatures, descriptionProperty,
         enabledFeatures, fingerprint, identifier, kind, minTlsVersion, name,
         profile, selfLink, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customFeatures" : [NSString class],
    @"enabledFeatures" : [NSString class],
    @"warnings" : [GTLRCompute_SslPolicy_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy_Warnings_Item
//

@implementation GTLRCompute_SslPolicy_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPolicy_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy_Warnings_Item_Data_Item
//

@implementation GTLRCompute_SslPolicy_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicyReference
//

@implementation GTLRCompute_SslPolicyReference
@dynamic sslPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Subnetwork
//

@implementation GTLRCompute_Subnetwork
@dynamic creationTimestamp, descriptionProperty, enableFlowLogs, fingerprint,
         gatewayAddress, identifier, ipCidrRange, kind, name, network,
         privateIpGoogleAccess, region, secondaryIpRanges, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRanges" : [GTLRCompute_SubnetworkSecondaryRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList
//

@implementation GTLRCompute_SubnetworkAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Items
//

@implementation GTLRCompute_SubnetworkAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_SubnetworksScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Warning
//

@implementation GTLRCompute_SubnetworkAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList
//

@implementation GTLRCompute_SubnetworkList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Subnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList_Warning
//

@implementation GTLRCompute_SubnetworkList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworkList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworkList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkSecondaryRange
//

@implementation GTLRCompute_SubnetworkSecondaryRange
@dynamic ipCidrRange, rangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksExpandIpCidrRangeRequest
//

@implementation GTLRCompute_SubnetworksExpandIpCidrRangeRequest
@dynamic ipCidrRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList
//

@implementation GTLRCompute_SubnetworksScopedList
@dynamic subnetworks, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subnetworks" : [GTLRCompute_Subnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList_Warning
//

@implementation GTLRCompute_SubnetworksScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworksScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworksScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest
//

@implementation GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest
@dynamic privateIpGoogleAccess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Tags
//

@implementation GTLRCompute_Tags
@dynamic fingerprint, items;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxy
//

@implementation GTLRCompute_TargetHttpProxy
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         selfLink, urlMap;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList
//

@implementation GTLRCompute_TargetHttpProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetHttpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList_Warning
//

@implementation GTLRCompute_TargetHttpProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest
//

@implementation GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest
@dynamic quicOverride;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest
//

@implementation GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest
@dynamic sslCertificates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxy
//

@implementation GTLRCompute_TargetHttpsProxy
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         quicOverride, selfLink, sslCertificates, sslPolicy, urlMap;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList
//

@implementation GTLRCompute_TargetHttpsProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetHttpsProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList_Warning
//

@implementation GTLRCompute_TargetHttpsProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpsProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpsProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstance
//

@implementation GTLRCompute_TargetInstance
@dynamic creationTimestamp, descriptionProperty, identifier, instance, kind,
         name, natPolicy, selfLink, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList
//

@implementation GTLRCompute_TargetInstanceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Items
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetInstancesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Warning
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList
//

@implementation GTLRCompute_TargetInstanceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList_Warning
//

@implementation GTLRCompute_TargetInstanceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstanceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstanceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList
//

@implementation GTLRCompute_TargetInstancesScopedList
@dynamic targetInstances, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetInstances" : [GTLRCompute_TargetInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList_Warning
//

@implementation GTLRCompute_TargetInstancesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstancesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstancesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPool
//

@implementation GTLRCompute_TargetPool
@dynamic backupPool, creationTimestamp, descriptionProperty, failoverRatio,
         healthChecks, identifier, instances, kind, name, region, selfLink,
         sessionAffinity;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [NSString class],
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList
//

@implementation GTLRCompute_TargetPoolAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Items
//

@implementation GTLRCompute_TargetPoolAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetPoolsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Warning
//

@implementation GTLRCompute_TargetPoolAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolInstanceHealth
//

@implementation GTLRCompute_TargetPoolInstanceHealth
@dynamic healthStatus, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthStatus" : [GTLRCompute_HealthStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList
//

@implementation GTLRCompute_TargetPoolList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetPool class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList_Warning
//

@implementation GTLRCompute_TargetPoolList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsAddHealthCheckRequest
//

@implementation GTLRCompute_TargetPoolsAddHealthCheckRequest
@dynamic healthChecks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [GTLRCompute_HealthCheckReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsAddInstanceRequest
//

@implementation GTLRCompute_TargetPoolsAddInstanceRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsRemoveHealthCheckRequest
//

@implementation GTLRCompute_TargetPoolsRemoveHealthCheckRequest
@dynamic healthChecks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [GTLRCompute_HealthCheckReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsRemoveInstanceRequest
//

@implementation GTLRCompute_TargetPoolsRemoveInstanceRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList
//

@implementation GTLRCompute_TargetPoolsScopedList
@dynamic targetPools, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [GTLRCompute_TargetPool class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList_Warning
//

@implementation GTLRCompute_TargetPoolsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetReference
//

@implementation GTLRCompute_TargetReference
@dynamic target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetBackendServiceRequest
//

@implementation GTLRCompute_TargetSslProxiesSetBackendServiceRequest
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetProxyHeaderRequest
//

@implementation GTLRCompute_TargetSslProxiesSetProxyHeaderRequest
@dynamic proxyHeader;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetSslCertificatesRequest
//

@implementation GTLRCompute_TargetSslProxiesSetSslCertificatesRequest
@dynamic sslCertificates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxy
//

@implementation GTLRCompute_TargetSslProxy
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         proxyHeader, selfLink, service, sslCertificates, sslPolicy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList
//

@implementation GTLRCompute_TargetSslProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetSslProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList_Warning
//

@implementation GTLRCompute_TargetSslProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetSslProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetSslProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesSetBackendServiceRequest
//

@implementation GTLRCompute_TargetTcpProxiesSetBackendServiceRequest
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest
//

@implementation GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest
@dynamic proxyHeader;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxy
//

@implementation GTLRCompute_TargetTcpProxy
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         proxyHeader, selfLink, service;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList
//

@implementation GTLRCompute_TargetTcpProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetTcpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList_Warning
//

@implementation GTLRCompute_TargetTcpProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetTcpProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetTcpProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGateway
//

@implementation GTLRCompute_TargetVpnGateway
@dynamic creationTimestamp, descriptionProperty, forwardingRules, identifier,
         kind, name, network, region, selfLink, status, tunnels;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"forwardingRules" : [NSString class],
    @"tunnels" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Items
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetVpnGatewaysScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Warning
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList
//

@implementation GTLRCompute_TargetVpnGatewayList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetVpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList_Warning
//

@implementation GTLRCompute_TargetVpnGatewayList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewayList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewayList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList
@dynamic targetVpnGateways, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetVpnGateways" : [GTLRCompute_TargetVpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList_Warning
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TCPHealthCheck
//

@implementation GTLRCompute_TCPHealthCheck
@dynamic port, portName, proxyHeader, request, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestFailure
//

@implementation GTLRCompute_TestFailure
@dynamic actualService, expectedService, host, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestPermissionsRequest
//

@implementation GTLRCompute_TestPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestPermissionsResponse
//

@implementation GTLRCompute_TestPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMap
//

@implementation GTLRCompute_UrlMap
@dynamic creationTimestamp, defaultService, descriptionProperty, fingerprint,
         hostRules, identifier, kind, name, pathMatchers, selfLink, tests;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hostRules" : [GTLRCompute_HostRule class],
    @"pathMatchers" : [GTLRCompute_PathMatcher class],
    @"tests" : [GTLRCompute_UrlMapTest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList
//

@implementation GTLRCompute_UrlMapList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_UrlMap class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList_Warning
//

@implementation GTLRCompute_UrlMapList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UrlMapList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList_Warning_Data_Item
//

@implementation GTLRCompute_UrlMapList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapReference
//

@implementation GTLRCompute_UrlMapReference
@dynamic urlMap;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsValidateRequest
//

@implementation GTLRCompute_UrlMapsValidateRequest
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsValidateResponse
//

@implementation GTLRCompute_UrlMapsValidateResponse
@dynamic result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapTest
//

@implementation GTLRCompute_UrlMapTest
@dynamic descriptionProperty, host, path, service;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapValidationResult
//

@implementation GTLRCompute_UrlMapValidationResult
@dynamic loadErrors, loadSucceeded, testFailures, testPassed;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"loadErrors" : [NSString class],
    @"testFailures" : [GTLRCompute_TestFailure class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetwork
//

@implementation GTLRCompute_UsableSubnetwork
@dynamic ipCidrRange, network, secondaryIpRanges, subnetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRanges" : [GTLRCompute_UsableSubnetworkSecondaryRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_UsableSubnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList_Warning
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworkSecondaryRange
//

@implementation GTLRCompute_UsableSubnetworkSecondaryRange
@dynamic ipCidrRange, rangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsageExportLocation
//

@implementation GTLRCompute_UsageExportLocation
@dynamic bucketName, reportNamePrefix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappings
//

@implementation GTLRCompute_VmEndpointNatMappings
@dynamic instanceName, interfaceNatMappings;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"interfaceNatMappings" : [GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings
//

@implementation GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings
@dynamic natIpPortRanges, numTotalNatPorts, sourceAliasIpRange, sourceVirtualIp;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"natIpPortRanges" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList
//

@implementation GTLRCompute_VmEndpointNatMappingsList
@dynamic identifier, kind, nextPageToken, result, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"result" : [GTLRCompute_VmEndpointNatMappings class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"result";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList_Warning
//

@implementation GTLRCompute_VmEndpointNatMappingsList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item
//

@implementation GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnel
//

@implementation GTLRCompute_VpnTunnel
@dynamic creationTimestamp, descriptionProperty, detailedStatus, identifier,
         ikeVersion, kind, localTrafficSelector, name, peerIp, region,
         remoteTrafficSelector, router, selfLink, sharedSecret,
         sharedSecretHash, status, targetVpnGateway;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"localTrafficSelector" : [NSString class],
    @"remoteTrafficSelector" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList
//

@implementation GTLRCompute_VpnTunnelAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Items
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_VpnTunnelsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Warning
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList
//

@implementation GTLRCompute_VpnTunnelList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_VpnTunnel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList_Warning
//

@implementation GTLRCompute_VpnTunnelList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList
//

@implementation GTLRCompute_VpnTunnelsScopedList
@dynamic vpnTunnels, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"vpnTunnels" : [GTLRCompute_VpnTunnel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList_Warning
//

@implementation GTLRCompute_VpnTunnelsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList
//

@implementation GTLRCompute_XpnHostList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Project class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList_Warning
//

@implementation GTLRCompute_XpnHostList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_XpnHostList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList_Warning_Data_Item
//

@implementation GTLRCompute_XpnHostList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnResourceId
//

@implementation GTLRCompute_XpnResourceId
@dynamic identifier, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Zone
//

@implementation GTLRCompute_Zone
@dynamic availableCpuPlatforms, creationTimestamp, deprecated,
         descriptionProperty, identifier, kind, name, region, selfLink, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availableCpuPlatforms" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList
//

@implementation GTLRCompute_ZoneList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Zone class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList_Warning
//

@implementation GTLRCompute_ZoneList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ZoneList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList_Warning_Data_Item
//

@implementation GTLRCompute_ZoneList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetLabelsRequest
//

@implementation GTLRCompute_ZoneSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetLabelsRequest_Labels
//

@implementation GTLRCompute_ZoneSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetPolicyRequest
//

@implementation GTLRCompute_ZoneSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end
