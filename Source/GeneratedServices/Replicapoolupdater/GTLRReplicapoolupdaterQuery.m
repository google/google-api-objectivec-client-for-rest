// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Compute Engine Instance Group Updater API (replicapoolupdater/v1beta1)
// Description:
//   [Deprecated. Please use compute.instanceGroupManagers.update method.
//   replicapoolupdater API will be disabled after December 30th, 2016] Updates
//   groups of Compute Engine instances.
// Documentation:
//   https://cloud.google.com/compute/docs/instance-groups/manager/#applying_rolling_updates_using_the_updater_service

#import "GTLRReplicapoolupdaterQuery.h"

#import "GTLRReplicapoolupdaterObjects.h"

@implementation GTLRReplicapoolupdaterQuery

@dynamic fields;

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesCancel

@dynamic project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/cancel";
  GTLRReplicapoolupdaterQuery_RollingUpdatesCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.cancel";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesGet

@dynamic project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}";
  GTLRReplicapoolupdaterQuery_RollingUpdatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_RollingUpdate class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.get";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesInsert

@dynamic project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRReplicapoolupdater_RollingUpdate *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates";
  GTLRReplicapoolupdaterQuery_RollingUpdatesInsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.insert";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesList

@dynamic filter, maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates";
  GTLRReplicapoolupdaterQuery_RollingUpdatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRReplicapoolupdater_RollingUpdateList class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.list";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesListInstanceUpdates

@dynamic filter, maxResults, pageToken, project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/instanceUpdates";
  GTLRReplicapoolupdaterQuery_RollingUpdatesListInstanceUpdates *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_InstanceUpdateList class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.listInstanceUpdates";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesPause

@dynamic project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/pause";
  GTLRReplicapoolupdaterQuery_RollingUpdatesPause *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.pause";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesResume

@dynamic project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/resume";
  GTLRReplicapoolupdaterQuery_RollingUpdatesResume *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.resume";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_RollingUpdatesRollback

@dynamic project, rollingUpdate, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                   rollingUpdate:(NSString *)rollingUpdate {
  NSArray *pathParams = @[
    @"project", @"rollingUpdate", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/rollback";
  GTLRReplicapoolupdaterQuery_RollingUpdatesRollback *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.rollingUpdate = rollingUpdate;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.rollingUpdates.rollback";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_ZoneOperationsGet

@dynamic operation, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                       operation:(NSString *)operation {
  NSArray *pathParams = @[
    @"operation", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations/{operation}";
  GTLRReplicapoolupdaterQuery_ZoneOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.operation = operation;
  query.expectedObjectClass = [GTLRReplicapoolupdater_Operation class];
  query.loggingName = @"replicapoolupdater.zoneOperations.get";
  return query;
}

@end

@implementation GTLRReplicapoolupdaterQuery_ZoneOperationsList

@dynamic filter, maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations";
  GTLRReplicapoolupdaterQuery_ZoneOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRReplicapoolupdater_OperationList class];
  query.loggingName = @"replicapoolupdater.zoneOperations.list";
  return query;
}

@end
