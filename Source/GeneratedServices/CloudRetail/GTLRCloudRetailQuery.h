// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Retail API (retail/v2)
// Description:
//   Cloud Retail service enables customers to build end-to-end personalized
//   recommendation systems without requiring a high level of expertise in
//   machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2Catalog;
@class GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2PredictRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2Product;
@class GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEvent;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Retail query classes.
 */
@interface GTLRCloudRetailQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.catalogs.branches.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Incrementally adds place IDs to Product.fulfillment_info.place_ids. This
 *  process is asynchronous and does not require the Product to exist before
 *  updating fulfillment information. If the request is valid, the update will
 *  be enqueued and processed downstream. As a consequence, when a response is
 *  returned, the added place IDs are not immediately manifested in the Product
 *  queried by GetProduct or ListProducts. This feature is only available for
 *  users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.addFulfillmentPlaces
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Incrementally adds place IDs to Product.fulfillment_info.place_ids. This
 *  process is asynchronous and does not require the Product to exist before
 *  updating fulfillment information. If the request is valid, the update will
 *  be enqueued and processed downstream. As a consequence, when a response is
 *  returned, the added place IDs are not immediately manifested in the Product
 *  queried by GetProduct or ListProducts. This feature is only available for
 *  users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest to include
 *    in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Creates a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Product, which will become the final
 *  component of the Product.name. If the caller does not have permission to
 *  create the Product, regardless of whether or not it exists, a
 *  PERMISSION_DENIED error is returned. This field must be unique among all
 *  Products with the same parent. Otherwise, an ALREADY_EXISTS error is
 *  returned. This field must be a UTF-8 encoded string with a length limit of
 *  128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Creates a Product.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Product to include
 *    in the query.
 *  @param parent Required. The parent catalog resource name, such as `projects/
 *    * /locations/global/catalogs/default_catalog/branches/default_branch`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to delete the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *  Product to delete does not exist, a NOT_FOUND error is returned. The Product
 *  to delete can neither be a Product.Type.COLLECTION Product member nor a
 *  Product.Type.PRIMARY Product with more than one variants. Otherwise, an
 *  INVALID_ARGUMENT error is returned. All inventory information for the named
 *  Product will be deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Deletes a Product.
 *
 *  @param name Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to delete the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *    Product to delete does not exist, a NOT_FOUND error is returned. The
 *    Product to delete can neither be a Product.Type.COLLECTION Product member
 *    nor a Product.Type.PRIMARY Product with more than one variants. Otherwise,
 *    an INVALID_ARGUMENT error is returned. All inventory information for the
 *    named Product will be deleted.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *  requested Product does not exist, a NOT_FOUND error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Gets a Product.
 *
 *  @param name Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *    requested Product does not exist, a NOT_FOUND error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Bulk import of multiple Products. Request processing may be synchronous. No
 *  partial updating is supported. Non-existing items are created. Note that it
 *  is possible for a subset of the Products to be successfully updated.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport : GTLRCloudRetailQuery

/**
 *  Required.
 *  `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
 *  If no updateMask is specified, requires products.create permission. If
 *  updateMask is specified, requires products.update permission.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of multiple Products. Request processing may be synchronous. No
 *  partial updating is supported. Non-existing items are created. Note that it
 *  is possible for a subset of the Products to be successfully updated.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest to include in the
 *    query.
 *  @param parent Required.
 *    `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
 *    If no updateMask is specified, requires products.create permission. If
 *    updateMask is specified, requires products.update permission.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of Products.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList : GTLRCloudRetailQuery

/**
 *  A filter to apply on the list results. Supported features: * List all the
 *  products under the parent branch if filter is unset. * List
 *  Product.Type.VARIANT Products sharing the same Product.Type.PRIMARY Product.
 *  For example: `primary_product_id = "some_product_id"` * List Products
 *  bundled in a Product.Type.COLLECTION Product. For example:
 *  `collection_product_id = "some_product_id"` * List Products with a
 *  partibular type. For example: `type = "PRIMARY"` `type = "VARIANT"` `type =
 *  "COLLECTION"` If the field is unrecognizable, an INVALID_ARGUMENT error is
 *  returned. If the specified Product.Type.PRIMARY Product or
 *  Product.Type.COLLECTION Product does not exist, a NOT_FOUND error is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of Products to return. If unspecified, defaults to 100. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListProductsResponse.next_page_token, received from a previous
 *  ProductService.ListProducts call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  ProductService.ListProducts must match the call that provided the page
 *  token. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent branch resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/0`. Use `default_branch`
 *  as the branch ID, to list products under the default branch. If the caller
 *  does not have permission to list Products under this branch, regardless of
 *  whether or not this branch exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The fields of Product to return in the responses. If not set or empty, the
 *  following fields are returned: * Product.name * Product.id * Product.title *
 *  Product.uri * Product.images * Product.price_info * Product.brands If "*" is
 *  provided, all fields are returned. Product.name is always returned no matter
 *  what mask is set. If an unsupported or unknown field is provided, an
 *  INVALID_ARGUMENT error is returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListProductsResponse.
 *
 *  Gets a list of Products.
 *
 *  @param parent Required. The parent branch resource name, such as `projects/
 *    * /locations/global/catalogs/default_catalog/branches/0`. Use
 *    `default_branch` as the branch ID, to list products under the default
 *    branch. If the caller does not have permission to list Products under this
 *    branch, regardless of whether or not this branch exists, a
 *    PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch : GTLRCloudRetailQuery

/**
 *  If set to true, and the Product is not found, a new Product will be created.
 *  In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. Full resource name of the product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Product to update. The immutable and
 *  output only fields are NOT supported. If not set, all supported fields (the
 *  fields that are neither immutable nor output only) are updated. If an
 *  unsupported or unknown field is provided, an INVALID_ARGUMENT error is
 *  returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Updates a Product.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Product to include
 *    in the query.
 *  @param name Immutable. Full resource name of the product, such as `projects/
 *    *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                           name:(NSString *)name;

@end

/**
 *  Incrementally removes place IDs from a Product.fulfillment_info.place_ids.
 *  This process is asynchronous and does not require the Product to exist
 *  before updating fulfillment information. If the request is valid, the update
 *  will be enqueued and processed downstream. As a consequence, when a response
 *  is returned, the removed place IDs are not immediately manifested in the
 *  Product queried by GetProduct or ListProducts. This feature is only
 *  available for users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.removeFulfillmentPlaces
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Incrementally removes place IDs from a Product.fulfillment_info.place_ids.
 *  This process is asynchronous and does not require the Product to exist
 *  before updating fulfillment information. If the request is valid, the update
 *  will be enqueued and processed downstream. As a consequence, when a response
 *  is returned, the removed place IDs are not immediately manifested in the
 *  Product queried by GetProduct or ListProducts. This feature is only
 *  available for users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest to
 *    include in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Updates inventory information for a Product while respecting the last update
 *  timestamps of each inventory field. This process is asynchronous and does
 *  not require the Product to exist before updating fulfillment information. If
 *  the request is valid, the update will be enqueued and processed downstream.
 *  As a consequence, when a response is returned, updates are not immediately
 *  manifested in the Product queried by GetProduct or ListProducts. When
 *  inventory is updated with CreateProduct and UpdateProduct, the specified
 *  inventory field value(s) will overwrite any existing value(s) while ignoring
 *  the last update time for this field. Furthermore, the last update time for
 *  the specified inventory fields will be overwritten to the time of the
 *  CreateProduct or UpdateProduct request. If no inventory fields are set in
 *  CreateProductRequest.product, then any pre-existing inventory information
 *  for this product will be used. If no inventory fields are set in
 *  UpdateProductRequest.set_mask, then any existing inventory information will
 *  be preserved. Pre-existing inventory information can only be updated with
 *  SetInventory, AddFulfillmentPlaces, and RemoveFulfillmentPlaces. This
 *  feature is only available for users who have Retail Search enabled. Please
 *  submit a form [here](https://cloud.google.com/contact) to contact cloud
 *  sales if you are interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.setInventory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory : GTLRCloudRetailQuery

/**
 *  Immutable. Full resource name of the product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Updates inventory information for a Product while respecting the last update
 *  timestamps of each inventory field. This process is asynchronous and does
 *  not require the Product to exist before updating fulfillment information. If
 *  the request is valid, the update will be enqueued and processed downstream.
 *  As a consequence, when a response is returned, updates are not immediately
 *  manifested in the Product queried by GetProduct or ListProducts. When
 *  inventory is updated with CreateProduct and UpdateProduct, the specified
 *  inventory field value(s) will overwrite any existing value(s) while ignoring
 *  the last update time for this field. Furthermore, the last update time for
 *  the specified inventory fields will be overwritten to the time of the
 *  CreateProduct or UpdateProduct request. If no inventory fields are set in
 *  CreateProductRequest.product, then any pre-existing inventory information
 *  for this product will be used. If no inventory fields are set in
 *  UpdateProductRequest.set_mask, then any existing inventory information will
 *  be preserved. Pre-existing inventory information can only be updated with
 *  SetInventory, AddFulfillmentPlaces, and RemoveFulfillmentPlaces. This
 *  feature is only available for users who have Retail Search enabled. Please
 *  submit a form [here](https://cloud.google.com/contact) to contact cloud
 *  sales if you are interested in using Retail Search.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest
 *    to include in the query.
 *  @param name Immutable. Full resource name of the product, such as `projects/
 *    *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Completes the specified prefix with keyword suggestions. This feature is
 *  only available for users who have Retail Search enabled. Please submit a
 *  form [here](https://cloud.google.com/contact) to contact cloud sales if you
 *  are interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.completeQuery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery : GTLRCloudRetailQuery

/**
 *  Required. Catalog for which the completion is performed. Full resource name
 *  of catalog, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Determines which dataset to use for fetching completion. "user-data" will
 *  use the imported dataset through CompletionService.ImportCompletionData.
 *  "cloud-retail" will use the dataset generated by cloud retail based on user
 *  events. If leave empty, it will use the "user-data". Current supported
 *  values: * user-data * cloud-retail This option requires additional
 *  allowlisting. Before using cloud-retail, contact Cloud Retail support team
 *  first.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  The device type context for completion suggestions. It is useful to apply
 *  different suggestions on different device types, e.g. `DESKTOP`, `MOBILE`.
 *  If it is empty, the suggestions are across all device types. Supported
 *  formats: * `UNKNOWN_DEVICE_TYPE` * `DESKTOP` * `MOBILE` * A customized
 *  string starts with `OTHER_`, e.g. `OTHER_IPHONE`.
 */
@property(nonatomic, copy, nullable) NSString *deviceType;

/**
 *  The list of languages of the query. This is the BCP-47 language code, such
 *  as "en-US" or "sr-Latn". For more information, see [Tags for Identifying
 *  Languages](https://tools.ietf.org/html/bcp47). The maximum number of allowed
 *  characters is 255. Only "en-US" is currently supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *languageCodes;

/**
 *  Completion max suggestions. If left unset or set to 0, then will fallback to
 *  the configured value CompletionConfig.max_suggestions. The maximum allowed
 *  max suggestions is 20. If it is set higher, it will be capped by 20.
 */
@property(nonatomic, assign) NSInteger maxSuggestions;

/**
 *  Required. The query used to generate suggestions. The maximum number of
 *  allowed characters is 255.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. The field must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *visitorId;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponse.
 *
 *  Completes the specified prefix with keyword suggestions. This feature is
 *  only available for users who have Retail Search enabled. Please submit a
 *  form [here](https://cloud.google.com/contact) to contact cloud sales if you
 *  are interested in using Retail Search.
 *
 *  @param catalog Required. Catalog for which the completion is performed. Full
 *    resource name of catalog, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery
 */
+ (instancetype)queryWithCatalog:(NSString *)catalog;

@end

/**
 *  Bulk import of processed completion dataset. Request processing may be
 *  synchronous. Partial updating is not supported. This feature is only
 *  available for users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.completionData.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport : GTLRCloudRetailQuery

/**
 *  Required. The catalog which the suggestions dataset belongs to. Format:
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of processed completion dataset. Request processing may be
 *  synchronous. Partial updating is not supported. This feature is only
 *  available for users who have Retail Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest to include
 *    in the query.
 *  @param parent Required. The catalog which the suggestions dataset belongs
 *    to. Format: `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get which branch is currently default branch set by
 *  CatalogService.SetDefaultBranch method under a specified parent catalog.
 *
 *  Method: retail.projects.locations.catalogs.getDefaultBranch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch : GTLRCloudRetailQuery

/**
 *  The parent catalog resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2GetDefaultBranchResponse.
 *
 *  Get which branch is currently default branch set by
 *  CatalogService.SetDefaultBranch method under a specified parent catalog.
 *
 *  @param catalog The parent catalog resource name, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch
 */
+ (instancetype)queryWithCatalog:(NSString *)catalog;

@end

/**
 *  Lists all the Catalogs associated with the project.
 *
 *  Method: retail.projects.locations.catalogs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsList : GTLRCloudRetailQuery

/**
 *  Maximum number of Catalogs to return. If unspecified, defaults to 50. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an INVALID_ARGUMENT is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListCatalogsResponse.next_page_token, received from a previous
 *  CatalogService.ListCatalogs call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  CatalogService.ListCatalogs must match the call that provided the page
 *  token. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account resource name with an associated location. If the
 *  caller does not have permission to list Catalogs under this location,
 *  regardless of whether or not this location exists, a PERMISSION_DENIED error
 *  is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListCatalogsResponse.
 *
 *  Lists all the Catalogs associated with the project.
 *
 *  @param parent Required. The account resource name with an associated
 *    location. If the caller does not have permission to list Catalogs under
 *    this location, regardless of whether or not this location exists, a
 *    PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.catalogs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: retail.projects.locations.catalogs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList : GTLRCloudRetailQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the Catalogs.
 *
 *  Method: retail.projects.locations.catalogs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch : GTLRCloudRetailQuery

/** Required. Immutable. The fully qualified resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Catalog to update. If an unsupported
 *  or unknown field is provided, an INVALID_ARGUMENT error is returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Catalog.
 *
 *  Updates the Catalogs.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Catalog to include
 *    in the query.
 *  @param name Required. Immutable. The fully qualified resource name of the
 *    catalog.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Catalog *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a recommendation prediction.
 *
 *  Method: retail.projects.locations.catalogs.placements.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of the format: {name=projects/ *
 *  /locations/global/catalogs/default_catalog/placements/ *} The ID of the
 *  Recommendations AI placement. Before you can request predictions from your
 *  model, you must create at least one placement for it. For more information,
 *  see [Managing
 *  placements](https://cloud.google.com/retail/recommendations-ai/docs/manage-placements).
 *  The full list of available placements can be seen at
 *  https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2PredictResponse.
 *
 *  Makes a recommendation prediction.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2PredictRequest to
 *    include in the query.
 *  @param placement Required. Full resource name of the format: {name=projects/
 *    * /locations/global/catalogs/default_catalog/placements/ *} The ID of the
 *    Recommendations AI placement. Before you can request predictions from your
 *    model, you must create at least one placement for it. For more
 *    information, see [Managing
 *    placements](https://cloud.google.com/retail/recommendations-ai/docs/manage-placements).
 *    The full list of available placements can be seen at
 *    https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PredictRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  Method: retail.projects.locations.catalogs.placements.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the search engine placement, such as
 *  `projects/ *
 *  /locations/global/catalogs/default_catalog/placements/default_search`. This
 *  field is used to identify the serving configuration name and the set of
 *  models that will be used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2SearchResponse.
 *
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Please submit a form
 *  [here](https://cloud.google.com/contact) to contact cloud sales if you are
 *  interested in using Retail Search.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2SearchRequest to
 *    include in the query.
 *  @param placement Required. The resource name of the search engine placement,
 *    such as `projects/ *
 *    /locations/global/catalogs/default_catalog/placements/default_search`.
 *    This field is used to identify the serving configuration name and the set
 *    of models that will be used to make the search.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SearchRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Set a specified branch id as default branch. API methods such as
 *  SearchService.Search, ProductService.GetProduct, ProductService.ListProducts
 *  will treat requests using "default_branch" to the actual branch id set as
 *  default. For example, if `projects/ * /locations/ * /catalogs/ *
 *  /branches/1` is set as default, setting SearchRequest.branch to `projects/ *
 *  /locations/ * /catalogs/ * /branches/default_branch` is equivalent to
 *  setting SearchRequest.branch to `projects/ * /locations/ * /catalogs/ *
 *  /branches/1`. Using multiple branches can be useful when developers would
 *  like to have a staging branch to test and verify for future usage. When it
 *  becomes ready, developers switch on the staging branch using this API while
 *  keeping using `projects/ * /locations/ * /catalogs/ *
 *  /branches/default_branch` as SearchRequest.branch to route the traffic to
 *  this staging branch. CAUTION: If you have live predict/search traffic,
 *  switching the default branch could potentially cause outages if the ID space
 *  of the new branch is very different from the old one. More specifically: *
 *  PredictionService will only return product IDs from branch {newBranch}. *
 *  SearchService will only return product IDs from branch {newBranch} (if
 *  branch is not explicitly set). * UserEventService will only join events with
 *  products from branch {newBranch}.
 *
 *  Method: retail.projects.locations.catalogs.setDefaultBranch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch : GTLRCloudRetailQuery

/**
 *  Full resource name of the catalog, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Set a specified branch id as default branch. API methods such as
 *  SearchService.Search, ProductService.GetProduct, ProductService.ListProducts
 *  will treat requests using "default_branch" to the actual branch id set as
 *  default. For example, if `projects/ * /locations/ * /catalogs/ *
 *  /branches/1` is set as default, setting SearchRequest.branch to `projects/ *
 *  /locations/ * /catalogs/ * /branches/default_branch` is equivalent to
 *  setting SearchRequest.branch to `projects/ * /locations/ * /catalogs/ *
 *  /branches/1`. Using multiple branches can be useful when developers would
 *  like to have a staging branch to test and verify for future usage. When it
 *  becomes ready, developers switch on the staging branch using this API while
 *  keeping using `projects/ * /locations/ * /catalogs/ *
 *  /branches/default_branch` as SearchRequest.branch to route the traffic to
 *  this staging branch. CAUTION: If you have live predict/search traffic,
 *  switching the default branch could potentially cause outages if the ID space
 *  of the new branch is very different from the old one. More specifically: *
 *  PredictionService will only return product IDs from branch {newBranch}. *
 *  SearchService will only return product IDs from branch {newBranch} (if
 *  branch is not explicitly set). * UserEventService will only join events with
 *  products from branch {newBranch}.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest to include in
 *    the query.
 *  @param catalog Full resource name of the catalog, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest *)object
                        catalog:(NSString *)catalog;

@end

/**
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a 3rd party domain. This method is
 *  used only by the Retail API JavaScript pixel and Google Tag Manager. Users
 *  should not call this method directly.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.collect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect : GTLRCloudRetailQuery

/**
 *  The event timestamp in milliseconds. This prevents browser caching of
 *  otherwise identical get requests. The name is abbreviated to reduce the
 *  payload bytes.
 */
@property(nonatomic, assign) long long ets;

/**
 *  Required. The parent catalog name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The URL including cgi-parameters but excluding the hash fragment with a
 *  length limit of 5,000 characters. This is often more useful than the referer
 *  URL, because many browsers only send the domain for 3rd party requests.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Required. URL encoded UserEvent proto with a length limit of 2,000,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *userEvent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleApiHttpBody.
 *
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a 3rd party domain. This method is
 *  used only by the Retail API JavaScript pixel and Google Tag Manager. Users
 *  should not call this method directly.
 *
 *  @param parent Required. The parent catalog name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport : GTLRCloudRetailQuery

/** Required. `projects/1234/locations/global/catalogs/default_catalog` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest to include in
 *    the query.
 *  @param parent Required.
 *    `projects/1234/locations/global/catalogs/default_catalog`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list command
 *  first.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the catalog under which the events are
 *  created. The format is
 *  `projects/${projectId}/locations/global/catalogs/${catalogId}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list command
 *  first.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the catalog under which the
 *    events are created. The format is
 *    `projects/${projectId}/locations/global/catalogs/${catalogId}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Triggers a user event rejoin operation with latest product catalog. Events
 *  will not be annotated with detailed product information if product is
 *  missing from the catalog at the time the user event is ingested, and these
 *  events are stored as unjoined events with a limited usage on training and
 *  serving. This API can be used to trigger a 'join' operation on specified
 *  events with latest version of product catalog. It can also be used to
 *  correct events joined with wrong product catalog.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.rejoin
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Triggers a user event rejoin operation with latest product catalog. Events
 *  will not be annotated with detailed product information if product is
 *  missing from the catalog at the time the user event is ingested, and these
 *  events are stored as unjoined events with a limited usage on training and
 *  serving. This API can be used to trigger a 'join' operation on specified
 *  events with latest version of product catalog. It can also be used to
 *  correct events joined with wrong product catalog.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest to include in
 *    the query.
 *  @param parent Required. The parent catalog resource name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Writes a single user event.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2UserEvent.
 *
 *  Writes a single user event.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2UserEvent to include
 *    in the query.
 *  @param parent Required. The parent catalog resource name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2UserEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: retail.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsOperationsList : GTLRCloudRetailQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
