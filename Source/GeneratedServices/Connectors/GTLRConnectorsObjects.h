// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Connectors API (connectors/v1)
// Description:
//   Enables users to create and manage connections to Google Cloud services and
//   third-party business applications using the Connectors interface.
// Documentation:
//   https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRConnectors_AuditConfig;
@class GTLRConnectors_AuditLogConfig;
@class GTLRConnectors_AuthConfig;
@class GTLRConnectors_AuthConfigTemplate;
@class GTLRConnectors_Binding;
@class GTLRConnectors_ConfigVariable;
@class GTLRConnectors_ConfigVariableTemplate;
@class GTLRConnectors_Connection;
@class GTLRConnectors_Connection_Labels;
@class GTLRConnectors_ConnectionStatus;
@class GTLRConnectors_Connector;
@class GTLRConnectors_Connector_Labels;
@class GTLRConnectors_ConnectorVersion;
@class GTLRConnectors_ConnectorVersion_Labels;
@class GTLRConnectors_EgressControlConfig;
@class GTLRConnectors_Expr;
@class GTLRConnectors_ExtractionRule;
@class GTLRConnectors_ExtractionRules;
@class GTLRConnectors_Field;
@class GTLRConnectors_Field_AdditionalDetails;
@class GTLRConnectors_InputParameter;
@class GTLRConnectors_JwtClaims;
@class GTLRConnectors_Location;
@class GTLRConnectors_Location_Labels;
@class GTLRConnectors_Location_Metadata;
@class GTLRConnectors_LockConfig;
@class GTLRConnectors_Oauth2ClientCredentials;
@class GTLRConnectors_Oauth2JwtBearer;
@class GTLRConnectors_Operation;
@class GTLRConnectors_Operation_Metadata;
@class GTLRConnectors_Operation_Response;
@class GTLRConnectors_Policy;
@class GTLRConnectors_Provider;
@class GTLRConnectors_Provider_Labels;
@class GTLRConnectors_Resource;
@class GTLRConnectors_ResultMetadata;
@class GTLRConnectors_RoleGrant;
@class GTLRConnectors_RuntimeActionSchema;
@class GTLRConnectors_RuntimeEntitySchema;
@class GTLRConnectors_Secret;
@class GTLRConnectors_Source;
@class GTLRConnectors_Status;
@class GTLRConnectors_Status_Details_Item;
@class GTLRConnectors_SupportedRuntimeFeatures;
@class GTLRConnectors_UserPassword;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRConnectors_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_AuthConfig.authType

/**
 *  Authentication type not specified.
 *
 *  Value: "AUTH_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfig_AuthType_AuthTypeUnspecified;
/**
 *  Oauth 2.0 Client Credentials Grant Authentication
 *
 *  Value: "OAUTH2_CLIENT_CREDENTIALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfig_AuthType_Oauth2ClientCredentials;
/**
 *  JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based
 *  authentication
 *
 *  Value: "OAUTH2_JWT_BEARER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfig_AuthType_Oauth2JwtBearer;
/**
 *  Username and Password Authentication.
 *
 *  Value: "USER_PASSWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfig_AuthType_UserPassword;

// ----------------------------------------------------------------------------
// GTLRConnectors_AuthConfigTemplate.authType

/**
 *  Authentication type not specified.
 *
 *  Value: "AUTH_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfigTemplate_AuthType_AuthTypeUnspecified;
/**
 *  Oauth 2.0 Client Credentials Grant Authentication
 *
 *  Value: "OAUTH2_CLIENT_CREDENTIALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfigTemplate_AuthType_Oauth2ClientCredentials;
/**
 *  JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based
 *  authentication
 *
 *  Value: "OAUTH2_JWT_BEARER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfigTemplate_AuthType_Oauth2JwtBearer;
/**
 *  Username and Password Authentication.
 *
 *  Value: "USER_PASSWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_AuthConfigTemplate_AuthType_UserPassword;

// ----------------------------------------------------------------------------
// GTLRConnectors_ConfigVariableTemplate.valueType

/**
 *  Value type is boolean.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConfigVariableTemplate_ValueType_Bool;
/**
 *  Value type is integer.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConfigVariableTemplate_ValueType_Int;
/**
 *  Value type is secret.
 *
 *  Value: "SECRET"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConfigVariableTemplate_ValueType_Secret;
/**
 *  Value type is string.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConfigVariableTemplate_ValueType_String;
/**
 *  Value type is not specified.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConfigVariableTemplate_ValueType_ValueTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_ConnectionStatus.state

/**
 *  Connection is running and ready for requests.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Active;
/**
 *  Connection is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Creating;
/**
 *  Connection is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Deleting;
/**
 *  Connection is not running due to an error.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Error;
/**
 *  Connection is stopped.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Inactive;
/**
 *  Connection does not have a state yet.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_StateUnspecified;
/**
 *  Connection is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectionStatus_State_Updating;

// ----------------------------------------------------------------------------
// GTLRConnectors_Connector.launchStage

/**
 *  DEPRECATED.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Connector_LaunchStage_Deprecated;
/**
 *  GA.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Connector_LaunchStage_Ga;
/**
 *  LAUNCH_STAGE_UNSPECIFIED.
 *
 *  Value: "LAUNCH_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Connector_LaunchStage_LaunchStageUnspecified;
/**
 *  PREVIEW.
 *
 *  Value: "PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Connector_LaunchStage_Preview;

// ----------------------------------------------------------------------------
// GTLRConnectors_ConnectorVersion.launchStage

/**
 *  DEPRECATED.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectorVersion_LaunchStage_Deprecated;
/**
 *  GA.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectorVersion_LaunchStage_Ga;
/**
 *  LAUNCH_STAGE_UNSPECIFIED.
 *
 *  Value: "LAUNCH_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectorVersion_LaunchStage_LaunchStageUnspecified;
/**
 *  PREVIEW.
 *
 *  Value: "PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ConnectorVersion_LaunchStage_Preview;

// ----------------------------------------------------------------------------
// GTLRConnectors_Field.dataType

/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeArray;
/**
 *  Long integer(int64) data type.
 *
 *  Value: "DATA_TYPE_BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeBigint;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeBinary;
/**
 *  Bit data type.
 *
 *  Value: "DATA_TYPE_BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeBit;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeBlob;
/**
 *  Boolean data type.
 *
 *  Value: "DATA_TYPE_BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeBoolean;
/**
 *  Char data type.
 *
 *  Value: "DATA_TYPE_CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeChar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeClob;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDatalink;
/**
 *  Date data type.
 *
 *  Value: "DATA_TYPE_DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDate;
/**
 *  DEPRECATED! Use DATA_TYPE_TIMESTAMP.
 *
 *  Value: "DATA_TYPE_DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDatetime;
/**
 *  Decimal data type.
 *
 *  Value: "DATA_TYPE_DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDecimal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDistinct;
/**
 *  Double data type.
 *
 *  Value: "DATA_TYPE_DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeDouble;
/**
 *  Float data type.
 *
 *  Value: "DATA_TYPE_FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeFloat;
/**
 *  DEPRECATED! Use DATA_TYPE_INTEGER.
 *
 *  Value: "DATA_TYPE_INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeInt;
/**
 *  Integer(int32) data type.
 *
 *  Value: "DATA_TYPE_INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeInteger;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeJavaObject;
/**
 *  DEPRECATED! Use DATA_TYPE_BIGINT.
 *
 *  Value: "DATA_TYPE_LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeLong;
/**
 *  Longnvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeLongnvarchar;
/**
 *  UNSUPPORTED! Long variable binary data type.
 *
 *  Value: "DATA_TYPE_LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeLongvarbinary;
/**
 *  Longvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeLongvarchar;
/**
 *  Nchar data type.
 *
 *  Value: "DATA_TYPE_NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeNchar;
/**
 *  UNSUPPORTED! NCLOB data type.
 *
 *  Value: "DATA_TYPE_NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeNclob;
/**
 *  Null data type.
 *
 *  Value: "DATA_TYPE_NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeNull;
/**
 *  Numeric data type.
 *
 *  Value: "DATA_TYPE_NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeNumeric;
/**
 *  Nvarchar data type.
 *
 *  Value: "DATA_TYPE_NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeNvarchar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeOther;
/**
 *  Real data type.
 *
 *  Value: "DATA_TYPE_REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeReal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeRef;
/**
 *  UNSUPPORTED! Cursor reference type is not supported.
 *
 *  Value: "DATA_TYPE_REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeRefCursor;
/**
 *  UNSUPPORTED! Row id data type.
 *
 *  Value: "DATA_TYPE_ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeRowid;
/**
 *  Short integer(int16) data type.
 *
 *  Value: "DATA_TYPE_SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeSmallint;
/**
 *  UNSUPPORTED! SQL XML data type is not supported.
 *
 *  Value: "DATA_TYPE_SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeSqlxml;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeString;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeStruct;
/**
 *  Time data type.
 *
 *  Value: "DATA_TYPE_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeTime;
/**
 *  Timestamp data type.
 *
 *  Value: "DATA_TYPE_TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeTimestamp;
/**
 *  UNSUPPORTED! Use TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeTimestampWithTimezone;
/**
 *  UNSUPPORTED! Use TIME or TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeTimeWithTimezone;
/**
 *  Small integer(int8) data type.
 *
 *  Value: "DATA_TYPE_TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeTinyint;
/**
 *  Data type is not specified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeUnspecified;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeUuid;
/**
 *  UNSUPPORTED! Variable binary data type.
 *
 *  Value: "DATA_TYPE_VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeVarbinary;
/**
 *  Varchar data type.
 *
 *  Value: "DATA_TYPE_VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeVarchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_InputParameter.dataType

/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeArray;
/**
 *  Long integer(int64) data type.
 *
 *  Value: "DATA_TYPE_BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeBigint;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeBinary;
/**
 *  Bit data type.
 *
 *  Value: "DATA_TYPE_BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeBit;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeBlob;
/**
 *  Boolean data type.
 *
 *  Value: "DATA_TYPE_BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeBoolean;
/**
 *  Char data type.
 *
 *  Value: "DATA_TYPE_CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeChar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeClob;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDatalink;
/**
 *  Date data type.
 *
 *  Value: "DATA_TYPE_DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDate;
/**
 *  DEPRECATED! Use DATA_TYPE_TIMESTAMP.
 *
 *  Value: "DATA_TYPE_DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDatetime;
/**
 *  Decimal data type.
 *
 *  Value: "DATA_TYPE_DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDecimal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDistinct;
/**
 *  Double data type.
 *
 *  Value: "DATA_TYPE_DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeDouble;
/**
 *  Float data type.
 *
 *  Value: "DATA_TYPE_FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeFloat;
/**
 *  DEPRECATED! Use DATA_TYPE_INTEGER.
 *
 *  Value: "DATA_TYPE_INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeInt;
/**
 *  Integer(int32) data type.
 *
 *  Value: "DATA_TYPE_INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeInteger;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeJavaObject;
/**
 *  DEPRECATED! Use DATA_TYPE_BIGINT.
 *
 *  Value: "DATA_TYPE_LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeLong;
/**
 *  Longnvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeLongnvarchar;
/**
 *  UNSUPPORTED! Long variable binary data type.
 *
 *  Value: "DATA_TYPE_LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeLongvarbinary;
/**
 *  Longvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeLongvarchar;
/**
 *  Nchar data type.
 *
 *  Value: "DATA_TYPE_NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeNchar;
/**
 *  UNSUPPORTED! NCLOB data type.
 *
 *  Value: "DATA_TYPE_NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeNclob;
/**
 *  Null data type.
 *
 *  Value: "DATA_TYPE_NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeNull;
/**
 *  Numeric data type.
 *
 *  Value: "DATA_TYPE_NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeNumeric;
/**
 *  Nvarchar data type.
 *
 *  Value: "DATA_TYPE_NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeNvarchar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeOther;
/**
 *  Real data type.
 *
 *  Value: "DATA_TYPE_REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeReal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeRef;
/**
 *  UNSUPPORTED! Cursor reference type is not supported.
 *
 *  Value: "DATA_TYPE_REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeRefCursor;
/**
 *  UNSUPPORTED! Row id data type.
 *
 *  Value: "DATA_TYPE_ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeRowid;
/**
 *  Short integer(int16) data type.
 *
 *  Value: "DATA_TYPE_SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeSmallint;
/**
 *  UNSUPPORTED! SQL XML data type is not supported.
 *
 *  Value: "DATA_TYPE_SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeSqlxml;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeString;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeStruct;
/**
 *  Time data type.
 *
 *  Value: "DATA_TYPE_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeTime;
/**
 *  Timestamp data type.
 *
 *  Value: "DATA_TYPE_TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeTimestamp;
/**
 *  UNSUPPORTED! Use TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeTimestampWithTimezone;
/**
 *  UNSUPPORTED! Use TIME or TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeTimeWithTimezone;
/**
 *  Small integer(int8) data type.
 *
 *  Value: "DATA_TYPE_TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeTinyint;
/**
 *  Data type is not specified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeUuid;
/**
 *  UNSUPPORTED! Variable binary data type.
 *
 *  Value: "DATA_TYPE_VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeVarbinary;
/**
 *  Varchar data type.
 *
 *  Value: "DATA_TYPE_VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeVarchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_Provider.launchStage

/**
 *  DEPRECATED.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Provider_LaunchStage_Deprecated;
/**
 *  GA.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Provider_LaunchStage_Ga;
/**
 *  LAUNCH_STAGE_UNSPECIFIED.
 *
 *  Value: "LAUNCH_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Provider_LaunchStage_LaunchStageUnspecified;
/**
 *  PREVIEW.
 *
 *  Value: "PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Provider_LaunchStage_Preview;

// ----------------------------------------------------------------------------
// GTLRConnectors_Resource.type

/**
 *  GCP Project Resource.
 *
 *  Value: "GCP_PROJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Resource_Type_GcpProject;
/**
 *  Any GCP Resource which is identified uniquely by IAM.
 *
 *  Value: "GCP_RESOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Resource_Type_GcpResource;
/**
 *  GCP Secret Resource.
 *
 *  Value: "GCP_SECRETMANAGER_SECRET"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Resource_Type_GcpSecretmanagerSecret;
/**
 *  GCP Secret Version Resource.
 *
 *  Value: "GCP_SECRETMANAGER_SECRET_VERSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Resource_Type_GcpSecretmanagerSecretVersion;
/**
 *  Value type is not specified.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Resource_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_ResultMetadata.dataType

/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeArray;
/**
 *  Long integer(int64) data type.
 *
 *  Value: "DATA_TYPE_BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeBigint;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeBinary;
/**
 *  Bit data type.
 *
 *  Value: "DATA_TYPE_BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeBit;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeBlob;
/**
 *  Boolean data type.
 *
 *  Value: "DATA_TYPE_BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeBoolean;
/**
 *  Char data type.
 *
 *  Value: "DATA_TYPE_CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeChar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeClob;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDatalink;
/**
 *  Date data type.
 *
 *  Value: "DATA_TYPE_DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDate;
/**
 *  DEPRECATED! Use DATA_TYPE_TIMESTAMP.
 *
 *  Value: "DATA_TYPE_DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDatetime;
/**
 *  Decimal data type.
 *
 *  Value: "DATA_TYPE_DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDecimal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDistinct;
/**
 *  Double data type.
 *
 *  Value: "DATA_TYPE_DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeDouble;
/**
 *  Float data type.
 *
 *  Value: "DATA_TYPE_FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeFloat;
/**
 *  DEPRECATED! Use DATA_TYPE_INTEGER.
 *
 *  Value: "DATA_TYPE_INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeInt;
/**
 *  Integer(int32) data type.
 *
 *  Value: "DATA_TYPE_INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeInteger;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeJavaObject;
/**
 *  DEPRECATED! Use DATA_TYPE_BIGINT.
 *
 *  Value: "DATA_TYPE_LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeLong;
/**
 *  Longnvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeLongnvarchar;
/**
 *  UNSUPPORTED! Long variable binary data type.
 *
 *  Value: "DATA_TYPE_LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeLongvarbinary;
/**
 *  Longvarchar data type.
 *
 *  Value: "DATA_TYPE_LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeLongvarchar;
/**
 *  Nchar data type.
 *
 *  Value: "DATA_TYPE_NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeNchar;
/**
 *  UNSUPPORTED! NCLOB data type.
 *
 *  Value: "DATA_TYPE_NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeNclob;
/**
 *  Null data type.
 *
 *  Value: "DATA_TYPE_NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeNull;
/**
 *  Numeric data type.
 *
 *  Value: "DATA_TYPE_NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeNumeric;
/**
 *  Nvarchar data type.
 *
 *  Value: "DATA_TYPE_NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeNvarchar;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeOther;
/**
 *  Real data type.
 *
 *  Value: "DATA_TYPE_REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeReal;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeRef;
/**
 *  UNSUPPORTED! Cursor reference type is not supported.
 *
 *  Value: "DATA_TYPE_REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeRefCursor;
/**
 *  UNSUPPORTED! Row id data type.
 *
 *  Value: "DATA_TYPE_ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeRowid;
/**
 *  Short integer(int16) data type.
 *
 *  Value: "DATA_TYPE_SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeSmallint;
/**
 *  UNSUPPORTED! SQL XML data type is not supported.
 *
 *  Value: "DATA_TYPE_SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeSqlxml;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeString;
/**
 *  UNSUPPORTED! Binary data type.
 *
 *  Value: "DATA_TYPE_STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeStruct;
/**
 *  Time data type.
 *
 *  Value: "DATA_TYPE_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeTime;
/**
 *  Timestamp data type.
 *
 *  Value: "DATA_TYPE_TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeTimestamp;
/**
 *  UNSUPPORTED! Use TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeTimestampWithTimezone;
/**
 *  UNSUPPORTED! Use TIME or TIMESTAMP instead.
 *
 *  Value: "DATA_TYPE_TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeTimeWithTimezone;
/**
 *  Small integer(int8) data type.
 *
 *  Value: "DATA_TYPE_TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeTinyint;
/**
 *  Data type is not specified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified;
/**
 *  DEPRECATED! Use DATA_TYPE_VARCHAR.
 *
 *  Value: "DATA_TYPE_UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeUuid;
/**
 *  UNSUPPORTED! Variable binary data type.
 *
 *  Value: "DATA_TYPE_VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeVarbinary;
/**
 *  Varchar data type.
 *
 *  Value: "DATA_TYPE_VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeVarchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_RoleGrant.principal

/**
 *  Service Account used for Connector workload identity This is either the
 *  default service account if unspecified or Service Account provided by
 *  Customers through BYOSA.
 *
 *  Value: "CONNECTOR_SA"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RoleGrant_Principal_ConnectorSa;
/**
 *  Value type is not specified.
 *
 *  Value: "PRINCIPAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RoleGrant_Principal_PrincipalUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_RuntimeConfig.state

/**
 *  ACTIVATING.
 *
 *  Value: "ACTIVATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Activating;
/**
 *  ACTIVE.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Active;
/**
 *  CREATING.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Creating;
/**
 *  DELETING.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Deleting;
/**
 *  INACTIVE.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Inactive;
/**
 *  STATE_UNSPECIFIED.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_StateUnspecified;
/**
 *  UPDATING.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_RuntimeConfig_State_Updating;

// ----------------------------------------------------------------------------
// GTLRConnectors_Source.sourceType

/**
 *  Config Variable source type.
 *
 *  Value: "CONFIG_VARIABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Source_SourceType_ConfigVariable;
/**
 *  Default SOURCE.
 *
 *  Value: "SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Source_SourceType_SourceTypeUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts jose\@example.com from DATA_READ logging, and
 *  aliya\@example.com from DATA_WRITE logging.
 */
@interface GTLRConnectors_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRConnectors_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_AuditLogConfig_LogType_AdminRead Admin reads.
 *        Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRConnectors_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRConnectors_AuditLogConfig_LogType_DataWrite Data writes.
 *        Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRConnectors_AuditLogConfig_LogType_LogTypeUnspecified Default
 *        case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  AuthConfig defines details of a authentication type.
 */
@interface GTLRConnectors_AuthConfig : GTLRObject

/** List containing additional auth configs. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ConfigVariable *> *additionalVariables;

/**
 *  The type of authentication configured.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_AuthConfig_AuthType_AuthTypeUnspecified
 *        Authentication type not specified. (Value: "AUTH_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_AuthConfig_AuthType_Oauth2ClientCredentials Oauth
 *        2.0 Client Credentials Grant Authentication (Value:
 *        "OAUTH2_CLIENT_CREDENTIALS")
 *    @arg @c kGTLRConnectors_AuthConfig_AuthType_Oauth2JwtBearer JSON Web Token
 *        (JWT) Profile for Oauth 2.0 Authorization Grant based authentication
 *        (Value: "OAUTH2_JWT_BEARER")
 *    @arg @c kGTLRConnectors_AuthConfig_AuthType_UserPassword Username and
 *        Password Authentication. (Value: "USER_PASSWORD")
 */
@property(nonatomic, copy, nullable) NSString *authType;

/** Oauth2ClientCredentials. */
@property(nonatomic, strong, nullable) GTLRConnectors_Oauth2ClientCredentials *oauth2ClientCredentials;

/** Oauth2JwtBearer. */
@property(nonatomic, strong, nullable) GTLRConnectors_Oauth2JwtBearer *oauth2JwtBearer;

/** UserPassword. */
@property(nonatomic, strong, nullable) GTLRConnectors_UserPassword *userPassword;

@end


/**
 *  AuthConfigTemplate defines required field over an authentication type.
 */
@interface GTLRConnectors_AuthConfigTemplate : GTLRObject

/**
 *  The type of authentication configured.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_AuthConfigTemplate_AuthType_AuthTypeUnspecified
 *        Authentication type not specified. (Value: "AUTH_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_AuthConfigTemplate_AuthType_Oauth2ClientCredentials
 *        Oauth 2.0 Client Credentials Grant Authentication (Value:
 *        "OAUTH2_CLIENT_CREDENTIALS")
 *    @arg @c kGTLRConnectors_AuthConfigTemplate_AuthType_Oauth2JwtBearer JSON
 *        Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based
 *        authentication (Value: "OAUTH2_JWT_BEARER")
 *    @arg @c kGTLRConnectors_AuthConfigTemplate_AuthType_UserPassword Username
 *        and Password Authentication. (Value: "USER_PASSWORD")
 */
@property(nonatomic, copy, nullable) NSString *authType;

/** Config variables to describe an `AuthConfig` for a `Connection`. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ConfigVariableTemplate *> *configVariableTemplates;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRConnectors_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Expr *condition;

/**
 *  Specifies the principals requesting access for a Cloud Platform resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. *
 *  `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@example.com` . * `serviceAccount:{emailid}`:
 *  An email address that represents a service account. For example,
 *  `my-other-app\@appspot.gserviceaccount.com`. * `group:{emailid}`: An email
 *  address that represents a Google group. For example, `admins\@example.com`.
 *  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRConnectors_CancelOperationRequest : GTLRObject
@end


/**
 *  ConfigVariable represents a configuration variable present in a Connection.
 *  or AuthConfig.
 */
@interface GTLRConnectors_ConfigVariable : GTLRObject

/**
 *  Value is a bool.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/**
 *  Value is an integer
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intValue;

/** Key of the config variable. */
@property(nonatomic, copy, nullable) NSString *key;

/** Value is a secret. */
@property(nonatomic, strong, nullable) GTLRConnectors_Secret *secretValue;

/** Value is a string. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  ConfigVariableTemplate provides metadata about a `ConfigVariable` that is
 *  used in a Connection.
 */
@interface GTLRConnectors_ConfigVariableTemplate : GTLRObject

/**
 *  Description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Display name of the parameter. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Key of the config variable. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Flag represents that this `ConfigVariable` must be provided for a
 *  connection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *required;

/** Role grant configuration for the config variable. */
@property(nonatomic, strong, nullable) GTLRConnectors_RoleGrant *roleGrant;

/**
 *  Regular expression in RE2 syntax used for validating the `value` of a
 *  `ConfigVariable`.
 */
@property(nonatomic, copy, nullable) NSString *validationRegex;

/**
 *  Type of the parameter: string, int, bool etc. consider custom type for the
 *  benefit for the validation.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ConfigVariableTemplate_ValueType_Bool Value type
 *        is boolean. (Value: "BOOL")
 *    @arg @c kGTLRConnectors_ConfigVariableTemplate_ValueType_Int Value type is
 *        integer. (Value: "INT")
 *    @arg @c kGTLRConnectors_ConfigVariableTemplate_ValueType_Secret Value type
 *        is secret. (Value: "SECRET")
 *    @arg @c kGTLRConnectors_ConfigVariableTemplate_ValueType_String Value type
 *        is string. (Value: "STRING")
 *    @arg @c kGTLRConnectors_ConfigVariableTemplate_ValueType_ValueTypeUnspecified
 *        Value type is not specified. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  Connection represents an instance of connector.
 */
@interface GTLRConnectors_Connection : GTLRObject

/**
 *  Optional. Configuration for establishing the connection's authentication
 *  with an external system.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_AuthConfig *authConfig;

/**
 *  Optional. Configuration for configuring the connection with an external
 *  system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ConfigVariable *> *configVariables;

/**
 *  Required. Connector version on which the connection is created. The format
 *  is: projects/ * /locations/global/providers/ * /connectors/ * /versions/ *
 */
@property(nonatomic, copy, nullable) NSString *connectorVersion;

/** Output only. Created time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. Outbound domains/hosts needs to be allowlisted. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *egressBackends;

/**
 *  Output only. GCR location where the envoy image is stored. formatted like:
 *  gcr.io/{bucketName}/{imageName}
 */
@property(nonatomic, copy, nullable) NSString *envoyImageLocation;

/**
 *  Output only. GCR location where the runtime image is stored. formatted like:
 *  gcr.io/{bucketName}/{imageName}
 */
@property(nonatomic, copy, nullable) NSString *imageLocation;

/**
 *  Optional. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Connection_Labels *labels;

/**
 *  Optional. Configuration that indicates whether or not the Connection can be
 *  edited.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_LockConfig *lockConfig;

/**
 *  Output only. Resource name of the Connection. Format:
 *  projects/{project}/locations/{location}/connections/{connection}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Service account needed for runtime plane to access GCP resources.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only. The name of the Service Directory service name. Used for
 *  Private Harpoon to resolve the ILB address. e.g.
 *  "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
 */
@property(nonatomic, copy, nullable) NSString *serviceDirectory;

/** Output only. Current status of the connection. */
@property(nonatomic, strong, nullable) GTLRConnectors_ConnectionStatus *status;

/**
 *  Optional. Suspended indicates if a user has suspended a connection or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suspended;

/** Output only. Updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Connection_Labels : GTLRObject
@end


/**
 *  Metadata of connection schema.
 */
@interface GTLRConnectors_ConnectionSchemaMetadata : GTLRObject

/** Output only. List of actions. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *actions;

/** Output only. List of entity names. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entities;

@end


/**
 *  ConnectionStatus indicates the state of the connection.
 */
@interface GTLRConnectors_ConnectionStatus : GTLRObject

/**
 *  Description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  State.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Active Connection is
 *        running and ready for requests. (Value: "ACTIVE")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Creating Connection is
 *        being created. (Value: "CREATING")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Deleting Connection is
 *        being deleted. (Value: "DELETING")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Error Connection is not
 *        running due to an error. (Value: "ERROR")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Inactive Connection is
 *        stopped. (Value: "INACTIVE")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_StateUnspecified Connection
 *        does not have a state yet. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_ConnectionStatus_State_Updating Connection is
 *        being updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Status provides detailed information for the state. */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.
 */
@interface GTLRConnectors_Connector : GTLRObject

/** Output only. Created time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. Display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Link to documentation page. */
@property(nonatomic, copy, nullable) NSString *documentationUri;

/** Output only. Link to external page. */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Connector_Labels *labels;

/**
 *  Output only. Flag to mark the version indicating the launch stage.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Connector_LaunchStage_Deprecated DEPRECATED.
 *        (Value: "DEPRECATED")
 *    @arg @c kGTLRConnectors_Connector_LaunchStage_Ga GA. (Value: "GA")
 *    @arg @c kGTLRConnectors_Connector_LaunchStage_LaunchStageUnspecified
 *        LAUNCH_STAGE_UNSPECIFIED. (Value: "LAUNCH_STAGE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Connector_LaunchStage_Preview PREVIEW. (Value:
 *        "PREVIEW")
 */
@property(nonatomic, copy, nullable) NSString *launchStage;

/**
 *  Output only. Resource name of the Connector. Format:
 *  projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Output only. Cloud storage location of icons etc consumed by UI. */
@property(nonatomic, copy, nullable) NSString *webAssetsLocation;

@end


/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Connector_Labels : GTLRObject
@end


/**
 *  ConnectorVersion indicates a specific version of a connector.
 */
@interface GTLRConnectors_ConnectorVersion : GTLRObject

/** Output only. List of auth configs supported by the Connector Version. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_AuthConfigTemplate *> *authConfigTemplates;

/** Output only. List of config variables needed to create a connection. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ConfigVariableTemplate *> *configVariableTemplates;

/** Output only. Created time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Configuration for Egress Control. */
@property(nonatomic, strong, nullable) GTLRConnectors_EgressControlConfig *egressControlConfig;

/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 */
@property(nonatomic, strong, nullable) GTLRConnectors_ConnectorVersion_Labels *labels;

/**
 *  Output only. Flag to mark the version indicating the launch stage.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ConnectorVersion_LaunchStage_Deprecated
 *        DEPRECATED. (Value: "DEPRECATED")
 *    @arg @c kGTLRConnectors_ConnectorVersion_LaunchStage_Ga GA. (Value: "GA")
 *    @arg @c kGTLRConnectors_ConnectorVersion_LaunchStage_LaunchStageUnspecified
 *        LAUNCH_STAGE_UNSPECIFIED. (Value: "LAUNCH_STAGE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_ConnectorVersion_LaunchStage_Preview PREVIEW.
 *        (Value: "PREVIEW")
 */
@property(nonatomic, copy, nullable) NSString *launchStage;

/**
 *  Output only. Resource name of the Version. Format:
 *  projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".
 */
@property(nonatomic, copy, nullable) NSString *releaseVersion;

/**
 *  Output only. Role grant configuration for this config variable. It will be
 *  DEPRECATED soon.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_RoleGrant *roleGrant;

/** Output only. Role grant configurations for this connector version. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_RoleGrant *> *roleGrants;

/**
 *  Output only. Information about the runtime features supported by the
 *  Connector.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_SupportedRuntimeFeatures *supportedRuntimeFeatures;

/** Output only. Updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_ConnectorVersion_Labels : GTLRObject
@end


/**
 *  Egress control config for connector runtime. These configurations define the
 *  rules to identify which outbound domains/hosts needs to be whitelisted. It
 *  may be a static information for a particular connector version or it is
 *  derived from the configurations provided by the customer in Connection
 *  resource.
 */
@interface GTLRConnectors_EgressControlConfig : GTLRObject

/**
 *  Static Comma separated backends which are common for all Connection
 *  resources. Supported formats for each backend are host:port or just host
 *  (host can be ip address or domain name).
 */
@property(nonatomic, copy, nullable) NSString *backends;

/**
 *  Extractions Rules to extract the backends from customer provided
 *  configuration.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_ExtractionRules *extractionRules;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
 *  representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRConnectors_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRConnectors_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Extraction Rule.
 */
@interface GTLRConnectors_ExtractionRule : GTLRObject

/**
 *  Regex used to extract backend details from source. If empty, whole source
 *  value will be used.
 */
@property(nonatomic, copy, nullable) NSString *extractionRegex;

/** Source on which the rule is applied. */
@property(nonatomic, strong, nullable) GTLRConnectors_Source *source;

@end


/**
 *  Extraction Rules to identity the backends from customer provided
 *  configuration in Connection resource.
 */
@interface GTLRConnectors_ExtractionRules : GTLRObject

/** Collection of Extraction Rule. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ExtractionRule *> *extractionRule;

@end


/**
 *  Metadata of an entity field.
 */
@interface GTLRConnectors_Field : GTLRObject

/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Field_AdditionalDetails *additionalDetails;

/**
 *  The data type of the Field.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeArray UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_ARRAY")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeBigint Long integer(int64)
 *        data type. (Value: "DATA_TYPE_BIGINT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeBinary UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_BINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeBit Bit data type. (Value:
 *        "DATA_TYPE_BIT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeBlob UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_BLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeBoolean Boolean data type.
 *        (Value: "DATA_TYPE_BOOLEAN")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeChar Char data type.
 *        (Value: "DATA_TYPE_CHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeClob UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_CLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDatalink UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_DATALINK")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDate Date data type.
 *        (Value: "DATA_TYPE_DATE")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDatetime DEPRECATED! Use
 *        DATA_TYPE_TIMESTAMP. (Value: "DATA_TYPE_DATETIME")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDecimal Decimal data type.
 *        (Value: "DATA_TYPE_DECIMAL")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDistinct UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_DISTINCT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeDouble Double data type.
 *        (Value: "DATA_TYPE_DOUBLE")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeFloat Float data type.
 *        (Value: "DATA_TYPE_FLOAT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeInt DEPRECATED! Use
 *        DATA_TYPE_INTEGER. (Value: "DATA_TYPE_INT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeInteger Integer(int32) data
 *        type. (Value: "DATA_TYPE_INTEGER")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeJavaObject UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeLong DEPRECATED! Use
 *        DATA_TYPE_BIGINT. (Value: "DATA_TYPE_LONG")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeLongnvarchar Longnvarchar
 *        data type. (Value: "DATA_TYPE_LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeLongvarbinary UNSUPPORTED!
 *        Long variable binary data type. (Value: "DATA_TYPE_LONGVARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeLongvarchar Longvarchar
 *        data type. (Value: "DATA_TYPE_LONGVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeNchar Nchar data type.
 *        (Value: "DATA_TYPE_NCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeNclob UNSUPPORTED! NCLOB
 *        data type. (Value: "DATA_TYPE_NCLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeNull Null data type.
 *        (Value: "DATA_TYPE_NULL")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeNumeric Numeric data type.
 *        (Value: "DATA_TYPE_NUMERIC")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeNvarchar Nvarchar data
 *        type. (Value: "DATA_TYPE_NVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeOther UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_OTHER")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeReal Real data type.
 *        (Value: "DATA_TYPE_REAL")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeRef UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_REF")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeRefCursor UNSUPPORTED!
 *        Cursor reference type is not supported. (Value:
 *        "DATA_TYPE_REF_CURSOR")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeRowid UNSUPPORTED! Row id
 *        data type. (Value: "DATA_TYPE_ROWID")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeSmallint Short
 *        integer(int16) data type. (Value: "DATA_TYPE_SMALLINT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeSqlxml UNSUPPORTED! SQL XML
 *        data type is not supported. (Value: "DATA_TYPE_SQLXML")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeString DEPRECATED! Use
 *        DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_STRING")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeStruct UNSUPPORTED! Binary
 *        data type. (Value: "DATA_TYPE_STRUCT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeTime Time data type.
 *        (Value: "DATA_TYPE_TIME")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeTimestamp Timestamp data
 *        type. (Value: "DATA_TYPE_TIMESTAMP")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeTimestampWithTimezone
 *        UNSUPPORTED! Use TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeTimeWithTimezone
 *        UNSUPPORTED! Use TIME or TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeTinyint Small integer(int8)
 *        data type. (Value: "DATA_TYPE_TINYINT")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeUnspecified Data type is
 *        not specified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeUuid DEPRECATED! Use
 *        DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_UUID")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeVarbinary UNSUPPORTED!
 *        Variable binary data type. (Value: "DATA_TYPE_VARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeVarchar Varchar data type.
 *        (Value: "DATA_TYPE_VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Field provided by the
 *  external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Name of the Field. */
@property(nonatomic, copy, nullable) NSString *field;

/**
 *  The following boolean field specifies if the current Field acts as a primary
 *  key or id if the parent is of type entity.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *key;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

/**
 *  Specifies if the Field is readonly.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readonly;

@end


/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Field_AdditionalDetails : GTLRObject
@end


/**
 *  Metadata of an input parameter.
 */
@interface GTLRConnectors_InputParameter : GTLRObject

/**
 *  The data type of the Parameter.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeArray UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_ARRAY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeBigint Long
 *        integer(int64) data type. (Value: "DATA_TYPE_BIGINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeBinary
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_BINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeBit Bit data type.
 *        (Value: "DATA_TYPE_BIT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeBlob UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_BLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeBoolean Boolean
 *        data type. (Value: "DATA_TYPE_BOOLEAN")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeChar Char data
 *        type. (Value: "DATA_TYPE_CHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeClob UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_CLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDatalink
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_DATALINK")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDate Date data
 *        type. (Value: "DATA_TYPE_DATE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDatetime
 *        DEPRECATED! Use DATA_TYPE_TIMESTAMP. (Value: "DATA_TYPE_DATETIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDecimal Decimal
 *        data type. (Value: "DATA_TYPE_DECIMAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDistinct
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_DISTINCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeDouble Double data
 *        type. (Value: "DATA_TYPE_DOUBLE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeFloat Float data
 *        type. (Value: "DATA_TYPE_FLOAT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeInt DEPRECATED!
 *        Use DATA_TYPE_INTEGER. (Value: "DATA_TYPE_INT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeInteger
 *        Integer(int32) data type. (Value: "DATA_TYPE_INTEGER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeJavaObject
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeLong DEPRECATED!
 *        Use DATA_TYPE_BIGINT. (Value: "DATA_TYPE_LONG")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeLongnvarchar
 *        Longnvarchar data type. (Value: "DATA_TYPE_LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeLongvarbinary
 *        UNSUPPORTED! Long variable binary data type. (Value:
 *        "DATA_TYPE_LONGVARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeLongvarchar
 *        Longvarchar data type. (Value: "DATA_TYPE_LONGVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeNchar Nchar data
 *        type. (Value: "DATA_TYPE_NCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeNclob UNSUPPORTED!
 *        NCLOB data type. (Value: "DATA_TYPE_NCLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeNull Null data
 *        type. (Value: "DATA_TYPE_NULL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeNumeric Numeric
 *        data type. (Value: "DATA_TYPE_NUMERIC")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeNvarchar Nvarchar
 *        data type. (Value: "DATA_TYPE_NVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeOther UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_OTHER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeReal Real data
 *        type. (Value: "DATA_TYPE_REAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeRef UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_REF")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeRefCursor
 *        UNSUPPORTED! Cursor reference type is not supported. (Value:
 *        "DATA_TYPE_REF_CURSOR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeRowid UNSUPPORTED!
 *        Row id data type. (Value: "DATA_TYPE_ROWID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeSmallint Short
 *        integer(int16) data type. (Value: "DATA_TYPE_SMALLINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeSqlxml
 *        UNSUPPORTED! SQL XML data type is not supported. (Value:
 *        "DATA_TYPE_SQLXML")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeString DEPRECATED!
 *        Use DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_STRING")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeStruct
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_STRUCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeTime Time data
 *        type. (Value: "DATA_TYPE_TIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeTimestamp
 *        Timestamp data type. (Value: "DATA_TYPE_TIMESTAMP")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeTimestampWithTimezone
 *        UNSUPPORTED! Use TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeTimeWithTimezone
 *        UNSUPPORTED! Use TIME or TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeTinyint Small
 *        integer(int8) data type. (Value: "DATA_TYPE_TINYINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified Data
 *        type is not specified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeUuid DEPRECATED!
 *        Use DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_UUID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeVarbinary
 *        UNSUPPORTED! Variable binary data type. (Value: "DATA_TYPE_VARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeVarchar Varchar
 *        data type. (Value: "DATA_TYPE_VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Parameter provided by
 *  the external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Parameter.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

/** Name of the Parameter. */
@property(nonatomic, copy, nullable) NSString *parameter;

@end


/**
 *  JWT claims used for the jwt-bearer authorization grant.
 */
@interface GTLRConnectors_JwtClaims : GTLRObject

/** Value for the "aud" claim. */
@property(nonatomic, copy, nullable) NSString *audience;

/** Value for the "iss" claim. */
@property(nonatomic, copy, nullable) NSString *issuer;

/** Value for the "sub" claim. */
@property(nonatomic, copy, nullable) NSString *subject;

@end


/**
 *  Response message for ConnectorsService.ListConnections
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "connections" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListConnectionsResponse : GTLRCollectionObject

/**
 *  Connections.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Connection *> *connections;

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for Connectors.ListConnectors.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "connectors" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListConnectorsResponse : GTLRCollectionObject

/**
 *  A list of connectors.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Connector *> *connectors;

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for Connectors.ListConnectorVersions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "connectorVersions" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRConnectors_ListConnectorVersionsResponse : GTLRCollectionObject

/**
 *  A list of connector versions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ConnectorVersion *> *connectorVersions;

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Operation *> *operations;

@end


/**
 *  Response message for Connectors.ListProviders.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "providers" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListProvidersResponse : GTLRCollectionObject

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of providers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Provider *> *providers;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for ConnectorsService.ListRuntimeActionSchemas.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "runtimeActionSchemas" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRConnectors_ListRuntimeActionSchemasResponse : GTLRCollectionObject

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Runtime action schemas.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_RuntimeActionSchema *> *runtimeActionSchemas;

@end


/**
 *  Response message for ConnectorsService.ListRuntimeEntitySchemas.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "runtimeEntitySchemas" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRConnectors_ListRuntimeEntitySchemasResponse : GTLRCollectionObject

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Runtime entity schemas.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_RuntimeEntitySchema *> *runtimeEntitySchemas;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRConnectors_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Location_Metadata : GTLRObject
@end


/**
 *  Determines whether or no a connection is locked. If locked, a reason must be
 *  specified.
 */
@interface GTLRConnectors_LockConfig : GTLRObject

/**
 *  Indicates whether or not the connection is locked.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locked;

/** Describes why a connection is locked. */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See
 *  https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
 */
@interface GTLRConnectors_Oauth2ClientCredentials : GTLRObject

/** The client identifier. */
@property(nonatomic, copy, nullable) NSString *clientId;

/** Secret version reference containing the client secret. */
@property(nonatomic, strong, nullable) GTLRConnectors_Secret *clientSecret;

@end


/**
 *  Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0
 *  Authorization Grant based authentication. See
 *  https://tools.ietf.org/html/rfc7523 for more details.
 */
@interface GTLRConnectors_Oauth2JwtBearer : GTLRObject

/**
 *  Secret version reference containing a PKCS#8 PEM-encoded private key
 *  associated with the Client Certificate. This private key will be used to
 *  sign JWTs used for the jwt-bearer authorization grant. Specified in the form
 *  as: `projects/ * /secrets/ * /versions/ *`.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Secret *clientKey;

/** JwtClaims providers fields to generate the token. */
@property(nonatomic, strong, nullable) GTLRConnectors_JwtClaims *jwtClaims;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRConnectors_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRConnectors_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRConnectors_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have successfully been cancelled have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRConnectors_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Provider indicates the owner who provides the connectors.
 */
@interface GTLRConnectors_Provider : GTLRObject

/** Output only. Created time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. Display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Link to documentation page. */
@property(nonatomic, copy, nullable) NSString *documentationUri;

/** Output only. Link to external page. */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Provider_Labels *labels;

/**
 *  Output only. Flag to mark the version indicating the launch stage.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Provider_LaunchStage_Deprecated DEPRECATED.
 *        (Value: "DEPRECATED")
 *    @arg @c kGTLRConnectors_Provider_LaunchStage_Ga GA. (Value: "GA")
 *    @arg @c kGTLRConnectors_Provider_LaunchStage_LaunchStageUnspecified
 *        LAUNCH_STAGE_UNSPECIFIED. (Value: "LAUNCH_STAGE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Provider_LaunchStage_Preview PREVIEW. (Value:
 *        "PREVIEW")
 */
@property(nonatomic, copy, nullable) NSString *launchStage;

/**
 *  Output only. Resource name of the Provider. Format:
 *  projects/{project}/locations/{location}/providers/{provider}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Output only. Cloud storage location of icons etc consumed by UI. */
@property(nonatomic, copy, nullable) NSString *webAssetsLocation;

@end


/**
 *  Output only. Resource labels to represent user-provided metadata. Refer to
 *  cloud documentation on labels for more details.
 *  https://cloud.google.com/compute/docs/labeling-resources
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Provider_Labels : GTLRObject
@end


/**
 *  Resource definition
 */
@interface GTLRConnectors_Resource : GTLRObject

/**
 *  Template to uniquely represent a GCP resource in a format IAM expects This
 *  is a template that can have references to other values provided in the
 *  config variable template.
 */
@property(nonatomic, copy, nullable) NSString *pathTemplate;

/**
 *  Different types of resource supported.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Resource_Type_GcpProject GCP Project Resource.
 *        (Value: "GCP_PROJECT")
 *    @arg @c kGTLRConnectors_Resource_Type_GcpResource Any GCP Resource which
 *        is identified uniquely by IAM. (Value: "GCP_RESOURCE")
 *    @arg @c kGTLRConnectors_Resource_Type_GcpSecretmanagerSecret GCP Secret
 *        Resource. (Value: "GCP_SECRETMANAGER_SECRET")
 *    @arg @c kGTLRConnectors_Resource_Type_GcpSecretmanagerSecretVersion GCP
 *        Secret Version Resource. (Value: "GCP_SECRETMANAGER_SECRET_VERSION")
 *    @arg @c kGTLRConnectors_Resource_Type_TypeUnspecified Value type is not
 *        specified. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Metadata of result field.
 */
@interface GTLRConnectors_ResultMetadata : GTLRObject

/**
 *  The data type of the field.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeArray UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_ARRAY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeBigint Long
 *        integer(int64) data type. (Value: "DATA_TYPE_BIGINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeBinary
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_BINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeBit Bit data type.
 *        (Value: "DATA_TYPE_BIT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeBlob UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_BLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeBoolean Boolean
 *        data type. (Value: "DATA_TYPE_BOOLEAN")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeChar Char data
 *        type. (Value: "DATA_TYPE_CHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeClob UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_CLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDatalink
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_DATALINK")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDate Date data
 *        type. (Value: "DATA_TYPE_DATE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDatetime
 *        DEPRECATED! Use DATA_TYPE_TIMESTAMP. (Value: "DATA_TYPE_DATETIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDecimal Decimal
 *        data type. (Value: "DATA_TYPE_DECIMAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDistinct
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_DISTINCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeDouble Double data
 *        type. (Value: "DATA_TYPE_DOUBLE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeFloat Float data
 *        type. (Value: "DATA_TYPE_FLOAT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeInt DEPRECATED!
 *        Use DATA_TYPE_INTEGER. (Value: "DATA_TYPE_INT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeInteger
 *        Integer(int32) data type. (Value: "DATA_TYPE_INTEGER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeJavaObject
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeLong DEPRECATED!
 *        Use DATA_TYPE_BIGINT. (Value: "DATA_TYPE_LONG")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeLongnvarchar
 *        Longnvarchar data type. (Value: "DATA_TYPE_LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeLongvarbinary
 *        UNSUPPORTED! Long variable binary data type. (Value:
 *        "DATA_TYPE_LONGVARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeLongvarchar
 *        Longvarchar data type. (Value: "DATA_TYPE_LONGVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeNchar Nchar data
 *        type. (Value: "DATA_TYPE_NCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeNclob UNSUPPORTED!
 *        NCLOB data type. (Value: "DATA_TYPE_NCLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeNull Null data
 *        type. (Value: "DATA_TYPE_NULL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeNumeric Numeric
 *        data type. (Value: "DATA_TYPE_NUMERIC")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeNvarchar Nvarchar
 *        data type. (Value: "DATA_TYPE_NVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeOther UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_OTHER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeReal Real data
 *        type. (Value: "DATA_TYPE_REAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeRef UNSUPPORTED!
 *        Binary data type. (Value: "DATA_TYPE_REF")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeRefCursor
 *        UNSUPPORTED! Cursor reference type is not supported. (Value:
 *        "DATA_TYPE_REF_CURSOR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeRowid UNSUPPORTED!
 *        Row id data type. (Value: "DATA_TYPE_ROWID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeSmallint Short
 *        integer(int16) data type. (Value: "DATA_TYPE_SMALLINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeSqlxml
 *        UNSUPPORTED! SQL XML data type is not supported. (Value:
 *        "DATA_TYPE_SQLXML")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeString DEPRECATED!
 *        Use DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_STRING")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeStruct
 *        UNSUPPORTED! Binary data type. (Value: "DATA_TYPE_STRUCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeTime Time data
 *        type. (Value: "DATA_TYPE_TIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeTimestamp
 *        Timestamp data type. (Value: "DATA_TYPE_TIMESTAMP")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeTimestampWithTimezone
 *        UNSUPPORTED! Use TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeTimeWithTimezone
 *        UNSUPPORTED! Use TIME or TIMESTAMP instead. (Value:
 *        "DATA_TYPE_TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeTinyint Small
 *        integer(int8) data type. (Value: "DATA_TYPE_TINYINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified Data
 *        type is not specified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeUuid DEPRECATED!
 *        Use DATA_TYPE_VARCHAR. (Value: "DATA_TYPE_UUID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeVarbinary
 *        UNSUPPORTED! Variable binary data type. (Value: "DATA_TYPE_VARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeVarchar Varchar
 *        data type. (Value: "DATA_TYPE_VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  A brief description of the field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Name of the result field. */
@property(nonatomic, copy, nullable) NSString *field;

@end


/**
 *  This configuration defines all the Cloud IAM roles that needs to be granted
 *  to a particular GCP resource for the selected prinicpal like service
 *  account. These configurations will let UI display to customers what IAM
 *  roles need to be granted by them. Or these configurations can be used by the
 *  UI to render a 'grant' button to do the same on behalf of the user.
 */
@interface GTLRConnectors_RoleGrant : GTLRObject

/** Template that UI can use to provide helper text to customers. */
@property(nonatomic, copy, nullable) NSString *helperTextTemplate;

/**
 *  Prinicipal/Identity for whom the role need to assigned.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_RoleGrant_Principal_ConnectorSa Service Account
 *        used for Connector workload identity This is either the default
 *        service account if unspecified or Service Account provided by
 *        Customers through BYOSA. (Value: "CONNECTOR_SA")
 *    @arg @c kGTLRConnectors_RoleGrant_Principal_PrincipalUnspecified Value
 *        type is not specified. (Value: "PRINCIPAL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *principal;

/** Resource on which the roles needs to be granted for the principal. */
@property(nonatomic, strong, nullable) GTLRConnectors_Resource *resource;

/** List of roles that need to be granted. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *roles;

@end


/**
 *  Schema of a runtime action.
 */
@interface GTLRConnectors_RuntimeActionSchema : GTLRObject

/** Output only. Name of the action. */
@property(nonatomic, copy, nullable) NSString *action;

/** Output only. List of input parameter metadata for the action. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_InputParameter *> *inputParameters;

/** Output only. List of result field metadata. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ResultMetadata *> *resultMetadata;

@end


/**
 *  RuntimeConfig is the singleton resource of each location. It includes
 *  generic resource configs consumed by control plane and runtime plane like:
 *  pub/sub topic/subscription resource name, Cloud Storage location storing
 *  schema etc.
 */
@interface GTLRConnectors_RuntimeConfig : GTLRObject

/**
 *  Output only. Pub/Sub subscription for connd to receive message. E.g.
 *  projects/{project-id}/subscriptions/{topic-id}
 */
@property(nonatomic, copy, nullable) NSString *conndSubscription;

/**
 *  Output only. Pub/Sub topic for connd to send message. E.g.
 *  projects/{project-id}/topics/{topic-id}
 */
@property(nonatomic, copy, nullable) NSString *conndTopic;

/**
 *  Output only. Pub/Sub subscription for control plane to receive message. E.g.
 *  projects/{project-id}/subscriptions/{topic-id}
 */
@property(nonatomic, copy, nullable) NSString *controlPlaneSubscription;

/**
 *  Output only. Pub/Sub topic for control plne to send message. communication.
 *  E.g. projects/{project-id}/topics/{topic-id}
 */
@property(nonatomic, copy, nullable) NSString *controlPlaneTopic;

/** Output only. location_id of the runtime location. E.g. "us-west1". */
@property(nonatomic, copy, nullable) NSString *locationId;

/** Output only. The endpoint of the connectors runtime ingress. */
@property(nonatomic, copy, nullable) NSString *runtimeEndpoint;

/**
 *  Output only. The Cloud Storage bucket that stores connector's schema
 *  reports.
 */
@property(nonatomic, copy, nullable) NSString *schemaGcsBucket;

/**
 *  Output only. The name of the Service Directory service name. Used for
 *  Private Harpoon to resolve the ILB address. e.g.
 *  "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
 */
@property(nonatomic, copy, nullable) NSString *serviceDirectory;

/**
 *  Output only. The state of the location.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Activating ACTIVATING. (Value:
 *        "ACTIVATING")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Active ACTIVE. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Creating CREATING. (Value:
 *        "CREATING")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Deleting DELETING. (Value:
 *        "DELETING")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Inactive INACTIVE. (Value:
 *        "INACTIVE")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_StateUnspecified
 *        STATE_UNSPECIFIED. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_RuntimeConfig_State_Updating UPDATING. (Value:
 *        "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Schema of a runtime entity.
 */
@interface GTLRConnectors_RuntimeEntitySchema : GTLRObject

/** Output only. Name of the entity. */
@property(nonatomic, copy, nullable) NSString *entity;

/** Output only. List of fields in the entity. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Field *> *fields;

@end


/**
 *  Secret provides a reference to entries in Secret Manager.
 */
@interface GTLRConnectors_Secret : GTLRObject

/**
 *  The resource name of the secret version in the format, format as: `projects/
 *  * /secrets/ * /versions/ *`.
 */
@property(nonatomic, copy, nullable) NSString *secretVersion;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRConnectors_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Cloud Platform services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Source to extract the backend from.
 */
@interface GTLRConnectors_Source : GTLRObject

/** Field identifier. For example config vaiable name. */
@property(nonatomic, copy, nullable) NSString *fieldId;

/**
 *  Type of the source.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Source_SourceType_ConfigVariable Config Variable
 *        source type. (Value: "CONFIG_VARIABLE")
 *    @arg @c kGTLRConnectors_Source_SourceType_SourceTypeUnspecified Default
 *        SOURCE. (Value: "SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sourceType;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRConnectors_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRConnectors_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Status_Details_Item : GTLRObject
@end


/**
 *  Supported runtime features of a connector version. This is passed to the
 *  management layer to add a new connector version by the connector developer.
 *  Details about how this proto is passed to the management layer is covered in
 *  this doc - go/runtime-manifest.
 */
@interface GTLRConnectors_SupportedRuntimeFeatures : GTLRObject

/**
 *  Specifies if the connector supports action apis like 'executeAction'.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *actionApis;

/**
 *  Specifies if the connector supports entity apis like 'createEntity'.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *entityApis;

/**
 *  Specifies if the connector supports 'ExecuteSqlQuery' operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sqlQuery;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRConnectors_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRConnectors_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Parameters to support Username and Password Authentication.
 */
@interface GTLRConnectors_UserPassword : GTLRObject

/** Secret version reference containing the password. */
@property(nonatomic, strong, nullable) GTLRConnectors_Secret *password;

/** Username. */
@property(nonatomic, copy, nullable) NSString *username;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
