// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Channel API (cloudchannel/v1)
// Documentation:
//   https://cloud.google.com/channel

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudchannel_GoogleCloudChannelV1ActivateEntitlementRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1CancelEntitlementRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ChangeOfferRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ChangeParametersRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ChangeRenewalSettingsRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink;
@class GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1CreateEntitlementRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1Customer;
@class GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1ProvisionCloudIdentityRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1StartPaidServiceRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1SuspendEntitlementRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsToGoogleRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberRequest;
@class GTLRCloudchannel_GoogleCloudChannelV1UpdateChannelPartnerLinkRequest;
@class GTLRCloudchannel_GoogleLongrunningCancelOperationRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// changeOfferPurchaseChangeType

/**
 *  Not used.
 *
 *  Value: "CHANGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeChangeTypeUnspecified;
/**
 *  SKU is a downgrade on the current entitlement.
 *
 *  Value: "DOWNGRADE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeDowngrade;
/**
 *  SKU is an upgrade on the current entitlement.
 *
 *  Value: "UPGRADE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeUpgrade;

// ----------------------------------------------------------------------------
// view

/**
 *  Includes all fields except the
 *  ChannelPartnerLink.channel_partner_cloud_identity_info.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewBasic;
/**
 *  Includes all fields.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewFull;
/**
 *  The default / unset value. The API will default to the BASIC view.
 *
 *  Value: "UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloudchannel query classes.
 */
@interface GTLRCloudchannelQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Initiates a channel partner link between a distributor and a reseller or
 *  between resellers in an n-tier reseller channel. To accept the invite, the
 *  invited partner should follow the invite_link_uri provided in the response.
 *  If the link creation is accepted, a valid link is set up between the two
 *  involved parties. To call this method, you must be a distributor. Possible
 *  Error Codes: * PERMISSION_DENIED: If the reseller account making the request
 *  and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  ALREADY_EXISTS: If the ChannelPartnerLink sent in the request already
 *  exists. * NOT_FOUND: If no Cloud Identity customer exists for domain
 *  provided. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. In this case, contact Cloud Channel support. * UNKNOWN: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. Return Value: Newly created
 *  ChannelPartnerLink resource if successful, otherwise error is returned.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCreate : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsChannelPartnerLinksCreateWithObject:parent:]

/**
 *  Required. The resource name of reseller's account for which to create a
 *  channel partner link. The parent takes the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Initiates a channel partner link between a distributor and a reseller or
 *  between resellers in an n-tier reseller channel. To accept the invite, the
 *  invited partner should follow the invite_link_uri provided in the response.
 *  If the link creation is accepted, a valid link is set up between the two
 *  involved parties. To call this method, you must be a distributor. Possible
 *  Error Codes: * PERMISSION_DENIED: If the reseller account making the request
 *  and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  ALREADY_EXISTS: If the ChannelPartnerLink sent in the request already
 *  exists. * NOT_FOUND: If no Cloud Identity customer exists for domain
 *  provided. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. In this case, contact Cloud Channel support. * UNKNOWN: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. Return Value: Newly created
 *  ChannelPartnerLink resource if successful, otherwise error is returned.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink
 *    to include in the query.
 *  @param parent Required. The resource name of reseller's account for which to
 *    create a channel partner link. The parent takes the format:
 *    accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns a requested ChannelPartnerLink resource. To call this method, you
 *  must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * NOT_FOUND: ChannelPartnerLink resource not
 *  found. Results due invalid channel partner link name. Return Value:
 *  ChannelPartnerLink resource if found, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksGet : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsChannelPartnerLinksGetWithname:]

/**
 *  Required. The resource name of the channel partner link to retrieve. The
 *  name takes the format: accounts/{account_id}/channelPartnerLinks/{id} where
 *  {id} is the Cloud Identity ID of the partner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The level of granularity the ChannelPartnerLink will display.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelViewUnspecified The default / unset value. The
 *        API will default to the BASIC view. (Value: "UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelViewBasic Includes all fields except the
 *        ChannelPartnerLink.channel_partner_cloud_identity_info. (Value:
 *        "BASIC")
 *    @arg @c kGTLRCloudchannelViewFull Includes all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Returns a requested ChannelPartnerLink resource. To call this method, you
 *  must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * NOT_FOUND: ChannelPartnerLink resource not
 *  found. Results due invalid channel partner link name. Return Value:
 *  ChannelPartnerLink resource if found, otherwise returns an error.
 *
 *  @param name Required. The resource name of the channel partner link to
 *    retrieve. The name takes the format:
 *    accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud
 *    Identity ID of the partner.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List ChannelPartnerLinks belonging to a distributor. To call this method,
 *  you must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Return Value: If successful, returns the list of
 *  ChannelPartnerLink resources for the distributor account, otherwise returns
 *  an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsChannelPartnerLinksListWithparent:]

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, server will pick a default size (25). The maximum
 *  value is 200, values above 200 will be coerced to 200.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one. Typically obtained via ListChannelPartnerLinksResponse.next_page_token
 *  of the previous CloudChannelService.ListChannelPartnerLinks call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account for listing channel
 *  partner links. The parent takes the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The level of granularity the ChannelPartnerLink will display.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelViewUnspecified The default / unset value. The
 *        API will default to the BASIC view. (Value: "UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelViewBasic Includes all fields except the
 *        ChannelPartnerLink.channel_partner_cloud_identity_info. (Value:
 *        "BASIC")
 *    @arg @c kGTLRCloudchannelViewFull Includes all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListChannelPartnerLinksResponse.
 *
 *  List ChannelPartnerLinks belonging to a distributor. To call this method,
 *  you must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Return Value: If successful, returns the list of
 *  ChannelPartnerLink resources for the distributor account, otherwise returns
 *  an error.
 *
 *  @param parent Required. The resource name of the reseller account for
 *    listing channel partner links. The parent takes the format:
 *    accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a channel partner link. A distributor calls this method to change a
 *  link's status. For example, suspend a partner link. To call this method, you
 *  must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: It can happen in following scenarios
 *  - * Missing or invalid required parameters in the request. * Updating link
 *  state from invited to active or suspended. * Sending
 *  reseller_cloud_identity_id, invite_url or name in update mask. * NOT_FOUND:
 *  ChannelPartnerLink resource not found. * INTERNAL: Any non-user error
 *  related to a technical issue in the backend. In this case, contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. In this case, contact Cloud Channel support. Return Value:
 *  If successful, the updated ChannelPartnerLink resource, otherwise returns an
 *  error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksPatch : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsChannelPartnerLinksPatchWithObject:name:]

/**
 *  Required. The resource name of the channel partner link to cancel. The name
 *  takes the format: accounts/{account_id}/channelPartnerLinks/{id} where {id}
 *  is the Cloud Identity ID of the partner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Updates a channel partner link. A distributor calls this method to change a
 *  link's status. For example, suspend a partner link. To call this method, you
 *  must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: It can happen in following scenarios
 *  - * Missing or invalid required parameters in the request. * Updating link
 *  state from invited to active or suspended. * Sending
 *  reseller_cloud_identity_id, invite_url or name in update mask. * NOT_FOUND:
 *  ChannelPartnerLink resource not found. * INTERNAL: Any non-user error
 *  related to a technical issue in the backend. In this case, contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. In this case, contact Cloud Channel support. Return Value:
 *  If successful, the updated ChannelPartnerLink resource, otherwise returns an
 *  error.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1UpdateChannelPartnerLinkRequest to
 *    include in the query.
 *  @param name Required. The resource name of the channel partner link to
 *    cancel. The name takes the format:
 *    accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud
 *    Identity ID of the partner.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1UpdateChannelPartnerLinkRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Confirms the existence of Cloud Identity accounts, based on the domain and
 *  whether the Cloud Identity accounts are owned by the reseller. Possible
 *  Error Codes: * PERMISSION_DENIED: If the reseller account making the request
 *  and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  INVALID_VALUE: Invalid domain value in the request. Return Value: List of
 *  CloudIdentityCustomerAccount resources for the domain. List may be empty.
 *  Note: in the v1alpha1 version of the API, a NOT_FOUND error is returned if
 *  no CloudIdentityCustomerAccount resources match the domain.
 *
 *  Method: cloudchannel.accounts.checkCloudIdentityAccountsExist
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCheckCloudIdentityAccountsExist : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCheckCloudIdentityAccountsExistWithObject:parent:]

/**
 *  Required. The resource name of the reseller account. The parent takes the
 *  format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse.
 *
 *  Confirms the existence of Cloud Identity accounts, based on the domain and
 *  whether the Cloud Identity accounts are owned by the reseller. Possible
 *  Error Codes: * PERMISSION_DENIED: If the reseller account making the request
 *  and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  INVALID_VALUE: Invalid domain value in the request. Return Value: List of
 *  CloudIdentityCustomerAccount resources for the domain. List may be empty.
 *  Note: in the v1alpha1 version of the API, a NOT_FOUND error is returned if
 *  no CloudIdentityCustomerAccount resources match the domain.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest
 *    to include in the query.
 *  @param parent Required. The resource name of the reseller account. The
 *    parent takes the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCheckCloudIdentityAccountsExist
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible Error Codes: * PERMISSION_DENIED: If the reseller account making
 *  the request and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: It can happen in following scenarios - * Missing or
 *  invalid required parameters in the request. * Domain field value doesn't
 *  match the domain specified in primary email. Return Value: If successful,
 *  the newly created Customer resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCreate : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersCreateWithObject:parent:]

/**
 *  Required. The resource name of reseller account in which to create the
 *  customer. The parent takes the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible Error Codes: * PERMISSION_DENIED: If the reseller account making
 *  the request and the reseller account being queried for are different. *
 *  INVALID_ARGUMENT: It can happen in following scenarios - * Missing or
 *  invalid required parameters in the request. * Domain field value doesn't
 *  match the domain specified in primary email. Return Value: If successful,
 *  the newly created Customer resource, otherwise returns an error.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param parent Required. The resource name of reseller account in which to
 *    create the customer. The parent takes the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the given Customer permanently and irreversibly. Possible Error
 *  Codes: * PERMISSION_DENIED: If the account making the request does not own
 *  this customer. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * FAILED_PRECONDITION: If the customer has existing
 *  entitlements. * NOT_FOUND: No Customer resource found for the name specified
 *  in the request.
 *
 *  Method: cloudchannel.accounts.customers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersDelete : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersDeleteWithname:]

/** Required. The resource name of the customer to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes the given Customer permanently and irreversibly. Possible Error
 *  Codes: * PERMISSION_DENIED: If the account making the request does not own
 *  this customer. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * FAILED_PRECONDITION: If the customer has existing
 *  entitlements. * NOT_FOUND: No Customer resource found for the name specified
 *  in the request.
 *
 *  @param name Required. The resource name of the customer to delete.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Activates a previously suspended entitlement. The entitlement must be in a
 *  suspended state for it to be activated. Entitlements suspended for pending
 *  ToS acceptance can't be activated using this method. An entitlement
 *  activation is a long-running operation and can result in updates to the
 *  state of the customer entitlement. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller or if the
 *  reseller account making the request and reseller account being queried for
 *  are different. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * NOT_FOUND: Entitlement resource not found. *
 *  SUSPENSION_NOT_RESELLER_INITIATED: Can't activate an entitlement that is
 *  pending TOS acceptance. Only reseller initiated suspensions can be
 *  activated. * NOT_SUSPENDED: Can't activate entitlements that are already in
 *  ACTIVE state. Can only activate suspended entitlements. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.activate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsActivate : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsActivateWithObject:name:]

/**
 *  Required. The resource name of the entitlement to activate. The name takes
 *  the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Activates a previously suspended entitlement. The entitlement must be in a
 *  suspended state for it to be activated. Entitlements suspended for pending
 *  ToS acceptance can't be activated using this method. An entitlement
 *  activation is a long-running operation and can result in updates to the
 *  state of the customer entitlement. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller or if the
 *  reseller account making the request and reseller account being queried for
 *  are different. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * NOT_FOUND: Entitlement resource not found. *
 *  SUSPENSION_NOT_RESELLER_INITIATED: Can't activate an entitlement that is
 *  pending TOS acceptance. Only reseller initiated suspensions can be
 *  activated. * NOT_SUSPENDED: Can't activate entitlements that are already in
 *  ACTIVE state. Can only activate suspended entitlements. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ActivateEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to activate. The
 *    name takes the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsActivate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ActivateEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels a previously fulfilled entitlement. An entitlement cancellation is a
 *  long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the
 *  customer doesn't belong to the reseller or if the reseller account making
 *  the request and reseller account being queried for are different. *
 *  FAILED_PRECONDITION: If there are any Google Cloud projects linked to the
 *  Google Cloud entitlement's Cloud Billing subaccount. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. * NOT_FOUND:
 *  Entitlement resource not found. * DELETION_TYPE_NOT_ALLOWED: Cancel is only
 *  allowed for Google Workspace add-ons or entitlements for Google Cloud's
 *  development platform. * INTERNAL: Any non-user error related to a technical
 *  issue in the backend. In this case, contact Cloud Channel support. *
 *  UNKNOWN: Any non-user error related to a technical issue in the backend. In
 *  this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsCancel : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsCancelWithObject:name:]

/**
 *  Required. The resource name of the entitlement to cancel. The name takes the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Cancels a previously fulfilled entitlement. An entitlement cancellation is a
 *  long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the
 *  customer doesn't belong to the reseller or if the reseller account making
 *  the request and reseller account being queried for are different. *
 *  FAILED_PRECONDITION: If there are any Google Cloud projects linked to the
 *  Google Cloud entitlement's Cloud Billing subaccount. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. * NOT_FOUND:
 *  Entitlement resource not found. * DELETION_TYPE_NOT_ALLOWED: Cancel is only
 *  allowed for Google Workspace add-ons or entitlements for Google Cloud's
 *  development platform. * INTERNAL: Any non-user error related to a technical
 *  issue in the backend. In this case, contact Cloud Channel support. *
 *  UNKNOWN: Any non-user error related to a technical issue in the backend. In
 *  this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CancelEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to cancel. The
 *    name takes the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CancelEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the Offer for an existing customer entitlement. An entitlement
 *  update is a long-running operation and results in updates to the entitlement
 *  as a result of fulfillment. Possible Error Codes: * PERMISSION_DENIED: If
 *  the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. * NOT_FOUND: Offer or
 *  Entitlement resource not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeOffer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeOffer : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsChangeOfferWithObject:name:]

/**
 *  Required. The name of the entitlement to update. Format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Updates the Offer for an existing customer entitlement. An entitlement
 *  update is a long-running operation and results in updates to the entitlement
 *  as a result of fulfillment. Possible Error Codes: * PERMISSION_DENIED: If
 *  the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. * NOT_FOUND: Offer or
 *  Entitlement resource not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1ChangeOfferRequest
 *    to include in the query.
 *  @param name Required. The name of the entitlement to update. Format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeOffer
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeOfferRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Change parameters of the entitlement An entitlement parameters update is a
 *  long-running operation and results in updates to the entitlement as a result
 *  of fulfillment. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request. For example, if the number of seats
 *  being changed to is greater than the allowed number of max seats for the
 *  resource. Or decreasing seats for a commitment based plan. * NOT_FOUND:
 *  Entitlement resource not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeParameters
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeParameters : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsChangeParametersWithObject:name:]

/**
 *  Required. The name of the entitlement to update. The name takes the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Change parameters of the entitlement An entitlement parameters update is a
 *  long-running operation and results in updates to the entitlement as a result
 *  of fulfillment. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request. For example, if the number of seats
 *  being changed to is greater than the allowed number of max seats for the
 *  resource. Or decreasing seats for a commitment based plan. * NOT_FOUND:
 *  Entitlement resource not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChangeParametersRequest to include in
 *    the query.
 *  @param name Required. The name of the entitlement to update. The name takes
 *    the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeParameters
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeParametersRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the renewal settings for an existing customer entitlement. An
 *  entitlement update is a long-running operation and results in updates to the
 *  entitlement as a result of fulfillment. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal
 *  Settings are only applicable for a commitment plan. Can't enable or disable
 *  renewal for non-commitment plans. * INTERNAL: Any non user error related to
 *  a technical issue in the backend. In this case, contact Cloud Channel
 *  support. * UNKNOWN: Any non user error related to a technical issue in the
 *  backend. In this case, contact Cloud Channel support. Return Value: Long
 *  Running Operation ID. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeRenewalSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeRenewalSettings : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsChangeRenewalSettingsWithObject:name:]

/**
 *  Required. The name of the entitlement to update. The name takes the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Updates the renewal settings for an existing customer entitlement. An
 *  entitlement update is a long-running operation and results in updates to the
 *  entitlement as a result of fulfillment. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal
 *  Settings are only applicable for a commitment plan. Can't enable or disable
 *  renewal for non-commitment plans. * INTERNAL: Any non user error related to
 *  a technical issue in the backend. In this case, contact Cloud Channel
 *  support. * UNKNOWN: Any non user error related to a technical issue in the
 *  backend. In this case, contact Cloud Channel support. Return Value: Long
 *  Running Operation ID. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChangeRenewalSettingsRequest to
 *    include in the query.
 *  @param name Required. The name of the entitlement to update. The name takes
 *    the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeRenewalSettings
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeRenewalSettingsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an entitlement for a customer. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: It can happen in below scenarios - * Missing or invalid
 *  required parameters in the request. * Cannot purchase an entitlement if
 *  there is already an entitlement for customer, for a SKU from the same
 *  product family. * INVALID_VALUE: Offer passed in isn't valid. Make sure
 *  OfferId is valid. If it is valid, then contact Google Channel support for
 *  further troubleshooting. * NOT_FOUND: If the customer or offer resource is
 *  not found for the reseller. * ALREADY_EXISTS: This failure can happen in the
 *  following cases: * If the SKU has been already purchased for the customer. *
 *  If the customer's primary email already exists. In this case retry after
 *  changing the customer's primary contact email. * CONDITION_NOT_MET or
 *  FAILED_PRECONDITION: This failure can happen in the following cases: *
 *  Purchasing a SKU that requires domain verification and the domain has not
 *  been verified. * Purchasing an Add-On SKU like Vault or Drive without
 *  purchasing the pre-requisite SKU, such as Google Workspace Business Starter.
 *  * Applicable only for developer accounts: reseller and resold domain. Must
 *  meet the following domain naming requirements: * Domain names must start
 *  with goog-test. * Resold domain names must include the reseller domain. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel Support in this case. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel Support
 *  in this case. Return Value: Long Running Operation ID. To get the results of
 *  the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsCreate : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsCreateWithObject:parent:]

/**
 *  Required. The resource name of reseller's customer account in which to
 *  create the entitlement. The parent takes the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Creates an entitlement for a customer. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: It can happen in below scenarios - * Missing or invalid
 *  required parameters in the request. * Cannot purchase an entitlement if
 *  there is already an entitlement for customer, for a SKU from the same
 *  product family. * INVALID_VALUE: Offer passed in isn't valid. Make sure
 *  OfferId is valid. If it is valid, then contact Google Channel support for
 *  further troubleshooting. * NOT_FOUND: If the customer or offer resource is
 *  not found for the reseller. * ALREADY_EXISTS: This failure can happen in the
 *  following cases: * If the SKU has been already purchased for the customer. *
 *  If the customer's primary email already exists. In this case retry after
 *  changing the customer's primary contact email. * CONDITION_NOT_MET or
 *  FAILED_PRECONDITION: This failure can happen in the following cases: *
 *  Purchasing a SKU that requires domain verification and the domain has not
 *  been verified. * Purchasing an Add-On SKU like Vault or Drive without
 *  purchasing the pre-requisite SKU, such as Google Workspace Business Starter.
 *  * Applicable only for developer accounts: reseller and resold domain. Must
 *  meet the following domain naming requirements: * Domain names must start
 *  with goog-test. * Resold domain names must include the reseller domain. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel Support in this case. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel Support
 *  in this case. Return Value: Long Running Operation ID. To get the results of
 *  the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CreateEntitlementRequest to include
 *    in the query.
 *  @param parent Required. The resource name of reseller's customer account in
 *    which to create the entitlement. The parent takes the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CreateEntitlementRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns a requested Entitlement resource. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the entitlement is not found for the customer. Return Value:
 *  If found, the requested Entitlement resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsGet : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsGetWithname:]

/**
 *  Required. The resource name of the entitlement to retrieve. The name takes
 *  the format: accounts/{account_id}/customers/{customer_id}/entitlements/{id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Entitlement.
 *
 *  Returns a requested Entitlement resource. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the entitlement is not found for the customer. Return Value:
 *  If found, the requested Entitlement resource, otherwise returns an error.
 *
 *  @param name Required. The resource name of the entitlement to retrieve. The
 *    name takes the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List Entitlements belonging to a customer. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *  Return Value: List of Entitlements belonging to the customer, or empty list
 *  if there are none.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsListWithparent:]

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 50 entitlements will be returned. The
 *  maximum value is 100; values above 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one. Typically obtained via ListEntitlementsResponse.next_page_token of the
 *  previous CloudChannelService.ListEntitlements call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller's customer account for which to
 *  list entitlements. The parent takes the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListEntitlementsResponse.
 *
 *  List Entitlements belonging to a customer. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *  Return Value: List of Entitlements belonging to the customer, or empty list
 *  if there are none.
 *
 *  @param parent Required. The resource name of the reseller's customer account
 *    for which to list entitlements. The parent takes the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts paid service for a trial entitlement. Starts paid service for a trial
 *  entitlement immediately. This method is only applicable if a plan has
 *  already been set up for a trial entitlement but has some trial days
 *  remaining. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request. * NOT_FOUND: Entitlement resource not
 *  found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
 *  entitlement on trial plans. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.startPaidService
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsStartPaidService : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsStartPaidServiceWithObject:name:]

/**
 *  Required. The name of the entitlement for which paid service is being
 *  started. The name takes the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Starts paid service for a trial entitlement. Starts paid service for a trial
 *  entitlement immediately. This method is only applicable if a plan has
 *  already been set up for a trial entitlement but has some trial days
 *  remaining. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request. * NOT_FOUND: Entitlement resource not
 *  found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
 *  entitlement on trial plans. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Long Running
 *  Operation ID. To get the results of the operation, call the GetOperation
 *  method of CloudChannelOperationsService. The Operation metadata will contain
 *  an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1StartPaidServiceRequest to include in
 *    the query.
 *  @param name Required. The name of the entitlement for which paid service is
 *    being started. The name takes the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsStartPaidService
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1StartPaidServiceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Suspends a previously fulfilled entitlement. An entitlement suspension is a
 *  long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. * NOT_FOUND: Entitlement
 *  resource not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.suspend
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsSuspend : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersEntitlementsSuspendWithObject:name:]

/**
 *  Required. The resource name of the entitlement to suspend. The name takes
 *  the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Suspends a previously fulfilled entitlement. An entitlement suspension is a
 *  long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. * NOT_FOUND: Entitlement
 *  resource not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. In this case,
 *  contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1SuspendEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to suspend. The
 *    name takes the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsSuspend
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1SuspendEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns a requested Customer resource. Possible Error Codes: *
 *  PERMISSION_DENIED: If the reseller account making the request and the
 *  reseller account being queried for are different. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. * NOT_FOUND: If the
 *  customer resource doesn't exist. Usually the result of an invalid name
 *  parameter. Return Value: Customer resource if found, error otherwise.
 *
 *  Method: cloudchannel.accounts.customers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersGet : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersGetWithname:]

/**
 *  Required. The resource name of the customer to retrieve. The name takes the
 *  format: accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Returns a requested Customer resource. Possible Error Codes: *
 *  PERMISSION_DENIED: If the reseller account making the request and the
 *  reseller account being queried for are different. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. * NOT_FOUND: If the
 *  customer resource doesn't exist. Usually the result of an invalid name
 *  parameter. Return Value: Customer resource if found, error otherwise.
 *
 *  @param name Required. The resource name of the customer to retrieve. The
 *    name takes the format: accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List downstream Customers. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Return Value: List of Customers pertaining to the
 *  reseller or empty list if there are none.
 *
 *  Method: cloudchannel.accounts.customers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersListWithparent:]

/**
 *  Optional. The maximum number of customers to return. The service may return
 *  fewer than this value. If unspecified, at most 10 customers will be
 *  returned. The maximum value is 50; values about 50 will be coerced to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one. Typically obtained via ListCustomersResponse.next_page_token of the
 *  previous CloudChannelService.ListCustomers call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account from which to list
 *  customers. The parent takes the format: accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListCustomersResponse.
 *
 *  List downstream Customers. Possible Error Codes: * PERMISSION_DENIED: If the
 *  reseller account making the request and the reseller account being queried
 *  for are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Return Value: List of Customers pertaining to the
 *  reseller or empty list if there are none.
 *
 *  @param parent Required. The resource name of the reseller account from which
 *    to list customers. The parent takes the format: accounts/{account_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the Purchasable Offers for the following cases: * Offers that can be
 *  newly purchased for a customer * Offers that can be changed to, for an
 *  entitlement. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request.
 *
 *  Method: cloudchannel.accounts.customers.listPurchasableOffers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersListPurchasableOffers : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersListPurchasableOffersWithcustomer:]

/**
 *  Required. Resource name of the entitlement. Format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseEntitlement;

/**
 *  Optional. Resource name of the SKU that is being changed to. Should be
 *  provided if upgrading or downgrading an entitlement. Format:
 *  products/{product_id}/skus/{sku_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseNewSku;

/**
 *  Required. SKU that the result should be restricted to. Format:
 *  products/{product_id}/skus/{sku_id}.
 */
@property(nonatomic, copy, nullable) NSString *createEntitlementPurchaseSku;

/**
 *  Required. The resource name of the customer for which to list Offers.
 *  Format: accounts/{account_id}/customers/{customer_id}.
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response will be localized to the corresponding language code. Default is
 *  "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 100 Offers will be returned. The maximum
 *  value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListPurchasableOffersResponse.
 *
 *  Lists the Purchasable Offers for the following cases: * Offers that can be
 *  newly purchased for a customer * Offers that can be changed to, for an
 *  entitlement. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request.
 *
 *  @param customer Required. The resource name of the customer for which to
 *    list Offers. Format: accounts/{account_id}/customers/{customer_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersListPurchasableOffers
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithCustomer:(NSString *)customer;

@end

/**
 *  Lists the Purchasable SKUs for following cases: * SKUs that can be newly
 *  purchased for a customer * SKUs that can be upgraded/downgraded to, for an
 *  entitlement. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request.
 *
 *  Method: cloudchannel.accounts.customers.listPurchasableSkus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersListPurchasableSkus : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersListPurchasableSkusWithcustomer:]

/**
 *  Required. Change Type for the entitlement.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeChangeTypeUnspecified
 *        Not used. (Value: "CHANGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeUpgrade SKU is an
 *        upgrade on the current entitlement. (Value: "UPGRADE")
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeDowngrade SKU is a
 *        downgrade on the current entitlement. (Value: "DOWNGRADE")
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseChangeType;

/**
 *  Required. Resource name of the entitlement. Format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseEntitlement;

/**
 *  Required. List SKUs belonging to this Product. Format:
 *  products/{product_id}. Supports products/- to retrieve SKUs for all
 *  products.
 */
@property(nonatomic, copy, nullable) NSString *createEntitlementPurchaseProduct;

/**
 *  Required. The resource name of the customer for which to list SKUs. Format:
 *  accounts/{account_id}/customers/{customer_id}.
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response will be localized to the corresponding language code. Default is
 *  "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 100 SKUs will be returned. The maximum
 *  value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListPurchasableSkusResponse.
 *
 *  Lists the Purchasable SKUs for following cases: * SKUs that can be newly
 *  purchased for a customer * SKUs that can be upgraded/downgraded to, for an
 *  entitlement. Possible Error Codes: * PERMISSION_DENIED: If the customer
 *  doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid
 *  required parameters in the request.
 *
 *  @param customer Required. The resource name of the customer for which to
 *    list SKUs. Format: accounts/{account_id}/customers/{customer_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersListPurchasableSkus
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithCustomer:(NSString *)customer;

@end

/**
 *  Updates an existing Customer resource belonging to the reseller or
 *  distributor. Possible Error Codes: * PERMISSION_DENIED: If the reseller
 *  account making the request and the reseller account being queried for are
 *  different. * INVALID_ARGUMENT: Missing or invalid required parameters in the
 *  request. * NOT_FOUND: No Customer resource found for the name specified in
 *  the request. Return Value: If successful, the updated Customer resource,
 *  otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersPatch : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersPatchWithObject:name:]

/**
 *  Output only. Resource name of the customer. Format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask that applies to the resource. Optional.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Updates an existing Customer resource belonging to the reseller or
 *  distributor. Possible Error Codes: * PERMISSION_DENIED: If the reseller
 *  account making the request and the reseller account being queried for are
 *  different. * INVALID_ARGUMENT: Missing or invalid required parameters in the
 *  request. * NOT_FOUND: No Customer resource found for the name specified in
 *  the request. Return Value: If successful, the updated Customer resource,
 *  otherwise returns an error.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param name Output only. Resource name of the customer. Format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Cloud Identity for the given customer using the customer's
 *  information or the information provided here, if present. Possible Error
 *  Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller.
 *  * INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the customer is not found for the reseller. * ALREADY_EXISTS:
 *  If the customer's primary email already exists. In this case, retry after
 *  changing the customer's primary contact email. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support in this case. * UNKNOWN: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support in this case. Return
 *  Value: Long Running Operation ID. To get the results of the operation, call
 *  the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.provisionCloudIdentity
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersProvisionCloudIdentity : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersProvisionCloudIdentityWithObject:customer:]

/**
 *  Required. Resource name of the customer. Format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Creates a Cloud Identity for the given customer using the customer's
 *  information or the information provided here, if present. Possible Error
 *  Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller.
 *  * INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the customer is not found for the reseller. * ALREADY_EXISTS:
 *  If the customer's primary email already exists. In this case, retry after
 *  changing the customer's primary contact email. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support in this case. * UNKNOWN: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support in this case. Return
 *  Value: Long Running Operation ID. To get the results of the operation, call
 *  the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ProvisionCloudIdentityRequest to
 *    include in the query.
 *  @param customer Required. Resource name of the customer. Format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersProvisionCloudIdentity
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ProvisionCloudIdentityRequest *)object
                       customer:(NSString *)customer;

@end

/**
 *  Transfers customer entitlements to new reseller. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the customer or offer resource is not found for the reseller.
 *  * ALREADY_EXISTS: If the SKU has been already transferred for the customer.
 *  * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can happen in the
 *  following cases: * Transferring a SKU that requires domain verification and
 *  the domain has not been verified. * Transferring an Add-On SKU like Vault or
 *  Drive without transferring the pre-requisite SKU, such as G Suite Basic. *
 *  Applicable only for developer accounts: reseller and resold domain must
 *  follow the domain naming convention as follows: * Domain names must start
 *  with goog-test. * Resold domain names must include the reseller domain. *
 *  All transferring entitlements must be specified. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Please contact Cloud
 *  Channel Support in this case. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Please contact Cloud Channel Support in this
 *  case. Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.transferEntitlements
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersTransferEntitlements : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersTransferEntitlementsWithObject:parent:]

/**
 *  Required. The resource name of reseller's customer account where the
 *  entitlements transfer to. The parent takes the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Transfers customer entitlements to new reseller. Possible Error Codes: *
 *  PERMISSION_DENIED: If the customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
 *  NOT_FOUND: If the customer or offer resource is not found for the reseller.
 *  * ALREADY_EXISTS: If the SKU has been already transferred for the customer.
 *  * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can happen in the
 *  following cases: * Transferring a SKU that requires domain verification and
 *  the domain has not been verified. * Transferring an Add-On SKU like Vault or
 *  Drive without transferring the pre-requisite SKU, such as G Suite Basic. *
 *  Applicable only for developer accounts: reseller and resold domain must
 *  follow the domain naming convention as follows: * Domain names must start
 *  with goog-test. * Resold domain names must include the reseller domain. *
 *  All transferring entitlements must be specified. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Please contact Cloud
 *  Channel Support in this case. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Please contact Cloud Channel Support in this
 *  case. Return Value: Long Running Operation ID. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of reseller's customer account
 *    where the entitlements transfer to. The parent takes the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersTransferEntitlements
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Transfers customer entitlements from current reseller to Google. Possible
 *  Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the
 *  reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the
 *  request. * NOT_FOUND: If the customer or offer resource is not found for the
 *  reseller. * ALREADY_EXISTS: If the SKU has been already transferred for the
 *  customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can
 *  happen in the following cases: * Transferring a SKU that requires domain
 *  verification and the domain has not been verified. * Transferring an Add-On
 *  SKU like Vault or Drive without purchasing the pre-requisite SKU, such as G
 *  Suite Basic. * Applicable only for developer accounts: reseller and resold
 *  domain must follow the domain naming convention as follows: * Domain names
 *  must start with goog-test. * Resold domain names must include the reseller
 *  domain. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. Please contact Cloud Channel Support in this case. * UNKNOWN: Any
 *  non-user error related to a technical issue in the backend. Please contact
 *  Cloud Channel Support in this case. Return Value: Long Running Operation ID.
 *  To get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.transferEntitlementsToGoogle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersTransferEntitlementsToGoogle : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsCustomersTransferEntitlementsToGoogleWithObject:parent:]

/**
 *  Required. The resource name of reseller's customer account where the
 *  entitlements transfer from. The parent takes the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Transfers customer entitlements from current reseller to Google. Possible
 *  Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the
 *  reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the
 *  request. * NOT_FOUND: If the customer or offer resource is not found for the
 *  reseller. * ALREADY_EXISTS: If the SKU has been already transferred for the
 *  customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can
 *  happen in the following cases: * Transferring a SKU that requires domain
 *  verification and the domain has not been verified. * Transferring an Add-On
 *  SKU like Vault or Drive without purchasing the pre-requisite SKU, such as G
 *  Suite Basic. * Applicable only for developer accounts: reseller and resold
 *  domain must follow the domain naming convention as follows: * Domain names
 *  must start with goog-test. * Resold domain names must include the reseller
 *  domain. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. Please contact Cloud Channel Support in this case. * UNKNOWN: Any
 *  non-user error related to a technical issue in the backend. Please contact
 *  Cloud Channel Support in this case. Return Value: Long Running Operation ID.
 *  To get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsToGoogleRequest
 *    to include in the query.
 *  @param parent Required. The resource name of reseller's customer account
 *    where the entitlements transfer from. The parent takes the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersTransferEntitlementsToGoogle
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsToGoogleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic
 *  created for this Channel Services account. Possible Error Codes: *
 *  PERMISSION_DENIED: If the reseller account making the request and the
 *  reseller account being provided are different, or if the account is not a
 *  super admin. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * NOT_FOUND: If the topic resource doesn't exist. * INTERNAL:
 *  Any non-user error related to a technical issue in the backend. In this
 *  case, contact Cloud Channel support. * UNKNOWN: Any non-user error related
 *  to a technical issue in the backend. In this case, contact Cloud Channel
 *  support. Return Value: List of service email addresses if successful,
 *  otherwise error is returned.
 *
 *  Method: cloudchannel.accounts.listSubscribers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListSubscribers : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsListSubscribersWithaccount:]

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The maximum number of service accounts to return. The service may
 *  return fewer than this value. If unspecified, at most 100 service accounts
 *  will be returned. The maximum value is 1000; values above 1000 will be
 *  coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListSubscribers` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListSubscribers` must match the call that provided
 *  the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListSubscribersResponse.
 *
 *  Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic
 *  created for this Channel Services account. Possible Error Codes: *
 *  PERMISSION_DENIED: If the reseller account making the request and the
 *  reseller account being provided are different, or if the account is not a
 *  super admin. * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request. * NOT_FOUND: If the topic resource doesn't exist. * INTERNAL:
 *  Any non-user error related to a technical issue in the backend. In this
 *  case, contact Cloud Channel support. * UNKNOWN: Any non-user error related
 *  to a technical issue in the backend. In this case, contact Cloud Channel
 *  support. Return Value: List of service email addresses if successful,
 *  otherwise error is returned.
 *
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsListSubscribers
 */
+ (instancetype)queryWithAccount:(NSString *)account;

@end

/**
 *  List TransferableOffers of a customer based on Cloud Identity ID or Customer
 *  Name in the request. This method is used when a reseller gets the
 *  entitlement information of a customer that is not owned. The reseller should
 *  provide the customer's Cloud Identity ID or Customer Name. Possible Error
 *  Codes: * PERMISSION_DENIED: Appears because of one of the following: * If
 *  the customer doesn't belong to the reseller and no auth token or invalid
 *  auth token is supplied. * If the reseller account making the request and the
 *  reseller account being queried for are different. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. Return Value: List of
 *  TransferableOffer for the given customer and SKU.
 *
 *  Method: cloudchannel.accounts.listTransferableOffers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListTransferableOffers : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsListTransferableOffersWithObject:parent:]

/** Required. The resource name of the reseller's account. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersResponse.
 *
 *  List TransferableOffers of a customer based on Cloud Identity ID or Customer
 *  Name in the request. This method is used when a reseller gets the
 *  entitlement information of a customer that is not owned. The reseller should
 *  provide the customer's Cloud Identity ID or Customer Name. Possible Error
 *  Codes: * PERMISSION_DENIED: Appears because of one of the following: * If
 *  the customer doesn't belong to the reseller and no auth token or invalid
 *  auth token is supplied. * If the reseller account making the request and the
 *  reseller account being queried for are different. * INVALID_ARGUMENT:
 *  Missing or invalid required parameters in the request. Return Value: List of
 *  TransferableOffer for the given customer and SKU.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the reseller's account.
 *
 *  @return GTLRCloudchannelQuery_AccountsListTransferableOffers
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  List TransferableSkus of a customer based on Cloud Identity ID or Customer
 *  Name in the request. This method is used when a reseller lists the
 *  entitlements information of a customer that is not owned. The reseller
 *  should provide the customer's Cloud Identity ID or Customer Name. Possible
 *  Error Codes: * PERMISSION_DENIED: Appears because of one of the following -
 *  * The customer doesn't belong to the reseller and no auth token. * The
 *  supplied auth token is invalid. * The reseller account making the request
 *  and the queries reseller account are different. * INVALID_ARGUMENT: Missing
 *  or invalid required parameters in the request. Return Value: List of
 *  TransferableSku for the given customer.
 *
 *  Method: cloudchannel.accounts.listTransferableSkus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListTransferableSkus : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsListTransferableSkusWithObject:parent:]

/**
 *  Required. The resource name of the reseller's account. The parent takes the
 *  format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusResponse.
 *
 *  List TransferableSkus of a customer based on Cloud Identity ID or Customer
 *  Name in the request. This method is used when a reseller lists the
 *  entitlements information of a customer that is not owned. The reseller
 *  should provide the customer's Cloud Identity ID or Customer Name. Possible
 *  Error Codes: * PERMISSION_DENIED: Appears because of one of the following -
 *  * The customer doesn't belong to the reseller and no auth token. * The
 *  supplied auth token is invalid. * The reseller account making the request
 *  and the queries reseller account are different. * INVALID_ARGUMENT: Missing
 *  or invalid required parameters in the request. Return Value: List of
 *  TransferableSku for the given customer.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the reseller's account. The
 *    parent takes the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsListTransferableSkus
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the Offers the reseller can sell. Possible Error Codes: *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *
 *  Method: cloudchannel.accounts.offers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsOffersList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsOffersListWithparent:]

/**
 *  Optional. The expression to filter results by name (name of the Offer),
 *  sku.name (name of the SKU) or sku.product.name (name of the Product).
 *  Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
 *  Example 2: name=accounts/a1/offers/o1
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response will be localized to the corresponding language code. Default is
 *  "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 500 Offers will be returned. The maximum
 *  value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account from which to list
 *  Offers. The parent takes the format: accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListOffersResponse.
 *
 *  Lists the Offers the reseller can sell. Possible Error Codes: *
 *  INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *
 *  @param parent Required. The resource name of the reseller account from which
 *    to list Offers. The parent takes the format: accounts/{account_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsOffersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Registers a service account with subscriber privileges on the Cloud Pub/Sub
 *  topic created for this Channel Services account. Once you create a
 *  subscriber, you will get the events as per SubscriberEvent Possible Error
 *  Codes: * PERMISSION_DENIED: If the reseller account making the request and
 *  the reseller account being provided are different, or if the impersonated
 *  user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Topic name with
 *  service email address registered if successful, otherwise error is returned.
 *
 *  Method: cloudchannel.accounts.register
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsRegister : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsRegisterWithObject:account:]

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberResponse.
 *
 *  Registers a service account with subscriber privileges on the Cloud Pub/Sub
 *  topic created for this Channel Services account. Once you create a
 *  subscriber, you will get the events as per SubscriberEvent Possible Error
 *  Codes: * PERMISSION_DENIED: If the reseller account making the request and
 *  the reseller account being provided are different, or if the impersonated
 *  user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. In this case, contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. Return Value: Topic name with
 *  service email address registered if successful, otherwise error is returned.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberRequest to include
 *    in the query.
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsRegister
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Unregisters a service account with subscriber privileges on the Cloud
 *  Pub/Sub topic created for this Channel Services account. If there are no
 *  more service account left with sunbscriber privileges, the topic will be
 *  deleted. You can check this by calling ListSubscribers api. Possible Error
 *  Codes: * PERMISSION_DENIED: If the reseller account making the request and
 *  the reseller account being provided are different, or if the impersonated
 *  user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * NOT_FOUND: If the topic resource doesn't exist.
 *  * INTERNAL: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. In this case, contact Cloud
 *  Channel support. Return Value: Topic name from which service email address
 *  has been unregistered if successful, otherwise error is returned. If the
 *  service email was already not associated with the topic, the success
 *  response will be returned.
 *
 *  Method: cloudchannel.accounts.unregister
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsUnregister : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForAccountsUnregisterWithObject:account:]

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberResponse.
 *
 *  Unregisters a service account with subscriber privileges on the Cloud
 *  Pub/Sub topic created for this Channel Services account. If there are no
 *  more service account left with sunbscriber privileges, the topic will be
 *  deleted. You can check this by calling ListSubscribers api. Possible Error
 *  Codes: * PERMISSION_DENIED: If the reseller account making the request and
 *  the reseller account being provided are different, or if the impersonated
 *  user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. * NOT_FOUND: If the topic resource doesn't exist.
 *  * INTERNAL: Any non-user error related to a technical issue in the backend.
 *  In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. In this case, contact Cloud
 *  Channel support. Return Value: Topic name from which service email address
 *  has been unregistered if successful, otherwise error is returned. If the
 *  service email was already not associated with the topic, the success
 *  response will be returned.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberRequest to
 *    include in the query.
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsUnregister
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: cloudchannel.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsCancel : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleLongrunningCancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudchannelQuery_OperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: cloudchannel.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsDelete : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudchannelQuery_OperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudchannel.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsGet : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudchannelQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: cloudchannel.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudchannelQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the Products the reseller is authorized to sell. Possible Error Codes:
 *  * INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *
 *  Method: cloudchannel.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_ProductsList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForProductsList]

/**
 *  Required. The resource name of the reseller account. Format:
 *  accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response will be localized to the corresponding language code. Default is
 *  "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 100 Products will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListProductsResponse.
 *
 *  Lists the Products the reseller is authorized to sell. Possible Error Codes:
 *  * INVALID_ARGUMENT: Missing or invalid required parameters in the request.
 *
 *  @return GTLRCloudchannelQuery_ProductsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists the SKUs for a product the reseller is authorized to sell. Possible
 *  Error Codes: * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request.
 *
 *  Method: cloudchannel.products.skus.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_ProductsSkusList : GTLRCloudchannelQuery
// Previous library name was
//   +[GTLQueryCloudchannel queryForProductsSkusListWithparent:]

/** Required. Resource name of the reseller. Format: accounts/{account_id}. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response will be localized to the corresponding language code. Default is
 *  "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, at most 100 SKUs will be returned. The maximum
 *  value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results, if other than the first
 *  one. Optional.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Product for which to list SKUs. The
 *  parent takes the format: products/{product_id}. Supports products/- to
 *  retrieve SKUs for all products.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListSkusResponse.
 *
 *  Lists the SKUs for a product the reseller is authorized to sell. Possible
 *  Error Codes: * INVALID_ARGUMENT: Missing or invalid required parameters in
 *  the request.
 *
 *  @param parent Required. The resource name of the Product for which to list
 *    SKUs. The parent takes the format: products/{product_id}. Supports
 *    products/- to retrieve SKUs for all products.
 *
 *  @return GTLRCloudchannelQuery_ProductsSkusList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
