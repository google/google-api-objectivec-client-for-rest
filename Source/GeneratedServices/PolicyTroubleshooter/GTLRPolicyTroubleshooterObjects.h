// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Policy Troubleshooter API (policytroubleshooter/v1beta)
// Documentation:
//   https://cloud.google.com/iam/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaAccessTuple;
@class GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation;
@class GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Memberships;
@class GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership;
@class GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy;
@class GTLRPolicyTroubleshooter_GoogleIamV1AuditConfig;
@class GTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig;
@class GTLRPolicyTroubleshooter_GoogleIamV1Binding;
@class GTLRPolicyTroubleshooter_GoogleIamV1Policy;
@class GTLRPolicyTroubleshooter_GoogleTypeExpr;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation.access

/**
 *  Reserved
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_AccessStateUnspecified;
/**
 *  The access is granted due to one or multiple bindings found.
 *
 *  Value: "GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_Granted;
/**
 *  The access is not granted by the policy.
 *
 *  Value: "NOT_GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_NotGranted;
/**
 *  At least one binding was found but it is conditional. undecided,
 *  undetermined ,uncertain, open, tentative, contingent
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_UnknownConditional;
/**
 *  Indicating that lack of access to the underlying information
 *  causes the result to be undetermined.
 *  This can be due to
 *  1) The caller has no access to the policy. In this case ExplainedPolicy
 *  will have not policy set.
 *  2) The caller has no access to some of the items referenced in the policy.
 *  In this case the policy in ExplainedPolicy will be set but the
 *  explanations field will contain at least one inconclusive element.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation.relevance

/**
 *  Default value, presence of this should be error.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_HeuristicRelevanceUnspecified;
/**
 *  Fields annotated with this are more important than the fields
 *  annotated by NORMAL. They are used for annotating fields which on potential
 *  modification can alter the overall access result.
 *
 *  Value: "HIGH"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_High;
/**
 *  Fields annotated with this value contribute equally to evaluation
 *  result. In other words the fields are NOT specially important. This is a
 *  superset of fields annotated as HIGH.
 *
 *  Value: "NORMAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation.rolePermission

/**
 *  Permission is included in the role.
 *
 *  Value: "ROLE_PERMISSION_INCLUDED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionIncluded;
/**
 *  Permission is included in the role.
 *
 *  Value: "ROLE_PERMISSION_NOT_INCLUDED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionNotIncluded;
/**
 *  Calling principal has no access to the role permission relation.
 *
 *  Value: "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionUnknownInfoDenied;
/**
 *  Reserved
 *
 *  Value: "ROLE_PERMISSION_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionUnspecified;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation.rolePermissionRelevance

/**
 *  Default value, presence of this should be error.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_HeuristicRelevanceUnspecified;
/**
 *  Fields annotated with this are more important than the fields
 *  annotated by NORMAL. They are used for annotating fields which on potential
 *  modification can alter the overall access result.
 *
 *  Value: "HIGH"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_High;
/**
 *  Fields annotated with this value contribute equally to evaluation
 *  result. In other words the fields are NOT specially important. This is a
 *  superset of fields annotated as HIGH.
 *
 *  Value: "NORMAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.membership

/**
 *  Member is included in group/domain/allUsers or is a direct match.
 *
 *  Value: "MEMBERSHIP_INCLUDED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipIncluded;
/**
 *  Member is not included in group/domain/allUsers nor is a direct match.
 *
 *  Value: "MEMBERSHIP_NOT_INCLUDED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipNotIncluded;
/**
 *  Calling principal has no access to the membership relation.
 *
 *  Value: "MEMBERSHIP_UNKNOWN_INFO_DENIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnknownInfoDenied;
/**
 *  This member type is currently not supported.
 *
 *  Value: "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnknownUnsupported;
/**
 *  Reserved.
 *
 *  Value: "MEMBERSHIP_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnspecified;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.relevance

/**
 *  Default value, presence of this should be error.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_HeuristicRelevanceUnspecified;
/**
 *  Fields annotated with this are more important than the fields
 *  annotated by NORMAL. They are used for annotating fields which on potential
 *  modification can alter the overall access result.
 *
 *  Value: "HIGH"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_High;
/**
 *  Fields annotated with this value contribute equally to evaluation
 *  result. In other words the fields are NOT specially important. This is a
 *  superset of fields annotated as HIGH.
 *
 *  Value: "NORMAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy.access

/**
 *  Reserved
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_AccessStateUnspecified;
/**
 *  The access is granted due to one or multiple bindings found.
 *
 *  Value: "GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_Granted;
/**
 *  The access is not granted by the policy.
 *
 *  Value: "NOT_GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_NotGranted;
/**
 *  At least one binding was found but it is conditional. undecided,
 *  undetermined ,uncertain, open, tentative, contingent
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_UnknownConditional;
/**
 *  Indicating that lack of access to the underlying information
 *  causes the result to be undetermined.
 *  This can be due to
 *  1) The caller has no access to the policy. In this case ExplainedPolicy
 *  will have not policy set.
 *  2) The caller has no access to some of the items referenced in the policy.
 *  In this case the policy in ExplainedPolicy will be set but the
 *  explanations field will contain at least one inconclusive element.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy.relevance

/**
 *  Default value, presence of this should be error.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_HeuristicRelevanceUnspecified;
/**
 *  Fields annotated with this are more important than the fields
 *  annotated by NORMAL. They are used for annotating fields which on potential
 *  modification can alter the overall access result.
 *
 *  Value: "HIGH"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_High;
/**
 *  Fields annotated with this value contribute equally to evaluation
 *  result. In other words the fields are NOT specially important. This is a
 *  superset of fields annotated as HIGH.
 *
 *  Value: "NORMAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse.access

/**
 *  Reserved
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_AccessStateUnspecified;
/**
 *  The access is granted due to one or multiple bindings found.
 *
 *  Value: "GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_Granted;
/**
 *  The access is not granted by the policy.
 *
 *  Value: "NOT_GRANTED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_NotGranted;
/**
 *  At least one binding was found but it is conditional. undecided,
 *  undetermined ,uncertain, open, tentative, contingent
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_UnknownConditional;
/**
 *  Indicating that lack of access to the underlying information
 *  causes the result to be undetermined.
 *  This can be due to
 *  1) The caller has no access to the policy. In this case ExplainedPolicy
 *  will have not policy set.
 *  2) The caller has no access to some of the items referenced in the policy.
 *  In this case the policy in ExplainedPolicy will be set but the
 *  explanations field will contain at least one inconclusive element.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified;

/**
 *  AccessTuple defines information required for checking an access attempt.
 *  In other words, this is the tuple given to `CheckAccess`.
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaAccessTuple : GTLRObject

/**
 *  Required. A full resource name according to
 *  https://cloud.google.com/apis/design/resource_names. This is the full
 *  resource name of the resource that access is checked against.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/**
 *  Required. The Cloud IAM permission under which defines the kind of access
 *  being explained. Example: "resourcemanager.projects.get" would explain
 *  if and why the principal has the resourcemanager.projects.get permission
 *  on the resource specified in full_resource_name declared in this structure.
 *  See https://cloud.google.com/iam/docs/testing-permissions
 */
@property(nonatomic, copy, nullable) NSString *permission;

/**
 *  Required. The principal on behalf of who the access is explained for.
 *  The format is one of the principal's email addresses associated with
 *  its gaia account. It must be an account that can appear as an actor.
 *  For example groups are not supported. Currently, service accounts, users
 *  are supported.
 */
@property(nonatomic, copy, nullable) NSString *principal;

@end


/**
 *  Binding Explanation.
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation : GTLRObject

/**
 *  REQUIRED: Access decision for this binding.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_AccessStateUnspecified
 *        Reserved (Value: "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_Granted
 *        The access is granted due to one or multiple bindings found. (Value:
 *        "GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_NotGranted
 *        The access is not granted by the policy. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_UnknownConditional
 *        At least one binding was found but it is conditional. undecided,
 *        undetermined ,uncertain, open, tentative, contingent (Value:
 *        "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Access_UnknownInfoDenied
 *        Indicating that lack of access to the underlying information
 *        causes the result to be undetermined.
 *        This can be due to
 *        1) The caller has no access to the policy. In this case
 *        ExplainedPolicy
 *        will have not policy set.
 *        2) The caller has no access to some of the items referenced in the
 *        policy.
 *        In this case the policy in ExplainedPolicy will be set but the
 *        explanations field will contain at least one inconclusive element.
 *        (Value: "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  The condition which needs to be satisfied in order for this
 *  binding to grant the role to the principal.
 *  See https://cloud.google.com/iam/docs/conditions-base
 */
@property(nonatomic, strong, nullable) GTLRPolicyTroubleshooter_GoogleTypeExpr *condition;

/**
 *  For each member in the binding, provides information
 *  whether or not the principal from the request is included
 *  in the member by which the CheckResult is keyed.
 *  May indicate that the caller has no access to this information.
 *  example key: 'group:cloud-iam-assist-eng\@google.com'
 *  example value '{NOT_GRANTED, HIGH}
 */
@property(nonatomic, strong, nullable) GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Memberships *memberships;

/**
 *  Bubbles up role_permission level relavance to BindingExplanation object.
 *  If role permission is NORMAL, then binding relevance is NORMAL.
 *  If role permission is HIGH, then binding relevance is HIGH.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_HeuristicRelevanceUnspecified
 *        Default value, presence of this should be error. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_High
 *        Fields annotated with this are more important than the fields
 *        annotated by NORMAL. They are used for annotating fields which on
 *        potential
 *        modification can alter the overall access result. (Value: "HIGH")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Relevance_Normal
 *        Fields annotated with this value contribute equally to evaluation
 *        result. In other words the fields are NOT specially important. This is
 *        a
 *        superset of fields annotated as HIGH. (Value: "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

/**
 *  The role that this binding grants in the policy.
 *  for example "roles/compute.serviceAgent"
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  Whether the role of this binding contains the checked permission
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionIncluded
 *        Permission is included in the role. (Value:
 *        "ROLE_PERMISSION_INCLUDED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionNotIncluded
 *        Permission is included in the role. (Value:
 *        "ROLE_PERMISSION_NOT_INCLUDED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionUnknownInfoDenied
 *        Calling principal has no access to the role permission relation.
 *        (Value: "ROLE_PERMISSION_UNKNOWN_INFO_DENIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermission_RolePermissionUnspecified
 *        Reserved (Value: "ROLE_PERMISSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *rolePermission;

/**
 *  rolePermissionRelevance
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_HeuristicRelevanceUnspecified
 *        Default value, presence of this should be error. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_High
 *        Fields annotated with this are more important than the fields
 *        annotated by NORMAL. They are used for annotating fields which on
 *        potential
 *        modification can alter the overall access result. (Value: "HIGH")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_RolePermissionRelevance_Normal
 *        Fields annotated with this value contribute equally to evaluation
 *        result. In other words the fields are NOT specially important. This is
 *        a
 *        superset of fields annotated as HIGH. (Value: "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *rolePermissionRelevance;

@end


/**
 *  For each member in the binding, provides information
 *  whether or not the principal from the request is included
 *  in the member by which the CheckResult is keyed.
 *  May indicate that the caller has no access to this information.
 *  example key: 'group:cloud-iam-assist-eng\@google.com'
 *  example value '{NOT_GRANTED, HIGH}
 *
 *  @note This class is documented as having more properties of
 *        GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation_Memberships : GTLRObject
@end


/**
 *  GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership : GTLRObject

/**
 *  membership
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipIncluded
 *        Member is included in group/domain/allUsers or is a direct match.
 *        (Value: "MEMBERSHIP_INCLUDED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipNotIncluded
 *        Member is not included in group/domain/allUsers nor is a direct match.
 *        (Value: "MEMBERSHIP_NOT_INCLUDED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnknownInfoDenied
 *        Calling principal has no access to the membership relation. (Value:
 *        "MEMBERSHIP_UNKNOWN_INFO_DENIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnknownUnsupported
 *        This member type is currently not supported. (Value:
 *        "MEMBERSHIP_UNKNOWN_UNSUPPORTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Membership_MembershipUnspecified
 *        Reserved. (Value: "MEMBERSHIP_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *membership;

/**
 *  relevance
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_HeuristicRelevanceUnspecified
 *        Default value, presence of this should be error. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_High
 *        Fields annotated with this are more important than the fields
 *        annotated by NORMAL. They are used for annotating fields which on
 *        potential
 *        modification can alter the overall access result. (Value: "HIGH")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership_Relevance_Normal
 *        Fields annotated with this value contribute equally to evaluation
 *        result. In other words the fields are NOT specially important. This is
 *        a
 *        superset of fields annotated as HIGH. (Value: "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

@end


/**
 *  An explained IAM policy combines the raw policy in the context
 *  of the resource which it is attached to along with detailed
 *  evaluation on the evaluation parameters provided through the request.
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy : GTLRObject

/**
 *  Access decision for this section of the resource's effective policy.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_AccessStateUnspecified
 *        Reserved (Value: "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_Granted
 *        The access is granted due to one or multiple bindings found. (Value:
 *        "GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_NotGranted
 *        The access is not granted by the policy. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_UnknownConditional
 *        At least one binding was found but it is conditional. undecided,
 *        undetermined ,uncertain, open, tentative, contingent (Value:
 *        "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Access_UnknownInfoDenied
 *        Indicating that lack of access to the underlying information
 *        causes the result to be undetermined.
 *        This can be due to
 *        1) The caller has no access to the policy. In this case
 *        ExplainedPolicy
 *        will have not policy set.
 *        2) The caller has no access to some of the items referenced in the
 *        policy.
 *        In this case the policy in ExplainedPolicy will be set but the
 *        explanations field will contain at least one inconclusive element.
 *        (Value: "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  Detailed binding evaluation explanations provide information
 *  about how each binding contributes to the principal's
 *  access or the lack thereof.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaBindingExplanation *> *bindingExplanations;

/** Resource that this section of the effective policy attaches to. */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/** The IAM policy attached to the resource. */
@property(nonatomic, strong, nullable) GTLRPolicyTroubleshooter_GoogleIamV1Policy *policy;

/**
 *  Relevance of this Policy.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_HeuristicRelevanceUnspecified
 *        Default value, presence of this should be error. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_High
 *        Fields annotated with this are more important than the fields
 *        annotated by NORMAL. They are used for annotating fields which on
 *        potential
 *        modification can alter the overall access result. (Value: "HIGH")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy_Relevance_Normal
 *        Fields annotated with this value contribute equally to evaluation
 *        result. In other words the fields are NOT specially important. This is
 *        a
 *        superset of fields annotated as HIGH. (Value: "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

@end


/**
 *  TroubleshootIamPolicyRequest is used in TroubleshootIamPolicy
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest : GTLRObject

@property(nonatomic, strong, nullable) GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaAccessTuple *accessTuple;

@end


/**
 *  TroubleshootIamPolicyResponse is used in TroubleshootIamPolicy.
 */
@interface GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse : GTLRObject

/**
 *  Reflects whether the probed access was granted, denied
 *  or ultimately could not be decided from the caller's point of view.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_AccessStateUnspecified
 *        Reserved (Value: "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_Granted
 *        The access is granted due to one or multiple bindings found. (Value:
 *        "GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_NotGranted
 *        The access is not granted by the policy. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_UnknownConditional
 *        At least one binding was found but it is conditional. undecided,
 *        undetermined ,uncertain, open, tentative, contingent (Value:
 *        "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse_Access_UnknownInfoDenied
 *        Indicating that lack of access to the underlying information
 *        causes the result to be undetermined.
 *        This can be due to
 *        1) The caller has no access to the policy. In this case
 *        ExplainedPolicy
 *        will have not policy set.
 *        2) The caller has no access to some of the items referenced in the
 *        policy.
 *        In this case the policy in ExplainedPolicy will be set but the
 *        explanations field will contain at least one inconclusive element.
 *        (Value: "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  List of explained policies.
 *  Each explanation corresponds to one policy along the ancestry path.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicyTroubleshooter_GoogleCloudPolicytroubleshooterV1betaExplainedPolicy *> *explainedPolicies;

@end


/**
 *  Specifies the audit configuration for a service.
 *  The configuration determines which permission types are logged, and what
 *  identities, if any, are exempted from logging.
 *  An AuditConfig must have one or more AuditLogConfigs.
 *  If there are AuditConfigs for both `allServices` and a specific service,
 *  the union of the two AuditConfigs is used for that service: the log_types
 *  specified in each AuditConfig are enabled, and the exempted_members in each
 *  AuditLogConfig are exempted.
 *  Example Policy with multiple AuditConfigs:
 *  {
 *  "audit_configs": [
 *  {
 *  "service": "allServices"
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ",
 *  "exempted_members": [
 *  "user:jose\@example.com"
 *  ]
 *  },
 *  {
 *  "log_type": "DATA_WRITE",
 *  },
 *  {
 *  "log_type": "ADMIN_READ",
 *  }
 *  ]
 *  },
 *  {
 *  "service": "sampleservice.googleapis.com"
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ",
 *  },
 *  {
 *  "log_type": "DATA_WRITE",
 *  "exempted_members": [
 *  "user:aliya\@example.com"
 *  ]
 *  }
 *  ]
 *  }
 *  ]
 *  }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts jose\@example.com from DATA_READ logging, and
 *  aliya\@example.com from DATA_WRITE logging.
 */
@interface GTLRPolicyTroubleshooter_GoogleIamV1AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging.
 *  For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
 *  `allServices` is a special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions.
 *  Example:
 *  {
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ",
 *  "exempted_members": [
 *  "user:jose\@example.com"
 *  ]
 *  },
 *  {
 *  "log_type": "DATA_WRITE",
 *  }
 *  ]
 *  }
 *  This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
 *  jose\@example.com from DATA_READ logging.
 */
@interface GTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission.
 *  Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_AdminRead
 *        Admin reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_DataRead
 *        Data reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_DataWrite
 *        Data writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRPolicyTroubleshooter_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members` with a `role`.
 */
@interface GTLRPolicyTroubleshooter_GoogleIamV1Binding : GTLRObject

/**
 *  The condition that is associated with this binding.
 *  NOTE: An unsatisfied condition will not allow user access via current
 *  binding. Different bindings, including their conditions, are examined
 *  independently.
 */
@property(nonatomic, strong, nullable) GTLRPolicyTroubleshooter_GoogleTypeExpr *condition;

/**
 *  Specifies the identities requesting access for a Cloud Platform resource.
 *  `members` can have the following values:
 *  * `allUsers`: A special identifier that represents anyone who is
 *  on the internet; with or without a Google account.
 *  * `allAuthenticatedUsers`: A special identifier that represents anyone
 *  who is authenticated with a Google account or a service account.
 *  * `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@example.com` .
 *  * `serviceAccount:{emailid}`: An email address that represents a service
 *  account. For example, `my-other-app\@appspot.gserviceaccount.com`.
 *  * `group:{emailid}`: An email address that represents a Google group.
 *  For example, `admins\@example.com`.
 *  * `domain:{domain}`: The G Suite domain (primary) that represents all the
 *  users of that domain. For example, `google.com` or `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to `members`.
 *  For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Defines an Identity and Access Management (IAM) policy. It is used to
 *  specify access control policies for Cloud Platform resources.
 *  A `Policy` consists of a list of `bindings`. A `binding` binds a list of
 *  `members` to a `role`, where the members can be user accounts, Google
 *  groups,
 *  Google domains, and service accounts. A `role` is a named list of
 *  permissions
 *  defined by IAM.
 *  **JSON Example**
 *  {
 *  "bindings": [
 *  {
 *  "role": "roles/owner",
 *  "members": [
 *  "user:mike\@example.com",
 *  "group:admins\@example.com",
 *  "domain:google.com",
 *  "serviceAccount:my-other-app\@appspot.gserviceaccount.com"
 *  ]
 *  },
 *  {
 *  "role": "roles/viewer",
 *  "members": ["user:sean\@example.com"]
 *  }
 *  ]
 *  }
 *  **YAML Example**
 *  bindings:
 *  - members:
 *  - user:mike\@example.com
 *  - group:admins\@example.com
 *  - domain:google.com
 *  - serviceAccount:my-other-app\@appspot.gserviceaccount.com
 *  role: roles/owner
 *  - members:
 *  - user:sean\@example.com
 *  role: roles/viewer
 *  For a description of IAM and its features, see the
 *  [IAM developer's guide](https://cloud.google.com/iam/docs).
 */
@interface GTLRPolicyTroubleshooter_GoogleIamV1Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicyTroubleshooter_GoogleIamV1AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members` to a `role`.
 *  `bindings` with no members will result in an error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicyTroubleshooter_GoogleIamV1Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help
 *  prevent simultaneous updates of a policy from overwriting each other.
 *  It is strongly suggested that systems make use of the `etag` in the
 *  read-modify-write cycle to perform policy updates in order to avoid race
 *  conditions: An `etag` is returned in the response to `getIamPolicy`, and
 *  systems are expected to put that etag in the request to `setIamPolicy` to
 *  ensure that their change will be applied to the same version of the policy.
 *  If no `etag` is provided in the call to `setIamPolicy`, then the existing
 *  policy is overwritten.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected.
 *  Policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Represents an expression text. Example:
 *  title: "User account presence"
 *  description: "Determines whether the request has a user account"
 *  expression: "size(request.user) > 0"
 */
@interface GTLRPolicyTroubleshooter_GoogleTypeExpr : GTLRObject

/**
 *  An optional description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in
 *  Common Expression Language syntax.
 *  The application context of the containing message determines which
 *  well-known feature set of CEL is supported.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  An optional string indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  An optional title for the expression, i.e. a short string describing
 *  its purpose. This can be used e.g. in UIs which allow to enter the
 *  expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
