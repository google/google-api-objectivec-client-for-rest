// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Recommendations AI (recommendationengine/v1beta1)
// Description:
//   Recommendations AI service enables customers to build end-to-end
//   personalized recommendation systems without requiring a high level of
//   expertise in machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations-ai/docs

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Recommendations AI query classes.
 */
@interface GTLRRecommendationsAIQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a catalog item.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsCreate : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsCreateWithObject:parent:]

/**
 *  Required. The parent catalog resource name, such as
 *  "projects/ * /locations/global/catalogs/default_catalog".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem.
 *
 *  Creates a catalog item.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem to
 *    include in the query.
 *  @param parent Required. The parent catalog resource name, such as
 *    "projects/ * /locations/global/catalogs/default_catalog".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsCreate
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a catalog item.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsDelete : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsDeleteWithname:]

/**
 *  Required. Full resource name of catalog item, such as
 *  "projects/ *
 *  /locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleProtobufEmpty.
 *
 *  Deletes a catalog item.
 *
 *  @param name Required. Full resource name of catalog item, such as
 *    "projects/ *
 *    /locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a specific catalog item.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGet : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsGetWithname:]

/**
 *  Required. Full resource name of catalog item, such as
 *  "projects/ *
 *  /locations/global/catalogs/default_catalog/catalogitems/some_catalog_item_id".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem.
 *
 *  Gets a specific catalog item.
 *
 *  @param name Required. Full resource name of catalog item, such as
 *    "projects/ *
 *    /locations/global/catalogs/default_catalog/catalogitems/some_catalog_item_id".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Method for getting the catalog items associated with item group id.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.getGroupIdItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGetGroupIdItems : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsGetGroupIdItemsWithparent:]

/** Required. Catalog item identifier for prediction results. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/**
 *  Required. Parent resource name of group id item, such as
 *  "projects/ * /locations/global/catalogs/default_catalog".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1GetCatalogItemsWithItemGroupIdResponse.
 *
 *  Method for getting the catalog items associated with item group id.
 *
 *  @param parent Required. Parent resource name of group id item, such as
 *    "projects/ * /locations/global/catalogs/default_catalog".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGetGroupIdItems
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of multiple catalog items. Request processing may be
 *  synchronous. No partial updating supported. Non-existing items will be
 *  created.
 *  Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully updated.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsImport : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsImportWithObject:parent:]

/**
 *  Required. "projects/1234/locations/global/catalogs/default_catalog"
 *  If no updateMask is specified, requires catalogItems.create permission.
 *  If updateMask is specified, requires catalogItems.update permission.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Bulk import of multiple catalog items. Request processing may be
 *  synchronous. No partial updating supported. Non-existing items will be
 *  created.
 *  Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully updated.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest
 *    to include in the query.
 *  @param parent Required.
 *    "projects/1234/locations/global/catalogs/default_catalog"
 *    If no updateMask is specified, requires catalogItems.create permission.
 *    If updateMask is specified, requires catalogItems.update permission.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsImport
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of catalog items.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsListWithparent:]

/** Optional. A filter to apply on the list results. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of results to return per page. If zero, the
 *  service will choose a reasonable default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The previous ListCatalogItemsResponse.next_page_token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent catalog resource name, such as
 *  "projects/ * /locations/global/catalogs/default_catalog".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse.
 *
 *  Gets a list of catalog items.
 *
 *  @param parent Required. The parent catalog resource name, such as
 *    "projects/ * /locations/global/catalogs/default_catalog".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a catalog item. Partial updating is supported. Non-existing
 *  items will be created.
 *
 *  Method: recommendationengine.projects.locations.catalogs.catalogItems.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsPatch : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsCatalogItemsPatchWithObject:name:]

/**
 *  Required. Full resource name of catalog item, such as
 *  "projects/ *
 *  /locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Indicates which fields in the provided 'item' to update. If not
 *  set, will by default update all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem.
 *
 *  Updates a catalog item. Partial updating is supported. Non-existing
 *  items will be created.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem to
 *    include in the query.
 *  @param name Required. Full resource name of catalog item, such as
 *    "projects/ *
 *    /locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsPatch
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsGet : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Makes a recommendation prediction. If using API Key based authentication,
 *  the API Key must be registered using the
 *  PredictionApiKeyRegistry
 *  service. [Learn more](/recommendations-ai/docs/setting-up#register-key).
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.placements.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPlacementsPredict : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresPlacementsPredictWithObject:name:]

/**
 *  Required. Full resource name of the format:
 *  {name=projects/ *
 *  /locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/
 *  *}
 *  The id of the recommendation engine placement. This id is used to identify
 *  the set of models that will be used to make the prediction.
 *  We currently support three placements with the following IDs by default:
 *  * `shopping_cart`: Predicts items frequently bought together with one or
 *  more catalog items in the same shopping session. Commonly displayed after
 *  `add-to-cart` events, on product detail pages, or on the shopping cart
 *  page.
 *  * `home_page`: Predicts the next product that a user will most likely
 *  engage with or purchase based on the shopping or viewing history of the
 *  specified `userId` or `visitorId`. For example - Recommendations for you.
 *  * `product_detail`: Predicts the next product that a user will most likely
 *  engage with or purchase. The prediction is based on the shopping or
 *  viewing history of the specified `userId` or `visitorId` and its
 *  relevance to a specified `CatalogItem`. Typically used on product detail
 *  pages. For example - More items like this.
 *  * `recently_viewed_default`: Returns up to 75 items recently viewed by the
 *  specified `userId` or `visitorId`, most recent ones first. Returns
 *  nothing if neither of them has viewed any items yet. For example -
 *  Recently viewed.
 *  The full list of available placements can be seen at
 *  https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse.
 *
 *  Makes a recommendation prediction. If using API Key based authentication,
 *  the API Key must be registered using the
 *  PredictionApiKeyRegistry
 *  service. [Learn more](/recommendations-ai/docs/setting-up#register-key).
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest
 *    to include in the query.
 *  @param name Required. Full resource name of the format:
 *    {name=projects/ *
 *    /locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/
 *    *}
 *    The id of the recommendation engine placement. This id is used to identify
 *    the set of models that will be used to make the prediction.
 *    We currently support three placements with the following IDs by default:
 *    * `shopping_cart`: Predicts items frequently bought together with one or
 *    more catalog items in the same shopping session. Commonly displayed after
 *    `add-to-cart` events, on product detail pages, or on the shopping cart
 *    page.
 *    * `home_page`: Predicts the next product that a user will most likely
 *    engage with or purchase based on the shopping or viewing history of the
 *    specified `userId` or `visitorId`. For example - Recommendations for you.
 *    * `product_detail`: Predicts the next product that a user will most likely
 *    engage with or purchase. The prediction is based on the shopping or
 *    viewing history of the specified `userId` or `visitorId` and its
 *    relevance to a specified `CatalogItem`. Typically used on product detail
 *    pages. For example - More items like this.
 *    * `recently_viewed_default`: Returns up to 75 items recently viewed by the
 *    specified `userId` or `visitorId`, most recent ones first. Returns
 *    nothing if neither of them has viewed any items yet. For example -
 *    Recently viewed.
 *    The full list of available placements can be seen at
 *    https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPlacementsPredict
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Register an API key for use with predict method.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreate : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreateWithObject:parent:]

/**
 *  Required. The parent resource path.
 *  "projects/ *
 *  /locations/global/catalogs/default_catalog/eventStores/default_event_store".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration.
 *
 *  Register an API key for use with predict method.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest
 *    to include in the query.
 *  @param parent Required. The parent resource path.
 *    "projects/ *
 *    /locations/global/catalogs/default_catalog/eventStores/default_event_store".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreate
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Unregister an apiKey from using for predict method.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDelete : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDeleteWithname:]

/**
 *  Required. The API key to unregister including full resource path.
 *  "projects/ *
 *  /locations/global/catalogs/default_catalog/eventStores/default_event_store/predictionApiKeyRegistrations/<YOUR_API_KEY>"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleProtobufEmpty.
 *
 *  Unregister an apiKey from using for predict method.
 *
 *  @param name Required. The API key to unregister including full resource
 *    path.
 *    "projects/ *
 *    /locations/global/catalogs/default_catalog/eventStores/default_event_store/predictionApiKeyRegistrations/<YOUR_API_KEY>"
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List the registered apiKeys for use with predict method.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsListWithparent:]

/**
 *  Optional. Maximum number of results to return per page. If unset, the
 *  service will choose a reasonable default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The previous `ListPredictionApiKeyRegistration.nextPageToken`.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent placement resource name such as
 *  "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse.
 *
 *  List the registered apiKeys for use with predict method.
 *
 *  @param parent Required. The parent placement resource name such as
 *    "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store"
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Writes a single user event from the browser. This uses a GET request to
 *  due to browser restriction of POST-ing to a 3rd party domain.
 *  This method is used only by the Recommendations AI JavaScript pixel.
 *  Users should not call this method directly.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.collect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsCollect : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsCollectWithparent:]

/**
 *  Optional. The event timestamp in milliseconds. This prevents browser caching
 *  of
 *  otherwise identical get requests. The name is abbreviated to reduce the
 *  payload bytes.
 */
@property(nonatomic, assign) long long ets;

/**
 *  Required. The parent eventStore name, such as
 *  "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The url including cgi-parameters but excluding the hash fragment.
 *  The URL
 *  must be truncated to 1.5K bytes to conservatively be under the 2K bytes.
 *  This is often more useful than the referer url, because many browsers only
 *  send the domain for 3rd party requests.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/** Required. URL encoded UserEvent proto. */
@property(nonatomic, copy, nullable) NSString *userEvent;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleApiHttpBody.
 *
 *  Writes a single user event from the browser. This uses a GET request to
 *  due to browser restriction of POST-ing to a 3rd party domain.
 *  This method is used only by the Recommendations AI JavaScript pixel.
 *  Users should not call this method directly.
 *
 *  @param parent Required. The parent eventStore name, such as
 *    "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsCollect
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of User events. Request processing might be
 *  synchronous. Events that already exist are skipped.
 *  Use this method for backfilling historical user events.
 *  Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsImport : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsImportWithObject:parent:]

/**
 *  Required.
 *  "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Bulk import of User events. Request processing might be
 *  synchronous. Events that already exist are skipped.
 *  Use this method for backfilling historical user events.
 *  Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest
 *    to include in the query.
 *  @param parent Required.
 *    "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store"
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsImport
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of user events within a time range, with potential filtering.
 *  The method does not list unjoined user events.
 *  Unjoined user event definition: when a user event is ingested from
 *  Recommendations AI User Event APIs, the catalog item included in the user
 *  event is connected with the current catalog. If a catalog item of the
 *  ingested event is not in the current catalog, it could lead to degraded
 *  model quality. This is called an unjoined event.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsListWithparent:]

/**
 *  Optional. Filtering expression to specify restrictions over
 *  returned events. This is a sequence of terms, where each term applies some
 *  kind of a restriction to the returned user events. Use this expression to
 *  restrict results to a specific time range, or filter events by eventType.
 *  eg: eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems
 *  eventTime<"2012-04-23T18:25:43.511Z" eventType=search
 *  We expect only 3 types of fields:
 *  * eventTime: this can be specified a maximum of 2 times, once with a
 *  less than operator and once with a greater than operator. The
 *  eventTime restrict should result in one contiguous valid eventTime
 *  range.
 *  * eventType: only 1 eventType restriction can be specified.
 *  * eventsMissingCatalogItems: specififying this will restrict results
 *  to events for which catalog items were not found in the catalog. The
 *  default behavior is to return only those events for which catalog
 *  items were found.
 *  Some examples of valid filters expressions:
 *  * Example 1: eventTime > "2012-04-23T18:25:43.511Z"
 *  eventTime < "2012-04-23T18:30:43.511Z"
 *  * Example 2: eventTime > "2012-04-23T18:25:43.511Z"
 *  eventType = detail-page-view
 *  * Example 3: eventsMissingCatalogItems
 *  eventType = search eventTime < "2018-04-23T18:30:43.511Z"
 *  * Example 4: eventTime > "2012-04-23T18:25:43.511Z"
 *  * Example 5: eventType = search
 *  * Example 6: eventsMissingCatalogItems
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of results to return per page. If zero, the
 *  service will choose a reasonable default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The previous ListUserEventsResponse.next_page_token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent eventStore resource name, such as
 *  "projects/ * /locations/ *
 *  /catalogs/default_catalog/eventStores/default_event_store".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
 *
 *  Gets a list of user events within a time range, with potential filtering.
 *  The method does not list unjoined user events.
 *  Unjoined user event definition: when a user event is ingested from
 *  Recommendations AI User Event APIs, the catalog item included in the user
 *  event is connected with the current catalog. If a catalog item of the
 *  ingested event is not in the current catalog, it could lead to degraded
 *  model quality. This is called an unjoined event.
 *
 *  @param parent Required. The parent eventStore resource name, such as
 *    "projects/ * /locations/ *
 *    /catalogs/default_catalog/eventStores/default_event_store".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list
 *  command first.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsPurge : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsPurgeWithObject:parent:]

/**
 *  Required. The resource name of the event_store under which the events are
 *  created. The format is
 *  "projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list
 *  command first.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest
 *    to include in the query.
 *  @param parent Required. The resource name of the event_store under which the
 *    events are
 *    created. The format is
 *    "projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}"
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsPurge
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Triggers a user event rejoin operation with latest catalog data. Events
 *  will not be annotated with detailed catalog information if catalog item is
 *  missing at the time the user event is ingested, and these events are stored
 *  as unjoined events with a limited usage on training and serving. This API
 *  can be used to trigger a 'join' operation on specified events with latest
 *  version of catalog items. It can also be used to correct events joined with
 *  wrong catalog items.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.rejoin
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsRejoin : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsRejoinWithObject:parent:]

/**
 *  Required. Full resource name of user event, such as
 *  "projects/ * /locations/ *
 *  /catalogs/default_catalog/eventStores/default_event_store".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Triggers a user event rejoin operation with latest catalog data. Events
 *  will not be annotated with detailed catalog information if catalog item is
 *  missing at the time the user event is ingested, and these events are stored
 *  as unjoined events with a limited usage on training and serving. This API
 *  can be used to trigger a 'join' operation on specified events with latest
 *  version of catalog items. It can also be used to correct events joined with
 *  wrong catalog items.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest
 *    to include in the query.
 *  @param parent Required. Full resource name of user event, such as
 *    "projects/ * /locations/ *
 *    /catalogs/default_catalog/eventStores/default_event_store".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsRejoin
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Writes a single user event.
 *
 *  Method: recommendationengine.projects.locations.catalogs.eventStores.userEvents.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsWrite : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsEventStoresUserEventsWriteWithObject:parent:]

/**
 *  Required. The parent eventStore resource name, such as
 *  "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent.
 *
 *  Writes a single user event.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent to
 *    include in the query.
 *  @param parent Required. The parent eventStore resource name, such as
 *    "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store".
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsWrite
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists all the catalog configurations associated with the project.
 *
 *  Method: recommendationengine.projects.locations.catalogs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsListWithparent:]

/**
 *  Optional. Maximum number of results to return. If unspecified, defaults
 *  to 50. Max allowed value is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListCatalogs`
 *  call. Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The account resource name with an associated location. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogsResponse.
 *
 *  Lists all the catalog configurations associated with the project.
 *
 *  @param parent Required. The account resource name with an associated
 *    location.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: recommendationengine.projects.locations.catalogs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsGet : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  Method: recommendationengine.projects.locations.catalogs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsList : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRRecommendationsAI_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the catalog configuration.
 *
 *  Method: recommendationengine.projects.locations.catalogs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommendationsAICloudPlatform
 */
@interface GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsPatch : GTLRRecommendationsAIQuery
// Previous library name was
//   +[GTLQueryRecommendationsAI queryForProjectsLocationsCatalogsPatchWithObject:name:]

/** The fully qualified resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Indicates which fields in the provided 'recommendation_model' to
 *  update. If not set, will only update the catalog_item_level_config field.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog.
 *
 *  Updates the catalog configuration.
 *
 *  @param object The @c
 *    GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog to
 *    include in the query.
 *  @param name The fully qualified resource name of the catalog.
 *
 *  @return GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsPatch
 */
+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
