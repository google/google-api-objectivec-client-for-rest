// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Display & Video 360 API (displayvideo/v1)
// Description:
//   Display & Video 360 API allows users to manage and create campaigns and
//   reports.
// Documentation:
//   https://developers.google.com/display-video/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDisplayVideo_Advertiser;
@class GTLRDisplayVideo_AssignedTargetingOption;
@class GTLRDisplayVideo_BulkEditLineItemAssignedTargetingOptionsRequest;
@class GTLRDisplayVideo_Campaign;
@class GTLRDisplayVideo_CreateAssetRequest;
@class GTLRDisplayVideo_CreateSdfDownloadTaskRequest;
@class GTLRDisplayVideo_Creative;
@class GTLRDisplayVideo_FloodlightGroup;
@class GTLRDisplayVideo_InsertionOrder;
@class GTLRDisplayVideo_LineItem;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// targetingType

/** Value: "TARGETING_TYPE_AGE_RANGE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange;
/** Value: "TARGETING_TYPE_APP" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeApp;
/** Value: "TARGETING_TYPE_APP_CATEGORY" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory;
/** Value: "TARGETING_TYPE_AUDIENCE_GROUP" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup;
/** Value: "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus;
/** Value: "TARGETING_TYPE_BROWSER" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser;
/** Value: "TARGETING_TYPE_CARRIER_AND_ISP" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp;
/** Value: "TARGETING_TYPE_CATEGORY" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeCategory;
/** Value: "TARGETING_TYPE_CHANNEL" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeChannel;
/** Value: "TARGETING_TYPE_CONTENT_INSTREAM_POSITION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition;
/** Value: "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition;
/** Value: "TARGETING_TYPE_DAY_AND_TIME" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime;
/** Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel;
/** Value: "TARGETING_TYPE_DEVICE_TYPE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType;
/** Value: "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion;
/** Value: "TARGETING_TYPE_ENVIRONMENT" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment;
/** Value: "TARGETING_TYPE_EXCHANGE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeExchange;
/** Value: "TARGETING_TYPE_GENDER" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeGender;
/** Value: "TARGETING_TYPE_GEO_REGION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion;
/** Value: "TARGETING_TYPE_HOUSEHOLD_INCOME" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome;
/** Value: "TARGETING_TYPE_INVENTORY_SOURCE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource;
/** Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup;
/** Value: "TARGETING_TYPE_KEYWORD" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword;
/** Value: "TARGETING_TYPE_LANGUAGE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage;
/** Value: "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList;
/** Value: "TARGETING_TYPE_ON_SCREEN_POSITION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition;
/** Value: "TARGETING_TYPE_OPERATING_SYSTEM" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem;
/** Value: "TARGETING_TYPE_PARENTAL_STATUS" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus;
/** Value: "TARGETING_TYPE_PROXIMITY_LOCATION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation;
/** Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList;
/** Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList;
/** Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion;
/** Value: "TARGETING_TYPE_SUB_EXCHANGE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange;
/** Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier;
/** Value: "TARGETING_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified;
/** Value: "TARGETING_TYPE_URL" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeUrl;
/** Value: "TARGETING_TYPE_USER_REWARDED_CONTENT" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent;
/** Value: "TARGETING_TYPE_VIDEO_PLAYER_SIZE" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize;
/** Value: "TARGETING_TYPE_VIEWABILITY" */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideoTargetingTypeTargetingTypeViewability;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Display Video query classes.
 */
@interface GTLRDisplayVideoQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Uploads an asset.
 *  Returns the ID of the newly uploaded asset if successful.
 *  The asset file size should be no more than 10 MB for images, 200 MB for
 *  ZIP files, and 1 GB for videos.
 *
 *  Method: displayvideo.advertisers.assets.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersAssetsUpload : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersAssetsUploadWithObject:advertiserId:]

/** Required. The ID of the advertiser this asset belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_CreateAssetResponse.
 *
 *  Uploads an asset.
 *  Returns the ID of the newly uploaded asset if successful.
 *  The asset file size should be no more than 10 MB for images, 200 MB for
 *  ZIP files, and 1 GB for videos.
 *
 *  @param object The @c GTLRDisplayVideo_CreateAssetRequest to include in the
 *    query.
 *  @param advertiserId Required. The ID of the advertiser this asset belongs
 *    to.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersAssetsUpload
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_CreateAssetRequest *)object
                   advertiserId:(long long)advertiserId
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  Creates a new campaign.
 *  Returns the newly created campaign if successful.
 *
 *  Method: displayvideo.advertisers.campaigns.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCampaignsCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCampaignsCreateWithObject:advertiserId:]

/** Output only. The unique ID of the advertiser the campaign belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_Campaign.
 *
 *  Creates a new campaign.
 *  Returns the newly created campaign if successful.
 *
 *  @param object The @c GTLRDisplayVideo_Campaign to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    campaign belongs to.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCampaignsCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Campaign *)object
                   advertiserId:(long long)advertiserId;

@end

/**
 *  Permanently deletes a campaign. A deleted campaign cannot be recovered.
 *  The campaign should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, to be
 *  able to delete it.
 *
 *  Method: displayvideo.advertisers.campaigns.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCampaignsDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCampaignsDeleteWithadvertiserId:campaignId:]

/** The ID of the advertiser this campaign belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** The ID of the campaign we need to delete. */
@property(nonatomic, assign) long long campaignId;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Permanently deletes a campaign. A deleted campaign cannot be recovered.
 *  The campaign should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, to be
 *  able to delete it.
 *
 *  @param advertiserId The ID of the advertiser this campaign belongs to.
 *  @param campaignId The ID of the campaign we need to delete.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCampaignsDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           campaignId:(long long)campaignId;

@end

/**
 *  Gets a campaign.
 *
 *  Method: displayvideo.advertisers.campaigns.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCampaignsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCampaignsGetWithadvertiserId:campaignId:]

/** Required. The ID of the advertiser this campaign belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the campaign to fetch. */
@property(nonatomic, assign) long long campaignId;

/**
 *  Fetches a @c GTLRDisplayVideo_Campaign.
 *
 *  Gets a campaign.
 *
 *  @param advertiserId Required. The ID of the advertiser this campaign belongs
 *    to.
 *  @param campaignId Required. The ID of the campaign to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCampaignsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           campaignId:(long long)campaignId;

@end

/**
 *  Lists campaigns in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, campaigns with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  Method: displayvideo.advertisers.campaigns.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCampaignsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCampaignsListWithadvertiserId:]

/** The ID of the advertiser to list campaigns for. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by campaign properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `entityStatus`
 *  Examples:
 *  * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` campaigns under an
 *  advertiser:
 *  `(entityStatus="ENTITY_STATUS_ACTIVE" OR
 *  entityStatus="ENTITY_STATUS_PAUSED")`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  * `entityStatus`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token returned from the
 *  previous call to `ListCampaigns` method. If not specified, the first page
 *  of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListCampaignsResponse.
 *
 *  Lists campaigns in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, campaigns with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  @param advertiserId The ID of the advertiser to list campaigns for.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCampaignsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Updates an existing campaign.
 *  Returns the updated campaign if successful.
 *
 *  Method: displayvideo.advertisers.campaigns.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCampaignsPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCampaignsPatchWithObject:advertiserId:campaignId:]

/** Output only. The unique ID of the advertiser the campaign belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Output only. The unique ID of the campaign. Assigned by the system. */
@property(nonatomic, assign) long long campaignId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_Campaign.
 *
 *  Updates an existing campaign.
 *  Returns the updated campaign if successful.
 *
 *  @param object The @c GTLRDisplayVideo_Campaign to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    campaign belongs to.
 *  @param campaignId Output only. The unique ID of the campaign. Assigned by
 *    the system.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCampaignsPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Campaign *)object
                   advertiserId:(long long)advertiserId
                     campaignId:(long long)campaignId;

@end

/**
 *  Gets a channel for a partner or advertiser.
 *
 *  Method: displayvideo.advertisers.channels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersChannelsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersChannelsGetWithadvertiserId:channelId:]

/** The ID of the advertiser that owns the fetched channel. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the channel to fetch. */
@property(nonatomic, assign) long long channelId;

/** The ID of the partner that owns the fetched channel. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_Channel.
 *
 *  Gets a channel for a partner or advertiser.
 *
 *  @param advertiserId The ID of the advertiser that owns the fetched channel.
 *  @param channelId Required. The ID of the channel to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersChannelsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                            channelId:(long long)channelId;

@end

/**
 *  Lists channels for a partner or advertiser.
 *
 *  Method: displayvideo.advertisers.channels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersChannelsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersChannelsListWithadvertiserId:]

/** The ID of the advertiser that owns the channels. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by channel fields.
 *  Supported syntax:
 *  * Filter expressions for channel currently can only contain at most one
 *  * restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All channels for which the display name contains "google":
 *  `displayName : "google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  * `channelId`
 *  The default sorting order is ascending. To specify descending order for a
 *  field, a suffix " desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token returned from the
 *  previous call to `ListChannels` method. If not specified, the first page
 *  of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The ID of the partner that owns the channels. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListChannelsResponse.
 *
 *  Lists channels for a partner or advertiser.
 *
 *  @param advertiserId The ID of the advertiser that owns the channels.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersChannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Creates a new advertiser.
 *  Returns the newly created advertiser if successful.
 *  This method can take up to 180 seconds to complete.
 *
 *  Method: displayvideo.advertisers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreateWithObject:]

/**
 *  Fetches a @c GTLRDisplayVideo_Advertiser.
 *
 *  Creates a new advertiser.
 *  Returns the newly created advertiser if successful.
 *  This method can take up to 180 seconds to complete.
 *
 *  @param object The @c GTLRDisplayVideo_Advertiser to include in the query.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Advertiser *)object;

@end

/**
 *  Creates a new creative.
 *  Returns the newly created creative if successful.
 *
 *  Method: displayvideo.advertisers.creatives.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreativesCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreativesCreateWithObject:advertiserId:]

/** Output only. The unique ID of the advertiser the creative belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_Creative.
 *
 *  Creates a new creative.
 *  Returns the newly created creative if successful.
 *
 *  @param object The @c GTLRDisplayVideo_Creative to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    creative belongs to.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreativesCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Creative *)object
                   advertiserId:(long long)advertiserId;

@end

/**
 *  Deletes a creative.
 *  Returns error code `NOT_FOUND` if the creative does not exist.
 *  The creative should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, before
 *  it can be deleted.
 *
 *  Method: displayvideo.advertisers.creatives.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreativesDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreativesDeleteWithadvertiserId:creativeId:]

/** The ID of the advertiser this creative belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** The ID of the creative to be deleted. */
@property(nonatomic, assign) long long creativeId;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Deletes a creative.
 *  Returns error code `NOT_FOUND` if the creative does not exist.
 *  The creative should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, before
 *  it can be deleted.
 *
 *  @param advertiserId The ID of the advertiser this creative belongs to.
 *  @param creativeId The ID of the creative to be deleted.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreativesDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           creativeId:(long long)creativeId;

@end

/**
 *  Gets a creative.
 *
 *  Method: displayvideo.advertisers.creatives.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreativesGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreativesGetWithadvertiserId:creativeId:]

/** Required. The ID of the advertiser this creative belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the creative to fetch. */
@property(nonatomic, assign) long long creativeId;

/**
 *  Fetches a @c GTLRDisplayVideo_Creative.
 *
 *  Gets a creative.
 *
 *  @param advertiserId Required. The ID of the advertiser this creative belongs
 *    to.
 *  @param creativeId Required. The ID of the creative to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreativesGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           creativeId:(long long)creativeId;

@end

/**
 *  Lists creatives in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, creatives with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  Method: displayvideo.advertisers.creatives.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreativesList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreativesListWithadvertiserId:]

/** Required. The ID of the advertiser to list creatives for. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by creative properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restriction for the same field must be combined by `OR`.
 *  * Restriction for different fields must be combined by `AND`.
 *  * Between `(` and `)` there can only be restrictions combined by `OR`
 *  for the same field.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `entityStatus`
 *  - `creativeType`.
 *  - `dimensions`
 *  - `minDuration`
 *  - `maxDuration`
 *  - `approvalStatus`
 *  - `exchangeReviewStatus`
 *  - `dynamic`
 *  * For `entityStatus`, `minDuration`, `maxDuration`, and `dynamic` there may
 *  be at most one restriction.
 *  * For `dimensions`, the value is in the form of `"{width}x{height}"`.
 *  * For `exchangeReviewStatus`, the value is in the form of
 *  `{exchange}-{reviewStatus}`.
 *  * For `minDuration` and `maxDuration`, the value is in the form of
 *  `"{duration}s"`. Only seconds are supported with millisecond granularity.
 *  Examples:
 *  * All native creatives: `creativeType="CREATIVE_TYPE_NATIVE"`
 *  * All active creatives with 300x400 or 50x100 dimensions:
 *  `entityStatus="ENTITY_STATUS_ACTIVE" AND (dimensions="300x400"
 *  OR dimensions="50x100")`
 *  * All dynamic creatives that are approved by AdX or
 *  AppNexus, with a minimum duration of 5 seconds and 200ms.
 *  `dynamic="true" AND minDuration="5.2s" AND
 *  (exchangeReviewStatus="EXCHANGE_GOOGLE_AD_MANAGER-REVIEW_STATUS_APPROVED"
 *  OR exchangeReviewStatus="EXCHANGE_APPNEXUS-REVIEW_STATUS_APPROVED")`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `creativeId` (default)
 *  * `createTime`
 *  * `mediaDuration`
 *  * `dimensions` (sorts by width first, then by height)
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name.
 *  Example: `createTime desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListCreatives` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListCreativesResponse.
 *
 *  Lists creatives in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, creatives with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  @param advertiserId Required. The ID of the advertiser to list creatives
 *    for.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreativesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Updates an existing creative.
 *  Returns the updated creative if successful.
 *
 *  Method: displayvideo.advertisers.creatives.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersCreativesPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersCreativesPatchWithObject:advertiserId:creativeId:]

/** Output only. The unique ID of the advertiser the creative belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Output only. The unique ID of the creative. Assigned by the system. */
@property(nonatomic, assign) long long creativeId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_Creative.
 *
 *  Updates an existing creative.
 *  Returns the updated creative if successful.
 *
 *  @param object The @c GTLRDisplayVideo_Creative to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    creative belongs to.
 *  @param creativeId Output only. The unique ID of the creative. Assigned by
 *    the system.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersCreativesPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Creative *)object
                   advertiserId:(long long)advertiserId
                     creativeId:(long long)creativeId;

@end

/**
 *  Deletes an advertiser.
 *  Deleting an advertiser will delete all of its child resources, for example,
 *  campaigns, insertion orders and line items.
 *  A deleted advertiser cannot be recovered.
 *
 *  Method: displayvideo.advertisers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersDeleteWithadvertiserId:]

/** The ID of the advertiser we need to delete. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Deletes an advertiser.
 *  Deleting an advertiser will delete all of its child resources, for example,
 *  campaigns, insertion orders and line items.
 *  A deleted advertiser cannot be recovered.
 *
 *  @param advertiserId The ID of the advertiser we need to delete.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Gets an advertiser.
 *
 *  Method: displayvideo.advertisers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersGetWithadvertiserId:]

/** Required. The ID of the advertiser to fetch. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_Advertiser.
 *
 *  Gets an advertiser.
 *
 *  @param advertiserId Required. The ID of the advertiser to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Creates a new insertion order.
 *  Returns the newly created insertion order if successful.
 *
 *  Method: displayvideo.advertisers.insertionOrders.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersInsertionOrdersCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersInsertionOrdersCreateWithObject:advertiserId:]

/**
 *  Output only. The unique ID of the advertiser the insertion order belongs to.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_InsertionOrder.
 *
 *  Creates a new insertion order.
 *  Returns the newly created insertion order if successful.
 *
 *  @param object The @c GTLRDisplayVideo_InsertionOrder to include in the
 *    query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    insertion order belongs to.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersInsertionOrdersCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_InsertionOrder *)object
                   advertiserId:(long long)advertiserId;

@end

/**
 *  Deletes an insertion order.
 *  Returns error code `NOT_FOUND` if the insertion order does not exist.
 *  The insertion order should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`,
 *  to be able to delete it.
 *
 *  Method: displayvideo.advertisers.insertionOrders.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersInsertionOrdersDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersInsertionOrdersDeleteWithadvertiserId:insertionOrderId:]

/** The ID of the advertiser this insertion order belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** The ID of the insertion order we need to delete. */
@property(nonatomic, assign) long long insertionOrderId;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Deletes an insertion order.
 *  Returns error code `NOT_FOUND` if the insertion order does not exist.
 *  The insertion order should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`,
 *  to be able to delete it.
 *
 *  @param advertiserId The ID of the advertiser this insertion order belongs
 *    to.
 *  @param insertionOrderId The ID of the insertion order we need to delete.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersInsertionOrdersDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                     insertionOrderId:(long long)insertionOrderId;

@end

/**
 *  Gets an insertion order.
 *  Returns error code `NOT_FOUND` if the insertion order does not exist.
 *
 *  Method: displayvideo.advertisers.insertionOrders.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersInsertionOrdersGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersInsertionOrdersGetWithadvertiserId:insertionOrderId:]

/** Required. The ID of the advertiser this insertion order belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the insertion order to fetch. */
@property(nonatomic, assign) long long insertionOrderId;

/**
 *  Fetches a @c GTLRDisplayVideo_InsertionOrder.
 *
 *  Gets an insertion order.
 *  Returns error code `NOT_FOUND` if the insertion order does not exist.
 *
 *  @param advertiserId Required. The ID of the advertiser this insertion order
 *    belongs to.
 *  @param insertionOrderId Required. The ID of the insertion order to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersInsertionOrdersGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                     insertionOrderId:(long long)insertionOrderId;

@end

/**
 *  Lists insertion orders in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, insertion
 *  orders with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  Method: displayvideo.advertisers.insertionOrders.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersInsertionOrdersList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersInsertionOrdersListWithadvertiserId:]

/** Required. The ID of the advertiser to list insertion orders for. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by insertion order properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `campaignId`
 *  - `entityStatus`
 *  Examples:
 *  * All insertion orders under a campaign: `campaignId="1234"`
 *  * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` insertion orders
 *  under an advertiser:
 *  `(entityStatus="ENTITY_STATUS_ACTIVE" OR
 *  entityStatus="ENTITY_STATUS_PAUSED")`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * "displayName" (default)
 *  * "entityStatus"
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token returned
 *  from the previous call to `ListInsertionOrders` method. If not specified,
 *  the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListInsertionOrdersResponse.
 *
 *  Lists insertion orders in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, insertion
 *  orders with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  @param advertiserId Required. The ID of the advertiser to list insertion
 *    orders for.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersInsertionOrdersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Updates an existing insertion order.
 *  Returns the updated insertion order if successful.
 *
 *  Method: displayvideo.advertisers.insertionOrders.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersInsertionOrdersPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersInsertionOrdersPatchWithObject:advertiserId:insertionOrderId:]

/**
 *  Output only. The unique ID of the advertiser the insertion order belongs to.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Output only. The unique ID of the insertion order. Assigned by the system.
 */
@property(nonatomic, assign) long long insertionOrderId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_InsertionOrder.
 *
 *  Updates an existing insertion order.
 *  Returns the updated insertion order if successful.
 *
 *  @param object The @c GTLRDisplayVideo_InsertionOrder to include in the
 *    query.
 *  @param advertiserId Output only. The unique ID of the advertiser the
 *    insertion order belongs to.
 *  @param insertionOrderId Output only. The unique ID of the insertion order.
 *    Assigned by the system.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersInsertionOrdersPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_InsertionOrder *)object
                   advertiserId:(long long)advertiserId
               insertionOrderId:(long long)insertionOrderId;

@end

/**
 *  Bulk edits targeting options under a single line item.
 *  The operation will delete the assigned targeting options provided in
 *  BulkEditLineItemAssignedTargetingOptionsRequest.delete_requests and
 *  then create the assigned targeting options provided in
 *  BulkEditLineItemAssignedTargetingOptionsRequest.create_requests .
 *
 *  Method: displayvideo.advertisers.lineItems.bulkEditLineItemAssignedTargetingOptions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsBulkEditLineItemAssignedTargetingOptions : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsBulkEditLineItemAssignedTargetingOptionsWithObject:advertiserId:lineItemId:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Required. The ID of the line item the assigned targeting option will belong
 *  to.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Fetches a @c
 *  GTLRDisplayVideo_BulkEditLineItemAssignedTargetingOptionsResponse.
 *
 *  Bulk edits targeting options under a single line item.
 *  The operation will delete the assigned targeting options provided in
 *  BulkEditLineItemAssignedTargetingOptionsRequest.delete_requests and
 *  then create the assigned targeting options provided in
 *  BulkEditLineItemAssignedTargetingOptionsRequest.create_requests .
 *
 *  @param object The @c
 *    GTLRDisplayVideo_BulkEditLineItemAssignedTargetingOptionsRequest to
 *    include in the query.
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item the assigned targeting
 *    option will belong to.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsBulkEditLineItemAssignedTargetingOptions
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_BulkEditLineItemAssignedTargetingOptionsRequest *)object
                   advertiserId:(long long)advertiserId
                     lineItemId:(long long)lineItemId;

@end

/**
 *  Lists assigned targeting options of a line item across targeting types.
 *
 *  Method: displayvideo.advertisers.lineItems.bulkListLineItemAssignedTargetingOptions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsBulkListLineItemAssignedTargetingOptions : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsBulkListLineItemAssignedTargetingOptionsWithadvertiserId:lineItemId:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by assigned targeting option properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by the logical operator `OR` on the same
 *  field.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `targetingType`
 *  - `inheritance`
 *  Examples:
 *  * AssignedTargetingOptions of targeting type
 *  TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL
 *  `targetingType="TARGETING_TYPE_PROXIMITY_LOCATION_LIST" OR
 *  targetingType="TARGETING_TYPE_CHANNEL"`
 *  * AssignedTargetingOptions with inheritance status of NOT_INHERITED or
 *  INHERITED_FROM_PARTNER
 *  `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. The ID of the line item to list assigned targeting options for.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `targetingType` (default)
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `targetingType desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size.
 *  The size must be an integer between `1` and `5000`. If unspecified,
 *  the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid
 *  value is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token that lets the client fetch the next page of results.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to
 *  `BulkListLineItemAssignedTargetingOptions` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRDisplayVideo_BulkListLineItemAssignedTargetingOptionsResponse.
 *
 *  Lists assigned targeting options of a line item across targeting types.
 *
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item to list assigned
 *    targeting options for.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsBulkListLineItemAssignedTargetingOptions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId;

@end

/**
 *  Creates a new line item.
 *  Returns the newly created line item if successful.
 *
 *  Method: displayvideo.advertisers.lineItems.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsCreateWithObject:advertiserId:]

/** Output only. The unique ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Fetches a @c GTLRDisplayVideo_LineItem.
 *
 *  Creates a new line item.
 *  Returns the newly created line item if successful.
 *
 *  @param object The @c GTLRDisplayVideo_LineItem to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the line
 *    item belongs to.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_LineItem *)object
                   advertiserId:(long long)advertiserId;

@end

/**
 *  Deletes a line item.
 *  Returns error code `NOT_FOUND` if the line item does not exist.
 *  The line item should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, to be
 *  able to delete it.
 *
 *  Method: displayvideo.advertisers.lineItems.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsDeleteWithadvertiserId:lineItemId:]

/** The ID of the advertiser this line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** The ID of the line item we need to fetch. */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Deletes a line item.
 *  Returns error code `NOT_FOUND` if the line item does not exist.
 *  The line item should be archived first, i.e. set
 *  entity_status to `ENTITY_STATUS_ARCHIVED`, to be
 *  able to delete it.
 *
 *  @param advertiserId The ID of the advertiser this line item belongs to.
 *  @param lineItemId The ID of the line item we need to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId;

@end

/**
 *  Gets a line item.
 *
 *  Method: displayvideo.advertisers.lineItems.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsGetWithadvertiserId:lineItemId:]

/** Required. The ID of the advertiser this line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the line item to fetch. */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Fetches a @c GTLRDisplayVideo_LineItem.
 *
 *  Gets a line item.
 *
 *  @param advertiserId Required. The ID of the advertiser this line item
 *    belongs to.
 *  @param lineItemId Required. The ID of the line item to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId;

@end

/**
 *  Lists line items in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, line items with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  Method: displayvideo.advertisers.lineItems.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsListWithadvertiserId:]

/** Required. The ID of the advertiser to list line items for. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by line item properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `campaignId`
 *  - `insertionOrderId`
 *  - `entityStatus`
 *  - `lineItemType`.
 *  Examples:
 *  * All line items under an insertion order: `insertionOrderId="1234"`
 *  * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED`
 *  and `LINE_ITEM_TYPE_DISPLAY_DEFAULT` line items under an advertiser:
 *  `(entityStatus="ENTITY_STATUS_ACTIVE" OR
 *  entityStatus="ENTITY_STATUS_PAUSED") AND
 *  lineItemType="LINE_ITEM_TYPE_DISPLAY_DEFAULT"`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * "displayName" (default)
 *  * "entityStatus"
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListLineItems` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListLineItemsResponse.
 *
 *  Lists line items in an advertiser.
 *  The order is defined by the order_by
 *  parameter.
 *  If a filter by
 *  entity_status is not specified, line items with
 *  `ENTITY_STATUS_ARCHIVED` will not be included in the results.
 *
 *  @param advertiserId Required. The ID of the advertiser to list line items
 *    for.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Updates an existing line item.
 *  Returns the updated line item if successful.
 *
 *  Method: displayvideo.advertisers.lineItems.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsPatchWithObject:advertiserId:lineItemId:]

/** Output only. The unique ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Output only. The unique ID of the line item. Assigned by the system. */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_LineItem.
 *
 *  Updates an existing line item.
 *  Returns the updated line item if successful.
 *
 *  @param object The @c GTLRDisplayVideo_LineItem to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser the line
 *    item belongs to.
 *  @param lineItemId Output only. The unique ID of the line item. Assigned by
 *    the system.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_LineItem *)object
                   advertiserId:(long long)advertiserId
                     lineItemId:(long long)lineItemId;

@end

/**
 *  Assigns a targeting option to a line item.
 *  Returns the assigned targeting option if successful.
 *
 *  Method: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsTargetingTypesAssignedTargetingOptionsCreateWithObject:advertiserId:lineItemId:targetingType:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Required. The ID of the line item the assigned targeting option will belong
 *  to.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Required. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_AssignedTargetingOption.
 *
 *  Assigns a targeting option to a line item.
 *  Returns the assigned targeting option if successful.
 *
 *  @param object The @c GTLRDisplayVideo_AssignedTargetingOption to include in
 *    the query.
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item the assigned targeting
 *    option will belong to.
 *  @param targetingType Required. Identifies the type of this assigned
 *    targeting option.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_AssignedTargetingOption *)object
                   advertiserId:(long long)advertiserId
                     lineItemId:(long long)lineItemId
                  targetingType:(NSString *)targetingType;

@end

/**
 *  Deletes an assigned targeting option from a line item.
 *
 *  Method: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsDelete : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsTargetingTypesAssignedTargetingOptionsDeleteWithadvertiserId:lineItemId:targetingType:assignedTargetingOptionId:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the assigned targeting option to delete. */
@property(nonatomic, copy, nullable) NSString *assignedTargetingOptionId;

/**
 *  Required. The ID of the line item the assigned targeting option belongs to.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Required. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_Empty.
 *
 *  Deletes an assigned targeting option from a line item.
 *
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item the assigned targeting
 *    option belongs to.
 *  @param targetingType Required. Identifies the type of this assigned
 *    targeting option.
 *  @param assignedTargetingOptionId Required. The ID of the assigned targeting
 *    option to delete.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsDelete
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId
                        targetingType:(NSString *)targetingType
            assignedTargetingOptionId:(NSString *)assignedTargetingOptionId;

@end

/**
 *  Gets a single targeting option assigned to a line item.
 *
 *  Method: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsTargetingTypesAssignedTargetingOptionsGetWithadvertiserId:lineItemId:targetingType:assignedTargetingOptionId:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Required. An identifier unique to the targeting type in this line item that
 *  identifies the assigned targeting option being requested.
 */
@property(nonatomic, copy, nullable) NSString *assignedTargetingOptionId;

/**
 *  Required. The ID of the line item the assigned targeting option belongs to.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Required. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_AssignedTargetingOption.
 *
 *  Gets a single targeting option assigned to a line item.
 *
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item the assigned targeting
 *    option belongs to.
 *  @param targetingType Required. Identifies the type of this assigned
 *    targeting option.
 *  @param assignedTargetingOptionId Required. An identifier unique to the
 *    targeting type in this line item that
 *    identifies the assigned targeting option being requested.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId
                        targetingType:(NSString *)targetingType
            assignedTargetingOptionId:(NSString *)assignedTargetingOptionId;

@end

/**
 *  Lists the targeting options assigned to a line item.
 *
 *  Method: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLineItemsTargetingTypesAssignedTargetingOptionsListWithadvertiserId:lineItemId:targetingType:]

/** Required. The ID of the advertiser the line item belongs to. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by assigned targeting option properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by the logical operator `OR`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `assignedTargetingOptionId`
 *  - `inheritance`
 *  Examples:
 *  * AssignedTargetingOptions with ID 1 or 2
 *  `assignedTargetingOptionId="1" OR assignedTargetingOptionId="2"`
 *  * AssignedTargetingOptions with inheritance status of NOT_INHERITED or
 *  INHERITED_FROM_PARTNER
 *  `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. The ID of the line item to list assigned targeting options for.
 */
@property(nonatomic, assign) long long lineItemId;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `assignedTargetingOptionId` (default)
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `assignedTargetingOptionId desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListLineItemAssignedTargetingOptions`
 *  method. If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Identifies the type of assigned targeting options to list.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_ListLineItemAssignedTargetingOptionsResponse.
 *
 *  Lists the targeting options assigned to a line item.
 *
 *  @param advertiserId Required. The ID of the advertiser the line item belongs
 *    to.
 *  @param lineItemId Required. The ID of the line item to list assigned
 *    targeting options for.
 *  @param targetingType Required. Identifies the type of assigned targeting
 *    options to list.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLineItemsTargetingTypesAssignedTargetingOptionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                           lineItemId:(long long)lineItemId
                        targetingType:(NSString *)targetingType;

@end

/**
 *  Lists advertisers that are accessible to the current user.
 *  The order is defined by the order_by
 *  parameter.
 *  A single partner_id is required.
 *  Cross-partner listing is not supported.
 *
 *  Method: displayvideo.advertisers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersList]

/**
 *  Allows filtering by advertiser properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `entityStatus`
 *  Examples:
 *  * All active advertisers under a partner:
 *  `entityStatus="ENTITY_STATUS_ACTIVE"`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  * `entityStatus`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. For example,
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListAdvertisers` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The ID of the partner that the fetched advertisers should all
 *  belong to.
 *  The system only supports listing advertisers for one partner at a time.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListAdvertisersResponse.
 *
 *  Lists advertisers that are accessible to the current user.
 *  The order is defined by the order_by
 *  parameter.
 *  A single partner_id is required.
 *  Cross-partner listing is not supported.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets a location list.
 *
 *  Method: displayvideo.advertisers.locationLists.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLocationListsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLocationListsGetWithadvertiserId:locationListId:]

/**
 *  Required. The ID of the DV360 advertiser to which the fetched location list
 *  belongs.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the location list to fetch. */
@property(nonatomic, assign) long long locationListId;

/**
 *  Fetches a @c GTLRDisplayVideo_LocationList.
 *
 *  Gets a location list.
 *
 *  @param advertiserId Required. The ID of the DV360 advertiser to which the
 *    fetched location list belongs.
 *  @param locationListId Required. The ID of the location list to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLocationListsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                       locationListId:(long long)locationListId;

@end

/**
 *  Lists location lists based on a given advertiser id.
 *
 *  Method: displayvideo.advertisers.locationLists.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersLocationListsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersLocationListsListWithadvertiserId:]

/**
 *  Required. The ID of the DV360 advertiser to which the fetched location lists
 *  belong.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by location list fields.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `locationType`
 *  Examples:
 *  * All regional location list:
 *  `locationType="TARGETING_LOCATION_TYPE_REGIONAL"`
 *  * All proximity location list:
 *  `locationType="TARGETING_LOCATION_TYPE_PROXIMITY"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `locationListId` (default)
 *  * `displayName`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`.
 *  Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an
 *  invalid value is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListLocationLists` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListLocationListsResponse.
 *
 *  Lists location lists based on a given advertiser id.
 *
 *  @param advertiserId Required. The ID of the DV360 advertiser to which the
 *    fetched location lists belong.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersLocationListsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Gets a negative keyword list given an advertiser ID and a negative keyword
 *  list ID.
 *
 *  Method: displayvideo.advertisers.negativeKeywordLists.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersNegativeKeywordListsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersNegativeKeywordListsGetWithadvertiserId:negativeKeywordListId:]

/**
 *  Required. The ID of the DV360 advertiser to which the fetched negative
 *  keyword list
 *  belongs.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the negative keyword list to fetch. */
@property(nonatomic, assign) long long negativeKeywordListId;

/**
 *  Fetches a @c GTLRDisplayVideo_NegativeKeywordList.
 *
 *  Gets a negative keyword list given an advertiser ID and a negative keyword
 *  list ID.
 *
 *  @param advertiserId Required. The ID of the DV360 advertiser to which the
 *    fetched negative keyword list
 *    belongs.
 *  @param negativeKeywordListId Required. The ID of the negative keyword list
 *    to fetch.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersNegativeKeywordListsGet
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId
                negativeKeywordListId:(long long)negativeKeywordListId;

@end

/**
 *  Lists negative keyword lists based on a given advertiser id.
 *
 *  Method: displayvideo.advertisers.negativeKeywordLists.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersNegativeKeywordListsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersNegativeKeywordListsListWithadvertiserId:]

/**
 *  Required. The ID of the DV360 advertiser to which the fetched negative
 *  keyword lists
 *  belong.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Requested page size. Must be between `1` and `100`.
 *  Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an
 *  invalid value is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListNegativeKeywordLists` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListNegativeKeywordListsResponse.
 *
 *  Lists negative keyword lists based on a given advertiser id.
 *
 *  @param advertiserId Required. The ID of the DV360 advertiser to which the
 *    fetched negative keyword lists
 *    belong.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersNegativeKeywordListsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAdvertiserId:(long long)advertiserId;

@end

/**
 *  Updates an existing advertiser.
 *  Returns the updated advertiser if successful.
 *
 *  Method: displayvideo.advertisers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_AdvertisersPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForAdvertisersPatchWithObject:advertiserId:]

/** Output only. The unique ID of the advertiser. Assigned by the system. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_Advertiser.
 *
 *  Updates an existing advertiser.
 *  Returns the updated advertiser if successful.
 *
 *  @param object The @c GTLRDisplayVideo_Advertiser to include in the query.
 *  @param advertiserId Output only. The unique ID of the advertiser. Assigned
 *    by the system.
 *
 *  @return GTLRDisplayVideoQuery_AdvertisersPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_Advertiser *)object
                   advertiserId:(long long)advertiserId;

@end

/**
 *  Gets a combined audience.
 *
 *  Method: displayvideo.combinedAudiences.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_CombinedAudiencesGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForCombinedAudiencesGetWithcombinedAudienceId:]

/**
 *  The ID of the advertiser that has access to the fetched combined
 *  audience.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the combined audience to fetch. */
@property(nonatomic, assign) long long combinedAudienceId;

/** The ID of the partner that has access to the fetched combined audience. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_CombinedAudience.
 *
 *  Gets a combined audience.
 *
 *  @param combinedAudienceId Required. The ID of the combined audience to
 *    fetch.
 *
 *  @return GTLRDisplayVideoQuery_CombinedAudiencesGet
 */
+ (instancetype)queryWithCombinedAudienceId:(long long)combinedAudienceId;

@end

/**
 *  Lists combined audiences.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  Method: displayvideo.combinedAudiences.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_CombinedAudiencesList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForCombinedAudiencesList]

/**
 *  The ID of the advertiser that has access to the fetched combined
 *  audiences.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by combined audience fields.
 *  Supported syntax:
 *  * Filter expressions for combined audiences currently can only contain at
 *  most one restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All combined audiences for which the display name contains "Google":
 *  `displayName : "Google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `combinedAudienceId` (default)
 *  * `displayName`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListCombinedAudiences` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The ID of the partner that has access to the fetched combined audiences.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListCombinedAudiencesResponse.
 *
 *  Lists combined audiences.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  @return GTLRDisplayVideoQuery_CombinedAudiencesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets a custom list.
 *
 *  Method: displayvideo.customLists.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_CustomListsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForCustomListsGetWithcustomListId:]

/**
 *  The ID of the DV360 advertiser that has access to the fetched custom
 *  lists.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the custom list to fetch. */
@property(nonatomic, assign) long long customListId;

/**
 *  Fetches a @c GTLRDisplayVideo_CustomList.
 *
 *  Gets a custom list.
 *
 *  @param customListId Required. The ID of the custom list to fetch.
 *
 *  @return GTLRDisplayVideoQuery_CustomListsGet
 */
+ (instancetype)queryWithCustomListId:(long long)customListId;

@end

/**
 *  Lists custom lists.
 *  The order is defined by the order_by
 *  parameter.
 *
 *  Method: displayvideo.customLists.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_CustomListsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForCustomListsList]

/**
 *  The ID of the DV360 advertiser that has access to the fetched custom
 *  lists.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by custom list fields.
 *  Supported syntax:
 *  * Filter expressions for custom lists currently can only contain at
 *  most one restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All custom lists for which the display name contains "Google":
 *  `displayName : "Google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `customListId` (default)
 *  * `displayName`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListCustomLists` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDisplayVideo_ListCustomListsResponse.
 *
 *  Lists custom lists.
 *  The order is defined by the order_by
 *  parameter.
 *
 *  @return GTLRDisplayVideoQuery_CustomListsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets a first and third party audience.
 *
 *  Method: displayvideo.firstAndThirdPartyAudiences.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_FirstAndThirdPartyAudiencesGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForFirstAndThirdPartyAudiencesGetWithfirstAndThirdPartyAudienceId:]

/**
 *  The ID of the advertiser that has access to the fetched first and
 *  third party audience.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the first and third party audience to fetch. */
@property(nonatomic, assign) long long firstAndThirdPartyAudienceId;

/**
 *  The ID of the partner that has access to the fetched first and
 *  third party audience.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_FirstAndThirdPartyAudience.
 *
 *  Gets a first and third party audience.
 *
 *  @param firstAndThirdPartyAudienceId Required. The ID of the first and third
 *    party audience to fetch.
 *
 *  @return GTLRDisplayVideoQuery_FirstAndThirdPartyAudiencesGet
 */
+ (instancetype)queryWithFirstAndThirdPartyAudienceId:(long long)firstAndThirdPartyAudienceId;

@end

/**
 *  Lists first and third party audiences.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  Method: displayvideo.firstAndThirdPartyAudiences.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_FirstAndThirdPartyAudiencesList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForFirstAndThirdPartyAudiencesList]

/**
 *  The ID of the advertiser that has access to the fetched first and
 *  third party audiences.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by first and third party audience fields.
 *  Supported syntax:
 *  * Filter expressions for first and third party audiences currently can
 *  only contain at most one restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All first and third party audiences for which the display name contains
 *  "Google": `displayName : "Google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `firstAndThirdPartyAudienceId` (default)
 *  * `displayName`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListFirstAndThirdPartyAudiences`
 *  method. If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The ID of the partner that has access to the fetched first and
 *  third party audiences.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListFirstAndThirdPartyAudiencesResponse.
 *
 *  Lists first and third party audiences.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  @return GTLRDisplayVideoQuery_FirstAndThirdPartyAudiencesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets a Floodlight group.
 *
 *  Method: displayvideo.floodlightGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_FloodlightGroupsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForFloodlightGroupsGetWithfloodlightGroupId:]

/** Required. The ID of the Floodlight group to fetch. */
@property(nonatomic, assign) long long floodlightGroupId;

/**
 *  Required. The partner context by which the Floodlight group is being
 *  accessed.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_FloodlightGroup.
 *
 *  Gets a Floodlight group.
 *
 *  @param floodlightGroupId Required. The ID of the Floodlight group to fetch.
 *
 *  @return GTLRDisplayVideoQuery_FloodlightGroupsGet
 */
+ (instancetype)queryWithFloodlightGroupId:(long long)floodlightGroupId;

@end

/**
 *  Updates an existing Floodlight group.
 *  Returns the updated Floodlight group if successful.
 *
 *  Method: displayvideo.floodlightGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_FloodlightGroupsPatch : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForFloodlightGroupsPatchWithObject:floodlightGroupId:]

/**
 *  Output only. The unique ID of the Floodlight group. Assigned by the system.
 */
@property(nonatomic, assign) long long floodlightGroupId;

/**
 *  Required. The partner context by which the Floodlight group is being
 *  accessed.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Required. The mask to control which fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDisplayVideo_FloodlightGroup.
 *
 *  Updates an existing Floodlight group.
 *  Returns the updated Floodlight group if successful.
 *
 *  @param object The @c GTLRDisplayVideo_FloodlightGroup to include in the
 *    query.
 *  @param floodlightGroupId Output only. The unique ID of the Floodlight group.
 *    Assigned by the system.
 *
 *  @return GTLRDisplayVideoQuery_FloodlightGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_FloodlightGroup *)object
              floodlightGroupId:(long long)floodlightGroupId;

@end

/**
 *  Gets a Google audience.
 *
 *  Method: displayvideo.googleAudiences.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_GoogleAudiencesGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForGoogleAudiencesGetWithgoogleAudienceId:]

/**
 *  The ID of the advertiser that has access to the fetched Google audience.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the Google audience to fetch. */
@property(nonatomic, assign) long long googleAudienceId;

/** The ID of the partner that has access to the fetched Google audience. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_GoogleAudience.
 *
 *  Gets a Google audience.
 *
 *  @param googleAudienceId Required. The ID of the Google audience to fetch.
 *
 *  @return GTLRDisplayVideoQuery_GoogleAudiencesGet
 */
+ (instancetype)queryWithGoogleAudienceId:(long long)googleAudienceId;

@end

/**
 *  Lists Google audiences.
 *  The order is defined by the order_by
 *  parameter.
 *
 *  Method: displayvideo.googleAudiences.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_GoogleAudiencesList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForGoogleAudiencesList]

/**
 *  The ID of the advertiser that has access to the fetched Google audiences.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by Google audience fields.
 *  Supported syntax:
 *  * Filter expressions for Google audiences currently can only contain at
 *  most one restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All Google audiences for which the display name contains "Google":
 *  `displayName : "Google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `googleAudienceId` (default)
 *  * `displayName`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListGoogleAudiences` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The ID of the partner that has access to the fetched Google audiences. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListGoogleAudiencesResponse.
 *
 *  Lists Google audiences.
 *  The order is defined by the order_by
 *  parameter.
 *
 *  @return GTLRDisplayVideoQuery_GoogleAudiencesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets an inventory source group.
 *
 *  Method: displayvideo.inventorySourceGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_InventorySourceGroupsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForInventorySourceGroupsGetWithinventorySourceGroupId:]

/**
 *  The ID of the advertiser that has access to the inventory source group.
 *  If an inventory source group is partner-owned, only advertisers to which
 *  the group is explicitly shared can access the group.
 */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the inventory source group to fetch. */
@property(nonatomic, assign) long long inventorySourceGroupId;

/**
 *  The ID of the partner that has access to the inventory source group.
 *  A partner cannot access an advertiser-owned inventory source group.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_InventorySourceGroup.
 *
 *  Gets an inventory source group.
 *
 *  @param inventorySourceGroupId Required. The ID of the inventory source group
 *    to fetch.
 *
 *  @return GTLRDisplayVideoQuery_InventorySourceGroupsGet
 */
+ (instancetype)queryWithInventorySourceGroupId:(long long)inventorySourceGroupId;

@end

/**
 *  Lists inventory source groups that are accessible to the current user.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  Method: displayvideo.inventorySourceGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_InventorySourceGroupsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForInventorySourceGroupsList]

/**
 *  The ID of the advertiser that has access to the inventory source group.
 *  If an inventory source group is partner-owned, only advertisers to which
 *  the group is explicitly shared can access the group.
 */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by inventory source group properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by the logical operator `OR`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `inventorySourceGroupId`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  * `inventorySourceGroupId`
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. For example,
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListInventorySources` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The ID of the partner that has access to the inventory source group.
 *  A partner cannot access advertiser-owned inventory source groups.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListInventorySourceGroupsResponse.
 *
 *  Lists inventory source groups that are accessible to the current user.
 *  The order is defined by the
 *  order_by parameter.
 *
 *  @return GTLRDisplayVideoQuery_InventorySourceGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets an inventory source.
 *
 *  Method: displayvideo.inventorySources.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_InventorySourcesGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForInventorySourcesGetWithinventorySourceId:]

/** Required. The ID of the inventory source to fetch. */
@property(nonatomic, assign) long long inventorySourceId;

/**
 *  Required. The ID of the DV360 partner to which the fetched inventory source
 *  is permissioned.
 */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_InventorySource.
 *
 *  Gets an inventory source.
 *
 *  @param inventorySourceId Required. The ID of the inventory source to fetch.
 *
 *  @return GTLRDisplayVideoQuery_InventorySourcesGet
 */
+ (instancetype)queryWithInventorySourceId:(long long)inventorySourceId;

@end

/**
 *  Lists inventory sources that are accessible to the current user.
 *  The order is defined by the
 *  order_by parameter.
 *  If a filter by
 *  entity_status is not
 *  specified, inventory sources with entity status `ENTITY_STATUS_ARCHIVED`
 *  will not be included in the results.
 *
 *  Method: displayvideo.inventorySources.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_InventorySourcesList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForInventorySourcesList]

/** The ID of the advertiser that has access to the inventory source. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by inventory source properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `AND` or `OR` logical operators. A
 *  sequence of restrictions implicitly uses `AND`.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `EQUALS (=)`.
 *  * Supported fields:
 *  - `status.entityStatus`
 *  - `commitment`
 *  - `deliveryMethod`
 *  - `rateDetails.rateType`
 *  - `exchange`
 *  Examples:
 *  * All active inventory sources:
 *  `status.entityStatus="ENTITY_STATUS_ACTIVE"`
 *  * Inventory sources belonging to Google Ad Manager or Rubicon exchanges:
 *  `exchange="EXCHANGE_GOOGLE_AD_MANAGER" OR exchange="EXCHANGE_RUBICON"`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name. For example,
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListInventorySources` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The ID of the partner that has access to the inventory source. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListInventorySourcesResponse.
 *
 *  Lists inventory sources that are accessible to the current user.
 *  The order is defined by the
 *  order_by parameter.
 *  If a filter by
 *  entity_status is not
 *  specified, inventory sources with entity status `ENTITY_STATUS_ARCHIVED`
 *  will not be included in the results.
 *
 *  @return GTLRDisplayVideoQuery_InventorySourcesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Downloads media. Download is supported on the URI
 *  `/download/{resource_name=**}?alt=media.`
 *  **Note**: Download requests will not be successful without including
 *  `alt=media` query string.
 *
 *  Method: displayvideo.media.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 *    @c kGTLRAuthScopeDisplayVideoDoubleclickbidmanager
 */
@interface GTLRDisplayVideoQuery_MediaDownload : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForMediaDownloadWithresourceName:]

/**
 *  Name of the media that is being downloaded. See
 *  ReadRequest.resource_name.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Fetches a @c GTLRDisplayVideo_GoogleBytestreamMedia.
 *
 *  Downloads media. Download is supported on the URI
 *  `/download/{resource_name=**}?alt=media.`
 *  **Note**: Download requests will not be successful without including
 *  `alt=media` query string.
 *
 *  @param resourceName Name of the media that is being downloaded. See
 *    ReadRequest.resource_name.
 *
 *  @return GTLRDisplayVideoQuery_MediaDownload
 */
+ (instancetype)queryWithResourceName:(NSString *)resourceName;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Downloads media. Download is supported on the URI
 *  `/download/{resource_name=**}?alt=media.`
 *  **Note**: Download requests will not be successful without including
 *  `alt=media` query string.
 *
 *  @param resourceName Name of the media that is being downloaded. See
 *    ReadRequest.resource_name.
 *
 *  @return GTLRDisplayVideoQuery_MediaDownload
 */
+ (instancetype)queryForMediaWithResourceName:(NSString *)resourceName;

@end

/**
 *  Gets a channel for a partner or advertiser.
 *
 *  Method: displayvideo.partners.channels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_PartnersChannelsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForPartnersChannelsGetWithpartnerId:channelId:]

/** The ID of the advertiser that owns the fetched channel. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the channel to fetch. */
@property(nonatomic, assign) long long channelId;

/** The ID of the partner that owns the fetched channel. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_Channel.
 *
 *  Gets a channel for a partner or advertiser.
 *
 *  @param partnerId The ID of the partner that owns the fetched channel.
 *  @param channelId Required. The ID of the channel to fetch.
 *
 *  @return GTLRDisplayVideoQuery_PartnersChannelsGet
 */
+ (instancetype)queryWithPartnerId:(long long)partnerId
                         channelId:(long long)channelId;

@end

/**
 *  Lists channels for a partner or advertiser.
 *
 *  Method: displayvideo.partners.channels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_PartnersChannelsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForPartnersChannelsListWithpartnerId:]

/** The ID of the advertiser that owns the channels. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by channel fields.
 *  Supported syntax:
 *  * Filter expressions for channel currently can only contain at most one
 *  * restriction.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be `CONTAINS (:)`.
 *  * Supported fields:
 *  - `displayName`
 *  Examples:
 *  * All channels for which the display name contains "google":
 *  `displayName : "google"`.
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `displayName` (default)
 *  * `channelId`
 *  The default sorting order is ascending. To specify descending order for a
 *  field, a suffix " desc" should be added to the field name. Example:
 *  `displayName desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token returned from the
 *  previous call to `ListChannels` method. If not specified, the first page
 *  of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The ID of the partner that owns the channels. */
@property(nonatomic, assign) long long partnerId;

/**
 *  Fetches a @c GTLRDisplayVideo_ListChannelsResponse.
 *
 *  Lists channels for a partner or advertiser.
 *
 *  @param partnerId The ID of the partner that owns the channels.
 *
 *  @return GTLRDisplayVideoQuery_PartnersChannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithPartnerId:(long long)partnerId;

@end

/**
 *  Creates an SDF Download Task. Returns an
 *  Operation.
 *  An SDF Download Task is a long-running, asynchronous operation. The
 *  metadata type of this operation is
 *  SdfDownloadTaskMetadata. If the request is successful, the
 *  response type of the operation is
 *  SdfDownloadTask. The response will not include the download files,
 *  which must be retrieved with
 *  media.download. The state of
 *  operation can be retrieved with
 *  sdfdownloadtask.operations.get.
 *  Any errors can be found in the
 *  error.message. Note
 *  that error.details is expected to be
 *  empty.
 *
 *  Method: displayvideo.sdfdownloadtasks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_SdfdownloadtasksCreate : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForSdfdownloadtasksCreateWithObject:]

/**
 *  Fetches a @c GTLRDisplayVideo_Operation.
 *
 *  Creates an SDF Download Task. Returns an
 *  Operation.
 *  An SDF Download Task is a long-running, asynchronous operation. The
 *  metadata type of this operation is
 *  SdfDownloadTaskMetadata. If the request is successful, the
 *  response type of the operation is
 *  SdfDownloadTask. The response will not include the download files,
 *  which must be retrieved with
 *  media.download. The state of
 *  operation can be retrieved with
 *  sdfdownloadtask.operations.get.
 *  Any errors can be found in the
 *  error.message. Note
 *  that error.details is expected to be
 *  empty.
 *
 *  @param object The @c GTLRDisplayVideo_CreateSdfDownloadTaskRequest to
 *    include in the query.
 *
 *  @return GTLRDisplayVideoQuery_SdfdownloadtasksCreate
 */
+ (instancetype)queryWithObject:(GTLRDisplayVideo_CreateSdfDownloadTaskRequest *)object;

@end

/**
 *  Gets the latest state of an asynchronous SDF download task operation.
 *  Clients should poll this method at intervals of 30 seconds.
 *
 *  Method: displayvideo.sdfdownloadtasks.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 *    @c kGTLRAuthScopeDisplayVideoDoubleclickbidmanager
 */
@interface GTLRDisplayVideoQuery_SdfdownloadtasksOperationsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForSdfdownloadtasksOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDisplayVideo_Operation.
 *
 *  Gets the latest state of an asynchronous SDF download task operation.
 *  Clients should poll this method at intervals of 30 seconds.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDisplayVideoQuery_SdfdownloadtasksOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a single targeting option.
 *
 *  Method: displayvideo.targetingTypes.targetingOptions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_TargetingTypesTargetingOptionsGet : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForTargetingTypesTargetingOptionsGetWithtargetingType:targetingOptionId:]

/** Required. The Advertiser this request is being made in the context of. */
@property(nonatomic, assign) long long advertiserId;

/** Required. The ID of the of targeting option to retrieve. */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

/**
 *  Required. The type of targeting option to retrieve.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_TargetingOption.
 *
 *  Gets a single targeting option.
 *
 *  @param targetingType Required. The type of targeting option to retrieve.
 *  @param targetingOptionId Required. The ID of the of targeting option to
 *    retrieve.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_TargetingTypesTargetingOptionsGet
 */
+ (instancetype)queryWithTargetingType:(NSString *)targetingType
                     targetingOptionId:(NSString *)targetingOptionId;

@end

/**
 *  Lists targeting options of a given type.
 *
 *  Method: displayvideo.targetingTypes.targetingOptions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDisplayVideoDisplayVideo
 */
@interface GTLRDisplayVideoQuery_TargetingTypesTargetingOptionsList : GTLRDisplayVideoQuery
// Previous library name was
//   +[GTLQueryDisplayVideo queryForTargetingTypesTargetingOptionsListWithtargetingType:]

/** Required. The Advertiser this request is being made in the context of. */
@property(nonatomic, assign) long long advertiserId;

/**
 *  Allows filtering by targeting option properties.
 *  Supported syntax:
 *  * Filter expressions are made up of one or more restrictions.
 *  * Restrictions can be combined by `OR` logical operators.
 *  * A restriction has the form of `{field} {operator} {value}`.
 *  * The operator must be "=" (equal sign).
 *  * Supported fields:
 *  - `targetingOptionId`
 *  The length of this field should be no more than 500 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field by which to sort the list.
 *  Acceptable values are:
 *  * `targetingOptionId` (default)
 *  The default sorting order is ascending. To specify descending order for
 *  a field, a suffix "desc" should be added to the field name.
 *  Example: `targetingOptionId desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Must be between `1` and `100`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  next_page_token
 *  returned from the previous call to `ListTargetingOptions` method.
 *  If not specified, the first page of results will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The type of targeting option to be listed.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Fetches a @c GTLRDisplayVideo_ListTargetingOptionsResponse.
 *
 *  Lists targeting options of a given type.
 *
 *  @param targetingType Required. The type of targeting option to be listed.
 *
 *  Likely values for @c targetingType:
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUnspecified Value
 *        "TARGETING_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeChannel Value
 *        "TARGETING_TYPE_CHANNEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAppCategory Value
 *        "TARGETING_TYPE_APP_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeApp Value
 *        "TARGETING_TYPE_APP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUrl Value
 *        "TARGETING_TYPE_URL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDayAndTime Value
 *        "TARGETING_TYPE_DAY_AND_TIME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAgeRange Value
 *        "TARGETING_TYPE_AGE_RANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeRegionalLocationList
 *        Value "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocationList
 *        Value "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGender Value
 *        "TARGETING_TYPE_GENDER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeVideoPlayerSize Value
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeUserRewardedContent
 *        Value "TARGETING_TYPE_USER_REWARDED_CONTENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeParentalStatus Value
 *        "TARGETING_TYPE_PARENTAL_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentInstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeContentOutstreamPosition
 *        Value "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceType Value
 *        "TARGETING_TYPE_DEVICE_TYPE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAudienceGroup Value
 *        "TARGETING_TYPE_AUDIENCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeBrowser Value
 *        "TARGETING_TYPE_BROWSER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeHouseholdIncome Value
 *        "TARGETING_TYPE_HOUSEHOLD_INCOME"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOnScreenPosition Value
 *        "TARGETING_TYPE_ON_SCREEN_POSITION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeThirdPartyVerifier
 *        Value "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDigitalContentLabelExclusion
 *        Value "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSensitiveCategoryExclusion
 *        Value "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeEnvironment Value
 *        "TARGETING_TYPE_ENVIRONMENT"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCarrierAndIsp Value
 *        "TARGETING_TYPE_CARRIER_AND_ISP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeOperatingSystem Value
 *        "TARGETING_TYPE_OPERATING_SYSTEM"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeDeviceMakeModel Value
 *        "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeKeyword Value
 *        "TARGETING_TYPE_KEYWORD"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeNegativeKeywordList
 *        Value "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeViewability Value
 *        "TARGETING_TYPE_VIEWABILITY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeCategory Value
 *        "TARGETING_TYPE_CATEGORY"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySource Value
 *        "TARGETING_TYPE_INVENTORY_SOURCE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeLanguage Value
 *        "TARGETING_TYPE_LANGUAGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeAuthorizedSellerStatus
 *        Value "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeGeoRegion Value
 *        "TARGETING_TYPE_GEO_REGION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeInventorySourceGroup
 *        Value "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeProximityLocation Value
 *        "TARGETING_TYPE_PROXIMITY_LOCATION"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeExchange Value
 *        "TARGETING_TYPE_EXCHANGE"
 *    @arg @c kGTLRDisplayVideoTargetingTypeTargetingTypeSubExchange Value
 *        "TARGETING_TYPE_SUB_EXCHANGE"
 *
 *  @return GTLRDisplayVideoQuery_TargetingTypesTargetingOptionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithTargetingType:(NSString *)targetingType;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
