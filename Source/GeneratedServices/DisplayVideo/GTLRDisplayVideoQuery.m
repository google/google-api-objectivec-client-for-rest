// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Display & Video 360 API (displayvideo/v1)
// Description:
//   Display & Video 360 API allows users to manage and create campaigns and
//   reports.
// Documentation:
//   https://developers.google.com/display-video/

#import "GTLRDisplayVideoQuery.h"

#import "GTLRDisplayVideoObjects.h"

@implementation GTLRDisplayVideoQuery

@dynamic fields;

@end

@implementation GTLRDisplayVideoQuery_MediaDownload

@dynamic resourceName;

+ (instancetype)queryWithResourceName:(NSString *)resourceName {
  NSArray *pathParams = @[ @"resourceName" ];
  NSString *pathURITemplate = @"download/{+resourceName}";
  GTLRDisplayVideoQuery_MediaDownload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resourceName = resourceName;
  query.expectedObjectClass = [GTLRDisplayVideo_GoogleBytestreamMedia class];
  query.loggingName = @"displayvideo.media.download";
  return query;
}

+ (instancetype)queryForMediaWithResourceName:(NSString *)resourceName {
  GTLRDisplayVideoQuery_MediaDownload *query =
    [self queryWithResourceName:resourceName];
  query.downloadAsDataObjectType = @"media";
  query.loggingName = @"Download displayvideo.media.download";
  return query;
}

@end

@implementation GTLRDisplayVideoQuery_SdfdownloadtasksCreate

+ (instancetype)queryWithObject:(GTLRDisplayVideo_CreateSdfDownloadTaskRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/sdfdownloadtasks";
  GTLRDisplayVideoQuery_SdfdownloadtasksCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRDisplayVideo_Operation class];
  query.loggingName = @"displayvideo.sdfdownloadtasks.create";
  return query;
}

@end

@implementation GTLRDisplayVideoQuery_SdfdownloadtasksOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDisplayVideoQuery_SdfdownloadtasksOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDisplayVideo_Operation class];
  query.loggingName = @"displayvideo.sdfdownloadtasks.operations.get";
  return query;
}

@end
