// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Billing Budget API (billingbudgets/v1)
// Description:
//   The Cloud Billing Budget API stores Cloud Billing budgets, which define a
//   budget plan and the rules to execute as spend is tracked against that plan.
// Documentation:
//   https://cloud.google.com/billing/docs/how-to/budget-api-overview

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Budget;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1BudgetAmount;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_Labels;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1LastPeriodAmount;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1NotificationsRule;
@class GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule;
@class GTLRCloudBillingBudget_GoogleTypeMoney;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter.creditTypesTreatment

/**
 *  This is an invalid value.
 *
 *  Value: "CREDIT_TYPES_TREATMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_CreditTypesTreatmentUnspecified;
/**
 *  All types of credit are added to the net cost to determine the spend for
 *  threshold calculations.
 *
 *  Value: "EXCLUDE_ALL_CREDITS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_ExcludeAllCredits;
/**
 *  All types of credit are subtracted from the gross cost to determine the
 *  spend for threshold calculations.
 *
 *  Value: "INCLUDE_ALL_CREDITS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_IncludeAllCredits;
/**
 *  Credit types specified in the credit_types field are subtracted from the
 *  gross cost to determine the spend for threshold calculations.
 *
 *  Value: "INCLUDE_SPECIFIED_CREDITS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_IncludeSpecifiedCredits;

// ----------------------------------------------------------------------------
// GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule.spendBasis

/**
 *  Unspecified threshold basis.
 *
 *  Value: "BASIS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_BasisUnspecified;
/**
 *  Use current spend as the basis for comparison against the threshold.
 *
 *  Value: "CURRENT_SPEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_CurrentSpend;
/**
 *  Use forecasted spend for the period as the basis for comparison against the
 *  threshold.
 *
 *  Value: "FORECASTED_SPEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_ForecastedSpend;

/**
 *  A budget is a plan that describes what you expect to spend on Cloud
 *  projects, plus the rules to execute as spend is tracked against that plan,
 *  (for example, send an alert when 90% of the target spend is met). Currently
 *  all plans are monthly budgets so the usage period(s) tracked are implied
 *  (calendar months of usage back-to-back).
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Budget : GTLRObject

/** Required. Budgeted amount. */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1BudgetAmount *amount;

/**
 *  Optional. Filters that define which resources are used to compute the actual
 *  spend against the budget.
 */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter *budgetFilter;

/**
 *  User data for display name in UI. The name must be less than or equal to 60
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Etag to validate that the object is unchanged for a
 *  read-modify-write operation. An empty etag will cause an update to overwrite
 *  other changes.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. Resource name of the budget. The resource name implies the
 *  scope of a budget. Values are of the form
 *  `billingAccounts/{billingAccountId}/budgets/{budgetId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Rules to apply to notifications sent based on budget spend and
 *  thresholds.
 */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1NotificationsRule *notificationsRule;

/**
 *  Optional. Rules that trigger alerts (notifications of thresholds being
 *  crossed) when spend exceeds the specified percentages of the budget.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule *> *thresholdRules;

@end


/**
 *  The budgeted amount for each usage period.
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1BudgetAmount : GTLRObject

/**
 *  Use the last period's actual spend as the budget for the present period.
 */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1LastPeriodAmount *lastPeriodAmount;

/**
 *  A specified amount to use as the budget. `currency_code` is optional. If
 *  specified, it must match the currency of the billing account. The
 *  `currency_code` is provided on output.
 */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleTypeMoney *specifiedAmount;

@end


/**
 *  A filter for a budget, limiting the scope of the cost to calculate.
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter : GTLRObject

/**
 *  Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS,
 *  this is a list of credit types to be subtracted from gross cost to determine
 *  the spend for threshold calculations. If Filter.credit_types_treatment is
 *  **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty. See [a list of
 *  acceptable credit type
 *  values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *creditTypes;

/**
 *  Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_CreditTypesTreatmentUnspecified
 *        This is an invalid value. (Value:
 *        "CREDIT_TYPES_TREATMENT_UNSPECIFIED")
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_ExcludeAllCredits
 *        All types of credit are added to the net cost to determine the spend
 *        for threshold calculations. (Value: "EXCLUDE_ALL_CREDITS")
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_IncludeAllCredits
 *        All types of credit are subtracted from the gross cost to determine
 *        the spend for threshold calculations. (Value: "INCLUDE_ALL_CREDITS")
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_CreditTypesTreatment_IncludeSpecifiedCredits
 *        Credit types specified in the credit_types field are subtracted from
 *        the gross cost to determine the spend for threshold calculations.
 *        (Value: "INCLUDE_SPECIFIED_CREDITS")
 */
@property(nonatomic, copy, nullable) NSString *creditTypesTreatment;

/**
 *  Optional. A single label and value pair specifying that usage from only this
 *  set of labeled resources should be included in the budget. Currently,
 *  multiple entries or multiple values per entry are not allowed. If omitted,
 *  the report will include all labeled and unlabeled usage.
 */
@property(nonatomic, strong, nullable) GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_Labels *labels;

/**
 *  Optional. A set of projects of the form `projects/{project}`, specifying
 *  that usage from only this set of projects should be included in the budget.
 *  If omitted, the report will include all usage for the billing account,
 *  regardless of which project the usage occurred on. Only zero or one project
 *  can be specified currently.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *projects;

/**
 *  Optional. A set of services of the form `services/{service_id}`, specifying
 *  that usage from only this set of services should be included in the budget.
 *  If omitted, the report will include usage for all the services. The service
 *  names are available through the Catalog API:
 *  https://cloud.google.com/billing/v1/how-tos/catalog-api.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *services;

/**
 *  Optional. A set of subaccounts of the form `billingAccounts/{account_id}`,
 *  specifying that usage from only this set of subaccounts should be included
 *  in the budget. If a subaccount is set to the name of the parent account,
 *  usage from the parent account will be included. If the field is omitted, the
 *  report will include usage from the parent account and all subaccounts, if
 *  they exist.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *subaccounts;

@end


/**
 *  Optional. A single label and value pair specifying that usage from only this
 *  set of labeled resources should be included in the budget. Currently,
 *  multiple entries or multiple values per entry are not allowed. If omitted,
 *  the report will include all labeled and unlabeled usage.
 *
 *  @note This class is documented as having more properties of NSArrays of any
 *        valid JSON type. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Filter_Labels : GTLRObject
@end


/**
 *  Describes a budget amount targeted to last period's spend. At this time, the
 *  amount is automatically 100% of last period's spend; that is, there are no
 *  other options yet. Future configuration will be described here (for example,
 *  configuring a percentage of last period's spend).
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1LastPeriodAmount : GTLRObject
@end


/**
 *  Response for ListBudgets
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "budgets" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ListBudgetsResponse : GTLRCollectionObject

/**
 *  List of the budgets owned by the requested billing account.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1Budget *> *budgets;

/**
 *  If not empty, indicates that there may be more budgets that match the
 *  request; this value should be passed in a new `ListBudgetsRequest`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  NotificationsRule defines notifications that are sent based on budget spend
 *  and thresholds.
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1NotificationsRule : GTLRObject

/**
 *  Optional. When set to true, disables default notifications sent when a
 *  threshold is exceeded. Default notifications are sent to those with Billing
 *  Account Administrator and Billing Account User IAM roles for the target
 *  account.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableDefaultIamRecipients;

/**
 *  Optional. Targets to send notifications to when a threshold is exceeded.
 *  This is in addition to default recipients who have billing account IAM
 *  roles. The value is the full REST resource name of a monitoring notification
 *  channel with the form
 *  `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5
 *  channels are allowed. See
 *  https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients
 *  for more details.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *monitoringNotificationChannels;

/**
 *  Optional. The name of the Pub/Sub topic where budget related messages will
 *  be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates
 *  are sent at regular intervals to the topic. The topic needs to be created
 *  before the budget is created; see
 *  https://cloud.google.com/billing/docs/how-to/budgets#manage-notifications
 *  for more details. Caller is expected to have `pubsub.topics.setIamPolicy`
 *  permission on the topic when it's set for a budget, otherwise, the API call
 *  will fail with PERMISSION_DENIED. See
 *  https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications
 *  for more details on Pub/Sub roles and permissions.
 */
@property(nonatomic, copy, nullable) NSString *pubsubTopic;

/**
 *  Optional. The schema version of the notification sent to `pubsub_topic`.
 *  Only "1.0" is accepted. It represents the JSON schema as defined in
 *  https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format
 */
@property(nonatomic, copy, nullable) NSString *schemaVersion;

@end


/**
 *  ThresholdRule contains a definition of a threshold which triggers an alert
 *  (a notification of a threshold being crossed) to be sent when spend goes
 *  above the specified amount. Alerts are automatically e-mailed to users with
 *  the Billing Account Administrator role or the Billing Account User role. The
 *  thresholds here have no effect on notifications sent to anything configured
 *  under `Budget.all_updates_rule`.
 */
@interface GTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule : GTLRObject

/**
 *  Optional. The type of basis used to determine if spend has passed the
 *  threshold. Behavior defaults to CURRENT_SPEND if not set.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_BasisUnspecified
 *        Unspecified threshold basis. (Value: "BASIS_UNSPECIFIED")
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_CurrentSpend
 *        Use current spend as the basis for comparison against the threshold.
 *        (Value: "CURRENT_SPEND")
 *    @arg @c kGTLRCloudBillingBudget_GoogleCloudBillingBudgetsV1ThresholdRule_SpendBasis_ForecastedSpend
 *        Use forecasted spend for the period as the basis for comparison
 *        against the threshold. (Value: "FORECASTED_SPEND")
 */
@property(nonatomic, copy, nullable) NSString *spendBasis;

/**
 *  Required. Send an alert when this threshold is exceeded. This is a 1.0-based
 *  percentage, so 0.5 = 50%. Validation: non-negative number.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *thresholdPercent;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
 *  representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRCloudBillingBudget_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRCloudBillingBudget_GoogleTypeMoney : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
