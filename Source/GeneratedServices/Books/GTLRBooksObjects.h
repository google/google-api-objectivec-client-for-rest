// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Books API (books/v1)
// Description:
//   Searches for books and manages your Google Books library.
// Documentation:
//   https://developers.google.com/books/docs/v1/getting_started

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRBooks_Annotation;
@class GTLRBooks_Annotation_ClientVersionRanges;
@class GTLRBooks_Annotation_CurrentVersionRanges;
@class GTLRBooks_Annotation_LayerSummary;
@class GTLRBooks_Annotationdata;
@class GTLRBooks_AnnotationsRange;
@class GTLRBooks_AnnotationsSummary_Layers_Item;
@class GTLRBooks_Bookshelf;
@class GTLRBooks_Category_Items_Item;
@class GTLRBooks_ConcurrentAccessRestriction;
@class GTLRBooks_Dictlayerdata_Common;
@class GTLRBooks_Dictlayerdata_Dict;
@class GTLRBooks_Dictlayerdata_Dict_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source;
@class GTLRBooks_Dictlayerdata_Dict_Words_Item_Source;
@class GTLRBooks_Discoveryclusters_Clusters_Item;
@class GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer;
@class GTLRBooks_DownloadAccessRestriction;
@class GTLRBooks_FamilyInfo_Membership;
@class GTLRBooks_Geolayerdata_Common;
@class GTLRBooks_Geolayerdata_Geo;
@class GTLRBooks_Geolayerdata_Geo_Boundary_Item;
@class GTLRBooks_Geolayerdata_Geo_Viewport;
@class GTLRBooks_Geolayerdata_Geo_Viewport_Hi;
@class GTLRBooks_Geolayerdata_Geo_Viewport_Lo;
@class GTLRBooks_Layersummary;
@class GTLRBooks_Metadata_Items_Item;
@class GTLRBooks_Offers_Items_Item;
@class GTLRBooks_Offers_Items_Item_Items_Item;
@class GTLRBooks_ReadingPosition;
@class GTLRBooks_Review;
@class GTLRBooks_Review_Author;
@class GTLRBooks_Review_Source;
@class GTLRBooks_Series_Series_Item;
@class GTLRBooks_Usersettings_NotesExport;
@class GTLRBooks_Usersettings_Notification;
@class GTLRBooks_Usersettings_Notification_MatchMyInterests;
@class GTLRBooks_Usersettings_Notification_MoreFromAuthors;
@class GTLRBooks_Usersettings_Notification_MoreFromSeries;
@class GTLRBooks_Usersettings_Notification_PriceDrop;
@class GTLRBooks_Usersettings_Notification_RewardExpirations;
@class GTLRBooks_Volume;
@class GTLRBooks_Volume_AccessInfo;
@class GTLRBooks_Volume_AccessInfo_Epub;
@class GTLRBooks_Volume_AccessInfo_Pdf;
@class GTLRBooks_Volume_LayerInfo;
@class GTLRBooks_Volume_LayerInfo_Layers_Item;
@class GTLRBooks_Volume_RecommendedInfo;
@class GTLRBooks_Volume_SaleInfo;
@class GTLRBooks_Volume_SaleInfo_ListPrice;
@class GTLRBooks_Volume_SaleInfo_Offers_Item;
@class GTLRBooks_Volume_SaleInfo_Offers_Item_ListPrice;
@class GTLRBooks_Volume_SaleInfo_Offers_Item_RentalDuration;
@class GTLRBooks_Volume_SaleInfo_Offers_Item_RetailPrice;
@class GTLRBooks_Volume_SaleInfo_RetailPrice;
@class GTLRBooks_Volume_SearchInfo;
@class GTLRBooks_Volume_UserInfo;
@class GTLRBooks_Volume_UserInfo_Copy;
@class GTLRBooks_Volume_UserInfo_FamilySharing;
@class GTLRBooks_Volume_UserInfo_RentalPeriod;
@class GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo;
@class GTLRBooks_Volume_VolumeInfo;
@class GTLRBooks_Volume_VolumeInfo_Dimensions;
@class GTLRBooks_Volume_VolumeInfo_ImageLinks;
@class GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item;
@class GTLRBooks_Volume_VolumeInfo_PanelizationSummary;
@class GTLRBooks_Volumeannotation;
@class GTLRBooks_Volumeannotation_ContentRanges;
@class GTLRBooks_Volumeseriesinfo;
@class GTLRBooks_Volumeseriesinfo_VolumeSeries_Item;
@class GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRBooks_Annotation
 */
@interface GTLRBooks_Annotation : GTLRObject

/**
 *  Anchor text after excerpt. For requests, if the user bookmarked a screen
 *  that has no flowing text on it, then this field should be empty.
 */
@property(nonatomic, copy, nullable) NSString *afterSelectedText;

/**
 *  Anchor text before excerpt. For requests, if the user bookmarked a screen
 *  that has no flowing text on it, then this field should be empty.
 */
@property(nonatomic, copy, nullable) NSString *beforeSelectedText;

/** Selection ranges sent from the client. */
@property(nonatomic, strong, nullable) GTLRBooks_Annotation_ClientVersionRanges *clientVersionRanges;

/** Timestamp for the created time of this annotation. */
@property(nonatomic, strong, nullable) GTLRDateTime *created;

/** Selection ranges for the most recent content version. */
@property(nonatomic, strong, nullable) GTLRBooks_Annotation_CurrentVersionRanges *currentVersionRanges;

/** User-created data for this annotation. */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Indicates that this annotation is deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleted;

/** The highlight style for this annotation. */
@property(nonatomic, copy, nullable) NSString *highlightStyle;

/**
 *  Id of this annotation, in the form of a GUID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/** The layer this annotation is for. */
@property(nonatomic, copy, nullable) NSString *layerId;

@property(nonatomic, strong, nullable) GTLRBooks_Annotation_LayerSummary *layerSummary;

/** Pages that this annotation spans. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pageIds;

/** Excerpt from the volume. */
@property(nonatomic, copy, nullable) NSString *selectedText;

/** URL to this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Timestamp for the last time this annotation was modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/** The volume that this annotation belongs to. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  Selection ranges sent from the client.
 */
@interface GTLRBooks_Annotation_ClientVersionRanges : GTLRObject

/** Range in CFI format for this annotation sent by client. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *cfiRange;

/** Content version the client sent in. */
@property(nonatomic, copy, nullable) NSString *contentVersion;

/** Range in GB image format for this annotation sent by client. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbImageRange;

/** Range in GB text format for this annotation sent by client. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbTextRange;

/** Range in image CFI format for this annotation sent by client. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *imageCfiRange;

@end


/**
 *  Selection ranges for the most recent content version.
 */
@interface GTLRBooks_Annotation_CurrentVersionRanges : GTLRObject

/** Range in CFI format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *cfiRange;

/** Content version applicable to ranges below. */
@property(nonatomic, copy, nullable) NSString *contentVersion;

/** Range in GB image format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbImageRange;

/** Range in GB text format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbTextRange;

/** Range in image CFI format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *imageCfiRange;

@end


/**
 *  GTLRBooks_Annotation_LayerSummary
 */
@interface GTLRBooks_Annotation_LayerSummary : GTLRObject

/**
 *  Maximum allowed characters on this layer, especially for the "copy" layer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowedCharacterCount;

/**
 *  Type of limitation on this layer. "limited" or "unlimited" for the "copy"
 *  layer.
 */
@property(nonatomic, copy, nullable) NSString *limitType;

/**
 *  Remaining allowed characters on this layer, especially for the "copy" layer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remainingCharacterCount;

@end


/**
 *  GTLRBooks_Annotationdata
 */
@interface GTLRBooks_Annotationdata : GTLRObject

/** The type of annotation this data is for. */
@property(nonatomic, copy, nullable) NSString *annotationType;

/**
 *  data
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id data;

/**
 *  Base64 encoded data for this annotation data.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *encodedData;

/**
 *  Unique id for this annotation data.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Resource Type */
@property(nonatomic, copy, nullable) NSString *kind;

/** The Layer id for this data. * */
@property(nonatomic, copy, nullable) NSString *layerId;

/** URL for this resource. * */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Timestamp for the last time this data was updated. (RFC 3339 UTC date-time
 *  format).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/** The volume id for this data. * */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_Annotations
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBooks_Annotations : GTLRCollectionObject

/**
 *  A list of annotations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Annotation *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token to pass in for pagination for the next page. This will not be present
 *  if this request does not have more results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of annotations found. This may be greater than the number of
 *  notes returned in this response if results have been paginated.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  GTLRBooks_Annotationsdata
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBooks_Annotationsdata : GTLRCollectionObject

/**
 *  A list of Annotation Data.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Annotationdata *> *items;

/** Resource type */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token to pass in for pagination for the next page. This will not be present
 *  if this request does not have more results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The total number of volume annotations found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  GTLRBooks_AnnotationsRange
 */
@interface GTLRBooks_AnnotationsRange : GTLRObject

/** The offset from the ending position. */
@property(nonatomic, copy, nullable) NSString *endOffset;

/** The ending position for the range. */
@property(nonatomic, copy, nullable) NSString *endPosition;

/** The offset from the starting position. */
@property(nonatomic, copy, nullable) NSString *startOffset;

/** The starting position for the range. */
@property(nonatomic, copy, nullable) NSString *startPosition;

@end


/**
 *  GTLRBooks_AnnotationsSummary
 */
@interface GTLRBooks_AnnotationsSummary : GTLRObject

@property(nonatomic, copy, nullable) NSString *kind;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_AnnotationsSummary_Layers_Item *> *layers;

@end


/**
 *  GTLRBooks_AnnotationsSummary_Layers_Item
 */
@interface GTLRBooks_AnnotationsSummary_Layers_Item : GTLRObject

/**
 *  allowedCharacterCount
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowedCharacterCount;

@property(nonatomic, copy, nullable) NSString *layerId;
@property(nonatomic, copy, nullable) NSString *limitType;

/**
 *  remainingCharacterCount
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remainingCharacterCount;

@property(nonatomic, strong, nullable) GTLRDateTime *updated;

@end


/**
 *  GTLRBooks_Bookshelf
 */
@interface GTLRBooks_Bookshelf : GTLRObject

/** Whether this bookshelf is PUBLIC or PRIVATE. */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  Created time for this bookshelf (formatted UTC timestamp with millisecond
 *  resolution).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *created;

/**
 *  Description of this bookshelf.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Id of this bookshelf, only unique by user.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Resource type for bookshelf metadata. */
@property(nonatomic, copy, nullable) NSString *kind;

/** URL to this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Title of this bookshelf. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Last modified time of this bookshelf (formatted UTC timestamp with
 *  millisecond resolution).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/**
 *  Number of volumes in this bookshelf.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *volumeCount;

/**
 *  Last time a volume was added or removed from this bookshelf (formatted UTC
 *  timestamp with millisecond resolution).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *volumesLastUpdated;

@end


/**
 *  GTLRBooks_Bookshelves
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Bookshelves : GTLRCollectionObject

/**
 *  A list of bookshelves.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Bookshelf *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Category
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Category : GTLRCollectionObject

/**
 *  A list of onboarding categories.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Category_Items_Item *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Category_Items_Item
 */
@interface GTLRBooks_Category_Items_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *badgeUrl;
@property(nonatomic, copy, nullable) NSString *categoryId;
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRBooks_CloudloadingResource
 */
@interface GTLRBooks_CloudloadingResource : GTLRObject

@property(nonatomic, copy, nullable) NSString *author;
@property(nonatomic, copy, nullable) NSString *processingState;
@property(nonatomic, copy, nullable) NSString *title;
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_ConcurrentAccessRestriction
 */
@interface GTLRBooks_ConcurrentAccessRestriction : GTLRObject

/**
 *  Whether access is granted for this (user, device, volume).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deviceAllowed;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The maximum number of concurrent access licenses for this volume.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConcurrentDevices;

/** Error/warning message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Client nonce for verification. Download access and client-validation only.
 */
@property(nonatomic, copy, nullable) NSString *nonce;

/** Error/warning reason code. */
@property(nonatomic, copy, nullable) NSString *reasonCode;

/**
 *  Whether this volume has any concurrent access restrictions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restricted;

/** Response signature. */
@property(nonatomic, copy, nullable) NSString *signature;

/**
 *  Client app identifier for verification. Download access and
 *  client-validation only.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Time in seconds for license auto-expiration.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeWindowSeconds;

/** Identifies the volume for which this entry applies. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_Dictlayerdata
 */
@interface GTLRBooks_Dictlayerdata : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Common *common;
@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict *dict;
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Dictlayerdata_Common
 */
@interface GTLRBooks_Dictlayerdata_Common : GTLRObject

/**
 *  The display title and localized canonical name to use when searching for
 *  this entity on Google search.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict
 */
@interface GTLRBooks_Dictlayerdata_Dict : GTLRObject

/** The source, url and attribution for this dictionary data. */
@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Source *source;

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item *> *words;

@end


/**
 *  The source, url and attribution for this dictionary data.
 */
@interface GTLRBooks_Dictlayerdata_Dict_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item *> *derivatives;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item *> *examples;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item *> *senses;

/**
 *  The words with different meanings but not related words, e.g. "go" (game)
 *  and "go" (verb).
 */
@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Source *source;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source *source;
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source *source;
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item *> *conjugations;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item *> *definitions;
@property(nonatomic, copy, nullable) NSString *partOfSpeech;
@property(nonatomic, copy, nullable) NSString *pronunciation;
@property(nonatomic, copy, nullable) NSString *pronunciationUrl;
@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source *source;
@property(nonatomic, copy, nullable) NSString *syllabification;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item *> *synonyms;

@end


/**
 *  The words with different meanings but not related words, e.g. "go" (game)
 *  and "go" (verb).
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *type;
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *definition;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item *> *examples;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source *source;
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source *source;
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source
 */
@interface GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source : GTLRObject

@property(nonatomic, copy, nullable) NSString *attribution;
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Discoveryclusters
 */
@interface GTLRBooks_Discoveryclusters : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Discoveryclusters_Clusters_Item *> *clusters;

/** Resorce type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  totalClusters
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalClusters;

@end


/**
 *  GTLRBooks_Discoveryclusters_Clusters_Item
 */
@interface GTLRBooks_Discoveryclusters_Clusters_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer *bannerWithContentContainer;
@property(nonatomic, copy, nullable) NSString *subTitle;
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  totalVolumes
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalVolumes;

@property(nonatomic, copy, nullable) NSString *uid;
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume *> *volumes;

@end


/**
 *  GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer
 */
@interface GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer : GTLRObject

@property(nonatomic, copy, nullable) NSString *fillColorArgb;
@property(nonatomic, copy, nullable) NSString *imageUrl;
@property(nonatomic, copy, nullable) NSString *maskColorArgb;
@property(nonatomic, copy, nullable) NSString *moreButtonText;
@property(nonatomic, copy, nullable) NSString *moreButtonUrl;
@property(nonatomic, copy, nullable) NSString *textColorArgb;

@end


/**
 *  GTLRBooks_DownloadAccesses
 */
@interface GTLRBooks_DownloadAccesses : GTLRObject

/** A list of download access responses. */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_DownloadAccessRestriction *> *downloadAccessList;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_DownloadAccessRestriction
 */
@interface GTLRBooks_DownloadAccessRestriction : GTLRObject

/**
 *  If restricted, whether access is granted for this (user, device, volume).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deviceAllowed;

/**
 *  If restricted, the number of content download licenses already acquired
 *  (including the requesting client, if licensed).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *downloadsAcquired;

/**
 *  If deviceAllowed, whether access was just acquired with this request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *justAcquired;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  If restricted, the maximum number of content download licenses for this
 *  volume.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDownloadDevices;

/** Error/warning message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Client nonce for verification. Download access and client-validation only.
 */
@property(nonatomic, copy, nullable) NSString *nonce;

/**
 *  Error/warning reason code. Additional codes may be added in the future. 0 OK
 *  100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200
 *  WARNING_USED_LAST_ACCESS
 */
@property(nonatomic, copy, nullable) NSString *reasonCode;

/**
 *  Whether this volume has any download access restrictions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restricted;

/** Response signature. */
@property(nonatomic, copy, nullable) NSString *signature;

/**
 *  Client app identifier for verification. Download access and
 *  client-validation only.
 */
@property(nonatomic, copy, nullable) NSString *source;

/** Identifies the volume for which this entry applies. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_FamilyInfo
 */
@interface GTLRBooks_FamilyInfo : GTLRObject

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Family membership info of the user that made the request. */
@property(nonatomic, strong, nullable) GTLRBooks_FamilyInfo_Membership *membership;

@end


/**
 *  Family membership info of the user that made the request.
 */
@interface GTLRBooks_FamilyInfo_Membership : GTLRObject

/** Restrictions on user buying and acquiring content. */
@property(nonatomic, copy, nullable) NSString *acquirePermission;

/** The age group of the user. */
@property(nonatomic, copy, nullable) NSString *ageGroup;

/** The maximum allowed maturity rating for the user. */
@property(nonatomic, copy, nullable) NSString *allowedMaturityRating;

/**
 *  isInFamily
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInFamily;

/** The role of the user in the family. */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  GTLRBooks_Geolayerdata
 */
@interface GTLRBooks_Geolayerdata : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Geolayerdata_Common *common;
@property(nonatomic, strong, nullable) GTLRBooks_Geolayerdata_Geo *geo;
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Geolayerdata_Common
 */
@interface GTLRBooks_Geolayerdata_Common : GTLRObject

/** The language of the information url and description. */
@property(nonatomic, copy, nullable) NSString *lang;

/** The URL for the preview image information. */
@property(nonatomic, copy, nullable) NSString *previewImageUrl;

/** The description for this location. */
@property(nonatomic, copy, nullable) NSString *snippet;

/** The URL for information for this location. Ex: wikipedia link. */
@property(nonatomic, copy, nullable) NSString *snippetUrl;

/**
 *  The display title and localized canonical name to use when searching for
 *  this entity on Google search.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRBooks_Geolayerdata_Geo
 */
@interface GTLRBooks_Geolayerdata_Geo : GTLRObject

/**
 *  The boundary of the location as a set of loops containing pairs of latitude,
 *  longitude coordinates.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray<GTLRBooks_Geolayerdata_Geo_Boundary_Item *> *> *boundary;

/**
 *  The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER
 */
@property(nonatomic, copy, nullable) NSString *cachePolicy;

/** The country code of the location. */
@property(nonatomic, copy, nullable) NSString *countryCode;

/**
 *  The latitude of the location.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  The longitude of the location.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

/**
 *  The type of map that should be used for this location. EX: HYBRID, ROADMAP,
 *  SATELLITE, TERRAIN
 */
@property(nonatomic, copy, nullable) NSString *mapType;

/**
 *  The viewport for showing this location. This is a latitude, longitude
 *  rectangle.
 */
@property(nonatomic, strong, nullable) GTLRBooks_Geolayerdata_Geo_Viewport *viewport;

/**
 *  The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom
 *  level, in which the entire world can be seen on one map) to 21+ (down to
 *  individual buildings). See:
 *  https://developers.google.com/maps/documentation/staticmaps/#Zoomlevels
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *zoom;

@end


/**
 *  GTLRBooks_Geolayerdata_Geo_Boundary_Item
 */
@interface GTLRBooks_Geolayerdata_Geo_Boundary_Item : GTLRObject

/**
 *  latitude
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  longitude
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  The viewport for showing this location. This is a latitude, longitude
 *  rectangle.
 */
@interface GTLRBooks_Geolayerdata_Geo_Viewport : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Geolayerdata_Geo_Viewport_Hi *hi;
@property(nonatomic, strong, nullable) GTLRBooks_Geolayerdata_Geo_Viewport_Lo *lo;

@end


/**
 *  GTLRBooks_Geolayerdata_Geo_Viewport_Hi
 */
@interface GTLRBooks_Geolayerdata_Geo_Viewport_Hi : GTLRObject

/**
 *  latitude
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  longitude
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  GTLRBooks_Geolayerdata_Geo_Viewport_Lo
 */
@interface GTLRBooks_Geolayerdata_Geo_Viewport_Lo : GTLRObject

/**
 *  latitude
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  longitude
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  GTLRBooks_Layersummaries
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Layersummaries : GTLRCollectionObject

/**
 *  A list of layer summary items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Layersummary *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The total number of layer summaries found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  GTLRBooks_Layersummary
 */
@interface GTLRBooks_Layersummary : GTLRObject

/**
 *  The number of annotations for this layer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *annotationCount;

/** Link to get data for this annotation. */
@property(nonatomic, copy, nullable) NSString *annotationsDataLink;

/** The link to get the annotations for this layer. */
@property(nonatomic, copy, nullable) NSString *annotationsLink;

/** The list of annotation types contained for this layer. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *annotationTypes;

/** The content version this resource is for. */
@property(nonatomic, copy, nullable) NSString *contentVersion;

/**
 *  The number of data items for this layer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataCount;

/**
 *  Unique id of this layer summary.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Resource Type */
@property(nonatomic, copy, nullable) NSString *kind;

/** The layer id for this summary. */
@property(nonatomic, copy, nullable) NSString *layerId;

/** URL to this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC
 *  date-time format).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/**
 *  The current version of this layer's volume annotations. Note that this
 *  version applies only to the data in the books.layers.volumeAnnotations.*
 *  responses. The actual annotation data is versioned separately.
 */
@property(nonatomic, copy, nullable) NSString *volumeAnnotationsVersion;

/** The volume id this resource is for. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_Metadata
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Metadata : GTLRCollectionObject

/**
 *  A list of offline dictionary metadata.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Metadata_Items_Item *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Metadata_Items_Item
 */
@interface GTLRBooks_Metadata_Items_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *downloadUrl;
@property(nonatomic, copy, nullable) NSString *encryptedKey;
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  size
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  version
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  GTLRBooks_Notification
 */
@interface GTLRBooks_Notification : GTLRObject

@property(nonatomic, copy, nullable) NSString *body;

/**
 *  The list of crm experiment ids.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *crmExperimentIds;

@property(nonatomic, copy, nullable) NSString *docId;
@property(nonatomic, copy, nullable) NSString *docType;

/**
 *  dontShowNotification
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dontShowNotification;

@property(nonatomic, copy, nullable) NSString *iconUrl;

/**
 *  isDocumentMature
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDocumentMature;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *notificationType;
@property(nonatomic, copy, nullable) NSString *notificationGroup;
@property(nonatomic, copy, nullable) NSString *pcampaignId;
@property(nonatomic, copy, nullable) NSString *reason;

/**
 *  showNotificationSettingsAction
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *showNotificationSettingsAction;

@property(nonatomic, copy, nullable) NSString *targetUrl;
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRBooks_Offers
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Offers : GTLRCollectionObject

/**
 *  A list of offers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Offers_Items_Item *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Offers_Items_Item
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Offers_Items_Item : GTLRCollectionObject

@property(nonatomic, copy, nullable) NSString *artUrl;
@property(nonatomic, copy, nullable) NSString *gservicesKey;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  items
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Offers_Items_Item_Items_Item *> *items;

@end


/**
 *  GTLRBooks_Offers_Items_Item_Items_Item
 */
@interface GTLRBooks_Offers_Items_Item_Items_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *author;
@property(nonatomic, copy, nullable) NSString *canonicalVolumeLink;
@property(nonatomic, copy, nullable) NSString *coverUrl;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@property(nonatomic, copy, nullable) NSString *title;
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_ReadingPosition
 */
@interface GTLRBooks_ReadingPosition : GTLRObject

/** Position in an EPUB as a CFI. */
@property(nonatomic, copy, nullable) NSString *epubCfiPosition;

/** Position in a volume for image-based content. */
@property(nonatomic, copy, nullable) NSString *gbImagePosition;

/** Position in a volume for text-based content. */
@property(nonatomic, copy, nullable) NSString *gbTextPosition;

/** Resource type for a reading position. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Position in a PDF file. */
@property(nonatomic, copy, nullable) NSString *pdfPosition;

/**
 *  Timestamp when this reading position was last updated (formatted UTC
 *  timestamp with millisecond resolution).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/** Volume id associated with this reading position. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  GTLRBooks_RequestAccess
 */
@interface GTLRBooks_RequestAccess : GTLRObject

/** A concurrent access response. */
@property(nonatomic, strong, nullable) GTLRBooks_ConcurrentAccessRestriction *concurrentAccess;

/** A download access response. */
@property(nonatomic, strong, nullable) GTLRBooks_DownloadAccessRestriction *downloadAccess;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRBooks_Review
 */
@interface GTLRBooks_Review : GTLRObject

/** Author of this review. */
@property(nonatomic, strong, nullable) GTLRBooks_Review_Author *author;

/** Review text. */
@property(nonatomic, copy, nullable) NSString *content;

/** Date of this review. */
@property(nonatomic, copy, nullable) NSString *date;

/** URL for the full review text, for reviews gathered from the web. */
@property(nonatomic, copy, nullable) NSString *fullTextUrl;

/** Resource type for a review. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE
 *  or NOT_RATED.
 */
@property(nonatomic, copy, nullable) NSString *rating;

/**
 *  Information regarding the source of this review, when the review is not from
 *  a Google Books user.
 */
@property(nonatomic, strong, nullable) GTLRBooks_Review_Source *source;

/** Title for this review. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Source type for this review. Possible values are EDITORIAL, WEB_USER or
 *  GOOGLE_USER.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Volume that this review is for. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  Author of this review.
 */
@interface GTLRBooks_Review_Author : GTLRObject

/** Name of this person. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Information regarding the source of this review, when the review is not from
 *  a Google Books user.
 */
@interface GTLRBooks_Review_Source : GTLRObject

/**
 *  Name of the source.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Extra text about the source of the review. */
@property(nonatomic, copy, nullable) NSString *extraDescription;

/** URL of the source of the review. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRBooks_Series
 */
@interface GTLRBooks_Series : GTLRObject

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Series_Series_Item *> *series;

@end


/**
 *  GTLRBooks_Series_Series_Item
 */
@interface GTLRBooks_Series_Series_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *bannerImageUrl;
@property(nonatomic, copy, nullable) NSString *imageUrl;
@property(nonatomic, copy, nullable) NSString *seriesId;
@property(nonatomic, copy, nullable) NSString *seriesType;
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRBooks_Seriesmembership
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "member" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBooks_Seriesmembership : GTLRCollectionObject

/** Resorce type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  member
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume *> *member;

@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRBooks_Usersettings
 */
@interface GTLRBooks_Usersettings : GTLRObject

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/** User settings in sub-objects, each for different purposes. */
@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_NotesExport *notesExport;

@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification *notification;

@end


/**
 *  User settings in sub-objects, each for different purposes.
 */
@interface GTLRBooks_Usersettings_NotesExport : GTLRObject

@property(nonatomic, copy, nullable) NSString *folderName;

/**
 *  isEnabled
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isEnabled;

@end


/**
 *  GTLRBooks_Usersettings_Notification
 */
@interface GTLRBooks_Usersettings_Notification : GTLRObject

@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification_MatchMyInterests *matchMyInterests;
@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification_MoreFromAuthors *moreFromAuthors;
@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification_MoreFromSeries *moreFromSeries;
@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification_PriceDrop *priceDrop;
@property(nonatomic, strong, nullable) GTLRBooks_Usersettings_Notification_RewardExpirations *rewardExpirations;

@end


/**
 *  GTLRBooks_Usersettings_Notification_MatchMyInterests
 */
@interface GTLRBooks_Usersettings_Notification_MatchMyInterests : GTLRObject

@property(nonatomic, copy, nullable) NSString *optedState;

@end


/**
 *  GTLRBooks_Usersettings_Notification_MoreFromAuthors
 */
@interface GTLRBooks_Usersettings_Notification_MoreFromAuthors : GTLRObject

@property(nonatomic, copy, nullable) NSString *optedState;

@end


/**
 *  GTLRBooks_Usersettings_Notification_MoreFromSeries
 */
@interface GTLRBooks_Usersettings_Notification_MoreFromSeries : GTLRObject

@property(nonatomic, copy, nullable) NSString *optedState;

@end


/**
 *  GTLRBooks_Usersettings_Notification_PriceDrop
 */
@interface GTLRBooks_Usersettings_Notification_PriceDrop : GTLRObject

@property(nonatomic, copy, nullable) NSString *optedState;

@end


/**
 *  GTLRBooks_Usersettings_Notification_RewardExpirations
 */
@interface GTLRBooks_Usersettings_Notification_RewardExpirations : GTLRObject

@property(nonatomic, copy, nullable) NSString *optedState;

@end


/**
 *  GTLRBooks_Volume
 */
@interface GTLRBooks_Volume : GTLRObject

/**
 *  Any information about a volume related to reading or obtaining that volume
 *  text. This information can depend on country (books may be public domain in
 *  one country but not in another, e.g.).
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_AccessInfo *accessInfo;

/**
 *  Opaque identifier for a specific version of a volume resource. (In LITE
 *  projection)
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Unique identifier for a volume. (In LITE projection.)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Resource type for a volume. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *kind;

/** What layers exist in this volume and high level information about them. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_LayerInfo *layerInfo;

/** Recommendation related information for this volume. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_RecommendedInfo *recommendedInfo;

/**
 *  Any information about a volume related to the eBookstore and/or
 *  purchaseability. This information can depend on the country where the
 *  request originates from (i.e. books may not be for sale in certain
 *  countries).
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo *saleInfo;

/** Search result information related to this volume. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SearchInfo *searchInfo;

/** URL to this resource. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  User specific information related to this volume. (e.g. page this user last
 *  read or whether they purchased this book)
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_UserInfo *userInfo;

/** General volume information. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_VolumeInfo *volumeInfo;

@end


/**
 *  Any information about a volume related to reading or obtaining that volume
 *  text. This information can depend on country (books may be public domain in
 *  one country but not in another, e.g.).
 */
@interface GTLRBooks_Volume_AccessInfo : GTLRObject

/**
 *  Combines the access and viewability of this volume into a single status
 *  field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,
 *  SAMPLE or NONE. (In LITE projection.)
 */
@property(nonatomic, copy, nullable) NSString *accessViewStatus;

/**
 *  The two-letter ISO_3166-1 country code for which this access information is
 *  valid. (In LITE projection.)
 */
@property(nonatomic, copy, nullable) NSString *country;

/** Information about a volume's download license access restrictions. */
@property(nonatomic, strong, nullable) GTLRBooks_DownloadAccessRestriction *downloadAccess;

/**
 *  URL to the Google Drive viewer if this volume is uploaded by the user by
 *  selecting the file from Google Drive.
 */
@property(nonatomic, copy, nullable) NSString *driveImportedContentLink;

/**
 *  Whether this volume can be embedded in a viewport using the Embedded Viewer
 *  API.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *embeddable;

/** Information about epub content. (In LITE projection.) */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_AccessInfo_Epub *epub;

/**
 *  Whether this volume requires that the client explicitly request offline
 *  download license rather than have it done automatically when loading the
 *  content, if the client supports it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *explicitOfflineLicenseManagement;

/** Information about pdf content. (In LITE projection.) */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_AccessInfo_Pdf *pdf;

/**
 *  Whether or not this book is public domain in the country listed above.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *publicDomain;

/**
 *  Whether quote sharing is allowed for this volume.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quoteSharingAllowed;

/**
 *  Whether text-to-speech is permitted for this volume. Values can be ALLOWED,
 *  ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
 */
@property(nonatomic, copy, nullable) NSString *textToSpeechPermission;

/**
 *  The read access of a volume. Possible values are PARTIAL, ALL_PAGES,
 *  NO_PAGES or UNKNOWN. This value depends on the country listed above. A value
 *  of PARTIAL means that the publisher has allowed some portion of the volume
 *  to be viewed publicly, without purchase. This can apply to eBooks as well as
 *  non-eBooks. Public domain books will always have a value of ALL_PAGES.
 */
@property(nonatomic, copy, nullable) NSString *viewability;

/**
 *  For ordered but not yet processed orders, we give a URL that can be used to
 *  go to the appropriate Google Wallet page.
 */
@property(nonatomic, copy, nullable) NSString *viewOrderUrl;

/**
 *  URL to read this volume on the Google Books site. Link will not allow users
 *  to read non-viewable volumes.
 */
@property(nonatomic, copy, nullable) NSString *webReaderLink;

@end


/**
 *  What layers exist in this volume and high level information about them.
 */
@interface GTLRBooks_Volume_LayerInfo : GTLRObject

/**
 *  A layer should appear here if and only if the layer exists for this book.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume_LayerInfo_Layers_Item *> *layers;

@end


/**
 *  Recommendation related information for this volume.
 */
@interface GTLRBooks_Volume_RecommendedInfo : GTLRObject

/** A text explaining why this volume is recommended. */
@property(nonatomic, copy, nullable) NSString *explanation;

@end


/**
 *  Any information about a volume related to the eBookstore and/or
 *  purchaseability. This information can depend on the country where the
 *  request originates from (i.e. books may not be for sale in certain
 *  countries).
 */
@interface GTLRBooks_Volume_SaleInfo : GTLRObject

/**
 *  URL to purchase this volume on the Google Books site. (In LITE projection)
 */
@property(nonatomic, copy, nullable) NSString *buyLink;

/**
 *  The two-letter ISO_3166-1 country code for which this sale information is
 *  valid. (In LITE projection.)
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Whether or not this volume is an eBook (can be added to the My eBooks
 *  shelf).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isEbook;

/** Suggested retail price. (In LITE projection.) */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo_ListPrice *listPrice;

/** Offers available for this volume (sales and rentals). */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume_SaleInfo_Offers_Item *> *offers;

/** The date on which this book is available for sale. */
@property(nonatomic, strong, nullable) GTLRDateTime *onSaleDate;

/**
 *  The actual selling price of the book. This is the same as the suggested
 *  retail or list price unless there are offers or discounts on this volume.
 *  (In LITE projection.)
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo_RetailPrice *retailPrice;

/**
 *  Whether or not this book is available for sale or offered for free in the
 *  Google eBookstore for the country listed above. Possible values are
 *  FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or
 *  FOR_PREORDER.
 */
@property(nonatomic, copy, nullable) NSString *saleability;

@end


/**
 *  Search result information related to this volume.
 */
@interface GTLRBooks_Volume_SearchInfo : GTLRObject

/** A text snippet containing the search query. */
@property(nonatomic, copy, nullable) NSString *textSnippet;

@end


/**
 *  User specific information related to this volume. (e.g. page this user last
 *  read or whether they purchased this book)
 */
@interface GTLRBooks_Volume_UserInfo : GTLRObject

/**
 *  Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time
 *  format) Acquiring includes purchase, user upload, receiving family sharing,
 *  etc.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *acquiredTime;

/**
 *  How this volume was acquired.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acquisitionType;

/**
 *  Copy/Paste accounting information.
 *
 *  Remapped to 'copyProperty' to avoid NSObject's 'copy'.
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_UserInfo_Copy *copyProperty NS_RETURNS_NOT_RETAINED;

/**
 *  Whether this volume is purchased, sample, pd download etc.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *entitlementType;

/** Information on the ability to share with the family. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_UserInfo_FamilySharing *familySharing;

/**
 *  Whether or not the user shared this volume with the family.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFamilySharedFromUser;

/**
 *  Whether or not the user received this volume through family sharing.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFamilySharedToUser;

/**
 *  Deprecated: Replaced by familySharing.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFamilySharingAllowed;

/**
 *  Deprecated: Replaced by familySharing.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFamilySharingDisabledByFop;

/**
 *  Whether or not this volume is currently in "my books."
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInMyBooks;

/**
 *  Whether or not this volume was pre-ordered by the authenticated user making
 *  the request. (In LITE projection.)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPreordered;

/**
 *  Whether or not this volume was purchased by the authenticated user making
 *  the request. (In LITE projection.)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPurchased;

/**
 *  Whether or not this volume was user uploaded.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isUploaded;

/**
 *  The user's current reading position in the volume, if one is available. (In
 *  LITE projection.)
 */
@property(nonatomic, strong, nullable) GTLRBooks_ReadingPosition *readingPosition;

/** Period during this book is/was a valid rental. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_UserInfo_RentalPeriod *rentalPeriod;

/** Whether this book is an active or an expired rental. */
@property(nonatomic, copy, nullable) NSString *rentalState;

/** This user's review of this volume, if one exists. */
@property(nonatomic, strong, nullable) GTLRBooks_Review *review;

/**
 *  Timestamp when this volume was last modified by a user action, such as a
 *  reading position update, volume purchase or writing a review. (RFC 3339 UTC
 *  date-time format).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

@property(nonatomic, strong, nullable) GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo *userUploadedVolumeInfo;

@end


/**
 *  General volume information.
 */
@interface GTLRBooks_Volume_VolumeInfo : GTLRObject

/**
 *  Whether anonymous logging should be allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowAnonLogging;

/**
 *  The names of the authors and/or editors for this volume. (In LITE
 *  projection)
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *authors;

/**
 *  The mean review rating for this volume. (min = 1.0, max = 5.0)
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *averageRating;

/** Canonical URL for a volume. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *canonicalVolumeLink;

/** A list of subject categories, such as "Fiction", "Suspense", etc. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/**
 *  Whether the volume has comics content.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *comicsContent;

/**
 *  An identifier for the version of the volume content (text & images). (In
 *  LITE projection)
 */
@property(nonatomic, copy, nullable) NSString *contentVersion;

/**
 *  A synopsis of the volume. The text of the description is formatted in HTML
 *  and includes simple formatting elements, such as b, i, and br tags. (In LITE
 *  projection.)
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Physical dimensions of this volume. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_VolumeInfo_Dimensions *dimensions;

/**
 *  A list of image links for all the sizes that are available. (In LITE
 *  projection.)
 */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_VolumeInfo_ImageLinks *imageLinks;

/** Industry standard identifiers for this volume. */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item *> *industryIdentifiers;

/**
 *  URL to view information about this volume on the Google Books site. (In LITE
 *  projection)
 */
@property(nonatomic, copy, nullable) NSString *infoLink;

/**
 *  Best language for this volume (based on content). It is the two-letter ISO
 *  639-1 code such as 'fr', 'en', etc.
 */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  The main category to which this volume belongs. It will be the category from
 *  the categories list returned below that has the highest weight.
 */
@property(nonatomic, copy, nullable) NSString *mainCategory;

@property(nonatomic, copy, nullable) NSString *maturityRating;

/**
 *  Total number of pages as per publisher metadata.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageCount;

/** A top-level summary of the panelization info in this volume. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_VolumeInfo_PanelizationSummary *panelizationSummary;

/** URL to preview this volume on the Google Books site. */
@property(nonatomic, copy, nullable) NSString *previewLink;

/**
 *  Total number of printed pages in generated pdf representation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *printedPageCount;

/**
 *  Type of publication of this volume. Possible values are BOOK or MAGAZINE.
 */
@property(nonatomic, copy, nullable) NSString *printType;

/** Date of publication. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *publishedDate;

/** Publisher of this volume. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *publisher;

/**
 *  The number of review ratings for this volume.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratingsCount;

/**
 *  The reading modes available for this volume.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id readingModes;

/**
 *  Total number of sample pages as per publisher metadata.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *samplePageCount;

@property(nonatomic, strong, nullable) GTLRBooks_Volumeseriesinfo *seriesInfo;

/** Volume subtitle. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Volume title. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Information about epub content. (In LITE projection.)
 */
@interface GTLRBooks_Volume_AccessInfo_Epub : GTLRObject

/** URL to retrieve ACS token for epub download. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *acsTokenLink;

/** URL to download epub. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *downloadLink;

/**
 *  Is a flowing text epub available either as public domain or for purchase.
 *  (In LITE projection.)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAvailable;

@end


/**
 *  Information about pdf content. (In LITE projection.)
 */
@interface GTLRBooks_Volume_AccessInfo_Pdf : GTLRObject

/** URL to retrieve ACS token for pdf download. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *acsTokenLink;

/** URL to download pdf. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *downloadLink;

/**
 *  Is a scanned image pdf available either as public domain or for purchase.
 *  (In LITE projection.)
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAvailable;

@end


/**
 *  GTLRBooks_Volume_LayerInfo_Layers_Item
 */
@interface GTLRBooks_Volume_LayerInfo_Layers_Item : GTLRObject

/** The layer id of this layer (e.g. "geo"). */
@property(nonatomic, copy, nullable) NSString *layerId;

/**
 *  The current version of this layer's volume annotations. Note that this
 *  version applies only to the data in the books.layers.volumeAnnotations.*
 *  responses. The actual annotation data is versioned separately.
 */
@property(nonatomic, copy, nullable) NSString *volumeAnnotationsVersion;

@end


/**
 *  Suggested retail price. (In LITE projection.)
 */
@interface GTLRBooks_Volume_SaleInfo_ListPrice : GTLRObject

/**
 *  Amount in the currency listed below. (In LITE projection.)
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amount;

/** An ISO 4217, three-letter currency code. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  GTLRBooks_Volume_SaleInfo_Offers_Item
 */
@interface GTLRBooks_Volume_SaleInfo_Offers_Item : GTLRObject

/**
 *  The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *finskyOfferType;

/**
 *  Indicates whether the offer is giftable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *giftable;

/** Offer list (=undiscounted) price in Micros. */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo_Offers_Item_ListPrice *listPrice;

/** The rental duration (for rental offers only). */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo_Offers_Item_RentalDuration *rentalDuration;

/** Offer retail (=discounted) price in Micros */
@property(nonatomic, strong, nullable) GTLRBooks_Volume_SaleInfo_Offers_Item_RetailPrice *retailPrice;

@end


/**
 *  The actual selling price of the book. This is the same as the suggested
 *  retail or list price unless there are offers or discounts on this volume.
 *  (In LITE projection.)
 */
@interface GTLRBooks_Volume_SaleInfo_RetailPrice : GTLRObject

/**
 *  Amount in the currency listed below. (In LITE projection.)
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amount;

/** An ISO 4217, three-letter currency code. (In LITE projection.) */
@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  Copy/Paste accounting information.
 */
@interface GTLRBooks_Volume_UserInfo_Copy : GTLRObject

/**
 *  allowedCharacterCount
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowedCharacterCount;

@property(nonatomic, copy, nullable) NSString *limitType;

/**
 *  remainingCharacterCount
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remainingCharacterCount;

@property(nonatomic, strong, nullable) GTLRDateTime *updated;

@end


/**
 *  Information on the ability to share with the family.
 */
@interface GTLRBooks_Volume_UserInfo_FamilySharing : GTLRObject

/** The role of the user in the family. */
@property(nonatomic, copy, nullable) NSString *familyRole;

/**
 *  Whether or not this volume can be shared with the family by the user. This
 *  includes sharing eligibility of both the volume and the user. If the value
 *  is true, the user can initiate a family sharing action.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSharingAllowed;

/**
 *  Whether or not sharing this volume is temporarily disabled due to issues
 *  with the Family Wallet.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSharingDisabledByFop;

@end


/**
 *  Period during this book is/was a valid rental.
 */
@interface GTLRBooks_Volume_UserInfo_RentalPeriod : GTLRObject

/**
 *  endUtcSec
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endUtcSec;

/**
 *  startUtcSec
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startUtcSec;

@end


/**
 *  GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo
 */
@interface GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo : GTLRObject

@property(nonatomic, copy, nullable) NSString *processingState;

@end


/**
 *  Physical dimensions of this volume.
 */
@interface GTLRBooks_Volume_VolumeInfo_Dimensions : GTLRObject

/** Height or length of this volume (in cm). */
@property(nonatomic, copy, nullable) NSString *height;

/** Thickness of this volume (in cm). */
@property(nonatomic, copy, nullable) NSString *thickness;

/** Width of this volume (in cm). */
@property(nonatomic, copy, nullable) NSString *width;

@end


/**
 *  A list of image links for all the sizes that are available. (In LITE
 *  projection.)
 */
@interface GTLRBooks_Volume_VolumeInfo_ImageLinks : GTLRObject

/**
 *  Image link for extra large size (width of ~1280 pixels). (In LITE
 *  projection)
 */
@property(nonatomic, copy, nullable) NSString *extraLarge;

/** Image link for large size (width of ~800 pixels). (In LITE projection) */
@property(nonatomic, copy, nullable) NSString *large;

/** Image link for medium size (width of ~575 pixels). (In LITE projection) */
@property(nonatomic, copy, nullable) NSString *medium;

/** Image link for small size (width of ~300 pixels). (In LITE projection) */
@property(nonatomic, copy, nullable) NSString *small;

/**
 *  Image link for small thumbnail size (width of ~80 pixels). (In LITE
 *  projection)
 */
@property(nonatomic, copy, nullable) NSString *smallThumbnail;

/**
 *  Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
 */
@property(nonatomic, copy, nullable) NSString *thumbnail;

@end


/**
 *  GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item
 */
@interface GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item : GTLRObject

/**
 *  Industry specific volume identifier.
 *
 *  identifierProperty property maps to 'identifier' in the JSON ('identifier'
 *  is reserved for remapping 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifierProperty;

/** Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A top-level summary of the panelization info in this volume.
 */
@interface GTLRBooks_Volume_VolumeInfo_PanelizationSummary : GTLRObject

/**
 *  containsEpubBubbles
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containsEpubBubbles;

/**
 *  containsImageBubbles
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containsImageBubbles;

@property(nonatomic, copy, nullable) NSString *epubBubbleVersion;
@property(nonatomic, copy, nullable) NSString *imageBubbleVersion;

@end


/**
 *  Offer list (=undiscounted) price in Micros.
 */
@interface GTLRBooks_Volume_SaleInfo_Offers_Item_ListPrice : GTLRObject

/**
 *  amountInMicros
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amountInMicros;

@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  The rental duration (for rental offers only).
 */
@interface GTLRBooks_Volume_SaleInfo_Offers_Item_RentalDuration : GTLRObject

/**
 *  count
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  Offer retail (=discounted) price in Micros
 */
@interface GTLRBooks_Volume_SaleInfo_Offers_Item_RetailPrice : GTLRObject

/**
 *  amountInMicros
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amountInMicros;

@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  GTLRBooks_Volume2
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBooks_Volume2 : GTLRCollectionObject

/**
 *  A list of volumes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRBooks_Volumeannotation
 */
@interface GTLRBooks_Volumeannotation : GTLRObject

/** The annotation data id for this volume annotation. */
@property(nonatomic, copy, nullable) NSString *annotationDataId;

/** Link to get data for this annotation. */
@property(nonatomic, copy, nullable) NSString *annotationDataLink;

/** The type of annotation this is. */
@property(nonatomic, copy, nullable) NSString *annotationType;

/** The content ranges to identify the selected text. */
@property(nonatomic, strong, nullable) GTLRBooks_Volumeannotation_ContentRanges *contentRanges;

/** Data for this annotation. */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Indicates that this annotation is deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleted;

/**
 *  Unique id of this volume annotation.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Resource Type */
@property(nonatomic, copy, nullable) NSString *kind;

/** The Layer this annotation is for. */
@property(nonatomic, copy, nullable) NSString *layerId;

/** Pages the annotation spans. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pageIds;

/** Excerpt from the volume. */
@property(nonatomic, copy, nullable) NSString *selectedText;

/** URL to this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Timestamp for the last time this anntoation was updated. (RFC 3339 UTC
 *  date-time format).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/** The Volume this annotation is for. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  The content ranges to identify the selected text.
 */
@interface GTLRBooks_Volumeannotation_ContentRanges : GTLRObject

/** Range in CFI format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *cfiRange;

/** Content version applicable to ranges below. */
@property(nonatomic, copy, nullable) NSString *contentVersion;

/** Range in GB image format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbImageRange;

/** Range in GB text format for this annotation for version above. */
@property(nonatomic, strong, nullable) GTLRBooks_AnnotationsRange *gbTextRange;

@end


/**
 *  GTLRBooks_Volumeannotations
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBooks_Volumeannotations : GTLRCollectionObject

/**
 *  A list of volume annotations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volumeannotation *> *items;

/** Resource type */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token to pass in for pagination for the next page. This will not be present
 *  if this request does not have more results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The total number of volume annotations found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

/**
 *  The version string for all of the volume annotations in this layer (not just
 *  the ones in this response). Note: the version string doesn't apply to the
 *  annotation data, just the information in this response (e.g. the location of
 *  annotations in the book).
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  GTLRBooks_Volumes
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRBooks_Volumes : GTLRCollectionObject

/**
 *  A list of volumes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volume *> *items;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Total number of volumes found. This might be greater than the number of
 *  volumes returned in this response if results have been paginated.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  GTLRBooks_Volumeseriesinfo
 */
@interface GTLRBooks_Volumeseriesinfo : GTLRObject

/**
 *  The display number string. This should be used only for display purposes and
 *  the actual sequence should be inferred from the below orderNumber.
 */
@property(nonatomic, copy, nullable) NSString *bookDisplayNumber;

/** Resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Short book title in the context of the series. */
@property(nonatomic, copy, nullable) NSString *shortSeriesBookTitle;

@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volumeseriesinfo_VolumeSeries_Item *> *volumeSeries;

@end


/**
 *  GTLRBooks_Volumeseriesinfo_VolumeSeries_Item
 */
@interface GTLRBooks_Volumeseriesinfo_VolumeSeries_Item : GTLRObject

/** List of issues. Applicable only for Collection Edition and Omnibus. */
@property(nonatomic, strong, nullable) NSArray<GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item *> *issue;

/**
 *  The book order number in the series.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderNumber;

/**
 *  The book type in the context of series. Examples - Single Issue, Collection
 *  Edition, etc.
 */
@property(nonatomic, copy, nullable) NSString *seriesBookType;

/** The series id. */
@property(nonatomic, copy, nullable) NSString *seriesId;

@end


/**
 *  GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item
 */
@interface GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item : GTLRObject

@property(nonatomic, copy, nullable) NSString *issueDisplayNumber;

/**
 *  issueOrderNumber
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *issueOrderNumber;

@end


/**
 *  GTLRBooks_VolumesRecommendedRateResponse
 */
@interface GTLRBooks_VolumesRecommendedRateResponse : GTLRObject

@property(nonatomic, copy, nullable) NSString *consistencyToken;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
