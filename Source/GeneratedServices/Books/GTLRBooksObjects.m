// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Books API (books/v1)
// Description:
//   Searches for books and manages your Google Books library.
// Documentation:
//   https://developers.google.com/books/docs/v1/getting_started

#import "GTLRBooksObjects.h"

// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotation
//

@implementation GTLRBooks_Annotation
@dynamic afterSelectedText, beforeSelectedText, clientVersionRanges, created,
         currentVersionRanges, data, deleted, highlightStyle, identifier, kind,
         layerId, layerSummary, pageIds, selectedText, selfLink, updated,
         volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pageIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotation_ClientVersionRanges
//

@implementation GTLRBooks_Annotation_ClientVersionRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange, imageCfiRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotation_CurrentVersionRanges
//

@implementation GTLRBooks_Annotation_CurrentVersionRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange, imageCfiRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotation_LayerSummary
//

@implementation GTLRBooks_Annotation_LayerSummary
@dynamic allowedCharacterCount, limitType, remainingCharacterCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotationdata
//

@implementation GTLRBooks_Annotationdata
@dynamic annotationType, data, encodedData, identifier, kind, layerId, selfLink,
         updated, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"encodedData" : @"encoded_data",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotations
//

@implementation GTLRBooks_Annotations
@dynamic items, kind, nextPageToken, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Annotation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotationsdata
//

@implementation GTLRBooks_Annotationsdata
@dynamic items, kind, nextPageToken, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Annotationdata class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsRange
//

@implementation GTLRBooks_AnnotationsRange
@dynamic endOffset, endPosition, startOffset, startPosition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsSummary
//

@implementation GTLRBooks_AnnotationsSummary
@dynamic kind, layers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layers" : [GTLRBooks_AnnotationsSummary_Layers_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsSummary_Layers_Item
//

@implementation GTLRBooks_AnnotationsSummary_Layers_Item
@dynamic allowedCharacterCount, layerId, limitType, remainingCharacterCount,
         updated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Bookshelf
//

@implementation GTLRBooks_Bookshelf
@dynamic access, created, descriptionProperty, identifier, kind, selfLink,
         title, updated, volumeCount, volumesLastUpdated;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Bookshelves
//

@implementation GTLRBooks_Bookshelves
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Bookshelf class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Category
//

@implementation GTLRBooks_Category
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Category_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Category_Items_Item
//

@implementation GTLRBooks_Category_Items_Item
@dynamic badgeUrl, categoryId, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_CloudloadingResource
//

@implementation GTLRBooks_CloudloadingResource
@dynamic author, processingState, title, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ConcurrentAccessRestriction
//

@implementation GTLRBooks_ConcurrentAccessRestriction
@dynamic deviceAllowed, kind, maxConcurrentDevices, message, nonce, reasonCode,
         restricted, signature, source, timeWindowSeconds, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata
//

@implementation GTLRBooks_Dictlayerdata
@dynamic common, dict, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Common
//

@implementation GTLRBooks_Dictlayerdata_Common
@dynamic title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict
//

@implementation GTLRBooks_Dictlayerdata_Dict
@dynamic source, words;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"words" : [GTLRBooks_Dictlayerdata_Dict_Words_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item
@dynamic derivatives, examples, senses, source;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"derivatives" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item class],
    @"examples" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item class],
    @"senses" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item
@dynamic conjugations, definitions, partOfSpeech, pronunciation,
         pronunciationUrl, source, syllabification, synonyms;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conjugations" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item class],
    @"definitions" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item class],
    @"synonyms" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Derivatives_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Examples_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Conjugations_Item
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item
@dynamic definition, examples;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"examples" : [GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Synonyms_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source
//

@implementation GTLRBooks_Dictlayerdata_Dict_Words_Item_Senses_Item_Definitions_Item_Examples_Item_Source
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Discoveryclusters
//

@implementation GTLRBooks_Discoveryclusters
@dynamic clusters, kind, totalClusters;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"clusters" : [GTLRBooks_Discoveryclusters_Clusters_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Discoveryclusters_Clusters_Item
//

@implementation GTLRBooks_Discoveryclusters_Clusters_Item
@dynamic bannerWithContentContainer, subTitle, title, totalVolumes, uid,
         volumes;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"bannerWithContentContainer" : @"banner_with_content_container" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volumes" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer
//

@implementation GTLRBooks_Discoveryclusters_Clusters_Item_BannerWithContentContainer
@dynamic fillColorArgb, imageUrl, maskColorArgb, moreButtonText, moreButtonUrl,
         textColorArgb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DownloadAccesses
//

@implementation GTLRBooks_DownloadAccesses
@dynamic downloadAccessList, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"downloadAccessList" : [GTLRBooks_DownloadAccessRestriction class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DownloadAccessRestriction
//

@implementation GTLRBooks_DownloadAccessRestriction
@dynamic deviceAllowed, downloadsAcquired, justAcquired, kind,
         maxDownloadDevices, message, nonce, reasonCode, restricted, signature,
         source, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_FamilyInfo
//

@implementation GTLRBooks_FamilyInfo
@dynamic kind, membership;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_FamilyInfo_Membership
//

@implementation GTLRBooks_FamilyInfo_Membership
@dynamic acquirePermission, ageGroup, allowedMaturityRating, isInFamily, role;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata
//

@implementation GTLRBooks_Geolayerdata
@dynamic common, geo, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Common
//

@implementation GTLRBooks_Geolayerdata_Common
@dynamic lang, previewImageUrl, snippet, snippetUrl, title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Geo
//

@implementation GTLRBooks_Geolayerdata_Geo
@dynamic boundary, cachePolicy, countryCode, latitude, longitude, mapType,
         viewport, zoom;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"boundary" : [GTLRBooks_Geolayerdata_Geo_Boundary_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Geo_Boundary_Item
//

@implementation GTLRBooks_Geolayerdata_Geo_Boundary_Item
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Geo_Viewport
//

@implementation GTLRBooks_Geolayerdata_Geo_Viewport
@dynamic hi, lo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Geo_Viewport_Hi
//

@implementation GTLRBooks_Geolayerdata_Geo_Viewport_Hi
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata_Geo_Viewport_Lo
//

@implementation GTLRBooks_Geolayerdata_Geo_Viewport_Lo
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Layersummaries
//

@implementation GTLRBooks_Layersummaries
@dynamic items, kind, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Layersummary class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Layersummary
//

@implementation GTLRBooks_Layersummary
@dynamic annotationCount, annotationsDataLink, annotationsLink, annotationTypes,
         contentVersion, dataCount, identifier, kind, layerId, selfLink,
         updated, volumeAnnotationsVersion, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotationTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Metadata
//

@implementation GTLRBooks_Metadata
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Metadata_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Metadata_Items_Item
//

@implementation GTLRBooks_Metadata_Items_Item
@dynamic downloadUrl, encryptedKey, language, size, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"downloadUrl" : @"download_url",
    @"encryptedKey" : @"encrypted_key"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Notification
//

@implementation GTLRBooks_Notification
@dynamic body, crmExperimentIds, docId, docType, dontShowNotification, iconUrl,
         isDocumentMature, kind, notificationType, notificationGroup,
         pcampaignId, reason, showNotificationSettingsAction, targetUrl, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"docId" : @"doc_id",
    @"docType" : @"doc_type",
    @"dontShowNotification" : @"dont_show_notification",
    @"isDocumentMature" : @"is_document_mature",
    @"notificationType" : @"notification_type",
    @"pcampaignId" : @"pcampaign_id",
    @"showNotificationSettingsAction" : @"show_notification_settings_action"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"crmExperimentIds" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Offers
//

@implementation GTLRBooks_Offers
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Offers_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Offers_Items_Item
//

@implementation GTLRBooks_Offers_Items_Item
@dynamic artUrl, gservicesKey, identifier, items;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Offers_Items_Item_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Offers_Items_Item_Items_Item
//

@implementation GTLRBooks_Offers_Items_Item_Items_Item
@dynamic author, canonicalVolumeLink, coverUrl, descriptionProperty, title,
         volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ReadingPosition
//

@implementation GTLRBooks_ReadingPosition
@dynamic epubCfiPosition, gbImagePosition, gbTextPosition, kind, pdfPosition,
         updated, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_RequestAccess
//

@implementation GTLRBooks_RequestAccess
@dynamic concurrentAccess, downloadAccess, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Review
//

@implementation GTLRBooks_Review
@dynamic author, content, date, fullTextUrl, kind, rating, source, title, type,
         volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Review_Author
//

@implementation GTLRBooks_Review_Author
@dynamic displayName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Review_Source
//

@implementation GTLRBooks_Review_Source
@dynamic descriptionProperty, extraDescription, url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Series
//

@implementation GTLRBooks_Series
@dynamic kind, series;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"series" : [GTLRBooks_Series_Series_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Series_Series_Item
//

@implementation GTLRBooks_Series_Series_Item
@dynamic bannerImageUrl, imageUrl, seriesId, seriesType, title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Seriesmembership
//

@implementation GTLRBooks_Seriesmembership
@dynamic kind, member, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"member" : [GTLRBooks_Volume class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"member";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings
//

@implementation GTLRBooks_Usersettings
@dynamic kind, notesExport, notification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_NotesExport
//

@implementation GTLRBooks_Usersettings_NotesExport
@dynamic folderName, isEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification
//

@implementation GTLRBooks_Usersettings_Notification
@dynamic matchMyInterests, moreFromAuthors, moreFromSeries, priceDrop,
         rewardExpirations;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification_MatchMyInterests
//

@implementation GTLRBooks_Usersettings_Notification_MatchMyInterests
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification_MoreFromAuthors
//

@implementation GTLRBooks_Usersettings_Notification_MoreFromAuthors
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification_MoreFromSeries
//

@implementation GTLRBooks_Usersettings_Notification_MoreFromSeries
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification_PriceDrop
//

@implementation GTLRBooks_Usersettings_Notification_PriceDrop
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings_Notification_RewardExpirations
//

@implementation GTLRBooks_Usersettings_Notification_RewardExpirations
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume
//

@implementation GTLRBooks_Volume
@dynamic accessInfo, ETag, identifier, kind, layerInfo, recommendedInfo,
         saleInfo, searchInfo, selfLink, userInfo, volumeInfo;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_AccessInfo
//

@implementation GTLRBooks_Volume_AccessInfo
@dynamic accessViewStatus, country, downloadAccess, driveImportedContentLink,
         embeddable, epub, explicitOfflineLicenseManagement, pdf, publicDomain,
         quoteSharingAllowed, textToSpeechPermission, viewability, viewOrderUrl,
         webReaderLink;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_LayerInfo
//

@implementation GTLRBooks_Volume_LayerInfo
@dynamic layers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layers" : [GTLRBooks_Volume_LayerInfo_Layers_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_RecommendedInfo
//

@implementation GTLRBooks_Volume_RecommendedInfo
@dynamic explanation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo
//

@implementation GTLRBooks_Volume_SaleInfo
@dynamic buyLink, country, isEbook, listPrice, offers, onSaleDate, retailPrice,
         saleability;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"offers" : [GTLRBooks_Volume_SaleInfo_Offers_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SearchInfo
//

@implementation GTLRBooks_Volume_SearchInfo
@dynamic textSnippet;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_UserInfo
//

@implementation GTLRBooks_Volume_UserInfo
@dynamic acquiredTime, acquisitionType, copyProperty, entitlementType,
         familySharing, isFamilySharedFromUser, isFamilySharedToUser,
         isFamilySharingAllowed, isFamilySharingDisabledByFop, isInMyBooks,
         isPreordered, isPurchased, isUploaded, readingPosition, rentalPeriod,
         rentalState, review, updated, userUploadedVolumeInfo;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"copyProperty" : @"copy" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_VolumeInfo
//

@implementation GTLRBooks_Volume_VolumeInfo
@dynamic allowAnonLogging, authors, averageRating, canonicalVolumeLink,
         categories, comicsContent, contentVersion, descriptionProperty,
         dimensions, imageLinks, industryIdentifiers, infoLink, language,
         mainCategory, maturityRating, pageCount, panelizationSummary,
         previewLink, printedPageCount, printType, publishedDate, publisher,
         ratingsCount, readingModes, samplePageCount, seriesInfo, subtitle,
         title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"authors" : [NSString class],
    @"categories" : [NSString class],
    @"industryIdentifiers" : [GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_AccessInfo_Epub
//

@implementation GTLRBooks_Volume_AccessInfo_Epub
@dynamic acsTokenLink, downloadLink, isAvailable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_AccessInfo_Pdf
//

@implementation GTLRBooks_Volume_AccessInfo_Pdf
@dynamic acsTokenLink, downloadLink, isAvailable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_LayerInfo_Layers_Item
//

@implementation GTLRBooks_Volume_LayerInfo_Layers_Item
@dynamic layerId, volumeAnnotationsVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_ListPrice
//

@implementation GTLRBooks_Volume_SaleInfo_ListPrice
@dynamic amount, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_Offers_Item
//

@implementation GTLRBooks_Volume_SaleInfo_Offers_Item
@dynamic finskyOfferType, giftable, listPrice, rentalDuration, retailPrice;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_RetailPrice
//

@implementation GTLRBooks_Volume_SaleInfo_RetailPrice
@dynamic amount, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_UserInfo_Copy
//

@implementation GTLRBooks_Volume_UserInfo_Copy
@dynamic allowedCharacterCount, limitType, remainingCharacterCount, updated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_UserInfo_FamilySharing
//

@implementation GTLRBooks_Volume_UserInfo_FamilySharing
@dynamic familyRole, isSharingAllowed, isSharingDisabledByFop;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_UserInfo_RentalPeriod
//

@implementation GTLRBooks_Volume_UserInfo_RentalPeriod
@dynamic endUtcSec, startUtcSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo
//

@implementation GTLRBooks_Volume_UserInfo_UserUploadedVolumeInfo
@dynamic processingState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_VolumeInfo_Dimensions
//

@implementation GTLRBooks_Volume_VolumeInfo_Dimensions
@dynamic height, thickness, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_VolumeInfo_ImageLinks
//

@implementation GTLRBooks_Volume_VolumeInfo_ImageLinks
@dynamic extraLarge, large, medium, small, smallThumbnail, thumbnail;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item
//

@implementation GTLRBooks_Volume_VolumeInfo_IndustryIdentifiers_Item
@dynamic identifierProperty, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifierProperty" : @"identifier" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_VolumeInfo_PanelizationSummary
//

@implementation GTLRBooks_Volume_VolumeInfo_PanelizationSummary
@dynamic containsEpubBubbles, containsImageBubbles, epubBubbleVersion,
         imageBubbleVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_Offers_Item_ListPrice
//

@implementation GTLRBooks_Volume_SaleInfo_Offers_Item_ListPrice
@dynamic amountInMicros, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_Offers_Item_RentalDuration
//

@implementation GTLRBooks_Volume_SaleInfo_Offers_Item_RentalDuration
@dynamic count, unit;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume_SaleInfo_Offers_Item_RetailPrice
//

@implementation GTLRBooks_Volume_SaleInfo_Offers_Item_RetailPrice
@dynamic amountInMicros, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume2
//

@implementation GTLRBooks_Volume2
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeannotation
//

@implementation GTLRBooks_Volumeannotation
@dynamic annotationDataId, annotationDataLink, annotationType, contentRanges,
         data, deleted, identifier, kind, layerId, pageIds, selectedText,
         selfLink, updated, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pageIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeannotation_ContentRanges
//

@implementation GTLRBooks_Volumeannotation_ContentRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeannotations
//

@implementation GTLRBooks_Volumeannotations
@dynamic items, kind, nextPageToken, totalItems, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volumeannotation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumes
//

@implementation GTLRBooks_Volumes
@dynamic items, kind, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeseriesinfo
//

@implementation GTLRBooks_Volumeseriesinfo
@dynamic bookDisplayNumber, kind, shortSeriesBookTitle, volumeSeries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volumeSeries" : [GTLRBooks_Volumeseriesinfo_VolumeSeries_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeseriesinfo_VolumeSeries_Item
//

@implementation GTLRBooks_Volumeseriesinfo_VolumeSeries_Item
@dynamic issue, orderNumber, seriesBookType, seriesId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"issue" : [GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item
//

@implementation GTLRBooks_Volumeseriesinfo_VolumeSeries_Item_Issue_Item
@dynamic issueDisplayNumber, issueOrderNumber;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumesRecommendedRateResponse
//

@implementation GTLRBooks_VolumesRecommendedRateResponse
@dynamic consistencyToken;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"consistencyToken" : @"consistency_token" };
}

@end
