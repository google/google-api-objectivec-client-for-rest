// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   BigQuery Connection API (bigqueryconnection/v1beta1)
// Description:
//   Allows users to manage BigQuery connections to external data sources.
// Documentation:
//   https://cloud.google.com/bigquery/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRBigQueryConnectionService_Connection;
@class GTLRBigQueryConnectionService_ConnectionCredential;
@class GTLRBigQueryConnectionService_GetIamPolicyRequest;
@class GTLRBigQueryConnectionService_SetIamPolicyRequest;
@class GTLRBigQueryConnectionService_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other BigQuery Connection Service query classes.
 */
@interface GTLRBigQueryConnectionServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new connection.
 *
 *  Method: bigqueryconnection.projects.locations.connections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsCreate : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsCreateWithObject:parent:]

/**
 *  Optional connection id that should be assigned to the created connection.
 */
@property(nonatomic, copy, nullable) NSString *connectionId;

/**
 *  Parent resource name.
 *  Must be in the format `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Connection.
 *
 *  Creates a new connection.
 *
 *  @param object The @c GTLRBigQueryConnectionService_Connection to include in
 *    the query.
 *  @param parent Parent resource name.
 *    Must be in the format `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_Connection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes connection and associated credential.
 *
 *  Method: bigqueryconnection.projects.locations.connections.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsDelete : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsDeleteWithname:]

/**
 *  Name of the deleted connection, for example:
 *  `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Empty.
 *
 *  Deletes connection and associated credential.
 *
 *  @param name Name of the deleted connection, for example:
 *    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns specified connection.
 *
 *  Method: bigqueryconnection.projects.locations.connections.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsGet : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsGetWithname:]

/**
 *  Name of the requested connection, for example:
 *  `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Connection.
 *
 *  Returns specified connection.
 *
 *  @param name Name of the requested connection, for example:
 *    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  Method: bigqueryconnection.projects.locations.connections.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsGetIamPolicy : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Policy.
 *
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  @param object The @c GTLRBigQueryConnectionService_GetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns a list of connections in the given project.
 *
 *  Method: bigqueryconnection.projects.locations.connections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsList : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsListWithparent:]

/** Maximum number of results to return. */
@property(nonatomic, assign) NSUInteger maxResults;

/** Page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Parent resource name.
 *  Must be in the form: `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_ListConnectionsResponse.
 *
 *  Returns a list of connections in the given project.
 *
 *  @param parent Parent resource name.
 *    Must be in the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified connection. For security reasons, also resets
 *  credential if connection properties are in the update field mask.
 *
 *  Method: bigqueryconnection.projects.locations.connections.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsPatch : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsPatchWithObject:name:]

/**
 *  Name of the connection to update, for example:
 *  `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Update mask for the connection fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Connection.
 *
 *  Updates the specified connection. For security reasons, also resets
 *  credential if connection properties are in the update field mask.
 *
 *  @param object The @c GTLRBigQueryConnectionService_Connection to include in
 *    the query.
 *  @param name Name of the connection to update, for example:
 *    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsPatch
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_Connection *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  Method: bigqueryconnection.projects.locations.connections.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsSetIamPolicy : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  @param object The @c GTLRBigQueryConnectionService_SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  Method: bigqueryconnection.projects.locations.connections.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsTestIamPermissions : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  @param object The @c GTLRBigQueryConnectionService_TestIamPermissionsRequest
 *    to include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the credential for the specified connection.
 *
 *  Method: bigqueryconnection.projects.locations.connections.updateCredential
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryConnectionServiceBigquery
 *    @c kGTLRAuthScopeBigQueryConnectionServiceCloudPlatform
 */
@interface GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsUpdateCredential : GTLRBigQueryConnectionServiceQuery
// Previous library name was
//   +[GTLQueryBigQueryConnectionService queryForProjectsLocationsConnectionsUpdateCredentialWithObject:name:]

/**
 *  Name of the connection, for example:
 *  `projects/{project_id}/locations/{location_id}/connections/{connection_id}/credential`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryConnectionService_Empty.
 *
 *  Sets the credential for the specified connection.
 *
 *  @param object The @c GTLRBigQueryConnectionService_ConnectionCredential to
 *    include in the query.
 *  @param name Name of the connection, for example:
 *    `projects/{project_id}/locations/{location_id}/connections/{connection_id}/credential`
 *
 *  @return GTLRBigQueryConnectionServiceQuery_ProjectsLocationsConnectionsUpdateCredential
 */
+ (instancetype)queryWithObject:(GTLRBigQueryConnectionService_ConnectionCredential *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
