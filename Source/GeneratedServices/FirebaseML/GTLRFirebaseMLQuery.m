// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Firebase ML API (firebaseml/v1beta2)
// Description:
//   Access custom machine learning models hosted via Firebase ML.
// Documentation:
//   https://firebase.google.com

#import "GTLRFirebaseMLQuery.h"

#import "GTLRFirebaseMLObjects.h"

@implementation GTLRFirebaseMLQuery

@dynamic fields;

@end

@implementation GTLRFirebaseMLQuery_ProjectsModelsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseML_Model *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta2/{+parent}/models";
  GTLRFirebaseMLQuery_ProjectsModelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseML_Operation class];
  query.loggingName = @"firebaseml.projects.models.create";
  return query;
}

@end

@implementation GTLRFirebaseMLQuery_ProjectsModelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta2/{+name}";
  GTLRFirebaseMLQuery_ProjectsModelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseML_Empty class];
  query.loggingName = @"firebaseml.projects.models.delete";
  return query;
}

@end

@implementation GTLRFirebaseMLQuery_ProjectsModelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta2/{+name}";
  GTLRFirebaseMLQuery_ProjectsModelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseML_Model class];
  query.loggingName = @"firebaseml.projects.models.get";
  return query;
}

@end

@implementation GTLRFirebaseMLQuery_ProjectsModelsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta2/{+parent}/models";
  GTLRFirebaseMLQuery_ProjectsModelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseML_ListModelsResponse class];
  query.loggingName = @"firebaseml.projects.models.list";
  return query;
}

@end

@implementation GTLRFirebaseMLQuery_ProjectsModelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseML_Model *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta2/{+name}";
  GTLRFirebaseMLQuery_ProjectsModelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseML_Operation class];
  query.loggingName = @"firebaseml.projects.models.patch";
  return query;
}

@end

@implementation GTLRFirebaseMLQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta2/{+name}";
  GTLRFirebaseMLQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseML_Operation class];
  query.loggingName = @"firebaseml.projects.operations.get";
  return query;
}

@end
