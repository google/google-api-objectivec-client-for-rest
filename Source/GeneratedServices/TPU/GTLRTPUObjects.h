// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud TPU API (tpu/v1)
// Description:
//   TPU API provides customers with access to Google TPU technology.
// Documentation:
//   https://cloud.google.com/tpu/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRTPU_AcceleratorType;
@class GTLRTPU_Location;
@class GTLRTPU_Location_Labels;
@class GTLRTPU_Location_Metadata;
@class GTLRTPU_NetworkEndpoint;
@class GTLRTPU_Node;
@class GTLRTPU_Node_Labels;
@class GTLRTPU_Operation;
@class GTLRTPU_Operation_Metadata;
@class GTLRTPU_Operation_Response;
@class GTLRTPU_SchedulingConfig;
@class GTLRTPU_Status;
@class GTLRTPU_Status_Details_Item;
@class GTLRTPU_TensorFlowVersion;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRTPU_Node.health

/**
 *  Health status is unknown: not initialized or failed to retrieve.
 *
 *  Value: "HEALTH_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_Health_HealthUnspecified;
/**
 *  The resource is healthy.
 *
 *  Value: "HEALTHY"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_Health_Healthy;
/**
 *  The resource is unresponsive.
 *
 *  Value: "TIMEOUT"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_Health_Timeout;
/**
 *  The resource is unhealthy.
 *
 *  Value: "UNHEALTHY"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_Health_Unhealthy;

// ----------------------------------------------------------------------------
// GTLRTPU_Node.state

/**
 *  TPU node is being created.
 *
 *  Value: "CREATING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Creating;
/**
 *  TPU node is being deleted.
 *
 *  Value: "DELETING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Deleting;
/**
 *  TPU node has been preempted. Only applies to Preemptible TPU Nodes.
 *
 *  Value: "PREEMPTED"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Preempted;
/**
 *  TPU node has been created and is fully usable.
 *
 *  Value: "READY"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Ready;
/**
 *  TPU node is undergoing reimaging.
 *
 *  Value: "REIMAGING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Reimaging;
/**
 *  TPU node is being repaired and may be unusable. Details can be
 *  found in the `help_description` field.
 *
 *  Value: "REPAIRING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Repairing;
/**
 *  TPU node is restarting.
 *
 *  Value: "RESTARTING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Restarting;
/**
 *  TPU node is currently starting.
 *
 *  Value: "STARTING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Starting;
/**
 *  TPU node state is not known/set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_StateUnspecified;
/**
 *  7 - Reserved. Was SUSPENDED.
 *  TPU node is stopped.
 *
 *  Value: "STOPPED"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Stopped;
/**
 *  TPU node is currently stopping.
 *
 *  Value: "STOPPING"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Stopping;
/**
 *  TPU node has been terminated due to maintenance or has reached the end of
 *  its life cycle (for preemptible nodes).
 *
 *  Value: "TERMINATED"
 */
GTLR_EXTERN NSString * const kGTLRTPU_Node_State_Terminated;

/**
 *  A accelerator type that a Node can be configured with.
 */
@interface GTLRTPU_AcceleratorType : GTLRObject

/** The resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/** the accelerator type. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRTPU_Empty : GTLRObject
@end


/**
 *  Response for ListAcceleratorTypes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "acceleratorTypes" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRTPU_ListAcceleratorTypesResponse : GTLRCollectionObject

/**
 *  The listed nodes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_AcceleratorType *> *acceleratorTypes;

/** The next page token or empty if none. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRTPU_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response for ListNodes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "nodes" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRTPU_ListNodesResponse : GTLRCollectionObject

/** The next page token or empty if none. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The listed nodes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_Node *> *nodes;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRTPU_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_Operation *> *operations;

@end


/**
 *  Response for ListTensorFlowVersions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tensorflowVersions" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRTPU_ListTensorFlowVersionsResponse : GTLRCollectionObject

/** The next page token or empty if none. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The listed nodes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_TensorFlowVersion *> *tensorflowVersions;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRTPU_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name.
 *  For example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRTPU_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRTPU_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations.
 *  For example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRTPU_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRTPU_Location_Metadata : GTLRObject
@end


/**
 *  A network endpoint over which a TPU worker can be reached.
 */
@interface GTLRTPU_NetworkEndpoint : GTLRObject

/** The IP address of this network endpoint. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  The port of this network endpoint.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@end


/**
 *  A TPU instance.
 */
@interface GTLRTPU_Node : GTLRObject

/**
 *  The type of hardware accelerators associated with this node.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *acceleratorType;

/**
 *  The CIDR block that the TPU node will use when selecting an IP address.
 *  This CIDR block must be a /29 block; the Compute Engine networks API
 *  forbids a smaller block, and using a larger block would be wasteful (a
 *  node can only consume one IP address). Errors will occur if the CIDR block
 *  has already been used for a currently existing TPU node, the CIDR block
 *  conflicts with any subnetworks in the user's provided network, or the
 *  provided network is peered with another network that is using that CIDR
 *  block.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *cidrBlock;

/**
 *  Output only.
 *  The time when the node was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The user-supplied description of the TPU. Maximum of 512 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The health status of the TPU node.
 *
 *  Likely values:
 *    @arg @c kGTLRTPU_Node_Health_HealthUnspecified Health status is unknown:
 *        not initialized or failed to retrieve. (Value: "HEALTH_UNSPECIFIED")
 *    @arg @c kGTLRTPU_Node_Health_Healthy The resource is healthy. (Value:
 *        "HEALTHY")
 *    @arg @c kGTLRTPU_Node_Health_Timeout The resource is unresponsive. (Value:
 *        "TIMEOUT")
 *    @arg @c kGTLRTPU_Node_Health_Unhealthy The resource is unhealthy. (Value:
 *        "UNHEALTHY")
 */
@property(nonatomic, copy, nullable) NSString *health;

/**
 *  Output only.
 *  If this field is populated, it contains a description of why the TPU Node
 *  is unhealthy.
 */
@property(nonatomic, copy, nullable) NSString *healthDescription;

/**
 *  Output only.
 *  DEPRECATED! Use network_endpoints instead.
 *  The network address for the TPU Node as visible to Compute Engine
 *  instances.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** Resource labels to represent user-provided metadata. */
@property(nonatomic, strong, nullable) GTLRTPU_Node_Labels *labels;

/**
 *  Output only.
 *  The immutable name of the TPU
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The name of a network they wish to peer the TPU node to. It must be a
 *  preexisting Compute Engine network inside of the project on which this API
 *  has been activated. If none is provided, "default" will be used.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. The network endpoints where TPU workers can be accessed and
 *  sent work.
 *  It is recommended that Tensorflow clients of the node reach out to the 0th
 *  entry in this map first.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_NetworkEndpoint *> *networkEndpoints;

/**
 *  Output only.
 *  DEPRECATED! Use network_endpoints instead.
 *  The network port for the TPU Node as visible to Compute Engine instances.
 */
@property(nonatomic, copy, nullable) NSString *port;

@property(nonatomic, strong, nullable) GTLRTPU_SchedulingConfig *schedulingConfig;

/**
 *  Output only.
 *  The service account used to run the tensor flow services within the node.
 *  To share resources, including Google Cloud Storage data, with the
 *  Tensorflow job running in the Node, this account must have permissions to
 *  that data.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only.
 *  The current state for the TPU Node.
 *
 *  Likely values:
 *    @arg @c kGTLRTPU_Node_State_Creating TPU node is being created. (Value:
 *        "CREATING")
 *    @arg @c kGTLRTPU_Node_State_Deleting TPU node is being deleted. (Value:
 *        "DELETING")
 *    @arg @c kGTLRTPU_Node_State_Preempted TPU node has been preempted. Only
 *        applies to Preemptible TPU Nodes. (Value: "PREEMPTED")
 *    @arg @c kGTLRTPU_Node_State_Ready TPU node has been created and is fully
 *        usable. (Value: "READY")
 *    @arg @c kGTLRTPU_Node_State_Reimaging TPU node is undergoing reimaging.
 *        (Value: "REIMAGING")
 *    @arg @c kGTLRTPU_Node_State_Repairing TPU node is being repaired and may
 *        be unusable. Details can be
 *        found in the `help_description` field. (Value: "REPAIRING")
 *    @arg @c kGTLRTPU_Node_State_Restarting TPU node is restarting. (Value:
 *        "RESTARTING")
 *    @arg @c kGTLRTPU_Node_State_Starting TPU node is currently starting.
 *        (Value: "STARTING")
 *    @arg @c kGTLRTPU_Node_State_StateUnspecified TPU node state is not
 *        known/set. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRTPU_Node_State_Stopped 7 - Reserved. Was SUSPENDED.
 *        TPU node is stopped. (Value: "STOPPED")
 *    @arg @c kGTLRTPU_Node_State_Stopping TPU node is currently stopping.
 *        (Value: "STOPPING")
 *    @arg @c kGTLRTPU_Node_State_Terminated TPU node has been terminated due to
 *        maintenance or has reached the end of
 *        its life cycle (for preemptible nodes). (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The version of Tensorflow running in the Node.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *tensorflowVersion;

@end


/**
 *  Resource labels to represent user-provided metadata.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRTPU_Node_Labels : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRTPU_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress.
 *  If `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRTPU_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRTPU_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the
 *  `name` should have the format of `operations/some/unique/name`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRTPU_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRTPU_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRTPU_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRTPU_OperationMetadata : GTLRObject

/** [Output only] API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  [Output only] Identifies whether the user has requested cancellation
 *  of the operation. Operations that have successfully been cancelled
 *  have Operation.error value with a google.rpc.Status.code of 1,
 *  corresponding to `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** [Output only] The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** [Output only] The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** [Output only] Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/**
 *  [Output only] Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** [Output only] Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Request for ReimageNode.
 */
@interface GTLRTPU_ReimageNodeRequest : GTLRObject

/** The version for reimage to create. */
@property(nonatomic, copy, nullable) NSString *tensorflowVersion;

@end


/**
 *  GTLRTPU_SchedulingConfig
 */
@interface GTLRTPU_SchedulingConfig : GTLRObject

/**
 *  preemptible
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *preemptible;

@end


/**
 *  Request for StartNode.
 */
@interface GTLRTPU_StartNodeRequest : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different
 *  programming environments, including REST APIs and RPC APIs. It is used by
 *  [gRPC](https://github.com/grpc). The error model is designed to be:
 *  - Simple to use and understand for most users
 *  - Flexible enough to meet unexpected needs
 *  # Overview
 *  The `Status` message contains three pieces of data: error code, error
 *  message,
 *  and error details. The error code should be an enum value of
 *  google.rpc.Code, but it may accept additional error codes if needed. The
 *  error message should be a developer-facing English message that helps
 *  developers *understand* and *resolve* the error. If a localized user-facing
 *  error message is needed, put the localized message in the error details or
 *  localize it in the client. The optional error details may contain arbitrary
 *  information about the error. There is a predefined set of error detail types
 *  in the package `google.rpc` that can be used for common error conditions.
 *  # Language mapping
 *  The `Status` message is the logical representation of the error model, but
 *  it
 *  is not necessarily the actual wire format. When the `Status` message is
 *  exposed in different client libraries and different wire protocols, it can
 *  be
 *  mapped differently. For example, it will likely be mapped to some exceptions
 *  in Java, but more likely mapped to some error codes in C.
 *  # Other uses
 *  The error model and the `Status` message can be used in a variety of
 *  environments, either with or without APIs, to provide a
 *  consistent developer experience across different environments.
 *  Example uses of this error model include:
 *  - Partial errors. If a service needs to return partial errors to the client,
 *  it may embed the `Status` in the normal response to indicate the partial
 *  errors.
 *  - Workflow errors. A typical workflow has multiple steps. Each step may
 *  have a `Status` message for error reporting.
 *  - Batch operations. If a client uses batch request and batch response, the
 *  `Status` message should be used directly inside batch response, one for
 *  each error sub-response.
 *  - Asynchronous operations. If an API call embeds asynchronous operation
 *  results in its response, the status of those operations should be
 *  represented directly using the `Status` message.
 *  - Logging. If some API errors are stored in logs, the message `Status` could
 *  be used directly after any stripping needed for security/privacy reasons.
 */
@interface GTLRTPU_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRTPU_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRTPU_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRTPU_Status_Details_Item : GTLRObject
@end


/**
 *  Request for StopNode.
 */
@interface GTLRTPU_StopNodeRequest : GTLRObject
@end


/**
 *  A tensorflow version that a Node can be configured with.
 */
@interface GTLRTPU_TensorFlowVersion : GTLRObject

/** The resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/** the tensorflow version. */
@property(nonatomic, copy, nullable) NSString *version;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
