// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Chrome Management API (chromemanagement/v1)
// Description:
//   The Chrome Management API is a suite of services that allows Chrome
//   administrators to view, manage and gain insights on their Chrome OS and
//   Chrome Browser devices.
// Documentation:
//   http://developers.google.com/chrome/management/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRChromeManagement_GoogleChromeManagementV1AndroidAppInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission;
@class GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport;
@class GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion;
@class GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission;
@class GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest;
@class GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess;
@class GTLRChromeManagement_GoogleChromeManagementV1CpuInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1Device;
@class GTLRChromeManagement_GoogleChromeManagementV1DiskInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1GraphicsAdapterInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1GraphicsInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1InstalledApp;
@class GTLRChromeManagement_GoogleChromeManagementV1MemoryInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus;
@class GTLRChromeManagement_GoogleChromeManagementV1StorageInfo;
@class GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume;
@class GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport;
@class GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice;
@class GTLRChromeManagement_GoogleRpcStatus;
@class GTLRChromeManagement_GoogleRpcStatus_Details_Item;
@class GTLRChromeManagement_GoogleTypeDate;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1AppDetails.type

/**
 *  ARC++ app.
 *
 *  Value: "ANDROID"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Android;
/**
 *  App type unspecified.
 *
 *  Value: "APP_ITEM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_AppItemTypeUnspecified;
/**
 *  Chrome app.
 *
 *  Value: "CHROME"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Chrome;
/**
 *  Web app.
 *
 *  Value: "WEB"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Web;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport.batteryHealth

/**
 *  Battery is healthy.
 *
 *  Value: "BATTERY_HEALTH_NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthNormal;
/**
 *  Health unknown.
 *
 *  Value: "BATTERY_HEALTH_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthUnspecified;
/**
 *  Battery is unhealthy and should be replaced.
 *
 *  Value: "BATTERY_REPLACE_NOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceNow;
/**
 *  Battery is moderately unhealthy and should be replaced soon.
 *
 *  Value: "BATTERY_REPLACE_SOON"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceSoon;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.channel

/**
 *  Beta release channel.
 *
 *  Value: "BETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Beta;
/**
 *  Canary release channel.
 *
 *  Value: "CANARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Canary;
/**
 *  Dev release channel.
 *
 *  Value: "DEV"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Dev;
/**
 *  No release channel specified.
 *
 *  Value: "RELEASE_CHANNEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_ReleaseChannelUnspecified;
/**
 *  Stable release channel.
 *
 *  Value: "STABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Stable;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.system

/**
 *  No operating system specified.
 *
 *  Value: "DEVICE_SYSTEM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_DeviceSystemUnspecified;
/**
 *  Android operating system.
 *
 *  Value: "SYSTEM_ANDROID"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemAndroid;
/**
 *  Chrome OS operating system.
 *
 *  Value: "SYSTEM_CROS"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemCros;
/**
 *  Apple iOS operating system.
 *
 *  Value: "SYSTEM_IOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemIos;
/**
 *  Linux operating system.
 *
 *  Value: "SYSTEM_LINUX"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemLinux;
/**
 *  Apple macOS operating system.
 *
 *  Value: "SYSTEM_MAC"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemMac;
/**
 *  Other operating system.
 *
 *  Value: "SYSTEM_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemOther;
/**
 *  Microsoft Windows operating system.
 *
 *  Value: "SYSTEM_WINDOWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemWindows;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1CpuInfo.architecture

/**
 *  Architecture unknown.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_ArchitectureUnspecified;
/**
 *  x64 architecture
 *
 *  Value: "X64"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_X64;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appInstallType

/**
 *  Administrator app install type.
 *
 *  Value: "ADMIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Admin;
/**
 *  Application install type not specified.
 *
 *  Value: "APP_INSTALL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_AppInstallTypeUnspecified;
/**
 *  Development app install type.
 *
 *  Value: "DEVELOPMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Development;
/**
 *  Multiple app install types.
 *
 *  Value: "MULTIPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Multiple;
/**
 *  Normal app install type.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Normal;
/**
 *  Other app install type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Other;
/**
 *  Sideloaded app install type.
 *
 *  Value: "SIDELOAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Sideload;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appSource

/**
 *  Application source not specified.
 *
 *  Value: "APP_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_AppSourceUnspecified;
/**
 *  Generally for extensions and Chrome apps.
 *
 *  Value: "CHROME_WEBSTORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_ChromeWebstore;
/**
 *  Play Store app.
 *
 *  Value: "PLAY_STORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_PlayStore;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appType

/**
 *  ARC++ app.
 *
 *  Value: "ANDROID_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AndroidApp;
/**
 *  Chrome app.
 *
 *  Value: "APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_App;
/**
 *  App type not specified.
 *
 *  Value: "APP_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AppTypeUnspecified;
/**
 *  Chrome extension.
 *
 *  Value: "EXTENSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Extension;
/**
 *  Chrome hosted app.
 *
 *  Value: "HOSTED_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_HostedApp;
/**
 *  Chrome theme.
 *
 *  Value: "THEME"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Theme;

// ----------------------------------------------------------------------------
// GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus.updateState

/**
 *  OS has started download on device.
 *
 *  Value: "OS_IMAGE_DOWNLOAD_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadInProgress;
/**
 *  OS has not started downloading.
 *
 *  Value: "OS_IMAGE_DOWNLOAD_NOT_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadNotStarted;
/**
 *  Device needs reboot to finish upload.
 *
 *  Value: "OS_UPDATE_NEED_REBOOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsUpdateNeedReboot;
/**
 *  State unspecified.
 *
 *  Value: "UPDATE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_UpdateStateUnspecified;

/**
 *  Android app information.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1AndroidAppInfo : GTLRObject

/** Output only. Permissions requested by an Android app. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission *> *permissions;

@end


/**
 *  Permission requested by an Android app.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission : GTLRObject

/** Output only. The type of the permission. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Resource representing app details.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1AppDetails : GTLRObject

/** Output only. Android app information. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1AndroidAppInfo *androidAppInfo;

/**
 *  Output only. Unique store identifier for the item. Examples:
 *  "gmbmikajjgmnabiglmofipeabaddhgne" for the Save to Google Drive Chrome
 *  extension, "com.google.android.apps.docs" for the Google Drive Android app.
 */
@property(nonatomic, copy, nullable) NSString *appId;

/** Output only. Chrome Web Store app information. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo *chromeAppInfo;

/**
 *  Output only. App's description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. The uri for the detail page of the item. */
@property(nonatomic, copy, nullable) NSString *detailUri;

/** Output only. App's display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. First published time. */
@property(nonatomic, strong, nullable) GTLRDateTime *firstPublishTime;

/** Output only. Home page or Website uri. */
@property(nonatomic, copy, nullable) NSString *homepageUri;

/**
 *  Output only. A link to an image that can be used as an icon for the product.
 */
@property(nonatomic, copy, nullable) NSString *iconUri;

/**
 *  Output only. Indicates if the app has to be paid for OR has paid content.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPaidApp;

/** Output only. Latest published time. */
@property(nonatomic, strong, nullable) GTLRDateTime *latestPublishTime;

/**
 *  Output only. Format:
 *  name=customers/{customer_id}/apps/{chrome|android|web}/{app_id}\@{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The URI pointing to the privacy policy of the app, if it was
 *  provided by the developer. Version-specific field that will only be set when
 *  the requested app version is found.
 */
@property(nonatomic, copy, nullable) NSString *privacyPolicyUri;

/** Output only. The publisher of the item. */
@property(nonatomic, copy, nullable) NSString *publisher;

/**
 *  Output only. Number of reviews received. Chrome Web Store review information
 *  will always be for the latest version of an app.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reviewNumber;

/**
 *  Output only. The rating of the app (on 5 stars). Chrome Web Store review
 *  information will always be for the latest version of an app.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reviewRating;

/**
 *  Output only. App version. A new revision is committed whenever a new version
 *  of the app is published.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/** Output only. Information about a partial service error if applicable. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleRpcStatus *serviceError;

/**
 *  Output only. App type.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Android
 *        ARC++ app. (Value: "ANDROID")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_AppItemTypeUnspecified
 *        App type unspecified. (Value: "APP_ITEM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Chrome
 *        Chrome app. (Value: "CHROME")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Web
 *        Web app. (Value: "WEB")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Battery info
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo : GTLRObject

/**
 *  Output only. Design capacity (mAmpere-hours).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *designCapacity;

/**
 *  Output only. Designed minimum output voltage (mV)
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *designMinVoltage;

/** Output only. The date the battery was manufactured. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleTypeDate *manufactureDate;

/** Output only. Battery manufacturer. */
@property(nonatomic, copy, nullable) NSString *manufacturer;

/** Output only. Battery serial number. */
@property(nonatomic, copy, nullable) NSString *serialNumber;

/** Output only. Technology of the battery. Example: Li-ion */
@property(nonatomic, copy, nullable) NSString *technology;

@end


/**
 *  Sampling data for battery.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport : GTLRObject

/**
 *  Output only. Battery charge percentage.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chargeRate;

/**
 *  Output only. Battery current (mA).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *current;

/**
 *  Output only. The battery discharge rate measured in mW. Positive if the
 *  battery is being discharged, negative if it's being charged.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dischargeRate;

/**
 *  Output only. Battery remaining capacity (mAmpere-hours).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remainingCapacity;

/** Output only. Timestamp of when the sample was collected on device */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/** Output only. Battery status read from sysfs. Example: Discharging */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Output only. Temperature in Celsius degrees.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temperature;

/**
 *  Output only. Battery voltage (millivolt).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *voltage;

@end


/**
 *  Status data for battery.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport : GTLRObject

/**
 *  Output only. Battery health.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthNormal
 *        Battery is healthy. (Value: "BATTERY_HEALTH_NORMAL")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthUnspecified
 *        Health unknown. (Value: "BATTERY_HEALTH_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceNow
 *        Battery is unhealthy and should be replaced. (Value:
 *        "BATTERY_REPLACE_NOW")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceSoon
 *        Battery is moderately unhealthy and should be replaced soon. (Value:
 *        "BATTERY_REPLACE_SOON")
 */
@property(nonatomic, copy, nullable) NSString *batteryHealth;

/**
 *  Output only. Cycle count.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cycleCount;

/**
 *  Output only. Full charge capacity (mAmpere-hours).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullChargeCapacity;

/** Output only. Timestamp of when the sample was collected on device */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/** Output only. Sampling data for the battery. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport *> *sample;

/** Output only. Battery serial number. */
@property(nonatomic, copy, nullable) NSString *serialNumber;

@end


/**
 *  Describes a browser version and its install count.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion : GTLRObject

/**
 *  Output only. The release channel of the installed browser.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Beta
 *        Beta release channel. (Value: "BETA")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Canary
 *        Canary release channel. (Value: "CANARY")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Dev
 *        Dev release channel. (Value: "DEV")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_ReleaseChannelUnspecified
 *        No release channel specified. (Value: "RELEASE_CHANNEL_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Stable
 *        Stable release channel. (Value: "STABLE")
 */
@property(nonatomic, copy, nullable) NSString *channel;

/**
 *  Output only. Count grouped by device_system and major version
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Output only. Version of the system-specified operating system. */
@property(nonatomic, copy, nullable) NSString *deviceOsVersion;

/**
 *  Output only. The device operating system.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_DeviceSystemUnspecified
 *        No operating system specified. (Value: "DEVICE_SYSTEM_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemAndroid
 *        Android operating system. (Value: "SYSTEM_ANDROID")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemCros
 *        Chrome OS operating system. (Value: "SYSTEM_CROS")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemIos
 *        Apple iOS operating system. (Value: "SYSTEM_IOS")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemLinux
 *        Linux operating system. (Value: "SYSTEM_LINUX")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemMac
 *        Apple macOS operating system. (Value: "SYSTEM_MAC")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemOther
 *        Other operating system. (Value: "SYSTEM_OTHER")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemWindows
 *        Microsoft Windows operating system. (Value: "SYSTEM_WINDOWS")
 */
@property(nonatomic, copy, nullable) NSString *system;

/** Output only. The full version of the installed browser. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Chrome Web Store app information.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo : GTLRObject

/**
 *  Output only. Whether the app or extension is built and maintained by Google.
 *  Version-specific field that will only be set when the requested app version
 *  is found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *googleOwned;

/**
 *  Output only. Whether the app or extension is in a published state in the
 *  Chrome Web Store.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isCwsHosted;

/**
 *  Output only. Whether the app or extension is a theme.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isTheme;

/**
 *  Output only. The minimum number of users using this app.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minUserCount;

/**
 *  Output only. Every custom permission requested by the app. Version-specific
 *  field that will only be set when the requested app version is found.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission *> *permissions;

/**
 *  Output only. Every permission giving access to domains or broad host
 *  patterns. ( e.g. www.google.com). This includes the matches from content
 *  scripts as well as hosts in the permissions node of the manifest.
 *  Version-specific field that will only be set when the requested app version
 *  is found.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess *> *siteAccess;

/**
 *  Output only. The app developer has enabled support for their app.
 *  Version-specific field that will only be set when the requested app version
 *  is found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportEnabled;

@end


/**
 *  Permission requested by a Chrome app or extension.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission : GTLRObject

/**
 *  Output only. If available, whether this permissions grants the app/extension
 *  access to user data.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accessUserData;

/**
 *  Output only. If available, a URI to a page that has documentation for the
 *  current permission.
 */
@property(nonatomic, copy, nullable) NSString *documentationUri;

/** Output only. The type of the permission. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Details of an app installation request.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest : GTLRObject

/**
 *  Output only. Format:
 *  app_details=customers/{customer_id}/apps/chrome/{app_id}
 */
@property(nonatomic, copy, nullable) NSString *appDetails;

/**
 *  Output only. Unique store identifier for the app. Example:
 *  "gmbmikajjgmnabiglmofipeabaddhgne" for the Save to Google Drive Chrome
 *  extension.
 */
@property(nonatomic, copy, nullable) NSString *appId;

/** Output only. The uri for the detail page of the item. */
@property(nonatomic, copy, nullable) NSString *detailUri;

/** Output only. App's display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. A link to an image that can be used as an icon for the product.
 */
@property(nonatomic, copy, nullable) NSString *iconUri;

/**
 *  Output only. The timestamp of the most recently made request for this app.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *latestRequestTime;

/**
 *  Output only. Total count of requests for this app.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestCount;

@end


/**
 *  Represent one host permission.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess : GTLRObject

/**
 *  Output only. This can contain very specific hosts, or patterns like "*.com"
 *  for instance.
 */
@property(nonatomic, copy, nullable) NSString *hostMatch;

@end


/**
 *  Response containing summary of requested app installations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "requestedApps" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CountChromeAppRequestsResponse : GTLRCollectionObject

/** Token to specify the next page in the list. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Count of requested apps matching request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest *> *requestedApps;

/**
 *  Total number of matching app requests.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Response containing requested browser versions details and counts.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "browserVersions" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CountChromeVersionsResponse : GTLRCollectionObject

/**
 *  List of all browser versions and their install counts.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion *> *browserVersions;

/** Token to specify the next page of the request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number browser versions matching request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Response containing details of queried installed apps.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "installedApps" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CountInstalledAppsResponse : GTLRCollectionObject

/**
 *  List of installed apps matching request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1InstalledApp *> *installedApps;

/** Token to specify the next page of the request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of installed apps matching request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  CPU specs for a CPU.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CpuInfo : GTLRObject

/**
 *  Output only. The CPU architecture.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_ArchitectureUnspecified
 *        Architecture unknown. (Value: "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_X64
 *        x64 architecture (Value: "X64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  Output only. The max CPU clock speed in kHz.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxClockSpeed;

/**
 *  Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU \@
 *  1.60GHz
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Contains samples of the cpu status reports.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport : GTLRObject

/** Output only. CPU temperature sample info per CPU core in Celsius */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo *> *cpuTemperatureInfo;

/**
 *  Output only. Sample of CPU utilization (0-100 percent).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuUtilizationPct;

/**
 *  Output only. The timestamp in milliseconds representing time at which this
 *  report was sampled.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/** Output only. Frequency the report is sampled. */
@property(nonatomic, strong, nullable) GTLRDuration *sampleFrequency;

@end


/**
 *  CPU temperature of a device. Sampled per CPU core in Celsius
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo : GTLRObject

/** Output only. CPU label. Example: Core 0 */
@property(nonatomic, copy, nullable) NSString *label;

/**
 *  Output only. CPU temperature in Celsius.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temperatureCelsius;

@end


/**
 *  Describes a device reporting Chrome browser information.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1Device : GTLRObject

/**
 *  Output only. The ID of the device that reported this Chrome browser
 *  information.
 */
@property(nonatomic, copy, nullable) NSString *deviceId;

/** Output only. The name of the machine within its local network. */
@property(nonatomic, copy, nullable) NSString *machine;

@end


/**
 *  Status of the single storage device.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1DiskInfo : GTLRObject

/**
 *  Output only. Number of bytes read since last boot.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bytesReadThisSession;

/**
 *  Output only. Number of bytes written since last boot.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bytesWrittenThisSession;

/**
 *  Output only. Time spent discarding since last boot. Discarding is writing to
 *  clear blocks which are no longer in use. Supported on kernels 4.18+.
 */
@property(nonatomic, strong, nullable) GTLRDuration *discardTimeThisSession;

/** Output only. Disk health. */
@property(nonatomic, copy, nullable) NSString *health;

/**
 *  Output only. Counts the time the disk and queue were busy, so unlike the
 *  fields above, parallel requests are not counted multiple times.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ioTimeThisSession;

/** Output only. Disk manufacturer. */
@property(nonatomic, copy, nullable) NSString *manufacturer;

/** Output only. Disk model. */
@property(nonatomic, copy, nullable) NSString *model;

/** Output only. Time spent reading from disk since last boot. */
@property(nonatomic, strong, nullable) GTLRDuration *readTimeThisSession;

/** Output only. Disk serial number. */
@property(nonatomic, copy, nullable) NSString *serialNumber;

/**
 *  Output only. Disk size.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

/** Output only. Disk type: eMMC / NVMe / ATA / SCSI. */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. Disk volumes. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *volumeIds;

/** Output only. Time spent writing to disk since last boot. */
@property(nonatomic, strong, nullable) GTLRDuration *writeTimeThisSession;

@end


/**
 *  Information for a display.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo : GTLRObject

/**
 *  Output only. Represents the graphics card device id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deviceId;

/**
 *  Output only. Indicates if display is internal or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInternal;

/**
 *  Output only. Refresh rate in Hz.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *refreshRate;

/**
 *  Output only. Resolution height in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resolutionHeight;

/**
 *  Output only. Resolution width in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resolutionWidth;

@end


/**
 *  Response containing a list of devices with queried app installed.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "devices" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1FindInstalledAppDevicesResponse : GTLRCollectionObject

/**
 *  A list of devices which have the app installed. Sorted in ascending
 *  alphabetical order on the Device.machine field.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1Device *> *devices;

/** Token to specify the next page of the request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of devices matching request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Information of a graphics adapter (GPU).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1GraphicsAdapterInfo : GTLRObject

/**
 *  Output only. Adapter name. Example: Mesa DRI Intel(R) UHD Graphics 620
 *  (Kabylake GT2).
 */
@property(nonatomic, copy, nullable) NSString *adapter;

/**
 *  Output only. Represents the graphics card device id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deviceId;

/** Output only. Version of the GPU driver. */
@property(nonatomic, copy, nullable) NSString *driverVersion;

@end


/**
 *  Information of the graphics subsystem.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1GraphicsInfo : GTLRObject

/** Output only. Information about the graphics adapter (GPU). */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1GraphicsAdapterInfo *adapterInfo;

@end


/**
 *  Information of the graphics subsystem.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport : GTLRObject

/** Output only. Information about the displays for the device. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo *> *displays;

/** Output only. Time at which the graphics data was reported. */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

@end


/**
 *  Describes an installed app.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1InstalledApp : GTLRObject

/**
 *  Output only. Unique identifier of the app. For Chrome apps and extensions,
 *  the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android
 *  apps, the package name (e.g. com.evernote).
 */
@property(nonatomic, copy, nullable) NSString *appId;

/**
 *  Output only. How the app was installed.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Admin
 *        Administrator app install type. (Value: "ADMIN")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_AppInstallTypeUnspecified
 *        Application install type not specified. (Value:
 *        "APP_INSTALL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Development
 *        Development app install type. (Value: "DEVELOPMENT")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Multiple
 *        Multiple app install types. (Value: "MULTIPLE")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Normal
 *        Normal app install type. (Value: "NORMAL")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Other
 *        Other app install type. (Value: "OTHER")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Sideload
 *        Sideloaded app install type. (Value: "SIDELOAD")
 */
@property(nonatomic, copy, nullable) NSString *appInstallType;

/**
 *  Output only. Source of the installed app.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_AppSourceUnspecified
 *        Application source not specified. (Value: "APP_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_ChromeWebstore
 *        Generally for extensions and Chrome apps. (Value: "CHROME_WEBSTORE")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_PlayStore
 *        Play Store app. (Value: "PLAY_STORE")
 */
@property(nonatomic, copy, nullable) NSString *appSource;

/**
 *  Output only. Type of the app.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AndroidApp
 *        ARC++ app. (Value: "ANDROID_APP")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_App
 *        Chrome app. (Value: "APP")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AppTypeUnspecified
 *        App type not specified. (Value: "APP_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Extension
 *        Chrome extension. (Value: "EXTENSION")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_HostedApp
 *        Chrome hosted app. (Value: "HOSTED_APP")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Theme
 *        Chrome theme. (Value: "THEME")
 */
@property(nonatomic, copy, nullable) NSString *appType;

/**
 *  Output only. Count of browser devices with this app installed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *browserDeviceCount;

/**
 *  Output only. Description of the installed app.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. Whether the app is disabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/** Output only. Name of the installed app. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Homepage uri of the installed app. */
@property(nonatomic, copy, nullable) NSString *homepageUri;

/**
 *  Output only. Count of ChromeOS users with this app installed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *osUserCount;

/** Output only. Permissions of the installed app. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryDevicesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "devices" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryDevicesResponse : GTLRCollectionObject

/**
 *  Telemetry devices returned in the response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice *> *devices;

/** Token to specify next page in the list. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Memory information of a device.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1MemoryInfo : GTLRObject

/**
 *  Output only. Amount of available RAM in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableRamBytes;

/**
 *  Output only. Total RAM in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRamBytes;

@end


/**
 *  Contains samples of memory status reports.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport : GTLRObject

/**
 *  Output only. Number of page faults during this collection
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageFaults;

/**
 *  Output only. The timestamp in milliseconds representing time at which this
 *  report was sampled.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/** Output only. Frequency the report is sampled. */
@property(nonatomic, strong, nullable) GTLRDuration *sampleFrequency;

/**
 *  Output only. Amount of free RAM in bytes (unreliable due to Garbage
 *  Collection).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *systemRamFreeBytes;

@end


/**
 *  State of visible/configured networks.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport : GTLRObject

/** Output only. Gateway IP address. */
@property(nonatomic, copy, nullable) NSString *gatewayIpAddress;

/** Output only. LAN IP address. */
@property(nonatomic, copy, nullable) NSString *lanIpAddress;

/** Output only. Time at which the network state was reported. */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/** Output only. Frequency the report is sampled. */
@property(nonatomic, strong, nullable) GTLRDuration *sampleFrequency;

/**
 *  Output only. Signal strength for wireless networks measured in decibels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *signalStrengthDbm;

@end


/**
 *  Contains information regarding the current OS update status.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus : GTLRObject

/** Output only. Timestamp of the last reboot. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastRebootTime;

/** Output only. Timestamp of the last update check. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUpdateCheckTime;

/** Output only. Timestamp of the last successful update. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUpdateTime;

/**
 *  Output only. New platform version of the os image being downloaded and
 *  applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS
 *  or OS_UPDATE_NEED_REBOOT. Note this could be a dummy "0.0.0.0" for
 *  OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is
 *  restarted without a reboot.
 */
@property(nonatomic, copy, nullable) NSString *newPlatformVersion NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. New requested platform version from the pending updated kiosk
 *  app.
 */
@property(nonatomic, copy, nullable) NSString *newRequestedPlatformVersion NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. Current state of the os update.
 *
 *  Likely values:
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadInProgress
 *        OS has started download on device. (Value:
 *        "OS_IMAGE_DOWNLOAD_IN_PROGRESS")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadNotStarted
 *        OS has not started downloading. (Value:
 *        "OS_IMAGE_DOWNLOAD_NOT_STARTED")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsUpdateNeedReboot
 *        Device needs reboot to finish upload. (Value: "OS_UPDATE_NEED_REBOOT")
 *    @arg @c kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_UpdateStateUnspecified
 *        State unspecified. (Value: "UPDATE_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *updateState;

@end


/**
 *  Status data for storage.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1StorageInfo : GTLRObject

/**
 *  The available space for user data storage in the device in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableDiskBytes;

/**
 *  The total space for user data storage in the device in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalDiskBytes;

/** Information for disk volumes */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume *> *volume;

@end


/**
 *  Information for disk volumes
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume : GTLRObject

/**
 *  Free storage space in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageFreeBytes;

/**
 *  Total storage space in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageTotalBytes;

/** Disk volume id. */
@property(nonatomic, copy, nullable) NSString *volumeId;

@end


/**
 *  Status data for storage.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport : GTLRObject

/** Output only. Reports on disk */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1DiskInfo *> *disk;

/** Output only. Timestamp of when the sample was collected on device */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

@end


/**
 *  Telemetry data collected from a managed device.
 */
@interface GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice : GTLRObject

/** Output only. Information on battery specs for the device. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo *> *batteryInfo;

/** Output only. Battery reports collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport *> *batteryStatusReport;

/** Output only. Information regarding CPU specs for the device. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1CpuInfo *> *cpuInfo;

/** Output only. CPU status reports collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport *> *cpuStatusReport;

/**
 *  Output only. Google Workspace Customer whose enterprise enrolled the device.
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Output only. The unique Directory API ID of the device. This value is the
 *  same as the Admin Console's Directory API ID in the Chrome OS Devices tab
 */
@property(nonatomic, copy, nullable) NSString *deviceId;

/**
 *  Output only. Contains information regarding Graphic peripherals for the
 *  device.
 */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1GraphicsInfo *graphicsInfo;

/** Output only. Graphics reports collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport *> *graphicsStatusReport;

/** Output only. Information regarding memory specs for the device. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1MemoryInfo *memoryInfo;

/** Output only. Memory status reports collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport *> *memoryStatusReport;

/** Output only. Resource name of the device. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Network specs collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport *> *networkStatusReport;

/** Output only. Organization unit ID of the device. */
@property(nonatomic, copy, nullable) NSString *orgUnitId;

/**
 *  Output only. Contains relevant information regarding ChromeOS update status.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus *> *osUpdateStatus;

/**
 *  Output only. Device serial number. This value is the same as the Admin
 *  Console's Serial Number in the Chrome OS Devices tab.
 */
@property(nonatomic, copy, nullable) NSString *serialNumber;

/** Output only. Information of storage specs for the device. */
@property(nonatomic, strong, nullable) GTLRChromeManagement_GoogleChromeManagementV1StorageInfo *storageInfo;

/** Output only. Storage reports collected periodically. */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport *> *storageStatusReport;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRChromeManagement_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRChromeManagement_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRChromeManagement_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRChromeManagement_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values * A
 *  month and day, with a zero year (e.g., an anniversary) * A year on its own,
 *  with a zero month and a zero day * A year and month, with a zero day (e.g.,
 *  a credit card expiration date) Related types: * google.type.TimeOfDay *
 *  google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRChromeManagement_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
