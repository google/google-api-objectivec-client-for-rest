// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Chrome Management API (chromemanagement/v1)
// Description:
//   The Chrome Management API is a suite of services that allows Chrome
//   administrators to view, manage and gain insights on their Chrome OS The
//   Chrome Management API is a suite of services that allows GSuite domain
//   administrators to view, manage and gain insights on their Chrome OS and
//   Chrome Browser devices and users.
// Documentation:
//   http://developers.google.com/chrome/management/

#import "GTLRChromeManagementObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.channel
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Beta = @"BETA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Canary = @"CANARY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Dev = @"DEV";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_ReleaseChannelUnspecified = @"RELEASE_CHANNEL_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Stable = @"STABLE";

// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.system
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_DeviceSystemUnspecified = @"DEVICE_SYSTEM_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemAndroid = @"SYSTEM_ANDROID";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemCros = @"SYSTEM_CROS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemIos = @"SYSTEM_IOS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemLinux = @"SYSTEM_LINUX";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemMac = @"SYSTEM_MAC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemOther = @"SYSTEM_OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemWindows = @"SYSTEM_WINDOWS";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appInstallType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Admin = @"ADMIN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_AppInstallTypeUnspecified = @"APP_INSTALL_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Development = @"DEVELOPMENT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Multiple = @"MULTIPLE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Normal = @"NORMAL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Other = @"OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Sideload = @"SIDELOAD";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appSource
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_AppSourceUnspecified = @"APP_SOURCE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_ChromeWebstore = @"CHROME_WEBSTORE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_PlayStore = @"PLAY_STORE";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AndroidApp = @"ANDROID_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_App = @"APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AppTypeUnspecified = @"APP_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Extension = @"EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_HostedApp = @"HOSTED_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Theme = @"THEME";

// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion
@dynamic channel, count, deviceOsVersion, system, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeVersionsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeVersionsResponse
@dynamic browserVersions, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"browserVersions" : [GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"browserVersions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountInstalledAppsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountInstalledAppsResponse
@dynamic installedApps, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"installedApps" : [GTLRChromeManagement_GoogleChromeManagementV1InstalledApp class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"installedApps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1Device
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1Device
@dynamic deviceId, machine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1FindInstalledAppDevicesResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1FindInstalledAppDevicesResponse
@dynamic devices, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"devices" : [GTLRChromeManagement_GoogleChromeManagementV1Device class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"devices";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1InstalledApp
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1InstalledApp
@dynamic appId, appInstallType, appSource, appType, browserDeviceCount,
         descriptionProperty, disabled, displayName, homepageUri, osUserCount,
         permissions;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end
