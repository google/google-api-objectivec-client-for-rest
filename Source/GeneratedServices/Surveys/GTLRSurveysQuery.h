// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Surveys API (surveys/v2)
// Description:
//   Creates and conducts surveys, lists the surveys that an authenticated user
//   owns, and retrieves survey results and information about specified surveys.

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSurveys_MobileAppPanel;
@class GTLRSurveys_ResultsGetRequest;
@class GTLRSurveys_StartRequest;
@class GTLRSurveys_Survey;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Surveys query classes.
 */
@interface GTLRSurveysQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieves a MobileAppPanel that is available to the authenticated user.
 *
 *  Method: surveys.mobileapppanels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysReadonly
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_MobileapppanelsGet : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForMobileapppanelsGetWithpanelId:]

/** External URL ID for the panel. */
@property(nonatomic, copy, nullable) NSString *panelId;

/**
 *  Fetches a @c GTLRSurveys_MobileAppPanel.
 *
 *  Retrieves a MobileAppPanel that is available to the authenticated user.
 *
 *  @param panelId External URL ID for the panel.
 *
 *  @returns GTLRSurveysQuery_MobileapppanelsGet
 */
+ (instancetype)queryWithPanelId:(NSString *)panelId;

@end

/**
 *  Lists the MobileAppPanels available to the authenticated user.
 *
 *  Method: surveys.mobileapppanels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysReadonly
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_MobileapppanelsList : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForMobileapppanelsList]

@property(nonatomic, assign) NSUInteger maxResults;

@property(nonatomic, assign) NSUInteger startIndex;

@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRSurveys_MobileAppPanelsListResponse.
 *
 *  Lists the MobileAppPanels available to the authenticated user.
 *
 *  @returns GTLRSurveysQuery_MobileapppanelsList
 */
+ (instancetype)query;

@end

/**
 *  Updates a MobileAppPanel. Currently the only property that can be updated is
 *  the owners property.
 *
 *  Method: surveys.mobileapppanels.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_MobileapppanelsUpdate : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForMobileapppanelsUpdateWithObject:panelId:]

/** External URL ID for the panel. */
@property(nonatomic, copy, nullable) NSString *panelId;

/**
 *  Fetches a @c GTLRSurveys_MobileAppPanel.
 *
 *  Updates a MobileAppPanel. Currently the only property that can be updated is
 *  the owners property.
 *
 *  @param object The @c GTLRSurveys_MobileAppPanel to include in the query.
 *  @param panelId External URL ID for the panel.
 *
 *  @returns GTLRSurveysQuery_MobileapppanelsUpdate
 */
+ (instancetype)queryWithObject:(GTLRSurveys_MobileAppPanel *)object
                        panelId:(NSString *)panelId;

@end

/**
 *  Retrieves any survey results that have been produced so far. Results are
 *  formatted as an Excel file. You must add "?alt=media" to the URL as an
 *  argument to get results.
 *
 *  Method: surveys.results.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysReadonly
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_ResultsGet : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForResultsGetWithObject:surveyUrlId:]

/** External URL ID for the survey. */
@property(nonatomic, copy, nullable) NSString *surveyUrlId;

/**
 *  Fetches a @c GTLRSurveys_SurveyResults.
 *
 *  Retrieves any survey results that have been produced so far. Results are
 *  formatted as an Excel file. You must add "?alt=media" to the URL as an
 *  argument to get results.
 *
 *  @param object The @c GTLRSurveys_ResultsGetRequest to include in the query.
 *  @param surveyUrlId External URL ID for the survey.
 *
 *  @returns GTLRSurveysQuery_ResultsGet
 */
+ (instancetype)queryWithObject:(GTLRSurveys_ResultsGetRequest *)object
                    surveyUrlId:(NSString *)surveyUrlId;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Retrieves any survey results that have been produced so far. Results are
 *  formatted as an Excel file. You must add "?alt=media" to the URL as an
 *  argument to get results.
 *
 *  @param object The @c GTLRSurveys_ResultsGetRequest to include in the query.
 *  @param surveyUrlId External URL ID for the survey.
 *
 *  @returns GTLRSurveysQuery_ResultsGet
 */
+ (instancetype)queryForMediaWithObject:(GTLRSurveys_ResultsGetRequest *)object
                            surveyUrlId:(NSString *)surveyUrlId;

@end

/**
 *  Removes a survey from view in all user GET requests.
 *
 *  Method: surveys.surveys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysDelete : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysDeleteWithsurveyUrlId:]

/** External URL ID for the survey. */
@property(nonatomic, copy, nullable) NSString *surveyUrlId;

/**
 *  Fetches a @c GTLRSurveys_DeleteResponse.
 *
 *  Removes a survey from view in all user GET requests.
 *
 *  @param surveyUrlId External URL ID for the survey.
 *
 *  @returns GTLRSurveysQuery_SurveysDelete
 */
+ (instancetype)queryWithSurveyUrlId:(NSString *)surveyUrlId;

@end

/**
 *  Retrieves information about the specified survey.
 *
 *  Method: surveys.surveys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysReadonly
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysGet : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysGetWithsurveyUrlId:]

/** External URL ID for the survey. */
@property(nonatomic, copy, nullable) NSString *surveyUrlId;

/**
 *  Fetches a @c GTLRSurveys_Survey.
 *
 *  Retrieves information about the specified survey.
 *
 *  @param surveyUrlId External URL ID for the survey.
 *
 *  @returns GTLRSurveysQuery_SurveysGet
 */
+ (instancetype)queryWithSurveyUrlId:(NSString *)surveyUrlId;

@end

/**
 *  Creates a survey.
 *
 *  Method: surveys.surveys.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysInsert : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysInsertWithObject:]

/**
 *  Fetches a @c GTLRSurveys_Survey.
 *
 *  Creates a survey.
 *
 *  @param object The @c GTLRSurveys_Survey to include in the query.
 *
 *  @returns GTLRSurveysQuery_SurveysInsert
 */
+ (instancetype)queryWithObject:(GTLRSurveys_Survey *)object;

@end

/**
 *  Lists the surveys owned by the authenticated user.
 *
 *  Method: surveys.surveys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysReadonly
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysList : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysList]

@property(nonatomic, assign) NSUInteger maxResults;

@property(nonatomic, assign) NSUInteger startIndex;

@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRSurveys_ListResponse.
 *
 *  Lists the surveys owned by the authenticated user.
 *
 *  @returns GTLRSurveysQuery_SurveysList
 */
+ (instancetype)query;

@end

/**
 *  Begins running a survey.
 *
 *  Method: surveys.surveys.start
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysStart : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysStartWithObject:resourceId:]

@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRSurveys_StartResponse.
 *
 *  Begins running a survey.
 *
 *  @param object The @c GTLRSurveys_StartRequest to include in the query.
 *  @param resourceId NSString
 *
 *  @returns GTLRSurveysQuery_SurveysStart
 */
+ (instancetype)queryWithObject:(GTLRSurveys_StartRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Stops a running survey.
 *
 *  Method: surveys.surveys.stop
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysStop : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysStopWithresourceId:]

@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRSurveys_StopResponse.
 *
 *  Stops a running survey.
 *
 *  @param resourceId NSString
 *
 *  @returns GTLRSurveysQuery_SurveysStop
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Updates a survey. Currently the only property that can be updated is the
 *  owners property.
 *
 *  Method: surveys.surveys.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSurveys
 *    @c kGTLRAuthScopeSurveysUserinfoEmail
 */
@interface GTLRSurveysQuery_SurveysUpdate : GTLRSurveysQuery
// Previous library name was
//   +[GTLQuerySurveys queryForSurveysUpdateWithObject:surveyUrlId:]

/** External URL ID for the survey. */
@property(nonatomic, copy, nullable) NSString *surveyUrlId;

/**
 *  Fetches a @c GTLRSurveys_Survey.
 *
 *  Updates a survey. Currently the only property that can be updated is the
 *  owners property.
 *
 *  @param object The @c GTLRSurveys_Survey to include in the query.
 *  @param surveyUrlId External URL ID for the survey.
 *
 *  @returns GTLRSurveysQuery_SurveysUpdate
 */
+ (instancetype)queryWithObject:(GTLRSurveys_Survey *)object
                    surveyUrlId:(NSString *)surveyUrlId;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
