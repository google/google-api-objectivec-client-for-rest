// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   GKE Hub (gkehub/v1)
// Documentation:
//   https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRGKEHub_CancelOperationRequest;
@class GTLRGKEHub_Membership;
@class GTLRGKEHub_SetIamPolicyRequest;
@class GTLRGKEHub_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other GKE Hub query classes.
 */
@interface GTLRGKEHubQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: gkehub.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsGet : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsGetWithname:]

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: gkehub.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsList : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEHub_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Adds a new Membership.
 *
 *  Method: gkehub.projects.locations.memberships.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsCreate : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsCreateWithObject:parent:]

/**
 *  Required. Client chosen ID for the membership. `membership_id` must be a
 *  valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It
 *  must consist of lower case alphanumeric characters or `-` 3. It must start
 *  and end with an alphanumeric character Which can be expressed as the regex:
 *  `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *membershipId;

/**
 *  Required. The parent (project and location) where the Memberships will be
 *  created. Specified in the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Adds a new Membership.
 *
 *  @param object The @c GTLRGKEHub_Membership to include in the query.
 *  @param parent Required. The parent (project and location) where the
 *    Memberships will be created. Specified in the format `projects/ *
 *    /locations/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_Membership *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a Membership.
 *
 *  Method: gkehub.projects.locations.memberships.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsDelete : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsDeleteWithname:]

/**
 *  Required. The Membership resource name in the format `projects/ *
 *  /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Removes a Membership.
 *
 *  @param name Required. The Membership resource name in the format `projects/
 *    * /locations/ * /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates the manifest for deployment of the GKE connect agent.
 *
 *  Method: gkehub.projects.locations.memberships.generateConnectManifest
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsGenerateConnectManifest : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsGenerateConnectManifestWithname:]

/**
 *  Optional. The image pull secret content for the registry, if not public.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *imagePullSecretContent;

/**
 *  Optional. If true, generate the resources for upgrade only. Some resources
 *  generated only for installation (e.g. secrets) will be excluded.
 */
@property(nonatomic, assign) BOOL isUpgrade;

/**
 *  Required. The Membership resource name the Agent will associate with, in the
 *  format `projects/ * /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Namespace for GKE Connect agent resources. Defaults to
 *  `gke-connect`. The Connect Agent is authorized automatically when run in the
 *  default namespace. Otherwise, explicit authorization must be granted with an
 *  additional IAM binding.
 *
 *  Remapped to 'namespaceProperty' to avoid language reserved word 'namespace'.
 */
@property(nonatomic, copy, nullable) NSString *namespaceProperty;

/**
 *  Optional. URI of a proxy if connectivity from the agent to
 *  gkeconnect.googleapis.com requires the use of a proxy. Format must be in the
 *  form `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol
 *  supported by the proxy. This will direct the connect agent's outbound
 *  traffic through a HTTP(S) proxy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *proxy;

/**
 *  Optional. The registry to fetch the connect agent image from. Defaults to
 *  gcr.io/gkeconnect.
 */
@property(nonatomic, copy, nullable) NSString *registry;

/**
 *  Optional. The Connect agent version to use. Defaults to the most current
 *  version.
 */
@property(nonatomic, copy, nullable) NSString *version;

/**
 *  Fetches a @c GTLRGKEHub_GenerateConnectManifestResponse.
 *
 *  Generates the manifest for deployment of the GKE connect agent.
 *
 *  @param name Required. The Membership resource name the Agent will associate
 *    with, in the format `projects/ * /locations/ * /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsGenerateConnectManifest
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of a Membership.
 *
 *  Method: gkehub.projects.locations.memberships.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsGet : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsGetWithname:]

/**
 *  Required. The Membership resource name in the format `projects/ *
 *  /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Membership.
 *
 *  Gets the details of a Membership.
 *
 *  @param name Required. The Membership resource name in the format `projects/
 *    * /locations/ * /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkehub.projects.locations.memberships.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsGetIamPolicy : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEHub_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Memberships in a given project and location.
 *
 *  Method: gkehub.projects.locations.memberships.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsList : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsListWithparent:]

/**
 *  Optional. Lists Memberships that match the filter expression, following the
 *  syntax outlined in https://google.aip.dev/160. Examples: - Name is `bar` in
 *  project `foo-proj` and location `global`: name =
 *  "projects/foo-proj/locations/global/membership/bar" - Memberships that have
 *  a label called `foo`: labels.foo:* - Memberships that have a label called
 *  `foo` whose value is `bar`: labels.foo = bar - Memberships in the CREATING
 *  state: state = CREATING
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. One or more fields to compare and use to sort the output. See
 *  https://google.aip.dev/132#ordering.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. When requesting a 'page' of resources, `page_size` specifies
 *  number of resources to return. If unspecified or set to 0, all resources
 *  will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Token returned by previous call to `ListMemberships` which
 *  specifies the position in the list from where to continue listing the
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent (project and location) where the Memberships will be
 *  listed. Specified in the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEHub_ListMembershipsResponse.
 *
 *  Lists Memberships in a given project and location.
 *
 *  @param parent Required. The parent (project and location) where the
 *    Memberships will be listed. Specified in the format `projects/ *
 *    /locations/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing Membership.
 *
 *  Method: gkehub.projects.locations.memberships.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsPatch : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsPatchWithObject:name:]

/**
 *  Required. The Membership resource name in the format `projects/ *
 *  /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Mask of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Updates an existing Membership.
 *
 *  @param object The @c GTLRGKEHub_Membership to include in the query.
 *  @param name Required. The Membership resource name in the format `projects/
 *    * /locations/ * /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_Membership *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkehub.projects.locations.memberships.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsSetIamPolicy : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEHub_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEHub_SetIamPolicyRequest to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkehub.projects.locations.memberships.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsTestIamPermissions : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsMembershipsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEHub_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEHub_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: gkehub.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsCancel : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRGKEHub_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: gkehub.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsDelete : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkehub.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsGet : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: gkehub.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsList : GTLRGKEHubQuery
// Previous library name was
//   +[GTLQueryGKEHub queryForProjectsLocationsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEHub_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
