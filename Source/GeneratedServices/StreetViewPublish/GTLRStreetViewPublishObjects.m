// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Street View Publish API (streetviewpublish/v1)
// Description:
//   Publishes 360 photos to Google Maps, along with position, orientation, and
//   connectivity metadata. Apps can offer an interface for positioning,
//   connecting, and uploading user-generated Street View images.
// Documentation:
//   https://developers.google.com/streetview/publish/

#import "GTLRStreetViewPublishObjects.h"

// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_BatchDeletePhotosRequest
//

@implementation GTLRStreetViewPublish_BatchDeletePhotosRequest
@dynamic photoIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"photoIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_BatchDeletePhotosResponse
//

@implementation GTLRStreetViewPublish_BatchDeletePhotosResponse
@dynamic status;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"status" : [GTLRStreetViewPublish_Status class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_BatchGetPhotosResponse
//

@implementation GTLRStreetViewPublish_BatchGetPhotosResponse
@dynamic results;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"results" : [GTLRStreetViewPublish_PhotoResponse class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_BatchUpdatePhotosRequest
//

@implementation GTLRStreetViewPublish_BatchUpdatePhotosRequest
@dynamic updatePhotoRequests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"updatePhotoRequests" : [GTLRStreetViewPublish_UpdatePhotoRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_BatchUpdatePhotosResponse
//

@implementation GTLRStreetViewPublish_BatchUpdatePhotosResponse
@dynamic results;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"results" : [GTLRStreetViewPublish_PhotoResponse class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Connection
//

@implementation GTLRStreetViewPublish_Connection
@dynamic target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Empty
//

@implementation GTLRStreetViewPublish_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_LatLng
//

@implementation GTLRStreetViewPublish_LatLng
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Level
//

@implementation GTLRStreetViewPublish_Level
@dynamic name, number;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_ListPhotosResponse
//

@implementation GTLRStreetViewPublish_ListPhotosResponse
@dynamic nextPageToken, photos;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"photos" : [GTLRStreetViewPublish_Photo class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"photos";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Operation
//

@implementation GTLRStreetViewPublish_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Operation_Metadata
//

@implementation GTLRStreetViewPublish_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Operation_Response
//

@implementation GTLRStreetViewPublish_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Photo
//

@implementation GTLRStreetViewPublish_Photo
@dynamic captureTime, connections, downloadUrl, photoId, places, pose,
         shareLink, thumbnailUrl, uploadReference, viewCount;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connections" : [GTLRStreetViewPublish_Connection class],
    @"places" : [GTLRStreetViewPublish_Place class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_PhotoId
//

@implementation GTLRStreetViewPublish_PhotoId
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_PhotoResponse
//

@implementation GTLRStreetViewPublish_PhotoResponse
@dynamic photo, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Place
//

@implementation GTLRStreetViewPublish_Place
@dynamic placeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Pose
//

@implementation GTLRStreetViewPublish_Pose
@dynamic altitude, heading, latLngPair, level, pitch, roll;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Status
//

@implementation GTLRStreetViewPublish_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRStreetViewPublish_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_Status_Details_Item
//

@implementation GTLRStreetViewPublish_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_UpdatePhotoRequest
//

@implementation GTLRStreetViewPublish_UpdatePhotoRequest
@dynamic photo, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStreetViewPublish_UploadRef
//

@implementation GTLRStreetViewPublish_UploadRef
@dynamic uploadUrl;
@end
