// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Android Device Provisioning Partner API (androiddeviceprovisioning/v1)
// Description:
//   Automates reseller integration into zero-touch enrollment by assigning
//   devices to customers and creating device reports.
// Documentation:
//   https://developers.google.com/zero-touch/

#import "GTLRAndroidProvisioningPartnerQuery.h"

#import "GTLRAndroidProvisioningPartnerObjects.h"

@implementation GTLRAndroidProvisioningPartnerQuery

@dynamic fields;

@end

@implementation GTLRAndroidProvisioningPartnerQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAndroidProvisioningPartnerQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Operation class];
  query.loggingName = @"androiddeviceprovisioning.operations.get";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersCustomersCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_CreateCustomerRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customers";
  GTLRAndroidProvisioningPartnerQuery_PartnersCustomersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Company class];
  query.loggingName = @"androiddeviceprovisioning.partners.customers.create";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersCustomersList

@dynamic partnerId;

+ (instancetype)queryWithPartnerId:(long long)partnerId {
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/customers";
  GTLRAndroidProvisioningPartnerQuery_PartnersCustomersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_ListCustomersResponse class];
  query.loggingName = @"androiddeviceprovisioning.partners.customers.list";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesClaim

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_ClaimDeviceRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:claim";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesClaim *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_ClaimDeviceResponse class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.claim";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesClaimAsync

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_ClaimDevicesRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:claimAsync";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesClaimAsync *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Operation class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.claimAsync";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesFindByIdentifier

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_FindDevicesByDeviceIdentifierRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:findByIdentifier";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesFindByIdentifier *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_FindDevicesByDeviceIdentifierResponse class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.findByIdentifier";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesFindByOwner

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_FindDevicesByOwnerRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:findByOwner";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesFindByOwner *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_FindDevicesByOwnerResponse class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.findByOwner";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Device class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.get";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesMetadata

@dynamic deviceId, metadataOwnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_UpdateDeviceMetadataRequest *)object
                metadataOwnerId:(long long)metadataOwnerId
                       deviceId:(long long)deviceId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"deviceId", @"metadataOwnerId"
  ];
  NSString *pathURITemplate = @"v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.metadataOwnerId = metadataOwnerId;
  query.deviceId = deviceId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_DeviceMetadata class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.metadata";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUnclaim

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_UnclaimDeviceRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:unclaim";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUnclaim *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Empty class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.unclaim";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUnclaimAsync

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_UnclaimDevicesRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:unclaimAsync";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUnclaimAsync *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Operation class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.unclaimAsync";
  return query;
}

@end

@implementation GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUpdateMetadataAsync

@dynamic partnerId;

+ (instancetype)queryWithObject:(GTLRAndroidProvisioningPartner_UpdateDeviceMetadataInBatchRequest *)object
                      partnerId:(long long)partnerId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"partnerId" ];
  NSString *pathURITemplate = @"v1/partners/{+partnerId}/devices:updateMetadataAsync";
  GTLRAndroidProvisioningPartnerQuery_PartnersDevicesUpdateMetadataAsync *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.partnerId = partnerId;
  query.expectedObjectClass = [GTLRAndroidProvisioningPartner_Operation class];
  query.loggingName = @"androiddeviceprovisioning.partners.devices.updateMetadataAsync";
  return query;
}

@end
