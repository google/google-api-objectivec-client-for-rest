// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   SAS Portal API (sasportal/v1alpha1)
// Documentation:
//   https://developers.google.com/spectrum-access-system/

#import "GTLRSASPortalQuery.h"

#import "GTLRSASPortalObjects.h"

@implementation GTLRSASPortalQuery

@dynamic fields;

@end

@implementation GTLRSASPortalQuery_CustomersDevicesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_Device *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices";
  GTLRSASPortalQuery_CustomersDevicesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.customers.devices.create";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesCreateSigned

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_CreateSignedDeviceRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices:createSigned";
  GTLRSASPortalQuery_CustomersDevicesCreateSigned *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.customers.devices.createSigned";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersDevicesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.customers.devices.delete";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersDevicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.customers.devices.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices";
  GTLRSASPortalQuery_CustomersDevicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_ListDevicesResponse class];
  query.loggingName = @"sasportal.customers.devices.list";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesMove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_MoveDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:move";
  GTLRSASPortalQuery_CustomersDevicesMove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Operation class];
  query.loggingName = @"sasportal.customers.devices.move";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSASPortal_Device *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersDevicesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.customers.devices.patch";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesSignDevice

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_SignDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:signDevice";
  GTLRSASPortalQuery_CustomersDevicesSignDevice *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.customers.devices.signDevice";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersDevicesUpdateSigned

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_UpdateSignedDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:updateSigned";
  GTLRSASPortalQuery_CustomersDevicesUpdateSigned *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.customers.devices.updateSigned";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Customer class];
  query.loggingName = @"sasportal.customers.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersList

@dynamic pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1alpha1/customers";
  GTLRSASPortalQuery_CustomersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSASPortal_ListCustomersResponse class];
  query.loggingName = @"sasportal.customers.list";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_Node *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/nodes";
  GTLRSASPortalQuery_CustomersNodesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.customers.nodes.create";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersNodesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.customers.nodes.delete";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersNodesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.customers.nodes.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/nodes";
  GTLRSASPortalQuery_CustomersNodesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_ListNodesResponse class];
  query.loggingName = @"sasportal.customers.nodes.list";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesMove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_MoveNodeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:move";
  GTLRSASPortalQuery_CustomersNodesMove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Operation class];
  query.loggingName = @"sasportal.customers.nodes.move";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersNodesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSASPortal_Node *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersNodesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.customers.nodes.patch";
  return query;
}

@end

@implementation GTLRSASPortalQuery_CustomersPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSASPortal_Customer *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_CustomersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Customer class];
  query.loggingName = @"sasportal.customers.patch";
  return query;
}

@end

@implementation GTLRSASPortalQuery_InstallerGenerateSecret

+ (instancetype)queryWithObject:(GTLRSASPortal_GenerateSecretRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha1/installer:generateSecret";
  GTLRSASPortalQuery_InstallerGenerateSecret *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSASPortal_GenerateSecretResponse class];
  query.loggingName = @"sasportal.installer.generateSecret";
  return query;
}

@end

@implementation GTLRSASPortalQuery_InstallerValidate

+ (instancetype)queryWithObject:(GTLRSASPortal_ValidateInstallerRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha1/installer:validate";
  GTLRSASPortalQuery_InstallerValidate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSASPortal_ValidateInstallerResponse class];
  query.loggingName = @"sasportal.installer.validate";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_Device *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices";
  GTLRSASPortalQuery_NodesDevicesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.nodes.devices.create";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesCreateSigned

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_CreateSignedDeviceRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices:createSigned";
  GTLRSASPortalQuery_NodesDevicesCreateSigned *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.nodes.devices.createSigned";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesDevicesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.nodes.devices.delete";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesDevicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.nodes.devices.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/devices";
  GTLRSASPortalQuery_NodesDevicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_ListDevicesResponse class];
  query.loggingName = @"sasportal.nodes.devices.list";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesMove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_MoveDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:move";
  GTLRSASPortalQuery_NodesDevicesMove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Operation class];
  query.loggingName = @"sasportal.nodes.devices.move";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSASPortal_Device *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesDevicesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.nodes.devices.patch";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesSignDevice

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_SignDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:signDevice";
  GTLRSASPortalQuery_NodesDevicesSignDevice *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.nodes.devices.signDevice";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesDevicesUpdateSigned

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_UpdateSignedDeviceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:updateSigned";
  GTLRSASPortalQuery_NodesDevicesUpdateSigned *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Device class];
  query.loggingName = @"sasportal.nodes.devices.updateSigned";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSASPortal_Node *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/nodes";
  GTLRSASPortalQuery_NodesNodesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.nodes.nodes.create";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesNodesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Empty class];
  query.loggingName = @"sasportal.nodes.nodes.delete";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesNodesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.nodes.nodes.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/nodes";
  GTLRSASPortalQuery_NodesNodesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSASPortal_ListNodesResponse class];
  query.loggingName = @"sasportal.nodes.nodes.list";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesMove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSASPortal_MoveNodeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:move";
  GTLRSASPortalQuery_NodesNodesMove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Operation class];
  query.loggingName = @"sasportal.nodes.nodes.move";
  return query;
}

@end

@implementation GTLRSASPortalQuery_NodesNodesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSASPortal_Node *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRSASPortalQuery_NodesNodesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSASPortal_Node class];
  query.loggingName = @"sasportal.nodes.nodes.patch";
  return query;
}

@end

@implementation GTLRSASPortalQuery_PoliciesGet

+ (instancetype)queryWithObject:(GTLRSASPortal_GetPolicyRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha1/policies:get";
  GTLRSASPortalQuery_PoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSASPortal_Policy class];
  query.loggingName = @"sasportal.policies.get";
  return query;
}

@end

@implementation GTLRSASPortalQuery_PoliciesSet

+ (instancetype)queryWithObject:(GTLRSASPortal_SetPolicyRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha1/policies:set";
  GTLRSASPortalQuery_PoliciesSet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSASPortal_Policy class];
  query.loggingName = @"sasportal.policies.set";
  return query;
}

@end

@implementation GTLRSASPortalQuery_PoliciesTest

+ (instancetype)queryWithObject:(GTLRSASPortal_TestPermissionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha1/policies:test";
  GTLRSASPortalQuery_PoliciesTest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSASPortal_TestPermissionsResponse class];
  query.loggingName = @"sasportal.policies.test";
  return query;
}

@end
