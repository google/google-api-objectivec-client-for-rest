// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Management API (servicemanagement/v1)
// Description:
//   Google Service Management allows service producers to publish their
//   services on Google Cloud Platform so that they can be discovered and used
//   by service consumers.
// Documentation:
//   https://cloud.google.com/service-management/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRServiceManagement_DisableServiceRequest;
@class GTLRServiceManagement_EnableServiceRequest;
@class GTLRServiceManagement_GenerateConfigReportRequest;
@class GTLRServiceManagement_GetIamPolicyRequest;
@class GTLRServiceManagement_ManagedService;
@class GTLRServiceManagement_Rollout;
@class GTLRServiceManagement_Service;
@class GTLRServiceManagement_SetIamPolicyRequest;
@class GTLRServiceManagement_SubmitConfigSourceRequest;
@class GTLRServiceManagement_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/** Value: "BASIC" */
GTLR_EXTERN NSString * const kGTLRServiceManagementViewBasic;
/** Value: "FULL" */
GTLR_EXTERN NSString * const kGTLRServiceManagementViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Service Management query classes.
 */
@interface GTLRServiceManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: servicemanagement.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_OperationsGet : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRServiceManagementQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists service operations that match the specified filter in the request.
 *
 *  Method: servicemanagement.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_OperationsList : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForOperationsList]

/**
 *  A string for filtering Operations.
 *  The following filter fields are supported&#58;
 *  * serviceName&#58; Required. Only `=` operator is allowed.
 *  * startTime&#58; The time this job was started, in ISO 8601 format.
 *  Allowed operators are `>=`, `>`, `<=`, and `<`.
 *  * status&#58; Can be `done`, `in_progress`, or `failed`. Allowed
 *  operators are `=`, and `!=`.
 *  Filter expression supports conjunction (AND) and disjunction (OR)
 *  logical operators. However, the serviceName restriction must be at the
 *  top-level and can only be combined with other restrictions via the AND
 *  logical operator.
 *  Examples&#58;
 *  * `serviceName={some-service}.googleapis.com`
 *  * `serviceName={some-service}.googleapis.com AND startTime>="2017-02-01"`
 *  * `serviceName={some-service}.googleapis.com AND status=done`
 *  * `serviceName={some-service}.googleapis.com AND (status=done OR
 *  startTime>="2017-02-01")`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Not used. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of operations to return. If unspecified, defaults to
 *  50. The maximum value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRServiceManagement_ListOperationsResponse.
 *
 *  Lists service operations that match the specified filter in the request.
 *
 *  @return GTLRServiceManagementQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new service configuration (version) for a managed service.
 *  This method only stores the service configuration. To roll out the service
 *  configuration to backend systems please call
 *  CreateServiceRollout.
 *  Only the 100 most recent service configurations and ones referenced by
 *  existing rollouts are kept for each service. The rest will be deleted
 *  eventually.
 *
 *  Method: servicemanagement.services.configs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConfigsCreate : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConfigsCreateWithObject:serviceName:]

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Creates a new service configuration (version) for a managed service.
 *  This method only stores the service configuration. To roll out the service
 *  configuration to backend systems please call
 *  CreateServiceRollout.
 *  Only the 100 most recent service configurations and ones referenced by
 *  existing rollouts are kept for each service. The rest will be deleted
 *  eventually.
 *
 *  @param object The @c GTLRServiceManagement_Service to include in the query.
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_Service *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration (version) for a managed service.
 *
 *  Method: servicemanagement.services.configs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConfigsGet : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConfigsGetWithserviceName:configId:]

/**
 *  The id of the service configuration resource.
 *  This field must be specified for the server to return all fields, including
 *  `SourceInfo`.
 */
@property(nonatomic, copy, nullable) NSString *configId;

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Specifies which parts of the Service Config should be returned in the
 *  response.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceManagementViewBasic Value "BASIC"
 *    @arg @c kGTLRServiceManagementViewFull Value "FULL"
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Gets a service configuration (version) for a managed service.
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *  @param configId The id of the service configuration resource.
 *    This field must be specified for the server to return all fields,
 *    including
 *    `SourceInfo`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName
                            configId:(NSString *)configId;

@end

/**
 *  Lists the history of the service configuration for a managed service,
 *  from the newest to the oldest.
 *
 *  Method: servicemanagement.services.configs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConfigsList : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConfigsListWithserviceName:]

/** The max number of items to include in the response list. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ListServiceConfigsResponse.
 *
 *  Lists the history of the service configuration for a managed service,
 *  from the newest to the oldest.
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Creates a new service configuration (version) for a managed service based
 *  on
 *  user-supplied configuration source files (for example: OpenAPI
 *  Specification). This method stores the source configurations as well as the
 *  generated service configuration. To rollout the service configuration to
 *  other services,
 *  please call CreateServiceRollout.
 *  Only the 100 most recent configuration sources and ones referenced by
 *  existing service configurtions are kept for each service. The rest will be
 *  deleted eventually.
 *  Operation<response: SubmitConfigSourceResponse>
 *
 *  Method: servicemanagement.services.configs.submit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConfigsSubmit : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConfigsSubmitWithObject:serviceName:]

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new service configuration (version) for a managed service based
 *  on
 *  user-supplied configuration source files (for example: OpenAPI
 *  Specification). This method stores the source configurations as well as the
 *  generated service configuration. To rollout the service configuration to
 *  other services,
 *  please call CreateServiceRollout.
 *  Only the 100 most recent configuration sources and ones referenced by
 *  existing service configurtions are kept for each service. The rest will be
 *  deleted eventually.
 *  Operation<response: SubmitConfigSourceResponse>
 *
 *  @param object The @c GTLRServiceManagement_SubmitConfigSourceRequest to
 *    include in the query.
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsSubmit
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SubmitConfigSourceRequest *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  Method: servicemanagement.services.consumers.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConsumersGetIamPolicy : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConsumersGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  @param object The @c GTLRServiceManagement_GetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  Method: servicemanagement.services.consumers.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConsumersSetIamPolicy : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConsumersSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  @param object The @c GTLRServiceManagement_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  Method: servicemanagement.services.consumers.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConsumersTestIamPermissions : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesConsumersTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  @param object The @c GTLRServiceManagement_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new managed service.
 *  Please note one producer project can own no more than 20 services.
 *  Operation<response: ManagedService>
 *
 *  Method: servicemanagement.services.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesCreate : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesCreateWithObject:]

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new managed service.
 *  Please note one producer project can own no more than 20 services.
 *  Operation<response: ManagedService>
 *
 *  @param object The @c GTLRServiceManagement_ManagedService to include in the
 *    query.
 *
 *  @return GTLRServiceManagementQuery_ServicesCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_ManagedService *)object;

@end

/**
 *  Deletes a managed service. This method will change the service to the
 *  `Soft-Delete` state for 30 days. Within this period, service producers may
 *  call UndeleteService to restore the service.
 *  After 30 days, the service will be permanently deleted.
 *  Operation<response: google.protobuf.Empty>
 *
 *  Method: servicemanagement.services.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesDelete : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesDeleteWithserviceName:]

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Deletes a managed service. This method will change the service to the
 *  `Soft-Delete` state for 30 days. Within this period, service producers may
 *  call UndeleteService to restore the service.
 *  After 30 days, the service will be permanently deleted.
 *  Operation<response: google.protobuf.Empty>
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesDelete
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Disables a service for a project, so it can no longer be
 *  be used for the project. It prevents accidental usage that may cause
 *  unexpected billing charges or security leaks.
 *  Operation<response: DisableServiceResponse>
 *
 *  Method: servicemanagement.services.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesDisable : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesDisableWithObject:serviceName:]

/**
 *  Name of the service to disable. Specifying an unknown service name
 *  will cause the request to fail.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Disables a service for a project, so it can no longer be
 *  be used for the project. It prevents accidental usage that may cause
 *  unexpected billing charges or security leaks.
 *  Operation<response: DisableServiceResponse>
 *
 *  @param object The @c GTLRServiceManagement_DisableServiceRequest to include
 *    in the query.
 *  @param serviceName Name of the service to disable. Specifying an unknown
 *    service name
 *    will cause the request to fail.
 *
 *  @return GTLRServiceManagementQuery_ServicesDisable
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_DisableServiceRequest *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Enables a service for a project, so it can be used
 *  for the project. See
 *  [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for
 *  more information.
 *  Operation<response: EnableServiceResponse>
 *
 *  Method: servicemanagement.services.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesEnable : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesEnableWithObject:serviceName:]

/**
 *  Name of the service to enable. Specifying an unknown service name will
 *  cause the request to fail.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Enables a service for a project, so it can be used
 *  for the project. See
 *  [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for
 *  more information.
 *  Operation<response: EnableServiceResponse>
 *
 *  @param object The @c GTLRServiceManagement_EnableServiceRequest to include
 *    in the query.
 *  @param serviceName Name of the service to enable. Specifying an unknown
 *    service name will
 *    cause the request to fail.
 *
 *  @return GTLRServiceManagementQuery_ServicesEnable
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_EnableServiceRequest *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Generates and returns a report (errors, warnings and changes from
 *  existing configurations) associated with
 *  GenerateConfigReportRequest.new_value
 *  If GenerateConfigReportRequest.old_value is specified,
 *  GenerateConfigReportRequest will contain a single ChangeReport based on the
 *  comparison between GenerateConfigReportRequest.new_value and
 *  GenerateConfigReportRequest.old_value.
 *  If GenerateConfigReportRequest.old_value is not specified, this method
 *  will compare GenerateConfigReportRequest.new_value with the last pushed
 *  service configuration.
 *
 *  Method: servicemanagement.services.generateConfigReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesGenerateConfigReport : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesGenerateConfigReportWithObject:]

/**
 *  Fetches a @c GTLRServiceManagement_GenerateConfigReportResponse.
 *
 *  Generates and returns a report (errors, warnings and changes from
 *  existing configurations) associated with
 *  GenerateConfigReportRequest.new_value
 *  If GenerateConfigReportRequest.old_value is specified,
 *  GenerateConfigReportRequest will contain a single ChangeReport based on the
 *  comparison between GenerateConfigReportRequest.new_value and
 *  GenerateConfigReportRequest.old_value.
 *  If GenerateConfigReportRequest.old_value is not specified, this method
 *  will compare GenerateConfigReportRequest.new_value with the last pushed
 *  service configuration.
 *
 *  @param object The @c GTLRServiceManagement_GenerateConfigReportRequest to
 *    include in the query.
 *
 *  @return GTLRServiceManagementQuery_ServicesGenerateConfigReport
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GenerateConfigReportRequest *)object;

@end

/**
 *  Gets a managed service. Authentication is required unless the service is
 *  public.
 *
 *  Method: servicemanagement.services.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGet : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesGetWithserviceName:]

/**
 *  The name of the service. See the `ServiceManager` overview for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ManagedService.
 *
 *  Gets a managed service. Authentication is required unless the service is
 *  public.
 *
 *  @param serviceName The name of the service. See the `ServiceManager`
 *    overview for naming
 *    requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration (version) for a managed service.
 *
 *  Method: servicemanagement.services.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGetConfig : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesGetConfigWithserviceName:]

/**
 *  The id of the service configuration resource.
 *  This field must be specified for the server to return all fields, including
 *  `SourceInfo`.
 */
@property(nonatomic, copy, nullable) NSString *configId;

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Specifies which parts of the Service Config should be returned in the
 *  response.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceManagementViewBasic Value "BASIC"
 *    @arg @c kGTLRServiceManagementViewFull Value "FULL"
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Gets a service configuration (version) for a managed service.
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesGetConfig
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  Method: servicemanagement.services.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGetIamPolicy : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  @param object The @c GTLRServiceManagement_GetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists managed services.
 *  Returns all public services. For authenticated users, also returns all
 *  services the calling user has "servicemanagement.services.get" permission
 *  for.
 *  **BETA:** If the caller specifies the `consumer_id`, it returns only the
 *  services enabled on the consumer. The `consumer_id` must have the format
 *  of "project:{PROJECT-ID}".
 *
 *  Method: servicemanagement.services.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesList : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesList]

/**
 *  Include services consumed by the specified consumer.
 *  The Google Service Management implementation accepts the following
 *  forms:
 *  - project:<project_id>
 */
@property(nonatomic, copy, nullable) NSString *consumerId;

/** Requested size of the next page of data. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token identifying which result to start with; returned by a previous list
 *  call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Include services produced by the specified project. */
@property(nonatomic, copy, nullable) NSString *producerProjectId;

/**
 *  Fetches a @c GTLRServiceManagement_ListServicesResponse.
 *
 *  Lists managed services.
 *  Returns all public services. For authenticated users, also returns all
 *  services the calling user has "servicemanagement.services.get" permission
 *  for.
 *  **BETA:** If the caller specifies the `consumer_id`, it returns only the
 *  services enabled on the consumer. The `consumer_id` must have the format
 *  of "project:{PROJECT-ID}".
 *
 *  @return GTLRServiceManagementQuery_ServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new service configuration rollout. Based on rollout, the
 *  Google Service Management will roll out the service configurations to
 *  different backend services. For example, the logging configuration will be
 *  pushed to Google Cloud Logging.
 *  Please note that any previous pending and running Rollouts and associated
 *  Operations will be automatically cancelled so that the latest Rollout will
 *  not be blocked by previous Rollouts.
 *  Only the 100 most recent (in any state) and the last 10 successful (if not
 *  already part of the set of 100 most recent) rollouts are kept for each
 *  service. The rest will be deleted eventually.
 *  Operation<response: Rollout>
 *
 *  Method: servicemanagement.services.rollouts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsCreate : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesRolloutsCreateWithObject:serviceName:]

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new service configuration rollout. Based on rollout, the
 *  Google Service Management will roll out the service configurations to
 *  different backend services. For example, the logging configuration will be
 *  pushed to Google Cloud Logging.
 *  Please note that any previous pending and running Rollouts and associated
 *  Operations will be automatically cancelled so that the latest Rollout will
 *  not be blocked by previous Rollouts.
 *  Only the 100 most recent (in any state) and the last 10 successful (if not
 *  already part of the set of 100 most recent) rollouts are kept for each
 *  service. The rest will be deleted eventually.
 *  Operation<response: Rollout>
 *
 *  @param object The @c GTLRServiceManagement_Rollout to include in the query.
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_Rollout *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration rollout.
 *
 *  Method: servicemanagement.services.rollouts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsGet : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesRolloutsGetWithserviceName:rolloutId:]

/** The id of the rollout resource. */
@property(nonatomic, copy, nullable) NSString *rolloutId;

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Rollout.
 *
 *  Gets a service configuration rollout.
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *  @param rolloutId The id of the rollout resource.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName
                           rolloutId:(NSString *)rolloutId;

@end

/**
 *  Lists the history of the service configuration rollouts for a managed
 *  service, from the newest to the oldest.
 *
 *  Method: servicemanagement.services.rollouts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsList : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesRolloutsListWithserviceName:]

/**
 *  Use `filter` to return subset of rollouts.
 *  The following filters are supported:
 *  -- To limit the results to only those in
 *  [status](google.api.servicemanagement.v1.RolloutStatus) 'SUCCESS',
 *  use filter='status=SUCCESS'
 *  -- To limit the results to those in
 *  [status](google.api.servicemanagement.v1.RolloutStatus) 'CANCELLED'
 *  or 'FAILED', use filter='status=CANCELLED OR status=FAILED'
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The max number of items to include in the response list. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ListServiceRolloutsResponse.
 *
 *  Lists the history of the service configuration rollouts for a managed
 *  service, from the newest to the oldest.
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  Method: servicemanagement.services.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesSetIamPolicy : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  @param object The @c GTLRServiceManagement_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  Method: servicemanagement.services.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesTestIamPermissions : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *  Note: This operation is designed to be used for building permission-aware
 *  UIs and command-line tools, not for authorization checking. This operation
 *  may "fail open" without warning.
 *
 *  @param object The @c GTLRServiceManagement_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Revives a previously deleted managed service. The method restores the
 *  service using the configuration at the time the service was deleted.
 *  The target service must exist and must have been deleted within the
 *  last 30 days.
 *  Operation<response: UndeleteServiceResponse>
 *
 *  Method: servicemanagement.services.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesUndelete : GTLRServiceManagementQuery
// Previous library name was
//   +[GTLQueryServiceManagement queryForServicesUndeleteWithserviceName:]

/**
 *  The name of the service. See the [overview](/service-management/overview)
 *  for naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Revives a previously deleted managed service. The method restores the
 *  service using the configuration at the time the service was deleted.
 *  The target service must exist and must have been deleted within the
 *  last 30 days.
 *  Operation<response: UndeleteServiceResponse>
 *
 *  @param serviceName The name of the service. See the
 *    [overview](/service-management/overview)
 *    for naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesUndelete
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
