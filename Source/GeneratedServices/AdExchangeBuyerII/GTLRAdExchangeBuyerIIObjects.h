// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Ad Exchange Buyer API II (adexchangebuyer2/v2beta1)
// Description:
//   Accesses the latest features for managing Authorized Buyers accounts,
//   Real-Time Bidding configurations and auction metrics, and Marketplace
//   programmatic deals.
// Documentation:
//   https://developers.google.com/authorized-buyers/apis/reference/rest/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAdExchangeBuyerII_AbsoluteDateRange;
@class GTLRAdExchangeBuyerII_AdSize;
@class GTLRAdExchangeBuyerII_AppContext;
@class GTLRAdExchangeBuyerII_AuctionContext;
@class GTLRAdExchangeBuyerII_BidMetricsRow;
@class GTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow;
@class GTLRAdExchangeBuyerII_Buyer;
@class GTLRAdExchangeBuyerII_CalloutStatusRow;
@class GTLRAdExchangeBuyerII_Client;
@class GTLRAdExchangeBuyerII_ClientUser;
@class GTLRAdExchangeBuyerII_ClientUserInvitation;
@class GTLRAdExchangeBuyerII_ContactInformation;
@class GTLRAdExchangeBuyerII_Correction;
@class GTLRAdExchangeBuyerII_Creative;
@class GTLRAdExchangeBuyerII_CreativeDealAssociation;
@class GTLRAdExchangeBuyerII_CreativeRestrictions;
@class GTLRAdExchangeBuyerII_CreativeSize;
@class GTLRAdExchangeBuyerII_CreativeSpecification;
@class GTLRAdExchangeBuyerII_CreativeStatusRow;
@class GTLRAdExchangeBuyerII_CriteriaTargeting;
@class GTLRAdExchangeBuyerII_Date;
@class GTLRAdExchangeBuyerII_DayPart;
@class GTLRAdExchangeBuyerII_DayPartTargeting;
@class GTLRAdExchangeBuyerII_Deal;
@class GTLRAdExchangeBuyerII_DealPauseStatus;
@class GTLRAdExchangeBuyerII_DealServingMetadata;
@class GTLRAdExchangeBuyerII_DealTerms;
@class GTLRAdExchangeBuyerII_DeliveryControl;
@class GTLRAdExchangeBuyerII_Disapproval;
@class GTLRAdExchangeBuyerII_FilteredBidCreativeRow;
@class GTLRAdExchangeBuyerII_FilteredBidDetailRow;
@class GTLRAdExchangeBuyerII_FilteringStats;
@class GTLRAdExchangeBuyerII_FilterSet;
@class GTLRAdExchangeBuyerII_FirstPartyMobileApplicationTargeting;
@class GTLRAdExchangeBuyerII_FrequencyCap;
@class GTLRAdExchangeBuyerII_GuaranteedFixedPriceTerms;
@class GTLRAdExchangeBuyerII_HtmlContent;
@class GTLRAdExchangeBuyerII_Image;
@class GTLRAdExchangeBuyerII_ImpressionMetricsRow;
@class GTLRAdExchangeBuyerII_InventorySizeTargeting;
@class GTLRAdExchangeBuyerII_LocationContext;
@class GTLRAdExchangeBuyerII_MarketplaceTargeting;
@class GTLRAdExchangeBuyerII_MetricValue;
@class GTLRAdExchangeBuyerII_MobileApplicationTargeting;
@class GTLRAdExchangeBuyerII_Money;
@class GTLRAdExchangeBuyerII_NativeContent;
@class GTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow;
@class GTLRAdExchangeBuyerII_NonGuaranteedAuctionTerms;
@class GTLRAdExchangeBuyerII_NonGuaranteedFixedPriceTerms;
@class GTLRAdExchangeBuyerII_Note;
@class GTLRAdExchangeBuyerII_OperatingSystemTargeting;
@class GTLRAdExchangeBuyerII_PlacementTargeting;
@class GTLRAdExchangeBuyerII_PlatformContext;
@class GTLRAdExchangeBuyerII_Price;
@class GTLRAdExchangeBuyerII_PricePerBuyer;
@class GTLRAdExchangeBuyerII_PrivateData;
@class GTLRAdExchangeBuyerII_Product;
@class GTLRAdExchangeBuyerII_Proposal;
@class GTLRAdExchangeBuyerII_PublisherProfile;
@class GTLRAdExchangeBuyerII_RealtimeTimeRange;
@class GTLRAdExchangeBuyerII_Reason;
@class GTLRAdExchangeBuyerII_RelativeDateRange;
@class GTLRAdExchangeBuyerII_RowDimensions;
@class GTLRAdExchangeBuyerII_SecurityContext;
@class GTLRAdExchangeBuyerII_Seller;
@class GTLRAdExchangeBuyerII_ServingContext;
@class GTLRAdExchangeBuyerII_ServingRestriction;
@class GTLRAdExchangeBuyerII_Size;
@class GTLRAdExchangeBuyerII_TargetingCriteria;
@class GTLRAdExchangeBuyerII_TargetingValue;
@class GTLRAdExchangeBuyerII_TechnologyTargeting;
@class GTLRAdExchangeBuyerII_TimeInterval;
@class GTLRAdExchangeBuyerII_TimeOfDay;
@class GTLRAdExchangeBuyerII_UrlTargeting;
@class GTLRAdExchangeBuyerII_VideoContent;
@class GTLRAdExchangeBuyerII_VideoTargeting;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_AdSize.sizeType

/**
 *  Fluid size (i.e., responsive size) can be resized automatically with the
 *  change of outside environment.
 *
 *  Value: "FLUID"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AdSize_SizeType_Fluid;
/**
 *  Special size to describe an interstitial ad slot.
 *
 *  Value: "INTERSTITIAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AdSize_SizeType_Interstitial;
/**
 *  Native (mobile) ads rendered by the publisher.
 *
 *  Value: "NATIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AdSize_SizeType_Native;
/**
 *  Ad slot with size specified by height and width in pixels.
 *
 *  Value: "PIXEL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AdSize_SizeType_Pixel;
/**
 *  A placeholder for an undefined size type.
 *
 *  Value: "SIZE_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AdSize_SizeType_SizeTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_AppContext.appTypes

/** Value: "NATIVE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AppContext_AppTypes_Native;
/** Value: "WEB" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AppContext_AppTypes_Web;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_AuctionContext.auctionTypes

/** Value: "DIRECT_DEALS" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AuctionContext_AuctionTypes_DirectDeals;
/** Value: "OPEN_AUCTION" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_AuctionContext_AuctionTypes_OpenAuction;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow.status

/**
 *  The response had no bids.
 *
 *  Value: "RESPONSES_WITHOUT_BIDS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBids;
/**
 *  The response had no bids for the specified account, though it may have
 *  included bids on behalf of other accounts.
 *
 *  Value: "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBidsForAccount;
/**
 *  The response had no bids for the specified deal, though it may have
 *  included bids on other deals on behalf of the account to which the deal
 *  belongs.
 *
 *  Value: "RESPONSES_WITHOUT_BIDS_FOR_DEAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBidsForDeal;
/**
 *  A placeholder for an undefined status.
 *  This value will never be returned in responses.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.entityType

/**
 *  An advertiser.
 *
 *  Value: "ADVERTISER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Advertiser;
/**
 *  An advertising agency.
 *
 *  Value: "AGENCY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Agency;
/**
 *  A brand.
 *
 *  Value: "BRAND"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Brand;
/**
 *  A placeholder for an undefined client entity type. Should not be used.
 *
 *  Value: "ENTITY_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_EntityTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.role

/**
 *  Users associated with this client can approve eligible deals
 *  on your behalf. Some deals may still explicitly require publisher
 *  finalization. If this role is not selected, the sponsor buyer
 *  will need to manually approve each of their deals.
 *
 *  Value: "CLIENT_DEAL_APPROVER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealApprover;
/**
 *  Users associated with this client can respond to deal proposals
 *  sent to them by publishers. They can also initiate deal proposals
 *  of their own.
 *
 *  Value: "CLIENT_DEAL_NEGOTIATOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealNegotiator;
/**
 *  Users associated with this client can see publisher deal offers
 *  in the Marketplace.
 *  They can neither negotiate proposals nor approve deals.
 *  If this client is visible to publishers, they can send deal proposals
 *  to this client.
 *
 *  Value: "CLIENT_DEAL_VIEWER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealViewer;
/**
 *  A placeholder for an undefined client role.
 *
 *  Value: "CLIENT_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.status

/**
 *  A client that is currently active.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_Active;
/**
 *  A placeholder for an undefined client status.
 *
 *  Value: "CLIENT_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_ClientStatusUnspecified;
/**
 *  A client that is currently disabled.
 *
 *  Value: "DISABLED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_Disabled;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_ClientUser.status

/**
 *  A user that is currently active.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Active;
/**
 *  A user that is currently disabled.
 *
 *  Value: "DISABLED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Disabled;
/**
 *  A user who was already created but hasn't accepted the invitation yet.
 *
 *  Value: "PENDING"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Pending;
/**
 *  A placeholder for an undefined user status.
 *
 *  Value: "USER_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_UserStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Correction.type

/**
 *  The correction type is unknown. Refer to the details for more information.
 *
 *  Value: "CORRECTION_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_CorrectionTypeUnspecified;
/**
 *  The ad unnecessarily declared the Flash attribute, so the Flash attribute
 *  was removed.
 *
 *  Value: "FLASH_ATTRIBUTE_REMOVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_FlashAttributeRemoved;
/**
 *  The ad was not declared as Flash-free but it did not reference any flash
 *  content, so the Flash-free attribute was added.
 *
 *  Value: "FLASH_FREE_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_FlashFreeAttributeAdded;
/**
 *  The ad was declared as Flash-free but contained Flash, so the Flash-free
 *  attribute was removed.
 *
 *  Value: "FLASH_FREE_ATTRIBUTE_REMOVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_FlashFreeAttributeRemoved;
/**
 *  Properties consistent with In-banner video were found, so an
 *  In-Banner Video attribute was added.
 *
 *  Value: "IN_BANNER_VIDEO_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_InBannerVideoAttributeAdded;
/**
 *  The ad makes calls to the MRAID API so the MRAID attribute was added.
 *
 *  Value: "MRAID_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_MraidAttributeAdded;
/**
 *  The ad did not declare a required creative attribute.
 *  The attribute was added.
 *
 *  Value: "REQUIRED_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_RequiredAttributeAdded;
/**
 *  The ad did not declare a required technology vendor.
 *  The technology vendor was added.
 *
 *  Value: "REQUIRED_VENDOR_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_RequiredVendorAdded;
/**
 *  The ad did not declare the SSL attribute but was SSL-compliant, so the
 *  SSL attribute was added.
 *
 *  Value: "SSL_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_SslAttributeAdded;
/**
 *  The ad had the SSL attribute declared but was not SSL-compliant.
 *  The SSL attribute was removed.
 *
 *  Value: "SSL_ATTRIBUTE_REMOVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_SslAttributeRemoved;
/**
 *  The ad's declared vendors did not match the vendors that were detected.
 *  The detected vendors were added.
 *
 *  Value: "VENDOR_IDS_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_VendorIdsAdded;
/**
 *  The ad contains video content.
 *
 *  Value: "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Correction_Type_VideoInSnippetAttributeAdded;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Creative.attributes

/** Value: "ATTRIBUTE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_AttributeUnspecified;
/** Value: "CREATIVE_TYPE_HTML" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_CreativeTypeHtml;
/** Value: "CREATIVE_TYPE_VAST_VIDEO" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_CreativeTypeVastVideo;
/** Value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingActionRolloverToExpand;
/** Value: "EXPANDING_DIRECTION_ANY_DIAGONAL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionAnyDiagonal;
/** Value: "EXPANDING_DIRECTION_DOWN" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionDown;
/** Value: "EXPANDING_DIRECTION_DOWN_LEFT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionDownLeft;
/** Value: "EXPANDING_DIRECTION_DOWN_RIGHT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionDownRight;
/** Value: "EXPANDING_DIRECTION_LEFT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionLeft;
/** Value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionLeftOrRight;
/** Value: "EXPANDING_DIRECTION_NONE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionNone;
/** Value: "EXPANDING_DIRECTION_RIGHT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionRight;
/** Value: "EXPANDING_DIRECTION_UP" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionUp;
/** Value: "EXPANDING_DIRECTION_UP_LEFT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionUpLeft;
/** Value: "EXPANDING_DIRECTION_UP_OR_DOWN" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionUpOrDown;
/** Value: "EXPANDING_DIRECTION_UP_RIGHT" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_ExpandingDirectionUpRight;
/** Value: "IN_BANNER_VIDEO" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_InBannerVideo;
/** Value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_InstreamVastVideoTypeVpaidFlash;
/** Value: "IS_COOKIE_TARGETED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_IsCookieTargeted;
/** Value: "IS_TAGGED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_IsTagged;
/** Value: "IS_USER_INTEREST_TARGETED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_IsUserInterestTargeted;
/** Value: "NATIVE_ELIGIBILITY_ELIGIBLE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_NativeEligibilityEligible;
/** Value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_NativeEligibilityNotEligible;
/** Value: "OMSDK_1_0" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_Omsdk10;
/** Value: "RENDERING_SIZELESS_ADX" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RenderingSizelessAdx;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeFlash;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeHtml5;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeInterstitial;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeMraid;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeNonSsl;
/** Value: "RICH_MEDIA_CAPABILITY_TYPE_SSL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_Attributes_RichMediaCapabilityTypeSsl;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Creative.dealsStatus

/**
 *  The creative has been approved.
 *
 *  Value: "APPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_DealsStatus_Approved;
/**
 *  The creative has been conditionally approved.
 *  See serving_restrictions for details.
 *
 *  Value: "CONDITIONALLY_APPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_DealsStatus_ConditionallyApproved;
/**
 *  The creative has been disapproved.
 *
 *  Value: "DISAPPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_DealsStatus_Disapproved;
/**
 *  The creative has not been checked.
 *
 *  Value: "NOT_CHECKED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_DealsStatus_NotChecked;
/**
 *  The status is unknown.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_DealsStatus_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Creative.openAuctionStatus

/**
 *  The creative has been approved.
 *
 *  Value: "APPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_Approved;
/**
 *  The creative has been conditionally approved.
 *  See serving_restrictions for details.
 *
 *  Value: "CONDITIONALLY_APPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_ConditionallyApproved;
/**
 *  The creative has been disapproved.
 *
 *  Value: "DISAPPROVED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_Disapproved;
/**
 *  The creative has not been checked.
 *
 *  Value: "NOT_CHECKED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_NotChecked;
/**
 *  The status is unknown.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Creative.restrictedCategories

/** Value: "ALCOHOL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_RestrictedCategories_Alcohol;
/** Value: "NO_RESTRICTED_CATEGORIES" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Creative_RestrictedCategories_NoRestrictedCategories;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeRestrictions.creativeFormat

/**
 *  A placeholder for an undefined creative format.
 *
 *  Value: "CREATIVE_FORMAT_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_CreativeFormatUnspecified;
/**
 *  A creative that will be displayed in environments such as a browser.
 *
 *  Value: "DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_Display;
/**
 *  A video creative that will be displayed in environments such as a video
 *  player.
 *
 *  Value: "VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_Video;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeRestrictions.skippableAdType

/**
 *  This video ad can be skipped after 5 seconds, and is counted as
 *  engaged view after 30 seconds. The creative is hosted on
 *  YouTube only, and viewcount of the YouTube video increments
 *  after the engaged view.
 *
 *  Value: "INSTREAM_SELECT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_InstreamSelect;
/**
 *  This video ad is not skippable.
 *
 *  Value: "NOT_SKIPPABLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_NotSkippable;
/**
 *  This video ad can be skipped after 5 seconds.
 *
 *  Value: "SKIPPABLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_Skippable;
/**
 *  A placeholder for an undefined skippable ad type.
 *
 *  Value: "SKIPPABLE_AD_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_SkippableAdTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeSize.allowedFormats

/** Value: "AUDIO" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_AllowedFormats_Audio;
/** Value: "UNKNOWN" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_AllowedFormats_Unknown;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeSize.creativeSizeType

/**
 *  A placeholder for an undefined creative size type.
 *
 *  Value: "CREATIVE_SIZE_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_CreativeSizeTypeUnspecified;
/**
 *  The creative is an interstitial creative.
 *
 *  Value: "INTERSTITIAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Interstitial;
/**
 *  The creative is a native (mobile) creative.
 *
 *  Value: "NATIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Native;
/**
 *  The creative is a regular desktop creative.
 *
 *  Value: "REGULAR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Regular;
/**
 *  The creative is a video creative.
 *
 *  Value: "VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Video;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeSize.nativeTemplate

/**
 *  The creative is linked to native app install ad.
 *
 *  Value: "NATIVE_APP_INSTALL_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeAppInstallAd;
/**
 *  The creative is linked to native content ad.
 *
 *  Value: "NATIVE_CONTENT_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeContentAd;
/**
 *  The creative is linked to native video app install ad.
 *
 *  Value: "NATIVE_VIDEO_APP_INSTALL_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeVideoAppInstallAd;
/**
 *  The creative is linked to native video content ad.
 *
 *  Value: "NATIVE_VIDEO_CONTENT_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeVideoContentAd;
/**
 *  A placeholder for an undefined native template.
 *
 *  Value: "UNKNOWN_NATIVE_TEMPLATE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_UnknownNativeTemplate;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_CreativeSize.skippableAdType

/**
 *  This video ad can be skipped after 5 seconds.
 *
 *  Value: "GENERIC"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_Generic;
/**
 *  This video ad can be skipped after 5 seconds, and count as
 *  engaged view after 30 seconds. The creative is hosted on
 *  YouTube only, and viewcount of the YouTube video increments
 *  after the engaged view.
 *
 *  Value: "INSTREAM_SELECT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_InstreamSelect;
/**
 *  This video ad is not skippable.
 *
 *  Value: "NOT_SKIPPABLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_NotSkippable;
/**
 *  A placeholder for an undefined skippable ad type.
 *
 *  Value: "SKIPPABLE_AD_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_SkippableAdTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DayPart.dayOfWeek

/**
 *  A placeholder for when the day of the week is not specified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Wednesday;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DayPartTargeting.timeZoneType

/**
 *  Use publisher's time zone setting.
 *
 *  Value: "PUBLISHER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_Publisher;
/**
 *  A placeholder for an undefined time zone source.
 *
 *  Value: "TIME_ZONE_SOURCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_TimeZoneSourceUnspecified;
/**
 *  Use the user's time zone setting.
 *
 *  Value: "USER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_User;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Deal.creativePreApprovalPolicy

/**
 *  A placeholder for an undefined creative pre-approval policy.
 *
 *  Value: "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_CreativePreApprovalPolicyUnspecified;
/**
 *  The seller does not need to approve each creative before it can serve.
 *
 *  Value: "SELLER_PRE_APPROVAL_NOT_REQUIRED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_SellerPreApprovalNotRequired;
/**
 *  The seller needs to approve each creative before it can serve.
 *
 *  Value: "SELLER_PRE_APPROVAL_REQUIRED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_SellerPreApprovalRequired;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Deal.creativeSafeFrameCompatibility

/**
 *  The creatives need to be compatible with the safe frame option.
 *
 *  Value: "COMPATIBLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_Compatible;
/**
 *  A placeholder for an undefined creative safe-frame compatibility.
 *
 *  Value: "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_CreativeSafeFrameCompatibilityUnspecified;
/**
 *  The creatives can be incompatible with the safe frame option.
 *
 *  Value: "INCOMPATIBLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_Incompatible;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Deal.programmaticCreativeSource

/**
 *  The advertiser provides the creatives.
 *
 *  Value: "ADVERTISER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_Advertiser;
/**
 *  A placeholder for an undefined programmatic creative source.
 *
 *  Value: "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_ProgrammaticCreativeSourceUnspecified;
/**
 *  The publisher provides the creatives to be served.
 *
 *  Value: "PUBLISHER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_Publisher;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Deal.syndicationProduct

/**
 *  This typically represents a web page.
 *
 *  Value: "CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Content;
/**
 *  This represents ads shown within games.
 *
 *  Value: "GAMES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Games;
/**
 *  This represents a mobile property.
 *
 *  Value: "MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Mobile;
/**
 *  A placeholder for an undefined syndication product.
 *
 *  Value: "SYNDICATION_PRODUCT_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_SyndicationProductUnspecified;
/**
 *  This represents video ad formats.
 *
 *  Value: "VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Video;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DealPauseStatus.firstPausedBy

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_Seller;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DealTerms.brandingType

/**
 *  Full URL is included in bid requests.
 *
 *  Value: "BRANDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealTerms_BrandingType_Branded;
/**
 *  A placeholder for an undefined branding type.
 *
 *  Value: "BRANDING_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealTerms_BrandingType_BrandingTypeUnspecified;
/**
 *  A TopLevelDomain or masked URL is sent in bid requests
 *  rather than the full one.
 *
 *  Value: "SEMI_TRANSPARENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DealTerms_BrandingType_SemiTransparent;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DeliveryControl.creativeBlockingLevel

/**
 *  The Ad Exchange policy blocking rules will be applied.
 *
 *  Value: "ADX_POLICY_BLOCKING_ONLY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_AdxPolicyBlockingOnly;
/**
 *  A placeholder for an undefined creative blocking level.
 *
 *  Value: "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_CreativeBlockingLevelUnspecified;
/**
 *  Publisher blocking rules will be applied.
 *
 *  Value: "PUBLISHER_BLOCKING_RULES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_PublisherBlockingRules;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_DeliveryControl.deliveryRateType

/**
 *  Impressions are served as fast as possible.
 *
 *  Value: "AS_FAST_AS_POSSIBLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_AsFastAsPossible;
/**
 *  A placeholder for an undefined delivery rate type.
 *
 *  Value: "DELIVERY_RATE_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_DeliveryRateTypeUnspecified;
/**
 *  Impressions are served uniformly over the life of the deal.
 *
 *  Value: "EVENLY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_Evenly;
/**
 *  Impressions are served front-loaded.
 *
 *  Value: "FRONT_LOADED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_FrontLoaded;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Disapproval.reason

/**
 *  Unacceptable content: Abortion.
 *
 *  Value: "ABORTION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_Abortion;
/**
 *  The ad size when rendered does not match the declaration.
 *
 *  Value: "AD_SIZE_DOES_NOT_MATCH_AD_SLOT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_AdSizeDoesNotMatchAdSlot;
/**
 *  The ad contains adult images or video content.
 *
 *  Value: "ADULT_IMAGE_OR_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_AdultImageOrVideo;
/**
 *  The ad automatically redirects to the destination site without a click,
 *  or reports a click when none were made.
 *
 *  Value: "AUTOMATED_AD_CLICKING"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_AutomatedAdClicking;
/**
 *  Bad URL: Legal disapproval.
 *
 *  Value: "BAD_URL_LEGAL_DISAPPROVAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_BadUrlLegalDisapproval;
/**
 *  Promotes services related to bail bonds.
 *
 *  Value: "BAIL_BONDS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_BailBonds;
/**
 *  The ad serves a blank.
 *
 *  Value: "BLANK_CREATIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_BlankCreative;
/**
 *  The click through URL doesn't work properly.
 *
 *  Value: "BROKEN_URL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_BrokenUrl;
/**
 *  Click to download must link to an app.
 *
 *  Value: "CLICK_TO_DOWNLOAD_NOT_AN_APP"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ClickToDownloadNotAnApp;
/**
 *  Clinical trial recruitment.
 *
 *  Value: "CLINICAL_TRIAL_RECRUITMENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ClinicalTrialRecruitment;
/**
 *  Unacceptable content: Birth control.
 *
 *  Value: "CONTRACEPTIVES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_Contraceptives;
/**
 *  The ad promotes counterfeit designer goods.
 *
 *  Value: "COUNTERFEIT_DESIGNER_GOODS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_CounterfeitDesignerGoods;
/**
 *  The ad promotes recreational drugs/services & related equipment.
 *
 *  Value: "DANGEROUS_PRODUCTS_DRUGS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsDrugs;
/**
 *  The ad promotes explosives.
 *
 *  Value: "DANGEROUS_PRODUCTS_EXPLOSIVES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsExplosives;
/**
 *  The ad promotes guns & parts.
 *
 *  Value: "DANGEROUS_PRODUCTS_GUNS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsGuns;
/**
 *  The ad promotes dangerous knives.
 *
 *  Value: "DANGEROUS_PRODUCTS_KNIVES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsKnives;
/**
 *  The ad promotes tobacco products/services & related equipment.
 *
 *  Value: "DANGEROUS_PRODUCTS_TOBACCO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsTobacco;
/**
 *  The ad promotes weapons.
 *
 *  Value: "DANGEROUS_PRODUCTS_WEAPONS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsWeapons;
/**
 *  Unacceptable landing page.
 *
 *  Value: "DESTINATION_EXPERIENCE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationExperience;
/**
 *  Broken back button.
 *
 *  Value: "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationSiteDoesNotAllowGoingBack;
/**
 *  The destination site's robot.txt file prevents it from being crawled.
 *
 *  Value: "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationSiteNotCrawlableRobotsTxt;
/**
 *  Bad Destination URL: Site Not Crawlable.
 *
 *  Value: "DESTINATION_URL_SITE_NOT_CRAWLABLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationUrlSiteNotCrawlable;
/**
 *  The ad uses rotation, but not all destination URLs were declared.
 *
 *  Value: "DESTINATION_URLS_UNDECLARED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationUrlsUndeclared;
/**
 *  Rich Media - Direct Download in Ad (ex. PDF download).
 *
 *  Value: "DIRECT_DOWNLOAD_IN_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DirectDownloadInAd;
/**
 *  Dynamic DNS at Destination URL.
 *
 *  Value: "DYNAMIC_DNS_AT_DESTINATION_URL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DynamicDnsAtDestinationUrl;
/**
 *  The promotion is unnecessarily difficult to navigate.
 *
 *  Value: "DYSFUNCTIONAL_PROMOTION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_DysfunctionalPromotion;
/**
 *  Products & Services that enable dishonest behavior.
 *
 *  Value: "ENABLING_DISHONEST_BEHAVIOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_EnablingDishonestBehavior;
/**
 *  The ad does not expand in a supported direction.
 *
 *  Value: "EXPANDABLE_DIRECTION_NOT_SUPPORTED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableDirectionNotSupported;
/**
 *  There was an issue with the expandable ad.
 *
 *  Value: "EXPANDABLE_FUNCTIONALITY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableFunctionality;
/**
 *  The declared expanding direction does not match the actual direction.
 *
 *  Value: "EXPANDABLE_INCORRECT_DIRECTION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableIncorrectDirection;
/**
 *  The ad uses an expandable vendor that is not supported.
 *
 *  Value: "EXPANDABLE_INVALID_VENDOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableInvalidVendor;
/**
 *  The creative attempts to set cookies from a fourth party that is not
 *  certified.
 *
 *  Value: "FOURTH_PARTY_BROWSER_COOKIES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_FourthPartyBrowserCookies;
/**
 *  The ad tries to gain an unfair traffic advantage.
 *
 *  Value: "GAINING_AN_UNFAIR_ADVANTAGE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_GainingAnUnfairAdvantage;
/**
 *  The ad tries to circumvent Google's advertising systems.
 *
 *  Value: "GAMING_THE_GOOGLE_NETWORK"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_GamingTheGoogleNetwork;
/**
 *  The ad contains text that is unclear or inaccurate.
 *
 *  Value: "INACCURATE_AD_TEXT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InaccurateAdText;
/**
 *  A review extension must be an accurate review.
 *
 *  Value: "INACCURATE_REVIEW_EXTENSION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InaccurateReviewExtension;
/**
 *  Offensive or inappropriate content.
 *
 *  Value: "INAPPROPRIATE_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InappropriateContent;
/**
 *  The ad technology declaration is not accurate.
 *
 *  Value: "INCORRECT_AD_TECHNOLOGY_DECLARATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectAdTechnologyDeclaration;
/**
 *  The actual destination URL does not match the declared destination URL.
 *
 *  Value: "INCORRECT_DESTINATION_URL_DECLARATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectDestinationUrlDeclaration;
/**
 *  Incorrect Image Layout.
 *
 *  Value: "INCORRECT_IMAGE_LAYOUT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectImageLayout;
/**
 *  The ad targets consumers using remarketing lists and/or collects
 *  data for subsequent use in retargeting, but does not correctly declare
 *  that use.
 *
 *  Value: "INCORRECT_REMARKETING_DECLARATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectRemarketingDeclaration;
/**
 *  Invalid bidding method.
 *
 *  Value: "INVALID_BIDDING_METHOD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidBiddingMethod;
/**
 *  The ad makes a fourth party call to an unapproved vendor.
 *
 *  Value: "INVALID_FOURTH_PARTY_CALL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidFourthPartyCall;
/**
 *  Violation of Google's policy for interest-based ads.
 *
 *  Value: "INVALID_INTEREST_BASED_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidInterestBasedAd;
/**
 *  Violation of the remarketing list policy.
 *
 *  Value: "INVALID_REMARKETING_LIST_USAGE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidRemarketingListUsage;
/**
 *  The creative does not follow policies set for the RTB protocol.
 *
 *  Value: "INVALID_RTB_PROTOCOL_USAGE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidRtbProtocolUsage;
/**
 *  SSL support declared but not working correctly.
 *
 *  Value: "INVALID_SSL_DECLARATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidSslDeclaration;
/**
 *  The ad uses URL protocols that do not exist or are not allowed on AdX.
 *
 *  Value: "INVALID_URL_PROTOCOL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidUrlProtocol;
/**
 *  Irrelevant Image / Video.
 *
 *  Value: "IRRELEVANT_IMAGE_OR_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_IrrelevantImageOrVideo;
/**
 *  Unacceptable content: Korean healthcare.
 *
 *  Value: "KCDSP_REGISTRATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_KcdspRegistration;
/**
 *  The landing page does not conform to Ad Exchange policy.
 *
 *  Value: "LANDING_PAGE_DISABLED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_LandingPageDisabled;
/**
 *  Clicking on the ad leads to an error page.
 *
 *  Value: "LANDING_PAGE_ERROR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_LandingPageError;
/**
 *  The length of the image animation is longer than allowed.
 *
 *  Value: "LENGTH_OF_IMAGE_ANIMATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_LengthOfImageAnimation;
/**
 *  The creative sets an LSO object.
 *
 *  Value: "LSO_OBJECTS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_LsoObjects;
/**
 *  The ad or the landing page may contain malware.
 *
 *  Value: "MALWARE_SUSPECTED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MalwareSuspected;
/**
 *  Maximum download size exceeded.
 *
 *  Value: "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumDownloadSizeExceeded;
/**
 *  Maximum number of cookies exceeded.
 *
 *  Value: "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumNumberOfCookiesExceeded;
/**
 *  Maximum number of HTTP calls exceeded.
 *
 *  Value: "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumNumberOfHttpCallsExceeded;
/**
 *  Something is wrong with the creative itself.
 *
 *  Value: "MEDIA_NOT_FUNCTIONAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MediaNotFunctional;
/**
 *  Misleading/Inaccurate claims in ads.
 *
 *  Value: "MISLEADING_CLAIMS_IN_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MisleadingClaimsInAd;
/**
 *  Misleading or unrealistic promotions.
 *
 *  Value: "MISLEADING_PROMOTIONS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MisleadingPromotions;
/**
 *  Misuse by an Open Measurement SDK script.
 *
 *  Value: "MISUSE_BY_OMID_SCRIPT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MisuseByOmidScript;
/**
 *  Misuse of personal information.
 *
 *  Value: "MISUSE_OF_PERSONAL_INFORMATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_MisuseOfPersonalInformation;
/**
 *  Restricted in China.
 *
 *  Value: "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_NeedCertificatesToAdvertiseInChina;
/**
 *  Ads with a white background require a border, which was missing.
 *
 *  Value: "NO_BORDER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_NoBorder;
/**
 *  Non-SSL compliant.
 *
 *  Value: "NON_SSL_COMPLIANT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_NonSslCompliant;
/**
 *  Use of an Open Measurement SDK vendor not on approved whitelist.
 *
 *  Value: "NON_WHITELISTED_OMID_VENDOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_NonWhitelistedOmidVendor;
/**
 *  Non-family safe or adult content.
 *
 *  Value: "NOT_FAMILY_SAFE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_NotFamilySafe;
/**
 *  Omission of relevant information.
 *
 *  Value: "OMISSION_OF_RELEVANT_INFORMATION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_OmissionOfRelevantInformation;
/**
 *  Financial service ad does not adhere to specifications.
 *
 *  Value: "PERSONAL_LOANS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_PersonalLoans;
/**
 *  Pharmaceuticals, Gambling, Alcohol not allowed and at least one was
 *  detected.
 *
 *  Value: "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_PharmaGamblingAlcoholNotAllowed;
/**
 *  Poor Image / Video Quality.
 *
 *  Value: "POOR_IMAGE_OR_VIDEO_QUALITY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_PoorImageOrVideoQuality;
/**
 *  The ad causes a popup window to appear.
 *
 *  Value: "POP_UP"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_PopUp;
/**
 *  There is a problem with the way the click macro is used.
 *
 *  Value: "PROBLEM_WITH_CLICK_MACRO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ProblemWithClickMacro;
/**
 *  The ad does not meet professional standards.
 *
 *  Value: "PROFESSIONAL_STANDARDS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ProfessionalStandards;
/**
 *  The ad contains a URL that uses a numeric IP address for the domain.
 *
 *  Value: "RAW_IP_ADDRESS_IN_SNIPPET"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_RawIpAddressInSnippet;
/**
 *  Restricted political content.
 *
 *  Value: "RESTRICTED_POLITICAL_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_RestrictedPoliticalContent;
/**
 *  Restricted Products.
 *
 *  Value: "RESTRICTED_PRODUCTS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_RestrictedProducts;
/**
 *  Capitalizing on sensitive events.
 *
 *  Value: "SENSITIVE_EVENTS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_SensitiveEvents;
/**
 *  Sexually explicit content.
 *
 *  Value: "SEXUALLY_EXPLICIT_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_SexuallyExplicitContent;
/**
 *  Shocking content.
 *
 *  Value: "SHOCKING_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ShockingContent;
/**
 *  The ad does not meet technical requirements.
 *
 *  Value: "TECHNICAL_REQUIREMENTS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_TechnicalRequirements;
/**
 *  Temporary pausing of creative.
 *
 *  Value: "TEMPORARY_PAUSE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_TemporaryPause;
/**
 *  Unacceptable content. For example, malware.
 *
 *  Value: "UNACCEPTABLE_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableContent;
/**
 *  The ad or landing page contains unacceptable content because it initiated
 *  a software or executable download.
 *
 *  Value: "UNACCEPTABLE_CONTENT_SOFTWARE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableContentSoftware;
/**
 *  For example, Image Trick to Click.
 *
 *  Value: "UNACCEPTABLE_IMAGE_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableImageContent;
/**
 *  Online pharmacy ID required.
 *
 *  Value: "UNACCREDITED_PET_PHARMACY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnaccreditedPetPharmacy;
/**
 *  The ad set an unauthorized cookie on a Google domain.
 *
 *  Value: "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnauthorizedCookieOnGoogleDomain;
/**
 *  Unavailable promotions.
 *
 *  Value: "UNAVAILABLE_PROMOTIONS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnavailablePromotions;
/**
 *  The ad is unclear or irrelevant to the destination site.
 *
 *  Value: "UNCLEAR_OR_IRRELEVANT_AD"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnclearOrIrrelevantAd;
/**
 *  Flash content found when no flash was declared.
 *
 *  Value: "UNDECLARED_FLASH_OBJECTS"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UndeclaredFlashObjects;
/**
 *  Restricted content (for example, alcohol) was found in the ad but not
 *  declared.
 *
 *  Value: "UNDECLARED_RESTRICTED_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UndeclaredRestrictedContent;
/**
 *  Unsupported content.
 *
 *  Value: "UNSUPPORTED_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedContent;
/**
 *  Flash content was found in an unsupported context.
 *
 *  Value: "UNSUPPORTED_FLASH_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedFlashContent;
/**
 *  Unsupported language.
 *
 *  Value: "UNSUPPORTED_LANGUAGE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedLanguage;
/**
 *  There was an issue with the video ad.
 *
 *  Value: "VIDEO_FUNCTIONALITY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoFunctionality;
/**
 *  The ad uses a video vendor that is not supported.
 *
 *  Value: "VIDEO_INVALID_VENDOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoInvalidVendor;
/**
 *  Video length exceeds limits.
 *
 *  Value: "VIDEO_TOO_LONG"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoTooLong;
/**
 *  The format of the video ad is not supported.
 *
 *  Value: "VIDEO_UNSUPPORTED_FORMAT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoUnsupportedFormat;
/**
 *  The length of the video ad is not supported.
 *
 *  Value: "VIDEO_UNSUPPORTED_LENGTH"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoUnsupportedLength;
/**
 *  Unacceptable content: Japanese healthcare.
 *
 *  Value: "VIOLATES_JAPANESE_PHARMACY_LAW"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Disapproval_Reason_ViolatesJapanesePharmacyLaw;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FilterSet.breakdownDimensions

/** Value: "BREAKDOWN_DIMENSION_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_BreakdownDimensions_BreakdownDimensionUnspecified;
/** Value: "PUBLISHER_IDENTIFIER" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_BreakdownDimensions_PublisherIdentifier;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FilterSet.environment

/**
 *  The ad impression appears in an app.
 *
 *  Value: "APP"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Environment_App;
/**
 *  A placeholder for an undefined environment; indicates that no environment
 *  filter will be applied.
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Environment_EnvironmentUnspecified;
/**
 *  The ad impression appears on the web.
 *
 *  Value: "WEB"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Environment_Web;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FilterSet.formats

/** Value: "FORMAT_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Formats_FormatUnspecified;
/** Value: "NATIVE_DISPLAY" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Formats_NativeDisplay;
/** Value: "NATIVE_VIDEO" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Formats_NativeVideo;
/** Value: "NON_NATIVE_DISPLAY" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Formats_NonNativeDisplay;
/** Value: "NON_NATIVE_VIDEO" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Formats_NonNativeVideo;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FilterSet.platforms

/** Value: "DESKTOP" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Platforms_Desktop;
/** Value: "MOBILE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Platforms_Mobile;
/** Value: "PLATFORM_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Platforms_PlatformUnspecified;
/** Value: "TABLET" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_Platforms_Tablet;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FilterSet.timeSeriesGranularity

/**
 *  Indicates that data will be broken down by the day.
 *
 *  Value: "DAILY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_Daily;
/**
 *  Indicates that data will be broken down by the hour.
 *
 *  Value: "HOURLY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_Hourly;
/**
 *  A placeholder for an unspecified interval; no time series is applied.
 *  All rows in response will contain data for the entire requested time range.
 *
 *  Value: "TIME_SERIES_GRANULARITY_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_TimeSeriesGranularityUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_FrequencyCap.timeUnitType

/**
 *  Day
 *
 *  Value: "DAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Day;
/**
 *  Hour
 *
 *  Value: "HOUR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Hour;
/**
 *  Lifetime
 *
 *  Value: "LIFETIME"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Lifetime;
/**
 *  Minute
 *
 *  Value: "MINUTE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Minute;
/**
 *  Month
 *
 *  Value: "MONTH"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Month;
/**
 *  A placeholder for an undefined time unit type. This just indicates the
 *  variable with this value hasn't been initialized.
 *
 *  Value: "TIME_UNIT_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_TimeUnitTypeUnspecified;
/**
 *  Week
 *
 *  Value: "WEEK"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Week;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse.detailType

/**
 *  Indicates that the detail ID refers to a creative attribute; see
 *  [publisher-excludable-creative-attributes](https://developers.google.com/authorized-buyers/rtb/downloads/publisher-excludable-creative-attributes).
 *
 *  Value: "CREATIVE_ATTRIBUTE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_CreativeAttribute;
/**
 *  A placeholder for an undefined status.
 *  This value will never be returned in responses.
 *
 *  Value: "DETAIL_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_DetailTypeUnspecified;
/**
 *  Indicates that the detail ID refers to a disapproval reason; see
 *  DisapprovalReason enum in
 *  [snippet-status-report-proto](https://developers.google.com/authorized-buyers/rtb/downloads/snippet-status-report-proto).
 *
 *  Value: "DISAPPROVAL_REASON"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_DisapprovalReason;
/**
 *  Indicates that the detail ID refers to a product category; see
 *  [ad-product-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-product-categories).
 *
 *  Value: "PRODUCT_CATEGORY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_ProductCategory;
/**
 *  Indicates that the detail ID refers to a sensitive category; see
 *  [ad-sensitive-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-sensitive-categories).
 *
 *  Value: "SENSITIVE_CATEGORY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_SensitiveCategory;
/**
 *  Indicates that the detail ID refers to a vendor; see
 *  [vendors](https://developers.google.com/authorized-buyers/rtb/downloads/vendors).
 *
 *  Value: "VENDOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_Vendor;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow.status

/**
 *  The buyer was not billed because the ad was not rendered by the
 *  publisher.
 *
 *  Value: "AD_NOT_RENDERED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_AdNotRendered;
/**
 *  The buyer was not billed because the impression won by the bid was
 *  determined to be invalid.
 *
 *  Value: "INVALID_IMPRESSION"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_InvalidImpression;
/**
 *  A placeholder for an undefined status.
 *  This value will never be returned in responses.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Note.creatorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Note_CreatorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Note_CreatorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Note_CreatorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_PlatformContext.platforms

/** Value: "ANDROID" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_PlatformContext_Platforms_Android;
/** Value: "DESKTOP" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_PlatformContext_Platforms_Desktop;
/** Value: "IOS" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_PlatformContext_Platforms_Ios;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Price.pricingType

/**
 *  Cost per day
 *
 *  Value: "COST_PER_DAY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Price_PricingType_CostPerDay;
/**
 *  Cost per thousand impressions.
 *
 *  Value: "COST_PER_MILLE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Price_PricingType_CostPerMille;
/**
 *  A placeholder for an undefined pricing type. If the pricing type is
 *  unpsecified, `COST_PER_MILLE` will be used instead.
 *
 *  Value: "PRICING_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Price_PricingType_PricingTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Product.syndicationProduct

/**
 *  This typically represents a web page.
 *
 *  Value: "CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Content;
/**
 *  This represents ads shown within games.
 *
 *  Value: "GAMES"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Games;
/**
 *  This represents a mobile property.
 *
 *  Value: "MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Mobile;
/**
 *  A placeholder for an undefined syndication product.
 *
 *  Value: "SYNDICATION_PRODUCT_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Product_SyndicationProduct_SyndicationProductUnspecified;
/**
 *  This represents video ad formats.
 *
 *  Value: "VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Video;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Proposal.lastUpdaterOrCommentorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Proposal.originatorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Proposal.proposalState

/**
 *  The proposal has been accepted by the buyer.
 *
 *  Value: "BUYER_ACCEPTED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_BuyerAccepted;
/**
 *  The negotiations on the proposal were canceled and the proposal was never
 *  finalized.
 *
 *  Value: "CANCELED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_Canceled;
/**
 *  The proposal is finalized. During renegotiation, the proposal may
 *  not be in this state.
 *
 *  Value: "FINALIZED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_Finalized;
/**
 *  A placeholder for an undefined proposal state.
 *
 *  Value: "PROPOSAL_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_ProposalStateUnspecified;
/**
 *  The proposal is under negotiation or renegotiation.
 *
 *  Value: "PROPOSED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_Proposed;
/**
 *  The proposal has been accepted by the seller.
 *
 *  Value: "SELLER_ACCEPTED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Proposal_ProposalState_SellerAccepted;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_SecurityContext.securities

/** Value: "INSECURE" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_SecurityContext_Securities_Insecure;
/** Value: "SSL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_SecurityContext_Securities_Ssl;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_ServingContext.all

/**
 *  A simple context.
 *
 *  Value: "SIMPLE_CONTEXT"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ServingContext_All_SimpleContext;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_ServingRestriction.status

/**
 *  The ad was disapproved in this context.
 *
 *  Value: "DISAPPROVAL"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ServingRestriction_Status_Disapproval;
/**
 *  The ad is pending review in this context.
 *
 *  Value: "PENDING_REVIEW"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ServingRestriction_Status_PendingReview;
/**
 *  The status is not known.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ServingRestriction_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_VideoTargeting.excludedPositionTypes

/** Value: "MIDROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_ExcludedPositionTypes_Midroll;
/** Value: "POSITION_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_ExcludedPositionTypes_PositionTypeUnspecified;
/** Value: "POSTROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_ExcludedPositionTypes_Postroll;
/** Value: "PREROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_ExcludedPositionTypes_Preroll;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_VideoTargeting.targetedPositionTypes

/** Value: "MIDROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_TargetedPositionTypes_Midroll;
/** Value: "POSITION_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_TargetedPositionTypes_PositionTypeUnspecified;
/** Value: "POSTROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_TargetedPositionTypes_Postroll;
/** Value: "PREROLL" */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_VideoTargeting_TargetedPositionTypes_Preroll;

/**
 *  An absolute date range, specified by its start date and end date.
 *  The supported range of dates begins 30 days before today and ends today.
 *  Validity checked upon filter set creation. If a filter set with an absolute
 *  date range is run at a later date more than 30 days after start_date, it
 *  will
 *  fail.
 */
@interface GTLRAdExchangeBuyerII_AbsoluteDateRange : GTLRObject

/**
 *  The end date of the range (inclusive).
 *  Must be within the 30 days leading up to current date, and must be equal to
 *  or after start_date.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Date *endDate;

/**
 *  The start date of the range (inclusive).
 *  Must be within the 30 days leading up to current date, and must be equal to
 *  or before end_date.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Date *startDate;

@end


/**
 *  Request to accept a proposal.
 */
@interface GTLRAdExchangeBuyerII_AcceptProposalRequest : GTLRObject

/**
 *  The last known client revision number of the proposal.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

@end


/**
 *  A request for associating a deal and a creative.
 */
@interface GTLRAdExchangeBuyerII_AddDealAssociationRequest : GTLRObject

/** The association between a creative and a deal that should be added. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CreativeDealAssociation *association;

@end


/**
 *  Request message for adding a note to a given proposal.
 */
@interface GTLRAdExchangeBuyerII_AddNoteRequest : GTLRObject

/** Details of the note to add. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Note *note;

@end


/**
 *  Represents size of a single ad slot, or a creative.
 */
@interface GTLRAdExchangeBuyerII_AdSize : GTLRObject

/**
 *  The height of the ad slot in pixels.
 *  This field will be present only when size type is `PIXEL`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  The size type of the ad slot.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_AdSize_SizeType_Fluid Fluid size (i.e.,
 *        responsive size) can be resized automatically with the
 *        change of outside environment. (Value: "FLUID")
 *    @arg @c kGTLRAdExchangeBuyerII_AdSize_SizeType_Interstitial Special size
 *        to describe an interstitial ad slot. (Value: "INTERSTITIAL")
 *    @arg @c kGTLRAdExchangeBuyerII_AdSize_SizeType_Native Native (mobile) ads
 *        rendered by the publisher. (Value: "NATIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_AdSize_SizeType_Pixel Ad slot with size
 *        specified by height and width in pixels. (Value: "PIXEL")
 *    @arg @c kGTLRAdExchangeBuyerII_AdSize_SizeType_SizeTypeUnspecified A
 *        placeholder for an undefined size type. (Value:
 *        "SIZE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sizeType;

/**
 *  The width of the ad slot in pixels.
 *  This field will be present only when size type is `PIXEL`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  \@OutputOnly The app type the restriction applies to for mobile device.
 */
@interface GTLRAdExchangeBuyerII_AppContext : GTLRObject

/** The app types this restriction applies to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *appTypes;

@end


/**
 *  \@OutputOnly The auction type the restriction applies to.
 */
@interface GTLRAdExchangeBuyerII_AuctionContext : GTLRObject

/** The auction types this restriction applies to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *auctionTypes;

@end


/**
 *  The set of metrics that are measured in numbers of bids, representing how
 *  many bids with the specified dimension values were considered eligible at
 *  each stage of the bidding funnel;
 */
@interface GTLRAdExchangeBuyerII_BidMetricsRow : GTLRObject

/** The number of bids that Ad Exchange received from the buyer. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bids;

/** The number of bids that were permitted to compete in the auction. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidsInAuction;

/** The number of bids for which the buyer was billed. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *billedImpressions;

/** The number of bids that won an impression. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *impressionsWon;

/**
 *  The number of bids for which the corresponding impression was measurable
 *  for viewability (as defined by Active View).
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *measurableImpressions;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

/**
 *  The number of bids for which the corresponding impression was viewable (as
 *  defined by Active View).
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *viewableImpressions;

@end


/**
 *  The number of impressions with the specified dimension values that were
 *  considered to have no applicable bids, as described by the specified status.
 */
@interface GTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow : GTLRObject

/**
 *  The number of impressions for which there was a bid response with the
 *  specified status.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *impressionCount;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

/**
 *  The status specifying why the bid responses were considered to have no
 *  applicable bids.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBids
 *        The response had no bids. (Value: "RESPONSES_WITHOUT_BIDS")
 *    @arg @c kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBidsForAccount
 *        The response had no bids for the specified account, though it may have
 *        included bids on behalf of other accounts. (Value:
 *        "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT")
 *    @arg @c kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_ResponsesWithoutBidsForDeal
 *        The response had no bids for the specified deal, though it may have
 *        included bids on other deals on behalf of the account to which the
 *        deal
 *        belongs. (Value: "RESPONSES_WITHOUT_BIDS_FOR_DEAL")
 *    @arg @c kGTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow_Status_StatusUnspecified
 *        A placeholder for an undefined status.
 *        This value will never be returned in responses. (Value:
 *        "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Represents a buyer of inventory. Each buyer is identified by a unique
 *  Authorized Buyers account ID.
 */
@interface GTLRAdExchangeBuyerII_Buyer : GTLRObject

/** Authorized Buyers account ID of the buyer. */
@property(nonatomic, copy, nullable) NSString *accountId;

@end


/**
 *  The number of impressions with the specified dimension values where the
 *  corresponding bid request or bid response was not successful, as described
 *  by
 *  the specified callout status.
 */
@interface GTLRAdExchangeBuyerII_CalloutStatusRow : GTLRObject

/**
 *  The ID of the callout status.
 *  See
 *  [callout-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/callout-status-codes).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *calloutStatusId;

/**
 *  The number of impressions for which there was a bid request or bid response
 *  with the specified callout status.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *impressionCount;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

@end


/**
 *  Request to cancel an ongoing negotiation.
 */
@interface GTLRAdExchangeBuyerII_CancelNegotiationRequest : GTLRObject
@end


/**
 *  A client resource represents a client buyer&mdash;an agency, a brand, or an
 *  advertiser customer of the sponsor buyer. Users associated with the client
 *  buyer have restricted access to the Marketplace and certain other sections
 *  of
 *  the Authorized Buyers UI based on the role granted to the client buyer. All
 *  fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_Client : GTLRObject

/**
 *  The globally-unique numerical ID of the client.
 *  The value of this field is ignored in create and update operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  Name used to represent this client to publishers.
 *  You may have multiple clients that map to the same entity,
 *  but for each client the combination of `clientName` and entity
 *  must be unique.
 *  You can specify this field as empty.
 */
@property(nonatomic, copy, nullable) NSString *clientName;

/**
 *  Numerical identifier of the client entity.
 *  The entity can be an advertiser, a brand, or an agency.
 *  This identifier is unique among all the entities with the same type.
 *  A list of all known advertisers with their identifiers is available in the
 *  [advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)
 *  file.
 *  A list of all known brands with their identifiers is available in the
 *  [brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)
 *  file.
 *  A list of all known agencies with their identifiers is available in the
 *  [agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)
 *  file.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *entityId;

/**
 *  The name of the entity. This field is automatically fetched based on
 *  the type and ID.
 *  The value of this field is ignored in create and update operations.
 *
 *  Remapped to 'entityNameProperty' to avoid NSObject's 'entityName'.
 */
@property(nonatomic, copy, nullable) NSString *entityNameProperty;

/**
 *  The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Advertiser An advertiser.
 *        (Value: "ADVERTISER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Agency An advertising
 *        agency. (Value: "AGENCY")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Brand A brand. (Value:
 *        "BRAND")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_EntityTypeUnspecified A
 *        placeholder for an undefined client entity type. Should not be used.
 *        (Value: "ENTITY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Optional arbitrary unique identifier of this client buyer from the
 *  standpoint of its Ad Exchange sponsor buyer.
 *  This field can be used to associate a client buyer with the identifier
 *  in the namespace of its sponsor buyer, lookup client buyers by that
 *  identifier and verify whether an Ad Exchange counterpart of a given client
 *  buyer already exists.
 *  If present, must be unique among all the client buyers for its
 *  Ad Exchange sponsor buyer.
 */
@property(nonatomic, copy, nullable) NSString *partnerClientId;

/**
 *  The role which is assigned to the client buyer. Each role implies a set of
 *  permissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,
 *  `CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealApprover Users
 *        associated with this client can approve eligible deals
 *        on your behalf. Some deals may still explicitly require publisher
 *        finalization. If this role is not selected, the sponsor buyer
 *        will need to manually approve each of their deals. (Value:
 *        "CLIENT_DEAL_APPROVER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealNegotiator Users
 *        associated with this client can respond to deal proposals
 *        sent to them by publishers. They can also initiate deal proposals
 *        of their own. (Value: "CLIENT_DEAL_NEGOTIATOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealViewer Users
 *        associated with this client can see publisher deal offers
 *        in the Marketplace.
 *        They can neither negotiate proposals nor approve deals.
 *        If this client is visible to publishers, they can send deal proposals
 *        to this client. (Value: "CLIENT_DEAL_VIEWER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientRoleUnspecified A
 *        placeholder for an undefined client role. (Value:
 *        "CLIENT_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  The status of the client buyer.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_Active A client that is
 *        currently active. (Value: "ACTIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_ClientStatusUnspecified A
 *        placeholder for an undefined client status. (Value:
 *        "CLIENT_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_Disabled A client that is
 *        currently disabled. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Whether the client buyer will be visible to sellers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *visibleToSeller;

@end


/**
 *  A client user is created under a client buyer and has restricted access to
 *  the Marketplace and certain other sections of the Authorized Buyers UI based
 *  on the role granted to the associated client buyer.
 *  The only way a new client user can be created is via accepting an
 *  email invitation
 *  (see the
 *  accounts.clients.invitations.create
 *  method).
 *  All fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_ClientUser : GTLRObject

/**
 *  Numerical account ID of the client buyer
 *  with which the user is associated; the
 *  buyer must be a client of the current sponsor buyer.
 *  The value of this field is ignored in an update operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  User's email address. The value of this field
 *  is ignored in an update operation.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  The status of the client user.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Active A user that is
 *        currently active. (Value: "ACTIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Disabled A user that is
 *        currently disabled. (Value: "DISABLED")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Pending A user who was
 *        already created but hasn't accepted the invitation yet. (Value:
 *        "PENDING")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_UserStatusUnspecified A
 *        placeholder for an undefined user status. (Value:
 *        "USER_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  The unique numerical ID of the client user
 *  that has accepted an invitation.
 *  The value of this field is ignored in an update operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userId;

@end


/**
 *  An invitation for a new client user to get access to the Authorized Buyers
 *  UI. All fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_ClientUserInvitation : GTLRObject

/**
 *  Numerical account ID of the client buyer
 *  that the invited user is associated with.
 *  The value of this field is ignored in create operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  The email address to which the invitation is sent. Email
 *  addresses should be unique among all client users under each sponsor
 *  buyer.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  The unique numerical ID of the invitation that is sent to the user.
 *  The value of this field is ignored in create operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invitationId;

@end


/**
 *  Request message for indicating that the proposal's setup step is complete.
 */
@interface GTLRAdExchangeBuyerII_CompleteSetupRequest : GTLRObject
@end


/**
 *  Contains information on how a buyer or seller can be reached.
 */
@interface GTLRAdExchangeBuyerII_ContactInformation : GTLRObject

/** Email address for the contact. */
@property(nonatomic, copy, nullable) NSString *email;

/** The name of the contact. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  \@OutputOnly Shows any corrections that were applied to this creative.
 */
@interface GTLRAdExchangeBuyerII_Correction : GTLRObject

/** The contexts for the correction. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ServingContext *> *contexts;

/** Additional details about what was corrected. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *details;

/**
 *  The type of correction that was applied to the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_CorrectionTypeUnspecified
 *        The correction type is unknown. Refer to the details for more
 *        information. (Value: "CORRECTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_FlashAttributeRemoved The
 *        ad unnecessarily declared the Flash attribute, so the Flash attribute
 *        was removed. (Value: "FLASH_ATTRIBUTE_REMOVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_FlashFreeAttributeAdded The
 *        ad was not declared as Flash-free but it did not reference any flash
 *        content, so the Flash-free attribute was added. (Value:
 *        "FLASH_FREE_ATTRIBUTE_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_FlashFreeAttributeRemoved
 *        The ad was declared as Flash-free but contained Flash, so the
 *        Flash-free
 *        attribute was removed. (Value: "FLASH_FREE_ATTRIBUTE_REMOVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_InBannerVideoAttributeAdded
 *        Properties consistent with In-banner video were found, so an
 *        In-Banner Video attribute was added. (Value:
 *        "IN_BANNER_VIDEO_ATTRIBUTE_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_MraidAttributeAdded The ad
 *        makes calls to the MRAID API so the MRAID attribute was added. (Value:
 *        "MRAID_ATTRIBUTE_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_RequiredAttributeAdded The
 *        ad did not declare a required creative attribute.
 *        The attribute was added. (Value: "REQUIRED_ATTRIBUTE_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_RequiredVendorAdded The ad
 *        did not declare a required technology vendor.
 *        The technology vendor was added. (Value: "REQUIRED_VENDOR_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_SslAttributeAdded The ad
 *        did not declare the SSL attribute but was SSL-compliant, so the
 *        SSL attribute was added. (Value: "SSL_ATTRIBUTE_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_SslAttributeRemoved The ad
 *        had the SSL attribute declared but was not SSL-compliant.
 *        The SSL attribute was removed. (Value: "SSL_ATTRIBUTE_REMOVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_VendorIdsAdded The ad's
 *        declared vendors did not match the vendors that were detected.
 *        The detected vendors were added. (Value: "VENDOR_IDS_ADDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Correction_Type_VideoInSnippetAttributeAdded
 *        The ad contains video content. (Value:
 *        "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A creative and its classification data.
 *  Next ID: 39
 */
@interface GTLRAdExchangeBuyerII_Creative : GTLRObject

/**
 *  The account that this creative belongs to.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The link to AdChoices destination page. */
@property(nonatomic, copy, nullable) NSString *adChoicesDestinationUrl;

/** The name of the company being advertised in the creative. */
@property(nonatomic, copy, nullable) NSString *advertiserName;

/**
 *  The agency ID for this creative.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agencyId;

/** \@OutputOnly The last update timestamp of the creative via API. */
@property(nonatomic, strong, nullable) GTLRDateTime *apiUpdateTime;

/**
 *  All attributes for the ads that may be shown from this creative.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *attributes;

/** The set of destination URLs for the creative. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *clickThroughUrls;

/** \@OutputOnly Shows any corrections that were applied to this creative. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Correction *> *corrections;

/**
 *  The buyer-defined creative ID of this creative.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 */
@property(nonatomic, copy, nullable) NSString *creativeId;

/**
 *  \@OutputOnly The top-level deals status of this creative.
 *  If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in
 *  serving_restrictions will also exist. Note
 *  that this may be nuanced with other contextual restrictions, in which case,
 *  it may be preferable to read from serving_restrictions directly.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_DealsStatus_Approved The creative
 *        has been approved. (Value: "APPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_DealsStatus_ConditionallyApproved
 *        The creative has been conditionally approved.
 *        See serving_restrictions for details. (Value:
 *        "CONDITIONALLY_APPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_DealsStatus_Disapproved The
 *        creative has been disapproved. (Value: "DISAPPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_DealsStatus_NotChecked The
 *        creative has not been checked. (Value: "NOT_CHECKED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_DealsStatus_StatusUnspecified The
 *        status is unknown. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dealsStatus;

/** The set of declared destination URLs for the creative. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *declaredClickThroughUrls;

/**
 *  \@OutputOnly Detected advertiser IDs, if any.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedAdvertiserIds;

/**
 *  \@OutputOnly
 *  The detected domains for this creative.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedDomains;

/**
 *  \@OutputOnly
 *  The detected languages for this creative. The order is arbitrary. The codes
 *  are 2 or 5 characters and are documented at
 *  https://developers.google.com/adwords/api/docs/appendix/languagecodes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedLanguages;

/**
 *  \@OutputOnly Detected product categories, if any.
 *  See the ad-product-categories.txt file in the technical documentation
 *  for a list of IDs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedProductCategories;

/**
 *  \@OutputOnly Detected sensitive categories, if any.
 *  See the ad-sensitive-categories.txt file in the technical documentation for
 *  a list of IDs. You should use these IDs along with the
 *  excluded-sensitive-category field in the bid request to filter your bids.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedSensitiveCategories;

/** \@OutputOnly The filtering stats for this creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_FilteringStats *filteringStats;

/** An HTML creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_HtmlContent *html;

/** The set of URLs to be called to record an impression. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *impressionTrackingUrls;

/** A native creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_NativeContent *native;

/**
 *  \@OutputOnly The top-level open auction status of this creative.
 *  If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in
 *  serving_restrictions will also exist. Note
 *  that this may be nuanced with other contextual restrictions, in which case,
 *  it may be preferable to read from serving_restrictions directly.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_Approved The
 *        creative has been approved. (Value: "APPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_ConditionallyApproved
 *        The creative has been conditionally approved.
 *        See serving_restrictions for details. (Value:
 *        "CONDITIONALLY_APPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_Disapproved The
 *        creative has been disapproved. (Value: "DISAPPROVED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_NotChecked The
 *        creative has not been checked. (Value: "NOT_CHECKED")
 *    @arg @c kGTLRAdExchangeBuyerII_Creative_OpenAuctionStatus_StatusUnspecified
 *        The status is unknown. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *openAuctionStatus;

/**
 *  All restricted categories for the ads that may be shown from this creative.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedCategories;

/**
 *  \@OutputOnly The granular status of this ad in specific contexts.
 *  A context here relates to where something ultimately serves (for example,
 *  a physical location, a platform, an HTTPS vs HTTP request, or the type
 *  of auction).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ServingRestriction *> *servingRestrictions;

/**
 *  All vendor IDs for the ads that may be shown from this creative.
 *  See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt
 *  for possible values.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *vendorIds;

/**
 *  \@OutputOnly The version of this creative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

/** A video creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_VideoContent *video;

@end


/**
 *  The association between a creative and a deal.
 */
@interface GTLRAdExchangeBuyerII_CreativeDealAssociation : GTLRObject

/** The account the creative belongs to. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The ID of the creative associated with the deal. */
@property(nonatomic, copy, nullable) NSString *creativeId;

/** The externalDealId for the deal associated with the creative. */
@property(nonatomic, copy, nullable) NSString *dealsId;

@end


/**
 *  Represents creative restrictions associated to Programmatic Guaranteed/
 *  Preferred Deal in Ad Manager.
 *  This doesn't apply to Private Auction and AdX Preferred Deals.
 */
@interface GTLRAdExchangeBuyerII_CreativeRestrictions : GTLRObject

/**
 *  The format of the environment that the creatives will be displayed in.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_CreativeFormatUnspecified
 *        A placeholder for an undefined creative format. (Value:
 *        "CREATIVE_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_Display
 *        A creative that will be displayed in environments such as a browser.
 *        (Value: "DISPLAY")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_CreativeFormat_Video A
 *        video creative that will be displayed in environments such as a video
 *        player. (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeFormat;

@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CreativeSpecification *> *creativeSpecifications;

/**
 *  Skippable video ads allow viewers to skip ads after 5 seconds.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_InstreamSelect
 *        This video ad can be skipped after 5 seconds, and is counted as
 *        engaged view after 30 seconds. The creative is hosted on
 *        YouTube only, and viewcount of the YouTube video increments
 *        after the engaged view. (Value: "INSTREAM_SELECT")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_NotSkippable
 *        This video ad is not skippable. (Value: "NOT_SKIPPABLE")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_Skippable
 *        This video ad can be skipped after 5 seconds. (Value: "SKIPPABLE")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeRestrictions_SkippableAdType_SkippableAdTypeUnspecified
 *        A placeholder for an undefined skippable ad type. (Value:
 *        "SKIPPABLE_AD_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *skippableAdType;

@end


/**
 *  Specifies the size of the creative.
 */
@interface GTLRAdExchangeBuyerII_CreativeSize : GTLRObject

/**
 *  What formats are allowed by the publisher.
 *  If this repeated field is empty then all formats are allowed.
 *  For example, if this field contains AllowedFormatType.AUDIO then the
 *  publisher only allows an audio ad (without any video).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedFormats;

/**
 *  For video creatives specifies the sizes of companion ads (if present).
 *  Companion sizes may be filled in only when creative_size_type = VIDEO
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Size *> *companionSizes;

/**
 *  The creative size type.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_CreativeSizeTypeUnspecified
 *        A placeholder for an undefined creative size type. (Value:
 *        "CREATIVE_SIZE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Interstitial
 *        The creative is an interstitial creative. (Value: "INTERSTITIAL")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Native The
 *        creative is a native (mobile) creative. (Value: "NATIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Regular The
 *        creative is a regular desktop creative. (Value: "REGULAR")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_CreativeSizeType_Video The
 *        creative is a video creative. (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeSizeType;

/**
 *  The native template for this creative. It will have a value only if
 *  creative_size_type = CreativeSizeType.NATIVE.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeAppInstallAd
 *        The creative is linked to native app install ad. (Value:
 *        "NATIVE_APP_INSTALL_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeContentAd
 *        The creative is linked to native content ad. (Value:
 *        "NATIVE_CONTENT_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeVideoAppInstallAd
 *        The creative is linked to native video app install ad. (Value:
 *        "NATIVE_VIDEO_APP_INSTALL_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_NativeVideoContentAd
 *        The creative is linked to native video content ad. (Value:
 *        "NATIVE_VIDEO_CONTENT_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_NativeTemplate_UnknownNativeTemplate
 *        A placeholder for an undefined native template. (Value:
 *        "UNKNOWN_NATIVE_TEMPLATE")
 */
@property(nonatomic, copy, nullable) NSString *nativeTemplate;

/**
 *  For regular or video creative size type, specifies the size
 *  of the creative
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Size *size;

/**
 *  The type of skippable ad for this creative. It will have a value only if
 *  creative_size_type = CreativeSizeType.VIDEO.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_Generic This
 *        video ad can be skipped after 5 seconds. (Value: "GENERIC")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_InstreamSelect
 *        This video ad can be skipped after 5 seconds, and count as
 *        engaged view after 30 seconds. The creative is hosted on
 *        YouTube only, and viewcount of the YouTube video increments
 *        after the engaged view. (Value: "INSTREAM_SELECT")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_NotSkippable
 *        This video ad is not skippable. (Value: "NOT_SKIPPABLE")
 *    @arg @c kGTLRAdExchangeBuyerII_CreativeSize_SkippableAdType_SkippableAdTypeUnspecified
 *        A placeholder for an undefined skippable ad type. (Value:
 *        "SKIPPABLE_AD_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *skippableAdType;

@end


/**
 *  Represents information for a creative that is associated with a Programmatic
 *  Guaranteed/Preferred Deal in Ad Manager.
 */
@interface GTLRAdExchangeBuyerII_CreativeSpecification : GTLRObject

/** Companion sizes may be filled in only when this is a video creative. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_AdSize *> *creativeCompanionSizes;

/** The size of the creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_AdSize *creativeSize;

@end


/**
 *  The number of bids with the specified dimension values that did not win the
 *  auction (either were filtered pre-auction or lost the auction), as described
 *  by the specified creative status.
 */
@interface GTLRAdExchangeBuyerII_CreativeStatusRow : GTLRObject

/** The number of bids with the specified status. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidCount;

/**
 *  The ID of the creative status.
 *  See
 *  [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creativeStatusId;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

@end


/**
 *  Generic targeting used for targeting dimensions that contains a list of
 *  included and excluded numeric IDs.
 */
@interface GTLRAdExchangeBuyerII_CriteriaTargeting : GTLRObject

/**
 *  A list of numeric IDs to be excluded.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *excludedCriteriaIds;

/**
 *  A list of numeric IDs to be included.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *targetedCriteriaIds;

@end


/**
 *  Represents a whole or partial calendar date, e.g. a birthday. The time of
 *  day
 *  and time zone are either specified elsewhere or are not significant. The
 *  date
 *  is relative to the Proleptic Gregorian Calendar. This can represent:
 *  * A full date, with non-zero year, month and day values
 *  * A month and day value, with a zero year, e.g. an anniversary
 *  * A year on its own, with zero month and day values
 *  * A year and month value, with a zero day, e.g. a credit card expiration
 *  date
 *  Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
 */
@interface GTLRAdExchangeBuyerII_Date : GTLRObject

/**
 *  Day of month. Must be from 1 to 31 and valid for the year and month, or 0
 *  if specifying a year by itself or a year and month where the day is not
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of year. Must be from 1 to 12, or 0 if specifying a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of date. Must be from 1 to 9999, or 0 if specifying a date without
 *  a year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Daypart targeting message that specifies if the ad can be shown
 *  only during certain parts of a day/week.
 */
@interface GTLRAdExchangeBuyerII_DayPart : GTLRObject

/**
 *  The day of the week to target. If unspecified, applicable to all days.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_DayOfWeekUnspecified A
 *        placeholder for when the day of the week is not specified. (Value:
 *        "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Friday Friday (Value:
 *        "FRIDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Monday Monday (Value:
 *        "MONDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Saturday Saturday (Value:
 *        "SATURDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Sunday Sunday (Value:
 *        "SUNDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Thursday Thursday (Value:
 *        "THURSDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Tuesday Tuesday (Value:
 *        "TUESDAY")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPart_DayOfWeek_Wednesday Wednesday
 *        (Value: "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *dayOfWeek;

/**
 *  The ending time of the day for the ad to show (minute level granularity).
 *  The end time is exclusive.
 *  This field is not available for filtering in PQL queries.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_TimeOfDay *endTime;

/**
 *  The starting time of day for the ad to show (minute level granularity).
 *  The start time is inclusive.
 *  This field is not available for filtering in PQL queries.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_TimeOfDay *startTime;

@end


/**
 *  Specifies the day part targeting criteria.
 */
@interface GTLRAdExchangeBuyerII_DayPartTargeting : GTLRObject

/** A list of day part targeting criterion. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_DayPart *> *dayParts;

/**
 *  The timezone to use for interpreting the day part targeting.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_Publisher Use
 *        publisher's time zone setting. (Value: "PUBLISHER")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_TimeZoneSourceUnspecified
 *        A placeholder for an undefined time zone source. (Value:
 *        "TIME_ZONE_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DayPartTargeting_TimeZoneType_User Use the
 *        user's time zone setting. (Value: "USER")
 */
@property(nonatomic, copy, nullable) NSString *timeZoneType;

@end


/**
 *  A deal represents a segment of inventory for displaying ads on.
 *  A proposal can contain multiple deals. A deal contains the terms and
 *  targeting information that
 *  is used for serving.
 */
@interface GTLRAdExchangeBuyerII_Deal : GTLRObject

/**
 *  Proposed flight end time of the deal.
 *  This will generally be stored in a granularity of a second.
 *  A value is not required for Private Auction deals or Preferred Deals.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *availableEndTime;

/**
 *  Optional proposed flight start time of the deal.
 *  This will generally be stored in the granularity of one second since deal
 *  serving
 *  starts at seconds boundary. Any time specified with more granularity
 *  (e.g., in milliseconds) will be truncated towards the start of time in
 *  seconds.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *availableStartTime;

/** Buyer private data (hidden from seller). */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_PrivateData *buyerPrivateData;

/**
 *  The product ID from which this deal was created.
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 */
@property(nonatomic, copy, nullable) NSString *createProductId;

/**
 *  Optional revision number of the product that the deal was created from.
 *  If present on create, and the server `product_revision` has advanced sinced
 *  the passed-in `create_product_revision`, an `ABORTED` error will be
 *  returned.
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *createProductRevision;

/**
 *  The time of the deal creation.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Specifies the creative pre-approval policy.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_CreativePreApprovalPolicyUnspecified
 *        A placeholder for an undefined creative pre-approval policy. (Value:
 *        "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_SellerPreApprovalNotRequired
 *        The seller does not need to approve each creative before it can serve.
 *        (Value: "SELLER_PRE_APPROVAL_NOT_REQUIRED")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativePreApprovalPolicy_SellerPreApprovalRequired
 *        The seller needs to approve each creative before it can serve. (Value:
 *        "SELLER_PRE_APPROVAL_REQUIRED")
 */
@property(nonatomic, copy, nullable) NSString *creativePreApprovalPolicy;

/**
 *  Restricitions about the creatives associated with the deal (i.e., size)
 *  This is available for Programmatic Guaranteed/Preferred Deals in Ad Manager.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CreativeRestrictions *creativeRestrictions;

/**
 *  Specifies whether the creative is safeFrame compatible.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_Compatible
 *        The creatives need to be compatible with the safe frame option.
 *        (Value: "COMPATIBLE")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_CreativeSafeFrameCompatibilityUnspecified
 *        A placeholder for an undefined creative safe-frame compatibility.
 *        (Value: "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_CreativeSafeFrameCompatibility_Incompatible
 *        The creatives can be incompatible with the safe frame option. (Value:
 *        "INCOMPATIBLE")
 */
@property(nonatomic, copy, nullable) NSString *creativeSafeFrameCompatibility;

/**
 *  A unique deal ID for the deal (server-assigned).
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *dealId;

/**
 *  Metadata about the serving status of this deal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DealServingMetadata *dealServingMetadata;

/** The negotiable terms of the deal. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DealTerms *dealTerms;

/**
 *  The set of fields around delivery control that are interesting for a buyer
 *  to see but are non-negotiable. These are set by the publisher.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DeliveryControl *deliveryControl;

/**
 *  Description for the deal terms.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The name of the deal. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The external deal ID assigned to this deal once the deal is finalized.
 *  This is the deal ID that shows up in serving/reporting etc.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *externalDealId;

/**
 *  True, if the buyside inventory setup is complete for this deal.
 *  \@OutputOnly
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSetupComplete;

/**
 *  Specifies the creative source for programmatic deals. PUBLISHER means
 *  creative is provided by seller and ADVERTISER means creative is
 *  provided by buyer.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_Advertiser
 *        The advertiser provides the creatives. (Value: "ADVERTISER")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_ProgrammaticCreativeSourceUnspecified
 *        A placeholder for an undefined programmatic creative source. (Value:
 *        "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_ProgrammaticCreativeSource_Publisher
 *        The publisher provides the creatives to be served. (Value:
 *        "PUBLISHER")
 */
@property(nonatomic, copy, nullable) NSString *programmaticCreativeSource;

/**
 *  ID of the proposal that this deal is part of.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *proposalId;

/**
 *  Seller contact information for the deal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ContactInformation *> *sellerContacts;

/**
 *  The syndication product associated with the deal.
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Content This
 *        typically represents a web page. (Value: "CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Games This
 *        represents ads shown within games. (Value: "GAMES")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Mobile This
 *        represents a mobile property. (Value: "MOBILE")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_SyndicationProductUnspecified
 *        A placeholder for an undefined syndication product. (Value:
 *        "SYNDICATION_PRODUCT_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Deal_SyndicationProduct_Video This
 *        represents video ad formats. (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *syndicationProduct;

/**
 *  Specifies the subset of inventory targeted by the deal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MarketplaceTargeting *targeting;

/**
 *  The shared targeting visible to buyers and sellers. Each shared
 *  targeting entity is AND'd together.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_TargetingCriteria *> *targetingCriterion;

/**
 *  The time when the deal was last updated.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** The web property code for the seller copied over from the product. */
@property(nonatomic, copy, nullable) NSString *webPropertyCode;

@end


/**
 *  Tracks which parties (if any) have paused a deal.
 *  The deal is considered paused if either hasBuyerPaused or
 *  hasSellPaused is true.
 */
@interface GTLRAdExchangeBuyerII_DealPauseStatus : GTLRObject

/** The buyer's reason for pausing, if the buyer paused the deal. */
@property(nonatomic, copy, nullable) NSString *buyerPauseReason;

/**
 *  The role of the person who first paused this deal.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_Buyer
 *        Specifies the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DealPauseStatus_FirstPausedBy_Seller
 *        Specifies the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *firstPausedBy;

/**
 *  True, if the buyer has paused the deal unilaterally.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasBuyerPaused;

/**
 *  True, if the seller has paused the deal unilaterally.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasSellerPaused;

/** The seller's reason for pausing, if the seller paused the deal. */
@property(nonatomic, copy, nullable) NSString *sellerPauseReason;

@end


/**
 *  Message captures metadata about the serving status of a deal.
 */
@interface GTLRAdExchangeBuyerII_DealServingMetadata : GTLRObject

/**
 *  Tracks which parties (if any) have paused a deal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DealPauseStatus *dealPauseStatus;

@end


/**
 *  The deal terms specify the details of a Product/deal. They specify things
 *  like price per buyer, the type of pricing model (e.g., fixed price, auction)
 *  and expected impressions from the publisher.
 */
@interface GTLRAdExchangeBuyerII_DealTerms : GTLRObject

/**
 *  Visibility of the URL in bid requests. (default: BRANDED)
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DealTerms_BrandingType_Branded Full URL is
 *        included in bid requests. (Value: "BRANDED")
 *    @arg @c kGTLRAdExchangeBuyerII_DealTerms_BrandingType_BrandingTypeUnspecified
 *        A placeholder for an undefined branding type. (Value:
 *        "BRANDING_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DealTerms_BrandingType_SemiTransparent A
 *        TopLevelDomain or masked URL is sent in bid requests
 *        rather than the full one. (Value: "SEMI_TRANSPARENT")
 */
@property(nonatomic, copy, nullable) NSString *brandingType;

/**
 *  Publisher provided description for the terms.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Non-binding estimate of the estimated gross spend for this deal.
 *  Can be set by buyer or seller.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Price *estimatedGrossSpend;

/**
 *  Non-binding estimate of the impressions served per day.
 *  Can be set by buyer or seller.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *estimatedImpressionsPerDay;

/** The terms for guaranteed fixed price deals. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_GuaranteedFixedPriceTerms *guaranteedFixedPriceTerms;

/** The terms for non-guaranteed auction deals. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_NonGuaranteedAuctionTerms *nonGuaranteedAuctionTerms;

/** The terms for non-guaranteed fixed price deals. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_NonGuaranteedFixedPriceTerms *nonGuaranteedFixedPriceTerms;

/**
 *  The time zone name. For deals with Cost Per Day billing, defines the
 *  time zone used to mark the boundaries of a day. It should be an
 *  IANA TZ name, such as "America/Los_Angeles". For more information,
 *  see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
 */
@property(nonatomic, copy, nullable) NSString *sellerTimeZone;

@end


/**
 *  Message contains details about how the deals will be paced.
 */
@interface GTLRAdExchangeBuyerII_DeliveryControl : GTLRObject

/**
 *  Specified the creative blocking levels to be applied.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_AdxPolicyBlockingOnly
 *        The Ad Exchange policy blocking rules will be applied. (Value:
 *        "ADX_POLICY_BLOCKING_ONLY")
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_CreativeBlockingLevelUnspecified
 *        A placeholder for an undefined creative blocking level. (Value:
 *        "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_CreativeBlockingLevel_PublisherBlockingRules
 *        Publisher blocking rules will be applied. (Value:
 *        "PUBLISHER_BLOCKING_RULES")
 */
@property(nonatomic, copy, nullable) NSString *creativeBlockingLevel;

/**
 *  Specifies how the impression delivery will be paced.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_AsFastAsPossible
 *        Impressions are served as fast as possible. (Value:
 *        "AS_FAST_AS_POSSIBLE")
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_DeliveryRateTypeUnspecified
 *        A placeholder for an undefined delivery rate type. (Value:
 *        "DELIVERY_RATE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_Evenly
 *        Impressions are served uniformly over the life of the deal. (Value:
 *        "EVENLY")
 *    @arg @c kGTLRAdExchangeBuyerII_DeliveryControl_DeliveryRateType_FrontLoaded
 *        Impressions are served front-loaded. (Value: "FRONT_LOADED")
 */
@property(nonatomic, copy, nullable) NSString *deliveryRateType;

/**
 *  Specifies any frequency caps.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_FrequencyCap *> *frequencyCaps;

@end


/**
 *  \@OutputOnly The reason and details for a disapproval.
 */
@interface GTLRAdExchangeBuyerII_Disapproval : GTLRObject

/** Additional details about the reason for disapproval. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *details;

/**
 *  The categorized reason for disapproval.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_Abortion Unacceptable
 *        content: Abortion. (Value: "ABORTION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_AdSizeDoesNotMatchAdSlot
 *        The ad size when rendered does not match the declaration. (Value:
 *        "AD_SIZE_DOES_NOT_MATCH_AD_SLOT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_AdultImageOrVideo The ad
 *        contains adult images or video content. (Value:
 *        "ADULT_IMAGE_OR_VIDEO")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_AutomatedAdClicking The
 *        ad automatically redirects to the destination site without a click,
 *        or reports a click when none were made. (Value:
 *        "AUTOMATED_AD_CLICKING")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_BadUrlLegalDisapproval
 *        Bad URL: Legal disapproval. (Value: "BAD_URL_LEGAL_DISAPPROVAL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_BailBonds Promotes
 *        services related to bail bonds. (Value: "BAIL_BONDS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_BlankCreative The ad
 *        serves a blank. (Value: "BLANK_CREATIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_BrokenUrl The click
 *        through URL doesn't work properly. (Value: "BROKEN_URL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ClickToDownloadNotAnApp
 *        Click to download must link to an app. (Value:
 *        "CLICK_TO_DOWNLOAD_NOT_AN_APP")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ClinicalTrialRecruitment
 *        Clinical trial recruitment. (Value: "CLINICAL_TRIAL_RECRUITMENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_Contraceptives
 *        Unacceptable content: Birth control. (Value: "CONTRACEPTIVES")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_CounterfeitDesignerGoods
 *        The ad promotes counterfeit designer goods. (Value:
 *        "COUNTERFEIT_DESIGNER_GOODS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsDrugs
 *        The ad promotes recreational drugs/services & related equipment.
 *        (Value: "DANGEROUS_PRODUCTS_DRUGS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsExplosives
 *        The ad promotes explosives. (Value: "DANGEROUS_PRODUCTS_EXPLOSIVES")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsGuns
 *        The ad promotes guns & parts. (Value: "DANGEROUS_PRODUCTS_GUNS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsKnives
 *        The ad promotes dangerous knives. (Value: "DANGEROUS_PRODUCTS_KNIVES")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsTobacco
 *        The ad promotes tobacco products/services & related equipment. (Value:
 *        "DANGEROUS_PRODUCTS_TOBACCO")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DangerousProductsWeapons
 *        The ad promotes weapons. (Value: "DANGEROUS_PRODUCTS_WEAPONS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationExperience
 *        Unacceptable landing page. (Value: "DESTINATION_EXPERIENCE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationSiteDoesNotAllowGoingBack
 *        Broken back button. (Value:
 *        "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationSiteNotCrawlableRobotsTxt
 *        The destination site's robot.txt file prevents it from being crawled.
 *        (Value: "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationUrlSiteNotCrawlable
 *        Bad Destination URL: Site Not Crawlable. (Value:
 *        "DESTINATION_URL_SITE_NOT_CRAWLABLE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DestinationUrlsUndeclared
 *        The ad uses rotation, but not all destination URLs were declared.
 *        (Value: "DESTINATION_URLS_UNDECLARED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DirectDownloadInAd Rich
 *        Media - Direct Download in Ad (ex. PDF download). (Value:
 *        "DIRECT_DOWNLOAD_IN_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DynamicDnsAtDestinationUrl
 *        Dynamic DNS at Destination URL. (Value:
 *        "DYNAMIC_DNS_AT_DESTINATION_URL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_DysfunctionalPromotion
 *        The promotion is unnecessarily difficult to navigate. (Value:
 *        "DYSFUNCTIONAL_PROMOTION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_EnablingDishonestBehavior
 *        Products & Services that enable dishonest behavior. (Value:
 *        "ENABLING_DISHONEST_BEHAVIOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableDirectionNotSupported
 *        The ad does not expand in a supported direction. (Value:
 *        "EXPANDABLE_DIRECTION_NOT_SUPPORTED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableFunctionality
 *        There was an issue with the expandable ad. (Value:
 *        "EXPANDABLE_FUNCTIONALITY")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableIncorrectDirection
 *        The declared expanding direction does not match the actual direction.
 *        (Value: "EXPANDABLE_INCORRECT_DIRECTION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ExpandableInvalidVendor
 *        The ad uses an expandable vendor that is not supported. (Value:
 *        "EXPANDABLE_INVALID_VENDOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_FourthPartyBrowserCookies
 *        The creative attempts to set cookies from a fourth party that is not
 *        certified. (Value: "FOURTH_PARTY_BROWSER_COOKIES")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_GainingAnUnfairAdvantage
 *        The ad tries to gain an unfair traffic advantage. (Value:
 *        "GAINING_AN_UNFAIR_ADVANTAGE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_GamingTheGoogleNetwork
 *        The ad tries to circumvent Google's advertising systems. (Value:
 *        "GAMING_THE_GOOGLE_NETWORK")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InaccurateAdText The ad
 *        contains text that is unclear or inaccurate. (Value:
 *        "INACCURATE_AD_TEXT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InaccurateReviewExtension
 *        A review extension must be an accurate review. (Value:
 *        "INACCURATE_REVIEW_EXTENSION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InappropriateContent
 *        Offensive or inappropriate content. (Value: "INAPPROPRIATE_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectAdTechnologyDeclaration
 *        The ad technology declaration is not accurate. (Value:
 *        "INCORRECT_AD_TECHNOLOGY_DECLARATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectDestinationUrlDeclaration
 *        The actual destination URL does not match the declared destination
 *        URL. (Value: "INCORRECT_DESTINATION_URL_DECLARATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectImageLayout
 *        Incorrect Image Layout. (Value: "INCORRECT_IMAGE_LAYOUT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_IncorrectRemarketingDeclaration
 *        The ad targets consumers using remarketing lists and/or collects
 *        data for subsequent use in retargeting, but does not correctly declare
 *        that use. (Value: "INCORRECT_REMARKETING_DECLARATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidBiddingMethod
 *        Invalid bidding method. (Value: "INVALID_BIDDING_METHOD")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidFourthPartyCall
 *        The ad makes a fourth party call to an unapproved vendor. (Value:
 *        "INVALID_FOURTH_PARTY_CALL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidInterestBasedAd
 *        Violation of Google's policy for interest-based ads. (Value:
 *        "INVALID_INTEREST_BASED_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidRemarketingListUsage
 *        Violation of the remarketing list policy. (Value:
 *        "INVALID_REMARKETING_LIST_USAGE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidRtbProtocolUsage
 *        The creative does not follow policies set for the RTB protocol.
 *        (Value: "INVALID_RTB_PROTOCOL_USAGE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidSslDeclaration
 *        SSL support declared but not working correctly. (Value:
 *        "INVALID_SSL_DECLARATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_InvalidUrlProtocol The
 *        ad uses URL protocols that do not exist or are not allowed on AdX.
 *        (Value: "INVALID_URL_PROTOCOL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_IrrelevantImageOrVideo
 *        Irrelevant Image / Video. (Value: "IRRELEVANT_IMAGE_OR_VIDEO")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_KcdspRegistration
 *        Unacceptable content: Korean healthcare. (Value: "KCDSP_REGISTRATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_LandingPageDisabled The
 *        landing page does not conform to Ad Exchange policy. (Value:
 *        "LANDING_PAGE_DISABLED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_LandingPageError
 *        Clicking on the ad leads to an error page. (Value:
 *        "LANDING_PAGE_ERROR")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_LengthOfImageAnimation
 *        The length of the image animation is longer than allowed. (Value:
 *        "LENGTH_OF_IMAGE_ANIMATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_LsoObjects The creative
 *        sets an LSO object. (Value: "LSO_OBJECTS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MalwareSuspected The ad
 *        or the landing page may contain malware. (Value: "MALWARE_SUSPECTED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumDownloadSizeExceeded
 *        Maximum download size exceeded. (Value:
 *        "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumNumberOfCookiesExceeded
 *        Maximum number of cookies exceeded. (Value:
 *        "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MaximumNumberOfHttpCallsExceeded
 *        Maximum number of HTTP calls exceeded. (Value:
 *        "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MediaNotFunctional
 *        Something is wrong with the creative itself. (Value:
 *        "MEDIA_NOT_FUNCTIONAL")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MisleadingClaimsInAd
 *        Misleading/Inaccurate claims in ads. (Value:
 *        "MISLEADING_CLAIMS_IN_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MisleadingPromotions
 *        Misleading or unrealistic promotions. (Value: "MISLEADING_PROMOTIONS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MisuseByOmidScript
 *        Misuse by an Open Measurement SDK script. (Value:
 *        "MISUSE_BY_OMID_SCRIPT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_MisuseOfPersonalInformation
 *        Misuse of personal information. (Value:
 *        "MISUSE_OF_PERSONAL_INFORMATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_NeedCertificatesToAdvertiseInChina
 *        Restricted in China. (Value:
 *        "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_NoBorder Ads with a
 *        white background require a border, which was missing. (Value:
 *        "NO_BORDER")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_NonSslCompliant Non-SSL
 *        compliant. (Value: "NON_SSL_COMPLIANT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_NonWhitelistedOmidVendor
 *        Use of an Open Measurement SDK vendor not on approved whitelist.
 *        (Value: "NON_WHITELISTED_OMID_VENDOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_NotFamilySafe Non-family
 *        safe or adult content. (Value: "NOT_FAMILY_SAFE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_OmissionOfRelevantInformation
 *        Omission of relevant information. (Value:
 *        "OMISSION_OF_RELEVANT_INFORMATION")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_PersonalLoans Financial
 *        service ad does not adhere to specifications. (Value:
 *        "PERSONAL_LOANS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_PharmaGamblingAlcoholNotAllowed
 *        Pharmaceuticals, Gambling, Alcohol not allowed and at least one was
 *        detected. (Value: "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_PoorImageOrVideoQuality
 *        Poor Image / Video Quality. (Value: "POOR_IMAGE_OR_VIDEO_QUALITY")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_PopUp The ad causes a
 *        popup window to appear. (Value: "POP_UP")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ProblemWithClickMacro
 *        There is a problem with the way the click macro is used. (Value:
 *        "PROBLEM_WITH_CLICK_MACRO")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ProfessionalStandards
 *        The ad does not meet professional standards. (Value:
 *        "PROFESSIONAL_STANDARDS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_RawIpAddressInSnippet
 *        The ad contains a URL that uses a numeric IP address for the domain.
 *        (Value: "RAW_IP_ADDRESS_IN_SNIPPET")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_RestrictedPoliticalContent
 *        Restricted political content. (Value: "RESTRICTED_POLITICAL_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_RestrictedProducts
 *        Restricted Products. (Value: "RESTRICTED_PRODUCTS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_SensitiveEvents
 *        Capitalizing on sensitive events. (Value: "SENSITIVE_EVENTS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_SexuallyExplicitContent
 *        Sexually explicit content. (Value: "SEXUALLY_EXPLICIT_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ShockingContent Shocking
 *        content. (Value: "SHOCKING_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_TechnicalRequirements
 *        The ad does not meet technical requirements. (Value:
 *        "TECHNICAL_REQUIREMENTS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_TemporaryPause Temporary
 *        pausing of creative. (Value: "TEMPORARY_PAUSE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableContent
 *        Unacceptable content. For example, malware. (Value:
 *        "UNACCEPTABLE_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableContentSoftware
 *        The ad or landing page contains unacceptable content because it
 *        initiated
 *        a software or executable download. (Value:
 *        "UNACCEPTABLE_CONTENT_SOFTWARE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnacceptableImageContent
 *        For example, Image Trick to Click. (Value:
 *        "UNACCEPTABLE_IMAGE_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnaccreditedPetPharmacy
 *        Online pharmacy ID required. (Value: "UNACCREDITED_PET_PHARMACY")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnauthorizedCookieOnGoogleDomain
 *        The ad set an unauthorized cookie on a Google domain. (Value:
 *        "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnavailablePromotions
 *        Unavailable promotions. (Value: "UNAVAILABLE_PROMOTIONS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnclearOrIrrelevantAd
 *        The ad is unclear or irrelevant to the destination site. (Value:
 *        "UNCLEAR_OR_IRRELEVANT_AD")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UndeclaredFlashObjects
 *        Flash content found when no flash was declared. (Value:
 *        "UNDECLARED_FLASH_OBJECTS")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UndeclaredRestrictedContent
 *        Restricted content (for example, alcohol) was found in the ad but not
 *        declared. (Value: "UNDECLARED_RESTRICTED_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedContent
 *        Unsupported content. (Value: "UNSUPPORTED_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedFlashContent
 *        Flash content was found in an unsupported context. (Value:
 *        "UNSUPPORTED_FLASH_CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_UnsupportedLanguage
 *        Unsupported language. (Value: "UNSUPPORTED_LANGUAGE")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoFunctionality There
 *        was an issue with the video ad. (Value: "VIDEO_FUNCTIONALITY")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoInvalidVendor The
 *        ad uses a video vendor that is not supported. (Value:
 *        "VIDEO_INVALID_VENDOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoTooLong Video
 *        length exceeds limits. (Value: "VIDEO_TOO_LONG")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoUnsupportedFormat
 *        The format of the video ad is not supported. (Value:
 *        "VIDEO_UNSUPPORTED_FORMAT")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_VideoUnsupportedLength
 *        The length of the video ad is not supported. (Value:
 *        "VIDEO_UNSUPPORTED_LENGTH")
 *    @arg @c kGTLRAdExchangeBuyerII_Disapproval_Reason_ViolatesJapanesePharmacyLaw
 *        Unacceptable content: Japanese healthcare. (Value:
 *        "VIOLATES_JAPANESE_PHARMACY_LAW")
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRAdExchangeBuyerII_Empty : GTLRObject
@end


/**
 *  The number of filtered bids with the specified dimension values that have
 *  the
 *  specified creative.
 */
@interface GTLRAdExchangeBuyerII_FilteredBidCreativeRow : GTLRObject

/** The number of bids with the specified creative. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidCount;

/** The ID of the creative. */
@property(nonatomic, copy, nullable) NSString *creativeId;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

@end


/**
 *  The number of filtered bids with the specified dimension values, among those
 *  filtered due to the requested filtering reason (i.e. creative status), that
 *  have the specified detail.
 */
@interface GTLRAdExchangeBuyerII_FilteredBidDetailRow : GTLRObject

/** The number of bids with the specified detail. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidCount;

/**
 *  The ID of the detail. The associated value can be looked up in the
 *  dictionary file corresponding to the DetailType in the response message.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *detailId;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

@end


/**
 *  \@OutputOnly Filtering reasons for this creative during a period of a single
 *  day (from midnight to midnight Pacific).
 */
@interface GTLRAdExchangeBuyerII_FilteringStats : GTLRObject

/**
 *  The day during which the data was collected.
 *  The data is collected from 00:00:00 to 23:59:59 PT.
 *  During switches from PST to PDT and back, the day may
 *  contain 23 or 25 hours of data instead of the usual 24.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Date *date;

/** The set of filtering reasons for this date. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Reason *> *reasons;

@end


/**
 *  A set of filters that is applied to a request for data.
 *  Within a filter set, an AND operation is performed across the filters
 *  represented by each field. An OR operation is performed across the filters
 *  represented by the multiple values of a repeated field, e.g.,
 *  "format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR
 *  seller_network_id=56)".
 */
@interface GTLRAdExchangeBuyerII_FilterSet : GTLRObject

/**
 *  An absolute date range, defined by a start date and an end date.
 *  Interpreted relative to Pacific time zone.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_AbsoluteDateRange *absoluteDateRange;

/**
 *  The set of dimensions along which to break down the response; may be empty.
 *  If multiple dimensions are requested, the breakdown is along the Cartesian
 *  product of the requested dimensions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *breakdownDimensions;

/**
 *  The ID of the creative on which to filter; optional. This field may be set
 *  only for a filter set that accesses account-level troubleshooting data,
 *  i.e., one whose name matches the `bidders/ * /accounts/ * /filterSets/ *`
 *  pattern.
 */
@property(nonatomic, copy, nullable) NSString *creativeId;

/**
 *  The ID of the deal on which to filter; optional. This field may be set
 *  only for a filter set that accesses account-level troubleshooting data,
 *  i.e., one whose name matches the `bidders/ * /accounts/ * /filterSets/ *`
 *  pattern.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dealId;

/**
 *  The environment on which to filter; optional.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_Environment_App The ad impression
 *        appears in an app. (Value: "APP")
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_Environment_EnvironmentUnspecified
 *        A placeholder for an undefined environment; indicates that no
 *        environment
 *        filter will be applied. (Value: "ENVIRONMENT_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_Environment_Web The ad impression
 *        appears on the web. (Value: "WEB")
 */
@property(nonatomic, copy, nullable) NSString *environment;

/**
 *  The list of formats on which to filter; may be empty. The filters
 *  represented by multiple formats are ORed together (i.e., if non-empty,
 *  results must match any one of the formats).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *formats;

/**
 *  A user-defined name of the filter set. Filter set names must be unique
 *  globally and match one of the patterns:
 *  - `bidders/ * /filterSets/ *` (for accessing bidder-level troubleshooting
 *  data)
 *  - `bidders/ * /accounts/ * /filterSets/ *` (for accessing account-level
 *  troubleshooting data)
 *  This field is required in create operations.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of platforms on which to filter; may be empty. The filters
 *  represented by multiple platforms are ORed together (i.e., if non-empty,
 *  results must match any one of the platforms).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *platforms;

/**
 *  For Open Bidding partners only.
 *  The list of publisher identifiers on which to filter; may be empty.
 *  The filters represented by multiple publisher identifiers are ORed
 *  together.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *publisherIdentifiers;

/**
 *  An open-ended realtime time range, defined by the aggregation start
 *  timestamp.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RealtimeTimeRange *realtimeTimeRange;

/**
 *  A relative date range, defined by an offset from today and a duration.
 *  Interpreted relative to Pacific time zone.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RelativeDateRange *relativeDateRange;

/**
 *  For Authorized Buyers only.
 *  The list of IDs of the seller (publisher) networks on which to filter;
 *  may be empty. The filters represented by multiple seller network IDs are
 *  ORed together (i.e., if non-empty, results must match any one of the
 *  publisher networks). See
 *  [seller-network-ids](https://developers.google.com/authorized-buyers/rtb/downloads/seller-network-ids)
 *  file for the set of existing seller network IDs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *sellerNetworkIds;

/**
 *  The granularity of time intervals if a time series breakdown is desired;
 *  optional.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_Daily
 *        Indicates that data will be broken down by the day. (Value: "DAILY")
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_Hourly
 *        Indicates that data will be broken down by the hour. (Value: "HOURLY")
 *    @arg @c kGTLRAdExchangeBuyerII_FilterSet_TimeSeriesGranularity_TimeSeriesGranularityUnspecified
 *        A placeholder for an unspecified interval; no time series is applied.
 *        All rows in response will contain data for the entire requested time
 *        range. (Value: "TIME_SERIES_GRANULARITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *timeSeriesGranularity;

@end


/**
 *  Represents a list of targeted and excluded mobile application IDs that
 *  publishers own.
 *  Mobile application IDs are from App Store and Google Play Store.
 *  Android App ID, for example, com.google.android.apps.maps, can be found in
 *  Google Play Store URL.
 *  iOS App ID (which is a number) can be found at the end of iTunes store URL.
 *  First party mobile applications is either included or excluded.
 */
@interface GTLRAdExchangeBuyerII_FirstPartyMobileApplicationTargeting : GTLRObject

/** A list of application IDs to be excluded. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedAppIds;

/** A list of application IDs to be included. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedAppIds;

@end


/**
 *  Frequency cap.
 */
@interface GTLRAdExchangeBuyerII_FrequencyCap : GTLRObject

/**
 *  The maximum number of impressions that can be served to a user within the
 *  specified time period.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxImpressions;

/**
 *  The amount of time, in the units specified by time_unit_type. Defines the
 *  amount of time over which impressions per user are counted and capped.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTimeUnits;

/**
 *  The time unit. Along with num_time_units defines the amount of time over
 *  which impressions per user are counted and capped.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Day Day (Value:
 *        "DAY")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Hour Hour (Value:
 *        "HOUR")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Lifetime Lifetime
 *        (Value: "LIFETIME")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Minute Minute
 *        (Value: "MINUTE")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Month Month
 *        (Value: "MONTH")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_TimeUnitTypeUnspecified
 *        A placeholder for an undefined time unit type. This just indicates the
 *        variable with this value hasn't been initialized. (Value:
 *        "TIME_UNIT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_FrequencyCap_TimeUnitType_Week Week (Value:
 *        "WEEK")
 */
@property(nonatomic, copy, nullable) NSString *timeUnitType;

@end


/**
 *  Terms for Programmatic Guaranteed Deals.
 */
@interface GTLRAdExchangeBuyerII_GuaranteedFixedPriceTerms : GTLRObject

/** Fixed price for the specified buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_PricePerBuyer *> *fixedPrices;

/**
 *  Guaranteed impressions as a percentage. This is the percentage
 *  of guaranteed looks that the buyer is guaranteeing to buy.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guaranteedImpressions;

/**
 *  Count of guaranteed looks. Required for deal, optional for product.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guaranteedLooks;

/**
 *  Daily minimum looks for CPD deal types.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimumDailyLooks;

@end


/**
 *  HTML content for a creative.
 */
@interface GTLRAdExchangeBuyerII_HtmlContent : GTLRObject

/**
 *  The height of the HTML snippet in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** The HTML snippet that displays the ad when inserted in the web page. */
@property(nonatomic, copy, nullable) NSString *snippet;

/**
 *  The width of the HTML snippet in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  An image resource. You may provide a larger image than was requested,
 *  so long as the aspect ratio is preserved.
 */
@interface GTLRAdExchangeBuyerII_Image : GTLRObject

/**
 *  Image height in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** The URL of the image. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Image width in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  The set of metrics that are measured in numbers of impressions, representing
 *  how many impressions with the specified dimension values were considered
 *  eligible at each stage of the bidding funnel.
 */
@interface GTLRAdExchangeBuyerII_ImpressionMetricsRow : GTLRObject

/**
 *  The number of impressions available to the buyer on Ad Exchange.
 *  In some cases this value may be unavailable.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *availableImpressions;

/**
 *  The number of impressions for which Ad Exchange sent the buyer a bid
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidRequests;

/**
 *  The number of impressions that match the buyer's inventory pretargeting.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *inventoryMatches;

/**
 *  The number of impressions for which Ad Exchange received a response from
 *  the buyer that contained at least one applicable bid.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *responsesWithBids;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

/**
 *  The number of impressions for which the buyer successfully sent a response
 *  to Ad Exchange.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *successfulResponses;

@end


/**
 *  Represents the size of an ad unit that can be targeted on an ad
 *  request. It only applies to Private Auction, AdX Preferred Deals and
 *  Auction Packages. This targeting does not apply to Programmatic Guaranteed
 *  and Preferred Deals in Ad Manager.
 */
@interface GTLRAdExchangeBuyerII_InventorySizeTargeting : GTLRObject

/** A list of inventory sizes to be excluded. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_AdSize *> *excludedInventorySizes;

/** A list of inventory sizes to be included. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_AdSize *> *targetedInventorySizes;

@end


/**
 *  Response message for listing the metrics that are measured in number of
 *  bids.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "bidMetricsRows" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListBidMetricsResponse : GTLRCollectionObject

/**
 *  List of rows, each containing a set of bid metrics.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_BidMetricsRow *> *bidMetricsRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListBidMetricsRequest.pageToken
 *  field in the subsequent call to the bidMetrics.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons that bid responses resulted in an
 *  error.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "calloutStatusRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListBidResponseErrorsResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of bid responses aggregated by callout status.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CalloutStatusRow *> *calloutStatusRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListBidResponseErrorsRequest.pageToken
 *  field in the subsequent call to the bidResponseErrors.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons that bid responses were considered
 *  to have no applicable bids.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "bidResponseWithoutBidsStatusRows" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListBidResponsesWithoutBidsResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of bid responses without bids aggregated by
 *  status.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_BidResponseWithoutBidsStatusRow *> *bidResponseWithoutBidsStatusRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListBidResponsesWithoutBidsRequest.pageToken
 *  field in the subsequent call to the bidResponsesWithoutBids.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clients" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientsResponse : GTLRCollectionObject

/**
 *  The returned list of clients.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Client *> *clients;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientsRequest.pageToken
 *  field in the subsequent call to the
 *  accounts.clients.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientUserInvitationsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "invitations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientUserInvitationsResponse : GTLRCollectionObject

/**
 *  The returned list of client users.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ClientUserInvitation *> *invitations;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientUserInvitationsRequest.pageToken
 *  field in the subsequent call to the
 *  clients.invitations.list
 *  method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientUsersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "users" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientUsersResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientUsersRequest.pageToken
 *  field in the subsequent call to the
 *  clients.invitations.list
 *  method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The returned list of client users.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ClientUser *> *users;

@end


/**
 *  A response for listing creatives.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "creatives" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListCreativesResponse : GTLRCollectionObject

/**
 *  The list of creatives.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Creative *> *creatives;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListCreativesRequest.page_token
 *  field in the subsequent call to `ListCreatives` method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all creatives associated with a given filtered
 *  bid reason.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "filteredBidCreativeRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByCreativeResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of bids with a given creative status aggregated
 *  by creative.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_FilteredBidCreativeRow *> *filteredBidCreativeRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListCreativeStatusBreakdownByCreativeRequest.pageToken
 *  field in the subsequent call to the filteredBids.creatives.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all details associated with a given filtered
 *  bid
 *  reason.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "filteredBidDetailRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse : GTLRCollectionObject

/**
 *  The type of detail that the detail IDs represent.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_CreativeAttribute
 *        Indicates that the detail ID refers to a creative attribute; see
 *        [publisher-excludable-creative-attributes](https://developers.google.com/authorized-buyers/rtb/downloads/publisher-excludable-creative-attributes).
 *        (Value: "CREATIVE_ATTRIBUTE")
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_DetailTypeUnspecified
 *        A placeholder for an undefined status.
 *        This value will never be returned in responses. (Value:
 *        "DETAIL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_DisapprovalReason
 *        Indicates that the detail ID refers to a disapproval reason; see
 *        DisapprovalReason enum in
 *        [snippet-status-report-proto](https://developers.google.com/authorized-buyers/rtb/downloads/snippet-status-report-proto).
 *        (Value: "DISAPPROVAL_REASON")
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_ProductCategory
 *        Indicates that the detail ID refers to a product category; see
 *        [ad-product-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-product-categories).
 *        (Value: "PRODUCT_CATEGORY")
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_SensitiveCategory
 *        Indicates that the detail ID refers to a sensitive category; see
 *        [ad-sensitive-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-sensitive-categories).
 *        (Value: "SENSITIVE_CATEGORY")
 *    @arg @c kGTLRAdExchangeBuyerII_ListCreativeStatusBreakdownByDetailResponse_DetailType_Vendor
 *        Indicates that the detail ID refers to a vendor; see
 *        [vendors](https://developers.google.com/authorized-buyers/rtb/downloads/vendors).
 *        (Value: "VENDOR")
 */
@property(nonatomic, copy, nullable) NSString *detailType;

/**
 *  List of rows, with counts of bids with a given creative status aggregated
 *  by detail.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_FilteredBidDetailRow *> *filteredBidDetailRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListCreativeStatusBreakdownByDetailRequest.pageToken
 *  field in the subsequent call to the filteredBids.details.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A response for listing creative and deal associations
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "associations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListDealAssociationsResponse : GTLRCollectionObject

/**
 *  The list of associations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CreativeDealAssociation *> *associations;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListDealAssociationsRequest.page_token
 *  field in the subsequent call to 'ListDealAssociation' method to retrieve
 *  the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons that bid requests were filtered and
 *  not sent to the buyer.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "calloutStatusRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListFilteredBidRequestsResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of filtered bid requests aggregated by callout
 *  status.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CalloutStatusRow *> *calloutStatusRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListFilteredBidRequestsRequest.pageToken
 *  field in the subsequent call to the filteredBidRequests.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons that bids were filtered from the
 *  auction.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "creativeStatusRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListFilteredBidsResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of filtered bids aggregated by filtering reason
 *  (i.e. creative status).
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CreativeStatusRow *> *creativeStatusRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListFilteredBidsRequest.pageToken
 *  field in the subsequent call to the filteredBids.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing filter sets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "filterSets" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListFilterSetsResponse : GTLRCollectionObject

/**
 *  The filter sets belonging to the buyer.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_FilterSet *> *filterSets;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListFilterSetsRequest.pageToken
 *  field in the subsequent call to the
 *  accounts.filterSets.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing the metrics that are measured in number of
 *  impressions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "impressionMetricsRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListImpressionMetricsResponse : GTLRCollectionObject

/**
 *  List of rows, each containing a set of impression metrics.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ImpressionMetricsRow *> *impressionMetricsRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListImpressionMetricsRequest.pageToken
 *  field in the subsequent call to the impressionMetrics.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons that bids lost in the auction.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "creativeStatusRows" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListLosingBidsResponse : GTLRCollectionObject

/**
 *  List of rows, with counts of losing bids aggregated by loss reason (i.e.
 *  creative status).
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_CreativeStatusRow *> *creativeStatusRows;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListLosingBidsRequest.pageToken
 *  field in the subsequent call to the losingBids.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing all reasons for which a buyer was not billed
 *  for
 *  a winning bid.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "nonBillableWinningBidStatusRows" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListNonBillableWinningBidsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListNonBillableWinningBidsRequest.pageToken
 *  field in the subsequent call to the nonBillableWinningBids.list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of rows, with counts of bids not billed aggregated by reason.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow *> *nonBillableWinningBidStatusRows;

@end


/**
 *  Response message for listing products visible to the buyer.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "products" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListProductsResponse : GTLRCollectionObject

/** List pagination support. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of matching products at their head revision number.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Product *> *products;

@end


/**
 *  Response message for listing proposals.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "proposals" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListProposalsResponse : GTLRCollectionObject

/** Continuation token for fetching the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of proposals.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Proposal *> *proposals;

@end


/**
 *  Response message for profiles visible to the buyer.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "publisherProfiles" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAdExchangeBuyerII_ListPublisherProfilesResponse : GTLRCollectionObject

/** List pagination support */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of matching publisher profiles.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_PublisherProfile *> *publisherProfiles;

@end


/**
 *  \@OutputOnly The Geo criteria the restriction applies to.
 */
@interface GTLRAdExchangeBuyerII_LocationContext : GTLRObject

/**
 *  IDs representing the geo location for this context.
 *  Please refer to the
 *  [geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv)
 *  file for different geo criteria IDs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *geoCriteriaIds;

@end


/**
 *  Targeting represents different criteria that can be used by advertisers to
 *  target ad inventory. For example, they can choose to target ad requests only
 *  if the user is in the US.
 *  Multiple types of targeting are always applied as a logical AND, unless
 *  noted
 *  otherwise.
 */
@interface GTLRAdExchangeBuyerII_MarketplaceTargeting : GTLRObject

/** Geo criteria IDs to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CriteriaTargeting *geoTargeting;

/** Inventory sizes to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_InventorySizeTargeting *inventorySizeTargeting;

/** Placement targeting information, e.g., URL, mobile applications. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_PlacementTargeting *placementTargeting;

/**
 *  Technology targeting information, e.g., operating system, device category.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_TechnologyTargeting *technologyTargeting;

/** Video targeting information. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_VideoTargeting *videoTargeting;

@end


/**
 *  A metric value, with an expected value and a variance; represents a count
 *  that may be either exact or estimated (i.e. when sampled).
 */
@interface GTLRAdExchangeBuyerII_MetricValue : GTLRObject

/**
 *  The expected value of the metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

/**
 *  The variance (i.e. square of the standard deviation) of the metric value.
 *  If value is exact, variance is 0.
 *  Can be used to calculate margin of error as a percentage of value, using
 *  the following formula, where Z is the standard constant that depends on the
 *  desired size of the confidence interval (e.g. for 90% confidence interval,
 *  use Z = 1.645):
 *  marginOfError = 100 * Z * sqrt(variance) / value
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *variance;

@end


/**
 *  Mobile application targeting settings.
 */
@interface GTLRAdExchangeBuyerII_MobileApplicationTargeting : GTLRObject

/**
 *  Publisher owned apps to be targeted or excluded by the publisher to
 *  display the ads in.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_FirstPartyMobileApplicationTargeting *firstPartyTargeting;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRAdExchangeBuyerII_Money : GTLRObject

/** The 3-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount.
 *  The value must be between -999,999,999 and +999,999,999 inclusive.
 *  If `units` is positive, `nanos` must be positive or zero.
 *  If `units` is zero, `nanos` can be positive, zero, or negative.
 *  If `units` is negative, `nanos` must be negative or zero.
 *  For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount.
 *  For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Native content for a creative.
 */
@interface GTLRAdExchangeBuyerII_NativeContent : GTLRObject

/**
 *  The name of the advertiser or sponsor, to be displayed in the ad creative.
 */
@property(nonatomic, copy, nullable) NSString *advertiserName;

/** The app icon, for app download ads. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Image *appIcon;

/** A long description of the ad. */
@property(nonatomic, copy, nullable) NSString *body;

/** A label for the button that the user is supposed to click. */
@property(nonatomic, copy, nullable) NSString *callToAction;

/** The URL that the browser/SDK will load when the user clicks the ad. */
@property(nonatomic, copy, nullable) NSString *clickLinkUrl;

/** The URL to use for click tracking. */
@property(nonatomic, copy, nullable) NSString *clickTrackingUrl;

/** A short title for the ad. */
@property(nonatomic, copy, nullable) NSString *headline;

/** A large image. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Image *image;

/** A smaller image, for the advertiser's logo. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Image *logo;

/** The price of the promoted app including currency info. */
@property(nonatomic, copy, nullable) NSString *priceDisplayText;

/**
 *  The app rating in the app store. Must be in the range [0-5].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *starRating;

/** The URL to the app store to purchase/download the promoted app. */
@property(nonatomic, copy, nullable) NSString *storeUrl;

/** The URL to fetch a native video ad. */
@property(nonatomic, copy, nullable) NSString *videoUrl;

@end


/**
 *  The number of winning bids with the specified dimension values for which the
 *  buyer was not billed, as described by the specified status.
 */
@interface GTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow : GTLRObject

/** The number of bids with the specified status. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MetricValue *bidCount;

/** The values of all dimensions associated with metric values in this row. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_RowDimensions *rowDimensions;

/**
 *  The status specifying why the winning bids were not billed.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_AdNotRendered
 *        The buyer was not billed because the ad was not rendered by the
 *        publisher. (Value: "AD_NOT_RENDERED")
 *    @arg @c kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_InvalidImpression
 *        The buyer was not billed because the impression won by the bid was
 *        determined to be invalid. (Value: "INVALID_IMPRESSION")
 *    @arg @c kGTLRAdExchangeBuyerII_NonBillableWinningBidStatusRow_Status_StatusUnspecified
 *        A placeholder for an undefined status.
 *        This value will never be returned in responses. (Value:
 *        "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Terms for Private Auctions. Note that Private Auctions can be created only
 *  by the seller, but they can be returned in a get or list request.
 */
@interface GTLRAdExchangeBuyerII_NonGuaranteedAuctionTerms : GTLRObject

/**
 *  True if open auction buyers are allowed to compete with invited buyers
 *  in this private auction.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoOptimizePrivateAuction;

/** Reserve price for the specified buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_PricePerBuyer *> *reservePricesPerBuyer;

@end


/**
 *  Terms for Preferred Deals. Note that Preferred Deals cannot be created via
 *  the API at this time, but can be returned in a get or list request.
 */
@interface GTLRAdExchangeBuyerII_NonGuaranteedFixedPriceTerms : GTLRObject

/** Fixed price for the specified buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_PricePerBuyer *> *fixedPrices;

@end


/**
 *  A proposal may be associated to several notes.
 */
@interface GTLRAdExchangeBuyerII_Note : GTLRObject

/**
 *  The timestamp for when this note was created.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The role of the person (buyer/seller) creating the note.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Note_CreatorRole_Buyer Specifies the role
 *        as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAdExchangeBuyerII_Note_CreatorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Note_CreatorRole_Seller Specifies the role
 *        as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *creatorRole;

/**
 *  The actual note to attach.
 *  (max-length: 1024 unicode code units)
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 */
@property(nonatomic, copy, nullable) NSString *note;

/**
 *  The unique ID for the note.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *noteId;

/**
 *  The revision number of the proposal when the note is created.
 *  \@OutputOnly
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

@end


/**
 *  Represents targeting information for operating systems.
 */
@interface GTLRAdExchangeBuyerII_OperatingSystemTargeting : GTLRObject

/** IDs of operating systems to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CriteriaTargeting *operatingSystemCriteria;

/** IDs of operating system versions to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CriteriaTargeting *operatingSystemVersionCriteria;

@end


/**
 *  Request message to pause serving for an already-finalized proposal.
 */
@interface GTLRAdExchangeBuyerII_PauseProposalRequest : GTLRObject

/**
 *  The reason why the proposal is being paused.
 *  This human readable message will be displayed in the seller's UI.
 *  (Max length: 100 unicode code units.)
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Represents targeting about where the ads can appear, e.g., certain sites or
 *  mobile applications.
 *  Different placement targeting types will be logically OR'ed.
 */
@interface GTLRAdExchangeBuyerII_PlacementTargeting : GTLRObject

/**
 *  Mobile application targeting information in a deal.
 *  This doesn't apply to Auction Packages.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_MobileApplicationTargeting *mobileApplicationTargeting;

/** URLs to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_UrlTargeting *urlTargeting;

@end


/**
 *  \@OutputOnly The type of platform the restriction applies to.
 */
@interface GTLRAdExchangeBuyerII_PlatformContext : GTLRObject

/** The platforms this restriction applies to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *platforms;

@end


/**
 *  Represents a price and a pricing type for a product / deal.
 */
@interface GTLRAdExchangeBuyerII_Price : GTLRObject

/** The actual price with currency specified. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Money *amount;

/**
 *  The pricing type for the deal/product. (default: CPM)
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Price_PricingType_CostPerDay Cost per day
 *        (Value: "COST_PER_DAY")
 *    @arg @c kGTLRAdExchangeBuyerII_Price_PricingType_CostPerMille Cost per
 *        thousand impressions. (Value: "COST_PER_MILLE")
 *    @arg @c kGTLRAdExchangeBuyerII_Price_PricingType_PricingTypeUnspecified A
 *        placeholder for an undefined pricing type. If the pricing type is
 *        unpsecified, `COST_PER_MILLE` will be used instead. (Value:
 *        "PRICING_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *pricingType;

@end


/**
 *  Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in
 *  a product can become 0 or 1 deals. To check if there is a PricePerBuyer for
 *  a particular buyer or buyer/advertiser pair, we look for the most specific
 *  matching rule - we first look for a rule matching the buyer and advertiser,
 *  next a rule with the buyer but an empty advertiser list, and otherwise look
 *  for a matching rule where no buyer is set.
 */
@interface GTLRAdExchangeBuyerII_PricePerBuyer : GTLRObject

/**
 *  The list of advertisers for this price when associated with this buyer.
 *  If empty, all advertisers with this buyer pay this price.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *advertiserIds;

/**
 *  The buyer who will pay this price. If unset, all buyers can pay this price
 *  (if the
 *  advertisers match, and there's no more specific rule matching the buyer).
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Buyer *buyer;

/** The specified price. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Price *price;

@end


/**
 *  Buyers are allowed to store certain types of private data in a
 *  proposal/deal.
 */
@interface GTLRAdExchangeBuyerII_PrivateData : GTLRObject

/**
 *  A buyer or seller specified reference ID. This can be queried in the list
 *  operations (max-length: 1024 unicode code units).
 */
@property(nonatomic, copy, nullable) NSString *referenceId;

@end


/**
 *  Note: this resource requires whitelisting for access. Please contact your
 *  account manager for access to Marketplace resources.
 *  A product is a segment of inventory that a seller wishes to sell. It is
 *  associated with certain terms and targeting information which helps the
 *  buyer
 *  know more about the inventory.
 */
@interface GTLRAdExchangeBuyerII_Product : GTLRObject

/**
 *  The proposed end time for the deal. The field will be truncated to the order
 *  of
 *  seconds during serving.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *availableEndTime;

/**
 *  Inventory availability dates. The start time will be truncated to seconds
 *  during serving.
 *  Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to
 *  3:23:34
 *  when serving.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *availableStartTime;

/** Creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional contact information for the creator of this product. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ContactInformation *> *creatorContacts;

/** The display name for this product as set by the seller. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  If the creator has already signed off on the product, then the buyer can
 *  finalize the deal by accepting the product as is. When copying to a
 *  proposal, if any of the terms are changed, then auto_finalize is
 *  automatically set to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasCreatorSignedOff;

/** The unique ID for the product. */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The revision number of the product (auto-assigned by Marketplace).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *productRevision;

/**
 *  An ID which can be used by the Publisher Profile API to get more
 *  information about the seller that created this product.
 */
@property(nonatomic, copy, nullable) NSString *publisherProfileId;

/** Information about the seller that created this product. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Seller *seller;

/**
 *  The syndication product associated with the deal.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Content This
 *        typically represents a web page. (Value: "CONTENT")
 *    @arg @c kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Games This
 *        represents ads shown within games. (Value: "GAMES")
 *    @arg @c kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Mobile This
 *        represents a mobile property. (Value: "MOBILE")
 *    @arg @c kGTLRAdExchangeBuyerII_Product_SyndicationProduct_SyndicationProductUnspecified
 *        A placeholder for an undefined syndication product. (Value:
 *        "SYNDICATION_PRODUCT_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Product_SyndicationProduct_Video This
 *        represents video ad formats. (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *syndicationProduct;

/**
 *  Targeting that is shared between the buyer and the seller. Each targeting
 *  criterion has a specified key and for each key there is a list of inclusion
 *  value or exclusion values.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_TargetingCriteria *> *targetingCriterion;

/** The negotiable terms of the deal. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DealTerms *terms;

/** Time of last update. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  The web-property code for the seller. This needs to be copied as is when
 *  adding a new deal to a proposal.
 */
@property(nonatomic, copy, nullable) NSString *webPropertyCode;

@end


/**
 *  Note: this resource requires whitelisting for access. Please contact your
 *  account manager for access to Marketplace resources.
 *  Represents a proposal in the Marketplace. A proposal is the unit of
 *  negotiation between a seller and a buyer and contains deals which
 *  are served.
 *  Note: you can not update, create, or otherwise modify Private
 *  Auction or Preferred Deals deals through the API.
 *  Fields are updatable unless noted otherwise.
 */
@interface GTLRAdExchangeBuyerII_Proposal : GTLRObject

/**
 *  Reference to the buyer that will get billed for this proposal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Buyer *billedBuyer;

/**
 *  Reference to the buyer on the proposal.
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Buyer *buyer;

/** Contact information for the buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ContactInformation *> *buyerContacts;

/** Private data for buyer. (hidden from seller). */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_PrivateData *buyerPrivateData;

/**
 *  The deals associated with this proposal. For Private Auction proposals
 *  (whose deals have
 *  NonGuaranteedAuctionTerms), there will only be one deal.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Deal *> *deals;

/** The name for the proposal. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  True if the proposal is being renegotiated.
 *  \@OutputOnly
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRenegotiating;

/**
 *  True, if the buyside inventory setup is complete for this proposal.
 *  \@OutputOnly
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSetupComplete;

/**
 *  The role of the last user that either updated the proposal or left a
 *  comment.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_Buyer
 *        Specifies the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_LastUpdaterOrCommentorRole_Seller
 *        Specifies the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *lastUpdaterOrCommentorRole;

/**
 *  The notes associated with this proposal.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Note *> *notes;

/**
 *  Indicates whether the buyer/seller created the proposal.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_Buyer Specifies the
 *        role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_OriginatorRole_Seller Specifies
 *        the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *originatorRole;

/**
 *  Private auction ID if this proposal is a private auction proposal.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *privateAuctionId;

/**
 *  The unique ID of the proposal.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *proposalId;

/**
 *  The revision number for the proposal.
 *  Each update to the proposal or the deal causes the proposal revision number
 *  to auto-increment. The buyer keeps track of the last revision number they
 *  know of and pass it in when making an update. If the head revision number
 *  on the server has since incremented, then an ABORTED error is returned
 *  during the update operation to let the buyer know that a subsequent update
 *  was made.
 *  \@OutputOnly
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

/**
 *  The current state of the proposal.
 *  \@OutputOnly
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_BuyerAccepted The
 *        proposal has been accepted by the buyer. (Value: "BUYER_ACCEPTED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_Canceled The
 *        negotiations on the proposal were canceled and the proposal was never
 *        finalized. (Value: "CANCELED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_Finalized The
 *        proposal is finalized. During renegotiation, the proposal may
 *        not be in this state. (Value: "FINALIZED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_ProposalStateUnspecified
 *        A placeholder for an undefined proposal state. (Value:
 *        "PROPOSAL_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_Proposed The
 *        proposal is under negotiation or renegotiation. (Value: "PROPOSED")
 *    @arg @c kGTLRAdExchangeBuyerII_Proposal_ProposalState_SellerAccepted The
 *        proposal has been accepted by the seller. (Value: "SELLER_ACCEPTED")
 */
@property(nonatomic, copy, nullable) NSString *proposalState;

/**
 *  Reference to the seller on the proposal.
 *  Note: This field may be set only when creating the resource. Modifying
 *  this field while updating the resource will result in an error.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Seller *seller;

/**
 *  Contact information for the seller.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ContactInformation *> *sellerContacts;

/**
 *  The time when the proposal was last revised.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Note: this resource requires whitelisting for access. Please contact your
 *  account manager for access to Marketplace resources.
 *  Represents a publisher profile in Marketplace.
 *  All fields are read only. All string fields are free-form text entered by
 *  the publisher
 *  unless noted otherwise.
 */
@interface GTLRAdExchangeBuyerII_PublisherProfile : GTLRObject

/** Description on the publisher's audience. */
@property(nonatomic, copy, nullable) NSString *audienceDescription;

/**
 *  Statement explaining what's unique about publisher's business, and why
 *  buyers should
 *  partner with the publisher.
 */
@property(nonatomic, copy, nullable) NSString *buyerPitchStatement;

/**
 *  Contact information for direct reservation deals. This is free text entered
 *  by the publisher
 *  and may include information like names, phone numbers and email addresses.
 */
@property(nonatomic, copy, nullable) NSString *directDealsContact;

/** Name of the publisher profile. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The list of domains represented in this publisher profile. Empty if this is
 *  a parent profile.
 *  These are top private domains, meaning that these will not contain a string
 *  like
 *  "photos.google.co.uk/123", but will instead contain "google.co.uk".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *domains;

/** URL to publisher's Google+ page. */
@property(nonatomic, copy, nullable) NSString *googlePlusUrl;

/**
 *  A Google public URL to the logo for this publisher profile. The logo is
 *  stored as
 *  a PNG, JPG, or GIF image.
 */
@property(nonatomic, copy, nullable) NSString *logoUrl;

/** URL to additional marketing and sales materials. */
@property(nonatomic, copy, nullable) NSString *mediaKitUrl;

/** Overview of the publisher. */
@property(nonatomic, copy, nullable) NSString *overview;

/**
 *  Contact information for programmatic deals. This is free text entered by the
 *  publisher
 *  and may include information like names, phone numbers and email addresses.
 */
@property(nonatomic, copy, nullable) NSString *programmaticDealsContact;

/** Unique ID for publisher profile. */
@property(nonatomic, copy, nullable) NSString *publisherProfileId;

/** URL to a publisher rate card. */
@property(nonatomic, copy, nullable) NSString *rateCardInfoUrl;

/** URL to a sample content page. */
@property(nonatomic, copy, nullable) NSString *samplePageUrl;

/** Seller of the publisher profile. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Seller *seller;

/**
 *  Up to three key metrics and rankings. Max 100 characters each.
 *  For example "#1 Mobile News Site for 20 Straight Months".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *topHeadlines;

@end


/**
 *  An open-ended realtime time range specified by the start timestamp.
 *  For filter sets that specify a realtime time range RTB metrics continue to
 *  be aggregated throughout the lifetime of the filter set.
 */
@interface GTLRAdExchangeBuyerII_RealtimeTimeRange : GTLRObject

/** The start timestamp of the real-time RTB metrics aggregation. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTimestamp;

@end


/**
 *  A specific filtering status and how many times it occurred.
 */
@interface GTLRAdExchangeBuyerII_Reason : GTLRObject

/**
 *  The number of times the creative was filtered for the status. The
 *  count is aggregated across all publishers on the exchange.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  The filtering status code. Please refer to the
 *  [creative-status-codes.txt](https://storage.googleapis.com/adx-rtb-dictionaries/creative-status-codes.txt)
 *  file for different statuses.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *status;

@end


/**
 *  A relative date range, specified by an offset and a duration.
 *  The supported range of dates begins 30 days before today and ends today,
 *  i.e., the limits for these values are:
 *  offset_days >= 0
 *  duration_days >= 1
 *  offset_days + duration_days <= 30
 */
@interface GTLRAdExchangeBuyerII_RelativeDateRange : GTLRObject

/**
 *  The number of days in the requested date range, e.g., for a range spanning
 *  today: 1. For a range spanning the last 7 days: 7.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *durationDays;

/**
 *  The end date of the filter set, specified as the number of days before
 *  today, e.g., for a range where the last date is today: 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offsetDays;

@end


/**
 *  A request for removing the association between a deal and a creative.
 */
@interface GTLRAdExchangeBuyerII_RemoveDealAssociationRequest : GTLRObject

/** The association between a creative and a deal that should be removed. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CreativeDealAssociation *association;

@end


/**
 *  Request message to resume (unpause) serving for an already-finalized
 *  proposal.
 */
@interface GTLRAdExchangeBuyerII_ResumeProposalRequest : GTLRObject
@end


/**
 *  A response may include multiple rows, breaking down along various
 *  dimensions.
 *  Encapsulates the values of all dimensions for a given row.
 */
@interface GTLRAdExchangeBuyerII_RowDimensions : GTLRObject

/**
 *  The publisher identifier for this row, if a breakdown by
 *  [BreakdownDimension.PUBLISHER_IDENTIFIER](https://developers.google.com/authorized-buyers/apis/reference/rest/v2beta1/bidders.accounts.filterSets#FilterSet.BreakdownDimension)
 *  was requested.
 */
@property(nonatomic, copy, nullable) NSString *publisherIdentifier;

/** The time interval that this row represents. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_TimeInterval *timeInterval;

@end


/**
 *  \@OutputOnly A security context.
 */
@interface GTLRAdExchangeBuyerII_SecurityContext : GTLRObject

/** The security types in this context. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *securities;

@end


/**
 *  Represents a seller of inventory. Each seller is identified by a unique
 *  Ad Manager account ID.
 */
@interface GTLRAdExchangeBuyerII_Seller : GTLRObject

/**
 *  The unique ID for the seller. The seller fills in this field.
 *  The seller account ID is then available to buyer in the product.
 */
@property(nonatomic, copy, nullable) NSString *accountId;

/** Optional sub-account ID for the seller. */
@property(nonatomic, copy, nullable) NSString *subAccountId;

@end


/**
 *  The serving context for this restriction.
 */
@interface GTLRAdExchangeBuyerII_ServingContext : GTLRObject

/**
 *  Matches all contexts.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_ServingContext_All_SimpleContext A simple
 *        context. (Value: "SIMPLE_CONTEXT")
 */
@property(nonatomic, copy, nullable) NSString *all;

/** Matches impressions for a particular app type. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_AppContext *appType;

/** Matches impressions for a particular auction type. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_AuctionContext *auctionType;

/**
 *  Matches impressions coming from users *or* publishers in a specific
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_LocationContext *location;

/** Matches impressions coming from a particular platform. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_PlatformContext *platform;

/** Matches impressions for a particular security type. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_SecurityContext *securityType;

@end


/**
 *  \@OutputOnly A representation of the status of an ad in a
 *  specific context. A context here relates to where something ultimately
 *  serves
 *  (for example, a user or publisher geo, a platform, an HTTPS vs HTTP request,
 *  or the type of auction).
 */
@interface GTLRAdExchangeBuyerII_ServingRestriction : GTLRObject

/** The contexts for the restriction. */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ServingContext *> *contexts;

/**
 *  Disapproval bound to this restriction.
 *  Only present if status=DISAPPROVED.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_Disapproval *disapproval;

/**
 *  Any disapprovals bound to this restriction.
 *  Only present if status=DISAPPROVED.
 *  Can be used to filter the response of the
 *  creatives.list
 *  method.
 *  Deprecated; please use
 *  disapproval
 *  field instead.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Disapproval *> *disapprovalReasons;

/**
 *  The status of the creative in this context (for example, it has been
 *  explicitly disapproved or is pending review).
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_ServingRestriction_Status_Disapproval The
 *        ad was disapproved in this context. (Value: "DISAPPROVAL")
 *    @arg @c kGTLRAdExchangeBuyerII_ServingRestriction_Status_PendingReview The
 *        ad is pending review in this context. (Value: "PENDING_REVIEW")
 *    @arg @c kGTLRAdExchangeBuyerII_ServingRestriction_Status_StatusUnspecified
 *        The status is not known. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Message depicting the size of the creative. The units of width and
 *  height depend on the type of the targeting.
 */
@interface GTLRAdExchangeBuyerII_Size : GTLRObject

/**
 *  The height of the creative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  The width of the creative
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  A request for stopping notifications for changes to creative Status.
 */
@interface GTLRAdExchangeBuyerII_StopWatchingCreativeRequest : GTLRObject
@end


/**
 *  Advertisers can target different attributes of an ad slot. For example,
 *  they can choose to show ads only if the user is in the U.S. Such
 *  targeting criteria can be specified as part of Shared Targeting.
 */
@interface GTLRAdExchangeBuyerII_TargetingCriteria : GTLRObject

/**
 *  The list of values to exclude from targeting. Each value is AND'd
 *  together.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_TargetingValue *> *exclusions;

/**
 *  The list of value to include as part of the targeting. Each value is OR'd
 *  together.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_TargetingValue *> *inclusions;

/**
 *  The key representing the shared targeting criterion.
 *  Targeting criteria defined by Google ad servers will begin with GOOG_.
 *  Third parties may define their own keys.
 *  A list of permissible keys along with the acceptable values will be
 *  provided as part of the external documentation.
 */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  A polymorphic targeting value used as part of Shared Targeting.
 */
@interface GTLRAdExchangeBuyerII_TargetingValue : GTLRObject

/**
 *  The creative size value to include/exclude.
 *  Filled in when key = GOOG_CREATIVE_SIZE
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CreativeSize *creativeSizeValue;

/**
 *  The daypart targeting to include / exclude.
 *  Filled in when the key is GOOG_DAYPART_TARGETING.
 *  The definition of this targeting is derived from the structure
 *  used by Ad Manager.
 */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_DayPartTargeting *dayPartTargetingValue;

/**
 *  The long value to include/exclude.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longValue;

/** The string value to include/exclude. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  Represents targeting about various types of technology.
 */
@interface GTLRAdExchangeBuyerII_TechnologyTargeting : GTLRObject

/** IDs of device capabilities to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CriteriaTargeting *deviceCapabilityTargeting;

/** IDs of device categories to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_CriteriaTargeting *deviceCategoryTargeting;

/** Operating system related targeting information. */
@property(nonatomic, strong, nullable) GTLRAdExchangeBuyerII_OperatingSystemTargeting *operatingSystemTargeting;

@end


/**
 *  An interval of time, with an absolute start and end.
 */
@interface GTLRAdExchangeBuyerII_TimeInterval : GTLRObject

/**
 *  The timestamp marking the end of the range (exclusive) for which data is
 *  included.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The timestamp marking the start of the range (inclusive) for which data is
 *  included.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLRAdExchangeBuyerII_TimeOfDay : GTLRObject

/**
 *  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
 *  to allow the value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of hour of day. Must be from 0 to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 *  allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Represents a list of targeted and excluded URLs (e.g., google.com).
 *  For Private Auction and AdX Preferred Deals, URLs are either included or
 *  excluded.
 *  For Programmatic Guaranteed and Preferred Deals, this doesn't
 *  apply.
 */
@interface GTLRAdExchangeBuyerII_UrlTargeting : GTLRObject

/** A list of URLs to be excluded. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedUrls;

/** A list of URLs to be included. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedUrls;

@end


/**
 *  Video content for a creative.
 */
@interface GTLRAdExchangeBuyerII_VideoContent : GTLRObject

/** The URL to fetch a video ad. */
@property(nonatomic, copy, nullable) NSString *videoUrl;

/**
 *  The contents of a VAST document for a video ad.
 *  This document should conform to the VAST 2.0 or 3.0 standard.
 */
@property(nonatomic, copy, nullable) NSString *videoVastXml;

@end


/**
 *  Represents targeting information about video.
 */
@interface GTLRAdExchangeBuyerII_VideoTargeting : GTLRObject

/**
 *  A list of video positions to be excluded.
 *  Position types can either be included or excluded (XOR).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedPositionTypes;

/**
 *  A list of video positions to be included.
 *  When the included list is present, the excluded list must be empty.
 *  When the excluded list is present, the included list must be empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedPositionTypes;

@end


/**
 *  A request for watching changes to creative Status.
 */
@interface GTLRAdExchangeBuyerII_WatchCreativeRequest : GTLRObject

/**
 *  The Pub/Sub topic to publish notifications to.
 *  This topic must already exist and must give permission to
 *  ad-exchange-buyside-reports\@google.com to write to the topic.
 *  This should be the full resource name in
 *  "projects/{project_id}/topics/{topic_id}" format.
 */
@property(nonatomic, copy, nullable) NSString *topic;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
