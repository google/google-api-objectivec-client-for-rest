// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Document AI API (documentai/v1beta2)
// Description:
//   Service to parse structured information from unstructured or
//   semi-structured documents using state-of-the-art Google AI such as natural
//   language, computer vision, translation, and AutoML.
// Documentation:
//   https://cloud.google.com/document-ai/docs/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDocument_GoogleCloudDocumentaiV1beta1BoundingPoly;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntity;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntityRelation;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPage;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageBlock;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDimension;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageFormField;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLine;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageParagraph;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTable;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageToken;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageVisualElement;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentShardInfo;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyle;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyleFontSize;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTranslation;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1GcsDestination;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1GcsSource;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1InputConfig;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1NormalizedVertex;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1OutputConfig;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1ProcessDocumentResponse;
@class GTLRDocument_GoogleCloudDocumentaiV1beta1Vertex;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2AutoMlParams;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2BoundingPoly;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntity;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntityRelation;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentLabel;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPage;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageBlock;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDimension;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageFormField;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLine;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageParagraph;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTable;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageToken;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageVisualElement;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentShardInfo;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyle;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyleFontSize;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTranslation;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2EntityExtractionParams;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2FormExtractionParams;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2GcsDestination;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2GcsSource;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2InputConfig;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2KeyValuePairHint;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2NormalizedVertex;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2OcrParams;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2OutputConfig;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentRequest;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentResponse;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2TableBoundHint;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2TableExtractionParams;
@class GTLRDocument_GoogleCloudDocumentaiV1beta2Vertex;
@class GTLRDocument_GoogleLongrunningOperation_Metadata;
@class GTLRDocument_GoogleLongrunningOperation_Response;
@class GTLRDocument_GoogleRpcStatus;
@class GTLRDocument_GoogleRpcStatus_Details_Item;
@class GTLRDocument_GoogleTypeColor;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout.orientation

/**
 *  Unspecified orientation.
 *
 *  Value: "ORIENTATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_OrientationUnspecified;
/**
 *  Orientation is aligned with page down.
 *  Turn the head 180 degrees from upright to read.
 *
 *  Value: "PAGE_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageDown;
/**
 *  Orientation is aligned with page left.
 *  Turn the head 90 degrees counterclockwise from upright to read.
 *
 *  Value: "PAGE_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageLeft;
/**
 *  Orientation is aligned with page right.
 *  Turn the head 90 degrees clockwise from upright to read.
 *
 *  Value: "PAGE_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageRight;
/**
 *  Orientation is aligned with page up.
 *
 *  Value: "PAGE_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageUp;

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak.type

/**
 *  A hyphen that indicates that a token has been split across lines.
 *
 *  Value: "HYPHEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_Hyphen;
/**
 *  A single whitespace.
 *
 *  Value: "SPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_Space;
/**
 *  Unspecified break type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_TypeUnspecified;
/**
 *  A wider whitespace.
 *
 *  Value: "WIDE_SPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_WideSpace;

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata.state

/**
 *  Request is received.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Accepted;
/**
 *  The batch processing was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Cancelled;
/**
 *  The batch processing has failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Failed;
/**
 *  Request is being processed.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Running;
/**
 *  The default value. This value is used if the state is omitted.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_StateUnspecified;
/**
 *  The batch processing completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Succeeded;
/**
 *  Request operation is waiting for scheduling.
 *
 *  Value: "WAITING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Waiting;

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout.orientation

/**
 *  Unspecified orientation.
 *
 *  Value: "ORIENTATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_OrientationUnspecified;
/**
 *  Orientation is aligned with page down.
 *  Turn the head 180 degrees from upright to read.
 *
 *  Value: "PAGE_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageDown;
/**
 *  Orientation is aligned with page left.
 *  Turn the head 90 degrees counterclockwise from upright to read.
 *
 *  Value: "PAGE_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageLeft;
/**
 *  Orientation is aligned with page right.
 *  Turn the head 90 degrees clockwise from upright to read.
 *
 *  Value: "PAGE_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageRight;
/**
 *  Orientation is aligned with page up.
 *
 *  Value: "PAGE_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageUp;

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak.type

/**
 *  A hyphen that indicates that a token has been split across lines.
 *
 *  Value: "HYPHEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_Hyphen;
/**
 *  A single whitespace.
 *
 *  Value: "SPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_Space;
/**
 *  Unspecified break type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_TypeUnspecified;
/**
 *  A wider whitespace.
 *
 *  Value: "WIDE_SPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_WideSpace;

// ----------------------------------------------------------------------------
// GTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata.state

/**
 *  Request is received.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Accepted;
/**
 *  The batch processing was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Cancelled;
/**
 *  The batch processing has failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Failed;
/**
 *  Request is being processed.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Running;
/**
 *  The default value. This value is used if the state is omitted.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_StateUnspecified;
/**
 *  The batch processing completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Succeeded;
/**
 *  Request operation is waiting for scheduling.
 *
 *  Value: "WAITING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Waiting;

/**
 *  Response to an batch document processing request. This is returned in
 *  the LRO Operation after the operation is complete.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse : GTLRObject

/** Responses for each individual document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1ProcessDocumentResponse *> *responses;

@end


/**
 *  A bounding polygon for the detected image annotation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1BoundingPoly : GTLRObject

/** The bounding polygon normalized vertices. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1NormalizedVertex *> *normalizedVertices;

/** The bounding polygon vertices. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1Vertex *> *vertices;

@end


/**
 *  Document represents the canonical document resource in Document
 *  Understanding
 *  AI.
 *  It is an interchange format that provides insights into documents and allows
 *  for collaboration between users and Document Understanding AI to iterate and
 *  optimize for quality.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1Document : GTLRObject

/**
 *  Inline document content, represented as a stream of bytes.
 *  Note: As with all `bytes` fields, protobuffers use a pure binary
 *  representation, whereas JSON representations use base64.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  A list of entities detected on Document.text. For document shards,
 *  entities in this list may cross shard boundaries.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntity *> *entities;

/** Relationship among Document.entities. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntityRelation *> *entityRelations;

/** Any error that occurred while processing this document. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleRpcStatus *error;

/**
 *  An IANA published MIME type (also referred to as media type). For more
 *  information, see
 *  https://www.iana.org/assignments/media-types/media-types.xhtml.
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/** Visual page layout for the Document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPage *> *pages;

/**
 *  Information about the sharding if this document is sharded part of a larger
 *  document. If the document is not sharded, this message is not specified.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentShardInfo *shardInfo;

/** UTF-8 encoded text in reading order from the document. */
@property(nonatomic, copy, nullable) NSString *text;

/** Styles for the Document.text. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyle *> *textStyles;

/**
 *  A list of translations on Document.text. For document shards,
 *  translations in this list may cross shard boundaries.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTranslation *> *translations;

/**
 *  Currently supports Google Cloud Storage URI of the form
 *  `gs://bucket_name/object_name`. Object versioning is not supported.
 *  See [Google Cloud Storage Request
 *  URIs](https://cloud.google.com/storage/docs/reference-uris) for more
 *  info.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A phrase in the text that is a known entity type, such as a person, an
 *  organization, or location.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntity : GTLRObject

/**
 *  Optional. Confidence of detected Schema entity. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Deprecated. Use `id` field instead. */
@property(nonatomic, copy, nullable) NSString *mentionId;

/** Text value in the document e.g. `1600 Amphitheatre Pkwy`. */
@property(nonatomic, copy, nullable) NSString *mentionText;

/**
 *  Provenance of the entity.
 *  Text anchor indexing into the Document.text.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor *textAnchor;

/** Entity type from a schema e.g. `Address`. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Relationship between Entities.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentEntityRelation : GTLRObject

/** Object entity id. */
@property(nonatomic, copy, nullable) NSString *objectId;

/** Relationship description. */
@property(nonatomic, copy, nullable) NSString *relation;

/** Subject entity id. */
@property(nonatomic, copy, nullable) NSString *subjectId;

@end


/**
 *  A page in a Document.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPage : GTLRObject

/**
 *  A list of visually detected text blocks on the page.
 *  A block has a set of lines (collected into paragraphs) that have a common
 *  line-spacing and orientation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageBlock *> *blocks;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Physical dimension of the page. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDimension *dimension;

/** A list of visually detected form fields on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageFormField *> *formFields;

/** Layout for the page. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

/**
 *  A list of visually detected text lines on the page.
 *  A collection of tokens that a human would perceive as a line.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLine *> *lines;

/**
 *  1-based index for current Page in a parent Document.
 *  Useful when a page is taken out of a Document for individual
 *  processing.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageNumber;

/**
 *  A list of visually detected text paragraphs on the page.
 *  A collection of lines that a human would perceive as a paragraph.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageParagraph *> *paragraphs;

/** A list of visually detected tables on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTable *> *tables;

/** A list of visually detected tokens on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageToken *> *tokens;

/**
 *  A list of detected non-text visual elements e.g. checkbox,
 *  signature etc. on the page.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageVisualElement *> *visualElements;

@end


/**
 *  A block has a set of lines (collected into paragraphs) that have a
 *  common line-spacing and orientation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageBlock : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Block. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

@end


/**
 *  Detected language for a structural component.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage : GTLRObject

/**
 *  Confidence of detected language. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see
 *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

@end


/**
 *  Dimension for the page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDimension : GTLRObject

/**
 *  Page height.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Dimension unit. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  Page width.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  A form field detected on the page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageFormField : GTLRObject

/**
 *  Layout for the FormField name. e.g. `Address`, `Email`,
 *  `Grand total`, `Phone number`, etc.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *fieldName;

/** Layout for the FormField value. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *fieldValue;

/** A list of detected languages for name together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *nameDetectedLanguages;

/** A list of detected languages for value together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *valueDetectedLanguages;

@end


/**
 *  Visual element describing a layout unit on a page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout : GTLRObject

/** The bounding polygon for the Layout. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1BoundingPoly *boundingPoly;

/**
 *  Confidence of the current Layout within context of the object this
 *  layout is for. e.g. confidence can be for a single token, a table,
 *  a visual element, etc. depending on context. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  Detected orientation for the Layout.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_OrientationUnspecified
 *        Unspecified orientation. (Value: "ORIENTATION_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageDown
 *        Orientation is aligned with page down.
 *        Turn the head 180 degrees from upright to read. (Value: "PAGE_DOWN")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageLeft
 *        Orientation is aligned with page left.
 *        Turn the head 90 degrees counterclockwise from upright to read.
 *        (Value: "PAGE_LEFT")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageRight
 *        Orientation is aligned with page right.
 *        Turn the head 90 degrees clockwise from upright to read. (Value:
 *        "PAGE_RIGHT")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout_Orientation_PageUp
 *        Orientation is aligned with page up. (Value: "PAGE_UP")
 */
@property(nonatomic, copy, nullable) NSString *orientation;

/** Text anchor indexing into the Document.text. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor *textAnchor;

@end


/**
 *  A collection of tokens that a human would perceive as a line.
 *  Does not cross column boundaries, can be horizontal, vertical, etc.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLine : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Line. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

@end


/**
 *  A collection of lines that a human would perceive as a paragraph.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageParagraph : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Paragraph. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

@end


/**
 *  A table representation similar to HTML table structure.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTable : GTLRObject

/** Body rows of the table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow *> *bodyRows;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Header rows of the table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow *> *headerRows;

/** Layout for Table. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

@end


/**
 *  A cell representation inside the table.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell : GTLRObject

/**
 *  How many columns this cell spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *colSpan;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for TableCell. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

/**
 *  How many rows this cell spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowSpan;

@end


/**
 *  A row of table cells.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow : GTLRObject

/** Cells that make up this row. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell *> *cells;

@end


/**
 *  A detected token.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageToken : GTLRObject

/** Detected break at the end of a Token. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak *detectedBreak;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Token. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

@end


/**
 *  Detected break at the end of a Token.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak : GTLRObject

/**
 *  Detected break type.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_Hyphen
 *        A hyphen that indicates that a token has been split across lines.
 *        (Value: "HYPHEN")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_Space
 *        A single whitespace. (Value: "SPACE")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_TypeUnspecified
 *        Unspecified break type. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak_Type_WideSpace
 *        A wider whitespace. (Value: "WIDE_SPACE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Detected non-text visual elements e.g. checkbox, signature etc. on the
 *  page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageVisualElement : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for VisualElement. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentPageLayout *layout;

/** Type of the VisualElement. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  For a large document, sharding may be performed to produce several
 *  document shards. Each document shard contains this field to detail which
 *  shard it is.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentShardInfo : GTLRObject

/**
 *  Total number of shards.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardCount;

/**
 *  The 0-based index of this shard.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardIndex;

/**
 *  The index of the first character in Document.text in the overall
 *  document global text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *textOffset;

@end


/**
 *  Annotation for common text style attributes. This adheres to CSS
 *  conventions as much as possible.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyle : GTLRObject

/** Text background color. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleTypeColor *backgroundColor;

/** Text color. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleTypeColor *color;

/** Font size. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyleFontSize *fontSize;

/**
 *  Font weight. Possible values are normal, bold, bolder, and lighter.
 *  https://www.w3schools.com/cssref/pr_font_weight.asp
 */
@property(nonatomic, copy, nullable) NSString *fontWeight;

/** Text anchor indexing into the Document.text. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor *textAnchor;

/**
 *  Text decoration. Follows CSS standard.
 *  <text-decoration-line> <text-decoration-color> <text-decoration-style>
 *  https://www.w3schools.com/cssref/pr_text_text-decoration.asp
 */
@property(nonatomic, copy, nullable) NSString *textDecoration;

/**
 *  Text style. Possible values are normal, italic, and oblique.
 *  https://www.w3schools.com/cssref/pr_font_font-style.asp
 */
@property(nonatomic, copy, nullable) NSString *textStyle;

@end


/**
 *  Font size with unit.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentStyleFontSize : GTLRObject

/**
 *  Font size for the text.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/** Unit for the font size. Follows CSS naming (in, px, pt, etc.). */
@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  Text reference indexing into the Document.text.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor : GTLRObject

/** The text segments from the Document.text. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment *> *textSegments;

@end


/**
 *  A text segment in the Document.text. The indices may be out of bounds
 *  which indicate that the text extends into another document shard for
 *  large sharded documents. See ShardInfo.text_offset
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment : GTLRObject

/**
 *  TextSegment half open end UTF-8 char index in the
 *  Document.text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/**
 *  TextSegment start UTF-8 char index in the Document.text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  A translation of the text segment.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTranslation : GTLRObject

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see
 *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Provenance of the translation.
 *  Text anchor indexing into the Document.text.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1DocumentTextAnchor *textAnchor;

/** Text translated into the target language. */
@property(nonatomic, copy, nullable) NSString *translatedText;

@end


/**
 *  The Google Cloud Storage location where the output file will be written to.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1GcsDestination : GTLRObject

@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The Google Cloud Storage location where the input file will be read from.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1GcsSource : GTLRObject

@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The desired input location and metadata.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1InputConfig : GTLRObject

/**
 *  The Google Cloud Storage location to read the input from. This must be a
 *  single file.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1GcsSource *gcsSource;

/**
 *  Required. Mimetype of the input. Current supported mimetypes are
 *  application/pdf,
 *  image/tiff, and image/gif.
 *  In addition, application/json type is supported for requests with
 *  ProcessDocumentRequest.automl_params field set. The JSON file needs to
 *  be in Document format.
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  A vertex represents a 2D point in the image.
 *  NOTE: the normalized vertex coordinates are relative to the original image
 *  and range from 0 to 1.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1NormalizedVertex : GTLRObject

/**
 *  X coordinate.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Y coordinate.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  Contains metadata for the BatchProcessDocuments operation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata : GTLRObject

/** The creation time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The state of the current batch processing.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Accepted
 *        Request is received. (Value: "ACCEPTED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Cancelled
 *        The batch processing was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Failed
 *        The batch processing has failed. (Value: "FAILED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Running
 *        Request is being processed. (Value: "RUNNING")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_StateUnspecified
 *        The default value. This value is used if the state is omitted. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Succeeded
 *        The batch processing completed successfully. (Value: "SUCCEEDED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta1OperationMetadata_State_Waiting
 *        Request operation is waiting for scheduling. (Value: "WAITING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** A message providing more details about the current state of processing. */
@property(nonatomic, copy, nullable) NSString *stateMessage;

/** The last update time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The desired output location and metadata.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1OutputConfig : GTLRObject

/** The Google Cloud Storage location to write the output to. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1GcsDestination *gcsDestination;

/**
 *  The max number of pages to include into each output Document shard JSON on
 *  Google Cloud Storage.
 *  The valid range is [1, 100]. If not specified, the default value is 20.
 *  For example, for one pdf file with 100 pages, 100 parsed pages will be
 *  produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each
 *  containing 20 parsed pages will be written under the prefix
 *  OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where
 *  x and y are 1-indexed page numbers.
 *  Example GCS outputs with 157 pages and pages_per_shard = 50:
 *  <prefix>pages-001-to-050.json
 *  <prefix>pages-051-to-100.json
 *  <prefix>pages-101-to-150.json
 *  <prefix>pages-151-to-157.json
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pagesPerShard;

@end


/**
 *  Response to a single document processing request.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1ProcessDocumentResponse : GTLRObject

/**
 *  Information about the input file. This is the same as the corresponding
 *  input config in the request.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1InputConfig *inputConfig;

/**
 *  The output location of the parsed responses. The responses are written to
 *  this location as JSON-serialized `Document` objects.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta1OutputConfig *outputConfig;

@end


/**
 *  A vertex represents a 2D point in the image.
 *  NOTE: the vertex coordinates are in the same scale as the original image.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta1Vertex : GTLRObject

/**
 *  X coordinate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Y coordinate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  Parameters to control AutoML model prediction behavior.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2AutoMlParams : GTLRObject

/**
 *  Resource name of the AutoML model.
 *  Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`.
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Request to batch process documents as an asynchronous operation. The output
 *  is written to Cloud Storage as JSON in the [Document] format.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest : GTLRObject

/** Required. Individual requests for each document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentRequest *> *requests;

@end


/**
 *  Response to an batch document processing request. This is returned in
 *  the LRO Operation after the operation is complete.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse : GTLRObject

/** Responses for each individual document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentResponse *> *responses;

@end


/**
 *  A bounding polygon for the detected image annotation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2BoundingPoly : GTLRObject

/** The bounding polygon normalized vertices. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2NormalizedVertex *> *normalizedVertices;

/** The bounding polygon vertices. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2Vertex *> *vertices;

@end


/**
 *  Document represents the canonical document resource in Document
 *  Understanding
 *  AI.
 *  It is an interchange format that provides insights into documents and allows
 *  for collaboration between users and Document Understanding AI to iterate and
 *  optimize for quality.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2Document : GTLRObject

/**
 *  Inline document content, represented as a stream of bytes.
 *  Note: As with all `bytes` fields, protobuffers use a pure binary
 *  representation, whereas JSON representations use base64.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  A list of entities detected on Document.text. For document shards,
 *  entities in this list may cross shard boundaries.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntity *> *entities;

/** Relationship among Document.entities. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntityRelation *> *entityRelations;

/** Any error that occurred while processing this document. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleRpcStatus *error;

/** Labels for this document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentLabel *> *labels;

/**
 *  An IANA published MIME type (also referred to as media type). For more
 *  information, see
 *  https://www.iana.org/assignments/media-types/media-types.xhtml.
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/** Visual page layout for the Document. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPage *> *pages;

/**
 *  Information about the sharding if this document is sharded part of a larger
 *  document. If the document is not sharded, this message is not specified.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentShardInfo *shardInfo;

/** UTF-8 encoded text in reading order from the document. */
@property(nonatomic, copy, nullable) NSString *text;

/** Styles for the Document.text. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyle *> *textStyles;

/**
 *  A list of translations on Document.text. For document shards,
 *  translations in this list may cross shard boundaries.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTranslation *> *translations;

/**
 *  Currently supports Google Cloud Storage URI of the form
 *  `gs://bucket_name/object_name`. Object versioning is not supported.
 *  See [Google Cloud Storage Request
 *  URIs](https://cloud.google.com/storage/docs/reference-uris) for more
 *  info.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A phrase in the text that is a known entity type, such as a person, an
 *  organization, or location.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntity : GTLRObject

/**
 *  Optional. Confidence of detected Schema entity. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Deprecated. Use `id` field instead. */
@property(nonatomic, copy, nullable) NSString *mentionId;

/** Text value in the document e.g. `1600 Amphitheatre Pkwy`. */
@property(nonatomic, copy, nullable) NSString *mentionText;

/**
 *  Provenance of the entity.
 *  Text anchor indexing into the Document.text.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor *textAnchor;

/** Entity type from a schema e.g. `Address`. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Relationship between Entities.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentEntityRelation : GTLRObject

/** Object entity id. */
@property(nonatomic, copy, nullable) NSString *objectId;

/** Relationship description. */
@property(nonatomic, copy, nullable) NSString *relation;

/** Subject entity id. */
@property(nonatomic, copy, nullable) NSString *subjectId;

@end


/**
 *  Label attaches schema information and/or other metadata to segments within
 *  a Document. Multiple Labels on a single field can denote either
 *  different labels, different instances of the same label created at
 *  different times, or some combination of both.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentLabel : GTLRObject

/**
 *  Label is generated AutoML model. This field stores the full resource
 *  name of the AutoML model.
 *  Format:
 *  `projects/{project-id}/locations/{location-id}/models/{model-id}`
 */
@property(nonatomic, copy, nullable) NSString *automlModel;

/**
 *  Confidence score between 0 and 1 for label assignment.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  Name of the label.
 *  When the label is generated from AutoML Text Classification model, this
 *  field represents the name of the category.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A page in a Document.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPage : GTLRObject

/**
 *  A list of visually detected text blocks on the page.
 *  A block has a set of lines (collected into paragraphs) that have a common
 *  line-spacing and orientation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageBlock *> *blocks;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Physical dimension of the page. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDimension *dimension;

/** A list of visually detected form fields on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageFormField *> *formFields;

/** Layout for the page. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

/**
 *  A list of visually detected text lines on the page.
 *  A collection of tokens that a human would perceive as a line.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLine *> *lines;

/**
 *  1-based index for current Page in a parent Document.
 *  Useful when a page is taken out of a Document for individual
 *  processing.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageNumber;

/**
 *  A list of visually detected text paragraphs on the page.
 *  A collection of lines that a human would perceive as a paragraph.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageParagraph *> *paragraphs;

/** A list of visually detected tables on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTable *> *tables;

/** A list of visually detected tokens on the page. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageToken *> *tokens;

/**
 *  A list of detected non-text visual elements e.g. checkbox,
 *  signature etc. on the page.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageVisualElement *> *visualElements;

@end


/**
 *  A block has a set of lines (collected into paragraphs) that have a
 *  common line-spacing and orientation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageBlock : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Block. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

@end


/**
 *  Detected language for a structural component.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage : GTLRObject

/**
 *  Confidence of detected language. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see
 *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

@end


/**
 *  Dimension for the page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDimension : GTLRObject

/**
 *  Page height.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Dimension unit. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  Page width.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  A form field detected on the page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageFormField : GTLRObject

/**
 *  Layout for the FormField name. e.g. `Address`, `Email`,
 *  `Grand total`, `Phone number`, etc.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *fieldName;

/** Layout for the FormField value. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *fieldValue;

/** A list of detected languages for name together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *nameDetectedLanguages;

/** A list of detected languages for value together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *valueDetectedLanguages;

/**
 *  If the value is non-textual, this field represents the type. Current
 *  valid values are:
 *  - blank (this indicates the field_value is normal text)
 *  - "unfilled_checkbox"
 *  - "filled_checkbox"
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  Visual element describing a layout unit on a page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout : GTLRObject

/** The bounding polygon for the Layout. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2BoundingPoly *boundingPoly;

/**
 *  Confidence of the current Layout within context of the object this
 *  layout is for. e.g. confidence can be for a single token, a table,
 *  a visual element, etc. depending on context. Range [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  Detected orientation for the Layout.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_OrientationUnspecified
 *        Unspecified orientation. (Value: "ORIENTATION_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageDown
 *        Orientation is aligned with page down.
 *        Turn the head 180 degrees from upright to read. (Value: "PAGE_DOWN")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageLeft
 *        Orientation is aligned with page left.
 *        Turn the head 90 degrees counterclockwise from upright to read.
 *        (Value: "PAGE_LEFT")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageRight
 *        Orientation is aligned with page right.
 *        Turn the head 90 degrees clockwise from upright to read. (Value:
 *        "PAGE_RIGHT")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout_Orientation_PageUp
 *        Orientation is aligned with page up. (Value: "PAGE_UP")
 */
@property(nonatomic, copy, nullable) NSString *orientation;

/** Text anchor indexing into the Document.text. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor *textAnchor;

@end


/**
 *  A collection of tokens that a human would perceive as a line.
 *  Does not cross column boundaries, can be horizontal, vertical, etc.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLine : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Line. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

@end


/**
 *  A collection of lines that a human would perceive as a paragraph.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageParagraph : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Paragraph. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

@end


/**
 *  A table representation similar to HTML table structure.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTable : GTLRObject

/** Body rows of the table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow *> *bodyRows;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Header rows of the table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow *> *headerRows;

/** Layout for Table. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

@end


/**
 *  A cell representation inside the table.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell : GTLRObject

/**
 *  How many columns this cell spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *colSpan;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for TableCell. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

/**
 *  How many rows this cell spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowSpan;

@end


/**
 *  A row of table cells.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow : GTLRObject

/** Cells that make up this row. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell *> *cells;

@end


/**
 *  A detected token.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageToken : GTLRObject

/** Detected break at the end of a Token. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak *detectedBreak;

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for Token. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

@end


/**
 *  Detected break at the end of a Token.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak : GTLRObject

/**
 *  Detected break type.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_Hyphen
 *        A hyphen that indicates that a token has been split across lines.
 *        (Value: "HYPHEN")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_Space
 *        A single whitespace. (Value: "SPACE")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_TypeUnspecified
 *        Unspecified break type. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak_Type_WideSpace
 *        A wider whitespace. (Value: "WIDE_SPACE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Detected non-text visual elements e.g. checkbox, signature etc. on the
 *  page.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageVisualElement : GTLRObject

/** A list of detected languages together with confidence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage *> *detectedLanguages;

/** Layout for VisualElement. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentPageLayout *layout;

/** Type of the VisualElement. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  For a large document, sharding may be performed to produce several
 *  document shards. Each document shard contains this field to detail which
 *  shard it is.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentShardInfo : GTLRObject

/**
 *  Total number of shards.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardCount;

/**
 *  The 0-based index of this shard.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardIndex;

/**
 *  The index of the first character in Document.text in the overall
 *  document global text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *textOffset;

@end


/**
 *  Annotation for common text style attributes. This adheres to CSS
 *  conventions as much as possible.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyle : GTLRObject

/** Text background color. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleTypeColor *backgroundColor;

/** Text color. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleTypeColor *color;

/** Font size. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyleFontSize *fontSize;

/**
 *  Font weight. Possible values are normal, bold, bolder, and lighter.
 *  https://www.w3schools.com/cssref/pr_font_weight.asp
 */
@property(nonatomic, copy, nullable) NSString *fontWeight;

/** Text anchor indexing into the Document.text. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor *textAnchor;

/**
 *  Text decoration. Follows CSS standard.
 *  <text-decoration-line> <text-decoration-color> <text-decoration-style>
 *  https://www.w3schools.com/cssref/pr_text_text-decoration.asp
 */
@property(nonatomic, copy, nullable) NSString *textDecoration;

/**
 *  Text style. Possible values are normal, italic, and oblique.
 *  https://www.w3schools.com/cssref/pr_font_font-style.asp
 */
@property(nonatomic, copy, nullable) NSString *textStyle;

@end


/**
 *  Font size with unit.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentStyleFontSize : GTLRObject

/**
 *  Font size for the text.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/** Unit for the font size. Follows CSS naming (in, px, pt, etc.). */
@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  Text reference indexing into the Document.text.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor : GTLRObject

/** The text segments from the Document.text. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment *> *textSegments;

@end


/**
 *  A text segment in the Document.text. The indices may be out of bounds
 *  which indicate that the text extends into another document shard for
 *  large sharded documents. See ShardInfo.text_offset
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment : GTLRObject

/**
 *  TextSegment half open end UTF-8 char index in the
 *  Document.text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/**
 *  TextSegment start UTF-8 char index in the Document.text.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  A translation of the text segment.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTranslation : GTLRObject

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see
 *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Provenance of the translation.
 *  Text anchor indexing into the Document.text.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2DocumentTextAnchor *textAnchor;

/** Text translated into the target language. */
@property(nonatomic, copy, nullable) NSString *translatedText;

@end


/**
 *  Parameters to control entity extraction behavior.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2EntityExtractionParams : GTLRObject

/**
 *  Whether to enable entity extraction.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Model version of the entity extraction. Default is
 *  "builtin/stable". Specify "builtin/latest" for the latest model.
 */
@property(nonatomic, copy, nullable) NSString *modelVersion;

@end


/**
 *  Parameters to control form extraction behavior.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2FormExtractionParams : GTLRObject

/**
 *  Whether to enable form extraction.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** Reserved for future use. */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2KeyValuePairHint *> *keyValuePairHints;

/**
 *  Model version of the form extraction system. Default is
 *  "builtin/stable". Specify "builtin/latest" for the latest model.
 *  For custom form models, specify: “custom/{model_name}". Model name
 *  format is "bucket_name/path/to/modeldir" corresponding to
 *  "gs://bucket_name/path/to/modeldir" where annotated examples are stored.
 */
@property(nonatomic, copy, nullable) NSString *modelVersion;

@end


/**
 *  The Google Cloud Storage location where the output file will be written to.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2GcsDestination : GTLRObject

@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The Google Cloud Storage location where the input file will be read from.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2GcsSource : GTLRObject

@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The desired input location and metadata.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2InputConfig : GTLRObject

/**
 *  Content in bytes, represented as a stream of bytes.
 *  Note: As with all `bytes` fields, proto buffer messages use a pure binary
 *  representation, whereas JSON representations use base64.
 *  This field only works for synchronous ProcessDocument method.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *contents;

/**
 *  The Google Cloud Storage location to read the input from. This must be a
 *  single file.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2GcsSource *gcsSource;

/**
 *  Required. Mimetype of the input. Current supported mimetypes are
 *  application/pdf,
 *  image/tiff, and image/gif.
 *  In addition, application/json type is supported for requests with
 *  ProcessDocumentRequest.automl_params field set. The JSON file needs to
 *  be in Document format.
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Reserved for future use.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2KeyValuePairHint : GTLRObject

/** The key text for the hint. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Type of the value. This is case-insensitive, and could be one of:
 *  ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER,
 *  ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will
 *  be ignored.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *valueTypes;

@end


/**
 *  A vertex represents a 2D point in the image.
 *  NOTE: the normalized vertex coordinates are relative to the original image
 *  and range from 0 to 1.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2NormalizedVertex : GTLRObject

/**
 *  X coordinate.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Y coordinate.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  Parameters to control Optical Character Recognition (OCR) behavior.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2OcrParams : GTLRObject

/**
 *  List of languages to use for OCR. In most cases, an empty value
 *  yields the best results since it enables automatic language detection. For
 *  languages based on the Latin alphabet, setting `language_hints` is not
 *  needed. In rare cases, when the language of the text in the image is known,
 *  setting a hint will help get better results (although it will be a
 *  significant hindrance if the hint is wrong). Document processing returns an
 *  error if one or more of the specified languages is not one of the
 *  supported languages.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *languageHints;

@end


/**
 *  Contains metadata for the BatchProcessDocuments operation.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata : GTLRObject

/** The creation time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The state of the current batch processing.
 *
 *  Likely values:
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Accepted
 *        Request is received. (Value: "ACCEPTED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Cancelled
 *        The batch processing was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Failed
 *        The batch processing has failed. (Value: "FAILED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Running
 *        Request is being processed. (Value: "RUNNING")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_StateUnspecified
 *        The default value. This value is used if the state is omitted. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Succeeded
 *        The batch processing completed successfully. (Value: "SUCCEEDED")
 *    @arg @c kGTLRDocument_GoogleCloudDocumentaiV1beta2OperationMetadata_State_Waiting
 *        Request operation is waiting for scheduling. (Value: "WAITING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** A message providing more details about the current state of processing. */
@property(nonatomic, copy, nullable) NSString *stateMessage;

/** The last update time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The desired output location and metadata.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2OutputConfig : GTLRObject

/** The Google Cloud Storage location to write the output to. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2GcsDestination *gcsDestination;

/**
 *  The max number of pages to include into each output Document shard JSON on
 *  Google Cloud Storage.
 *  The valid range is [1, 100]. If not specified, the default value is 20.
 *  For example, for one pdf file with 100 pages, 100 parsed pages will be
 *  produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each
 *  containing 20 parsed pages will be written under the prefix
 *  OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where
 *  x and y are 1-indexed page numbers.
 *  Example GCS outputs with 157 pages and pages_per_shard = 50:
 *  <prefix>pages-001-to-050.json
 *  <prefix>pages-051-to-100.json
 *  <prefix>pages-101-to-150.json
 *  <prefix>pages-151-to-157.json
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pagesPerShard;

@end


/**
 *  Request to process one document.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentRequest : GTLRObject

/**
 *  Controls AutoML model prediction behavior. AutoMlParams cannot be used
 *  together with other Params.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2AutoMlParams *automlParams;

/**
 *  Specifies a known document type for deeper structure detection. Valid
 *  values are currently "general" and "invoice". If not provided, "general"\\
 *  is used as default. If any other value is given, the request is rejected.
 */
@property(nonatomic, copy, nullable) NSString *documentType;

/**
 *  Controls entity extraction behavior. If not specified, the system will
 *  decide reasonable defaults.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2EntityExtractionParams *entityExtractionParams;

/**
 *  Controls form extraction behavior. If not specified, the system will
 *  decide reasonable defaults.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2FormExtractionParams *formExtractionParams;

/** Required. Information about the input file. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2InputConfig *inputConfig;

/**
 *  Controls OCR behavior. If not specified, the system will decide reasonable
 *  defaults.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2OcrParams *ocrParams;

/**
 *  The desired output location. This field is only needed in
 *  BatchProcessDocumentsRequest.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2OutputConfig *outputConfig;

/**
 *  Target project and location to make a call.
 *  Format: `projects/{project-id}/locations/{location-id}`.
 *  If no location is specified, a region will be chosen automatically.
 *  This field is only populated when used in ProcessDocument method.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Controls table extraction behavior. If not specified, the system will
 *  decide reasonable defaults.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2TableExtractionParams *tableExtractionParams;

@end


/**
 *  Response to a single document processing request.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2ProcessDocumentResponse : GTLRObject

/**
 *  Information about the input file. This is the same as the corresponding
 *  input config in the request.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2InputConfig *inputConfig;

/**
 *  The output location of the parsed responses. The responses are written to
 *  this location as JSON-serialized `Document` objects.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2OutputConfig *outputConfig;

@end


/**
 *  A hint for a table bounding box on the page for table parsing.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2TableBoundHint : GTLRObject

/**
 *  Bounding box hint for a table on this page. The coordinates must be
 *  normalized to [0,1] and the bounding box must be an axis-aligned rectangle.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleCloudDocumentaiV1beta2BoundingPoly *boundingBox;

/**
 *  Optional. Page number for multi-paged inputs this hint applies to. If not
 *  provided, this hint will apply to all pages by default. This value is
 *  1-based.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageNumber;

@end


/**
 *  Parameters to control table extraction behavior.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2TableExtractionParams : GTLRObject

/**
 *  Whether to enable table extraction.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** Optional. Reserved for future use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *headerHints;

/**
 *  Model version of the table extraction system. Default is "builtin/stable".
 *  Specify "builtin/latest" for the latest model.
 */
@property(nonatomic, copy, nullable) NSString *modelVersion;

/**
 *  Optional. Table bounding box hints that can be provided to complex cases
 *  which our algorithm cannot locate the table(s) in.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleCloudDocumentaiV1beta2TableBoundHint *> *tableBoundHints;

@end


/**
 *  A vertex represents a 2D point in the image.
 *  NOTE: the vertex coordinates are in the same scale as the original image.
 */
@interface GTLRDocument_GoogleCloudDocumentaiV1beta2Vertex : GTLRObject

/**
 *  X coordinate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Y coordinate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRDocument_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress.
 *  If `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the
 *  `name` should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRDocument_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDocument_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDocument_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details.
 *  You can find out more about this error model and how to work with it in the
 *  [API Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDocument_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDocument_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDocument_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDocument_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a color in the RGBA color space. This representation is designed
 *  for simplicity of conversion to/from color representations in various
 *  languages over compactness; for example, the fields of this representation
 *  can be trivially provided to the constructor of "java.awt.Color" in Java; it
 *  can also be trivially provided to UIColor's "+colorWithRed:green:blue:alpha"
 *  method in iOS; and, with just a little work, it can be easily formatted into
 *  a CSS "rgba()" string in JavaScript, as well.
 *  Note: this proto does not carry information about the absolute color space
 *  that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB,
 *  DCI-P3, BT.2020, etc.). By default, applications SHOULD assume the sRGB
 *  color
 *  space.
 *  Note: when color equality needs to be decided, implementations, unless
 *  documented otherwise, will treat two colors to be equal if all their red,
 *  green, blue and alpha values each differ by at most 1e-5.
 *  Example (Java):
 *  import com.google.type.Color;
 *  // ...
 *  public static java.awt.Color fromProto(Color protocolor) {
 *  float alpha = protocolor.hasAlpha()
 *  ? protocolor.getAlpha().getValue()
 *  : 1.0;
 *  return new java.awt.Color(
 *  protocolor.getRed(),
 *  protocolor.getGreen(),
 *  protocolor.getBlue(),
 *  alpha);
 *  }
 *  public static Color toProto(java.awt.Color color) {
 *  float red = (float) color.getRed();
 *  float green = (float) color.getGreen();
 *  float blue = (float) color.getBlue();
 *  float denominator = 255.0;
 *  Color.Builder resultBuilder =
 *  Color
 *  .newBuilder()
 *  .setRed(red / denominator)
 *  .setGreen(green / denominator)
 *  .setBlue(blue / denominator);
 *  int alpha = color.getAlpha();
 *  if (alpha != 255) {
 *  result.setAlpha(
 *  FloatValue
 *  .newBuilder()
 *  .setValue(((float) alpha) / denominator)
 *  .build());
 *  }
 *  return resultBuilder.build();
 *  }
 *  // ...
 *  Example (iOS / Obj-C):
 *  // ...
 *  static UIColor* fromProto(Color* protocolor) {
 *  float red = [protocolor red];
 *  float green = [protocolor green];
 *  float blue = [protocolor blue];
 *  FloatValue* alpha_wrapper = [protocolor alpha];
 *  float alpha = 1.0;
 *  if (alpha_wrapper != nil) {
 *  alpha = [alpha_wrapper value];
 *  }
 *  return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];
 *  }
 *  static Color* toProto(UIColor* color) {
 *  CGFloat red, green, blue, alpha;
 *  if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {
 *  return nil;
 *  }
 *  Color* result = [[Color alloc] init];
 *  [result setRed:red];
 *  [result setGreen:green];
 *  [result setBlue:blue];
 *  if (alpha <= 0.9999) {
 *  [result setAlpha:floatWrapperWithValue(alpha)];
 *  }
 *  [result autorelease];
 *  return result;
 *  }
 *  // ...
 *  Example (JavaScript):
 *  // ...
 *  var protoToCssColor = function(rgb_color) {
 *  var redFrac = rgb_color.red || 0.0;
 *  var greenFrac = rgb_color.green || 0.0;
 *  var blueFrac = rgb_color.blue || 0.0;
 *  var red = Math.floor(redFrac * 255);
 *  var green = Math.floor(greenFrac * 255);
 *  var blue = Math.floor(blueFrac * 255);
 *  if (!('alpha' in rgb_color)) {
 *  return rgbToCssColor_(red, green, blue);
 *  }
 *  var alphaFrac = rgb_color.alpha.value || 0.0;
 *  var rgbParams = [red, green, blue].join(',');
 *  return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');
 *  };
 *  var rgbToCssColor_ = function(red, green, blue) {
 *  var rgbNumber = new Number((red << 16) | (green << 8) | blue);
 *  var hexString = rgbNumber.toString(16);
 *  var missingZeros = 6 - hexString.length;
 *  var resultBuilder = ['#'];
 *  for (var i = 0; i < missingZeros; i++) {
 *  resultBuilder.push('0');
 *  }
 *  resultBuilder.push(hexString);
 *  return resultBuilder.join('');
 *  };
 *  // ...
 */
@interface GTLRDocument_GoogleTypeColor : GTLRObject

/**
 *  The fraction of this color that should be applied to the pixel. That is,
 *  the final pixel color is defined by the equation:
 *  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)
 *  This means that a value of 1.0 corresponds to a solid color, whereas
 *  a value of 0.0 corresponds to a completely transparent color. This
 *  uses a wrapper message rather than a simple float scalar so that it is
 *  possible to distinguish between a default value and the value being unset.
 *  If omitted, this color object is to be rendered as a solid color
 *  (as if the alpha value had been explicitly given with a value of 1.0).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *alpha;

/**
 *  The amount of blue in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blue;

/**
 *  The amount of green in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *green;

/**
 *  The amount of red in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *red;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
