// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Data API (analyticsdata/v1alpha)
// Description:
//   Accesses report data in Google Analytics.
// Documentation:
//   https://developers.google.com/analytics/trusted-testing/analytics-data/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAnalyticsData_BatchRunPivotReportsRequest;
@class GTLRAnalyticsData_BatchRunReportsRequest;
@class GTLRAnalyticsData_RunPivotReportRequest;
@class GTLRAnalyticsData_RunReportRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other AnalyticsData query classes.
 */
@interface GTLRAnalyticsDataQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Returns multiple pivot reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  Method: analyticsdata.batchRunPivotReports
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForBatchRunPivotReportsWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_BatchRunPivotReportsResponse.
 *
 *  Returns multiple pivot reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  @param object The @c GTLRAnalyticsData_BatchRunPivotReportsRequest to
 *    include in the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunPivotReportsRequest *)object;

@end

/**
 *  Returns multiple reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  Method: analyticsdata.batchRunReports
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaBatchRunReports : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForBatchRunReportsWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_BatchRunReportsResponse.
 *
 *  Returns multiple reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  @param object The @c GTLRAnalyticsData_BatchRunReportsRequest to include in
 *    the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaBatchRunReports
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunReportsRequest *)object;

@end

/**
 *  Returns metadata for dimensions and metrics available in reporting methods.
 *  Used to explore the dimensions and metrics. Dimensions and metrics will be
 *  mostly added over time, but renames and deletions may occur. This method
 *  returns Universal Metadata. Universal Metadata are dimensions and metrics
 *  applicable to any property such as `country` and `totalUsers`.
 *
 *  Method: analyticsdata.getUniversalMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaGetUniversalMetadata : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForGetUniversalMetadata]

/**
 *  Fetches a @c GTLRAnalyticsData_UniversalMetadata.
 *
 *  Returns metadata for dimensions and metrics available in reporting methods.
 *  Used to explore the dimensions and metrics. Dimensions and metrics will be
 *  mostly added over time, but renames and deletions may occur. This method
 *  returns Universal Metadata. Universal Metadata are dimensions and metrics
 *  applicable to any property such as `country` and `totalUsers`.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaGetUniversalMetadata
 */
+ (instancetype)query;

@end

/**
 *  Returns a customized pivot report of your Google Analytics event data. Pivot
 *  reports are more advanced and expressive formats than regular reports. In a
 *  pivot report, dimensions are only visible if they are included in a pivot.
 *  Multiple pivots can be specified to further dissect your data.
 *
 *  Method: analyticsdata.runPivotReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaRunPivotReport : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForRunPivotReportWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_RunPivotReportResponse.
 *
 *  Returns a customized pivot report of your Google Analytics event data. Pivot
 *  reports are more advanced and expressive formats than regular reports. In a
 *  pivot report, dimensions are only visible if they are included in a pivot.
 *  Multiple pivots can be specified to further dissect your data.
 *
 *  @param object The @c GTLRAnalyticsData_RunPivotReportRequest to include in
 *    the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaRunPivotReport
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunPivotReportRequest *)object;

@end

/**
 *  Returns a customized report of your Google Analytics event data. Reports
 *  contain statistics derived from data collected by the Google Analytics
 *  tracking code. The data returned from the API is as a table with columns for
 *  the requested dimensions and metrics. Metrics are individual measurements of
 *  user activity on your property, such as active users or event count.
 *  Dimensions break down metrics across some common criteria, such as country
 *  or event name.
 *
 *  Method: analyticsdata.runReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaRunReport : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForRunReportWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_RunReportResponse.
 *
 *  Returns a customized report of your Google Analytics event data. Reports
 *  contain statistics derived from data collected by the Google Analytics
 *  tracking code. The data returned from the API is as a table with columns for
 *  the requested dimensions and metrics. Metrics are individual measurements of
 *  user activity on your property, such as active users or event count.
 *  Dimensions break down metrics across some common criteria, such as country
 *  or event name.
 *
 *  @param object The @c GTLRAnalyticsData_RunReportRequest to include in the
 *    query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaRunReport
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunReportRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
