// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Data API (analyticsdata/v1alpha)
// Description:
//   Accesses report data in Google Analytics.
// Documentation:
//   https://developers.google.com/analytics/devguides/reporting/data/v1/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAnalyticsData_BatchRunPivotReportsRequest;
@class GTLRAnalyticsData_BatchRunReportsRequest;
@class GTLRAnalyticsData_RunPivotReportRequest;
@class GTLRAnalyticsData_RunRealtimeReportRequest;
@class GTLRAnalyticsData_RunReportRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other AnalyticsData query classes.
 */
@interface GTLRAnalyticsDataQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Returns metadata for dimensions and metrics available in reporting methods.
 *  Used to explore the dimensions and metrics. In this method, a Google
 *  Analytics GA4 Property Identifier is specified in the request, and the
 *  metadata response includes Custom dimensions and metrics as well as
 *  Universal metadata. For example if a custom metric with parameter name
 *  `levels_unlocked` is registered to a property, the Metadata response will
 *  contain `customEvent:levels_unlocked`. Universal metadata are dimensions and
 *  metrics applicable to any property such as `country` and `totalUsers`.
 *
 *  Method: analyticsdata.properties.getMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_PropertiesGetMetadata : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForPropertiesGetMetadataWithname:]

/**
 *  Required. The resource name of the metadata to retrieve. This name field is
 *  specified in the URL path and not URL parameters. Property is a numeric
 *  Google Analytics GA4 Property identifier. To learn more, see [where to find
 *  your Property
 *  ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
 *  Example: properties/1234/metadata Set the Property ID to 0 for dimensions
 *  and metrics common to all properties. In this special mode, this method will
 *  not return custom dimensions and metrics.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAnalyticsData_Metadata.
 *
 *  Returns metadata for dimensions and metrics available in reporting methods.
 *  Used to explore the dimensions and metrics. In this method, a Google
 *  Analytics GA4 Property Identifier is specified in the request, and the
 *  metadata response includes Custom dimensions and metrics as well as
 *  Universal metadata. For example if a custom metric with parameter name
 *  `levels_unlocked` is registered to a property, the Metadata response will
 *  contain `customEvent:levels_unlocked`. Universal metadata are dimensions and
 *  metrics applicable to any property such as `country` and `totalUsers`.
 *
 *  @param name Required. The resource name of the metadata to retrieve. This
 *    name field is specified in the URL path and not URL parameters. Property
 *    is a numeric Google Analytics GA4 Property identifier. To learn more, see
 *    [where to find your Property
 *    ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
 *    Example: properties/1234/metadata Set the Property ID to 0 for dimensions
 *    and metrics common to all properties. In this special mode, this method
 *    will not return custom dimensions and metrics.
 *
 *  @return GTLRAnalyticsDataQuery_PropertiesGetMetadata
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  The Google Analytics Realtime API returns a customized report of realtime
 *  event data for your property. These reports show events and usage from the
 *  last 30 minutes.
 *
 *  Method: analyticsdata.properties.runRealtimeReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_PropertiesRunRealtimeReport : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForPropertiesRunRealtimeReportWithObject:property:]

/**
 *  A Google Analytics GA4 property identifier whose events are tracked.
 *  Specified in the URL path and not the body. To learn more, see [where to
 *  find your Property
 *  ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
 *  Example: properties/1234
 */
@property(nonatomic, copy, nullable) NSString *property;

/**
 *  Fetches a @c GTLRAnalyticsData_RunRealtimeReportResponse.
 *
 *  The Google Analytics Realtime API returns a customized report of realtime
 *  event data for your property. These reports show events and usage from the
 *  last 30 minutes.
 *
 *  @param object The @c GTLRAnalyticsData_RunRealtimeReportRequest to include
 *    in the query.
 *  @param property A Google Analytics GA4 property identifier whose events are
 *    tracked. Specified in the URL path and not the body. To learn more, see
 *    [where to find your Property
 *    ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
 *    Example: properties/1234
 *
 *  @return GTLRAnalyticsDataQuery_PropertiesRunRealtimeReport
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunRealtimeReportRequest *)object
                       property:(NSString *)property;

@end

/**
 *  Returns multiple pivot reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  Method: analyticsdata.batchRunPivotReports
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForBatchRunPivotReportsWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_BatchRunPivotReportsResponse.
 *
 *  Returns multiple pivot reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  @param object The @c GTLRAnalyticsData_BatchRunPivotReportsRequest to
 *    include in the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunPivotReportsRequest *)object;

@end

/**
 *  Returns multiple reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  Method: analyticsdata.batchRunReports
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaBatchRunReports : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForBatchRunReportsWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_BatchRunReportsResponse.
 *
 *  Returns multiple reports in a batch. All reports must be for the same
 *  Entity.
 *
 *  @param object The @c GTLRAnalyticsData_BatchRunReportsRequest to include in
 *    the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaBatchRunReports
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunReportsRequest *)object;

@end

/**
 *  Returns a customized pivot report of your Google Analytics event data. Pivot
 *  reports are more advanced and expressive formats than regular reports. In a
 *  pivot report, dimensions are only visible if they are included in a pivot.
 *  Multiple pivots can be specified to further dissect your data.
 *
 *  Method: analyticsdata.runPivotReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaRunPivotReport : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForRunPivotReportWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_RunPivotReportResponse.
 *
 *  Returns a customized pivot report of your Google Analytics event data. Pivot
 *  reports are more advanced and expressive formats than regular reports. In a
 *  pivot report, dimensions are only visible if they are included in a pivot.
 *  Multiple pivots can be specified to further dissect your data.
 *
 *  @param object The @c GTLRAnalyticsData_RunPivotReportRequest to include in
 *    the query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaRunPivotReport
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunPivotReportRequest *)object;

@end

/**
 *  Returns a customized report of your Google Analytics event data. Reports
 *  contain statistics derived from data collected by the Google Analytics
 *  tracking code. The data returned from the API is as a table with columns for
 *  the requested dimensions and metrics. Metrics are individual measurements of
 *  user activity on your property, such as active users or event count.
 *  Dimensions break down metrics across some common criteria, such as country
 *  or event name.
 *
 *  Method: analyticsdata.runReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAnalyticsDataAnalytics
 *    @c kGTLRAuthScopeAnalyticsDataAnalyticsReadonly
 */
@interface GTLRAnalyticsDataQuery_V1alphaRunReport : GTLRAnalyticsDataQuery
// Previous library name was
//   +[GTLQueryAnalyticsData queryForRunReportWithObject:]

/**
 *  Fetches a @c GTLRAnalyticsData_RunReportResponse.
 *
 *  Returns a customized report of your Google Analytics event data. Reports
 *  contain statistics derived from data collected by the Google Analytics
 *  tracking code. The data returned from the API is as a table with columns for
 *  the requested dimensions and metrics. Metrics are individual measurements of
 *  user activity on your property, such as active users or event count.
 *  Dimensions break down metrics across some common criteria, such as country
 *  or event name.
 *
 *  @param object The @c GTLRAnalyticsData_RunReportRequest to include in the
 *    query.
 *
 *  @return GTLRAnalyticsDataQuery_V1alphaRunReport
 */
+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunReportRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
