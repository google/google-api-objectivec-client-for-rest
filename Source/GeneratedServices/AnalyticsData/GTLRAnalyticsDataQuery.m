// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Data API (analyticsdata/v1alpha)
// Description:
//   Accesses report data in Google Analytics.
// Documentation:
//   https://developers.google.com/analytics/trusted-testing/analytics-data/

#import "GTLRAnalyticsDataQuery.h"

#import "GTLRAnalyticsDataObjects.h"

@implementation GTLRAnalyticsDataQuery

@dynamic fields;

@end

@implementation GTLRAnalyticsDataQuery_PropertiesGetMetadata

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAnalyticsDataQuery_PropertiesGetMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAnalyticsData_Metadata class];
  query.loggingName = @"analyticsdata.properties.getMetadata";
  return query;
}

@end

@implementation GTLRAnalyticsDataQuery_PropertiesRunRealtimeReport

@dynamic property;

+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunRealtimeReportRequest *)object
                       property:(NSString *)property {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"property" ];
  NSString *pathURITemplate = @"v1alpha/{+property}:runRealtimeReport";
  GTLRAnalyticsDataQuery_PropertiesRunRealtimeReport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.property = property;
  query.expectedObjectClass = [GTLRAnalyticsData_RunRealtimeReportResponse class];
  query.loggingName = @"analyticsdata.properties.runRealtimeReport";
  return query;
}

@end

@implementation GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports

+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunPivotReportsRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha:batchRunPivotReports";
  GTLRAnalyticsDataQuery_V1alphaBatchRunPivotReports *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAnalyticsData_BatchRunPivotReportsResponse class];
  query.loggingName = @"analyticsdata.batchRunPivotReports";
  return query;
}

@end

@implementation GTLRAnalyticsDataQuery_V1alphaBatchRunReports

+ (instancetype)queryWithObject:(GTLRAnalyticsData_BatchRunReportsRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha:batchRunReports";
  GTLRAnalyticsDataQuery_V1alphaBatchRunReports *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAnalyticsData_BatchRunReportsResponse class];
  query.loggingName = @"analyticsdata.batchRunReports";
  return query;
}

@end

@implementation GTLRAnalyticsDataQuery_V1alphaRunPivotReport

+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunPivotReportRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha:runPivotReport";
  GTLRAnalyticsDataQuery_V1alphaRunPivotReport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAnalyticsData_RunPivotReportResponse class];
  query.loggingName = @"analyticsdata.runPivotReport";
  return query;
}

@end

@implementation GTLRAnalyticsDataQuery_V1alphaRunReport

+ (instancetype)queryWithObject:(GTLRAnalyticsData_RunReportRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1alpha:runReport";
  GTLRAnalyticsDataQuery_V1alphaRunReport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAnalyticsData_RunReportResponse class];
  query.loggingName = @"analyticsdata.runReport";
  return query;
}

@end
