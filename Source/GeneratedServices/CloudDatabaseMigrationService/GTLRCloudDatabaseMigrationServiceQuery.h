// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Database Migration API (datamigration/v1beta1)
// Description:
//   Manage Cloud Database Migration Service resources on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/datamigration/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudDatabaseMigrationService_CancelOperationRequest;
@class GTLRCloudDatabaseMigrationService_ConnectionProfile;
@class GTLRCloudDatabaseMigrationService_GenerateSshScriptRequest;
@class GTLRCloudDatabaseMigrationService_MigrationJob;
@class GTLRCloudDatabaseMigrationService_PromoteMigrationJobRequest;
@class GTLRCloudDatabaseMigrationService_RestartMigrationJobRequest;
@class GTLRCloudDatabaseMigrationService_ResumeMigrationJobRequest;
@class GTLRCloudDatabaseMigrationService_SetIamPolicyRequest;
@class GTLRCloudDatabaseMigrationService_StartMigrationJobRequest;
@class GTLRCloudDatabaseMigrationService_StopMigrationJobRequest;
@class GTLRCloudDatabaseMigrationService_TestIamPermissionsRequest;
@class GTLRCloudDatabaseMigrationService_VerifyMigrationJobRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Database Migration Service query classes.
 */
@interface GTLRCloudDatabaseMigrationServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new connection profile in a given project and location.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesCreate : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesCreateWithObject:parent:]

/** Required. The connection profile identifier. */
@property(nonatomic, copy, nullable) NSString *connectionProfileId;

/**
 *  Required. The parent, which owns this collection of connection profiles.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Creates a new connection profile in a given project and location.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_ConnectionProfile to
 *    include in the query.
 *  @param parent Required. The parent, which owns this collection of connection
 *    profiles.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_ConnectionProfile *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Database Migration Service connection profile. A connection
 *  profile can only be deleted if it is not in use by any active migration
 *  jobs.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesDelete : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesDeleteWithname:]

/**
 *  In case of force delete, the CloudSQL replica database is also deleted (only
 *  for CloudSQL connection profile).
 */
@property(nonatomic, assign) BOOL force;

/** Required. Name of the connection profile resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Deletes a single Database Migration Service connection profile. A connection
 *  profile can only be deleted if it is not in use by any active migration
 *  jobs.
 *
 *  @param name Required. Name of the connection profile resource to delete.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single connection profile.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGet : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesGetWithname:]

/** Required. Name of the connection profile resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_ConnectionProfile.
 *
 *  Gets details of a single connection profile.
 *
 *  @param name Required. Name of the connection profile resource to get.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGetIamPolicy : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Retrieve a list of all connection profiles in a given project and location.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesList : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesListWithparent:]

/**
 *  A filter expression that filters connection profiles listed in the response.
 *  The expression must specify the field name, a comparison operator, and the
 *  value that you want to use for filtering. The value must be a string, a
 *  number, or a boolean. The comparison operator must be either =, !=, >, or <.
 *  For example, list connection profiles created this year by specifying
 *  **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter
 *  nested fields. For example, you could specify **mySql.username =
 *  %lt;my_username%gt;** to list all connection profiles configured to connect
 *  with a specific username.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of connection profiles to return. The service may return
 *  fewer than this value. If unspecified, at most 50 connection profiles will
 *  be returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListConnectionProfiles` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListConnectionProfiles` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of connection profiles.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudDatabaseMigrationService_ListConnectionProfilesResponse.
 *
 *  Retrieve a list of all connection profiles in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of connection
 *    profiles.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update the configuration of a single connection profile.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesPatch : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesPatchWithObject:name:]

/**
 *  The name of this connection profile resource in the form of
 *  projects/{project}/locations/{location}/instances/{instance}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  connection profile resource by the update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Update the configuration of a single connection profile.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_ConnectionProfile to
 *    include in the query.
 *  @param name The name of this connection profile resource in the form of
 *    projects/{project}/locations/{location}/instances/{instance}.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_ConnectionProfile *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesSetIamPolicy : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_SetIamPolicyRequest
 *    to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: datamigration.projects.locations.connectionProfiles.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesTestIamPermissions : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsConnectionProfilesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: datamigration.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsGet : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsGetWithname:]

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: datamigration.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsList : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new migration job in a given project and location.
 *
 *  Method: datamigration.projects.locations.migrationJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsCreate : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsCreateWithObject:parent:]

/** Required. The ID of the instance to create. */
@property(nonatomic, copy, nullable) NSString *migrationJobId;

/** Required. The parent, which owns this collection of migration jobs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Creates a new migration job in a given project and location.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_MigrationJob to
 *    include in the query.
 *  @param parent Required. The parent, which owns this collection of migration
 *    jobs.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_MigrationJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single migration job.
 *
 *  Method: datamigration.projects.locations.migrationJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsDelete : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsDeleteWithname:]

/**
 *  The destination CloudSQL connection profile is always deleted with the
 *  migration job. In case of force delete, the destination CloudSQL replica
 *  database is also deleted.
 */
@property(nonatomic, assign) BOOL force;

/** Required. Name of the migration job resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Deletes a single migration job.
 *
 *  @param name Required. Name of the migration job resource to delete.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generate a SSH configuration script to configure the reverse SSH
 *  connectivity.
 *
 *  Method: datamigration.projects.locations.migrationJobs.generateSshScript
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGenerateSshScript : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsGenerateSshScriptWithObject:migrationJob:]

/** Name of the migration job resource to generate the SSH script. */
@property(nonatomic, copy, nullable) NSString *migrationJob;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_SshScript.
 *
 *  Generate a SSH configuration script to configure the reverse SSH
 *  connectivity.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_GenerateSshScriptRequest to include in
 *    the query.
 *  @param migrationJob Name of the migration job resource to generate the SSH
 *    script.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGenerateSshScript
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_GenerateSshScriptRequest *)object
                   migrationJob:(NSString *)migrationJob;

@end

/**
 *  Gets details of a single migration job.
 *
 *  Method: datamigration.projects.locations.migrationJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGet : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsGetWithname:]

/** Required. Name of the migration job resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_MigrationJob.
 *
 *  Gets details of a single migration job.
 *
 *  @param name Required. Name of the migration job resource to get.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: datamigration.projects.locations.migrationJobs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGetIamPolicy : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists migration jobs in a given project and location.
 *
 *  Method: datamigration.projects.locations.migrationJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsList : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsListWithparent:]

/**
 *  A filter expression that filters migration jobs listed in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be either =, !=, >, or <. For
 *  example, list migration jobs created this year by specifying **createTime
 *  %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields.
 *  For example, you could specify **reverseSshConnectivity.vmIp = "1.2.3.4"**
 *  to select all migration jobs connecting through the specific SSH tunnel
 *  bastion.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sort the results based on the migration job name. Valid values are: "name",
 *  "name asc", and "name desc".
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of migration jobs to return. The service may return fewer
 *  than this value. If unspecified, at most 50 migration jobs will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The nextPageToken value received in the previous call to migrationJobs.list,
 *  used in the subsequent request to retrieve the next page of results. On
 *  first call this should be left blank. When paginating, all other parameters
 *  provided to migrationJobs.list must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of migrationJobs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_ListMigrationJobsResponse.
 *
 *  Lists migration jobs in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    migrationJobs.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single migration job.
 *
 *  Method: datamigration.projects.locations.migrationJobs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPatch : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsPatchWithObject:name:]

/**
 *  The name (URI) of this migration job resource, in the form of:
 *  projects/{project}/locations/{location}/instances/{instance}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A unique id used to identify the request. If the server receives two
 *  requests with the same id, then the second request will be ignored. It is
 *  recommended to always set this value to a UUID. The id must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
 *  maximum length is 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  migration job resource by the update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Updates the parameters of a single migration job.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_MigrationJob to
 *    include in the query.
 *  @param name The name (URI) of this migration job resource, in the form of:
 *    projects/{project}/locations/{location}/instances/{instance}.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_MigrationJob *)object
                           name:(NSString *)name;

@end

/**
 *  Promote a migration job, stopping replication to the destination and
 *  promoting the destination to be a standalone database.
 *
 *  Method: datamigration.projects.locations.migrationJobs.promote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPromote : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsPromoteWithObject:name:]

/** Name of the migration job resource to promote. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Promote a migration job, stopping replication to the destination and
 *  promoting the destination to be a standalone database.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_PromoteMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to promote.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPromote
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_PromoteMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Restart a stopped or failed migration job, resetting the destination
 *  instance to its original state and starting the migration process from
 *  scratch.
 *
 *  Method: datamigration.projects.locations.migrationJobs.restart
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsRestart : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsRestartWithObject:name:]

/** Name of the migration job resource to restart. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Restart a stopped or failed migration job, resetting the destination
 *  instance to its original state and starting the migration process from
 *  scratch.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_RestartMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to restart.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsRestart
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_RestartMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Resume a migration job that is currently stopped and is resumable (was
 *  stopped during CDC phase).
 *
 *  Method: datamigration.projects.locations.migrationJobs.resume
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsResume : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsResumeWithObject:name:]

/** Name of the migration job resource to resume. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Resume a migration job that is currently stopped and is resumable (was
 *  stopped during CDC phase).
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_ResumeMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to resume.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsResume
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_ResumeMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: datamigration.projects.locations.migrationJobs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsSetIamPolicy : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCloudDatabaseMigrationService_SetIamPolicyRequest
 *    to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Start an already created migration job.
 *
 *  Method: datamigration.projects.locations.migrationJobs.start
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStart : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsStartWithObject:name:]

/** Name of the migration job resource to start. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Start an already created migration job.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_StartMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to start.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStart
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_StartMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Stops a running migration job.
 *
 *  Method: datamigration.projects.locations.migrationJobs.stop
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStop : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsStopWithObject:name:]

/** Name of the migration job resource to stop. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Stops a running migration job.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_StopMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to stop.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStop
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_StopMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: datamigration.projects.locations.migrationJobs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsTestIamPermissions : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Verify a migration job, making sure the destination can reach the source and
 *  that all configuration and prerequisites are met.
 *
 *  Method: datamigration.projects.locations.migrationJobs.verify
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsVerify : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsMigrationJobsVerifyWithObject:name:]

/** Name of the migration job resource to verify. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Verify a migration job, making sure the destination can reach the source and
 *  that all configuration and prerequisites are met.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_VerifyMigrationJobRequest to include in
 *    the query.
 *  @param name Name of the migration job resource to verify.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsVerify
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_VerifyMigrationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: datamigration.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsCancel : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRCloudDatabaseMigrationService_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudDatabaseMigrationService_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: datamigration.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsDelete : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: datamigration.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsGet : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: datamigration.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDatabaseMigrationServiceCloudPlatform
 */
@interface GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsList : GTLRCloudDatabaseMigrationServiceQuery
// Previous library name was
//   +[GTLQueryCloudDatabaseMigrationService queryForProjectsLocationsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudDatabaseMigrationService_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudDatabaseMigrationServiceQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
