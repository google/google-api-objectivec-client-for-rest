// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Poly API (poly/v1)
// Description:
//   The Poly API provides read access to assets hosted on <a
//   href="https://poly.google.com">poly.google.com</a> to all, and upload
//   access to <a href="https://poly.google.com">poly.google.com</a> for
//   whitelisted accounts.
// Documentation:
//   https://developers.google.com/poly/

#import "GTLRPolyServiceObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRPolyService_Asset.license
NSString * const kGTLRPolyService_Asset_License_AllRightsReserved = @"ALL_RIGHTS_RESERVED";
NSString * const kGTLRPolyService_Asset_License_CreativeCommonsBy = @"CREATIVE_COMMONS_BY";
NSString * const kGTLRPolyService_Asset_License_Unknown        = @"UNKNOWN";

// GTLRPolyService_Asset.visibility
NSString * const kGTLRPolyService_Asset_Visibility_Private     = @"PRIVATE";
NSString * const kGTLRPolyService_Asset_Visibility_Public      = @"PUBLIC";
NSString * const kGTLRPolyService_Asset_Visibility_Unlisted    = @"UNLISTED";
NSString * const kGTLRPolyService_Asset_Visibility_VisibilityUnspecified = @"VISIBILITY_UNSPECIFIED";

// GTLRPolyService_AssetImportMessage.code
NSString * const kGTLRPolyService_AssetImportMessage_Code_CodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRPolyService_AssetImportMessage_Code_DefaultMaterials = @"DEFAULT_MATERIALS";
NSString * const kGTLRPolyService_AssetImportMessage_Code_EmptyModel = @"EMPTY_MODEL";
NSString * const kGTLRPolyService_AssetImportMessage_Code_Expired = @"EXPIRED";
NSString * const kGTLRPolyService_AssetImportMessage_Code_ExtraFilesWithArchive = @"EXTRA_FILES_WITH_ARCHIVE";
NSString * const kGTLRPolyService_AssetImportMessage_Code_FatalError = @"FATAL_ERROR";
NSString * const kGTLRPolyService_AssetImportMessage_Code_ImageError = @"IMAGE_ERROR";
NSString * const kGTLRPolyService_AssetImportMessage_Code_InvalidElementType = @"INVALID_ELEMENT_TYPE";
NSString * const kGTLRPolyService_AssetImportMessage_Code_NoImportableFile = @"NO_IMPORTABLE_FILE";
NSString * const kGTLRPolyService_AssetImportMessage_Code_ObjParseError = @"OBJ_PARSE_ERROR";

// GTLRPolyService_ImageError.code
NSString * const kGTLRPolyService_ImageError_Code_CodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRPolyService_ImageError_Code_ImageTooBig  = @"IMAGE_TOO_BIG";
NSString * const kGTLRPolyService_ImageError_Code_InvalidImage = @"INVALID_IMAGE";
NSString * const kGTLRPolyService_ImageError_Code_WrongImageType = @"WRONG_IMAGE_TYPE";

// GTLRPolyService_ObjParseError.code
NSString * const kGTLRPolyService_ObjParseError_Code_CodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRPolyService_ObjParseError_Code_FileNotFound = @"FILE_NOT_FOUND";
NSString * const kGTLRPolyService_ObjParseError_Code_FileSubstitution = @"FILE_SUBSTITUTION";
NSString * const kGTLRPolyService_ObjParseError_Code_InconsistentVertexRefs = @"INCONSISTENT_VERTEX_REFS";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidCommand = @"INVALID_COMMAND";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidFilePath = @"INVALID_FILE_PATH";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidNumber = @"INVALID_NUMBER";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidSmoothingGroup = @"INVALID_SMOOTHING_GROUP";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidTextureOption = @"INVALID_TEXTURE_OPTION";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidValue = @"INVALID_VALUE";
NSString * const kGTLRPolyService_ObjParseError_Code_InvalidVertexRef = @"INVALID_VERTEX_REF";
NSString * const kGTLRPolyService_ObjParseError_Code_LineTooLong = @"LINE_TOO_LONG";
NSString * const kGTLRPolyService_ObjParseError_Code_MissingFileName = @"MISSING_FILE_NAME";
NSString * const kGTLRPolyService_ObjParseError_Code_MissingGeometricVertex = @"MISSING_GEOMETRIC_VERTEX";
NSString * const kGTLRPolyService_ObjParseError_Code_MissingToken = @"MISSING_TOKEN";
NSString * const kGTLRPolyService_ObjParseError_Code_MissingVertexColors = @"MISSING_VERTEX_COLORS";
NSString * const kGTLRPolyService_ObjParseError_Code_NoMaterialDefined = @"NO_MATERIAL_DEFINED";
NSString * const kGTLRPolyService_ObjParseError_Code_NumberOutOfRange = @"NUMBER_OUT_OF_RANGE";
NSString * const kGTLRPolyService_ObjParseError_Code_TooFewDimensions = @"TOO_FEW_DIMENSIONS";
NSString * const kGTLRPolyService_ObjParseError_Code_TooFewVertices = @"TOO_FEW_VERTICES";
NSString * const kGTLRPolyService_ObjParseError_Code_TooManyDimensions = @"TOO_MANY_DIMENSIONS";
NSString * const kGTLRPolyService_ObjParseError_Code_TooManyProblems = @"TOO_MANY_PROBLEMS";
NSString * const kGTLRPolyService_ObjParseError_Code_UnknownMaterial = @"UNKNOWN_MATERIAL";
NSString * const kGTLRPolyService_ObjParseError_Code_UnsupportedCommand = @"UNSUPPORTED_COMMAND";
NSString * const kGTLRPolyService_ObjParseError_Code_UnusedTokens = @"UNUSED_TOKENS";
NSString * const kGTLRPolyService_ObjParseError_Code_VertexNotFound = @"VERTEX_NOT_FOUND";

// GTLRPolyService_PresentationParams.colorSpace
NSString * const kGTLRPolyService_PresentationParams_ColorSpace_Gamma = @"GAMMA";
NSString * const kGTLRPolyService_PresentationParams_ColorSpace_Linear = @"LINEAR";
NSString * const kGTLRPolyService_PresentationParams_ColorSpace_Unknown = @"UNKNOWN";

// ----------------------------------------------------------------------------
//
//   GTLRPolyService_Asset
//

@implementation GTLRPolyService_Asset
@dynamic authorName, createTime, descriptionProperty, displayName, formats,
         isCurated, license, metadata, name, presentationParams, remixInfo,
         thumbnail, updateTime, visibility;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"formats" : [GTLRPolyService_Format class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_AssetImportMessage
//

@implementation GTLRPolyService_AssetImportMessage
@dynamic code, filePath, imageError, objParseError;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_File
//

@implementation GTLRPolyService_File
@dynamic contentType, relativePath, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_Format
//

@implementation GTLRPolyService_Format
@dynamic formatComplexity, formatType, resources, root;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRPolyService_File class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_FormatComplexity
//

@implementation GTLRPolyService_FormatComplexity
@dynamic lodHint, triangleCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_ImageError
//

@implementation GTLRPolyService_ImageError
@dynamic code, filePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_ListAssetsResponse
//

@implementation GTLRPolyService_ListAssetsResponse
@dynamic assets, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRPolyService_Asset class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"assets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_ListLikedAssetsResponse
//

@implementation GTLRPolyService_ListLikedAssetsResponse
@dynamic assets, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRPolyService_Asset class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"assets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_ListUserAssetsResponse
//

@implementation GTLRPolyService_ListUserAssetsResponse
@dynamic nextPageToken, totalSize, userAssets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userAssets" : [GTLRPolyService_UserAsset class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"userAssets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_ObjParseError
//

@implementation GTLRPolyService_ObjParseError
@dynamic code, endIndex, filePath, line, lineNumber, startIndex;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_PresentationParams
//

@implementation GTLRPolyService_PresentationParams
@dynamic backgroundColor, colorSpace, orientingRotation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_Quaternion
//

@implementation GTLRPolyService_Quaternion
@dynamic w, x, y, z;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_RemixInfo
//

@implementation GTLRPolyService_RemixInfo
@dynamic sourceAsset;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceAsset" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_StartAssetImportResponse
//

@implementation GTLRPolyService_StartAssetImportResponse
@dynamic assetId, assetImportId, assetImportMessages, publishUrl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assetImportMessages" : [GTLRPolyService_AssetImportMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPolyService_UserAsset
//

@implementation GTLRPolyService_UserAsset
@dynamic asset;
@end
