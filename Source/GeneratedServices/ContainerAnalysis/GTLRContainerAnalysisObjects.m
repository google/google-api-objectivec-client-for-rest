// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Container Analysis API (containeranalysis/v1)
// Description:
//   An implementation of the Grafeas API, which stores, and enables querying
//   and retrieval of critical metadata about all of your software artifacts.
// Documentation:
//   https://cloud.google.com/container-analysis/api/reference/rest/

#import "GTLRContainerAnalysisObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRContainerAnalysis_AliasContext.kind
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Fixed = @"FIXED";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Movable = @"MOVABLE";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Other = @"OTHER";

// GTLRContainerAnalysis_BuildStep.status
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Cancelled = @"CANCELLED";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Expired = @"EXPIRED";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Failure = @"FAILURE";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_InternalError = @"INTERNAL_ERROR";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Pending = @"PENDING";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Queued = @"QUEUED";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_StatusUnknown = @"STATUS_UNKNOWN";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Success = @"SUCCESS";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Timeout = @"TIMEOUT";
NSString * const kGTLRContainerAnalysis_BuildStep_Status_Working = @"WORKING";

// GTLRContainerAnalysis_CisBenchmark.severity
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_CisBenchmark_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.attackComplexity
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityHigh = @"ATTACK_COMPLEXITY_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityLow = @"ATTACK_COMPLEXITY_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityUnspecified = @"ATTACK_COMPLEXITY_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.attackVector
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorAdjacent = @"ATTACK_VECTOR_ADJACENT";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorLocal = @"ATTACK_VECTOR_LOCAL";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorNetwork = @"ATTACK_VECTOR_NETWORK";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorPhysical = @"ATTACK_VECTOR_PHYSICAL";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorUnspecified = @"ATTACK_VECTOR_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.availabilityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.confidentialityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.integrityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.privilegesRequired
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredHigh = @"PRIVILEGES_REQUIRED_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredLow = @"PRIVILEGES_REQUIRED_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredNone = @"PRIVILEGES_REQUIRED_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredUnspecified = @"PRIVILEGES_REQUIRED_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.scope
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeChanged = @"SCOPE_CHANGED";
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeUnchanged = @"SCOPE_UNCHANGED";
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeUnspecified = @"SCOPE_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.userInteraction
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionNone = @"USER_INTERACTION_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionRequired = @"USER_INTERACTION_REQUIRED";
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionUnspecified = @"USER_INTERACTION_UNSPECIFIED";

// GTLRContainerAnalysis_DeploymentOccurrence.platform
NSString * const kGTLRContainerAnalysis_DeploymentOccurrence_Platform_Custom = @"CUSTOM";
NSString * const kGTLRContainerAnalysis_DeploymentOccurrence_Platform_Flex = @"FLEX";
NSString * const kGTLRContainerAnalysis_DeploymentOccurrence_Platform_Gke = @"GKE";
NSString * const kGTLRContainerAnalysis_DeploymentOccurrence_Platform_PlatformUnspecified = @"PLATFORM_UNSPECIFIED";

// GTLRContainerAnalysis_DiscoveryNote.analysisKind
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Attestation = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Build = @"BUILD";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Compliance = @"COMPLIANCE";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Deployment = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_DsseAttestation = @"DSSE_ATTESTATION";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Image = @"IMAGE";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Package = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Upgrade = @"UPGRADE";
NSString * const kGTLRContainerAnalysis_DiscoveryNote_AnalysisKind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_DiscoveryOccurrence.analysisStatus
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_AnalysisStatusUnspecified = @"ANALYSIS_STATUS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_FinishedFailed = @"FINISHED_FAILED";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_FinishedSuccess = @"FINISHED_SUCCESS";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_FinishedUnsupported = @"FINISHED_UNSUPPORTED";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_Pending = @"PENDING";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_AnalysisStatus_Scanning = @"SCANNING";

// GTLRContainerAnalysis_DiscoveryOccurrence.continuousAnalysis
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_ContinuousAnalysis_Active = @"ACTIVE";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_ContinuousAnalysis_ContinuousAnalysisUnspecified = @"CONTINUOUS_ANALYSIS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_DiscoveryOccurrence_ContinuousAnalysis_Inactive = @"INACTIVE";

// GTLRContainerAnalysis_Distribution.architecture
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X64 = @"X64";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X86 = @"X86";

// GTLRContainerAnalysis_FixableTotalByDigest.severity
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_Note.kind
NSString * const kGTLRContainerAnalysis_Note_Kind_Attestation  = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_Note_Kind_Build        = @"BUILD";
NSString * const kGTLRContainerAnalysis_Note_Kind_Compliance   = @"COMPLIANCE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Deployment   = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_Note_Kind_Discovery    = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Note_Kind_DsseAttestation = @"DSSE_ATTESTATION";
NSString * const kGTLRContainerAnalysis_Note_Kind_Image        = @"IMAGE";
NSString * const kGTLRContainerAnalysis_Note_Kind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Note_Kind_Package      = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Upgrade      = @"UPGRADE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_Occurrence.kind
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Attestation = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Build  = @"BUILD";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Compliance = @"COMPLIANCE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Deployment = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_DsseAttestation = @"DSSE_ATTESTATION";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Image  = @"IMAGE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Package = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Upgrade = @"UPGRADE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_PackageIssue.effectiveSeverity
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_PackageIssue_EffectiveSeverity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_Version.kind
NSString * const kGTLRContainerAnalysis_Version_Kind_Maximum   = @"MAXIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Minimum   = @"MINIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Normal    = @"NORMAL";
NSString * const kGTLRContainerAnalysis_Version_Kind_VersionKindUnspecified = @"VERSION_KIND_UNSPECIFIED";

// GTLRContainerAnalysis_VulnerabilityNote.severity
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityNote_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_VulnerabilityOccurrence.effectiveSeverity
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_EffectiveSeverity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_VulnerabilityOccurrence.severity
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityOccurrence_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AliasContext
//

@implementation GTLRContainerAnalysis_AliasContext
@dynamic kind, name;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Artifact
//

@implementation GTLRContainerAnalysis_Artifact
@dynamic checksum, identifier, names;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AttestationNote
//

@implementation GTLRContainerAnalysis_AttestationNote
@dynamic hint;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AttestationOccurrence
//

@implementation GTLRContainerAnalysis_AttestationOccurrence
@dynamic jwts, serializedPayload, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jwts" : [GTLRContainerAnalysis_Jwt class],
    @"signatures" : [GTLRContainerAnalysis_Signature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesRequest
//

@implementation GTLRContainerAnalysis_BatchCreateNotesRequest
@dynamic notes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesRequest_Notes
//

@implementation GTLRContainerAnalysis_BatchCreateNotesRequest_Notes

+ (Class)classForAdditionalProperties {
  return [GTLRContainerAnalysis_Note class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesResponse
//

@implementation GTLRContainerAnalysis_BatchCreateNotesResponse
@dynamic notes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"notes" : [GTLRContainerAnalysis_Note class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateOccurrencesRequest
//

@implementation GTLRContainerAnalysis_BatchCreateOccurrencesRequest
@dynamic occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateOccurrencesResponse
//

@implementation GTLRContainerAnalysis_BatchCreateOccurrencesResponse
@dynamic occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Binding
//

@implementation GTLRContainerAnalysis_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuilderConfig
//

@implementation GTLRContainerAnalysis_BuilderConfig
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildNote
//

@implementation GTLRContainerAnalysis_BuildNote
@dynamic builderVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildOccurrence
//

@implementation GTLRContainerAnalysis_BuildOccurrence
@dynamic intotoProvenance, provenance, provenanceBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance
//

@implementation GTLRContainerAnalysis_BuildProvenance
@dynamic builderVersion, buildOptions, builtArtifacts, commands, createTime,
         creator, endTime, identifier, logsUri, projectId, sourceProvenance,
         startTime, triggerId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"builtArtifacts" : [GTLRContainerAnalysis_Artifact class],
    @"commands" : [GTLRContainerAnalysis_Command class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance_BuildOptions
//

@implementation GTLRContainerAnalysis_BuildProvenance_BuildOptions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildStep
//

@implementation GTLRContainerAnalysis_BuildStep
@dynamic args, dir, entrypoint, env, identifier, name, pullTiming, script,
         secretEnv, status, timeout, timing, volumes, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"secretEnv" : [NSString class],
    @"volumes" : [GTLRContainerAnalysis_Volume class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CancelOperationRequest
//

@implementation GTLRContainerAnalysis_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Category
//

@implementation GTLRContainerAnalysis_Category
@dynamic categoryId, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CisBenchmark
//

@implementation GTLRContainerAnalysis_CisBenchmark
@dynamic profileLevel, severity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CloudRepoSourceContext
//

@implementation GTLRContainerAnalysis_CloudRepoSourceContext
@dynamic aliasContext, repoId, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Command
//

@implementation GTLRContainerAnalysis_Command
@dynamic args, dir, env, identifier, name, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Completeness
//

@implementation GTLRContainerAnalysis_Completeness
@dynamic arguments, environment, materials;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ComplianceNote
//

@implementation GTLRContainerAnalysis_ComplianceNote
@dynamic cisBenchmark, descriptionProperty, rationale, remediation,
         scanInstructions, title, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"version" : [GTLRContainerAnalysis_ComplianceVersion class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ComplianceOccurrence
//

@implementation GTLRContainerAnalysis_ComplianceOccurrence
@dynamic nonComplianceReason, nonCompliantFiles;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nonCompliantFiles" : [GTLRContainerAnalysis_NonCompliantFile class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ComplianceVersion
//

@implementation GTLRContainerAnalysis_ComplianceVersion
@dynamic cpeUri, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CVSSv3
//

@implementation GTLRContainerAnalysis_CVSSv3
@dynamic attackComplexity, attackVector, availabilityImpact, baseScore,
         confidentialityImpact, exploitabilityScore, impactScore,
         integrityImpact, privilegesRequired, scope, userInteraction;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DeploymentNote
//

@implementation GTLRContainerAnalysis_DeploymentNote
@dynamic resourceUri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DeploymentOccurrence
//

@implementation GTLRContainerAnalysis_DeploymentOccurrence
@dynamic address, config, deployTime, platform, resourceUri, undeployTime,
         userEmail;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Detail
//

@implementation GTLRContainerAnalysis_Detail
@dynamic affectedCpeUri, affectedPackage, affectedVersionEnd,
         affectedVersionStart, descriptionProperty, fixedCpeUri, fixedPackage,
         fixedVersion, isObsolete, packageType, severityName, source,
         sourceUpdateTime, vendor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DiscoveryNote
//

@implementation GTLRContainerAnalysis_DiscoveryNote
@dynamic analysisKind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DiscoveryOccurrence
//

@implementation GTLRContainerAnalysis_DiscoveryOccurrence
@dynamic analysisStatus, analysisStatusError, continuousAnalysis, cpe,
         lastScanTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Distribution
//

@implementation GTLRContainerAnalysis_Distribution
@dynamic architecture, cpeUri, descriptionProperty, latestVersion, maintainer,
         url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DSSEAttestationNote
//

@implementation GTLRContainerAnalysis_DSSEAttestationNote
@dynamic hint;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DSSEAttestationOccurrence
//

@implementation GTLRContainerAnalysis_DSSEAttestationOccurrence
@dynamic envelope, statement;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_DSSEHint
//

@implementation GTLRContainerAnalysis_DSSEHint
@dynamic humanReadableName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Empty
//

@implementation GTLRContainerAnalysis_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Envelope
//

@implementation GTLRContainerAnalysis_Envelope
@dynamic payload, payloadType, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signatures" : [GTLRContainerAnalysis_EnvelopeSignature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_EnvelopeSignature
//

@implementation GTLRContainerAnalysis_EnvelopeSignature
@dynamic keyid, sig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Expr
//

@implementation GTLRContainerAnalysis_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_FileHashes
//

@implementation GTLRContainerAnalysis_FileHashes
@dynamic fileHash;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileHash" : [GTLRContainerAnalysis_Hash class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Fingerprint
//

@implementation GTLRContainerAnalysis_Fingerprint
@dynamic v1Name, v2Blob, v2Name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"v2Blob" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_FixableTotalByDigest
//

@implementation GTLRContainerAnalysis_FixableTotalByDigest
@dynamic fixableCount, resourceUri, severity, totalCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GerritSourceContext
//

@implementation GTLRContainerAnalysis_GerritSourceContext
@dynamic aliasContext, gerritProject, hostUri, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_GetIamPolicyRequest
@dynamic options;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetPolicyOptions
//

@implementation GTLRContainerAnalysis_GetPolicyOptions
@dynamic requestedPolicyVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GitSourceContext
//

@implementation GTLRContainerAnalysis_GitSourceContext
@dynamic revisionId, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
@dynamic createTime, endTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Hash
//

@implementation GTLRContainerAnalysis_Hash
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Hint
//

@implementation GTLRContainerAnalysis_Hint
@dynamic humanReadableName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Identity
//

@implementation GTLRContainerAnalysis_Identity
@dynamic revision, updateId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ImageNote
//

@implementation GTLRContainerAnalysis_ImageNote
@dynamic fingerprint, resourceUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ImageOccurrence
//

@implementation GTLRContainerAnalysis_ImageOccurrence
@dynamic baseResourceUrl, distance, fingerprint, layerInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layerInfo" : [GTLRContainerAnalysis_Layer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_InTotoProvenance
//

@implementation GTLRContainerAnalysis_InTotoProvenance
@dynamic builderConfig, materials, metadata, recipe;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"materials" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_InTotoStatement
//

@implementation GTLRContainerAnalysis_InTotoStatement
@dynamic predicateType, provenance, subject, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subject" : [GTLRContainerAnalysis_Subject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Jwt
//

@implementation GTLRContainerAnalysis_Jwt
@dynamic compactJwt;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_KnowledgeBase
//

@implementation GTLRContainerAnalysis_KnowledgeBase
@dynamic name, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Layer
//

@implementation GTLRContainerAnalysis_Layer
@dynamic arguments, directive;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNoteOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListNoteOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNotesResponse
//

@implementation GTLRContainerAnalysis_ListNotesResponse
@dynamic nextPageToken, notes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"notes" : [GTLRContainerAnalysis_Note class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"notes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListOperationsResponse
//

@implementation GTLRContainerAnalysis_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRContainerAnalysis_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Location
//

@implementation GTLRContainerAnalysis_Location
@dynamic cpeUri, path, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Metadata
//

@implementation GTLRContainerAnalysis_Metadata
@dynamic buildFinishedOn, buildInvocationId, buildStartedOn, completeness,
         reproducible;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_NonCompliantFile
//

@implementation GTLRContainerAnalysis_NonCompliantFile
@dynamic displayCommand, path, reason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Note
//

@implementation GTLRContainerAnalysis_Note
@dynamic attestation, build, compliance, createTime, deployment, discovery,
         dsseAttestation, expirationTime, image, kind, longDescription, name,
         package, relatedNoteNames, relatedUrl, shortDescription, updateTime,
         upgrade, vulnerability;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"relatedNoteNames" : [NSString class],
    @"relatedUrl" : [GTLRContainerAnalysis_RelatedUrl class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Occurrence
//

@implementation GTLRContainerAnalysis_Occurrence
@dynamic attestation, build, compliance, createTime, deployment, discovery,
         dsseAttestation, envelope, image, kind, name, noteName, package,
         remediation, resourceUri, updateTime, upgrade, vulnerability;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation
//

@implementation GTLRContainerAnalysis_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation_Metadata
//

@implementation GTLRContainerAnalysis_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation_Response
//

@implementation GTLRContainerAnalysis_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PackageIssue
//

@implementation GTLRContainerAnalysis_PackageIssue
@dynamic affectedCpeUri, affectedPackage, affectedVersion, effectiveSeverity,
         fixAvailable, fixedCpeUri, fixedPackage, fixedVersion, packageType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PackageNote
//

@implementation GTLRContainerAnalysis_PackageNote
@dynamic distribution, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"distribution" : [GTLRContainerAnalysis_Distribution class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PackageOccurrence
//

@implementation GTLRContainerAnalysis_PackageOccurrence
@dynamic location, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"location" : [GTLRContainerAnalysis_Location class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Policy
//

@implementation GTLRContainerAnalysis_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRContainerAnalysis_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ProjectRepoId
//

@implementation GTLRContainerAnalysis_ProjectRepoId
@dynamic projectId, repoName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Recipe
//

@implementation GTLRContainerAnalysis_Recipe
@dynamic arguments, definedInMaterial, entryPoint, environment, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arguments" : [GTLRContainerAnalysis_Recipe_Arguments_Item class],
    @"environment" : [GTLRContainerAnalysis_Recipe_Environment_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Recipe_Arguments_Item
//

@implementation GTLRContainerAnalysis_Recipe_Arguments_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Recipe_Environment_Item
//

@implementation GTLRContainerAnalysis_Recipe_Environment_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RelatedUrl
//

@implementation GTLRContainerAnalysis_RelatedUrl
@dynamic label, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RepoId
//

@implementation GTLRContainerAnalysis_RepoId
@dynamic projectRepoId, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Signature
//

@implementation GTLRContainerAnalysis_Signature
@dynamic publicKeyId, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source
//

@implementation GTLRContainerAnalysis_Source
@dynamic additionalContexts, artifactStorageSourceUri, context, fileHashes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"additionalContexts" : [GTLRContainerAnalysis_SourceContext class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source_FileHashes
//

@implementation GTLRContainerAnalysis_Source_FileHashes

+ (Class)classForAdditionalProperties {
  return [GTLRContainerAnalysis_FileHashes class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SourceContext
//

@implementation GTLRContainerAnalysis_SourceContext
@dynamic cloudRepo, gerrit, git, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SourceContext_Labels
//

@implementation GTLRContainerAnalysis_SourceContext_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status
//

@implementation GTLRContainerAnalysis_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status_Details_Item
//

@implementation GTLRContainerAnalysis_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Subject
//

@implementation GTLRContainerAnalysis_Subject
@dynamic digest, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Subject_Digest
//

@implementation GTLRContainerAnalysis_Subject_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsRequest
//

@implementation GTLRContainerAnalysis_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsResponse
//

@implementation GTLRContainerAnalysis_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TimeSpan
//

@implementation GTLRContainerAnalysis_TimeSpan
@dynamic endTime, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_UpgradeDistribution
//

@implementation GTLRContainerAnalysis_UpgradeDistribution
@dynamic classification, cpeUri, cve, severity;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cve" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_UpgradeNote
//

@implementation GTLRContainerAnalysis_UpgradeNote
@dynamic distributions, package, version, windowsUpdate;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"distributions" : [GTLRContainerAnalysis_UpgradeDistribution class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_UpgradeOccurrence
//

@implementation GTLRContainerAnalysis_UpgradeOccurrence
@dynamic distribution, package, parsedVersion, windowsUpdate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Version
//

@implementation GTLRContainerAnalysis_Version
@dynamic epoch, fullName, inclusive, kind, name, revision;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Volume
//

@implementation GTLRContainerAnalysis_Volume
@dynamic name, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityNote
//

@implementation GTLRContainerAnalysis_VulnerabilityNote
@dynamic cvssScore, cvssV3, details, severity, sourceUpdateTime, windowsDetails;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Detail class],
    @"windowsDetails" : [GTLRContainerAnalysis_WindowsDetail class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityOccurrence
//

@implementation GTLRContainerAnalysis_VulnerabilityOccurrence
@dynamic cvssScore, effectiveSeverity, fixAvailable, longDescription,
         packageIssue, relatedUrls, severity, shortDescription, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageIssue" : [GTLRContainerAnalysis_PackageIssue class],
    @"relatedUrls" : [GTLRContainerAnalysis_RelatedUrl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityOccurrencesSummary
//

@implementation GTLRContainerAnalysis_VulnerabilityOccurrencesSummary
@dynamic counts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"counts" : [GTLRContainerAnalysis_FixableTotalByDigest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_WindowsDetail
//

@implementation GTLRContainerAnalysis_WindowsDetail
@dynamic cpeUri, descriptionProperty, fixingKbs, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fixingKbs" : [GTLRContainerAnalysis_KnowledgeBase class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_WindowsUpdate
//

@implementation GTLRContainerAnalysis_WindowsUpdate
@dynamic categories, descriptionProperty, identity, kbArticleIds,
         lastPublishedTimestamp, supportUrl, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [GTLRContainerAnalysis_Category class],
    @"kbArticleIds" : [NSString class]
  };
  return map;
}

@end
