// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Container Analysis API (containeranalysis/v1alpha1)
// Description:
//   An implementation of the Grafeas API, which stores, and enables querying
//   and retrieval of critical metadata about all of your software artifacts.
// Documentation:
//   https://cloud.google.com/container-analysis/api/reference/rest/

#import "GTLRContainerAnalysisObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRContainerAnalysis_AuditLogConfig.logType
NSString * const kGTLRContainerAnalysis_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRContainerAnalysis_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRContainerAnalysis_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRContainerAnalysis_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRContainerAnalysis_BuildSignature.keyType
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_KeyTypeUnspecified = @"KEY_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_PgpAsciiArmored = @"PGP_ASCII_ARMORED";
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_PkixPem = @"PKIX_PEM";

// GTLRContainerAnalysis_Deployment.platform
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Custom = @"CUSTOM";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Flex = @"FLEX";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Gke = @"GKE";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_PlatformUnspecified = @"PLATFORM_UNSPECIFIED";

// GTLRContainerAnalysis_Discovered.analysisStatus
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_AnalysisStatusUnspecified = @"ANALYSIS_STATUS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedFailed = @"FINISHED_FAILED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedSuccess = @"FINISHED_SUCCESS";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedUnsupported = @"FINISHED_UNSUPPORTED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_Pending = @"PENDING";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_Scanning = @"SCANNING";

// GTLRContainerAnalysis_Discovered.continuousAnalysis
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_Active = @"ACTIVE";
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_ContinuousAnalysisUnspecified = @"CONTINUOUS_ANALYSIS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_Inactive = @"INACTIVE";

// GTLRContainerAnalysis_Discovery.analysisKind
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_AttestationAuthority = @"ATTESTATION_AUTHORITY";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_BuildDetails = @"BUILD_DETAILS";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Deployable = @"DEPLOYABLE";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_ImageBasis = @"IMAGE_BASIS";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_PackageManager = @"PACKAGE_MANAGER";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_PackageVulnerability = @"PACKAGE_VULNERABILITY";

// GTLRContainerAnalysis_Distribution.architecture
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X64 = @"X64";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X86 = @"X86";

// GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext.kind
NSString * const kGTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext_Kind_Fixed = @"FIXED";
NSString * const kGTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext_Kind_Movable = @"MOVABLE";
NSString * const kGTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext_Kind_Other = @"OTHER";

// GTLRContainerAnalysis_Hash.type
NSString * const kGTLRContainerAnalysis_Hash_Type_None   = @"NONE";
NSString * const kGTLRContainerAnalysis_Hash_Type_Sha256 = @"SHA256";

// GTLRContainerAnalysis_Layer.directive
NSString * const kGTLRContainerAnalysis_Layer_Directive_Add    = @"ADD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Arg    = @"ARG";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Cmd    = @"CMD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Copy   = @"COPY";
NSString * const kGTLRContainerAnalysis_Layer_Directive_DirectiveUnspecified = @"DIRECTIVE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Entrypoint = @"ENTRYPOINT";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Env    = @"ENV";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Expose = @"EXPOSE";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Healthcheck = @"HEALTHCHECK";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Label  = @"LABEL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Maintainer = @"MAINTAINER";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Onbuild = @"ONBUILD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Run    = @"RUN";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Shell  = @"SHELL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Stopsignal = @"STOPSIGNAL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_User   = @"USER";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Volume = @"VOLUME";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Workdir = @"WORKDIR";

// GTLRContainerAnalysis_Note.kind
NSString * const kGTLRContainerAnalysis_Note_Kind_AttestationAuthority = @"ATTESTATION_AUTHORITY";
NSString * const kGTLRContainerAnalysis_Note_Kind_BuildDetails = @"BUILD_DETAILS";
NSString * const kGTLRContainerAnalysis_Note_Kind_Deployable   = @"DEPLOYABLE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Discovery    = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Note_Kind_ImageBasis   = @"IMAGE_BASIS";
NSString * const kGTLRContainerAnalysis_Note_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Note_Kind_PackageManager = @"PACKAGE_MANAGER";
NSString * const kGTLRContainerAnalysis_Note_Kind_PackageVulnerability = @"PACKAGE_VULNERABILITY";

// GTLRContainerAnalysis_Occurrence.kind
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_AttestationAuthority = @"ATTESTATION_AUTHORITY";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_BuildDetails = @"BUILD_DETAILS";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Deployable = @"DEPLOYABLE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_ImageBasis = @"IMAGE_BASIS";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_PackageManager = @"PACKAGE_MANAGER";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_PackageVulnerability = @"PACKAGE_VULNERABILITY";

// GTLRContainerAnalysis_PgpSignedAttestation.contentType
NSString * const kGTLRContainerAnalysis_PgpSignedAttestation_ContentType_ContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_PgpSignedAttestation_ContentType_SimpleSigningJson = @"SIMPLE_SIGNING_JSON";

// GTLRContainerAnalysis_SeverityCount.severity
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_SeverityCount_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_Version.kind
NSString * const kGTLRContainerAnalysis_Version_Kind_Maximum = @"MAXIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Minimum = @"MINIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Normal  = @"NORMAL";

// GTLRContainerAnalysis_VulnerabilityDetails.severity
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityDetails_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_VulnerabilityType.severity
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_VulnerabilityType_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Artifact
//

@implementation GTLRContainerAnalysis_Artifact
@dynamic checksum, identifier, name, names;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Attestation
//

@implementation GTLRContainerAnalysis_Attestation
@dynamic pgpSignedAttestation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AttestationAuthority
//

@implementation GTLRContainerAnalysis_AttestationAuthority
@dynamic hint;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AttestationAuthorityHint
//

@implementation GTLRContainerAnalysis_AttestationAuthorityHint
@dynamic humanReadableName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AuditConfig
//

@implementation GTLRContainerAnalysis_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRContainerAnalysis_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AuditLogConfig
//

@implementation GTLRContainerAnalysis_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Basis
//

@implementation GTLRContainerAnalysis_Basis
@dynamic fingerprint, resourceUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Binding
//

@implementation GTLRContainerAnalysis_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildDetails
//

@implementation GTLRContainerAnalysis_BuildDetails
@dynamic provenance, provenanceBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance
//

@implementation GTLRContainerAnalysis_BuildProvenance
@dynamic builderVersion, buildOptions, builtArtifacts, commands, createTime,
         creator, finishTime, identifier, logsBucket, projectId,
         sourceProvenance, startTime, triggerId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"builtArtifacts" : [GTLRContainerAnalysis_Artifact class],
    @"commands" : [GTLRContainerAnalysis_Command class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance_BuildOptions
//

@implementation GTLRContainerAnalysis_BuildProvenance_BuildOptions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildSignature
//

@implementation GTLRContainerAnalysis_BuildSignature
@dynamic keyId, keyType, publicKey, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildType
//

@implementation GTLRContainerAnalysis_BuildType
@dynamic builderVersion, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Command
//

@implementation GTLRContainerAnalysis_Command
@dynamic args, dir, env, identifier, name, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CreateOperationRequest
//

@implementation GTLRContainerAnalysis_CreateOperationRequest
@dynamic operation, operationId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Deployable
//

@implementation GTLRContainerAnalysis_Deployable
@dynamic resourceUri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Deployment
//

@implementation GTLRContainerAnalysis_Deployment
@dynamic address, config, deployTime, platform, resourceUri, undeployTime,
         userEmail;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Derived
//

@implementation GTLRContainerAnalysis_Derived
@dynamic baseResourceUrl, distance, fingerprint, layerInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layerInfo" : [GTLRContainerAnalysis_Layer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Detail
//

@implementation GTLRContainerAnalysis_Detail
@dynamic cpeUri, descriptionProperty, fixedLocation, isObsolete,
         maxAffectedVersion, minAffectedVersion, package, packageType,
         severityName;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Discovered
//

@implementation GTLRContainerAnalysis_Discovered
@dynamic analysisStatus, analysisStatusError, continuousAnalysis, operation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Discovery
//

@implementation GTLRContainerAnalysis_Discovery
@dynamic analysisKind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Distribution
//

@implementation GTLRContainerAnalysis_Distribution
@dynamic architecture, cpeUri, descriptionProperty, latestVersion, maintainer,
         url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Empty
//

@implementation GTLRContainerAnalysis_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Expr
//

@implementation GTLRContainerAnalysis_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_FileHashes
//

@implementation GTLRContainerAnalysis_FileHashes
@dynamic fileHash;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileHash" : [GTLRContainerAnalysis_Hash class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Fingerprint
//

@implementation GTLRContainerAnalysis_Fingerprint
@dynamic v1Name, v2Blob, v2Name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"v2Blob" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_GetIamPolicyRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetVulnzOccurrencesSummaryResponse
//

@implementation GTLRContainerAnalysis_GetVulnzOccurrencesSummaryResponse
@dynamic counts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"counts" : [GTLRContainerAnalysis_SeverityCount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1AliasContext
@dynamic kind, name;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext
@dynamic aliasContext, repoId, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext
@dynamic aliasContext, gerritProject, hostUri, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext
@dynamic revisionId, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
@dynamic createTime, endTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId
@dynamic projectId, repoName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1RepoId
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1RepoId
@dynamic projectRepoId, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1SourceContext
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1SourceContext
@dynamic cloudRepo, gerrit, git, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1SourceContext_Labels
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1SourceContext_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Hash
//

@implementation GTLRContainerAnalysis_Hash
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Installation
//

@implementation GTLRContainerAnalysis_Installation
@dynamic location, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"location" : [GTLRContainerAnalysis_Location class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Layer
//

@implementation GTLRContainerAnalysis_Layer
@dynamic arguments, directive;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNoteOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListNoteOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNotesResponse
//

@implementation GTLRContainerAnalysis_ListNotesResponse
@dynamic nextPageToken, notes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"notes" : [GTLRContainerAnalysis_Note class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"notes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListScanConfigsResponse
//

@implementation GTLRContainerAnalysis_ListScanConfigsResponse
@dynamic nextPageToken, scanConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scanConfigs" : [GTLRContainerAnalysis_ScanConfig class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"scanConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Location
//

@implementation GTLRContainerAnalysis_Location
@dynamic cpeUri, path, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Note
//

@implementation GTLRContainerAnalysis_Note
@dynamic attestationAuthority, baseImage, buildType, createTime, deployable,
         discovery, expirationTime, kind, longDescription, name, package,
         relatedUrl, shortDescription, updateTime, vulnerabilityType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"relatedUrl" : [GTLRContainerAnalysis_RelatedUrl class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Occurrence
//

@implementation GTLRContainerAnalysis_Occurrence
@dynamic attestation, buildDetails, createTime, deployment, derivedImage,
         discovered, installation, kind, name, noteName, remediation, resource,
         resourceUrl, updateTime, vulnerabilityDetails;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation
//

@implementation GTLRContainerAnalysis_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation_Metadata
//

@implementation GTLRContainerAnalysis_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Operation_Response
//

@implementation GTLRContainerAnalysis_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Package
//

@implementation GTLRContainerAnalysis_Package
@dynamic distribution, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"distribution" : [GTLRContainerAnalysis_Distribution class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PackageIssue
//

@implementation GTLRContainerAnalysis_PackageIssue
@dynamic affectedLocation, fixedLocation, severityName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PgpSignedAttestation
//

@implementation GTLRContainerAnalysis_PgpSignedAttestation
@dynamic contentType, pgpKeyId, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Policy
//

@implementation GTLRContainerAnalysis_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRContainerAnalysis_AuditConfig class],
    @"bindings" : [GTLRContainerAnalysis_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RelatedUrl
//

@implementation GTLRContainerAnalysis_RelatedUrl
@dynamic label, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RepoSource
//

@implementation GTLRContainerAnalysis_RepoSource
@dynamic branchName, commitSha, projectId, repoName, tagName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Resource
//

@implementation GTLRContainerAnalysis_Resource
@dynamic contentHash, name, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ScanConfig
//

@implementation GTLRContainerAnalysis_ScanConfig
@dynamic createTime, descriptionProperty, enabled, name, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SeverityCount
//

@implementation GTLRContainerAnalysis_SeverityCount
@dynamic count, severity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source
//

@implementation GTLRContainerAnalysis_Source
@dynamic additionalContexts, artifactStorageSource, context, fileHashes,
         repoSource, storageSource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"additionalContexts" : [GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1SourceContext class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source_FileHashes
//

@implementation GTLRContainerAnalysis_Source_FileHashes

+ (Class)classForAdditionalProperties {
  return [GTLRContainerAnalysis_FileHashes class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status
//

@implementation GTLRContainerAnalysis_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status_Details_Item
//

@implementation GTLRContainerAnalysis_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_StorageSource
//

@implementation GTLRContainerAnalysis_StorageSource
@dynamic bucket, generation, object;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsRequest
//

@implementation GTLRContainerAnalysis_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsResponse
//

@implementation GTLRContainerAnalysis_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_UpdateOperationRequest
//

@implementation GTLRContainerAnalysis_UpdateOperationRequest
@dynamic operation, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Version
//

@implementation GTLRContainerAnalysis_Version
@dynamic epoch, kind, name, revision;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityDetails
//

@implementation GTLRContainerAnalysis_VulnerabilityDetails
@dynamic cvssScore, packageIssue, severity, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageIssue" : [GTLRContainerAnalysis_PackageIssue class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityLocation
//

@implementation GTLRContainerAnalysis_VulnerabilityLocation
@dynamic cpeUri, package, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityType
//

@implementation GTLRContainerAnalysis_VulnerabilityType
@dynamic cvssScore, details, severity;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Detail class]
  };
  return map;
}

@end
