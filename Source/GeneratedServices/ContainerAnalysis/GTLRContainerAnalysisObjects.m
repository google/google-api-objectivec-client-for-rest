// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Container Analysis API (containeranalysis/v1beta1)
// Description:
//   An implementation of the Grafeas API, which stores, and enables querying
//   and retrieval of critical metadata about all of your software artifacts.
// Documentation:
//   https://cloud.google.com/container-analysis/api/reference/rest/

#import "GTLRContainerAnalysisObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRContainerAnalysis_AliasContext.kind
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Fixed = @"FIXED";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Movable = @"MOVABLE";
NSString * const kGTLRContainerAnalysis_AliasContext_Kind_Other = @"OTHER";

// GTLRContainerAnalysis_BuildSignature.keyType
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_KeyTypeUnspecified = @"KEY_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_PgpAsciiArmored = @"PGP_ASCII_ARMORED";
NSString * const kGTLRContainerAnalysis_BuildSignature_KeyType_PkixPem = @"PKIX_PEM";

// GTLRContainerAnalysis_CVSSv3.attackComplexity
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityHigh = @"ATTACK_COMPLEXITY_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityLow = @"ATTACK_COMPLEXITY_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackComplexity_AttackComplexityUnspecified = @"ATTACK_COMPLEXITY_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.attackVector
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorAdjacent = @"ATTACK_VECTOR_ADJACENT";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorLocal = @"ATTACK_VECTOR_LOCAL";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorNetwork = @"ATTACK_VECTOR_NETWORK";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorPhysical = @"ATTACK_VECTOR_PHYSICAL";
NSString * const kGTLRContainerAnalysis_CVSSv3_AttackVector_AttackVectorUnspecified = @"ATTACK_VECTOR_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.availabilityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_AvailabilityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.confidentialityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_ConfidentialityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.integrityImpact
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_IntegrityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.privilegesRequired
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredHigh = @"PRIVILEGES_REQUIRED_HIGH";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredLow = @"PRIVILEGES_REQUIRED_LOW";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredNone = @"PRIVILEGES_REQUIRED_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_PrivilegesRequired_PrivilegesRequiredUnspecified = @"PRIVILEGES_REQUIRED_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.scope
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeChanged = @"SCOPE_CHANGED";
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeUnchanged = @"SCOPE_UNCHANGED";
NSString * const kGTLRContainerAnalysis_CVSSv3_Scope_ScopeUnspecified = @"SCOPE_UNSPECIFIED";

// GTLRContainerAnalysis_CVSSv3.userInteraction
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionNone = @"USER_INTERACTION_NONE";
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionRequired = @"USER_INTERACTION_REQUIRED";
NSString * const kGTLRContainerAnalysis_CVSSv3_UserInteraction_UserInteractionUnspecified = @"USER_INTERACTION_UNSPECIFIED";

// GTLRContainerAnalysis_Deployment.platform
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Custom = @"CUSTOM";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Flex = @"FLEX";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_Gke = @"GKE";
NSString * const kGTLRContainerAnalysis_Deployment_Platform_PlatformUnspecified = @"PLATFORM_UNSPECIFIED";

// GTLRContainerAnalysis_Discovered.analysisStatus
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_AnalysisStatusUnspecified = @"ANALYSIS_STATUS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedFailed = @"FINISHED_FAILED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedSuccess = @"FINISHED_SUCCESS";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_FinishedUnsupported = @"FINISHED_UNSUPPORTED";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_Pending = @"PENDING";
NSString * const kGTLRContainerAnalysis_Discovered_AnalysisStatus_Scanning = @"SCANNING";

// GTLRContainerAnalysis_Discovered.continuousAnalysis
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_Active = @"ACTIVE";
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_ContinuousAnalysisUnspecified = @"CONTINUOUS_ANALYSIS_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovered_ContinuousAnalysis_Inactive = @"INACTIVE";

// GTLRContainerAnalysis_Discovery.analysisKind
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Attestation = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Build = @"BUILD";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Deployment = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Image = @"IMAGE";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Intoto = @"INTOTO";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Package = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_Discovery_AnalysisKind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_Distribution.architecture
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X64 = @"X64";
NSString * const kGTLRContainerAnalysis_Distribution_Architecture_X86 = @"X86";

// GTLRContainerAnalysis_FixableTotalByDigest.severity
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_FixableTotalByDigest_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_GenericSignedAttestation.contentType
NSString * const kGTLRContainerAnalysis_GenericSignedAttestation_ContentType_ContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_GenericSignedAttestation_ContentType_SimpleSigningJson = @"SIMPLE_SIGNING_JSON";

// GTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails.effectiveSeverity
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_EffectiveSeverity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails.severity
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRContainerAnalysis_Hash.type
NSString * const kGTLRContainerAnalysis_Hash_Type_HashTypeUnspecified = @"HASH_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Hash_Type_Sha256       = @"SHA256";

// GTLRContainerAnalysis_Layer.directive
NSString * const kGTLRContainerAnalysis_Layer_Directive_Add    = @"ADD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Arg    = @"ARG";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Cmd    = @"CMD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Copy   = @"COPY";
NSString * const kGTLRContainerAnalysis_Layer_Directive_DirectiveUnspecified = @"DIRECTIVE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Entrypoint = @"ENTRYPOINT";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Env    = @"ENV";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Expose = @"EXPOSE";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Healthcheck = @"HEALTHCHECK";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Label  = @"LABEL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Maintainer = @"MAINTAINER";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Onbuild = @"ONBUILD";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Run    = @"RUN";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Shell  = @"SHELL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Stopsignal = @"STOPSIGNAL";
NSString * const kGTLRContainerAnalysis_Layer_Directive_User   = @"USER";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Volume = @"VOLUME";
NSString * const kGTLRContainerAnalysis_Layer_Directive_Workdir = @"WORKDIR";

// GTLRContainerAnalysis_Note.kind
NSString * const kGTLRContainerAnalysis_Note_Kind_Attestation  = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_Note_Kind_Build        = @"BUILD";
NSString * const kGTLRContainerAnalysis_Note_Kind_Deployment   = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_Note_Kind_Discovery    = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Note_Kind_Image        = @"IMAGE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Intoto       = @"INTOTO";
NSString * const kGTLRContainerAnalysis_Note_Kind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Note_Kind_Package      = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_Note_Kind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_Occurrence.kind
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Attestation = @"ATTESTATION";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Build  = @"BUILD";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Deployment = @"DEPLOYMENT";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Discovery = @"DISCOVERY";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Image  = @"IMAGE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Intoto = @"INTOTO";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Package = @"PACKAGE";
NSString * const kGTLRContainerAnalysis_Occurrence_Kind_Vulnerability = @"VULNERABILITY";

// GTLRContainerAnalysis_PgpSignedAttestation.contentType
NSString * const kGTLRContainerAnalysis_PgpSignedAttestation_ContentType_ContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRContainerAnalysis_PgpSignedAttestation_ContentType_SimpleSigningJson = @"SIMPLE_SIGNING_JSON";

// GTLRContainerAnalysis_Version.kind
NSString * const kGTLRContainerAnalysis_Version_Kind_Maximum   = @"MAXIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Minimum   = @"MINIMUM";
NSString * const kGTLRContainerAnalysis_Version_Kind_Normal    = @"NORMAL";
NSString * const kGTLRContainerAnalysis_Version_Kind_VersionKindUnspecified = @"VERSION_KIND_UNSPECIFIED";

// GTLRContainerAnalysis_Vulnerability.severity
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_Critical = @"CRITICAL";
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_High = @"HIGH";
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_Low = @"LOW";
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_Medium = @"MEDIUM";
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_Minimal = @"MINIMAL";
NSString * const kGTLRContainerAnalysis_Vulnerability_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_AliasContext
//

@implementation GTLRContainerAnalysis_AliasContext
@dynamic kind, name;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Artifact
//

@implementation GTLRContainerAnalysis_Artifact
@dynamic checksum, identifier, names;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ArtifactHashes
//

@implementation GTLRContainerAnalysis_ArtifactHashes
@dynamic sha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ArtifactRule
//

@implementation GTLRContainerAnalysis_ArtifactRule
@dynamic artifactRule;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"artifactRule" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Attestation
//

@implementation GTLRContainerAnalysis_Attestation
@dynamic genericSignedAttestation, pgpSignedAttestation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Authority
//

@implementation GTLRContainerAnalysis_Authority
@dynamic hint;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Basis
//

@implementation GTLRContainerAnalysis_Basis
@dynamic fingerprint, resourceUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesRequest
//

@implementation GTLRContainerAnalysis_BatchCreateNotesRequest
@dynamic notes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesRequest_Notes
//

@implementation GTLRContainerAnalysis_BatchCreateNotesRequest_Notes

+ (Class)classForAdditionalProperties {
  return [GTLRContainerAnalysis_Note class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateNotesResponse
//

@implementation GTLRContainerAnalysis_BatchCreateNotesResponse
@dynamic notes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"notes" : [GTLRContainerAnalysis_Note class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateOccurrencesRequest
//

@implementation GTLRContainerAnalysis_BatchCreateOccurrencesRequest
@dynamic occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BatchCreateOccurrencesResponse
//

@implementation GTLRContainerAnalysis_BatchCreateOccurrencesResponse
@dynamic occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Binding
//

@implementation GTLRContainerAnalysis_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Build
//

@implementation GTLRContainerAnalysis_Build
@dynamic builderVersion, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance
//

@implementation GTLRContainerAnalysis_BuildProvenance
@dynamic builderVersion, buildOptions, builtArtifacts, commands, createTime,
         creator, endTime, identifier, logsUri, projectId, sourceProvenance,
         startTime, triggerId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"builtArtifacts" : [GTLRContainerAnalysis_Artifact class],
    @"commands" : [GTLRContainerAnalysis_Command class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildProvenance_BuildOptions
//

@implementation GTLRContainerAnalysis_BuildProvenance_BuildOptions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_BuildSignature
//

@implementation GTLRContainerAnalysis_BuildSignature
@dynamic keyId, keyType, publicKey, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ByProducts
//

@implementation GTLRContainerAnalysis_ByProducts
@dynamic customValues;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ByProducts_CustomValues
//

@implementation GTLRContainerAnalysis_ByProducts_CustomValues

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CloudRepoSourceContext
//

@implementation GTLRContainerAnalysis_CloudRepoSourceContext
@dynamic aliasContext, repoId, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Command
//

@implementation GTLRContainerAnalysis_Command
@dynamic args, dir, env, identifier, name, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_CVSSv3
//

@implementation GTLRContainerAnalysis_CVSSv3
@dynamic attackComplexity, attackVector, availabilityImpact, baseScore,
         confidentialityImpact, exploitabilityScore, impactScore,
         integrityImpact, privilegesRequired, scope, userInteraction;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Deployable
//

@implementation GTLRContainerAnalysis_Deployable
@dynamic resourceUri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Deployment
//

@implementation GTLRContainerAnalysis_Deployment
@dynamic address, config, deployTime, platform, resourceUri, undeployTime,
         userEmail;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Derived
//

@implementation GTLRContainerAnalysis_Derived
@dynamic baseResourceUrl, distance, fingerprint, layerInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layerInfo" : [GTLRContainerAnalysis_Layer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Detail
//

@implementation GTLRContainerAnalysis_Detail
@dynamic cpeUri, descriptionProperty, fixedLocation, isObsolete,
         maxAffectedVersion, minAffectedVersion, package, packageType,
         severityName, sourceUpdateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Details
//

@implementation GTLRContainerAnalysis_Details
@dynamic attestation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Discovered
//

@implementation GTLRContainerAnalysis_Discovered
@dynamic analysisStatus, analysisStatusError, continuousAnalysis,
         lastAnalysisTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Discovery
//

@implementation GTLRContainerAnalysis_Discovery
@dynamic analysisKind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Distribution
//

@implementation GTLRContainerAnalysis_Distribution
@dynamic architecture, cpeUri, descriptionProperty, latestVersion, maintainer,
         url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Empty
//

@implementation GTLRContainerAnalysis_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Environment
//

@implementation GTLRContainerAnalysis_Environment
@dynamic customValues;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Environment_CustomValues
//

@implementation GTLRContainerAnalysis_Environment_CustomValues

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Expr
//

@implementation GTLRContainerAnalysis_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_FileHashes
//

@implementation GTLRContainerAnalysis_FileHashes
@dynamic fileHash;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileHash" : [GTLRContainerAnalysis_Hash class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Fingerprint
//

@implementation GTLRContainerAnalysis_Fingerprint
@dynamic v1Name, v2Blob, v2Name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"v2Blob" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_FixableTotalByDigest
//

@implementation GTLRContainerAnalysis_FixableTotalByDigest
@dynamic fixableCount, resource, severity, totalCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GenericSignedAttestation
//

@implementation GTLRContainerAnalysis_GenericSignedAttestation
@dynamic contentType, serializedPayload, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signatures" : [GTLRContainerAnalysis_Signature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GerritSourceContext
//

@implementation GTLRContainerAnalysis_GerritSourceContext
@dynamic aliasContext, gerritProject, hostUri, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_GetIamPolicyRequest
@dynamic options;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GetPolicyOptions
//

@implementation GTLRContainerAnalysis_GetPolicyOptions
@dynamic requestedPolicyVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GitSourceContext
//

@implementation GTLRContainerAnalysis_GitSourceContext
@dynamic revisionId, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
//

@implementation GTLRContainerAnalysis_GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata
@dynamic createTime, endTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1BuildDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1BuildDetails
@dynamic provenance, provenanceBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1DeploymentDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1DeploymentDetails
@dynamic deployment;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1DiscoveryDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1DiscoveryDetails
@dynamic discovered;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1ImageDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1ImageDetails
@dynamic derivedImage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1IntotoArtifact
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1IntotoArtifact
@dynamic hashes, resourceUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1IntotoDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1IntotoDetails
@dynamic signatures, signedProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"signedProperty" : @"signed" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signatures" : [GTLRContainerAnalysis_GrafeasV1beta1IntotoSignature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1IntotoSignature
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1IntotoSignature
@dynamic keyid, sig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1PackageDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1PackageDetails
@dynamic installation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails
//

@implementation GTLRContainerAnalysis_GrafeasV1beta1VulnerabilityDetails
@dynamic cvssScore, effectiveSeverity, longDescription, packageIssue,
         relatedUrls, severity, shortDescription, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageIssue" : [GTLRContainerAnalysis_PackageIssue class],
    @"relatedUrls" : [GTLRContainerAnalysis_RelatedUrl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Hash
//

@implementation GTLRContainerAnalysis_Hash
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Hint
//

@implementation GTLRContainerAnalysis_Hint
@dynamic humanReadableName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Installation
//

@implementation GTLRContainerAnalysis_Installation
@dynamic location, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"location" : [GTLRContainerAnalysis_Location class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_InToto
//

@implementation GTLRContainerAnalysis_InToto
@dynamic expectedCommand, expectedMaterials, expectedProducts, signingKeys,
         stepName, threshold;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"expectedCommand" : [NSString class],
    @"expectedMaterials" : [GTLRContainerAnalysis_ArtifactRule class],
    @"expectedProducts" : [GTLRContainerAnalysis_ArtifactRule class],
    @"signingKeys" : [GTLRContainerAnalysis_SigningKey class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_KnowledgeBase
//

@implementation GTLRContainerAnalysis_KnowledgeBase
@dynamic name, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Layer
//

@implementation GTLRContainerAnalysis_Layer
@dynamic arguments, directive;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Link
//

@implementation GTLRContainerAnalysis_Link
@dynamic byproducts, command, environment, materials, products;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"command" : [NSString class],
    @"materials" : [GTLRContainerAnalysis_GrafeasV1beta1IntotoArtifact class],
    @"products" : [GTLRContainerAnalysis_GrafeasV1beta1IntotoArtifact class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNoteOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListNoteOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListNotesResponse
//

@implementation GTLRContainerAnalysis_ListNotesResponse
@dynamic nextPageToken, notes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"notes" : [GTLRContainerAnalysis_Note class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"notes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListOccurrencesResponse
//

@implementation GTLRContainerAnalysis_ListOccurrencesResponse
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLRContainerAnalysis_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ListScanConfigsResponse
//

@implementation GTLRContainerAnalysis_ListScanConfigsResponse
@dynamic nextPageToken, scanConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scanConfigs" : [GTLRContainerAnalysis_ScanConfig class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"scanConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Location
//

@implementation GTLRContainerAnalysis_Location
@dynamic cpeUri, path, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Note
//

@implementation GTLRContainerAnalysis_Note
@dynamic attestationAuthority, baseImage, build, createTime, deployable,
         discovery, expirationTime, intoto, kind, longDescription, name,
         package, relatedNoteNames, relatedUrl, shortDescription, updateTime,
         vulnerability;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"relatedNoteNames" : [NSString class],
    @"relatedUrl" : [GTLRContainerAnalysis_RelatedUrl class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Occurrence
//

@implementation GTLRContainerAnalysis_Occurrence
@dynamic attestation, build, createTime, deployment, derivedImage, discovered,
         installation, intoto, kind, name, noteName, remediation, resource,
         updateTime, vulnerability;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Package
//

@implementation GTLRContainerAnalysis_Package
@dynamic distribution, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"distribution" : [GTLRContainerAnalysis_Distribution class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PackageIssue
//

@implementation GTLRContainerAnalysis_PackageIssue
@dynamic affectedLocation, fixedLocation, severityName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_PgpSignedAttestation
//

@implementation GTLRContainerAnalysis_PgpSignedAttestation
@dynamic contentType, pgpKeyId, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Policy
//

@implementation GTLRContainerAnalysis_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRContainerAnalysis_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ProjectRepoId
//

@implementation GTLRContainerAnalysis_ProjectRepoId
@dynamic projectId, repoName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RelatedUrl
//

@implementation GTLRContainerAnalysis_RelatedUrl
@dynamic label, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_RepoId
//

@implementation GTLRContainerAnalysis_RepoId
@dynamic projectRepoId, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Resource
//

@implementation GTLRContainerAnalysis_Resource
@dynamic contentHash, name, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_ScanConfig
//

@implementation GTLRContainerAnalysis_ScanConfig
@dynamic createTime, descriptionProperty, enabled, name, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SetIamPolicyRequest
//

@implementation GTLRContainerAnalysis_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Signature
//

@implementation GTLRContainerAnalysis_Signature
@dynamic publicKeyId, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SigningKey
//

@implementation GTLRContainerAnalysis_SigningKey
@dynamic keyId, keyScheme, keyType, publicKeyValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source
//

@implementation GTLRContainerAnalysis_Source
@dynamic additionalContexts, artifactStorageSourceUri, context, fileHashes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"additionalContexts" : [GTLRContainerAnalysis_SourceContext class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Source_FileHashes
//

@implementation GTLRContainerAnalysis_Source_FileHashes

+ (Class)classForAdditionalProperties {
  return [GTLRContainerAnalysis_FileHashes class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SourceContext
//

@implementation GTLRContainerAnalysis_SourceContext
@dynamic cloudRepo, gerrit, git, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_SourceContext_Labels
//

@implementation GTLRContainerAnalysis_SourceContext_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status
//

@implementation GTLRContainerAnalysis_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Status_Details_Item
//

@implementation GTLRContainerAnalysis_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsRequest
//

@implementation GTLRContainerAnalysis_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_TestIamPermissionsResponse
//

@implementation GTLRContainerAnalysis_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Version
//

@implementation GTLRContainerAnalysis_Version
@dynamic epoch, kind, name, revision;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_Vulnerability
//

@implementation GTLRContainerAnalysis_Vulnerability
@dynamic cvssScore, cvssV3, details, severity, sourceUpdateTime, windowsDetails;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRContainerAnalysis_Detail class],
    @"windowsDetails" : [GTLRContainerAnalysis_WindowsDetail class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityLocation
//

@implementation GTLRContainerAnalysis_VulnerabilityLocation
@dynamic cpeUri, package, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_VulnerabilityOccurrencesSummary
//

@implementation GTLRContainerAnalysis_VulnerabilityOccurrencesSummary
@dynamic counts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"counts" : [GTLRContainerAnalysis_FixableTotalByDigest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRContainerAnalysis_WindowsDetail
//

@implementation GTLRContainerAnalysis_WindowsDetail
@dynamic cpeUri, descriptionProperty, fixingKbs, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fixingKbs" : [GTLRContainerAnalysis_KnowledgeBase class]
  };
  return map;
}

@end
