// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Partners API (partners/v2)
// Description:
//   Searches certified companies and creates contact leads with them, and also
//   audits the usage of clients.
// Documentation:
//   https://developers.google.com/partners/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRPartners_AdWordsManagerAccountInfo;
@class GTLRPartners_Analytics;
@class GTLRPartners_AnalyticsDataPoint;
@class GTLRPartners_AnalyticsSummary;
@class GTLRPartners_AvailableOffer;
@class GTLRPartners_Certification;
@class GTLRPartners_CertificationExamStatus;
@class GTLRPartners_CertificationStatus;
@class GTLRPartners_Company;
@class GTLRPartners_CompanyRelation;
@class GTLRPartners_CountryOfferInfo;
@class GTLRPartners_Date;
@class GTLRPartners_DebugInfo;
@class GTLRPartners_EventData;
@class GTLRPartners_ExamStatus;
@class GTLRPartners_HistoricalOffer;
@class GTLRPartners_LatLng;
@class GTLRPartners_Lead;
@class GTLRPartners_LocalizedCompanyInfo;
@class GTLRPartners_Location;
@class GTLRPartners_LogMessageRequest_ClientInfo;
@class GTLRPartners_Money;
@class GTLRPartners_OfferCustomer;
@class GTLRPartners_OptIns;
@class GTLRPartners_PublicProfile;
@class GTLRPartners_Rank;
@class GTLRPartners_RecaptchaChallenge;
@class GTLRPartners_RequestMetadata;
@class GTLRPartners_ResponseMetadata;
@class GTLRPartners_SpecializationStatus;
@class GTLRPartners_TrafficSource;
@class GTLRPartners_UserOverrides;
@class GTLRPartners_UserProfile;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRPartners_AvailableOffer.offerLevel

/**
 *  Users/Agencies that have no offers due to contractural agreements.
 *
 *  Value: "OFFER_LEVEL_DENY_CONTRACT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelDenyContract;
/**
 *  Users/Agencies that have no offers because of a problem.
 *
 *  Value: "OFFER_LEVEL_DENY_PROBLEM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelDenyProblem;
/**
 *  Some Agencies don't get any offers.
 *
 *  Value: "OFFER_LEVEL_LIMIT_0"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit0;
/**
 *  Agencies with adequate AHI and spend get 15/month.
 *
 *  Value: "OFFER_LEVEL_LIMIT_15"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit15;
/**
 *  Basic level gets 5 per month.
 *
 *  Value: "OFFER_LEVEL_LIMIT_5"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit5;
/**
 *  Badged partners (even in grace) get 50 per month.
 *
 *  Value: "OFFER_LEVEL_LIMIT_50"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit50;
/**
 *  Users/Agencies that have a manually-configured limit.
 *
 *  Value: "OFFER_LEVEL_MANUAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelManual;
/**
 *  Unset.
 *
 *  Value: "OFFER_LEVEL_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelUnspecified;

// ----------------------------------------------------------------------------
// GTLRPartners_AvailableOffer.offerType

/**
 *  Spend Match up to Y.
 *
 *  Value: "OFFER_TYPE_SPEND_MATCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferType_OfferTypeSpendMatch;
/**
 *  AdWords spend X get Y.
 *
 *  Value: "OFFER_TYPE_SPEND_X_GET_Y"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferType_OfferTypeSpendXGetY;
/**
 *  Unset.
 *
 *  Value: "OFFER_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferType_OfferTypeUnspecified;
/**
 *  Youtube video.
 *
 *  Value: "OFFER_TYPE_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_AvailableOffer_OfferType_OfferTypeVideo;

// ----------------------------------------------------------------------------
// GTLRPartners_Certification.certificationType

/**
 *  Unchosen.
 *
 *  Value: "CERTIFICATION_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CertificationTypeUnspecified;
/**
 *  AdWords certified.
 *
 *  Value: "CT_ADWORDS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtAdwords;
/**
 *  AdWords Display certified.
 *
 *  Value: "CT_ADWORDS_DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtAdwordsDisplay;
/**
 *  AdWords Search certified.
 *
 *  Value: "CT_ADWORDS_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtAdwordsSearch;
/**
 *  Analytics certified.
 *
 *  Value: "CT_ANALYTICS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtAnalytics;
/**
 *  Digital sales certified.
 *
 *  Value: "CT_DIGITAL_SALES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtDigitalSales;
/**
 *  DoubleClick certified.
 *
 *  Value: "CT_DOUBLECLICK"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtDoubleclick;
/**
 *  Mobile certified.
 *
 *  Value: "CT_MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtMobile;
/**
 *  Mobile Sites certified.
 *
 *  Value: "CT_MOBILE_SITES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtMobileSites;
/**
 *  Shopping certified.
 *
 *  Value: "CT_SHOPPING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtShopping;
/**
 *  VideoAds certified.
 *
 *  Value: "CT_VIDEOADS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtVideoads;
/**
 *  YouTube certified.
 *
 *  Value: "CT_YOUTUBE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Certification_CertificationType_CtYoutube;

// ----------------------------------------------------------------------------
// GTLRPartners_CertificationExamStatus.type

/**
 *  Unchosen.
 *
 *  Value: "CERTIFICATION_EXAM_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CertificationExamTypeUnspecified;
/**
 *  AdWords advanced display exam.
 *
 *  Value: "CET_ADWORDS_ADVANCED_DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetAdwordsAdvancedDisplay;
/**
 *  AdWords advanced search exam.
 *
 *  Value: "CET_ADWORDS_ADVANCED_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetAdwordsAdvancedSearch;
/**
 *  Adwords Fundamentals exam.
 *
 *  Value: "CET_ADWORDS_FUNDAMENTALS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetAdwordsFundamentals;
/**
 *  Analytics exam.
 *
 *  Value: "CET_ANALYTICS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetAnalytics;
/**
 *  Digital Sales exam.
 *
 *  Value: "CET_DIGITAL_SALES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetDigitalSales;
/**
 *  DoubleClick exam.
 *
 *  Value: "CET_DOUBLECLICK"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetDoubleclick;
/**
 *  Mobile exam.
 *
 *  Value: "CET_MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetMobile;
/**
 *  Mobile Sites exam.
 *
 *  Value: "CET_MOBILE_SITES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetMobileSites;
/**
 *  Shopping exam.
 *
 *  Value: "CET_SHOPPING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetShopping;
/**
 *  VideoAds exam.
 *
 *  Value: "CET_VIDEO_ADS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationExamStatus_Type_CetVideoAds;

// ----------------------------------------------------------------------------
// GTLRPartners_CertificationStatus.type

/**
 *  Unchosen.
 *
 *  Value: "CERTIFICATION_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CertificationTypeUnspecified;
/**
 *  AdWords certified.
 *
 *  Value: "CT_ADWORDS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtAdwords;
/**
 *  AdWords Display certified.
 *
 *  Value: "CT_ADWORDS_DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtAdwordsDisplay;
/**
 *  AdWords Search certified.
 *
 *  Value: "CT_ADWORDS_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtAdwordsSearch;
/**
 *  Analytics certified.
 *
 *  Value: "CT_ANALYTICS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtAnalytics;
/**
 *  Digital sales certified.
 *
 *  Value: "CT_DIGITAL_SALES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtDigitalSales;
/**
 *  DoubleClick certified.
 *
 *  Value: "CT_DOUBLECLICK"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtDoubleclick;
/**
 *  Mobile certified.
 *
 *  Value: "CT_MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtMobile;
/**
 *  Mobile Sites certified.
 *
 *  Value: "CT_MOBILE_SITES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtMobileSites;
/**
 *  Shopping certified.
 *
 *  Value: "CT_SHOPPING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtShopping;
/**
 *  VideoAds certified.
 *
 *  Value: "CT_VIDEOADS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtVideoads;
/**
 *  YouTube certified.
 *
 *  Value: "CT_YOUTUBE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CertificationStatus_Type_CtYoutube;

// ----------------------------------------------------------------------------
// GTLRPartners_Company.badgeTier

/**
 *  Tier badge is not set.
 *
 *  Value: "BADGE_TIER_NONE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_BadgeTier_BadgeTierNone;
/**
 *  Agency has premier badge.
 *
 *  Value: "BADGE_TIER_PREMIER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_BadgeTier_BadgeTierPremier;
/**
 *  Agency has regular partner badge.
 *
 *  Value: "BADGE_TIER_REGULAR"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_BadgeTier_BadgeTierRegular;

// ----------------------------------------------------------------------------
// GTLRPartners_Company.companyTypes

/** Value: "ADVERTISING_TOOL_DEVELOPMENT" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_AdvertisingToolDevelopment;
/** Value: "CDIGITAL_AGENCY" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_CdigitalAgency;
/** Value: "COMPANY_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_CompanyTypeUnspecified;
/** Value: "CREATIVE_AGENCY" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_CreativeAgency;
/** Value: "FULL_SERVICE_AGENCY" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_FullServiceAgency;
/** Value: "MEDIA_AGENCY" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_MediaAgency;
/** Value: "PERFORMANCE_MARKETING" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_PerformanceMarketing;
/** Value: "PR" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_Pr;
/** Value: "RESELLER" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_Reseller;
/** Value: "SELF_MANAGED" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_SelfManaged;
/** Value: "SEM_SEO" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_CompanyTypes_SemSeo;

// ----------------------------------------------------------------------------
// GTLRPartners_Company.industries

/** Value: "I_AUTOMOTIVE" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IAutomotive;
/** Value: "I_BUSINESS_TO_BUSINESS" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IBusinessToBusiness;
/** Value: "I_CONSUMER_PACKAGED_GOODS" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IConsumerPackagedGoods;
/** Value: "I_EDUCATION" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IEducation;
/** Value: "I_FINANCE" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IFinance;
/** Value: "I_HEALTHCARE" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IHealthcare;
/** Value: "I_MEDIA_AND_ENTERTAINMENT" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IMediaAndEntertainment;
/** Value: "INDUSTRY_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IndustryUnspecified;
/** Value: "I_RETAIL" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_IRetail;
/** Value: "I_TECHNOLOGY" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_ITechnology;
/** Value: "I_TRAVEL" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Industries_ITravel;

// ----------------------------------------------------------------------------
// GTLRPartners_Company.profileStatus

/**
 *  Unchosen.
 *
 *  Value: "COMPANY_PROFILE_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_ProfileStatus_CompanyProfileStatusUnspecified;
/**
 *  Company profile does not show up publicly.
 *
 *  Value: "HIDDEN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_ProfileStatus_Hidden;
/**
 *  Company profile can only be viewed by the profile's URL
 *  and not by Google Partner Search.
 *
 *  Value: "PUBLISHED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_ProfileStatus_Published;
/**
 *  Company profile can be viewed by the profile's URL
 *  and by Google Partner Search.
 *
 *  Value: "SEARCHABLE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Company_ProfileStatus_Searchable;

// ----------------------------------------------------------------------------
// GTLRPartners_Company.services

/** Value: "S_ADVANCED_ADWORDS_SUPPORT" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SAdvancedAdwordsSupport;
/** Value: "S_ADVERTISING_ON_GOOGLE" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SAdvertisingOnGoogle;
/** Value: "S_AN_ENHANCED_WEBSITE" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SAnEnhancedWebsite;
/** Value: "S_AN_ONLINE_MARKETING_PLAN" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SAnOnlineMarketingPlan;
/** Value: "SERVICE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_ServiceUnspecified;
/** Value: "S_MOBILE_AND_VIDEO_ADS" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SMobileAndVideoAds;
/** Value: "S_MOBILE_WEBSITE_SERVICES" */
GTLR_EXTERN NSString * const kGTLRPartners_Company_Services_SMobileWebsiteServices;

// ----------------------------------------------------------------------------
// GTLRPartners_CompanyRelation.badgeTier

/**
 *  Tier badge is not set.
 *
 *  Value: "BADGE_TIER_NONE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierNone;
/**
 *  Agency has premier badge.
 *
 *  Value: "BADGE_TIER_PREMIER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierPremier;
/**
 *  Agency has regular partner badge.
 *
 *  Value: "BADGE_TIER_REGULAR"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierRegular;

// ----------------------------------------------------------------------------
// GTLRPartners_CompanyRelation.segment

/** Value: "COMPANY_SEGMENT_NAL" */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_Segment_CompanySegmentNal;
/** Value: "COMPANY_SEGMENT_PPSP" */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_Segment_CompanySegmentPpsp;
/** Value: "COMPANY_SEGMENT_PSP" */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_Segment_CompanySegmentPsp;
/** Value: "COMPANY_SEGMENT_UNKNOWN" */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_Segment_CompanySegmentUnknown;

// ----------------------------------------------------------------------------
// GTLRPartners_CompanyRelation.state

/**
 *  Default unspecified value.
 *
 *  Value: "USER_COMPANY_REATION_STATE_NONE_SPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_State_UserCompanyReationStateNoneSpecified;
/**
 *  Approved by company.
 *
 *  Value: "USER_COMPANY_RELATION_STATE_APPROVED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateApproved;
/**
 *  Pending approval from company.
 *  Email confirmation will not approve this one.
 *
 *  Value: "USER_COMPANY_RELATION_STATE_AWAIT_ADMIN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateAwaitAdmin;
/**
 *  User has filled in a request to be associated with an company.
 *  Now waiting email confirmation.
 *
 *  Value: "USER_COMPANY_RELATION_STATE_AWAIT_EMAIL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateAwaitEmail;

// ----------------------------------------------------------------------------
// GTLRPartners_CountryOfferInfo.offerType

/**
 *  Spend Match up to Y.
 *
 *  Value: "OFFER_TYPE_SPEND_MATCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeSpendMatch;
/**
 *  AdWords spend X get Y.
 *
 *  Value: "OFFER_TYPE_SPEND_X_GET_Y"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeSpendXGetY;
/**
 *  Unset.
 *
 *  Value: "OFFER_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeUnspecified;
/**
 *  Youtube video.
 *
 *  Value: "OFFER_TYPE_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeVideo;

// ----------------------------------------------------------------------------
// GTLRPartners_CreateLeadResponse.recaptchaStatus

/**
 *  Unchosen.
 *
 *  Value: "RECAPTCHA_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RecaptchaStatusUnspecified;
/**
 *  reCaptcha challenge failed.
 *
 *  Value: "RS_FAILED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsFailed;
/**
 *  No reCaptcha validation needed.
 *
 *  Value: "RS_NOT_NEEDED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsNotNeeded;
/**
 *  reCaptcha challenge passed.
 *
 *  Value: "RS_PASSED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsPassed;

// ----------------------------------------------------------------------------
// GTLRPartners_EventData.key

/**
 *  Action data.
 *
 *  Value: "ACTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Action;
/**
 *  Agency ID data.
 *
 *  Value: "AGENCY_ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_AgencyId;
/**
 *  Agency name data.
 *
 *  Value: "AGENCY_NAME"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_AgencyName;
/**
 *  Agency phone number data.
 *
 *  Value: "AGENCY_PHONE_NUMBER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_AgencyPhoneNumber;
/**
 *  Agency website data.
 *
 *  Value: "AGENCY_WEBSITE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_AgencyWebsite;
/**
 *  Budget data.
 *
 *  Value: "BUDGET"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Budget;
/**
 *  Center-point data.
 *
 *  Value: "CENTER_POINT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_CenterPoint;
/**
 *  Certification data.
 *
 *  Value: "CERTIFICATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Certification;
/**
 *  Comment data.
 *
 *  Value: "COMMENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Comment;
/**
 *  Country data.
 *
 *  Value: "COUNTRY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Country;
/**
 *  Currency data.
 *
 *  Value: "CURRENCY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Currency;
/**
 *  Currently viewed agency ID data.
 *
 *  Value: "CURRENTLY_VIEWED_AGENCY_ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_CurrentlyViewedAgencyId;
/**
 *  Details data.
 *
 *  Value: "DETAILS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Details;
/**
 *  Distance data.
 *
 *  Value: "DISTANCE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Distance;
/**
 *  Distance type data.
 *
 *  Value: "DISTANCE_TYPE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_DistanceType;
/**
 *  Element we wanted user to focus on.
 *
 *  Value: "ELEMENT_FOCUS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_ElementFocus;
/**
 *  Unchosen.
 *
 *  Value: "EVENT_DATA_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_EventDataTypeUnspecified;
/**
 *  Exam data.
 *
 *  Value: "EXAM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Exam;
/**
 *  Experiment ID data.
 *
 *  Value: "EXPERIMENT_ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_ExperimentId;
/**
 *  Google Partner Search motivation data.
 *
 *  Value: "GPS_MOTIVATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_GpsMotivation;
/**
 *  History token data.
 *
 *  Value: "HISTORY_TOKEN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_HistoryToken;
/**
 *  Identifier data.
 *
 *  Value: "ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Id;
/**
 *  Industry data.
 *
 *  Value: "INDUSTRY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Industry;
/**
 *  Insight tag data.
 *
 *  Value: "INSIGHT_TAG"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_InsightTag;
/**
 *  Language data.
 *
 *  Value: "LANGUAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Language;
/**
 *  Location data.
 *
 *  Value: "LOCATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Location;
/**
 *  Marketing opt-in data.
 *
 *  Value: "MARKETING_OPT_IN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_MarketingOptIn;
/**
 *  Progress when viewing an item \\[0-100\\].
 *
 *  Value: "PROGRESS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Progress;
/**
 *  Query data.
 *
 *  Value: "QUERY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Query;
/**
 *  Search start index data.
 *
 *  Value: "SEARCH_START_INDEX"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_SearchStartIndex;
/**
 *  Service data.
 *
 *  Value: "SERVICE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Service;
/**
 *  Show vow data.
 *
 *  Value: "SHOW_VOW"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_ShowVow;
/**
 *  Solution data.
 *
 *  Value: "SOLUTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Solution;
/**
 *  Traffic source ID data.
 *
 *  Value: "TRAFFIC_SOURCE_ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_TrafficSourceId;
/**
 *  Traffic sub ID data.
 *
 *  Value: "TRAFFIC_SUB_ID"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_TrafficSubId;
/**
 *  URL data.
 *
 *  Value: "URL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Url;
/**
 *  Viewport data.
 *
 *  Value: "VIEW_PORT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_ViewPort;
/**
 *  Website data.
 *
 *  Value: "WEBSITE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_EventData_Key_Website;

// ----------------------------------------------------------------------------
// GTLRPartners_ExamStatus.examType

/**
 *  Unchosen.
 *
 *  Value: "CERTIFICATION_EXAM_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CertificationExamTypeUnspecified;
/**
 *  AdWords advanced display exam.
 *
 *  Value: "CET_ADWORDS_ADVANCED_DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetAdwordsAdvancedDisplay;
/**
 *  AdWords advanced search exam.
 *
 *  Value: "CET_ADWORDS_ADVANCED_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetAdwordsAdvancedSearch;
/**
 *  Adwords Fundamentals exam.
 *
 *  Value: "CET_ADWORDS_FUNDAMENTALS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetAdwordsFundamentals;
/**
 *  Analytics exam.
 *
 *  Value: "CET_ANALYTICS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetAnalytics;
/**
 *  Digital Sales exam.
 *
 *  Value: "CET_DIGITAL_SALES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetDigitalSales;
/**
 *  DoubleClick exam.
 *
 *  Value: "CET_DOUBLECLICK"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetDoubleclick;
/**
 *  Mobile exam.
 *
 *  Value: "CET_MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetMobile;
/**
 *  Mobile Sites exam.
 *
 *  Value: "CET_MOBILE_SITES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetMobileSites;
/**
 *  Shopping exam.
 *
 *  Value: "CET_SHOPPING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetShopping;
/**
 *  VideoAds exam.
 *
 *  Value: "CET_VIDEO_ADS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ExamStatus_ExamType_CetVideoAds;

// ----------------------------------------------------------------------------
// GTLRPartners_HistoricalOffer.offerType

/**
 *  Spend Match up to Y.
 *
 *  Value: "OFFER_TYPE_SPEND_MATCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_OfferType_OfferTypeSpendMatch;
/**
 *  AdWords spend X get Y.
 *
 *  Value: "OFFER_TYPE_SPEND_X_GET_Y"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_OfferType_OfferTypeSpendXGetY;
/**
 *  Unset.
 *
 *  Value: "OFFER_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_OfferType_OfferTypeUnspecified;
/**
 *  Youtube video.
 *
 *  Value: "OFFER_TYPE_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_OfferType_OfferTypeVideo;

// ----------------------------------------------------------------------------
// GTLRPartners_HistoricalOffer.status

/**
 *  Offer awarded.
 *
 *  Value: "OFFER_STATUS_AWARDED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_Status_OfferStatusAwarded;
/**
 *  Offer distributed.
 *
 *  Value: "OFFER_STATUS_DISTRIBUTED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_Status_OfferStatusDistributed;
/**
 *  Offer expired.
 *
 *  Value: "OFFER_STATUS_EXPIRED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_Status_OfferStatusExpired;
/**
 *  Offer redeemed.
 *
 *  Value: "OFFER_STATUS_REDEEMED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_Status_OfferStatusRedeemed;
/**
 *  Unset.
 *
 *  Value: "OFFER_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_HistoricalOffer_Status_OfferStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRPartners_Lead.gpsMotivations

/** Value: "GPSM_HELP_WITH_ADVERTISING" */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_GpsMotivations_GpsmHelpWithAdvertising;
/** Value: "GPSM_HELP_WITH_WEBSITE" */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_GpsMotivations_GpsmHelpWithWebsite;
/** Value: "GPSM_NO_WEBSITE" */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_GpsMotivations_GpsmNoWebsite;
/** Value: "GPS_MOTIVATION_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_GpsMotivations_GpsMotivationUnspecified;

// ----------------------------------------------------------------------------
// GTLRPartners_Lead.state

/**
 *  Lead has become a client.
 *
 *  Value: "CLIENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_State_Client;
/**
 *  Lead has been contacted.
 *
 *  Value: "CONTACTED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_State_Contacted;
/**
 *  Lead not yet contacted.
 *
 *  Value: "LEAD"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_State_Lead;
/**
 *  Unchosen.
 *
 *  Value: "LEAD_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_State_LeadStateUnspecified;
/**
 *  Lead in a state not covered by other options.
 *
 *  Value: "OTHER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_State_Other;

// ----------------------------------------------------------------------------
// GTLRPartners_Lead.type

/**
 *  Unchosen.
 *
 *  Value: "LEAD_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_Type_LeadTypeUnspecified;
/**
 *  Google Partner Search.
 *
 *  Value: "LT_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Lead_Type_LtGps;

// ----------------------------------------------------------------------------
// GTLRPartners_ListOffersResponse.noOfferReason

/**
 *  Ineligible for offers.
 *
 *  Value: "NO_OFFER_REASON_INELIGIBLE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonIneligible;
/**
 *  Offer limit has been reached.
 *
 *  Value: "NO_OFFER_REASON_LIMIT_REACHED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonLimitReached;
/**
 *  Not an MCC.
 *
 *  Value: "NO_OFFER_REASON_NO_MCC"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonNoMcc;
/**
 *  Unset.
 *
 *  Value: "NO_OFFER_REASON_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRPartners_ListUserStatesResponse.userStates

/** Value: "USER_STATE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRPartners_ListUserStatesResponse_UserStates_UserStateUnspecified;
/** Value: "US_REQUIRES_RECAPTCHA_FOR_GPS_CONTACT" */
GTLR_EXTERN NSString * const kGTLRPartners_ListUserStatesResponse_UserStates_UsRequiresRecaptchaForGpsContact;

// ----------------------------------------------------------------------------
// GTLRPartners_LogMessageRequest.level

/**
 *  Unchosen.
 *
 *  Value: "MESSAGE_LEVEL_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogMessageRequest_Level_MessageLevelUnspecified;
/**
 *  Message level for tracing information.
 *
 *  Value: "ML_FINE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogMessageRequest_Level_MlFine;
/**
 *  Message level for informational messages.
 *
 *  Value: "ML_INFO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogMessageRequest_Level_MlInfo;
/**
 *  Message level for serious failures.
 *
 *  Value: "ML_SEVERE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogMessageRequest_Level_MlSevere;
/**
 *  Message level for potential problems.
 *
 *  Value: "ML_WARNING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogMessageRequest_Level_MlWarning;

// ----------------------------------------------------------------------------
// GTLRPartners_LogUserEventRequest.eventAction

/**
 *  Agency clicked `create MCC connect with company not found`.
 *
 *  Value: "AGECNY_CLICKED_CREATE_MCC_CONNECT_WITH_COMPANY_NOT_FOUND"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedCreateMccConnectWithCompanyNotFound;
/**
 *  Agency clicked `give edit access connect with company not found`.
 *
 *  Value: "AGECNY_CLICKED_GIVE_EDIT_ACCESS_CONNECT_WITH_COMPANY_NOT_FOUND"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedGiveEditAccessConnectWithCompanyNotFound;
/**
 *  Agency clicked `log out connect with company not found`.
 *
 *  Value: "AGECNY_CLICKED_LOG_OUT_CONNECT_WITH_COMPANY_NOT_FOUND"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedLogOutConnectWithCompanyNotFound;
/**
 *  Agency found company to connect with.
 *
 *  Value: "AGECNY_FOUND_COMPANY_TO_CONNECT_WITH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgecnyFoundCompanyToConnectWith;
/**
 *  Agency added address in profile portal.
 *
 *  Value: "AGENCY_ADDED_ADDRESS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedAddressInMyProfilePortal;
/**
 *  Agency added channels in profile portal.
 *
 *  Value: "AGENCY_ADDED_CHANNELS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedChannelsInMyProfilePortal;
/**
 *  Agency added industries in profile portal.
 *
 *  Value: "AGENCY_ADDED_INDUSTRIES_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedIndustriesInMyProfilePortal;
/**
 *  Agency added job function in profile portal.
 *
 *  Value: "AGENCY_ADDED_JOB_FUNCTION_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedJobFunctionInMyProfilePortal;
/**
 *  Agency added markets in profile portal.
 *
 *  Value: "AGENCY_ADDED_MARKETS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedMarketsInMyProfilePortal;
/**
 *  Agency added new company location.
 *
 *  Value: "AGENCY_ADDED_NEW_COMPANY_LOCATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedNewCompanyLocation;
/**
 *  Agency added phone number in profile portal.
 *
 *  Value: "AGENCY_ADDED_PHONE_NUMBER_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedPhoneNumberInMyProfilePortal;
/**
 *  Agency changed `add industries` drop-down.
 *
 *  Value: "AGENCY_CHANGED_ADD_INDUSTRIES_DROP_DOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedAddIndustriesDropDown;
/**
 *  Agency changed `add markets` drop-down.
 *
 *  Value: "AGENCY_CHANGED_ADD_MARKETS_DROP_DOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedAddMarketsDropDown;
/**
 *  Agency changed primary account association.
 *
 *  Value: "AGENCY_CHANGED_PRIMARY_ACCOUNT_ASSOCIATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedPrimaryAccountAssociation;
/**
 *  Agency changed primary country association.
 *
 *  Value: "AGENCY_CHANGED_PRIMARY_COUNTRY_ASSOCIATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedPrimaryCountryAssociation;
/**
 *  Agency changed roles.
 *
 *  Value: "AGENCY_CHANGED_ROLES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedRoles;
/**
 *  Agency changed Terms Of Service country.
 *
 *  Value: "AGENCY_CHANGED_TOS_COUNTRY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedTosCountry;
/**
 *  Agency checked `recieve mail promotions` in profile portal.
 *
 *  Value: "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_MYPROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyCheckedRecieveMailPromotionsMyprofile;
/**
 *  Agency checked `recieve mail promotions` in sign-up.
 *
 *  Value: "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_SIGNUP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyCheckedRecieveMailPromotionsSignup;
/**
 *  Agency clicked `accept Terms Of Service` button.
 *
 *  Value: "AGENCY_CLICKED_ACCEPT_TOS_BUTTON"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedAcceptTosButton;
/**
 *  Agency clicked `affiliate` button in profile portal.
 *
 *  Value: "AGENCY_CLICKED_AFFILIATE_BUTTON_IN_MY_PROFILE_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedAffiliateButtonInMyProfileInPortal;
/**
 *  Agency clicked back button on `connect with company`.
 *
 *  Value: "AGENCY_CLICKED_BACK_BUTTON_ON_CONNECT_WITH_COMPANY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedBackButtonOnConnectWithCompany;
/**
 *  Agency clicked `cancel Terms Of Service` button.
 *
 *  Value: "AGENCY_CLICKED_CANCEL_ACCEPT_TOS_BUTTON"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCancelAcceptTosButton;
/**
 *  Agency clicked `certifications` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_CERTIFICATIONS_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCertificationsLeftNavInPortal;
/**
 *  Agency clicked `certifications product` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_CERTIFICATIONS_PRODUCT_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCertificationsProductLeftNavInPortal;
/**
 *  Agency clicked community `join now link` in portal notifications.
 *
 *  Value: "AGENCY_CLICKED_COMMUNITY_JOIN_NOW_LINK_IN_PORTAL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCommunityJoinNowLinkInPortalNotifications;
/**
 *  Agency clicked `community` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_COMMUNITY_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCommunityLeftNavInPortal;
/**
 *  Agency clicked `connect to company` link in portal notifications.
 *
 *  Value: "AGENCY_CLICKED_CONNECT_TO_COMPANY_LINK_IN_PORTAL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedConnectToCompanyLinkInPortalNotifications;
/**
 *  Agency clicked continue to overview on `connect with company`.
 *
 *  Value: "AGENCY_CLICKED_CONTINUE_TO_OVERVIEW_ON_CONNECT_WITH_COMPANY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedContinueToOverviewOnConnectWithCompany;
/**
 *  Agency clicked create MCC in profile portal.
 *
 *  Value: "AGENCY_CLICKED_CREATE_MCC_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCreateMccInMyProfilePortal;
/**
 *  Agency clicked `exam details` on certifications AdWords page.
 *
 *  Value: "AGENCY_CLICKED_EXAM_DETAILS_ON_CERT_ADWORDS_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedExamDetailsOnCertAdwordsPage;
/**
 *  Agency cliecked `get certified` link in portal notifications.
 *
 *  Value: "AGENCY_CLICKED_GET_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGetCertifiedLinkInPortalNotifications;
/**
 *  Agency clicked `get VideoAds certified` link in portal notifications.
 *
 *  Value: "AGENCY_CLICKED_GET_VIDEO_ADS_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGetVideoAdsCertifiedLinkInPortalNotifications;
/**
 *  Agency clicked `give edit access` in profile portal.
 *
 *  Value: "AGENCY_CLICKED_GIVE_EDIT_ACCESS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGiveEditAccessInMyProfilePortal;
/**
 *  Agency clicked `insight content` in portal.
 *
 *  Value: "AGENCY_CLICKED_INSIGHT_CONTENT_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightContentInPortal;
/**
 *  Agency clicked on the download link for downloading content.
 *
 *  Value: "AGENCY_CLICKED_INSIGHTS_DOWNLOAD_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsDownloadContent;
/**
 *  Agency clicked `insights` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_INSIGHTS_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsLeftNavInPortal;
/**
 *  Agency clicked `insights upload content`.
 *
 *  Value: "AGENCY_CLICKED_INSIGHTS_UPLOAD_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsUploadContent;
/**
 *  Agency clicked `insights viewed deprecated`.
 *
 *  Value: "AGENCY_CLICKED_INSIGHTS_VIEWED_DEPRECATED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsViewedDeprecated;
/**
 *  Agency clicked `insights view now pitch decks` in portal.
 *
 *  Value: "AGENCY_CLICKED_INSIGHTS_VIEW_NOW_PITCH_DECKS_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsViewNowPitchDecksInPortal;
/**
 *  Agency clicked `join community` button in community portal.
 *
 *  Value: "AGENCY_CLICKED_JOIN_COMMUNITY_BUTTON_COMMUNITY_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinCommunityButtonCommunityPortal;
/**
 *  Agency clicked `Join now` bottom button.
 *
 *  Value: "AGENCY_CLICKED_JOIN_NOW_BUTTON_BOTTOM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinNowButtonBottom;
/**
 *  Agency clicked `Join now` top button.
 *
 *  Value: "AGENCY_CLICKED_JOIN_NOW_BUTTON_TOP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinNowButtonTop;
/**
 *  Agency clicked left nav `stories`.
 *
 *  Value: "AGENCY_CLICKED_LEFT_NAV_STORIES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLeftNavStories;
/**
 *  Agency clicked `link to MCC` link in portal notifications.
 *
 *  Value: "AGENCY_CLICKED_LINK_TO_MCC_LINK_IN_PORTAL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLinkToMccLinkInPortalNotifications;
/**
 *  Agency clicked `log out` in profile portal.
 *
 *  Value: "AGENCY_CLICKED_LOG_OUT_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLogOutInMyProfilePortal;
/**
 *  Agency clicked profile portal left nav.
 *
 *  Value: "AGENCY_CLICKED_MY_PROFILE_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedMyProfileLeftNavInPortal;
/**
 *  Agency clicked `offers` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_OFFERS_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedOffersLeftNavInPortal;
/**
 *  Agency clicked `partner status` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_PARTNER_STATUS_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedPartnerStatusLeftNavInPortal;
/**
 *  Agency clicked `partner status product` left nav in portal.
 *
 *  Value: "AGENCY_CLICKED_PARTNER_STATUS_PRODUCT_LEFT_NAV_IN_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedPartnerStatusProductLeftNavInPortal;
/**
 *  Agency clicked `save and continue` at bottom of complete profile.
 *
 *  Value: "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_COMPLETE_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSaveAndContinueAtBotOfCompleteProfile;
/**
 *  Agency clicked `save and continue` at bottom of incomplete profile.
 *
 *  Value: "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_INCOMPLETE_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSaveAndContinueAtBotOfIncompleteProfile;
/**
 *  Agency clicked `see exams` certifications main page.
 *
 *  Value: "AGENCY_CLICKED_SEE_EXAMS_CERTIFICATION_MAIN_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSeeExamsCertificationMainPage;
/**
 *  Agency clicked `send` button on offers page.
 *
 *  Value: "AGENCY_CLICKED_SEND_BUTTON_ON_OFFERS_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSendButtonOnOffersPage;
/**
 *  Agency clicked `Sign in` top button.
 *
 *  Value: "AGENCY_CLICKED_SIGN_IN_BUTTON_TOP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSignInButtonTop;
/**
 *  Agency clicked `skip for now on connect with company page`.
 *
 *  Value: "AGENCY_CLICKED_SKIP_FOR_NOW_ON_CONNECT_WITH_COMPANY_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSkipForNowOnConnectWithCompanyPage;
/**
 *  Agency clicked `take exam` on certifications exam page.
 *
 *  Value: "AGENCY_CLICKED_TAKE_EXAM_ON_CERT_EXAM_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedTakeExamOnCertExamPage;
/**
 *  Agency clicked `unaffiliate` in profile portal.
 *
 *  Value: "AGENCY_CLICKED_UNAFFILIATE_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedUnaffiliateInMyProfilePortal;
/**
 *  Agency closed connection to company.
 *
 *  Value: "AGENCY_CLOSED_CONNECTED_TO_COMPANY_X_BUTTON_WRONG_COMPANY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyClosedConnectedToCompanyXButtonWrongCompany;
/**
 *  Agency completed field connect with company.
 *
 *  Value: "AGENCY_COMPLETED_FIELD_CONNECT_WITH_COMPANY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyCompletedFieldConnectWithCompany;
/**
 *  Agency did not have an MCC associated on profile portal.
 *
 *  Value: "AGENCY_DIDNT_HAVE_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyDidntHaveAnMccAssociatedOnCompleteProfile;
/**
 *  Agency dismissed affiliation widget.
 *
 *  Value: "AGENCY_DISMISSED_AFFILIATION_WIDGET"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyDismissedAffiliationWidget;
/**
 *  Agency failed the company verification.
 *
 *  Value: "AGENCY_FAILED_COMPANY_VERIFICATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyFailedCompanyVerification;
/**
 *  Agency filled out company affiliation in profile portal.
 *
 *  Value: "AGENCY_FILLED_OUT_COMP_AFFILIATION_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyFilledOutCompAffiliationInMyProfilePortal;
/**
 *  Agency had an MCC associated on profile portal.
 *
 *  Value: "AGENCY_HAD_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyHadAnMccAssociatedOnCompleteProfile;
/**
 *  Agency ignored suggested agencies and begin searching.
 *
 *  Value: "AGENCY_IGNORED_SUGGESTED_AGENCIES_AND_SEARCHED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyIgnoredSuggestedAgenciesAndSearched;
/**
 *  Agency linked their individual MCC.
 *
 *  Value: "AGENCY_LINKED_INDIVIDUAL_MCC"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyLinkedIndividualMcc;
/**
 *  Agency looked at `add channel` drop-down.
 *
 *  Value: "AGENCY_LOOKED_AT_ADD_CHANNEL_DROP_DOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyLookedAtAddChannelDropDown;
/**
 *  Agency looked at job function drop-down.
 *
 *  Value: "AGENCY_LOOKED_AT_JOB_FUNCTION_DROP_DOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyLookedAtJobFunctionDropDown;
/**
 *  Agency opened dialog with no users.
 *
 *  Value: "AGENCY_OPENED_DIALOG_WITH_NO_USERS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyOpenedDialogWithNoUsers;
/**
 *  Agency opened `last admin` dialog.
 *
 *  Value: "AGENCY_OPENED_LAST_ADMIN_DIALOG"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyOpenedLastAdminDialog;
/**
 *  Agency picked a searched agency.
 *
 *  Value: "AGENCY_PICKED_SEARCHED_AGENCY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyPickedSearchedAgency;
/**
 *  Agency picked a suggested agency.
 *
 *  Value: "AGENCY_PICKED_SUGGESTED_AGENCY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyPickedSuggestedAgency;
/**
 *  Agency user is maklingg progress viewing a content item.
 *
 *  Value: "AGENCY_PROGRESS_INSIGHTS_VIEW_CONTENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyProgressInsightsViewContent;
/**
 *  Agency promoted user to admin.
 *
 *  Value: "AGENCY_PROMOTED_USER_TO_ADMIN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyPromotedUserToAdmin;
/**
 *  Agency searched for agencies.
 *
 *  Value: "AGENCY_SEARCHED_FOR_AGENCIES"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySearchedForAgencies;
/**
 *  Agency selected `account manage` as job function.
 *
 *  Value: "AGENCY_SELECTED_ACCOUNT_MANAGER_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAccountManagerAsJobFunction;
/**
 *  Agency selected `account planner` as job function.
 *
 *  Value: "AGENCY_SELECTED_ACCOUNT_PLANNER_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAccountPlannerAsJobFunction;
/**
 *  Agency selected `Analytics` as job function.
 *
 *  Value: "AGENCY_SELECTED_ANALYTICS_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAnalyticsAsJobFunction;
/**
 *  Agency selected `creative` as job function.
 *
 *  Value: "AGENCY_SELECTED_CREATIVE_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedCreativeAsJobFunction;
/**
 *  Agency selected `cross channel` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_CROSS_CHANNEL_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedCrossChannelFromAddChannel;
/**
 *  Agency selected `display` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_DISPLAY_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedDisplayFromAddChannel;
/**
 *  Agency selected `media buyer` as job function.
 *
 *  Value: "AGENCY_SELECTED_MEDIA_BUYER_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMediaBuyerAsJobFunction;
/**
 *  Agency selected `media planner` as job function.
 *
 *  Value: "AGENCY_SELECTED_MEDIA_PLANNER_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMediaPlannerAsJobFunction;
/**
 *  Agency selected `mobile` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_MOBILE_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMobileFromAddChannel;
/**
 *  Agency opted in for migrating their exams to Academy for Ads.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_AFA_MIGRATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInAfaMigration;
/**
 *  Agency selected `opt-in beta tests and market research`.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInBetaTestsAndMktResearch;
/**
 *  Agency selected `opt-in beta tests` in profile portal.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_BETA_TESTS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInBetaTestsInMyProfilePortal;
/**
 *  Agency selected `opt-in news` in profile portal.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_NEWS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInNewsInMyProfilePortal;
/**
 *  Agency selected `opt-in news invitations and promotions`.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInNewsInvitationsAndPromos;
/**
 *  Agency selected `opt-in performance suggestions`.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInPerformanceSuggestions;
/**
 *  Agency selected `opt-in performance SUG` in profile portal.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUG_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInPerformanceSugInMyProfilePortal;
/**
 *  Agency selected `opt-in select all email notifications`.
 *
 *  Value: "AGENCY_SELECTED_OPT_IN_SELECT_ALL_EMAIL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInSelectAllEmailNotifications;
/**
 *  Agency opted out for migrating their exams to Academy for Ads.
 *
 *  Value: "AGENCY_SELECTED_OPT_OUT_AFA_MIGRATION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptOutAfaMigration;
/**
 *  Agency selected `opt-out unselect all email notifications`.
 *
 *  Value: "AGENCY_SELECTED_OPT_OUT_UNSELECT_ALL_EMAIL_NOTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptOutUnselectAllEmailNotifications;
/**
 *  Agency selected `other` as job function.
 *
 *  Value: "AGENCY_SELECTED_OTHER_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOtherAsJobFunction;
/**
 *  Agency selected `production` as job function.
 *
 *  Value: "AGENCY_SELECTED_PRODUCTION_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedProductionAsJobFunction;
/**
 *  Agency selected `sales rep` as job function.
 *
 *  Value: "AGENCY_SELECTED_SALES_REP_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSalesRepAsJobFunction;
/**
 *  Agency selected `search` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_SEARCH_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSearchFromAddChannel;
/**
 *  Agency selected `search specialist` as job function.
 *
 *  Value: "AGENCY_SELECTED_SEARCH_SPECIALIST_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSearchSpecialistAsJobFunction;
/**
 *  Agency selected `select all opt-ins` in profile portal.
 *
 *  Value: "AGENCY_SELECTED_SELECT_ALL_OPT_INS_IN_MY_PROFILE_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSelectAllOptInsInMyProfilePortal;
/**
 *  Agency selected `SEO` as job function.
 *
 *  Value: "AGENCY_SELECTED_SEO_AS_JOB_FUNCTION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSeoAsJobFunction;
/**
 *  Agency selected `social` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_SOCIAL_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSocialFromAddChannel;
/**
 *  Agency selected `tools` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_TOOLS_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedToolsFromAddChannel;
/**
 *  Agency selected `YouTube` from add channel drop-down.
 *
 *  Value: "AGENCY_SELECTED_YOUTUBE_FROM_ADD_CHANNEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedYoutubeFromAddChannel;
/**
 *  Agency successfully connected with company in profile portal.
 *
 *  Value: "AGENCY_SUCCESSFULLY_CONNECTED_WITH_COMPANY_IN_MY_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySuccessfullyConnectedWithCompanyInMyProfile;
/**
 *  Agency successfully created company.
 *
 *  Value: "AGENCY_SUCCESSFULLY_CREATED_COMPANY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySuccessfullyCreatedCompany;
/**
 *  Agency was suggested to user for affiliation.
 *
 *  Value: "AGENCY_SUGGESTED_TO_USER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencySuggestedToUser;
/**
 *  Agency unaffiliated.
 *
 *  Value: "AGENCY_UNAFFILIATED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnaffiliated;
/**
 *  Agency unselected `opt-in beta tests and market research`.
 *
 *  Value: "AGENCY_UNSELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInBetaTestsAndMktResearch;
/**
 *  Agency unselected `opt-in news invitations and promotions`.
 *
 *  Value: "AGENCY_UNSELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInNewsInvitationsAndPromos;
/**
 *  Agency unselected `opt-in performance suggestions`.
 *
 *  Value: "AGENCY_UNSELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInPerformanceSuggestions;
/**
 *  User cancelled signing up their company.
 *
 *  Value: "CANCELLED_COMPANY_SIGN_UP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_CancelledCompanySignUp;
/**
 *  User cancelled signing up.
 *
 *  Value: "CANCELLED_INDIVIDUAL_SIGN_UP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_CancelledIndividualSignUp;
/**
 *  Click occured.
 *
 *  Value: "CLICKED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_Clicked;
/**
 *  Clicked `help` at bottom.
 *
 *  Value: "CLICKED_HELP_AT_BOTTOM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_ClickedHelpAtBottom;
/**
 *  Clicked `help` at top.
 *
 *  Value: "CLICKED_HELP_AT_TOP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_ClickedHelpAtTop;
/**
 *  Client error occurred.
 *
 *  Value: "CLIENT_ERROR"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_ClientError;
/**
 *  Unchosen.
 *
 *  Value: "EVENT_ACTION_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_EventActionUnspecified;
/**
 *  Company viewed by advertiser.
 *
 *  Value: "PARTNER_VIEWED_BY_SMB"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_PartnerViewedBySmb;
/**
 *  Advertiser canceled partner contact form.
 *
 *  Value: "SMB_CANCELED_PARTNER_CONTACT_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactForm;
/**
 *  Advertiser canceled partner contact form on Google Partner Search.
 *
 *  Value: "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactFormOnGps;
/**
 *  Advertiser canceled partner contact form on profile page.
 *
 *  Value: "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactFormOnProfilePage;
/**
 *  Advertiser changed a top search parameter.
 *
 *  Value: "SMB_CHANGED_A_SEARCH_PARAMETER_TOP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbChangedASearchParameterTop;
/**
 *  Advertiser clicked AdWords certificate help icon.
 *
 *  Value: "SMB_CLICKED_ADWORDS_CERTIFICATE_HELP_ICON"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedAdwordsCertificateHelpIcon;
/**
 *  Advertiser clicked `company name` link to profile.
 *
 *  Value: "SMB_CLICKED_COMPANY_NAME_LINK_TO_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedCompanyNameLinkToProfile;
/**
 *  Advertiser started partner contact form.
 *
 *  Value: "SMB_CLICKED_CONTACT_A_PARTNER"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartner;
/**
 *  Advertiser started partner contact form on Google Partner Search.
 *
 *  Value: "SMB_CLICKED_CONTACT_A_PARTNER_ON_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartnerOnGps;
/**
 *  Advertiser started partner contact form on profile page.
 *
 *  Value: "SMB_CLICKED_CONTACT_A_PARTNER_ON_PROFILE_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartnerOnProfilePage;
/**
 *  Advertiser clicked `Find a partner` bottom button.
 *
 *  Value: "SMB_CLICKED_FIND_A_PARTNER_BUTTON_BOTTOM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedFindAPartnerButtonBottom;
/**
 *  Advertiser clicked `Find a partner` top button.
 *
 *  Value: "SMB_CLICKED_FIND_A_PARTNER_BUTTON_TOP"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedFindAPartnerButtonTop;
/**
 *  Advertiser clicked partner website.
 *
 *  Value: "SMB_CLICKED_PARTNER_WEBSITE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedPartnerWebsite;
/**
 *  Advertiser clicked `Show more partners` bottom button.
 *
 *  Value: "SMB_CLICKED_SHOW_MORE_PARTNERS_BUTTON_BOTTOM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedShowMorePartnersButtonBottom;
/**
 *  Advertiser clicked VideoAds certificate help icon.
 *
 *  Value: "SMB_CLICKED_VIDEO_ADS_CERTIFICATE_HELP_ICON"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedVideoAdsCertificateHelpIcon;
/**
 *  Advertiser completed partner contact form.
 *
 *  Value: "SMB_COMPLETED_PARTNER_CONTACT_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactForm;
/**
 *  Advertiser completed partner contact form on Google Partner Search.
 *
 *  Value: "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactFormOnGps;
/**
 *  Advertiser completed contact form on profile page.
 *
 *  Value: "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactFormOnProfilePage;
/**
 *  Advertiser entered email in contact form.
 *
 *  Value: "SMB_ENTERED_EMAIL_IN_CONTACT_PARTNER_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredEmailInContactPartnerForm;
/**
 *  Advertiser entered name in contact form.
 *
 *  Value: "SMB_ENTERED_NAME_IN_CONTACT_PARTNER_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredNameInContactPartnerForm;
/**
 *  Advertiser entered phone in contact form.
 *
 *  Value: "SMB_ENTERED_PHONE_IN_CONTACT_PARTNER_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredPhoneInContactPartnerForm;
/**
 *  Advertiser entered website in contact form.
 *
 *  Value: "SMB_ENTERED_WEBSITE_IN_CONTACT_PARTNER_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredWebsiteInContactPartnerForm;
/**
 *  Advertiser failed <a href="https://www.google.com/recaptcha/">reCaptcha</a>
 *  in contact form.
 *
 *  Value: "SMB_FAILED_RECAPTCHA_IN_CONTACT_PARTNER_FORM"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbFailedRecaptchaInContactPartnerForm;
/**
 *  Advertiser saw no partners available with search criteria.
 *
 *  Value: "SMB_NO_PARTNERS_AVAILABLE_WITH_SEARCH_CRITERIA"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbNoPartnersAvailableWithSearchCriteria;
/**
 *  Advertiser performed search on Google Partner Search.
 *
 *  Value: "SMB_PERFORMED_SEARCH_ON_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbPerformedSearchOnGps;
/**
 *  Advertiser viewed AdWords certificate.
 *
 *  Value: "SMB_VIEWED_ADWORDS_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsCertificate;
/**
 *  Advertiser viewed AdWords Display certificate.
 *
 *  Value: "SMB_VIEWED_ADWORDS_DISPLAY_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsDisplayCertificate;
/**
 *  Advertiser viewed AdWords Search certificate.
 *
 *  Value: "SMB_VIEWED_ADWORDS_SEARCH_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsSearchCertificate;
/**
 *  Advertiser viewed Analytics certificate.
 *
 *  Value: "SMB_VIEWED_ANALYTICS_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAnalyticsCertificate;
/**
 *  Advertiser viewed a partner on Google Partner Search.
 *
 *  Value: "SMB_VIEWED_A_PARTNER_ON_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAPartnerOnGps;
/**
 *  Advertiser viewed a partner profile.
 *
 *  Value: "SMB_VIEWED_A_PARTNER_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAPartnerProfile;
/**
 *  Advertiser viewed Digital Sales certificate.
 *
 *  Value: "SMB_VIEWED_DIGITAL_SALES_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedDigitalSalesCertificate;
/**
 *  Advertiser viewed DoubleClick certificate.
 *
 *  Value: "SMB_VIEWED_DOUBLECLICK_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedDoubleclickCertificate;
/**
 *  Advertiser clicked Mobile certificate help icon.
 *
 *  Value: "SMB_VIEWED_MOBILE_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedMobileCertificate;
/**
 *  Advertiser viewed Mobile Sites certificate.
 *
 *  Value: "SMB_VIEWED_MOBILE_SITES_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedMobileSitesCertificate;
/**
 *  Advertiser clicked Shopping certificate help icon.
 *
 *  Value: "SMB_VIEWED_SHOPPING_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedShoppingCertificate;
/**
 *  Advertiser viewed VideoAds certificate.
 *
 *  Value: "SMB_VIEWED_VIDEO_ADS_CERTIFICATE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedVideoAdsCertificate;
/**
 *  User visited the agency portal portion of Google Partners.
 *
 *  Value: "VISITED_AGENCY_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_VisitedAgencyPortal;
/**
 *  User visited the Google Partner Search portion of Google Partners.
 *
 *  Value: "VISITED_GPS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_VisitedGps;
/**
 *  User visited the landing portion of Google Partners.
 *
 *  Value: "VISITED_LANDING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventAction_VisitedLanding;

// ----------------------------------------------------------------------------
// GTLRPartners_LogUserEventRequest.eventCategory

/**
 *  Unchosen.
 *
 *  Value: "EVENT_CATEGORY_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_EventCategoryUnspecified;
/**
 *  External links category.
 *
 *  Value: "EXTERNAL_LINKS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_ExternalLinks;
/**
 *  Google Partner client category.
 *
 *  Value: "GOOGLE_PARTNER_CLIENT"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerClient;
/**
 *  Google Partner landing category.
 *
 *  Value: "GOOGLE_PARTNER_LANDING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerLanding;
/**
 *  Google Partner panel category.
 *
 *  Value: "GOOGLE_PARTNER_PANEL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPanel;
/**
 *  Google Partner portal category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortal;
/**
 *  Google Partner portal certifications category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_CERTIFICATIONS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCertifications;
/**
 *  Google Partner portal clients category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_CLIENTS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalClients;
/**
 *  Google Partner portal community category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_COMMUNITY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCommunity;
/**
 *  Google Partner portal company profile category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_COMPANY_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCompanyProfile;
/**
 *  Google Partner portal insights category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_INSIGHTS"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalInsights;
/**
 *  Google Partner portal last admin dialog category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_LAST_ADMIN_DIALOG"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalLastAdminDialog;
/**
 *  Google Partner portal my-profile category.
 *
 *  Value: "GOOGLE_PARTNER_PORTAL_MY_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalMyProfile;
/**
 *  Google Partner portal public user profile category.
 *
 *  Value: "GOOGLE_PARTNER_PUBLIC_USER_PROFILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPublicUserProfile;
/**
 *  Google Partner Search category.
 *
 *  Value: "GOOGLE_PARTNER_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerSearch;
/**
 *  Google Partner sign-up flow category.
 *
 *  Value: "GOOGLE_PARTNER_SIGNUP_FLOW"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerSignupFlow;

// ----------------------------------------------------------------------------
// GTLRPartners_LogUserEventRequest.eventScope

/**
 *  Unchosen.
 *
 *  Value: "EVENT_SCOPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventScope_EventScopeUnspecified;
/**
 *  Based on page visit.
 *
 *  Value: "PAGE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventScope_Page;
/**
 *  Based on session.
 *
 *  Value: "SESSION"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventScope_Session;
/**
 *  Based on visitor.
 *
 *  Value: "VISITOR"
 */
GTLR_EXTERN NSString * const kGTLRPartners_LogUserEventRequest_EventScope_Visitor;

// ----------------------------------------------------------------------------
// GTLRPartners_OfferCustomer.offerType

/**
 *  Spend Match up to Y.
 *
 *  Value: "OFFER_TYPE_SPEND_MATCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_OfferCustomer_OfferType_OfferTypeSpendMatch;
/**
 *  AdWords spend X get Y.
 *
 *  Value: "OFFER_TYPE_SPEND_X_GET_Y"
 */
GTLR_EXTERN NSString * const kGTLRPartners_OfferCustomer_OfferType_OfferTypeSpendXGetY;
/**
 *  Unset.
 *
 *  Value: "OFFER_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_OfferCustomer_OfferType_OfferTypeUnspecified;
/**
 *  Youtube video.
 *
 *  Value: "OFFER_TYPE_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_OfferCustomer_OfferType_OfferTypeVideo;

// ----------------------------------------------------------------------------
// GTLRPartners_Rank.type

/**
 *  Unchosen.
 *
 *  Value: "RANK_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Rank_Type_RankTypeUnspecified;
/**
 *  Total final score.
 *
 *  Value: "RT_FINAL_SCORE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_Rank_Type_RtFinalScore;

// ----------------------------------------------------------------------------
// GTLRPartners_SpecializationStatus.badgeSpecialization

/**
 *  AdWords Display specialization
 *
 *  Value: "BADGE_SPECIALIZATION_ADWORDS_DISPLAY"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsDisplay;
/**
 *  AdWords Mobile specialization
 *
 *  Value: "BADGE_SPECIALIZATION_ADWORDS_MOBILE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsMobile;
/**
 *  AdWords Search specialization
 *
 *  Value: "BADGE_SPECIALIZATION_ADWORDS_SEARCH"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsSearch;
/**
 *  AdWords Shopping specialization
 *
 *  Value: "BADGE_SPECIALIZATION_ADWORDS_SHOPPING"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsShopping;
/**
 *  AdWords Video specialization
 *
 *  Value: "BADGE_SPECIALIZATION_ADWORDS_VIDEO"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsVideo;
/**
 *  Unknown specialization
 *
 *  Value: "BADGE_SPECIALIZATION_UNKNOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationUnknown;

// ----------------------------------------------------------------------------
// GTLRPartners_SpecializationStatus.badgeSpecializationState

/**
 *  Specialization in grace
 *
 *  Value: "BADGE_SPECIALIZATION_STATE_IN_GRACE"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateInGrace;
/**
 *  Specialization not passed
 *
 *  Value: "BADGE_SPECIALIZATION_STATE_NOT_PASSED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateNotPassed;
/**
 *  Specialization passed
 *
 *  Value: "BADGE_SPECIALIZATION_STATE_PASSED"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStatePassed;
/**
 *  Unknown state
 *
 *  Value: "BADGE_SPECIALIZATION_STATE_UNKNOWN"
 */
GTLR_EXTERN NSString * const kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateUnknown;

/**
 *  Information about a particular AdWords Manager Account.
 *  Read more at https://support.google.com/adwords/answer/6139186
 */
@interface GTLRPartners_AdWordsManagerAccountInfo : GTLRObject

/** Name of the customer this account represents. */
@property(nonatomic, copy, nullable) NSString *customerName;

/**
 *  The AdWords Manager Account id.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

@end


/**
 *  Analytics data for a `Company` within a single day.
 */
@interface GTLRPartners_Analytics : GTLRObject

/**
 *  Instances of users contacting the `Company`
 *  on the specified date.
 */
@property(nonatomic, strong, nullable) GTLRPartners_AnalyticsDataPoint *contacts;

/** Date on which these events occurred. */
@property(nonatomic, strong, nullable) GTLRPartners_Date *eventDate;

/**
 *  Instances of users viewing the `Company` profile
 *  on the specified date.
 */
@property(nonatomic, strong, nullable) GTLRPartners_AnalyticsDataPoint *profileViews;

/**
 *  Instances of users seeing the `Company` in Google Partners Search results
 *  on the specified date.
 */
@property(nonatomic, strong, nullable) GTLRPartners_AnalyticsDataPoint *searchViews;

@end


/**
 *  Details of the analytics events for a `Company` within a single day.
 */
@interface GTLRPartners_AnalyticsDataPoint : GTLRObject

/**
 *  Number of times the type of event occurred.
 *  Meaning depends on context (e.g. profile views, contacts, etc.).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *eventCount;

/** Location information of where these events occurred. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_LatLng *> *eventLocations;

@end


/**
 *  Analytics aggregated data for a `Company` for a given date range.
 */
@interface GTLRPartners_AnalyticsSummary : GTLRObject

/**
 *  Aggregated number of times users contacted the `Company`
 *  for given date range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contactsCount;

/**
 *  Aggregated number of profile views for the `Company` for given date range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *profileViewsCount;

/**
 *  Aggregated number of times users saw the `Company`
 *  in Google Partners Search results for given date range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *searchViewsCount;

@end


/**
 *  Available Offers to be distributed.
 */
@interface GTLRPartners_AvailableOffer : GTLRObject

/**
 *  The number of codes for this offer that are available for distribution.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *available;

/** Offer info by country. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_CountryOfferInfo *> *countryOfferInfos;

/**
 *  Description of the offer.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  ID of this offer.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  The maximum age of an account [in days] to be eligible.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAccountAge;

/** Name of the offer. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Level of this offer.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelDenyContract
 *        Users/Agencies that have no offers due to contractural agreements.
 *        (Value: "OFFER_LEVEL_DENY_CONTRACT")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelDenyProblem
 *        Users/Agencies that have no offers because of a problem. (Value:
 *        "OFFER_LEVEL_DENY_PROBLEM")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit0 Some
 *        Agencies don't get any offers. (Value: "OFFER_LEVEL_LIMIT_0")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit15 Agencies
 *        with adequate AHI and spend get 15/month. (Value:
 *        "OFFER_LEVEL_LIMIT_15")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit5 Basic
 *        level gets 5 per month. (Value: "OFFER_LEVEL_LIMIT_5")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelLimit50 Badged
 *        partners (even in grace) get 50 per month. (Value:
 *        "OFFER_LEVEL_LIMIT_50")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelManual
 *        Users/Agencies that have a manually-configured limit. (Value:
 *        "OFFER_LEVEL_MANUAL")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferLevel_OfferLevelUnspecified
 *        Unset. (Value: "OFFER_LEVEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *offerLevel;

/**
 *  Type of offer.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_AvailableOffer_OfferType_OfferTypeSpendMatch Spend
 *        Match up to Y. (Value: "OFFER_TYPE_SPEND_MATCH")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferType_OfferTypeSpendXGetY AdWords
 *        spend X get Y. (Value: "OFFER_TYPE_SPEND_X_GET_Y")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferType_OfferTypeUnspecified Unset.
 *        (Value: "OFFER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_AvailableOffer_OfferType_OfferTypeVideo Youtube
 *        video. (Value: "OFFER_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *offerType;

/** Customers who qualify for this offer. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_OfferCustomer *> *qualifiedCustomer;

/**
 *  Whether or not the list of qualified customers is definitely complete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *qualifiedCustomersComplete;

/**
 *  Should special text be shown on the offers page.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *showSpecialOfferCopy;

/** Terms of the offer. */
@property(nonatomic, copy, nullable) NSString *terms;

@end


/**
 *  A user's information on a specific certification.
 */
@interface GTLRPartners_Certification : GTLRObject

/**
 *  Whether this certification has been achieved.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *achieved;

/**
 *  The type of certification, the area of expertise.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Certification_CertificationType_CertificationTypeUnspecified
 *        Unchosen. (Value: "CERTIFICATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtAdwords AdWords
 *        certified. (Value: "CT_ADWORDS")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtAdwordsDisplay
 *        AdWords Display certified. (Value: "CT_ADWORDS_DISPLAY")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtAdwordsSearch
 *        AdWords Search certified. (Value: "CT_ADWORDS_SEARCH")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtAnalytics
 *        Analytics certified. (Value: "CT_ANALYTICS")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtDigitalSales
 *        Digital sales certified. (Value: "CT_DIGITAL_SALES")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtDoubleclick
 *        DoubleClick certified. (Value: "CT_DOUBLECLICK")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtMobile Mobile
 *        certified. (Value: "CT_MOBILE")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtMobileSites Mobile
 *        Sites certified. (Value: "CT_MOBILE_SITES")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtShopping Shopping
 *        certified. (Value: "CT_SHOPPING")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtVideoads VideoAds
 *        certified. (Value: "CT_VIDEOADS")
 *    @arg @c kGTLRPartners_Certification_CertificationType_CtYoutube YouTube
 *        certified. (Value: "CT_YOUTUBE")
 */
@property(nonatomic, copy, nullable) NSString *certificationType;

/** Date this certification is due to expire. */
@property(nonatomic, strong, nullable) GTLRDateTime *expiration;

/** The date the user last achieved certification. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastAchieved;

/**
 *  Whether this certification is in the state of warning.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *warning;

@end


/**
 *  Status for a Google Partners certification exam.
 */
@interface GTLRPartners_CertificationExamStatus : GTLRObject

/**
 *  The number of people who have passed the certification exam.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numberUsersPass;

/**
 *  The type of certification exam.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CertificationExamTypeUnspecified
 *        Unchosen. (Value: "CERTIFICATION_EXAM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetAdwordsAdvancedDisplay
 *        AdWords advanced display exam. (Value: "CET_ADWORDS_ADVANCED_DISPLAY")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetAdwordsAdvancedSearch
 *        AdWords advanced search exam. (Value: "CET_ADWORDS_ADVANCED_SEARCH")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetAdwordsFundamentals
 *        Adwords Fundamentals exam. (Value: "CET_ADWORDS_FUNDAMENTALS")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetAnalytics Analytics
 *        exam. (Value: "CET_ANALYTICS")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetDigitalSales Digital
 *        Sales exam. (Value: "CET_DIGITAL_SALES")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetDoubleclick
 *        DoubleClick exam. (Value: "CET_DOUBLECLICK")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetMobile Mobile exam.
 *        (Value: "CET_MOBILE")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetMobileSites Mobile
 *        Sites exam. (Value: "CET_MOBILE_SITES")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetShopping Shopping
 *        exam. (Value: "CET_SHOPPING")
 *    @arg @c kGTLRPartners_CertificationExamStatus_Type_CetVideoAds VideoAds
 *        exam. (Value: "CET_VIDEO_ADS")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Google Partners certification status.
 */
@interface GTLRPartners_CertificationStatus : GTLRObject

/** List of certification exam statuses. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_CertificationExamStatus *> *examStatuses;

/**
 *  Whether certification is passing.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isCertified;

/**
 *  The type of the certification.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CertificationTypeUnspecified
 *        Unchosen. (Value: "CERTIFICATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtAdwords AdWords
 *        certified. (Value: "CT_ADWORDS")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtAdwordsDisplay AdWords
 *        Display certified. (Value: "CT_ADWORDS_DISPLAY")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtAdwordsSearch AdWords
 *        Search certified. (Value: "CT_ADWORDS_SEARCH")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtAnalytics Analytics
 *        certified. (Value: "CT_ANALYTICS")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtDigitalSales Digital
 *        sales certified. (Value: "CT_DIGITAL_SALES")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtDoubleclick DoubleClick
 *        certified. (Value: "CT_DOUBLECLICK")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtMobile Mobile certified.
 *        (Value: "CT_MOBILE")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtMobileSites Mobile Sites
 *        certified. (Value: "CT_MOBILE_SITES")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtShopping Shopping
 *        certified. (Value: "CT_SHOPPING")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtVideoads VideoAds
 *        certified. (Value: "CT_VIDEOADS")
 *    @arg @c kGTLRPartners_CertificationStatus_Type_CtYoutube YouTube
 *        certified. (Value: "CT_YOUTUBE")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Number of people who are certified,
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userCount;

@end


/**
 *  A company resource in the Google Partners API. Once certified, it qualifies
 *  for being searched by advertisers.
 */
@interface GTLRPartners_Company : GTLRObject

/**
 *  URL of the company's additional websites used to verify the dynamic badges.
 *  These are stored as full URLs as entered by the user, but only the TLD will
 *  be used for the actual verification.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalWebsites;

/**
 *  Email domains that allow users with a matching email address to get
 *  auto-approved for associating with this company.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *autoApprovalEmailDomains;

/**
 *  Whether the company's badge authority is in AWN
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *badgeAuthorityInAwn;

/**
 *  Partner badge tier
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Company_BadgeTier_BadgeTierNone Tier badge is not
 *        set. (Value: "BADGE_TIER_NONE")
 *    @arg @c kGTLRPartners_Company_BadgeTier_BadgeTierPremier Agency has
 *        premier badge. (Value: "BADGE_TIER_PREMIER")
 *    @arg @c kGTLRPartners_Company_BadgeTier_BadgeTierRegular Agency has
 *        regular partner badge. (Value: "BADGE_TIER_REGULAR")
 */
@property(nonatomic, copy, nullable) NSString *badgeTier;

/** The list of Google Partners certification statuses for the company. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_CertificationStatus *> *certificationStatuses;

/** Company type labels listed on the company's profile. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *companyTypes;

/**
 *  The minimum monthly budget that the company accepts for partner business,
 *  converted to the requested currency code.
 */
@property(nonatomic, strong, nullable) GTLRPartners_Money *convertedMinMonthlyBudget;

/**
 *  The ID of the company.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Industries the company can help with. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *industries;

/** The list of localized info for the company. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_LocalizedCompanyInfo *> *localizedInfos;

/**
 *  The list of all company locations.
 *  If set, must include the
 *  primary_location
 *  in the list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Location *> *locations;

/** The name of the company. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The unconverted minimum monthly budget that the company accepts for partner
 *  business.
 */
@property(nonatomic, strong, nullable) GTLRPartners_Money *originalMinMonthlyBudget;

/**
 *  The Primary AdWords Manager Account id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primaryAdwordsManagerAccountId;

/**
 *  The primary language code of the company, as defined by
 *  <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
 *  (IETF BCP 47, "Tags for Identifying Languages").
 */
@property(nonatomic, copy, nullable) NSString *primaryLanguageCode;

/** The primary location of the company. */
@property(nonatomic, strong, nullable) GTLRPartners_Location *primaryLocation;

/**
 *  The public viewability status of the company's profile.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Company_ProfileStatus_CompanyProfileStatusUnspecified
 *        Unchosen. (Value: "COMPANY_PROFILE_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRPartners_Company_ProfileStatus_Hidden Company profile does
 *        not show up publicly. (Value: "HIDDEN")
 *    @arg @c kGTLRPartners_Company_ProfileStatus_Published Company profile can
 *        only be viewed by the profile's URL
 *        and not by Google Partner Search. (Value: "PUBLISHED")
 *    @arg @c kGTLRPartners_Company_ProfileStatus_Searchable Company profile can
 *        be viewed by the profile's URL
 *        and by Google Partner Search. (Value: "SEARCHABLE")
 */
@property(nonatomic, copy, nullable) NSString *profileStatus;

/** Basic information from the company's public profile. */
@property(nonatomic, strong, nullable) GTLRPartners_PublicProfile *publicProfile;

/**
 *  Information related to the ranking of the company within the list of
 *  companies.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Rank *> *ranks;

/** Services the company can help with. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *services;

/** The list of Google Partners specialization statuses for the company. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_SpecializationStatus *> *specializationStatus;

/** URL of the company's website. */
@property(nonatomic, copy, nullable) NSString *websiteUrl;

@end


/**
 *  A CompanyRelation resource representing information about a user's
 *  affiliation and standing with a company in Partners.
 */
@interface GTLRPartners_CompanyRelation : GTLRObject

/** The primary address for this company. */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  Whether the company is a Partner.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierNone Tier badge
 *        is not set. (Value: "BADGE_TIER_NONE")
 *    @arg @c kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierPremier Agency
 *        has premier badge. (Value: "BADGE_TIER_PREMIER")
 *    @arg @c kGTLRPartners_CompanyRelation_BadgeTier_BadgeTierRegular Agency
 *        has regular partner badge. (Value: "BADGE_TIER_REGULAR")
 */
@property(nonatomic, copy, nullable) NSString *badgeTier;

/**
 *  Indicates if the user is an admin for this company.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *companyAdmin;

/**
 *  The ID of the company. There may be no id if this is a
 *  pending company.5
 */
@property(nonatomic, copy, nullable) NSString *companyId;

/**
 *  The timestamp of when affiliation was requested.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  The internal company ID.
 *  Only available for a whitelisted set of api clients.
 */
@property(nonatomic, copy, nullable) NSString *internalCompanyId;

/**
 *  The flag that indicates if the company is pending verification.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPending;

/** A URL to a profile photo, e.g. a G+ profile photo. */
@property(nonatomic, copy, nullable) NSString *logoUrl;

/**
 *  The AdWords manager account # associated this company.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *managerAccount;

/** The name (in the company's primary language) for the company. */
@property(nonatomic, copy, nullable) NSString *name;

/** The phone number for the company's primary address. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** The primary location of the company. */
@property(nonatomic, strong, nullable) GTLRPartners_Location *primaryAddress;

/** The primary country code of the company. */
@property(nonatomic, copy, nullable) NSString *primaryCountryCode;

/** The primary language code of the company. */
@property(nonatomic, copy, nullable) NSString *primaryLanguageCode;

/**
 *  The timestamp when the user was approved.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *resolvedTimestamp;

/** The segment the company is classified as. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *segment;

/** The list of Google Partners specialization statuses for the company. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_SpecializationStatus *> *specializationStatus;

/**
 *  The state of relationship, in terms of approvals.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CompanyRelation_State_UserCompanyReationStateNoneSpecified
 *        Default unspecified value. (Value:
 *        "USER_COMPANY_REATION_STATE_NONE_SPECIFIED")
 *    @arg @c kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateApproved
 *        Approved by company. (Value: "USER_COMPANY_RELATION_STATE_APPROVED")
 *    @arg @c kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateAwaitAdmin
 *        Pending approval from company.
 *        Email confirmation will not approve this one. (Value:
 *        "USER_COMPANY_RELATION_STATE_AWAIT_ADMIN")
 *    @arg @c kGTLRPartners_CompanyRelation_State_UserCompanyRelationStateAwaitEmail
 *        User has filled in a request to be associated with an company.
 *        Now waiting email confirmation. (Value:
 *        "USER_COMPANY_RELATION_STATE_AWAIT_EMAIL")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The website URL for this company. */
@property(nonatomic, copy, nullable) NSString *website;

@end


/**
 *  Offer info by country.
 */
@interface GTLRPartners_CountryOfferInfo : GTLRObject

/** (localized) Get Y amount for that country's offer. */
@property(nonatomic, copy, nullable) NSString *getYAmount;

/** Country code for which offer codes may be requested. */
@property(nonatomic, copy, nullable) NSString *offerCountryCode;

/**
 *  Type of offer country is eligible for.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeSpendMatch Spend
 *        Match up to Y. (Value: "OFFER_TYPE_SPEND_MATCH")
 *    @arg @c kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeSpendXGetY
 *        AdWords spend X get Y. (Value: "OFFER_TYPE_SPEND_X_GET_Y")
 *    @arg @c kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeUnspecified
 *        Unset. (Value: "OFFER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_CountryOfferInfo_OfferType_OfferTypeVideo Youtube
 *        video. (Value: "OFFER_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *offerType;

/** (localized) Spend X amount for that country's offer. */
@property(nonatomic, copy, nullable) NSString *spendXAmount;

@end


/**
 *  Request message for CreateLead.
 */
@interface GTLRPartners_CreateLeadRequest : GTLRObject

/**
 *  The lead resource. The `LeadType` must not be `LEAD_TYPE_UNSPECIFIED`
 *  and either `email` or `phone_number` must be provided.
 */
@property(nonatomic, strong, nullable) GTLRPartners_Lead *lead;

/**
 *  <a href="https://www.google.com/recaptcha/">reCaptcha</a> challenge info.
 */
@property(nonatomic, strong, nullable) GTLRPartners_RecaptchaChallenge *recaptchaChallenge;

/** Current request metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_RequestMetadata *requestMetadata;

@end


/**
 *  Response message for CreateLead.
 */
@interface GTLRPartners_CreateLeadResponse : GTLRObject

/**
 *  Lead that was created depending on the outcome of
 *  <a href="https://www.google.com/recaptcha/">reCaptcha</a> validation.
 */
@property(nonatomic, strong, nullable) GTLRPartners_Lead *lead;

/**
 *  The outcome of <a href="https://www.google.com/recaptcha/">reCaptcha</a>
 *  validation.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RecaptchaStatusUnspecified
 *        Unchosen. (Value: "RECAPTCHA_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsFailed
 *        reCaptcha challenge failed. (Value: "RS_FAILED")
 *    @arg @c kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsNotNeeded No
 *        reCaptcha validation needed. (Value: "RS_NOT_NEEDED")
 *    @arg @c kGTLRPartners_CreateLeadResponse_RecaptchaStatus_RsPassed
 *        reCaptcha challenge passed. (Value: "RS_PASSED")
 */
@property(nonatomic, copy, nullable) NSString *recaptchaStatus;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Represents a whole or partial calendar date, e.g. a birthday. The time of
 *  day
 *  and time zone are either specified elsewhere or are not significant. The
 *  date
 *  is relative to the Proleptic Gregorian Calendar. This can represent:
 *  * A full date, with non-zero year, month and day values
 *  * A month and day value, with a zero year, e.g. an anniversary
 *  * A year on its own, with zero month and day values
 *  * A year and month value, with a zero day, e.g. a credit card expiration
 *  date
 *  Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
 */
@interface GTLRPartners_Date : GTLRObject

/**
 *  Day of month. Must be from 1 to 31 and valid for the year and month, or 0
 *  if specifying a year by itself or a year and month where the day is not
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of year. Must be from 1 to 12, or 0 if specifying a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of date. Must be from 1 to 9999, or 0 if specifying a date without
 *  a year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Debug information about this request.
 */
@interface GTLRPartners_DebugInfo : GTLRObject

/** Info about the server that serviced this request. */
@property(nonatomic, copy, nullable) NSString *serverInfo;

/** Server-side debug stack trace. */
@property(nonatomic, copy, nullable) NSString *serverTraceInfo;

/** URL of the service that handled this request. */
@property(nonatomic, copy, nullable) NSString *serviceUrl;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRPartners_Empty : GTLRObject
@end


/**
 *  Key value data pair for an event.
 */
@interface GTLRPartners_EventData : GTLRObject

/**
 *  Data type.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_EventData_Key_Action Action data. (Value: "ACTION")
 *    @arg @c kGTLRPartners_EventData_Key_AgencyId Agency ID data. (Value:
 *        "AGENCY_ID")
 *    @arg @c kGTLRPartners_EventData_Key_AgencyName Agency name data. (Value:
 *        "AGENCY_NAME")
 *    @arg @c kGTLRPartners_EventData_Key_AgencyPhoneNumber Agency phone number
 *        data. (Value: "AGENCY_PHONE_NUMBER")
 *    @arg @c kGTLRPartners_EventData_Key_AgencyWebsite Agency website data.
 *        (Value: "AGENCY_WEBSITE")
 *    @arg @c kGTLRPartners_EventData_Key_Budget Budget data. (Value: "BUDGET")
 *    @arg @c kGTLRPartners_EventData_Key_CenterPoint Center-point data. (Value:
 *        "CENTER_POINT")
 *    @arg @c kGTLRPartners_EventData_Key_Certification Certification data.
 *        (Value: "CERTIFICATION")
 *    @arg @c kGTLRPartners_EventData_Key_Comment Comment data. (Value:
 *        "COMMENT")
 *    @arg @c kGTLRPartners_EventData_Key_Country Country data. (Value:
 *        "COUNTRY")
 *    @arg @c kGTLRPartners_EventData_Key_Currency Currency data. (Value:
 *        "CURRENCY")
 *    @arg @c kGTLRPartners_EventData_Key_CurrentlyViewedAgencyId Currently
 *        viewed agency ID data. (Value: "CURRENTLY_VIEWED_AGENCY_ID")
 *    @arg @c kGTLRPartners_EventData_Key_Details Details data. (Value:
 *        "DETAILS")
 *    @arg @c kGTLRPartners_EventData_Key_Distance Distance data. (Value:
 *        "DISTANCE")
 *    @arg @c kGTLRPartners_EventData_Key_DistanceType Distance type data.
 *        (Value: "DISTANCE_TYPE")
 *    @arg @c kGTLRPartners_EventData_Key_ElementFocus Element we wanted user to
 *        focus on. (Value: "ELEMENT_FOCUS")
 *    @arg @c kGTLRPartners_EventData_Key_EventDataTypeUnspecified Unchosen.
 *        (Value: "EVENT_DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_EventData_Key_Exam Exam data. (Value: "EXAM")
 *    @arg @c kGTLRPartners_EventData_Key_ExperimentId Experiment ID data.
 *        (Value: "EXPERIMENT_ID")
 *    @arg @c kGTLRPartners_EventData_Key_GpsMotivation Google Partner Search
 *        motivation data. (Value: "GPS_MOTIVATION")
 *    @arg @c kGTLRPartners_EventData_Key_HistoryToken History token data.
 *        (Value: "HISTORY_TOKEN")
 *    @arg @c kGTLRPartners_EventData_Key_Id Identifier data. (Value: "ID")
 *    @arg @c kGTLRPartners_EventData_Key_Industry Industry data. (Value:
 *        "INDUSTRY")
 *    @arg @c kGTLRPartners_EventData_Key_InsightTag Insight tag data. (Value:
 *        "INSIGHT_TAG")
 *    @arg @c kGTLRPartners_EventData_Key_Language Language data. (Value:
 *        "LANGUAGE")
 *    @arg @c kGTLRPartners_EventData_Key_Location Location data. (Value:
 *        "LOCATION")
 *    @arg @c kGTLRPartners_EventData_Key_MarketingOptIn Marketing opt-in data.
 *        (Value: "MARKETING_OPT_IN")
 *    @arg @c kGTLRPartners_EventData_Key_Progress Progress when viewing an item
 *        \\[0-100\\]. (Value: "PROGRESS")
 *    @arg @c kGTLRPartners_EventData_Key_Query Query data. (Value: "QUERY")
 *    @arg @c kGTLRPartners_EventData_Key_SearchStartIndex Search start index
 *        data. (Value: "SEARCH_START_INDEX")
 *    @arg @c kGTLRPartners_EventData_Key_Service Service data. (Value:
 *        "SERVICE")
 *    @arg @c kGTLRPartners_EventData_Key_ShowVow Show vow data. (Value:
 *        "SHOW_VOW")
 *    @arg @c kGTLRPartners_EventData_Key_Solution Solution data. (Value:
 *        "SOLUTION")
 *    @arg @c kGTLRPartners_EventData_Key_TrafficSourceId Traffic source ID
 *        data. (Value: "TRAFFIC_SOURCE_ID")
 *    @arg @c kGTLRPartners_EventData_Key_TrafficSubId Traffic sub ID data.
 *        (Value: "TRAFFIC_SUB_ID")
 *    @arg @c kGTLRPartners_EventData_Key_Url URL data. (Value: "URL")
 *    @arg @c kGTLRPartners_EventData_Key_ViewPort Viewport data. (Value:
 *        "VIEW_PORT")
 *    @arg @c kGTLRPartners_EventData_Key_Website Website data. (Value:
 *        "WEBSITE")
 */
@property(nonatomic, copy, nullable) NSString *key;

/** Data values. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  A user's information on a specific exam.
 */
@interface GTLRPartners_ExamStatus : GTLRObject

/**
 *  The type of the exam.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CertificationExamTypeUnspecified
 *        Unchosen. (Value: "CERTIFICATION_EXAM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetAdwordsAdvancedDisplay
 *        AdWords advanced display exam. (Value: "CET_ADWORDS_ADVANCED_DISPLAY")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetAdwordsAdvancedSearch AdWords
 *        advanced search exam. (Value: "CET_ADWORDS_ADVANCED_SEARCH")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetAdwordsFundamentals Adwords
 *        Fundamentals exam. (Value: "CET_ADWORDS_FUNDAMENTALS")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetAnalytics Analytics exam.
 *        (Value: "CET_ANALYTICS")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetDigitalSales Digital Sales
 *        exam. (Value: "CET_DIGITAL_SALES")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetDoubleclick DoubleClick exam.
 *        (Value: "CET_DOUBLECLICK")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetMobile Mobile exam. (Value:
 *        "CET_MOBILE")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetMobileSites Mobile Sites
 *        exam. (Value: "CET_MOBILE_SITES")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetShopping Shopping exam.
 *        (Value: "CET_SHOPPING")
 *    @arg @c kGTLRPartners_ExamStatus_ExamType_CetVideoAds VideoAds exam.
 *        (Value: "CET_VIDEO_ADS")
 */
@property(nonatomic, copy, nullable) NSString *examType;

/** Date this exam is due to expire. */
@property(nonatomic, strong, nullable) GTLRDateTime *expiration;

/** The date the user last passed this exam. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastPassed;

/**
 *  Whether this exam has been passed and not expired.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *passed;

/** The date the user last taken this exam. */
@property(nonatomic, strong, nullable) GTLRDateTime *taken;

/**
 *  Whether this exam is in the state of warning.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *warning;

@end


/**
 *  Response message for GetCompany.
 */
@interface GTLRPartners_GetCompanyResponse : GTLRObject

/** The company. */
@property(nonatomic, strong, nullable) GTLRPartners_Company *company;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Response message for
 *  GetPartnersStatus.
 */
@interface GTLRPartners_GetPartnersStatusResponse : GTLRObject

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Historical information about a Google Partners Offer.
 */
@interface GTLRPartners_HistoricalOffer : GTLRObject

/** Client's AdWords page URL. */
@property(nonatomic, copy, nullable) NSString *adwordsUrl;

/** Email address for client. */
@property(nonatomic, copy, nullable) NSString *clientEmail;

/**
 *  ID of client.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientId;

/** Name of the client. */
@property(nonatomic, copy, nullable) NSString *clientName;

/** Time offer was first created. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/** Time this offer expires. */
@property(nonatomic, strong, nullable) GTLRDateTime *expirationTime;

/** Time last action was taken. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastModifiedTime;

/** Offer code. */
@property(nonatomic, copy, nullable) NSString *offerCode;

/** Country Code for the offer country. */
@property(nonatomic, copy, nullable) NSString *offerCountryCode;

/**
 *  Type of offer.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_HistoricalOffer_OfferType_OfferTypeSpendMatch Spend
 *        Match up to Y. (Value: "OFFER_TYPE_SPEND_MATCH")
 *    @arg @c kGTLRPartners_HistoricalOffer_OfferType_OfferTypeSpendXGetY
 *        AdWords spend X get Y. (Value: "OFFER_TYPE_SPEND_X_GET_Y")
 *    @arg @c kGTLRPartners_HistoricalOffer_OfferType_OfferTypeUnspecified
 *        Unset. (Value: "OFFER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_HistoricalOffer_OfferType_OfferTypeVideo Youtube
 *        video. (Value: "OFFER_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *offerType;

/**
 *  Name (First + Last) of the partners user to whom the incentive is allocated.
 */
@property(nonatomic, copy, nullable) NSString *senderName;

/**
 *  Status of the offer.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_HistoricalOffer_Status_OfferStatusAwarded Offer
 *        awarded. (Value: "OFFER_STATUS_AWARDED")
 *    @arg @c kGTLRPartners_HistoricalOffer_Status_OfferStatusDistributed Offer
 *        distributed. (Value: "OFFER_STATUS_DISTRIBUTED")
 *    @arg @c kGTLRPartners_HistoricalOffer_Status_OfferStatusExpired Offer
 *        expired. (Value: "OFFER_STATUS_EXPIRED")
 *    @arg @c kGTLRPartners_HistoricalOffer_Status_OfferStatusRedeemed Offer
 *        redeemed. (Value: "OFFER_STATUS_REDEEMED")
 *    @arg @c kGTLRPartners_HistoricalOffer_Status_OfferStatusUnspecified Unset.
 *        (Value: "OFFER_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  An object representing a latitude/longitude pair. This is expressed as a
 *  pair
 *  of doubles representing degrees latitude and degrees longitude. Unless
 *  specified otherwise, this must conform to the
 *  <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
 *  standard</a>. Values must be within normalized ranges.
 */
@interface GTLRPartners_LatLng : GTLRObject

/**
 *  The latitude in degrees. It must be in the range [-90.0, +90.0].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  The longitude in degrees. It must be in the range [-180.0, +180.0].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  A lead resource that represents an advertiser contact for a `Company`. These
 *  are usually generated via Google Partner Search (the advertiser portal).
 */
@interface GTLRPartners_Lead : GTLRObject

/**
 *  The AdWords Customer ID of the lead.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adwordsCustomerId;

/** Comments lead source gave. */
@property(nonatomic, copy, nullable) NSString *comments;

/** Timestamp of when this lead was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Email address of lead source. */
@property(nonatomic, copy, nullable) NSString *email;

/** Last name of lead source. */
@property(nonatomic, copy, nullable) NSString *familyName;

/** First name of lead source. */
@property(nonatomic, copy, nullable) NSString *givenName;

/** List of reasons for using Google Partner Search and creating a lead. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gpsMotivations;

/**
 *  ID of the lead.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Language code of the lead's language preference, as defined by
 *  <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
 *  (IETF BCP 47, "Tags for Identifying Languages").
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Whether or not the lead signed up for marketing emails
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *marketingOptIn;

/** The minimum monthly budget lead source is willing to spend. */
@property(nonatomic, strong, nullable) GTLRPartners_Money *minMonthlyBudget;

/** Phone number of lead source. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/**
 *  The lead's state in relation to the company.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Lead_State_Client Lead has become a client. (Value:
 *        "CLIENT")
 *    @arg @c kGTLRPartners_Lead_State_Contacted Lead has been contacted.
 *        (Value: "CONTACTED")
 *    @arg @c kGTLRPartners_Lead_State_Lead Lead not yet contacted. (Value:
 *        "LEAD")
 *    @arg @c kGTLRPartners_Lead_State_LeadStateUnspecified Unchosen. (Value:
 *        "LEAD_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_Lead_State_Other Lead in a state not covered by
 *        other options. (Value: "OTHER")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Type of lead.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Lead_Type_LeadTypeUnspecified Unchosen. (Value:
 *        "LEAD_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_Lead_Type_LtGps Google Partner Search. (Value:
 *        "LT_GPS")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Website URL of lead source. */
@property(nonatomic, copy, nullable) NSString *websiteUrl;

@end


/**
 *  Response message for
 *  ListAnalytics.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "analytics" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPartners_ListAnalyticsResponse : GTLRCollectionObject

/**
 *  The list of analytics.
 *  Sorted in ascending order of
 *  Analytics.event_date.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Analytics *> *analytics;

/**
 *  Aggregated information across the response's
 *  analytics.
 */
@property(nonatomic, strong, nullable) GTLRPartners_AnalyticsSummary *analyticsSummary;

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the `ListAnalyticsRequest.page_token` field in the
 *  subsequent call to
 *  ListAnalytics to retrieve the
 *  next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Response message for
 *  ListCompanies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "companies" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPartners_ListCompaniesResponse : GTLRCollectionObject

/**
 *  The list of companies.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Company *> *companies;

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the `ListCompaniesRequest.page_token` field in the
 *  subsequent call to
 *  ListCompanies to retrieve the
 *  next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Response message for ListLeads.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "leads" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPartners_ListLeadsResponse : GTLRCollectionObject

/**
 *  The list of leads.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Lead *> *leads;

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the `ListLeadsRequest.page_token` field in the
 *  subsequent call to
 *  ListLeads to retrieve the
 *  next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

/**
 *  The total count of leads for the given company.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Response for ListOfferHistory.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "offers" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPartners_ListOffersHistoryResponse : GTLRCollectionObject

/**
 *  True if the user has the option to show entire company history.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canShowEntireCompany;

/**
 *  Supply this token in a ListOffersHistoryRequest to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Historical offers meeting request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_HistoricalOffer *> *offers;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

/**
 *  True if this response is showing entire company history.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *showingEntireCompany;

/**
 *  Number of results across all pages.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalResults;

@end


/**
 *  Response for ListOffer.
 */
@interface GTLRPartners_ListOffersResponse : GTLRObject

/** Available Offers to be distributed. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_AvailableOffer *> *availableOffers;

/**
 *  Reason why no Offers are available.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonIneligible
 *        Ineligible for offers. (Value: "NO_OFFER_REASON_INELIGIBLE")
 *    @arg @c kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonLimitReached
 *        Offer limit has been reached. (Value: "NO_OFFER_REASON_LIMIT_REACHED")
 *    @arg @c kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonNoMcc
 *        Not an MCC. (Value: "NO_OFFER_REASON_NO_MCC")
 *    @arg @c kGTLRPartners_ListOffersResponse_NoOfferReason_NoOfferReasonUnspecified
 *        Unset. (Value: "NO_OFFER_REASON_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *noOfferReason;

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Response message for
 *  ListUserStates.
 */
@interface GTLRPartners_ListUserStatesResponse : GTLRObject

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

/** User's states. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *userStates;

@end


/**
 *  The localized company information.
 */
@interface GTLRPartners_LocalizedCompanyInfo : GTLRObject

/** List of country codes for the localized company info. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *countryCodes;

/** Localized display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Language code of the localized company info, as defined by
 *  <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
 *  (IETF BCP 47, "Tags for Identifying Languages").
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Localized brief description that the company uses to advertise themselves.
 */
@property(nonatomic, copy, nullable) NSString *overview;

@end


/**
 *  A location with address and geographic coordinates. May optionally contain a
 *  detailed (multi-field) version of the address.
 */
@interface GTLRPartners_Location : GTLRObject

/** The single string version of the address. */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  The following address lines represent the most specific part of any
 *  address.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *addressLine;

/** Top-level administrative subdivision of this country. */
@property(nonatomic, copy, nullable) NSString *administrativeArea;

/**
 *  Dependent locality or sublocality. Used for UK dependent localities, or
 *  neighborhoods or boroughs in other locations.
 */
@property(nonatomic, copy, nullable) NSString *dependentLocality;

/** Language code of the address. Should be in BCP 47 format. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** The latitude and longitude of the location, in degrees. */
@property(nonatomic, strong, nullable) GTLRPartners_LatLng *latLng;

/** Generally refers to the city/town portion of an address. */
@property(nonatomic, copy, nullable) NSString *locality;

/** Values are frequently alphanumeric. */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** CLDR (Common Locale Data Repository) region code . */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Use of this code is very country-specific, but will refer to a secondary
 *  classification code for sorting mail.
 */
@property(nonatomic, copy, nullable) NSString *sortingCode;

@end


/**
 *  Request message for
 *  LogClientMessage.
 */
@interface GTLRPartners_LogMessageRequest : GTLRObject

/**
 *  Map of client info, such as URL, browser navigator, browser platform, etc.
 */
@property(nonatomic, strong, nullable) GTLRPartners_LogMessageRequest_ClientInfo *clientInfo;

/** Details about the client message. */
@property(nonatomic, copy, nullable) NSString *details;

/**
 *  Message level of client message.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_LogMessageRequest_Level_MessageLevelUnspecified
 *        Unchosen. (Value: "MESSAGE_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRPartners_LogMessageRequest_Level_MlFine Message level for
 *        tracing information. (Value: "ML_FINE")
 *    @arg @c kGTLRPartners_LogMessageRequest_Level_MlInfo Message level for
 *        informational messages. (Value: "ML_INFO")
 *    @arg @c kGTLRPartners_LogMessageRequest_Level_MlSevere Message level for
 *        serious failures. (Value: "ML_SEVERE")
 *    @arg @c kGTLRPartners_LogMessageRequest_Level_MlWarning Message level for
 *        potential problems. (Value: "ML_WARNING")
 */
@property(nonatomic, copy, nullable) NSString *level;

/** Current request metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_RequestMetadata *requestMetadata;

@end


/**
 *  Map of client info, such as URL, browser navigator, browser platform, etc.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRPartners_LogMessageRequest_ClientInfo : GTLRObject
@end


/**
 *  Response message for
 *  LogClientMessage.
 */
@interface GTLRPartners_LogMessageResponse : GTLRObject

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Request message for
 *  LogUserEvent.
 */
@interface GTLRPartners_LogUserEventRequest : GTLRObject

/**
 *  The action that occurred.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedCreateMccConnectWithCompanyNotFound
 *        Agency clicked `create MCC connect with company not found`. (Value:
 *        "AGECNY_CLICKED_CREATE_MCC_CONNECT_WITH_COMPANY_NOT_FOUND")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedGiveEditAccessConnectWithCompanyNotFound
 *        Agency clicked `give edit access connect with company not found`.
 *        (Value:
 *        "AGECNY_CLICKED_GIVE_EDIT_ACCESS_CONNECT_WITH_COMPANY_NOT_FOUND")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgecnyClickedLogOutConnectWithCompanyNotFound
 *        Agency clicked `log out connect with company not found`. (Value:
 *        "AGECNY_CLICKED_LOG_OUT_CONNECT_WITH_COMPANY_NOT_FOUND")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgecnyFoundCompanyToConnectWith
 *        Agency found company to connect with. (Value:
 *        "AGECNY_FOUND_COMPANY_TO_CONNECT_WITH")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedAddressInMyProfilePortal
 *        Agency added address in profile portal. (Value:
 *        "AGENCY_ADDED_ADDRESS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedChannelsInMyProfilePortal
 *        Agency added channels in profile portal. (Value:
 *        "AGENCY_ADDED_CHANNELS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedIndustriesInMyProfilePortal
 *        Agency added industries in profile portal. (Value:
 *        "AGENCY_ADDED_INDUSTRIES_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedJobFunctionInMyProfilePortal
 *        Agency added job function in profile portal. (Value:
 *        "AGENCY_ADDED_JOB_FUNCTION_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedMarketsInMyProfilePortal
 *        Agency added markets in profile portal. (Value:
 *        "AGENCY_ADDED_MARKETS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedNewCompanyLocation
 *        Agency added new company location. (Value:
 *        "AGENCY_ADDED_NEW_COMPANY_LOCATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyAddedPhoneNumberInMyProfilePortal
 *        Agency added phone number in profile portal. (Value:
 *        "AGENCY_ADDED_PHONE_NUMBER_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedAddIndustriesDropDown
 *        Agency changed `add industries` drop-down. (Value:
 *        "AGENCY_CHANGED_ADD_INDUSTRIES_DROP_DOWN")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedAddMarketsDropDown
 *        Agency changed `add markets` drop-down. (Value:
 *        "AGENCY_CHANGED_ADD_MARKETS_DROP_DOWN")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedPrimaryAccountAssociation
 *        Agency changed primary account association. (Value:
 *        "AGENCY_CHANGED_PRIMARY_ACCOUNT_ASSOCIATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedPrimaryCountryAssociation
 *        Agency changed primary country association. (Value:
 *        "AGENCY_CHANGED_PRIMARY_COUNTRY_ASSOCIATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedRoles
 *        Agency changed roles. (Value: "AGENCY_CHANGED_ROLES")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyChangedTosCountry
 *        Agency changed Terms Of Service country. (Value:
 *        "AGENCY_CHANGED_TOS_COUNTRY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyCheckedRecieveMailPromotionsMyprofile
 *        Agency checked `recieve mail promotions` in profile portal. (Value:
 *        "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_MYPROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyCheckedRecieveMailPromotionsSignup
 *        Agency checked `recieve mail promotions` in sign-up. (Value:
 *        "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_SIGNUP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedAcceptTosButton
 *        Agency clicked `accept Terms Of Service` button. (Value:
 *        "AGENCY_CLICKED_ACCEPT_TOS_BUTTON")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedAffiliateButtonInMyProfileInPortal
 *        Agency clicked `affiliate` button in profile portal. (Value:
 *        "AGENCY_CLICKED_AFFILIATE_BUTTON_IN_MY_PROFILE_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedBackButtonOnConnectWithCompany
 *        Agency clicked back button on `connect with company`. (Value:
 *        "AGENCY_CLICKED_BACK_BUTTON_ON_CONNECT_WITH_COMPANY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCancelAcceptTosButton
 *        Agency clicked `cancel Terms Of Service` button. (Value:
 *        "AGENCY_CLICKED_CANCEL_ACCEPT_TOS_BUTTON")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCertificationsLeftNavInPortal
 *        Agency clicked `certifications` left nav in portal. (Value:
 *        "AGENCY_CLICKED_CERTIFICATIONS_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCertificationsProductLeftNavInPortal
 *        Agency clicked `certifications product` left nav in portal. (Value:
 *        "AGENCY_CLICKED_CERTIFICATIONS_PRODUCT_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCommunityJoinNowLinkInPortalNotifications
 *        Agency clicked community `join now link` in portal notifications.
 *        (Value:
 *        "AGENCY_CLICKED_COMMUNITY_JOIN_NOW_LINK_IN_PORTAL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCommunityLeftNavInPortal
 *        Agency clicked `community` left nav in portal. (Value:
 *        "AGENCY_CLICKED_COMMUNITY_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedConnectToCompanyLinkInPortalNotifications
 *        Agency clicked `connect to company` link in portal notifications.
 *        (Value:
 *        "AGENCY_CLICKED_CONNECT_TO_COMPANY_LINK_IN_PORTAL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedContinueToOverviewOnConnectWithCompany
 *        Agency clicked continue to overview on `connect with company`. (Value:
 *        "AGENCY_CLICKED_CONTINUE_TO_OVERVIEW_ON_CONNECT_WITH_COMPANY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedCreateMccInMyProfilePortal
 *        Agency clicked create MCC in profile portal. (Value:
 *        "AGENCY_CLICKED_CREATE_MCC_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedExamDetailsOnCertAdwordsPage
 *        Agency clicked `exam details` on certifications AdWords page. (Value:
 *        "AGENCY_CLICKED_EXAM_DETAILS_ON_CERT_ADWORDS_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGetCertifiedLinkInPortalNotifications
 *        Agency cliecked `get certified` link in portal notifications. (Value:
 *        "AGENCY_CLICKED_GET_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGetVideoAdsCertifiedLinkInPortalNotifications
 *        Agency clicked `get VideoAds certified` link in portal notifications.
 *        (Value:
 *        "AGENCY_CLICKED_GET_VIDEO_ADS_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedGiveEditAccessInMyProfilePortal
 *        Agency clicked `give edit access` in profile portal. (Value:
 *        "AGENCY_CLICKED_GIVE_EDIT_ACCESS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightContentInPortal
 *        Agency clicked `insight content` in portal. (Value:
 *        "AGENCY_CLICKED_INSIGHT_CONTENT_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsDownloadContent
 *        Agency clicked on the download link for downloading content. (Value:
 *        "AGENCY_CLICKED_INSIGHTS_DOWNLOAD_CONTENT")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsLeftNavInPortal
 *        Agency clicked `insights` left nav in portal. (Value:
 *        "AGENCY_CLICKED_INSIGHTS_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsUploadContent
 *        Agency clicked `insights upload content`. (Value:
 *        "AGENCY_CLICKED_INSIGHTS_UPLOAD_CONTENT")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsViewedDeprecated
 *        Agency clicked `insights viewed deprecated`. (Value:
 *        "AGENCY_CLICKED_INSIGHTS_VIEWED_DEPRECATED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedInsightsViewNowPitchDecksInPortal
 *        Agency clicked `insights view now pitch decks` in portal. (Value:
 *        "AGENCY_CLICKED_INSIGHTS_VIEW_NOW_PITCH_DECKS_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinCommunityButtonCommunityPortal
 *        Agency clicked `join community` button in community portal. (Value:
 *        "AGENCY_CLICKED_JOIN_COMMUNITY_BUTTON_COMMUNITY_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinNowButtonBottom
 *        Agency clicked `Join now` bottom button. (Value:
 *        "AGENCY_CLICKED_JOIN_NOW_BUTTON_BOTTOM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedJoinNowButtonTop
 *        Agency clicked `Join now` top button. (Value:
 *        "AGENCY_CLICKED_JOIN_NOW_BUTTON_TOP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLeftNavStories
 *        Agency clicked left nav `stories`. (Value:
 *        "AGENCY_CLICKED_LEFT_NAV_STORIES")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLinkToMccLinkInPortalNotifications
 *        Agency clicked `link to MCC` link in portal notifications. (Value:
 *        "AGENCY_CLICKED_LINK_TO_MCC_LINK_IN_PORTAL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedLogOutInMyProfilePortal
 *        Agency clicked `log out` in profile portal. (Value:
 *        "AGENCY_CLICKED_LOG_OUT_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedMyProfileLeftNavInPortal
 *        Agency clicked profile portal left nav. (Value:
 *        "AGENCY_CLICKED_MY_PROFILE_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedOffersLeftNavInPortal
 *        Agency clicked `offers` left nav in portal. (Value:
 *        "AGENCY_CLICKED_OFFERS_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedPartnerStatusLeftNavInPortal
 *        Agency clicked `partner status` left nav in portal. (Value:
 *        "AGENCY_CLICKED_PARTNER_STATUS_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedPartnerStatusProductLeftNavInPortal
 *        Agency clicked `partner status product` left nav in portal. (Value:
 *        "AGENCY_CLICKED_PARTNER_STATUS_PRODUCT_LEFT_NAV_IN_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSaveAndContinueAtBotOfCompleteProfile
 *        Agency clicked `save and continue` at bottom of complete profile.
 *        (Value: "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_COMPLETE_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSaveAndContinueAtBotOfIncompleteProfile
 *        Agency clicked `save and continue` at bottom of incomplete profile.
 *        (Value:
 *        "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_INCOMPLETE_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSeeExamsCertificationMainPage
 *        Agency clicked `see exams` certifications main page. (Value:
 *        "AGENCY_CLICKED_SEE_EXAMS_CERTIFICATION_MAIN_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSendButtonOnOffersPage
 *        Agency clicked `send` button on offers page. (Value:
 *        "AGENCY_CLICKED_SEND_BUTTON_ON_OFFERS_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSignInButtonTop
 *        Agency clicked `Sign in` top button. (Value:
 *        "AGENCY_CLICKED_SIGN_IN_BUTTON_TOP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedSkipForNowOnConnectWithCompanyPage
 *        Agency clicked `skip for now on connect with company page`. (Value:
 *        "AGENCY_CLICKED_SKIP_FOR_NOW_ON_CONNECT_WITH_COMPANY_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedTakeExamOnCertExamPage
 *        Agency clicked `take exam` on certifications exam page. (Value:
 *        "AGENCY_CLICKED_TAKE_EXAM_ON_CERT_EXAM_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClickedUnaffiliateInMyProfilePortal
 *        Agency clicked `unaffiliate` in profile portal. (Value:
 *        "AGENCY_CLICKED_UNAFFILIATE_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyClosedConnectedToCompanyXButtonWrongCompany
 *        Agency closed connection to company. (Value:
 *        "AGENCY_CLOSED_CONNECTED_TO_COMPANY_X_BUTTON_WRONG_COMPANY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyCompletedFieldConnectWithCompany
 *        Agency completed field connect with company. (Value:
 *        "AGENCY_COMPLETED_FIELD_CONNECT_WITH_COMPANY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyDidntHaveAnMccAssociatedOnCompleteProfile
 *        Agency did not have an MCC associated on profile portal. (Value:
 *        "AGENCY_DIDNT_HAVE_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyDismissedAffiliationWidget
 *        Agency dismissed affiliation widget. (Value:
 *        "AGENCY_DISMISSED_AFFILIATION_WIDGET")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyFailedCompanyVerification
 *        Agency failed the company verification. (Value:
 *        "AGENCY_FAILED_COMPANY_VERIFICATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyFilledOutCompAffiliationInMyProfilePortal
 *        Agency filled out company affiliation in profile portal. (Value:
 *        "AGENCY_FILLED_OUT_COMP_AFFILIATION_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyHadAnMccAssociatedOnCompleteProfile
 *        Agency had an MCC associated on profile portal. (Value:
 *        "AGENCY_HAD_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyIgnoredSuggestedAgenciesAndSearched
 *        Agency ignored suggested agencies and begin searching. (Value:
 *        "AGENCY_IGNORED_SUGGESTED_AGENCIES_AND_SEARCHED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyLinkedIndividualMcc
 *        Agency linked their individual MCC. (Value:
 *        "AGENCY_LINKED_INDIVIDUAL_MCC")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyLookedAtAddChannelDropDown
 *        Agency looked at `add channel` drop-down. (Value:
 *        "AGENCY_LOOKED_AT_ADD_CHANNEL_DROP_DOWN")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyLookedAtJobFunctionDropDown
 *        Agency looked at job function drop-down. (Value:
 *        "AGENCY_LOOKED_AT_JOB_FUNCTION_DROP_DOWN")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyOpenedDialogWithNoUsers
 *        Agency opened dialog with no users. (Value:
 *        "AGENCY_OPENED_DIALOG_WITH_NO_USERS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyOpenedLastAdminDialog
 *        Agency opened `last admin` dialog. (Value:
 *        "AGENCY_OPENED_LAST_ADMIN_DIALOG")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyPickedSearchedAgency
 *        Agency picked a searched agency. (Value:
 *        "AGENCY_PICKED_SEARCHED_AGENCY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyPickedSuggestedAgency
 *        Agency picked a suggested agency. (Value:
 *        "AGENCY_PICKED_SUGGESTED_AGENCY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyProgressInsightsViewContent
 *        Agency user is maklingg progress viewing a content item. (Value:
 *        "AGENCY_PROGRESS_INSIGHTS_VIEW_CONTENT")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyPromotedUserToAdmin
 *        Agency promoted user to admin. (Value:
 *        "AGENCY_PROMOTED_USER_TO_ADMIN")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySearchedForAgencies
 *        Agency searched for agencies. (Value: "AGENCY_SEARCHED_FOR_AGENCIES")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAccountManagerAsJobFunction
 *        Agency selected `account manage` as job function. (Value:
 *        "AGENCY_SELECTED_ACCOUNT_MANAGER_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAccountPlannerAsJobFunction
 *        Agency selected `account planner` as job function. (Value:
 *        "AGENCY_SELECTED_ACCOUNT_PLANNER_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedAnalyticsAsJobFunction
 *        Agency selected `Analytics` as job function. (Value:
 *        "AGENCY_SELECTED_ANALYTICS_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedCreativeAsJobFunction
 *        Agency selected `creative` as job function. (Value:
 *        "AGENCY_SELECTED_CREATIVE_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedCrossChannelFromAddChannel
 *        Agency selected `cross channel` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_CROSS_CHANNEL_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedDisplayFromAddChannel
 *        Agency selected `display` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_DISPLAY_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMediaBuyerAsJobFunction
 *        Agency selected `media buyer` as job function. (Value:
 *        "AGENCY_SELECTED_MEDIA_BUYER_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMediaPlannerAsJobFunction
 *        Agency selected `media planner` as job function. (Value:
 *        "AGENCY_SELECTED_MEDIA_PLANNER_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedMobileFromAddChannel
 *        Agency selected `mobile` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_MOBILE_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInAfaMigration
 *        Agency opted in for migrating their exams to Academy for Ads. (Value:
 *        "AGENCY_SELECTED_OPT_IN_AFA_MIGRATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInBetaTestsAndMktResearch
 *        Agency selected `opt-in beta tests and market research`. (Value:
 *        "AGENCY_SELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInBetaTestsInMyProfilePortal
 *        Agency selected `opt-in beta tests` in profile portal. (Value:
 *        "AGENCY_SELECTED_OPT_IN_BETA_TESTS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInNewsInMyProfilePortal
 *        Agency selected `opt-in news` in profile portal. (Value:
 *        "AGENCY_SELECTED_OPT_IN_NEWS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInNewsInvitationsAndPromos
 *        Agency selected `opt-in news invitations and promotions`. (Value:
 *        "AGENCY_SELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInPerformanceSuggestions
 *        Agency selected `opt-in performance suggestions`. (Value:
 *        "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInPerformanceSugInMyProfilePortal
 *        Agency selected `opt-in performance SUG` in profile portal. (Value:
 *        "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUG_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptInSelectAllEmailNotifications
 *        Agency selected `opt-in select all email notifications`. (Value:
 *        "AGENCY_SELECTED_OPT_IN_SELECT_ALL_EMAIL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptOutAfaMigration
 *        Agency opted out for migrating their exams to Academy for Ads. (Value:
 *        "AGENCY_SELECTED_OPT_OUT_AFA_MIGRATION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOptOutUnselectAllEmailNotifications
 *        Agency selected `opt-out unselect all email notifications`. (Value:
 *        "AGENCY_SELECTED_OPT_OUT_UNSELECT_ALL_EMAIL_NOTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedOtherAsJobFunction
 *        Agency selected `other` as job function. (Value:
 *        "AGENCY_SELECTED_OTHER_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedProductionAsJobFunction
 *        Agency selected `production` as job function. (Value:
 *        "AGENCY_SELECTED_PRODUCTION_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSalesRepAsJobFunction
 *        Agency selected `sales rep` as job function. (Value:
 *        "AGENCY_SELECTED_SALES_REP_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSearchFromAddChannel
 *        Agency selected `search` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_SEARCH_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSearchSpecialistAsJobFunction
 *        Agency selected `search specialist` as job function. (Value:
 *        "AGENCY_SELECTED_SEARCH_SPECIALIST_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSelectAllOptInsInMyProfilePortal
 *        Agency selected `select all opt-ins` in profile portal. (Value:
 *        "AGENCY_SELECTED_SELECT_ALL_OPT_INS_IN_MY_PROFILE_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSeoAsJobFunction
 *        Agency selected `SEO` as job function. (Value:
 *        "AGENCY_SELECTED_SEO_AS_JOB_FUNCTION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedSocialFromAddChannel
 *        Agency selected `social` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_SOCIAL_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedToolsFromAddChannel
 *        Agency selected `tools` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_TOOLS_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySelectedYoutubeFromAddChannel
 *        Agency selected `YouTube` from add channel drop-down. (Value:
 *        "AGENCY_SELECTED_YOUTUBE_FROM_ADD_CHANNEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySuccessfullyConnectedWithCompanyInMyProfile
 *        Agency successfully connected with company in profile portal. (Value:
 *        "AGENCY_SUCCESSFULLY_CONNECTED_WITH_COMPANY_IN_MY_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySuccessfullyCreatedCompany
 *        Agency successfully created company. (Value:
 *        "AGENCY_SUCCESSFULLY_CREATED_COMPANY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencySuggestedToUser
 *        Agency was suggested to user for affiliation. (Value:
 *        "AGENCY_SUGGESTED_TO_USER")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnaffiliated
 *        Agency unaffiliated. (Value: "AGENCY_UNAFFILIATED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInBetaTestsAndMktResearch
 *        Agency unselected `opt-in beta tests and market research`. (Value:
 *        "AGENCY_UNSELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInNewsInvitationsAndPromos
 *        Agency unselected `opt-in news invitations and promotions`. (Value:
 *        "AGENCY_UNSELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_AgencyUnselectedOptInPerformanceSuggestions
 *        Agency unselected `opt-in performance suggestions`. (Value:
 *        "AGENCY_UNSELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_CancelledCompanySignUp
 *        User cancelled signing up their company. (Value:
 *        "CANCELLED_COMPANY_SIGN_UP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_CancelledIndividualSignUp
 *        User cancelled signing up. (Value: "CANCELLED_INDIVIDUAL_SIGN_UP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_Clicked Click
 *        occured. (Value: "CLICKED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_ClickedHelpAtBottom
 *        Clicked `help` at bottom. (Value: "CLICKED_HELP_AT_BOTTOM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_ClickedHelpAtTop
 *        Clicked `help` at top. (Value: "CLICKED_HELP_AT_TOP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_ClientError Client
 *        error occurred. (Value: "CLIENT_ERROR")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_EventActionUnspecified
 *        Unchosen. (Value: "EVENT_ACTION_UNSPECIFIED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_PartnerViewedBySmb
 *        Company viewed by advertiser. (Value: "PARTNER_VIEWED_BY_SMB")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactForm
 *        Advertiser canceled partner contact form. (Value:
 *        "SMB_CANCELED_PARTNER_CONTACT_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactFormOnGps
 *        Advertiser canceled partner contact form on Google Partner Search.
 *        (Value: "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCanceledPartnerContactFormOnProfilePage
 *        Advertiser canceled partner contact form on profile page. (Value:
 *        "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbChangedASearchParameterTop
 *        Advertiser changed a top search parameter. (Value:
 *        "SMB_CHANGED_A_SEARCH_PARAMETER_TOP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedAdwordsCertificateHelpIcon
 *        Advertiser clicked AdWords certificate help icon. (Value:
 *        "SMB_CLICKED_ADWORDS_CERTIFICATE_HELP_ICON")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedCompanyNameLinkToProfile
 *        Advertiser clicked `company name` link to profile. (Value:
 *        "SMB_CLICKED_COMPANY_NAME_LINK_TO_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartner
 *        Advertiser started partner contact form. (Value:
 *        "SMB_CLICKED_CONTACT_A_PARTNER")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartnerOnGps
 *        Advertiser started partner contact form on Google Partner Search.
 *        (Value: "SMB_CLICKED_CONTACT_A_PARTNER_ON_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedContactAPartnerOnProfilePage
 *        Advertiser started partner contact form on profile page. (Value:
 *        "SMB_CLICKED_CONTACT_A_PARTNER_ON_PROFILE_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedFindAPartnerButtonBottom
 *        Advertiser clicked `Find a partner` bottom button. (Value:
 *        "SMB_CLICKED_FIND_A_PARTNER_BUTTON_BOTTOM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedFindAPartnerButtonTop
 *        Advertiser clicked `Find a partner` top button. (Value:
 *        "SMB_CLICKED_FIND_A_PARTNER_BUTTON_TOP")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedPartnerWebsite
 *        Advertiser clicked partner website. (Value:
 *        "SMB_CLICKED_PARTNER_WEBSITE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedShowMorePartnersButtonBottom
 *        Advertiser clicked `Show more partners` bottom button. (Value:
 *        "SMB_CLICKED_SHOW_MORE_PARTNERS_BUTTON_BOTTOM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbClickedVideoAdsCertificateHelpIcon
 *        Advertiser clicked VideoAds certificate help icon. (Value:
 *        "SMB_CLICKED_VIDEO_ADS_CERTIFICATE_HELP_ICON")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactForm
 *        Advertiser completed partner contact form. (Value:
 *        "SMB_COMPLETED_PARTNER_CONTACT_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactFormOnGps
 *        Advertiser completed partner contact form on Google Partner Search.
 *        (Value: "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbCompletedPartnerContactFormOnProfilePage
 *        Advertiser completed contact form on profile page. (Value:
 *        "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredEmailInContactPartnerForm
 *        Advertiser entered email in contact form. (Value:
 *        "SMB_ENTERED_EMAIL_IN_CONTACT_PARTNER_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredNameInContactPartnerForm
 *        Advertiser entered name in contact form. (Value:
 *        "SMB_ENTERED_NAME_IN_CONTACT_PARTNER_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredPhoneInContactPartnerForm
 *        Advertiser entered phone in contact form. (Value:
 *        "SMB_ENTERED_PHONE_IN_CONTACT_PARTNER_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbEnteredWebsiteInContactPartnerForm
 *        Advertiser entered website in contact form. (Value:
 *        "SMB_ENTERED_WEBSITE_IN_CONTACT_PARTNER_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbFailedRecaptchaInContactPartnerForm
 *        Advertiser failed
 *        <a href="https://www.google.com/recaptcha/">reCaptcha</a>
 *        in contact form. (Value:
 *        "SMB_FAILED_RECAPTCHA_IN_CONTACT_PARTNER_FORM")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbNoPartnersAvailableWithSearchCriteria
 *        Advertiser saw no partners available with search criteria. (Value:
 *        "SMB_NO_PARTNERS_AVAILABLE_WITH_SEARCH_CRITERIA")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbPerformedSearchOnGps
 *        Advertiser performed search on Google Partner Search. (Value:
 *        "SMB_PERFORMED_SEARCH_ON_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsCertificate
 *        Advertiser viewed AdWords certificate. (Value:
 *        "SMB_VIEWED_ADWORDS_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsDisplayCertificate
 *        Advertiser viewed AdWords Display certificate. (Value:
 *        "SMB_VIEWED_ADWORDS_DISPLAY_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAdwordsSearchCertificate
 *        Advertiser viewed AdWords Search certificate. (Value:
 *        "SMB_VIEWED_ADWORDS_SEARCH_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAnalyticsCertificate
 *        Advertiser viewed Analytics certificate. (Value:
 *        "SMB_VIEWED_ANALYTICS_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAPartnerOnGps
 *        Advertiser viewed a partner on Google Partner Search. (Value:
 *        "SMB_VIEWED_A_PARTNER_ON_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedAPartnerProfile
 *        Advertiser viewed a partner profile. (Value:
 *        "SMB_VIEWED_A_PARTNER_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedDigitalSalesCertificate
 *        Advertiser viewed Digital Sales certificate. (Value:
 *        "SMB_VIEWED_DIGITAL_SALES_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedDoubleclickCertificate
 *        Advertiser viewed DoubleClick certificate. (Value:
 *        "SMB_VIEWED_DOUBLECLICK_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedMobileCertificate
 *        Advertiser clicked Mobile certificate help icon. (Value:
 *        "SMB_VIEWED_MOBILE_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedMobileSitesCertificate
 *        Advertiser viewed Mobile Sites certificate. (Value:
 *        "SMB_VIEWED_MOBILE_SITES_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedShoppingCertificate
 *        Advertiser clicked Shopping certificate help icon. (Value:
 *        "SMB_VIEWED_SHOPPING_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_SmbViewedVideoAdsCertificate
 *        Advertiser viewed VideoAds certificate. (Value:
 *        "SMB_VIEWED_VIDEO_ADS_CERTIFICATE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_VisitedAgencyPortal
 *        User visited the agency portal portion of Google Partners. (Value:
 *        "VISITED_AGENCY_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_VisitedGps User
 *        visited the Google Partner Search portion of Google Partners. (Value:
 *        "VISITED_GPS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventAction_VisitedLanding User
 *        visited the landing portion of Google Partners. (Value:
 *        "VISITED_LANDING")
 */
@property(nonatomic, copy, nullable) NSString *eventAction;

/**
 *  The category the action belongs to.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_EventCategoryUnspecified
 *        Unchosen. (Value: "EVENT_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_ExternalLinks
 *        External links category. (Value: "EXTERNAL_LINKS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerClient
 *        Google Partner client category. (Value: "GOOGLE_PARTNER_CLIENT")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerLanding
 *        Google Partner landing category. (Value: "GOOGLE_PARTNER_LANDING")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPanel
 *        Google Partner panel category. (Value: "GOOGLE_PARTNER_PANEL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortal
 *        Google Partner portal category. (Value: "GOOGLE_PARTNER_PORTAL")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCertifications
 *        Google Partner portal certifications category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_CERTIFICATIONS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalClients
 *        Google Partner portal clients category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_CLIENTS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCommunity
 *        Google Partner portal community category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_COMMUNITY")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalCompanyProfile
 *        Google Partner portal company profile category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_COMPANY_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalInsights
 *        Google Partner portal insights category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_INSIGHTS")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalLastAdminDialog
 *        Google Partner portal last admin dialog category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_LAST_ADMIN_DIALOG")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPortalMyProfile
 *        Google Partner portal my-profile category. (Value:
 *        "GOOGLE_PARTNER_PORTAL_MY_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerPublicUserProfile
 *        Google Partner portal public user profile category. (Value:
 *        "GOOGLE_PARTNER_PUBLIC_USER_PROFILE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerSearch
 *        Google Partner Search category. (Value: "GOOGLE_PARTNER_SEARCH")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventCategory_GooglePartnerSignupFlow
 *        Google Partner sign-up flow category. (Value:
 *        "GOOGLE_PARTNER_SIGNUP_FLOW")
 */
@property(nonatomic, copy, nullable) NSString *eventCategory;

/** List of event data for the event. */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_EventData *> *eventDatas;

/**
 *  The scope of the event.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventScope_EventScopeUnspecified
 *        Unchosen. (Value: "EVENT_SCOPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventScope_Page Based on page
 *        visit. (Value: "PAGE")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventScope_Session Based on
 *        session. (Value: "SESSION")
 *    @arg @c kGTLRPartners_LogUserEventRequest_EventScope_Visitor Based on
 *        visitor. (Value: "VISITOR")
 */
@property(nonatomic, copy, nullable) NSString *eventScope;

/** Advertiser lead information. */
@property(nonatomic, strong, nullable) GTLRPartners_Lead *lead;

/** Current request metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_RequestMetadata *requestMetadata;

/** The URL where the event occurred. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Response message for
 *  LogUserEvent.
 */
@interface GTLRPartners_LogUserEventResponse : GTLRObject

/** Current response metadata. */
@property(nonatomic, strong, nullable) GTLRPartners_ResponseMetadata *responseMetadata;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRPartners_Money : GTLRObject

/** The 3-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount.
 *  The value must be between -999,999,999 and +999,999,999 inclusive.
 *  If `units` is positive, `nanos` must be positive or zero.
 *  If `units` is zero, `nanos` can be positive, zero, or negative.
 *  If `units` is negative, `nanos` must be negative or zero.
 *  For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount.
 *  For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Customers qualified for an offer.
 */
@interface GTLRPartners_OfferCustomer : GTLRObject

/** URL to the customer's AdWords page. */
@property(nonatomic, copy, nullable) NSString *adwordsUrl;

/** Country code of the customer. */
@property(nonatomic, copy, nullable) NSString *countryCode;

/** Time the customer was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Days the customer is still eligible.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *eligibilityDaysLeft;

/**
 *  External CID for the customer.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *externalCid;

/** Formatted Get Y amount with currency code. */
@property(nonatomic, copy, nullable) NSString *getYAmount;

/** Name of the customer. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Type of the offer
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_OfferCustomer_OfferType_OfferTypeSpendMatch Spend
 *        Match up to Y. (Value: "OFFER_TYPE_SPEND_MATCH")
 *    @arg @c kGTLRPartners_OfferCustomer_OfferType_OfferTypeSpendXGetY AdWords
 *        spend X get Y. (Value: "OFFER_TYPE_SPEND_X_GET_Y")
 *    @arg @c kGTLRPartners_OfferCustomer_OfferType_OfferTypeUnspecified Unset.
 *        (Value: "OFFER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_OfferCustomer_OfferType_OfferTypeVideo Youtube
 *        video. (Value: "OFFER_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *offerType;

/** Formatted Spend X amount with currency code. */
@property(nonatomic, copy, nullable) NSString *spendXAmount;

@end


/**
 *  A set of opt-ins for a user.
 */
@interface GTLRPartners_OptIns : GTLRObject

/**
 *  An opt-in about receiving email from Partners marketing teams. Includes
 *  member-only events and special promotional offers for Google products.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *marketComm;

/**
 *  An opt-in about receiving email with customized AdWords campaign management
 *  tips.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *performanceSuggestions;

/**
 *  An opt-in to allow recieivng phone calls about their Partners account.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *phoneContact;

/**
 *  An opt-in to receive special promotional gifts and material in the mail.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *physicalMail;

/**
 *  An opt-in about receiving email regarding new features and products.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *specialOffers;

@end


/**
 *  Basic information from a public profile.
 */
@interface GTLRPartners_PublicProfile : GTLRObject

/**
 *  The URL to the main display image of the public profile. Being deprecated.
 */
@property(nonatomic, copy, nullable) NSString *displayImageUrl;

/** The display name of the public profile. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The ID which can be used to retrieve more details about the public profile.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The URL to the main profile image of the public profile. */
@property(nonatomic, copy, nullable) NSString *profileImage;

/** The URL of the public profile. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Information related to ranking of results.
 */
@interface GTLRPartners_Rank : GTLRObject

/**
 *  The type of rank.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_Rank_Type_RankTypeUnspecified Unchosen. (Value:
 *        "RANK_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPartners_Rank_Type_RtFinalScore Total final score. (Value:
 *        "RT_FINAL_SCORE")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The numerical value of the rank.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  <a href="https://www.google.com/recaptcha/">reCaptcha</a> challenge info.
 */
@interface GTLRPartners_RecaptchaChallenge : GTLRObject

/**
 *  The ID of the reCaptcha challenge.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The response to the reCaptcha challenge. */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  Common data that is in each API request.
 */
@interface GTLRPartners_RequestMetadata : GTLRObject

/** Experiment IDs the current request belongs to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *experimentIds;

/** Locale to use for the current request. */
@property(nonatomic, copy, nullable) NSString *locale;

/** Google Partners session ID. */
@property(nonatomic, copy, nullable) NSString *partnersSessionId;

/** Source of traffic for the current request. */
@property(nonatomic, strong, nullable) GTLRPartners_TrafficSource *trafficSource;

/**
 *  Values to use instead of the user's respective defaults for the current
 *  request. These are only honored by whitelisted products.
 */
@property(nonatomic, strong, nullable) GTLRPartners_UserOverrides *userOverrides;

@end


/**
 *  Common data that is in each API response.
 */
@interface GTLRPartners_ResponseMetadata : GTLRObject

/** Debug information about this request. */
@property(nonatomic, strong, nullable) GTLRPartners_DebugInfo *debugInfo;

@end


/**
 *  Agency specialization status
 */
@interface GTLRPartners_SpecializationStatus : GTLRObject

/**
 *  The specialization this status is for.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsDisplay
 *        AdWords Display specialization (Value:
 *        "BADGE_SPECIALIZATION_ADWORDS_DISPLAY")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsMobile
 *        AdWords Mobile specialization (Value:
 *        "BADGE_SPECIALIZATION_ADWORDS_MOBILE")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsSearch
 *        AdWords Search specialization (Value:
 *        "BADGE_SPECIALIZATION_ADWORDS_SEARCH")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsShopping
 *        AdWords Shopping specialization (Value:
 *        "BADGE_SPECIALIZATION_ADWORDS_SHOPPING")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationAdwordsVideo
 *        AdWords Video specialization (Value:
 *        "BADGE_SPECIALIZATION_ADWORDS_VIDEO")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecialization_BadgeSpecializationUnknown
 *        Unknown specialization (Value: "BADGE_SPECIALIZATION_UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *badgeSpecialization;

/**
 *  State of agency specialization.
 *
 *  Likely values:
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateInGrace
 *        Specialization in grace (Value: "BADGE_SPECIALIZATION_STATE_IN_GRACE")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateNotPassed
 *        Specialization not passed (Value:
 *        "BADGE_SPECIALIZATION_STATE_NOT_PASSED")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStatePassed
 *        Specialization passed (Value: "BADGE_SPECIALIZATION_STATE_PASSED")
 *    @arg @c kGTLRPartners_SpecializationStatus_BadgeSpecializationState_BadgeSpecializationStateUnknown
 *        Unknown state (Value: "BADGE_SPECIALIZATION_STATE_UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *badgeSpecializationState;

@end


/**
 *  Source of traffic for the current request.
 */
@interface GTLRPartners_TrafficSource : GTLRObject

/**
 *  Identifier to indicate where the traffic comes from.
 *  An identifier has multiple letters created by a team which redirected the
 *  traffic to us.
 */
@property(nonatomic, copy, nullable) NSString *trafficSourceId;

/**
 *  Second level identifier to indicate where the traffic comes from.
 *  An identifier has multiple letters created by a team which redirected the
 *  traffic to us.
 */
@property(nonatomic, copy, nullable) NSString *trafficSubId;

@end


/**
 *  A resource representing a user of the Partners platform.
 */
@interface GTLRPartners_User : GTLRObject

/**
 *  Whether or not the user has opted to share their Academy for Ads info with
 *  Google Partners.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *afaInfoShared;

/**
 *  This is the list of AdWords Manager Accounts the user has edit access to.
 *  If the user has edit access to multiple accounts, the user can choose the
 *  preferred account and we use this when a personal account is needed. Can
 *  be empty meaning the user has access to no accounts.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_AdWordsManagerAccountInfo *> *availableAdwordsManagerAccounts;

/**
 *  The list of achieved certifications. These are calculated based on exam
 *  results and other requirements.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_Certification *> *certificationStatus;

/**
 *  The company that the user is associated with.
 *  If not present, the user is not associated with any company.
 */
@property(nonatomic, strong, nullable) GTLRPartners_CompanyRelation *company;

/**
 *  The email address used by the user used for company verification.
 *  \@OutputOnly
 */
@property(nonatomic, copy, nullable) NSString *companyVerificationEmail;

/**
 *  The list of exams the user ever taken. For each type of exam, only one
 *  entry is listed.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPartners_ExamStatus *> *examStatus;

/**
 *  The ID of the user.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The internal user ID.
 *  Only available for a whitelisted set of api clients.
 */
@property(nonatomic, copy, nullable) NSString *internalId;

/**
 *  The most recent time the user interacted with the Partners site.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastAccessTime;

/**
 *  The list of emails the user has access to/can select as primary.
 *  \@OutputOnly
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *primaryEmails;

/**
 *  The profile information of a Partners user, contains all the directly
 *  editable user information.
 */
@property(nonatomic, strong, nullable) GTLRPartners_UserProfile *profile;

/**
 *  Information about a user's external public profile outside Google Partners.
 */
@property(nonatomic, strong, nullable) GTLRPartners_PublicProfile *publicProfile;

@end


/**
 *  Values to use instead of the user's respective defaults. These are only
 *  honored by whitelisted products.
 */
@interface GTLRPartners_UserOverrides : GTLRObject

/** IP address to use instead of the user's geo-located IP address. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** Logged-in user ID to impersonate instead of the user's ID. */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  The profile information of a Partners user.
 */
@interface GTLRPartners_UserProfile : GTLRObject

/** The user's mailing address, contains multiple fields. */
@property(nonatomic, strong, nullable) GTLRPartners_Location *address;

/**
 *  If the user has edit access to multiple accounts, the user can choose the
 *  preferred account and it is used when a personal account is needed. Can
 *  be empty.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adwordsManagerAccount;

/**
 *  A list of ids representing which channels the user selected they were in.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *channels;

/**
 *  The email address the user has selected on the Partners site as primary.
 */
@property(nonatomic, copy, nullable) NSString *emailAddress;

/** The list of opt-ins for the user, related to communication preferences. */
@property(nonatomic, strong, nullable) GTLRPartners_OptIns *emailOptIns;

/** The user's family name. */
@property(nonatomic, copy, nullable) NSString *familyName;

/** The user's given name. */
@property(nonatomic, copy, nullable) NSString *givenName;

/** A list of ids representing which industries the user selected. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *industries;

/** A list of ids represnting which job categories the user selected. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *jobFunctions;

/** The list of languages this user understands. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *languages;

/** A list of ids representing which markets the user was interested in. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *markets;

/**
 *  Whether or not to migrate the user's exam data to Academy for Ads.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *migrateToAfa;

/** The user's phone number. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** The user's primary country, an ISO 2-character code. */
@property(nonatomic, copy, nullable) NSString *primaryCountryCode;

/**
 *  Whether the user's public profile is visible to anyone with the URL.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *profilePublic;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
