// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1alpha1)
// Description:
//   The Network Connectivity API will be home to various services which provide
//   information pertaining to network connectivity.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRNetworkconnectivity_Attributes;
@class GTLRNetworkconnectivity_Attributes_AttributeMap;
@class GTLRNetworkconnectivity_AttributeValue;
@class GTLRNetworkconnectivity_AuditConfig;
@class GTLRNetworkconnectivity_AuditLogConfig;
@class GTLRNetworkconnectivity_Binding;
@class GTLRNetworkconnectivity_Distribution;
@class GTLRNetworkconnectivity_Exemplar;
@class GTLRNetworkconnectivity_Exemplar_Attachments_Item;
@class GTLRNetworkconnectivity_ExplicitBuckets;
@class GTLRNetworkconnectivity_ExponentialBuckets;
@class GTLRNetworkconnectivity_Expr;
@class GTLRNetworkconnectivity_GoogleLongrunningOperation;
@class GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata;
@class GTLRNetworkconnectivity_GoogleLongrunningOperation_Response;
@class GTLRNetworkconnectivity_GoogleRpcStatus;
@class GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item;
@class GTLRNetworkconnectivity_HttpRequest;
@class GTLRNetworkconnectivity_Hub;
@class GTLRNetworkconnectivity_Hub_Labels;
@class GTLRNetworkconnectivity_LinearBuckets;
@class GTLRNetworkconnectivity_Location;
@class GTLRNetworkconnectivity_Location_Labels;
@class GTLRNetworkconnectivity_Location_Metadata;
@class GTLRNetworkconnectivity_LogEntry;
@class GTLRNetworkconnectivity_LogEntry_Labels;
@class GTLRNetworkconnectivity_LogEntry_ProtoPayload;
@class GTLRNetworkconnectivity_LogEntry_StructPayload;
@class GTLRNetworkconnectivity_LogEntryOperation;
@class GTLRNetworkconnectivity_LogEntrySourceLocation;
@class GTLRNetworkconnectivity_MetricValue;
@class GTLRNetworkconnectivity_MetricValue_Labels;
@class GTLRNetworkconnectivity_MetricValueSet;
@class GTLRNetworkconnectivity_Money;
@class GTLRNetworkconnectivity_Operation;
@class GTLRNetworkconnectivity_Operation_Extensions_Item;
@class GTLRNetworkconnectivity_Operation_Labels;
@class GTLRNetworkconnectivity_Operation_UserLabels;
@class GTLRNetworkconnectivity_Policy;
@class GTLRNetworkconnectivity_QuotaProperties;
@class GTLRNetworkconnectivity_ReportRequest;
@class GTLRNetworkconnectivity_ResourceInfo;
@class GTLRNetworkconnectivity_RouterApplianceInstance;
@class GTLRNetworkconnectivity_Spoke;
@class GTLRNetworkconnectivity_Spoke_Labels;
@class GTLRNetworkconnectivity_TraceSpan;
@class GTLRNetworkconnectivity_TruncatableString;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_Hub.state

/**
 *  The resource is active
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Hub_State_Active;
/**
 *  The resource's create operation is in progress
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Hub_State_Creating;
/**
 *  The resource's Delete operation is in progress
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Hub_State_Deleting;
/**
 *  No state information available
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Hub_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_LogEntry.severity

/**
 *  (700) A person must take an action immediately.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Alert;
/**
 *  (600) Critical events cause more severe problems or outages.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Critical;
/**
 *  (100) Debug or trace information.
 *
 *  Value: "DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Debug;
/**
 *  (0) The log entry has no assigned severity level.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Default;
/**
 *  (800) One or more systems are unusable.
 *
 *  Value: "EMERGENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Emergency;
/**
 *  (500) Error events are likely to cause problems.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Error;
/**
 *  (200) Routine information, such as ongoing status or performance.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Info;
/**
 *  (300) Normal but significant events, such as start up, shut down, or a
 *  configuration change.
 *
 *  Value: "NOTICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Notice;
/**
 *  (400) Warning events might cause problems.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_LogEntry_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_Operation.importance

/**
 *  Deprecated. Do not use. Disables data aggregation and enables additional
 *  validation logic. It should only be used during the onboarding process. It
 *  is only available to Google internal services, and the service must be
 *  approved by chemist-dev\@google.com in order to use this level.
 *
 *  Value: "DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Operation_Importance_Debug;
/**
 *  Disables data aggregation to minimize data loss. It is for operations that
 *  contains significant monetary value or audit trail. This feature only
 *  applies to the client libraries.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Operation_Importance_High;
/**
 *  Allows data caching, batching, and aggregation. It provides higher
 *  performance with higher data loss risk.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Operation_Importance_Low;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_QuotaProperties.quotaMode

/**
 *  Decreases available quota by the cost specified for the operation. If cost
 *  is higher than available quota, operation fails and returns error.
 *
 *  Value: "ACQUIRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Acquire;
/**
 *  Decreases available quota by the cost specified for the operation. If cost
 *  is higher than available quota, operation does not fail and available quota
 *  goes down to zero but it returns error.
 *
 *  Value: "ACQUIRE_BEST_EFFORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_AcquireBestEffort;
/**
 *  Does not change any available quota. Only checks if there is enough quota.
 *  No lock is placed on the checked tokens neither.
 *
 *  Value: "CHECK"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Check;
/**
 *  Increases available quota by the operation cost specified for the operation.
 *
 *  Value: "RELEASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Release;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_Spoke.state

/**
 *  The resource is active
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Spoke_State_Active;
/**
 *  The resource's create operation is in progress
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Spoke_State_Creating;
/**
 *  The resource's Delete operation is in progress
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Spoke_State_Deleting;
/**
 *  No state information available
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_Spoke_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkconnectivity_TraceSpan.spanKind

/**
 *  Indicates that the span covers the client-side wrapper around an RPC or
 *  other remote request.
 *
 *  Value: "CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_Client;
/**
 *  Indicates that the span describes consumer receiving a message from a
 *  broker. Unlike client and server, there is no direct critical path latency
 *  relationship between producer and consumer spans (e.g. receiving a message
 *  from a pubsub service subscription).
 *
 *  Value: "CONSUMER"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_Consumer;
/**
 *  Indicates that the span is used internally. Default value.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_Internal;
/**
 *  Indicates that the span describes producer sending a message to a broker.
 *  Unlike client and server, there is no direct critical path latency
 *  relationship between producer and consumer spans (e.g. publishing a message
 *  to a pubsub service).
 *
 *  Value: "PRODUCER"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_Producer;
/**
 *  Indicates that the span covers server-side handling of an RPC or other
 *  remote network request.
 *
 *  Value: "SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_Server;
/**
 *  Unspecified. Do NOT use as default. Implementations MAY assume
 *  SpanKind.INTERNAL to be default.
 *
 *  Value: "SPAN_KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivity_TraceSpan_SpanKind_SpanKindUnspecified;

/**
 *  A set of attributes, each in the format `[KEY]:[VALUE]`.
 */
@interface GTLRNetworkconnectivity_Attributes : GTLRObject

/**
 *  The set of attributes. Each attribute's key can be up to 128 bytes long. The
 *  value can be a string up to 256 bytes, a signed 64-bit integer, or the
 *  Boolean values `true` and `false`. For example: "/instance_id":
 *  "my-instance" "/http/user_agent": "" "/http/request_bytes": 300
 *  "abc.com/myattribute": true
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Attributes_AttributeMap *attributeMap;

/**
 *  The number of attributes that were discarded. Attributes can be discarded
 *  because their keys are too long or because there are too many attributes. If
 *  this value is 0 then all attributes are valid.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *droppedAttributesCount;

@end


/**
 *  The set of attributes. Each attribute's key can be up to 128 bytes long. The
 *  value can be a string up to 256 bytes, a signed 64-bit integer, or the
 *  Boolean values `true` and `false`. For example: "/instance_id":
 *  "my-instance" "/http/user_agent": "" "/http/request_bytes": 300
 *  "abc.com/myattribute": true
 *
 *  @note This class is documented as having more properties of
 *        GTLRNetworkconnectivity_AttributeValue. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Attributes_AttributeMap : GTLRObject
@end


/**
 *  The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.
 */
@interface GTLRNetworkconnectivity_AttributeValue : GTLRObject

/**
 *  A Boolean value represented by `true` or `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/**
 *  A 64-bit signed integer.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intValue;

/** A string up to 256 bytes long. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_TruncatableString *stringValue;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts jose\@example.com from DATA_READ logging, and
 *  aliya\@example.com from DATA_WRITE logging.
 */
@interface GTLRNetworkconnectivity_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRNetworkconnectivity_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataRead Data
 *        reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRNetworkconnectivity_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Message for reporting billing requests through Eventstream.
 */
@interface GTLRNetworkconnectivity_BillingView : GTLRObject

/**
 *  Billing requests to be reported for cloud.eventstream.v2.ResourceEvent Each
 *  request contains billing operations to be reported under a service name. See
 *  go/billing-view-construction for documentation on constructing billing view
 *  report requests.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_ReportRequest *> *reportRequests;

@end


/**
 *  Associates `members` with a `role`.
 */
@interface GTLRNetworkconnectivity_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the members in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Expr *condition;

/**
 *  Specifies the identities requesting access for a Cloud Platform resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. *
 *  `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@example.com` . * `serviceAccount:{emailid}`:
 *  An email address that represents a service account. For example,
 *  `my-other-app\@appspot.gserviceaccount.com`. * `group:{emailid}`: An email
 *  address that represents a Google group. For example, `admins\@example.com`.
 *  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to `members`. For example, `roles/viewer`,
 *  `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Distribution represents a frequency distribution of double-valued sample
 *  points. It contains the size of the population of sample points plus
 *  additional optional information: - the arithmetic mean of the samples - the
 *  minimum and maximum of the samples - the sum-squared-deviation of the
 *  samples, used to compute variance - a histogram of the values of the sample
 *  points
 */
@interface GTLRNetworkconnectivity_Distribution : GTLRObject

/**
 *  The number of samples in each histogram bucket. `bucket_counts` are
 *  optional. If present, they must sum to the `count` value. The buckets are
 *  defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is
 *  the number of samples in the underflow bucket. `bucket_counts[1]` to
 *  `bucket_counts[N-1]` are the numbers of samples in each of the finite
 *  buckets. And `bucket_counts[N] is the number of samples in the overflow
 *  bucket. See the comments of `bucket_option` below for more details. Any
 *  suffix of trailing zeros may be omitted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bucketCounts;

/**
 *  The total number of samples in the distribution. Must be >= 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Example points. Must be in increasing order of `value` field. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Exemplar *> *exemplars;

/** Buckets with arbitrary user-provided width. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_ExplicitBuckets *explicitBuckets;

/** Buckets with exponentially growing width. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_ExponentialBuckets *exponentialBuckets;

/** Buckets with constant width. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LinearBuckets *linearBuckets;

/**
 *  The maximum of the population of values. Ignored if `count` is zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  The arithmetic mean of the samples in the distribution. If `count` is zero
 *  then this field must be zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mean;

/**
 *  The minimum of the population of values. Ignored if `count` is zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

/**
 *  The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2)
 *  where each x_i is a sample values. If `count` is zero then this field must
 *  be zero, otherwise validation of the request fails.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sumOfSquaredDeviation;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
 *  representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRNetworkconnectivity_Empty : GTLRObject
@end


/**
 *  Exemplars are example points that may be used to annotate aggregated
 *  distribution values. They are metadata that gives information about a
 *  particular value added to a Distribution bucket, such as a trace ID that was
 *  active when a value was added. They may contain further information, such as
 *  a example values and timestamps, origin, etc.
 */
@interface GTLRNetworkconnectivity_Exemplar : GTLRObject

/**
 *  Contextual information about the example value. Examples are: Trace:
 *  type.googleapis.com/google.monitoring.v3.SpanContext Literal string:
 *  type.googleapis.com/google.protobuf.StringValue Labels dropped during
 *  aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabels There
 *  may be only a single attachment of any given message type in a single
 *  exemplar, and this is enforced by the system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Exemplar_Attachments_Item *> *attachments;

/** The observation (sampling) time of the above value. */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Value of the exemplar point. This value determines to which bucket the
 *  exemplar belongs.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRNetworkconnectivity_Exemplar_Attachments_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Exemplar_Attachments_Item : GTLRObject
@end


/**
 *  Describing buckets with arbitrary user-provided width.
 */
@interface GTLRNetworkconnectivity_ExplicitBuckets : GTLRObject

/**
 *  'bound' is a list of strictly increasing boundaries between buckets. Note
 *  that a list of length N-1 defines N buckets because of fenceposting. See
 *  comments on `bucket_options` for details. The i'th finite bucket covers the
 *  interval [bound[i-1], bound[i]) where i ranges from 1 to bound_size() - 1.
 *  Note that there are no finite buckets at all if 'bound' only contains a
 *  single element; in that special case the single bound defines the boundary
 *  between the underflow and overflow buckets. bucket number lower bound upper
 *  bound i == 0 (underflow) -inf bound[i] 0 < i < bound_size() bound[i-1]
 *  bound[i] i == bound_size() (overflow) bound[i-1] +inf
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bounds;

@end


/**
 *  Describing buckets with exponentially growing width.
 */
@interface GTLRNetworkconnectivity_ExponentialBuckets : GTLRObject

/**
 *  The i'th exponential bucket covers the interval [scale *
 *  growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to
 *  num_finite_buckets inclusive. Must be larger than 1.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *growthFactor;

/**
 *  The number of finite buckets. With the underflow and overflow buckets, the
 *  total number of buckets is `num_finite_buckets` + 2. See comments on
 *  `bucket_options` for details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  The i'th exponential bucket covers the interval [scale *
 *  growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to
 *  num_finite_buckets inclusive. Must be > 0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scale;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRNetworkconnectivity_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest : GTLRObject
@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRNetworkconnectivity_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRNetworkconnectivity_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  A common proto for logging HTTP requests. Only contains semantics defined by
 *  the HTTP specification. Product-specific logging information MUST be defined
 *  in a separate message.
 */
@interface GTLRNetworkconnectivity_HttpRequest : GTLRObject

/**
 *  The number of HTTP response bytes inserted into cache. Set only when a cache
 *  fill was attempted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheFillBytes;

/**
 *  Whether or not an entity was served from cache (with or without validation).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheHit;

/**
 *  Whether or not a cache lookup was attempted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheLookup;

/**
 *  Whether or not the response was validated with the origin server before
 *  being served from cache. This field is only meaningful if `cache_hit` is
 *  True.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheValidatedWithOriginServer;

/**
 *  The request processing latency on the server, from the time the request was
 *  received until the response was sent.
 */
@property(nonatomic, strong, nullable) GTLRDuration *latency;

/**
 *  Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  The referer URL of the request, as defined in [HTTP/1.1 Header Field
 *  Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
 */
@property(nonatomic, copy, nullable) NSString *referer;

/**
 *  The IP address (IPv4 or IPv6) of the client that issued the HTTP request.
 *  Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
 */
@property(nonatomic, copy, nullable) NSString *remoteIp;

/** The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`. */
@property(nonatomic, copy, nullable) NSString *requestMethod;

/**
 *  The size of the HTTP request message in bytes, including the request headers
 *  and the request body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestSize;

/**
 *  The scheme (http, https), the host name, the path, and the query portion of
 *  the URL that was requested. Example:
 *  `"http://example.com/some/info?color=red"`.
 */
@property(nonatomic, copy, nullable) NSString *requestUrl;

/**
 *  The size of the HTTP response message sent back to the client, in bytes,
 *  including the response headers and the response body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseSize;

/**
 *  The IP address (IPv4 or IPv6) of the origin server that the request was sent
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *serverIp;

/**
 *  The response code indicating the status of the response. Examples: 200, 404.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *status;

/**
 *  The user agent sent by the client. Example: `"Mozilla/4.0 (compatible; MSIE
 *  6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

@end


/**
 *  Network Connectivity Center is a hub-and-spoke abstraction for network
 *  connectivity management in Google Cloud. It reduces operational complexity
 *  through a simple, centralized connectivity management model. Following is
 *  the resource message of a hub.
 */
@interface GTLRNetworkconnectivity_Hub : GTLRObject

/** Time when the Hub was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Short description of the hub resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-defined labels. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Hub_Labels *labels;

/** Immutable. The name of a Hub resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. A list of the URIs of all attached spokes */
@property(nonatomic, strong, nullable) NSArray<NSString *> *spokes;

/**
 *  Output only. The current lifecycle state of this Hub.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_Hub_State_Active The resource is active
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkconnectivity_Hub_State_Creating The resource's create
 *        operation is in progress (Value: "CREATING")
 *    @arg @c kGTLRNetworkconnectivity_Hub_State_Deleting The resource's Delete
 *        operation is in progress (Value: "DELETING")
 *    @arg @c kGTLRNetworkconnectivity_Hub_State_StateUnspecified No state
 *        information available (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Google-generated UUID for this resource. This is unique across
 *  all Hub resources. If a Hub resource is deleted and another with the same
 *  name is created, it gets a different unique_id.
 */
@property(nonatomic, copy, nullable) NSString *uniqueId;

/** Time when the Hub was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  User-defined labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Hub_Labels : GTLRObject
@end


/**
 *  Describing buckets with constant width.
 */
@interface GTLRNetworkconnectivity_LinearBuckets : GTLRObject

/**
 *  The number of finite buckets. With the underflow and overflow buckets, the
 *  total number of buckets is `num_finite_buckets` + 2. See comments on
 *  `bucket_options` for details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  The i'th linear bucket covers the interval [offset + (i-1) * width, offset +
 *  i * width) where i ranges from 1 to num_finite_buckets, inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The i'th linear bucket covers the interval [offset + (i-1) * width, offset +
 *  i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be
 *  strictly positive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Response for HubService.ListHubs method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "hubs" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkconnectivity_ListHubsResponse : GTLRCollectionObject

/**
 *  Hubs to be returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Hub *> *hubs;

/**
 *  The next pagination token in the List response. It should be used as
 *  page_token for the following request. An empty value means no more result.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkconnectivity_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for HubService.ListSpokes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "spokes" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkconnectivity_ListSpokesResponse : GTLRCollectionObject

/**
 *  The next pagination token in the List response. It should be used as
 *  page_token for the following request. An empty value means no more result.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Spokes to be returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Spoke *> *spokes;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRNetworkconnectivity_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Location_Metadata : GTLRObject
@end


/**
 *  An individual log entry.
 */
@interface GTLRNetworkconnectivity_LogEntry : GTLRObject

/**
 *  Optional. Information about the HTTP request associated with this log entry,
 *  if applicable.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_HttpRequest *httpRequest;

/**
 *  A unique ID for the log entry used for deduplication. If omitted, the
 *  implementation will generate one based on operation_id.
 */
@property(nonatomic, copy, nullable) NSString *insertId;

/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the log entry.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LogEntry_Labels *labels;

/**
 *  Required. The log to which this log entry belongs. Examples: `"syslog"`,
 *  `"book_log"`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Information about an operation associated with the log entry, if
 *  applicable.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LogEntryOperation *operation;

/**
 *  The log entry payload, represented as a protocol buffer that is expressed as
 *  a JSON object. The only accepted type currently is AuditLog.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LogEntry_ProtoPayload *protoPayload;

/**
 *  The severity of the log entry. The default value is `LogSeverity.DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Alert (700) A person
 *        must take an action immediately. (Value: "ALERT")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Critical (600) Critical
 *        events cause more severe problems or outages. (Value: "CRITICAL")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Debug (100) Debug or
 *        trace information. (Value: "DEBUG")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Default (0) The log
 *        entry has no assigned severity level. (Value: "DEFAULT")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Emergency (800) One or
 *        more systems are unusable. (Value: "EMERGENCY")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Error (500) Error
 *        events are likely to cause problems. (Value: "ERROR")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Info (200) Routine
 *        information, such as ongoing status or performance. (Value: "INFO")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Notice (300) Normal but
 *        significant events, such as start up, shut down, or a configuration
 *        change. (Value: "NOTICE")
 *    @arg @c kGTLRNetworkconnectivity_LogEntry_Severity_Warning (400) Warning
 *        events might cause problems. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Optional. Source code location information associated with the log entry, if
 *  any.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LogEntrySourceLocation *sourceLocation;

/**
 *  The log entry payload, represented as a structure that is expressed as a
 *  JSON object.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_LogEntry_StructPayload *structPayload;

/** The log entry payload, represented as a Unicode string (UTF-8). */
@property(nonatomic, copy, nullable) NSString *textPayload;

/**
 *  The time the event described by the log entry occurred. If omitted, defaults
 *  to operation start time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Optional. Resource name of the trace associated with the log entry, if any.
 *  If this field contains a relative resource name, you can assume the name is
 *  relative to `//tracing.googleapis.com`. Example:
 *  `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
 */
@property(nonatomic, copy, nullable) NSString *trace;

@end


/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the log entry.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_LogEntry_Labels : GTLRObject
@end


/**
 *  The log entry payload, represented as a protocol buffer that is expressed as
 *  a JSON object. The only accepted type currently is AuditLog.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_LogEntry_ProtoPayload : GTLRObject
@end


/**
 *  The log entry payload, represented as a structure that is expressed as a
 *  JSON object.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_LogEntry_StructPayload : GTLRObject
@end


/**
 *  Additional information about a potentially long-running operation with which
 *  a log entry is associated.
 */
@interface GTLRNetworkconnectivity_LogEntryOperation : GTLRObject

/**
 *  Optional. Set this to True if this is the first log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *first;

/**
 *  Optional. An arbitrary operation identifier. Log entries with the same
 *  identifier are assumed to be part of the same operation.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Optional. Set this to True if this is the last log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *last;

/**
 *  Optional. An arbitrary producer identifier. The combination of `id` and
 *  `producer` must be globally unique. Examples for `producer`:
 *  `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
 */
@property(nonatomic, copy, nullable) NSString *producer;

@end


/**
 *  Additional information about the source code location that produced the log
 *  entry.
 */
@interface GTLRNetworkconnectivity_LogEntrySourceLocation : GTLRObject

/**
 *  Optional. Source file name. Depending on the runtime environment, this might
 *  be a simple name or a fully-qualified name.
 */
@property(nonatomic, copy, nullable) NSString *file;

/**
 *  Optional. Human-readable name of the function or method being invoked, with
 *  optional context such as the class or package name. This information may be
 *  used in contexts such as the logs viewer, where a file and line number are
 *  less meaningful. The format can vary by language. For example:
 *  `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
 *  (Python).
 */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  Optional. Line within the source file. 1-based; 0 indicates no line number
 *  available.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *line;

@end


/**
 *  Represents a single metric value.
 */
@interface GTLRNetworkconnectivity_MetricValue : GTLRObject

/**
 *  A boolean value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/** A distribution value. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Distribution *distributionValue;

/**
 *  A double precision floating point value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  The end of the time period over which this metric value's measurement
 *  applies. If not specified, google.api.servicecontrol.v1.Operation.end_time
 *  will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  A signed 64-bit integer value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *int64Value;

/**
 *  The labels describing the metric value. See comments on
 *  google.api.servicecontrol.v1.Operation.labels for the overriding
 *  relationship. Note that this map must not contain monitored resource labels.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_MetricValue_Labels *labels;

/** A money value. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Money *moneyValue;

/**
 *  The start of the time period over which this metric value's measurement
 *  applies. The time period has different semantics for different metric types
 *  (cumulative, delta, and gauge). See the metric definition documentation in
 *  the service configuration for details. If not specified,
 *  google.api.servicecontrol.v1.Operation.start_time will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** A text string value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  The labels describing the metric value. See comments on
 *  google.api.servicecontrol.v1.Operation.labels for the overriding
 *  relationship. Note that this map must not contain monitored resource labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_MetricValue_Labels : GTLRObject
@end


/**
 *  Represents a set of metric values in the same metric. Each metric value in
 *  the set should have a unique combination of start time, end time, and label
 *  values.
 */
@interface GTLRNetworkconnectivity_MetricValueSet : GTLRObject

/** The metric name defined in the service configuration. */
@property(nonatomic, copy, nullable) NSString *metricName;

/** The values in this metric. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_MetricValue *> *metricValues;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRNetworkconnectivity_Money : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Represents information regarding an operation.
 */
@interface GTLRNetworkconnectivity_Operation : GTLRObject

/**
 *  Identity of the consumer who is using the service. This field should be
 *  filled in for the operations initiated by a consumer, but not for
 *  service-initiated operations that are not related to a specific consumer. -
 *  This can be in one of the following formats: - project:PROJECT_ID, -
 *  project`_`number:PROJECT_NUMBER, - projects/PROJECT_ID or PROJECT_NUMBER, -
 *  folders/FOLDER_NUMBER, - organizations/ORGANIZATION_NUMBER, -
 *  api`_`key:API_KEY.
 */
@property(nonatomic, copy, nullable) NSString *consumerId;

/**
 *  End time of the operation. Required when the operation is used in
 *  ServiceController.Report, but optional when the operation is used in
 *  ServiceController.Check.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Unimplemented. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Operation_Extensions_Item *> *extensions;

/**
 *  DO NOT USE. This is an experimental field.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_Operation_Importance_Debug Deprecated. Do
 *        not use. Disables data aggregation and enables additional validation
 *        logic. It should only be used during the onboarding process. It is
 *        only available to Google internal services, and the service must be
 *        approved by chemist-dev\@google.com in order to use this level.
 *        (Value: "DEBUG")
 *    @arg @c kGTLRNetworkconnectivity_Operation_Importance_High Disables data
 *        aggregation to minimize data loss. It is for operations that contains
 *        significant monetary value or audit trail. This feature only applies
 *        to the client libraries. (Value: "HIGH")
 *    @arg @c kGTLRNetworkconnectivity_Operation_Importance_Low Allows data
 *        caching, batching, and aggregation. It provides higher performance
 *        with higher data loss risk. (Value: "LOW")
 */
@property(nonatomic, copy, nullable) NSString *importance;

/**
 *  Labels describing the operation. Only the following labels are allowed: -
 *  Labels describing monitored resources as defined in the service
 *  configuration. - Default labels of metric values. When specified, labels
 *  defined in the metric value override these default. - The following labels
 *  defined by Google Cloud Platform: - `cloud.googleapis.com/location`
 *  describing the location where the operation happened, -
 *  `servicecontrol.googleapis.com/user_agent` describing the user agent of the
 *  API request, - `servicecontrol.googleapis.com/service_agent` describing the
 *  service used to handle the API request (e.g. ESP), -
 *  `servicecontrol.googleapis.com/platform` describing the platform where the
 *  API is served, such as App Engine, Compute Engine, or Kubernetes Engine.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Operation_Labels *labels;

/** Represents information to be logged. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_LogEntry *> *logEntries;

/**
 *  Represents information about this operation. Each MetricValueSet corresponds
 *  to a metric defined in the service configuration. The data type used in the
 *  MetricValueSet must agree with the data type specified in the metric
 *  definition. Within a single operation, it is not allowed to have more than
 *  one MetricValue instances that have the same metric names and identical
 *  label value combinations. If a request has such duplicated MetricValue
 *  instances, the entire request is rejected with an invalid argument error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_MetricValueSet *> *metricValueSets;

/**
 *  Identity of the operation. This must be unique within the scope of the
 *  service that generated the operation. If the service calls Check() and
 *  Report() on the same operation, the two calls should carry the same id. UUID
 *  version 4 is recommended, though not required. In scenarios where an
 *  operation is computed from existing information and an idempotent id is
 *  desirable for deduplication purpose, UUID version 5 is recommended. See RFC
 *  4122 for details.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/** Fully qualified name of the operation. Reserved for future use. */
@property(nonatomic, copy, nullable) NSString *operationName;

/**
 *  Represents the properties needed for quota check. Applicable only if this
 *  operation is for a quota check request. If this is not specified, no quota
 *  check will be performed.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_QuotaProperties *quotaProperties;

/**
 *  The resources that are involved in the operation. The maximum supported
 *  number of entries in this field is 100.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_ResourceInfo *> *resources;

/** Required. Start time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Unimplemented. A list of Cloud Trace spans. The span names shall contain the
 *  id of the destination project which can be either the produce or the
 *  consumer project.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_TraceSpan *> *traceSpans;

/**
 *  Private Preview. This feature is only available for approved services. User
 *  defined labels for the resource that this operation is associated with. Only
 *  a combination of 1000 user labels per consumer project are allowed.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Operation_UserLabels *userLabels;

@end


/**
 *  GTLRNetworkconnectivity_Operation_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Operation_Extensions_Item : GTLRObject
@end


/**
 *  Labels describing the operation. Only the following labels are allowed: -
 *  Labels describing monitored resources as defined in the service
 *  configuration. - Default labels of metric values. When specified, labels
 *  defined in the metric value override these default. - The following labels
 *  defined by Google Cloud Platform: - `cloud.googleapis.com/location`
 *  describing the location where the operation happened, -
 *  `servicecontrol.googleapis.com/user_agent` describing the user agent of the
 *  API request, - `servicecontrol.googleapis.com/service_agent` describing the
 *  service used to handle the API request (e.g. ESP), -
 *  `servicecontrol.googleapis.com/platform` describing the platform where the
 *  API is served, such as App Engine, Compute Engine, or Kubernetes Engine.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Operation_Labels : GTLRObject
@end


/**
 *  Private Preview. This feature is only available for approved services. User
 *  defined labels for the resource that this operation is associated with. Only
 *  a combination of 1000 user labels per consumer project are allowed.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Operation_UserLabels : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRNetworkconnectivity_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have successfully been cancelled have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members` to a single `role`.
 *  Members can be user accounts, service accounts, Google groups, and domains
 *  (such as G Suite). A `role` is a named list of permissions; each `role` can
 *  be an IAM predefined role or a user-created custom role. For some types of
 *  Google Cloud resources, a `binding` can also specify a `condition`, which is
 *  a logical expression that allows access to a resource only if the expression
 *  evaluates to `true`. A condition can add constraints based on attributes of
 *  the request, the resource, or both. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= -
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRNetworkconnectivity_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members` to a `role`. Optionally, may specify a
 *  `condition` that determines how and when the `bindings` are applied. Each of
 *  the `bindings` must contain at least one member.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Represents the properties needed for quota operations.
 */
@interface GTLRNetworkconnectivity_QuotaProperties : GTLRObject

/**
 *  Quota mode for this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Acquire
 *        Decreases available quota by the cost specified for the operation. If
 *        cost is higher than available quota, operation fails and returns
 *        error. (Value: "ACQUIRE")
 *    @arg @c kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_AcquireBestEffort
 *        Decreases available quota by the cost specified for the operation. If
 *        cost is higher than available quota, operation does not fail and
 *        available quota goes down to zero but it returns error. (Value:
 *        "ACQUIRE_BEST_EFFORT")
 *    @arg @c kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Check Does not
 *        change any available quota. Only checks if there is enough quota. No
 *        lock is placed on the checked tokens neither. (Value: "CHECK")
 *    @arg @c kGTLRNetworkconnectivity_QuotaProperties_QuotaMode_Release
 *        Increases available quota by the operation cost specified for the
 *        operation. (Value: "RELEASE")
 */
@property(nonatomic, copy, nullable) NSString *quotaMode;

@end


/**
 *  Request message for the Report method.
 */
@interface GTLRNetworkconnectivity_ReportRequest : GTLRObject

/**
 *  Operations to be reported. Typically the service should report one operation
 *  per request. Putting multiple operations into a single request is allowed,
 *  but should be used only when multiple operations are natually available at
 *  the time of the report. There is no limit on the number of operations in the
 *  same ReportRequest, however the ReportRequest size should be no larger than
 *  1MB. See ReportResponse.report_errors for partial failure behavior.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_Operation *> *operations;

/**
 *  Specifies which version of service config should be used to process the
 *  request. If unspecified or no matching version can be found, the latest one
 *  will be used.
 */
@property(nonatomic, copy, nullable) NSString *serviceConfigId;

/**
 *  The service name as specified in its service configuration. For example,
 *  `"pubsub.googleapis.com"`. See
 *  [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
 *  for the definition of a service name.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

@end


/**
 *  Describes a resource associated with this operation.
 */
@interface GTLRNetworkconnectivity_ResourceInfo : GTLRObject

/**
 *  The identifier of the parent of this resource instance. Must be in one of
 *  the following formats: - `projects/` - `folders/` - `organizations/`
 */
@property(nonatomic, copy, nullable) NSString *resourceContainer;

/**
 *  The location of the resource. If not empty, the resource will be checked
 *  against location policy. The value must be a valid zone, region or
 *  multiregion. For example: "europe-west4" or "northamerica-northeast1-a"
 */
@property(nonatomic, copy, nullable) NSString *resourceLocation;

/** Name of the resource. This is used for auditing purposes. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  RouterAppliance represents a Router appliance which is specified by a VM URI
 *  and a NIC address.
 */
@interface GTLRNetworkconnectivity_RouterApplianceInstance : GTLRObject

/** The IP address of the network interface to use for peering. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

@property(nonatomic, copy, nullable) NSString *networkInterface;

/** The URI of the virtual machine resource */
@property(nonatomic, copy, nullable) NSString *virtualMachine;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRNetworkconnectivity_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Cloud Platform services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  A Spoke is an abstraction of a network attachment being attached to a Hub. A
 *  Spoke can be underlying a VPN tunnel, a VLAN (interconnect) attachment, a
 *  Router appliance, etc.
 */
@interface GTLRNetworkconnectivity_Spoke : GTLRObject

/** The time when the Spoke was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Short description of the spoke resource
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The resource URL of the hub resource that the spoke is attached to */
@property(nonatomic, copy, nullable) NSString *hub;

/** User-defined labels. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Spoke_Labels *labels;

/** The URIs of linked interconnect attachment resources */
@property(nonatomic, strong, nullable) NSArray<NSString *> *linkedInterconnectAttachments;

/** The URIs of linked Router appliance resources */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkconnectivity_RouterApplianceInstance *> *linkedRouterApplianceInstances;

/** The URIs of linked VPN tunnel resources */
@property(nonatomic, strong, nullable) NSArray<NSString *> *linkedVpnTunnels;

/** Immutable. The name of a Spoke resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The current lifecycle state of this Hub.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_Spoke_State_Active The resource is active
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkconnectivity_Spoke_State_Creating The resource's
 *        create operation is in progress (Value: "CREATING")
 *    @arg @c kGTLRNetworkconnectivity_Spoke_State_Deleting The resource's
 *        Delete operation is in progress (Value: "DELETING")
 *    @arg @c kGTLRNetworkconnectivity_Spoke_State_StateUnspecified No state
 *        information available (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Google-generated UUID for this resource. This is unique across
 *  all Spoke resources. If a Spoke resource is deleted and another with the
 *  same name is created, it gets a different unique_id.
 */
@property(nonatomic, copy, nullable) NSString *uniqueId;

/** The time when the Spoke was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  User-defined labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkconnectivity_Spoke_Labels : GTLRObject
@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRNetworkconnectivity_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRNetworkconnectivity_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A span represents a single operation within a trace. Spans can be nested to
 *  form a trace tree. Often, a trace contains a root span that describes the
 *  end-to-end latency, and one or more subspans for its sub-operations. A trace
 *  can also contain multiple root spans, or none at all. Spans do not need to
 *  be contiguous—there may be gaps or overlaps between spans in a trace.
 */
@interface GTLRNetworkconnectivity_TraceSpan : GTLRObject

/**
 *  A set of attributes on the span. You can have up to 32 attributes per span.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_Attributes *attributes;

/**
 *  An optional number of child spans that were generated while this span was
 *  active. If set, allows implementation to detect missing child spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *childSpanCount;

/**
 *  A description of the span's operation (up to 128 bytes). Stackdriver Trace
 *  displays the description in the Google Cloud Platform Console. For example,
 *  the display name can be a qualified method name or a file name and a line
 *  number where the operation is called. A best practice is to use the same
 *  display name within an application and at the same call point. This makes it
 *  easier to correlate spans in different traces.
 */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_TruncatableString *displayName;

/**
 *  The end time of the span. On the client side, this is the time kept by the
 *  local machine where the span execution ends. On the server side, this is the
 *  time when the server application handler stops running.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The resource name of the span in the following format:
 *  projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier
 *  for a trace within a project; it is a 32-character hexadecimal encoding of a
 *  16-byte array. [SPAN_ID] is a unique identifier for a span within a trace;
 *  it is a 16-character hexadecimal encoding of an 8-byte array.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The [SPAN_ID] of this span's parent span. If this is a root span, then this
 *  field must be empty.
 */
@property(nonatomic, copy, nullable) NSString *parentSpanId;

/**
 *  (Optional) Set this parameter to indicate whether this span is in the same
 *  process as its parent. If you do not set this parameter, Stackdriver Trace
 *  is unable to take advantage of this helpful information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sameProcessAsParentSpan;

/** The [SPAN_ID] portion of the span's resource name. */
@property(nonatomic, copy, nullable) NSString *spanId;

/**
 *  Distinguishes between spans generated in a particular context. For example,
 *  two spans with the same name may be distinguished using `CLIENT` (caller)
 *  and `SERVER` (callee) to identify an RPC call.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_Client Indicates that
 *        the span covers the client-side wrapper around an RPC or other remote
 *        request. (Value: "CLIENT")
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_Consumer Indicates
 *        that the span describes consumer receiving a message from a broker.
 *        Unlike client and server, there is no direct critical path latency
 *        relationship between producer and consumer spans (e.g. receiving a
 *        message from a pubsub service subscription). (Value: "CONSUMER")
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_Internal Indicates
 *        that the span is used internally. Default value. (Value: "INTERNAL")
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_Producer Indicates
 *        that the span describes producer sending a message to a broker. Unlike
 *        client and server, there is no direct critical path latency
 *        relationship between producer and consumer spans (e.g. publishing a
 *        message to a pubsub service). (Value: "PRODUCER")
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_Server Indicates that
 *        the span covers server-side handling of an RPC or other remote network
 *        request. (Value: "SERVER")
 *    @arg @c kGTLRNetworkconnectivity_TraceSpan_SpanKind_SpanKindUnspecified
 *        Unspecified. Do NOT use as default. Implementations MAY assume
 *        SpanKind.INTERNAL to be default. (Value: "SPAN_KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *spanKind;

/**
 *  The start time of the span. On the client side, this is the time kept by the
 *  local machine where the span execution starts. On the server side, this is
 *  the time when the server's application handler starts running.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** An optional final status for this span. */
@property(nonatomic, strong, nullable) GTLRNetworkconnectivity_GoogleRpcStatus *status;

@end


/**
 *  Represents a string that might be shortened to a specified length.
 */
@interface GTLRNetworkconnectivity_TruncatableString : GTLRObject

/**
 *  The number of bytes removed from the original string. If this value is 0,
 *  then the string was not shortened.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *truncatedByteCount;

/**
 *  The shortened string. For example, if the original string is 500 bytes long
 *  and the limit of the string is 128 bytes, then `value` contains the first
 *  128 bytes of the 500-byte string. Truncation always happens on a UTF8
 *  character boundary. If there are multi-byte characters in the string, then
 *  the length of the shortened string might be less than the size limit.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
