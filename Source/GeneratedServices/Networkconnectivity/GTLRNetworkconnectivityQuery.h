// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1alpha1)
// Description:
//   The Network Connectivity API will be home to various services which provide
//   information pertaining to network connectivity.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest;
@class GTLRNetworkconnectivity_Hub;
@class GTLRNetworkconnectivity_SetIamPolicyRequest;
@class GTLRNetworkconnectivity_Spoke;
@class GTLRNetworkconnectivity_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other networkconnectivity query classes.
 */
@interface GTLRNetworkconnectivityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: networkconnectivity.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGet : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGetWithname:]

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Hub in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsCreateWithObject:parent:]

/** Optional. Unique id for the Hub to create. */
@property(nonatomic, copy, nullable) NSString *hubId;

/** Required. The parent resource's name of the Hub. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new Hub in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param parent Required. The parent resource's name of the Hub.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsDeleteWithname:]

/** Required. The name of the Hub to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single Hub.
 *
 *  @param name Required. The name of the Hub to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsGetWithname:]

/** Required. Name of the Hub resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Hub.
 *
 *  Gets details of a single Hub.
 *
 *  @param name Required. Name of the Hub resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Hubs in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsListWithparent:]

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListHubsResponse.
 *
 *  Lists Hubs in a given project and location.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsPatchWithObject:name:]

/** Immutable. The name of a Hub resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Hub resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single Hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param name Immutable. The name of a Hub resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsGlobalHubsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: networkconnectivity.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsList : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networkconnectivity.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: networkconnectivity.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.policyBasedRoutes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesGetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPolicyBasedRoutesGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.policyBasedRoutes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesSetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPolicyBasedRoutesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.policyBasedRoutes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesTestIamPermissions : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPolicyBasedRoutesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPolicyBasedRoutesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.privateRanges.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesGetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPrivateRangesGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.privateRanges.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesSetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPrivateRangesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.privateRanges.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesTestIamPermissions : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsPrivateRangesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsPrivateRangesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new Spoke in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.spokes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesCreateWithObject:parent:]

/** Required. The parent's resource name of the Spoke. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Optional. Unique id for the Spoke to create. */
@property(nonatomic, copy, nullable) NSString *spokeId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new Spoke in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param parent Required. The parent's resource name of the Spoke.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesDeleteWithname:]

/** Required. The name of the Spoke to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single Spoke.
 *
 *  @param name Required. The name of the Spoke to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesGetWithname:]

/** Required. The name of Spoke resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Spoke.
 *
 *  Gets details of a single Spoke.
 *
 *  @param name Required. The name of Spoke resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.spokes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned. Valid values are 0, 1,
 *  and 3. Requests specifying an invalid value will be rejected. Requests for
 *  policies with any conditional bindings must specify version 3. Policies
 *  without any conditional bindings may specify any valid value or leave the
 *  field unset. To learn which resources support conditions in their IAM
 *  policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Spokes in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.spokes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesListWithparent:]

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent's resource name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListSpokesResponse.
 *
 *  Lists Spokes in a given project and location.
 *
 *  @param parent Required. The parent's resource name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesPatchWithObject:name:]

/** Immutable. The name of a Spoke resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Spoke resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single Spoke.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param name Immutable. The name of a Spoke resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.spokes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.spokes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions : GTLRNetworkconnectivityQuery
// Previous library name was
//   +[GTLQueryNetworkconnectivity queryForProjectsLocationsSpokesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
