// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Identity Toolkit API (identitytoolkit/v3)
// Description:
//   Help the third party sites to implement federated login.
// Documentation:
//   https://developers.google.com/identity-toolkit/v3/

#import "GTLRIdentityToolkitQuery.h"

#import "GTLRIdentityToolkitObjects.h"

@implementation GTLRIdentityToolkitQuery

@dynamic fields;

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyCreateAuthUri

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyCreateAuthUriRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"createAuthUri";
  GTLRIdentityToolkitQuery_RelyingpartyCreateAuthUri *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_CreateAuthUriResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.createAuthUri";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyDeleteAccount

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyDeleteAccountRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"deleteAccount";
  GTLRIdentityToolkitQuery_RelyingpartyDeleteAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_DeleteAccountResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.deleteAccount";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyDownloadAccount

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyDownloadAccountRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"downloadAccount";
  GTLRIdentityToolkitQuery_RelyingpartyDownloadAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_DownloadAccountResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.downloadAccount";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyEmailLinkSignin

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyEmailLinkSigninRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"emailLinkSignin";
  GTLRIdentityToolkitQuery_RelyingpartyEmailLinkSignin *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_EmailLinkSigninResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.emailLinkSignin";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyGetAccountInfo

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyGetAccountInfoRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"getAccountInfo";
  GTLRIdentityToolkitQuery_RelyingpartyGetAccountInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_GetAccountInfoResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.getAccountInfo";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyGetOobConfirmationCode

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_Relyingparty *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"getOobConfirmationCode";
  GTLRIdentityToolkitQuery_RelyingpartyGetOobConfirmationCode *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_GetOobConfirmationCodeResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.getOobConfirmationCode";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyGetProjectConfig

@dynamic delegatedProjectNumber, projectNumber;

+ (instancetype)query {
  NSString *pathURITemplate = @"getProjectConfig";
  GTLRIdentityToolkitQuery_RelyingpartyGetProjectConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartyGetProjectConfigResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.getProjectConfig";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyGetPublicKeys

+ (instancetype)query {
  NSString *pathURITemplate = @"publicKeys";
  GTLRIdentityToolkitQuery_RelyingpartyGetPublicKeys *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartyGetPublicKeysResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.getPublicKeys";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyGetRecaptchaParam

+ (instancetype)query {
  NSString *pathURITemplate = @"getRecaptchaParam";
  GTLRIdentityToolkitQuery_RelyingpartyGetRecaptchaParam *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRIdentityToolkit_GetRecaptchaParamResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.getRecaptchaParam";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyResetPassword

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyResetPasswordRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"resetPassword";
  GTLRIdentityToolkitQuery_RelyingpartyResetPassword *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_ResetPasswordResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.resetPassword";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartySendVerificationCode

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySendVerificationCodeRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"sendVerificationCode";
  GTLRIdentityToolkitQuery_RelyingpartySendVerificationCode *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartySendVerificationCodeResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.sendVerificationCode";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartySetAccountInfo

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySetAccountInfoRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"setAccountInfo";
  GTLRIdentityToolkitQuery_RelyingpartySetAccountInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_SetAccountInfoResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.setAccountInfo";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartySetProjectConfig

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySetProjectConfigRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"setProjectConfig";
  GTLRIdentityToolkitQuery_RelyingpartySetProjectConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartySetProjectConfigResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.setProjectConfig";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartySignOutUser

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySignOutUserRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"signOutUser";
  GTLRIdentityToolkitQuery_RelyingpartySignOutUser *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartySignOutUserResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.signOutUser";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartySignupNewUser

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySignupNewUserRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"signupNewUser";
  GTLRIdentityToolkitQuery_RelyingpartySignupNewUser *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_SignupNewUserResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.signupNewUser";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyUploadAccount

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyUploadAccountRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"uploadAccount";
  GTLRIdentityToolkitQuery_RelyingpartyUploadAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_UploadAccountResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.uploadAccount";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyVerifyAssertion

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyAssertionRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"verifyAssertion";
  GTLRIdentityToolkitQuery_RelyingpartyVerifyAssertion *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_VerifyAssertionResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.verifyAssertion";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyVerifyCustomToken

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyCustomTokenRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"verifyCustomToken";
  GTLRIdentityToolkitQuery_RelyingpartyVerifyCustomToken *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_VerifyCustomTokenResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.verifyCustomToken";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyVerifyPassword

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyPasswordRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"verifyPassword";
  GTLRIdentityToolkitQuery_RelyingpartyVerifyPassword *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_VerifyPasswordResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.verifyPassword";
  return query;
}

@end

@implementation GTLRIdentityToolkitQuery_RelyingpartyVerifyPhoneNumber

+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"verifyPhoneNumber";
  GTLRIdentityToolkitQuery_RelyingpartyVerifyPhoneNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberResponse class];
  query.loggingName = @"identitytoolkit.relyingparty.verifyPhoneNumber";
  return query;
}

@end
