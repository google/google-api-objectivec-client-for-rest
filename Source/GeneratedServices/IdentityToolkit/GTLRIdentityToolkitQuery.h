// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Identity Toolkit API (identitytoolkit/v3)
// Description:
//   Help the third party sites to implement federated login.
// Documentation:
//   https://developers.google.com/identity-toolkit/v3/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRIdentityToolkit_Relyingparty;
@class GTLRIdentityToolkit_RelyingpartyCreateAuthUriRequest;
@class GTLRIdentityToolkit_RelyingpartyDeleteAccountRequest;
@class GTLRIdentityToolkit_RelyingpartyDownloadAccountRequest;
@class GTLRIdentityToolkit_RelyingpartyEmailLinkSigninRequest;
@class GTLRIdentityToolkit_RelyingpartyGetAccountInfoRequest;
@class GTLRIdentityToolkit_RelyingpartyResetPasswordRequest;
@class GTLRIdentityToolkit_RelyingpartySendVerificationCodeRequest;
@class GTLRIdentityToolkit_RelyingpartySetAccountInfoRequest;
@class GTLRIdentityToolkit_RelyingpartySetProjectConfigRequest;
@class GTLRIdentityToolkit_RelyingpartySignOutUserRequest;
@class GTLRIdentityToolkit_RelyingpartySignupNewUserRequest;
@class GTLRIdentityToolkit_RelyingpartyUploadAccountRequest;
@class GTLRIdentityToolkit_RelyingpartyVerifyAssertionRequest;
@class GTLRIdentityToolkit_RelyingpartyVerifyCustomTokenRequest;
@class GTLRIdentityToolkit_RelyingpartyVerifyPasswordRequest;
@class GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Identity Toolkit query classes.
 */
@interface GTLRIdentityToolkitQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates the URI used by the IdP to authenticate the user.
 *
 *  Method: identitytoolkit.relyingparty.createAuthUri
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyCreateAuthUri : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyCreateAuthUriWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_CreateAuthUriResponse.
 *
 *  Creates the URI used by the IdP to authenticate the user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyCreateAuthUriRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyCreateAuthUri
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyCreateAuthUriRequest *)object;

@end

/**
 *  Delete user account.
 *
 *  Method: identitytoolkit.relyingparty.deleteAccount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyDeleteAccount : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyDeleteAccountWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_DeleteAccountResponse.
 *
 *  Delete user account.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyDeleteAccountRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyDeleteAccount
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyDeleteAccountRequest *)object;

@end

/**
 *  Batch download user accounts.
 *
 *  Method: identitytoolkit.relyingparty.downloadAccount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 *    @c kGTLRAuthScopeIdentityToolkitFirebase
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyDownloadAccount : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyDownloadAccountWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_DownloadAccountResponse.
 *
 *  Batch download user accounts.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyDownloadAccountRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyDownloadAccount
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyDownloadAccountRequest *)object;

@end

/**
 *  Reset password for a user.
 *
 *  Method: identitytoolkit.relyingparty.emailLinkSignin
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyEmailLinkSignin : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyEmailLinkSigninWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_EmailLinkSigninResponse.
 *
 *  Reset password for a user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyEmailLinkSigninRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyEmailLinkSignin
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyEmailLinkSigninRequest *)object;

@end

/**
 *  Returns the account info.
 *
 *  Method: identitytoolkit.relyingparty.getAccountInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyGetAccountInfo : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyGetAccountInfoWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_GetAccountInfoResponse.
 *
 *  Returns the account info.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyGetAccountInfoRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyGetAccountInfo
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyGetAccountInfoRequest *)object;

@end

/**
 *  Get a code for user action confirmation.
 *
 *  Method: identitytoolkit.relyingparty.getOobConfirmationCode
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyGetOobConfirmationCode : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyGetOobConfirmationCodeWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_GetOobConfirmationCodeResponse.
 *
 *  Get a code for user action confirmation.
 *
 *  @param object The @c GTLRIdentityToolkit_Relyingparty to include in the
 *    query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyGetOobConfirmationCode
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_Relyingparty *)object;

@end

/**
 *  Get project configuration.
 *
 *  Method: identitytoolkit.relyingparty.getProjectConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyGetProjectConfig : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyGetProjectConfig]

/** Delegated GCP project number of the request. */
@property(nonatomic, copy, nullable) NSString *delegatedProjectNumber;

/** GCP project number of the request. */
@property(nonatomic, copy, nullable) NSString *projectNumber;

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartyGetProjectConfigResponse.
 *
 *  Get project configuration.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyGetProjectConfig
 */
+ (instancetype)query;

@end

/**
 *  Get token signing public key.
 *
 *  Method: identitytoolkit.relyingparty.getPublicKeys
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyGetPublicKeys : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyGetPublicKeys]

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartyGetPublicKeysResponse.
 *
 *  Get token signing public key.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyGetPublicKeys
 */
+ (instancetype)query;

@end

/**
 *  Get recaptcha secure param.
 *
 *  Method: identitytoolkit.relyingparty.getRecaptchaParam
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyGetRecaptchaParam : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyGetRecaptchaParam]

/**
 *  Fetches a @c GTLRIdentityToolkit_GetRecaptchaParamResponse.
 *
 *  Get recaptcha secure param.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyGetRecaptchaParam
 */
+ (instancetype)query;

@end

/**
 *  Reset password for a user.
 *
 *  Method: identitytoolkit.relyingparty.resetPassword
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyResetPassword : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyResetPasswordWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_ResetPasswordResponse.
 *
 *  Reset password for a user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyResetPasswordRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyResetPassword
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyResetPasswordRequest *)object;

@end

/**
 *  Send SMS verification code.
 *
 *  Method: identitytoolkit.relyingparty.sendVerificationCode
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartySendVerificationCode : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartySendVerificationCodeWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartySendVerificationCodeResponse.
 *
 *  Send SMS verification code.
 *
 *  @param object The @c
 *    GTLRIdentityToolkit_RelyingpartySendVerificationCodeRequest to include in
 *    the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartySendVerificationCode
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySendVerificationCodeRequest *)object;

@end

/**
 *  Set account info for a user.
 *
 *  Method: identitytoolkit.relyingparty.setAccountInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartySetAccountInfo : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartySetAccountInfoWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_SetAccountInfoResponse.
 *
 *  Set account info for a user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartySetAccountInfoRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartySetAccountInfo
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySetAccountInfoRequest *)object;

@end

/**
 *  Set project configuration.
 *
 *  Method: identitytoolkit.relyingparty.setProjectConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartySetProjectConfig : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartySetProjectConfigWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartySetProjectConfigResponse.
 *
 *  Set project configuration.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartySetProjectConfigRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartySetProjectConfig
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySetProjectConfigRequest *)object;

@end

/**
 *  Sign out user.
 *
 *  Method: identitytoolkit.relyingparty.signOutUser
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartySignOutUser : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartySignOutUserWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartySignOutUserResponse.
 *
 *  Sign out user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartySignOutUserRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartySignOutUser
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySignOutUserRequest *)object;

@end

/**
 *  Signup new user.
 *
 *  Method: identitytoolkit.relyingparty.signupNewUser
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartySignupNewUser : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartySignupNewUserWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_SignupNewUserResponse.
 *
 *  Signup new user.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartySignupNewUserRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartySignupNewUser
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartySignupNewUserRequest *)object;

@end

/**
 *  Batch upload existing user accounts.
 *
 *  Method: identitytoolkit.relyingparty.uploadAccount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 *    @c kGTLRAuthScopeIdentityToolkitFirebase
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyUploadAccount : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyUploadAccountWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_UploadAccountResponse.
 *
 *  Batch upload existing user accounts.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyUploadAccountRequest to
 *    include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyUploadAccount
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyUploadAccountRequest *)object;

@end

/**
 *  Verifies the assertion returned by the IdP.
 *
 *  Method: identitytoolkit.relyingparty.verifyAssertion
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyVerifyAssertion : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyVerifyAssertionWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_VerifyAssertionResponse.
 *
 *  Verifies the assertion returned by the IdP.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyVerifyAssertionRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyVerifyAssertion
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyAssertionRequest *)object;

@end

/**
 *  Verifies the developer asserted ID token.
 *
 *  Method: identitytoolkit.relyingparty.verifyCustomToken
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyVerifyCustomToken : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyVerifyCustomTokenWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_VerifyCustomTokenResponse.
 *
 *  Verifies the developer asserted ID token.
 *
 *  @param object The @c
 *    GTLRIdentityToolkit_RelyingpartyVerifyCustomTokenRequest to include in the
 *    query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyVerifyCustomToken
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyCustomTokenRequest *)object;

@end

/**
 *  Verifies the user entered password.
 *
 *  Method: identitytoolkit.relyingparty.verifyPassword
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyVerifyPassword : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyVerifyPasswordWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_VerifyPasswordResponse.
 *
 *  Verifies the user entered password.
 *
 *  @param object The @c GTLRIdentityToolkit_RelyingpartyVerifyPasswordRequest
 *    to include in the query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyVerifyPassword
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyPasswordRequest *)object;

@end

/**
 *  Verifies ownership of a phone number and creates/updates the user account
 *  accordingly.
 *
 *  Method: identitytoolkit.relyingparty.verifyPhoneNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIdentityToolkitCloudPlatform
 */
@interface GTLRIdentityToolkitQuery_RelyingpartyVerifyPhoneNumber : GTLRIdentityToolkitQuery
// Previous library name was
//   +[GTLQueryIdentityToolkit queryForRelyingpartyVerifyPhoneNumberWithObject:]

/**
 *  Fetches a @c GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberResponse.
 *
 *  Verifies ownership of a phone number and creates/updates the user account
 *  accordingly.
 *
 *  @param object The @c
 *    GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberRequest to include in the
 *    query.
 *
 *  @return GTLRIdentityToolkitQuery_RelyingpartyVerifyPhoneNumber
 */
+ (instancetype)queryWithObject:(GTLRIdentityToolkit_RelyingpartyVerifyPhoneNumberRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
