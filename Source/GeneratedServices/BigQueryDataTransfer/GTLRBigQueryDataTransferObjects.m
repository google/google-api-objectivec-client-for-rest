// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   BigQuery Data Transfer Service API (bigquerydatatransfer/v1)
// Description:
//   Transfers data from partner SaaS applications to Google BigQuery on a
//   scheduled, managed basis.
// Documentation:
//   https://cloud.google.com/bigquery/

#import "GTLRBigQueryDataTransferObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRBigQueryDataTransfer_DataSource.authorizationType
NSString * const kGTLRBigQueryDataTransfer_DataSource_AuthorizationType_AuthorizationCode = @"AUTHORIZATION_CODE";
NSString * const kGTLRBigQueryDataTransfer_DataSource_AuthorizationType_AuthorizationTypeUnspecified = @"AUTHORIZATION_TYPE_UNSPECIFIED";
NSString * const kGTLRBigQueryDataTransfer_DataSource_AuthorizationType_GooglePlusAuthorizationCode = @"GOOGLE_PLUS_AUTHORIZATION_CODE";

// GTLRBigQueryDataTransfer_DataSource.dataRefreshType
NSString * const kGTLRBigQueryDataTransfer_DataSource_DataRefreshType_CustomSlidingWindow = @"CUSTOM_SLIDING_WINDOW";
NSString * const kGTLRBigQueryDataTransfer_DataSource_DataRefreshType_None = @"NONE";
NSString * const kGTLRBigQueryDataTransfer_DataSource_DataRefreshType_SlidingWindow = @"SLIDING_WINDOW";

// GTLRBigQueryDataTransfer_DataSource.transferType
NSString * const kGTLRBigQueryDataTransfer_DataSource_TransferType_Batch = @"BATCH";
NSString * const kGTLRBigQueryDataTransfer_DataSource_TransferType_Streaming = @"STREAMING";
NSString * const kGTLRBigQueryDataTransfer_DataSource_TransferType_TransferTypeUnspecified = @"TRANSFER_TYPE_UNSPECIFIED";

// GTLRBigQueryDataTransfer_DataSourceParameter.type
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_Boolean = @"BOOLEAN";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_Double = @"DOUBLE";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_Integer = @"INTEGER";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_PlusPage = @"PLUS_PAGE";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_Record = @"RECORD";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_String = @"STRING";
NSString * const kGTLRBigQueryDataTransfer_DataSourceParameter_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRBigQueryDataTransfer_TransferConfig.status
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Cancelled = @"CANCELLED";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Failed = @"FAILED";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Inactive = @"INACTIVE";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Pending = @"PENDING";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Running = @"RUNNING";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_Succeeded = @"SUCCEEDED";
NSString * const kGTLRBigQueryDataTransfer_TransferConfig_Status_TransferStatusUnspecified = @"TRANSFER_STATUS_UNSPECIFIED";

// GTLRBigQueryDataTransfer_TransferMessage.severity
NSString * const kGTLRBigQueryDataTransfer_TransferMessage_Severity_Error = @"ERROR";
NSString * const kGTLRBigQueryDataTransfer_TransferMessage_Severity_Info = @"INFO";
NSString * const kGTLRBigQueryDataTransfer_TransferMessage_Severity_MessageSeverityUnspecified = @"MESSAGE_SEVERITY_UNSPECIFIED";
NSString * const kGTLRBigQueryDataTransfer_TransferMessage_Severity_Warning = @"WARNING";

// GTLRBigQueryDataTransfer_TransferRun.status
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Cancelled = @"CANCELLED";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Failed = @"FAILED";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Inactive = @"INACTIVE";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Pending = @"PENDING";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Running = @"RUNNING";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_Succeeded = @"SUCCEEDED";
NSString * const kGTLRBigQueryDataTransfer_TransferRun_Status_TransferStatusUnspecified = @"TRANSFER_STATUS_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_CheckValidCredsRequest
//

@implementation GTLRBigQueryDataTransfer_CheckValidCredsRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_CheckValidCredsResponse
//

@implementation GTLRBigQueryDataTransfer_CheckValidCredsResponse
@dynamic hasValidCreds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_DataSource
//

@implementation GTLRBigQueryDataTransfer_DataSource
@dynamic authorizationType, clientId, dataRefreshType, dataSourceId,
         defaultDataRefreshWindowDays, defaultSchedule, descriptionProperty,
         displayName, helpUrl, manualRunsDisabled, name, parameters, scopes,
         statusUpdateDeadlineSeconds, supportsCustomSchedule,
         supportsMultipleTransfers, transferType;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"parameters" : [GTLRBigQueryDataTransfer_DataSourceParameter class],
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_DataSourceParameter
//

@implementation GTLRBigQueryDataTransfer_DataSourceParameter
@dynamic allowedValues, descriptionProperty, displayName, fields, immutable,
         maxValue, minValue, paramId, recurse, repeated, required, type,
         validationDescription, validationHelpUrl, validationRegex;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedValues" : [NSString class],
    @"fields" : [GTLRBigQueryDataTransfer_DataSourceParameter class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_Empty
//

@implementation GTLRBigQueryDataTransfer_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_IsEnabledRequest
//

@implementation GTLRBigQueryDataTransfer_IsEnabledRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_IsEnabledResponse
//

@implementation GTLRBigQueryDataTransfer_IsEnabledResponse
@dynamic enabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ListDataSourcesResponse
//

@implementation GTLRBigQueryDataTransfer_ListDataSourcesResponse
@dynamic dataSources, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dataSources" : [GTLRBigQueryDataTransfer_DataSource class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"dataSources";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ListTransferConfigsResponse
//

@implementation GTLRBigQueryDataTransfer_ListTransferConfigsResponse
@dynamic nextPageToken, transferConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"transferConfigs" : [GTLRBigQueryDataTransfer_TransferConfig class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"transferConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ListTransferLogsResponse
//

@implementation GTLRBigQueryDataTransfer_ListTransferLogsResponse
@dynamic nextPageToken, transferMessages;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"transferMessages" : [GTLRBigQueryDataTransfer_TransferMessage class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"transferMessages";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ListTransferRunsResponse
//

@implementation GTLRBigQueryDataTransfer_ListTransferRunsResponse
@dynamic nextPageToken, transferRuns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"transferRuns" : [GTLRBigQueryDataTransfer_TransferRun class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"transferRuns";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ScheduleTransferRunsRequest
//

@implementation GTLRBigQueryDataTransfer_ScheduleTransferRunsRequest
@dynamic rangeEndTime, rangeStartTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_ScheduleTransferRunsResponse
//

@implementation GTLRBigQueryDataTransfer_ScheduleTransferRunsResponse
@dynamic createdRuns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"createdRuns" : [GTLRBigQueryDataTransfer_TransferRun class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_SetEnabledRequest
//

@implementation GTLRBigQueryDataTransfer_SetEnabledRequest
@dynamic enabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_TransferConfig
//

@implementation GTLRBigQueryDataTransfer_TransferConfig
@dynamic dataRefreshWindowDays, datasetRegion, dataSourceId,
         destinationDatasetId, disabled, displayName, name, nextRunTime, params,
         schedule, status, updateTime, userId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_TransferConfig_Params
//

@implementation GTLRBigQueryDataTransfer_TransferConfig_Params

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_TransferMessage
//

@implementation GTLRBigQueryDataTransfer_TransferMessage
@dynamic messageText, messageTime, severity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_TransferRun
//

@implementation GTLRBigQueryDataTransfer_TransferRun
@dynamic datasetRegion, dataSourceId, destinationDatasetId, endTime, name,
         params, runTime, schedule, scheduleTime, startTime, status, updateTime,
         userId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBigQueryDataTransfer_TransferRun_Params
//

@implementation GTLRBigQueryDataTransfer_TransferRun_Params

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end
