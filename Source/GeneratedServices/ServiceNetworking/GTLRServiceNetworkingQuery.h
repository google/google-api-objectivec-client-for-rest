// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Networking API (servicenetworking/v1beta)
// Description:
//   Provides automatic management of network configurations necessary for
//   certain services.
// Documentation:
//   https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRServiceNetworking_AddSubnetworkRequest;
@class GTLRServiceNetworking_Connection;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Service Networking query classes.
 */
@interface GTLRServiceNetworkingQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: servicenetworking.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_OperationsGet : GTLRServiceNetworkingQuery
// Previous library name was
//   +[GTLQueryServiceNetworking queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRServiceNetworkingQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Service producers use this method to provision a new subnet in
 *  peered service shared VPC network.
 *  It will validate previously provided allocated ranges, find
 *  non-conflicting sub-range of requested size (expressed in
 *  number of leading bits of ipv4 network mask, as in CIDR range
 *  notation). It will then create a subnetwork in the request
 *  region. The subsequent call will try to reuse the
 *  subnetwork previously created if subnetwork name, region and
 *  prefix length of the IP range match.
 *  Operation<response: Subnetwork>
 *
 *  Method: servicenetworking.services.addSubnetwork
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesAddSubnetwork : GTLRServiceNetworkingQuery
// Previous library name was
//   +[GTLQueryServiceNetworking queryForServicesAddSubnetworkWithObject:parent:]

/**
 *  Required. This is a 'tenant' project in the service producer organization.
 *  services/{service}/{collection-id}/{resource-id}
 *  {collection id} is the cloud resource collection type representing the
 *  tenant project. Only 'projects' are currently supported.
 *  {resource id} is the tenant project numeric id: '123456'.
 *  {service} the name of the peering service, for example
 *  'service-peering.example.com'. This service must be activated.
 *  in the consumer project.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers use this method to provision a new subnet in
 *  peered service shared VPC network.
 *  It will validate previously provided allocated ranges, find
 *  non-conflicting sub-range of requested size (expressed in
 *  number of leading bits of ipv4 network mask, as in CIDR range
 *  notation). It will then create a subnetwork in the request
 *  region. The subsequent call will try to reuse the
 *  subnetwork previously created if subnetwork name, region and
 *  prefix length of the IP range match.
 *  Operation<response: Subnetwork>
 *
 *  @param object The @c GTLRServiceNetworking_AddSubnetworkRequest to include
 *    in the query.
 *  @param parent Required. This is a 'tenant' project in the service producer
 *    organization.
 *    services/{service}/{collection-id}/{resource-id}
 *    {collection id} is the cloud resource collection type representing the
 *    tenant project. Only 'projects' are currently supported.
 *    {resource id} is the tenant project numeric id: '123456'.
 *    {service} the name of the peering service, for example
 *    'service-peering.example.com'. This service must be activated.
 *    in the consumer project.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesAddSubnetwork
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_AddSubnetworkRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  To connect service to a VPC network peering connection
 *  must be established prior to service provisioning.
 *  This method must be invoked by the consumer VPC network administrator
 *  It will establish a permanent peering connection with a shared
 *  network created in the service producer organization and register a
 *  allocated IP range(s) to be used for service subnetwork provisioning.
 *  This connection will be used for all supported services in the service
 *  producer organization, so it only needs to be invoked once.
 *  Operation<response: Connection>.
 *
 *  Method: servicenetworking.services.connections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsCreate : GTLRServiceNetworkingQuery
// Previous library name was
//   +[GTLQueryServiceNetworking queryForServicesConnectionsCreateWithObject:parent:]

/**
 *  Provider peering service that is managing peering connectivity for a
 *  service provider organization.
 *  For Google services that support this functionality it is
 *  'services/servicenetworking.googleapis.com'.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  To connect service to a VPC network peering connection
 *  must be established prior to service provisioning.
 *  This method must be invoked by the consumer VPC network administrator
 *  It will establish a permanent peering connection with a shared
 *  network created in the service producer organization and register a
 *  allocated IP range(s) to be used for service subnetwork provisioning.
 *  This connection will be used for all supported services in the service
 *  producer organization, so it only needs to be invoked once.
 *  Operation<response: Connection>.
 *
 *  @param object The @c GTLRServiceNetworking_Connection to include in the
 *    query.
 *  @param parent Provider peering service that is managing peering connectivity
 *    for a
 *    service provider organization.
 *    For Google services that support this functionality it is
 *    'services/servicenetworking.googleapis.com'.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_Connection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service consumers use this method to list configured peering connection for
 *  the given service and consumer network.
 *
 *  Method: servicenetworking.services.connections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsList : GTLRServiceNetworkingQuery
// Previous library name was
//   +[GTLQueryServiceNetworking queryForServicesConnectionsListWithparent:]

/**
 *  Network name in the consumer project. This network must have been
 *  already peered with a shared VPC network using CreateConnection
 *  method.
 *  Must be in a form 'projects/{project}/global/networks/{network}'.
 *  {project} is a project number, as in '12345'
 *  {network} is network name.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Provider peering service that is managing peering connectivity for a
 *  service provider organization.
 *  For Google services that support this functionality it is
 *  'services/servicenetworking.googleapis.com'.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_ListConnectionsResponse.
 *
 *  Service consumers use this method to list configured peering connection for
 *  the given service and consumer network.
 *
 *  @param parent Provider peering service that is managing peering connectivity
 *    for a
 *    service provider organization.
 *    For Google services that support this functionality it is
 *    'services/servicenetworking.googleapis.com'.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
