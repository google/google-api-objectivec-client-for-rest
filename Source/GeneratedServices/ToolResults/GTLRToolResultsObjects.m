// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Tool Results API (toolresults/v1)
// Description:
//   API to publish and access results from developer tools.
// Documentation:
//   https://firebase.google.com/docs/test-lab/

#import "GTLRToolResultsObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRToolResults_NonSdkApi.list
NSString * const kGTLRToolResults_NonSdkApi_List_Black    = @"BLACK";
NSString * const kGTLRToolResults_NonSdkApi_List_Grey     = @"GREY";
NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxO = @"GREY_MAX_O";
NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxP = @"GREY_MAX_P";
NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxQ = @"GREY_MAX_Q";
NSString * const kGTLRToolResults_NonSdkApi_List_None     = @"NONE";
NSString * const kGTLRToolResults_NonSdkApi_List_White    = @"WHITE";

// ----------------------------------------------------------------------------
//
//   GTLRToolResults_ANR
//

@implementation GTLRToolResults_ANR
@dynamic stackTrace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_AvailableDeepLinks
//

@implementation GTLRToolResults_AvailableDeepLinks
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_BlankScreen
//

@implementation GTLRToolResults_BlankScreen
@dynamic screenId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_CrashDialogError
//

@implementation GTLRToolResults_CrashDialogError
@dynamic crashPackage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_EncounteredLoginScreen
//

@implementation GTLRToolResults_EncounteredLoginScreen
@dynamic distinctScreens, screenIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"screenIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_EncounteredNonAndroidUiWidgetScreen
//

@implementation GTLRToolResults_EncounteredNonAndroidUiWidgetScreen
@dynamic distinctScreens, screenIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"screenIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_FailedToInstall
//

@implementation GTLRToolResults_FailedToInstall
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_FatalException
//

@implementation GTLRToolResults_FatalException
@dynamic stackTrace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_InAppPurchasesFound
//

@implementation GTLRToolResults_InAppPurchasesFound
@dynamic inAppPurchasesFlowsExplored, inAppPurchasesFlowsStarted;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_InsufficientCoverage
//

@implementation GTLRToolResults_InsufficientCoverage
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_IosAppCrashed
//

@implementation GTLRToolResults_IosAppCrashed
@dynamic stackTrace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_LauncherActivityNotFound
//

@implementation GTLRToolResults_LauncherActivityNotFound
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_NativeCrash
//

@implementation GTLRToolResults_NativeCrash
@dynamic stackTrace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_NonSdkApi
//

@implementation GTLRToolResults_NonSdkApi
@dynamic apiSignature, exampleStackTraces, insights, invocationCount, list;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exampleStackTraces" : [NSString class],
    @"insights" : [GTLRToolResults_NonSdkApiInsight class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_NonSdkApiInsight
//

@implementation GTLRToolResults_NonSdkApiInsight
@dynamic exampleTraceMessages, matcherId, pendingGoogleUpdateInsight,
         upgradeInsight;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exampleTraceMessages" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_NonSdkApiUsageViolation
//

@implementation GTLRToolResults_NonSdkApiUsageViolation
@dynamic apiSignatures, uniqueApis;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"apiSignatures" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_NonSdkApiUsageViolationReport
//

@implementation GTLRToolResults_NonSdkApiUsageViolationReport
@dynamic exampleApis, minSdkVersion, targetSdkVersion, uniqueApis;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exampleApis" : [GTLRToolResults_NonSdkApi class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_OverlappingUIElements
//

@implementation GTLRToolResults_OverlappingUIElements
@dynamic resourceName, screenId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceName" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_PendingGoogleUpdateInsight
//

@implementation GTLRToolResults_PendingGoogleUpdateInsight
@dynamic nameOfGoogleLibrary;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_PerformedGoogleLogin
//

@implementation GTLRToolResults_PerformedGoogleLogin
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_PerformedMonkeyActions
//

@implementation GTLRToolResults_PerformedMonkeyActions
@dynamic totalActions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_RoboScriptExecution
//

@implementation GTLRToolResults_RoboScriptExecution
@dynamic successfulActions, totalActions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_StackTrace
//

@implementation GTLRToolResults_StackTrace
@dynamic exception;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_StartActivityNotFound
//

@implementation GTLRToolResults_StartActivityNotFound
@dynamic action, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UIElementTooDeep
//

@implementation GTLRToolResults_UIElementTooDeep
@dynamic depth, screenId, screenStateId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UnspecifiedWarning
//

@implementation GTLRToolResults_UnspecifiedWarning
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UnusedRoboDirective
//

@implementation GTLRToolResults_UnusedRoboDirective
@dynamic resourceName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UpgradeInsight
//

@implementation GTLRToolResults_UpgradeInsight
@dynamic packageName, upgradeToVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UsedRoboDirective
//

@implementation GTLRToolResults_UsedRoboDirective
@dynamic resourceName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRToolResults_UsedRoboIgnoreDirective
//

@implementation GTLRToolResults_UsedRoboIgnoreDirective
@dynamic resourceName;
@end
