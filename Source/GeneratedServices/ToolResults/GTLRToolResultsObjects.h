// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Tool Results API (toolresults/v1)
// Description:
//   API to publish and access results from developer tools.
// Documentation:
//   https://firebase.google.com/docs/test-lab/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRToolResults_NonSdkApi;
@class GTLRToolResults_NonSdkApiInsight;
@class GTLRToolResults_PendingGoogleUpdateInsight;
@class GTLRToolResults_StackTrace;
@class GTLRToolResults_UpgradeInsight;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRToolResults_NonSdkApi.list

/** Value: "BLACK" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_Black;
/** Value: "GREY" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_Grey;
/** Value: "GREY_MAX_O" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxO;
/** Value: "GREY_MAX_P" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxP;
/** Value: "GREY_MAX_Q" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_GreyMaxQ;
/** Value: "NONE" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_None;
/** Value: "WHITE" */
GTLR_EXTERN NSString * const kGTLRToolResults_NonSdkApi_List_White;

/**
 *  Additional details for an ANR crash.
 */
@interface GTLRToolResults_ANR : GTLRObject

/**
 *  The stack trace of the ANR crash.
 *  Optional.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_StackTrace *stackTrace;

@end


/**
 *  A suggestion to use deep links for a Robo run.
 */
@interface GTLRToolResults_AvailableDeepLinks : GTLRObject
@end


/**
 *  A warning that Robo encountered a screen that was mostly blank; this may
 *  indicate a problem with the app.
 */
@interface GTLRToolResults_BlankScreen : GTLRObject

/** The screen id of the element */
@property(nonatomic, copy, nullable) NSString *screenId;

@end


/**
 *  Crash dialog was detected during the test execution
 */
@interface GTLRToolResults_CrashDialogError : GTLRObject

/** The name of the package that caused the dialog. */
@property(nonatomic, copy, nullable) NSString *crashPackage;

@end


/**
 *  Additional details about encountered login screens.
 */
@interface GTLRToolResults_EncounteredLoginScreen : GTLRObject

/**
 *  Number of encountered distinct login screens.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distinctScreens;

/** Subset of login screens. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *screenIds;

@end


/**
 *  Additional details about encountered screens with elements that are not
 *  Android UI widgets.
 */
@interface GTLRToolResults_EncounteredNonAndroidUiWidgetScreen : GTLRObject

/**
 *  Number of encountered distinct screens with non Android UI widgets.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distinctScreens;

/** Subset of screens which contain non Android UI widgets. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *screenIds;

@end


/**
 *  Failed to install the APK.
 */
@interface GTLRToolResults_FailedToInstall : GTLRObject
@end


/**
 *  Additional details for a fatal exception.
 */
@interface GTLRToolResults_FatalException : GTLRObject

/**
 *  The stack trace of the fatal exception.
 *  Optional.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_StackTrace *stackTrace;

@end


/**
 *  Additional details of in-app purchases encountered during the crawl.
 */
@interface GTLRToolResults_InAppPurchasesFound : GTLRObject

/**
 *  The total number of in-app purchases flows explored: how many times the
 *  robo tries to buy a SKU.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inAppPurchasesFlowsExplored;

/**
 *  The total number of in-app purchases flows started.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inAppPurchasesFlowsStarted;

@end


/**
 *  A warning that Robo did not crawl potentially important parts of the app.
 */
@interface GTLRToolResults_InsufficientCoverage : GTLRObject
@end


/**
 *  Additional details for an iOS app crash.
 */
@interface GTLRToolResults_IosAppCrashed : GTLRObject

/**
 *  The stack trace, if one is available.
 *  Optional.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_StackTrace *stackTrace;

@end


/**
 *  Failed to find the launcher activity of an app.
 */
@interface GTLRToolResults_LauncherActivityNotFound : GTLRObject
@end


/**
 *  Additional details for a native crash.
 */
@interface GTLRToolResults_NativeCrash : GTLRObject

/**
 *  The stack trace of the native crash.
 *  Optional.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_StackTrace *stackTrace;

@end


/**
 *  A non-sdk API and examples of it being called along with other metadata
 *  See
 *  https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces
 */
@interface GTLRToolResults_NonSdkApi : GTLRObject

/** The signature of the Non-SDK API */
@property(nonatomic, copy, nullable) NSString *apiSignature;

/** Example stack traces of this API being called. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exampleStackTraces;

/** Optional debugging insights for non-SDK API violations. */
@property(nonatomic, strong, nullable) NSArray<GTLRToolResults_NonSdkApiInsight *> *insights;

/**
 *  The total number of times this API was observed to have been called.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invocationCount;

/**
 *  Which list this API appears on
 *
 *  Likely values:
 *    @arg @c kGTLRToolResults_NonSdkApi_List_Black Value "BLACK"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_Grey Value "GREY"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_GreyMaxO Value "GREY_MAX_O"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_GreyMaxP Value "GREY_MAX_P"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_GreyMaxQ Value "GREY_MAX_Q"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_None Value "NONE"
 *    @arg @c kGTLRToolResults_NonSdkApi_List_White Value "WHITE"
 */
@property(nonatomic, copy, nullable) NSString *list;

@end


/**
 *  Non-SDK API insights (to address debugging solutions).
 */
@interface GTLRToolResults_NonSdkApiInsight : GTLRObject

/**
 *  Optional sample stack traces, for which this insight applies (there
 *  should be at least one).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exampleTraceMessages;

/**
 *  A unique ID, to be used for determining the effectiveness of this
 *  particular insight in the context of a matcher. (required)
 */
@property(nonatomic, copy, nullable) NSString *matcherId;

/**
 *  An insight indicating that the hidden API usage originates from a
 *  Google-provided library.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_PendingGoogleUpdateInsight *pendingGoogleUpdateInsight;

/**
 *  An insight indicating that the hidden API usage originates from the
 *  use of a library that needs to be upgraded.
 */
@property(nonatomic, strong, nullable) GTLRToolResults_UpgradeInsight *upgradeInsight;

@end


/**
 *  Additional details for a non-sdk API usage violation.
 */
@interface GTLRToolResults_NonSdkApiUsageViolation : GTLRObject

/** Signatures of a subset of those hidden API's. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *apiSignatures;

/**
 *  Total number of unique hidden API's accessed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *uniqueApis;

@end


/**
 *  Contains a summary and examples of non-sdk API usage violations.
 */
@interface GTLRToolResults_NonSdkApiUsageViolationReport : GTLRObject

/** Examples of the detected API usages. */
@property(nonatomic, strong, nullable) NSArray<GTLRToolResults_NonSdkApi *> *exampleApis;

/**
 *  Minimum API level required for the application to run.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minSdkVersion;

/**
 *  Specifies the API Level on which the application is designed to run.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetSdkVersion;

/**
 *  Total number of unique Non-SDK API's accessed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *uniqueApis;

@end


/**
 *  A warning that Robo encountered a screen that has overlapping clickable
 *  elements; this may indicate a potential UI issue.
 */
@interface GTLRToolResults_OverlappingUIElements : GTLRObject

/** Resource names of the overlapping screen elements */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceName;

/** The screen id of the elements */
@property(nonatomic, copy, nullable) NSString *screenId;

@end


/**
 *  This insight indicates that the hidden API usage originates from a
 *  Google-provided library. Users need not take any action.
 */
@interface GTLRToolResults_PendingGoogleUpdateInsight : GTLRObject

/**
 *  The name of the Google-provided library with the non-SDK API dependency.
 */
@property(nonatomic, copy, nullable) NSString *nameOfGoogleLibrary;

@end


/**
 *  A notification that Robo signed in with Google.
 */
@interface GTLRToolResults_PerformedGoogleLogin : GTLRObject
@end


/**
 *  A notification that Robo performed some monkey actions.
 */
@interface GTLRToolResults_PerformedMonkeyActions : GTLRObject

/**
 *  The total number of monkey actions performed during the crawl.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalActions;

@end


/**
 *  Execution stats for a user-provided Robo script.
 */
@interface GTLRToolResults_RoboScriptExecution : GTLRObject

/**
 *  The number of Robo script actions executed successfully.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successfulActions;

/**
 *  The total number of actions in the Robo script.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalActions;

@end


/**
 *  A stacktrace.
 */
@interface GTLRToolResults_StackTrace : GTLRObject

/**
 *  The stack trace message.
 *  Required
 */
@property(nonatomic, copy, nullable) NSString *exception;

@end


/**
 *  User provided intent failed to resolve to an activity.
 */
@interface GTLRToolResults_StartActivityNotFound : GTLRObject

@property(nonatomic, copy, nullable) NSString *action;
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A warning that the screen hierarchy is deeper than the recommended
 *  threshold.
 */
@interface GTLRToolResults_UIElementTooDeep : GTLRObject

/**
 *  The depth of the screen element
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *depth;

/** The screen id of the element */
@property(nonatomic, copy, nullable) NSString *screenId;

/** The screen state id of the element */
@property(nonatomic, copy, nullable) NSString *screenStateId;

@end


/**
 *  Default unspecified warning.
 */
@interface GTLRToolResults_UnspecifiedWarning : GTLRObject
@end


/**
 *  Additional details of an unused robodirective.
 */
@interface GTLRToolResults_UnusedRoboDirective : GTLRObject

/** The name of the resource that was unused. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  This insight is a recommendation to upgrade a given library to the specified
 *  version, in order to avoid dependencies on non-SDK APIs.
 */
@interface GTLRToolResults_UpgradeInsight : GTLRObject

/** The name of the package to be upgraded. */
@property(nonatomic, copy, nullable) NSString *packageName;

/**
 *  The suggested version to upgrade to.
 *  Optional: In case we are not sure which version solves this problem
 */
@property(nonatomic, copy, nullable) NSString *upgradeToVersion;

@end


/**
 *  Additional details of a used Robo directive.
 */
@interface GTLRToolResults_UsedRoboDirective : GTLRObject

/** The name of the resource that was used. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  Additional details of a used Robo directive with an ignore action.
 *  Note: This is a different scenario than unused directive.
 */
@interface GTLRToolResults_UsedRoboIgnoreDirective : GTLRObject

/** The name of the resource that was ignored. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
