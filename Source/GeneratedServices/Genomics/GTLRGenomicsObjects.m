// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Genomics API (genomics/v1)
// Description:
//   Uploads, processes, queries, and searches Genomics data in the cloud.
// Documentation:
//   https://cloud.google.com/genomics

#import "GTLRGenomicsObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRGenomics_Annotation.type
NSString * const kGTLRGenomics_Annotation_Type_AnnotationTypeUnspecified = @"ANNOTATION_TYPE_UNSPECIFIED";
NSString * const kGTLRGenomics_Annotation_Type_Gene            = @"GENE";
NSString * const kGTLRGenomics_Annotation_Type_Generic         = @"GENERIC";
NSString * const kGTLRGenomics_Annotation_Type_Transcript      = @"TRANSCRIPT";
NSString * const kGTLRGenomics_Annotation_Type_Variant         = @"VARIANT";

// GTLRGenomics_AnnotationSet.type
NSString * const kGTLRGenomics_AnnotationSet_Type_AnnotationTypeUnspecified = @"ANNOTATION_TYPE_UNSPECIFIED";
NSString * const kGTLRGenomics_AnnotationSet_Type_Gene         = @"GENE";
NSString * const kGTLRGenomics_AnnotationSet_Type_Generic      = @"GENERIC";
NSString * const kGTLRGenomics_AnnotationSet_Type_Transcript   = @"TRANSCRIPT";
NSString * const kGTLRGenomics_AnnotationSet_Type_Variant      = @"VARIANT";

// GTLRGenomics_CigarUnit.operation
NSString * const kGTLRGenomics_CigarUnit_Operation_AlignmentMatch = @"ALIGNMENT_MATCH";
NSString * const kGTLRGenomics_CigarUnit_Operation_ClipHard    = @"CLIP_HARD";
NSString * const kGTLRGenomics_CigarUnit_Operation_ClipSoft    = @"CLIP_SOFT";
NSString * const kGTLRGenomics_CigarUnit_Operation_Delete      = @"DELETE";
NSString * const kGTLRGenomics_CigarUnit_Operation_Insert      = @"INSERT";
NSString * const kGTLRGenomics_CigarUnit_Operation_OperationUnspecified = @"OPERATION_UNSPECIFIED";
NSString * const kGTLRGenomics_CigarUnit_Operation_Pad         = @"PAD";
NSString * const kGTLRGenomics_CigarUnit_Operation_SequenceMatch = @"SEQUENCE_MATCH";
NSString * const kGTLRGenomics_CigarUnit_Operation_SequenceMismatch = @"SEQUENCE_MISMATCH";
NSString * const kGTLRGenomics_CigarUnit_Operation_Skip        = @"SKIP";

// GTLRGenomics_ExportVariantSetRequest.format
NSString * const kGTLRGenomics_ExportVariantSetRequest_Format_FormatBigquery = @"FORMAT_BIGQUERY";
NSString * const kGTLRGenomics_ExportVariantSetRequest_Format_FormatUnspecified = @"FORMAT_UNSPECIFIED";

// GTLRGenomics_FailedEvent.code
NSString * const kGTLRGenomics_FailedEvent_Code_Aborted        = @"ABORTED";
NSString * const kGTLRGenomics_FailedEvent_Code_AlreadyExists  = @"ALREADY_EXISTS";
NSString * const kGTLRGenomics_FailedEvent_Code_Cancelled      = @"CANCELLED";
NSString * const kGTLRGenomics_FailedEvent_Code_DataLoss       = @"DATA_LOSS";
NSString * const kGTLRGenomics_FailedEvent_Code_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRGenomics_FailedEvent_Code_FailedPrecondition = @"FAILED_PRECONDITION";
NSString * const kGTLRGenomics_FailedEvent_Code_Internal       = @"INTERNAL";
NSString * const kGTLRGenomics_FailedEvent_Code_InvalidArgument = @"INVALID_ARGUMENT";
NSString * const kGTLRGenomics_FailedEvent_Code_NotFound       = @"NOT_FOUND";
NSString * const kGTLRGenomics_FailedEvent_Code_Ok             = @"OK";
NSString * const kGTLRGenomics_FailedEvent_Code_OutOfRange     = @"OUT_OF_RANGE";
NSString * const kGTLRGenomics_FailedEvent_Code_PermissionDenied = @"PERMISSION_DENIED";
NSString * const kGTLRGenomics_FailedEvent_Code_ResourceExhausted = @"RESOURCE_EXHAUSTED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unauthenticated = @"UNAUTHENTICATED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unavailable    = @"UNAVAILABLE";
NSString * const kGTLRGenomics_FailedEvent_Code_Unimplemented  = @"UNIMPLEMENTED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unknown        = @"UNKNOWN";

// GTLRGenomics_ImportReadGroupSetsRequest.partitionStrategy
NSString * const kGTLRGenomics_ImportReadGroupSetsRequest_PartitionStrategy_MergeAll = @"MERGE_ALL";
NSString * const kGTLRGenomics_ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategyUnspecified = @"PARTITION_STRATEGY_UNSPECIFIED";
NSString * const kGTLRGenomics_ImportReadGroupSetsRequest_PartitionStrategy_PerFilePerSample = @"PER_FILE_PER_SAMPLE";

// GTLRGenomics_ImportVariantsRequest.format
NSString * const kGTLRGenomics_ImportVariantsRequest_Format_FormatCompleteGenomics = @"FORMAT_COMPLETE_GENOMICS";
NSString * const kGTLRGenomics_ImportVariantsRequest_Format_FormatUnspecified = @"FORMAT_UNSPECIFIED";
NSString * const kGTLRGenomics_ImportVariantsRequest_Format_FormatVcf = @"FORMAT_VCF";

// GTLRGenomics_ImportVariantsRequest_InfoMergeConfig.infoMergeConfig
NSString * const kGTLRGenomics_ImportVariantsRequest_InfoMergeConfig_InfoMergeConfig_IgnoreNew = @"IGNORE_NEW";
NSString * const kGTLRGenomics_ImportVariantsRequest_InfoMergeConfig_InfoMergeConfig_InfoMergeOperationUnspecified = @"INFO_MERGE_OPERATION_UNSPECIFIED";
NSString * const kGTLRGenomics_ImportVariantsRequest_InfoMergeConfig_InfoMergeConfig_MoveToCalls = @"MOVE_TO_CALLS";

// GTLRGenomics_MergeVariantsRequest_InfoMergeConfig.infoMergeConfig
NSString * const kGTLRGenomics_MergeVariantsRequest_InfoMergeConfig_InfoMergeConfig_IgnoreNew = @"IGNORE_NEW";
NSString * const kGTLRGenomics_MergeVariantsRequest_InfoMergeConfig_InfoMergeConfig_InfoMergeOperationUnspecified = @"INFO_MERGE_OPERATION_UNSPECIFIED";
NSString * const kGTLRGenomics_MergeVariantsRequest_InfoMergeConfig_InfoMergeConfig_MoveToCalls = @"MOVE_TO_CALLS";

// GTLRGenomics_SearchAnnotationSetsRequest.types
NSString * const kGTLRGenomics_SearchAnnotationSetsRequest_Types_AnnotationTypeUnspecified = @"ANNOTATION_TYPE_UNSPECIFIED";
NSString * const kGTLRGenomics_SearchAnnotationSetsRequest_Types_Gene = @"GENE";
NSString * const kGTLRGenomics_SearchAnnotationSetsRequest_Types_Generic = @"GENERIC";
NSString * const kGTLRGenomics_SearchAnnotationSetsRequest_Types_Transcript = @"TRANSCRIPT";
NSString * const kGTLRGenomics_SearchAnnotationSetsRequest_Types_Variant = @"VARIANT";

// GTLRGenomics_VariantAnnotation.clinicalSignificance
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Association = @"ASSOCIATION";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Benign = @"BENIGN";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_ClinicalSignificanceOther = @"CLINICAL_SIGNIFICANCE_OTHER";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_ClinicalSignificanceUnspecified = @"CLINICAL_SIGNIFICANCE_UNSPECIFIED";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_ConfersSensitivity = @"CONFERS_SENSITIVITY";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_DrugResponse = @"DRUG_RESPONSE";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Histocompatibility = @"HISTOCOMPATIBILITY";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_LikelyBenign = @"LIKELY_BENIGN";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_LikelyPathogenic = @"LIKELY_PATHOGENIC";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_MultipleReported = @"MULTIPLE_REPORTED";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Pathogenic = @"PATHOGENIC";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Protective = @"PROTECTIVE";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_RiskFactor = @"RISK_FACTOR";
NSString * const kGTLRGenomics_VariantAnnotation_ClinicalSignificance_Uncertain = @"UNCERTAIN";

// GTLRGenomics_VariantAnnotation.effect
NSString * const kGTLRGenomics_VariantAnnotation_Effect_EffectOther = @"EFFECT_OTHER";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_EffectUnspecified = @"EFFECT_UNSPECIFIED";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_FramePreservingIndel = @"FRAME_PRESERVING_INDEL";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_Frameshift = @"FRAMESHIFT";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_NonsynonymousSnp = @"NONSYNONYMOUS_SNP";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_SpliceSiteDisruption = @"SPLICE_SITE_DISRUPTION";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_StopGain = @"STOP_GAIN";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_StopLoss = @"STOP_LOSS";
NSString * const kGTLRGenomics_VariantAnnotation_Effect_SynonymousSnp = @"SYNONYMOUS_SNP";

// GTLRGenomics_VariantAnnotation.type
NSString * const kGTLRGenomics_VariantAnnotation_Type_Cnv      = @"CNV";
NSString * const kGTLRGenomics_VariantAnnotation_Type_Deletion = @"DELETION";
NSString * const kGTLRGenomics_VariantAnnotation_Type_Insertion = @"INSERTION";
NSString * const kGTLRGenomics_VariantAnnotation_Type_Snp      = @"SNP";
NSString * const kGTLRGenomics_VariantAnnotation_Type_Structural = @"STRUCTURAL";
NSString * const kGTLRGenomics_VariantAnnotation_Type_Substitution = @"SUBSTITUTION";
NSString * const kGTLRGenomics_VariantAnnotation_Type_TypeOther = @"TYPE_OTHER";
NSString * const kGTLRGenomics_VariantAnnotation_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRGenomics_VariantSetMetadata.type
NSString * const kGTLRGenomics_VariantSetMetadata_Type_Character = @"CHARACTER";
NSString * const kGTLRGenomics_VariantSetMetadata_Type_Flag    = @"FLAG";
NSString * const kGTLRGenomics_VariantSetMetadata_Type_Float   = @"FLOAT";
NSString * const kGTLRGenomics_VariantSetMetadata_Type_Integer = @"INTEGER";
NSString * const kGTLRGenomics_VariantSetMetadata_Type_String  = @"STRING";
NSString * const kGTLRGenomics_VariantSetMetadata_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Annotation
//

@implementation GTLRGenomics_Annotation
@dynamic annotationSetId, end, identifier, info, name, referenceId,
         referenceName, reverseStrand, start, transcript, type, variant;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Annotation_Info
//

@implementation GTLRGenomics_Annotation_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_AnnotationSet
//

@implementation GTLRGenomics_AnnotationSet
@dynamic datasetId, identifier, info, name, referenceSetId, sourceUri, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_AnnotationSet_Info
//

@implementation GTLRGenomics_AnnotationSet_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_BatchCreateAnnotationsRequest
//

@implementation GTLRGenomics_BatchCreateAnnotationsRequest
@dynamic annotations, requestId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotations" : [GTLRGenomics_Annotation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_BatchCreateAnnotationsResponse
//

@implementation GTLRGenomics_BatchCreateAnnotationsResponse
@dynamic entries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"entries" : [GTLRGenomics_Entry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Binding
//

@implementation GTLRGenomics_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CallSet
//

@implementation GTLRGenomics_CallSet
@dynamic created, identifier, info, name, sampleId, variantSetIds;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"variantSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CallSet_Info
//

@implementation GTLRGenomics_CallSet_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CancelOperationRequest
//

@implementation GTLRGenomics_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CigarUnit
//

@implementation GTLRGenomics_CigarUnit
@dynamic operation, operationLength, referenceSequence;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ClinicalCondition
//

@implementation GTLRGenomics_ClinicalCondition
@dynamic conceptId, externalIds, names, omimId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"externalIds" : [GTLRGenomics_ExternalId class],
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CodingSequence
//

@implementation GTLRGenomics_CodingSequence
@dynamic end, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ComputeEngine
//

@implementation GTLRGenomics_ComputeEngine
@dynamic diskNames, instanceName, machineType, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diskNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerKilledEvent
//

@implementation GTLRGenomics_ContainerKilledEvent
@dynamic actionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStartedEvent
//

@implementation GTLRGenomics_ContainerStartedEvent
@dynamic actionId, ipAddress, portMappings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStartedEvent_PortMappings
//

@implementation GTLRGenomics_ContainerStartedEvent_PortMappings

+ (Class)classForAdditionalProperties {
  return [NSNumber class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStoppedEvent
//

@implementation GTLRGenomics_ContainerStoppedEvent
@dynamic actionId, exitStatus, stderr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CoverageBucket
//

@implementation GTLRGenomics_CoverageBucket
@dynamic meanCoverage, range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Dataset
//

@implementation GTLRGenomics_Dataset
@dynamic createTime, identifier, name, projectId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_DelayedEvent
//

@implementation GTLRGenomics_DelayedEvent
@dynamic cause, metrics;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metrics" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Empty
//

@implementation GTLRGenomics_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Entry
//

@implementation GTLRGenomics_Entry
@dynamic annotation, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Event
//

@implementation GTLRGenomics_Event
@dynamic descriptionProperty, details, timestamp;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Event_Details
//

@implementation GTLRGenomics_Event_Details

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Exon
//

@implementation GTLRGenomics_Exon
@dynamic end, frame, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Experiment
//

@implementation GTLRGenomics_Experiment
@dynamic instrumentModel, libraryId, platformUnit, sequencingCenter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ExportReadGroupSetRequest
//

@implementation GTLRGenomics_ExportReadGroupSetRequest
@dynamic exportUri, projectId, referenceNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"referenceNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ExportVariantSetRequest
//

@implementation GTLRGenomics_ExportVariantSetRequest
@dynamic bigqueryDataset, bigqueryTable, callSetIds, format, projectId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"callSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Expr
//

@implementation GTLRGenomics_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ExternalId
//

@implementation GTLRGenomics_ExternalId
@dynamic identifier, sourceName;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_FailedEvent
//

@implementation GTLRGenomics_FailedEvent
@dynamic cause, code;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_GetIamPolicyRequest
//

@implementation GTLRGenomics_GetIamPolicyRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ImportReadGroupSetsRequest
//

@implementation GTLRGenomics_ImportReadGroupSetsRequest
@dynamic datasetId, partitionStrategy, referenceSetId, sourceUris;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ImportReadGroupSetsResponse
//

@implementation GTLRGenomics_ImportReadGroupSetsResponse
@dynamic readGroupSetIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"readGroupSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ImportVariantsRequest
//

@implementation GTLRGenomics_ImportVariantsRequest
@dynamic format, infoMergeConfig, normalizeReferenceNames, sourceUris,
         variantSetId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ImportVariantsRequest_InfoMergeConfig
//

@implementation GTLRGenomics_ImportVariantsRequest_InfoMergeConfig

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ImportVariantsResponse
//

@implementation GTLRGenomics_ImportVariantsResponse
@dynamic callSetIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"callSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_LinearAlignment
//

@implementation GTLRGenomics_LinearAlignment
@dynamic cigar, mappingQuality, position;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cigar" : [GTLRGenomics_CigarUnit class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ListBasesResponse
//

@implementation GTLRGenomics_ListBasesResponse
@dynamic nextPageToken, offset, sequence;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ListCoverageBucketsResponse
//

@implementation GTLRGenomics_ListCoverageBucketsResponse
@dynamic bucketWidth, coverageBuckets, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"coverageBuckets" : [GTLRGenomics_CoverageBucket class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"coverageBuckets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ListDatasetsResponse
//

@implementation GTLRGenomics_ListDatasetsResponse
@dynamic datasets, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"datasets" : [GTLRGenomics_Dataset class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"datasets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ListOperationsResponse
//

@implementation GTLRGenomics_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRGenomics_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_MergeVariantsRequest
//

@implementation GTLRGenomics_MergeVariantsRequest
@dynamic infoMergeConfig, variants, variantSetId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"variants" : [GTLRGenomics_Variant class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_MergeVariantsRequest_InfoMergeConfig
//

@implementation GTLRGenomics_MergeVariantsRequest_InfoMergeConfig

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation
//

@implementation GTLRGenomics_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation_Metadata
//

@implementation GTLRGenomics_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation_Response
//

@implementation GTLRGenomics_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_OperationEvent
//

@implementation GTLRGenomics_OperationEvent
@dynamic descriptionProperty, endTime, startTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_OperationMetadata
//

@implementation GTLRGenomics_OperationMetadata
@dynamic clientId, createTime, endTime, events, labels, projectId, request,
         runtimeMetadata, startTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"events" : [GTLRGenomics_OperationEvent class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_OperationMetadata_Labels
//

@implementation GTLRGenomics_OperationMetadata_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_OperationMetadata_Request
//

@implementation GTLRGenomics_OperationMetadata_Request

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_OperationMetadata_RuntimeMetadata
//

@implementation GTLRGenomics_OperationMetadata_RuntimeMetadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Policy
//

@implementation GTLRGenomics_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRGenomics_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Position
//

@implementation GTLRGenomics_Position
@dynamic position, referenceName, reverseStrand;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Program
//

@implementation GTLRGenomics_Program
@dynamic commandLine, identifier, name, prevProgramId, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_PullStartedEvent
//

@implementation GTLRGenomics_PullStartedEvent
@dynamic imageUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_PullStoppedEvent
//

@implementation GTLRGenomics_PullStoppedEvent
@dynamic imageUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Range
//

@implementation GTLRGenomics_Range
@dynamic end, referenceName, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Read
//

@implementation GTLRGenomics_Read
@dynamic alignedQuality, alignedSequence, alignment, duplicateFragment,
         failedVendorQualityChecks, fragmentLength, fragmentName, identifier,
         info, nextMatePosition, numberReads, properPlacement, readGroupId,
         readGroupSetId, readNumber, secondaryAlignment, supplementaryAlignment;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"alignedQuality" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Read_Info
//

@implementation GTLRGenomics_Read_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReadGroup
//

@implementation GTLRGenomics_ReadGroup
@dynamic datasetId, descriptionProperty, experiment, identifier, info, name,
         predictedInsertSize, programs, referenceSetId, sampleId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"programs" : [GTLRGenomics_Program class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReadGroup_Info
//

@implementation GTLRGenomics_ReadGroup_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReadGroupSet
//

@implementation GTLRGenomics_ReadGroupSet
@dynamic datasetId, filename, identifier, info, name, readGroups,
         referenceSetId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"readGroups" : [GTLRGenomics_ReadGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReadGroupSet_Info
//

@implementation GTLRGenomics_ReadGroupSet_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Reference
//

@implementation GTLRGenomics_Reference
@dynamic identifier, length, md5checksum, name, ncbiTaxonId, sourceAccessions,
         sourceUri;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceAccessions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReferenceBound
//

@implementation GTLRGenomics_ReferenceBound
@dynamic referenceName, upperBound;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ReferenceSet
//

@implementation GTLRGenomics_ReferenceSet
@dynamic assemblyId, descriptionProperty, identifier, md5checksum, ncbiTaxonId,
         referenceIds, sourceAccessions, sourceUri;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"referenceIds" : [NSString class],
    @"sourceAccessions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_RunPipelineResponse
//

@implementation GTLRGenomics_RunPipelineResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_RuntimeMetadata
//

@implementation GTLRGenomics_RuntimeMetadata
@dynamic computeEngine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchAnnotationSetsRequest
//

@implementation GTLRGenomics_SearchAnnotationSetsRequest
@dynamic datasetIds, name, pageSize, pageToken, referenceSetId, types;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"datasetIds" : [NSString class],
    @"types" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchAnnotationSetsResponse
//

@implementation GTLRGenomics_SearchAnnotationSetsResponse
@dynamic annotationSets, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotationSets" : [GTLRGenomics_AnnotationSet class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"annotationSets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchAnnotationsRequest
//

@implementation GTLRGenomics_SearchAnnotationsRequest
@dynamic annotationSetIds, end, pageSize, pageToken, referenceId, referenceName,
         start;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotationSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchAnnotationsResponse
//

@implementation GTLRGenomics_SearchAnnotationsResponse
@dynamic annotations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotations" : [GTLRGenomics_Annotation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"annotations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchCallSetsRequest
//

@implementation GTLRGenomics_SearchCallSetsRequest
@dynamic name, pageSize, pageToken, variantSetIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"variantSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchCallSetsResponse
//

@implementation GTLRGenomics_SearchCallSetsResponse
@dynamic callSets, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"callSets" : [GTLRGenomics_CallSet class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"callSets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReadGroupSetsRequest
//

@implementation GTLRGenomics_SearchReadGroupSetsRequest
@dynamic datasetIds, name, pageSize, pageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"datasetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReadGroupSetsResponse
//

@implementation GTLRGenomics_SearchReadGroupSetsResponse
@dynamic nextPageToken, readGroupSets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"readGroupSets" : [GTLRGenomics_ReadGroupSet class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"readGroupSets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReadsRequest
//

@implementation GTLRGenomics_SearchReadsRequest
@dynamic end, pageSize, pageToken, readGroupIds, readGroupSetIds, referenceName,
         start;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"readGroupIds" : [NSString class],
    @"readGroupSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReadsResponse
//

@implementation GTLRGenomics_SearchReadsResponse
@dynamic alignments, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"alignments" : [GTLRGenomics_Read class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"alignments";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReferenceSetsRequest
//

@implementation GTLRGenomics_SearchReferenceSetsRequest
@dynamic accessions, assemblyId, md5checksums, pageSize, pageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessions" : [NSString class],
    @"md5checksums" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReferenceSetsResponse
//

@implementation GTLRGenomics_SearchReferenceSetsResponse
@dynamic nextPageToken, referenceSets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"referenceSets" : [GTLRGenomics_ReferenceSet class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"referenceSets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReferencesRequest
//

@implementation GTLRGenomics_SearchReferencesRequest
@dynamic accessions, md5checksums, pageSize, pageToken, referenceSetId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessions" : [NSString class],
    @"md5checksums" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchReferencesResponse
//

@implementation GTLRGenomics_SearchReferencesResponse
@dynamic nextPageToken, references;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"references" : [GTLRGenomics_Reference class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"references";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchVariantSetsRequest
//

@implementation GTLRGenomics_SearchVariantSetsRequest
@dynamic datasetIds, pageSize, pageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"datasetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchVariantSetsResponse
//

@implementation GTLRGenomics_SearchVariantSetsResponse
@dynamic nextPageToken, variantSets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"variantSets" : [GTLRGenomics_VariantSet class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"variantSets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchVariantsRequest
//

@implementation GTLRGenomics_SearchVariantsRequest
@dynamic callSetIds, end, maxCalls, pageSize, pageToken, referenceName, start,
         variantName, variantSetIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"callSetIds" : [NSString class],
    @"variantSetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SearchVariantsResponse
//

@implementation GTLRGenomics_SearchVariantsResponse
@dynamic nextPageToken, variants;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"variants" : [GTLRGenomics_Variant class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"variants";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_SetIamPolicyRequest
//

@implementation GTLRGenomics_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Status
//

@implementation GTLRGenomics_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRGenomics_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Status_Details_Item
//

@implementation GTLRGenomics_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_TestIamPermissionsRequest
//

@implementation GTLRGenomics_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_TestIamPermissionsResponse
//

@implementation GTLRGenomics_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Transcript
//

@implementation GTLRGenomics_Transcript
@dynamic codingSequence, exons, geneId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exons" : [GTLRGenomics_Exon class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_UndeleteDatasetRequest
//

@implementation GTLRGenomics_UndeleteDatasetRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_UnexpectedExitStatusEvent
//

@implementation GTLRGenomics_UnexpectedExitStatusEvent
@dynamic actionId, exitStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Variant
//

@implementation GTLRGenomics_Variant
@dynamic alternateBases, calls, created, end, filter, identifier, info, names,
         quality, referenceBases, referenceName, start, variantSetId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"alternateBases" : [NSString class],
    @"calls" : [GTLRGenomics_VariantCall class],
    @"filter" : [NSString class],
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Variant_Info
//

@implementation GTLRGenomics_Variant_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantAnnotation
//

@implementation GTLRGenomics_VariantAnnotation
@dynamic alternateBases, clinicalSignificance, conditions, effect, geneId,
         transcriptIds, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRGenomics_ClinicalCondition class],
    @"transcriptIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantCall
//

@implementation GTLRGenomics_VariantCall
@dynamic callSetId, callSetName, genotype, genotypeLikelihood, info, phaseset;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"genotype" : [NSNumber class],
    @"genotypeLikelihood" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantCall_Info
//

@implementation GTLRGenomics_VariantCall_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantSet
//

@implementation GTLRGenomics_VariantSet
@dynamic datasetId, descriptionProperty, identifier, metadata, name,
         referenceBounds, referenceSetId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metadata" : [GTLRGenomics_VariantSetMetadata class],
    @"referenceBounds" : [GTLRGenomics_ReferenceBound class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantSetMetadata
//

@implementation GTLRGenomics_VariantSetMetadata
@dynamic descriptionProperty, identifier, info, key, number, type, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VariantSetMetadata_Info
//

@implementation GTLRGenomics_VariantSetMetadata_Info

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerAssignedEvent
//

@implementation GTLRGenomics_WorkerAssignedEvent
@dynamic instance, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerReleasedEvent
//

@implementation GTLRGenomics_WorkerReleasedEvent
@dynamic instance, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end
