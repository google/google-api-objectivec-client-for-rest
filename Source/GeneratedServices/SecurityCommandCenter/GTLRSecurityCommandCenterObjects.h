// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Command Center API (securitycenter/v1)
// Description:
//   Security Command Center API provides access to temporal views of assets and
//   findings within an organization.
// Documentation:
//   https://console.cloud.google.com/apis/api/securitycenter.googleapis.com/overview

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSecurityCommandCenter_Asset;
@class GTLRSecurityCommandCenter_Asset_ResourceProperties;
@class GTLRSecurityCommandCenter_AssetDiscoveryConfig;
@class GTLRSecurityCommandCenter_AuditConfig;
@class GTLRSecurityCommandCenter_AuditLogConfig;
@class GTLRSecurityCommandCenter_Binding;
@class GTLRSecurityCommandCenter_Expr;
@class GTLRSecurityCommandCenter_Finding;
@class GTLRSecurityCommandCenter_Finding_SourceProperties;
@class GTLRSecurityCommandCenter_GetPolicyOptions;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset_ResourceProperties;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1IamPolicy;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityCenterProperties;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource;
@class GTLRSecurityCommandCenter_GroupResult;
@class GTLRSecurityCommandCenter_GroupResult_Properties;
@class GTLRSecurityCommandCenter_IamPolicy;
@class GTLRSecurityCommandCenter_ListAssetsResult;
@class GTLRSecurityCommandCenter_ListFindingsResult;
@class GTLRSecurityCommandCenter_NotificationConfig;
@class GTLRSecurityCommandCenter_Operation;
@class GTLRSecurityCommandCenter_Operation_Metadata;
@class GTLRSecurityCommandCenter_Operation_Response;
@class GTLRSecurityCommandCenter_Policy;
@class GTLRSecurityCommandCenter_Resource;
@class GTLRSecurityCommandCenter_SecurityCenterProperties;
@class GTLRSecurityCommandCenter_SecurityMarks;
@class GTLRSecurityCommandCenter_SecurityMarks_Marks;
@class GTLRSecurityCommandCenter_Source;
@class GTLRSecurityCommandCenter_Status;
@class GTLRSecurityCommandCenter_Status_Details_Item;
@class GTLRSecurityCommandCenter_StreamingConfig;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_AssetDiscoveryConfig.inclusionMode

/**
 *  Asset Discovery will ignore all resources under the projects specified.
 *  All other resources will be retrieved.
 *
 *  Value: "EXCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_Exclude;
/**
 *  Asset Discovery will capture only the resources within the projects
 *  specified. All other resources will be ignored.
 *
 *  Value: "INCLUDE_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_IncludeOnly;
/**
 *  Unspecified. Setting the mode with this value will disable
 *  inclusion/exclusion filtering for Asset Discovery.
 *
 *  Value: "INCLUSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_InclusionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Finding.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another
 *  run for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another
 *  run for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset.changeType

/**
 *  Unspecified or default.
 *
 *  Value: "CHANGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_ChangeTypeUnspecified;
/**
 *  Newly created Asset
 *
 *  Value: "CREATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Created;
/**
 *  Asset was deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Deleted;
/**
 *  Asset was updated.
 *
 *  Value: "UPDATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Updated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another
 *  run for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_ListAssetsResult.stateChange

/**
 *  Asset was present at both point(s) in time.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Active;
/**
 *  Asset was added between the points in time.
 *
 *  Value: "ADDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Added;
/**
 *  Asset was removed between the points in time.
 *
 *  Value: "REMOVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Removed;
/**
 *  State change is unused, this is the canonical default for this enum.
 *
 *  Value: "UNUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Unused;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_ListFindingsResult.stateChange

/**
 *  The finding was created between the points in time.
 *
 *  Value: "ADDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Added;
/**
 *  The finding has changed state in some way between the points in time
 *  and existed at both points.
 *
 *  Value: "CHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Changed;
/**
 *  The finding at timestamp does not match the filter specified, but it
 *  did at timestamp - compare_duration.
 *
 *  Value: "REMOVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Removed;
/**
 *  The finding has not changed state between the points in time and
 *  existed at both points.
 *
 *  Value: "UNCHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unchanged;
/**
 *  State change is unused, this is the canonical default for this enum.
 *
 *  Value: "UNUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unused;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_SetFindingStateRequest.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_StateUnspecified;

/**
 *  Security Command Center representation of a Google Cloud
 *  resource.
 *  The Asset is a Security Command Center resource that captures information
 *  about a single Google Cloud resource. All modifications to an Asset are only
 *  within the context of Security Command Center and don't affect the
 *  referenced
 *  Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_Asset : GTLRObject

/** The time at which the asset was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the
 *  user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_IamPolicy *iamPolicy;

/**
 *  The relative resource name of this asset. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/assets/{asset_id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Resource managed properties. These properties are managed and defined by
 *  the Google Cloud resource and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Asset_ResourceProperties *resourceProperties;

/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityCenterProperties *securityCenterProperties;

/**
 *  User specified security marks. These marks are entirely managed by the user
 *  and come from the SecurityMarks resource that belongs to the asset.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks *securityMarks;

/**
 *  The time at which the asset was last updated, added, or deleted in Security
 *  Command Center.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Resource managed properties. These properties are managed and defined by
 *  the Google Cloud resource and cannot be modified by the user.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Asset_ResourceProperties : GTLRObject
@end


/**
 *  The configuration used for Asset Discovery runs.
 */
@interface GTLRSecurityCommandCenter_AssetDiscoveryConfig : GTLRObject

/**
 *  The mode to use for filtering asset discovery.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_Exclude
 *        Asset Discovery will ignore all resources under the projects
 *        specified.
 *        All other resources will be retrieved. (Value: "EXCLUDE")
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_IncludeOnly
 *        Asset Discovery will capture only the resources within the projects
 *        specified. All other resources will be ignored. (Value:
 *        "INCLUDE_ONLY")
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_InclusionModeUnspecified
 *        Unspecified. Setting the mode with this value will disable
 *        inclusion/exclusion filtering for Asset Discovery. (Value:
 *        "INCLUSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *inclusionMode;

/** The project ids to use for filtering asset discovery. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *projectIds;

@end


/**
 *  Specifies the audit configuration for a service.
 *  The configuration determines which permission types are logged, and what
 *  identities, if any, are exempted from logging.
 *  An AuditConfig must have one or more AuditLogConfigs.
 *  If there are AuditConfigs for both `allServices` and a specific service,
 *  the union of the two AuditConfigs is used for that service: the log_types
 *  specified in each AuditConfig are enabled, and the exempted_members in each
 *  AuditLogConfig are exempted.
 *  Example Policy with multiple AuditConfigs:
 *  {
 *  "audit_configs": [
 *  {
 *  "service": "allServices",
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ",
 *  "exempted_members": [
 *  "user:jose\@example.com"
 *  ]
 *  },
 *  {
 *  "log_type": "DATA_WRITE"
 *  },
 *  {
 *  "log_type": "ADMIN_READ"
 *  }
 *  ]
 *  },
 *  {
 *  "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ"
 *  },
 *  {
 *  "log_type": "DATA_WRITE",
 *  "exempted_members": [
 *  "user:aliya\@example.com"
 *  ]
 *  }
 *  ]
 *  }
 *  ]
 *  }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts jose\@example.com from DATA_READ logging, and
 *  aliya\@example.com from DATA_WRITE logging.
 */
@interface GTLRSecurityCommandCenter_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging.
 *  For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
 *  `allServices` is a special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions.
 *  Example:
 *  {
 *  "audit_log_configs": [
 *  {
 *  "log_type": "DATA_READ",
 *  "exempted_members": [
 *  "user:jose\@example.com"
 *  ]
 *  },
 *  {
 *  "log_type": "DATA_WRITE"
 *  }
 *  ]
 *  }
 *  This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
 *  jose\@example.com from DATA_READ logging.
 */
@interface GTLRSecurityCommandCenter_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission.
 *  Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataRead Data
 *        reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members` with a `role`.
 */
@interface GTLRSecurityCommandCenter_Binding : GTLRObject

/**
 *  The condition that is associated with this binding.
 *  If the condition evaluates to `true`, then this binding applies to the
 *  current request.
 *  If the condition evaluates to `false`, then this binding does not apply to
 *  the current request. However, a different role binding might grant the same
 *  role to one or more of the members in this binding.
 *  To learn which resources support conditions in their IAM policies, see the
 *  [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Expr *condition;

/**
 *  Specifies the identities requesting access for a Cloud Platform resource.
 *  `members` can have the following values:
 *  * `allUsers`: A special identifier that represents anyone who is
 *  on the internet; with or without a Google account.
 *  * `allAuthenticatedUsers`: A special identifier that represents anyone
 *  who is authenticated with a Google account or a service account.
 *  * `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@example.com` .
 *  * `serviceAccount:{emailid}`: An email address that represents a service
 *  account. For example, `my-other-app\@appspot.gserviceaccount.com`.
 *  * `group:{emailid}`: An email address that represents a Google group.
 *  For example, `admins\@example.com`.
 *  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For
 *  example, `alice\@example.com?uid=123456789012345678901`. If the user is
 *  recovered, this value reverts to `user:{emailid}` and the recovered user
 *  retains the role in the binding.
 *  * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
 *  unique identifier) representing a service account that has been recently
 *  deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`.
 *  If the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding.
 *  * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a Google group that has been recently
 *  deleted. For example, `admins\@example.com?uid=123456789012345678901`. If
 *  the group is recovered, this value reverts to `group:{emailid}` and the
 *  recovered group retains the role in the binding.
 *  * `domain:{domain}`: The G Suite domain (primary) that represents all the
 *  users of that domain. For example, `google.com` or `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to `members`.
 *  For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRSecurityCommandCenter_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec.
 *  Example (Comparison):
 *  title: "Summary size limit"
 *  description: "Determines if a summary is less than 100 chars"
 *  expression: "document.summary.size() < 100"
 *  Example (Equality):
 *  title: "Requestor is owner"
 *  description: "Determines if requestor is the document owner"
 *  expression: "document.owner == request.auth.claims.email"
 *  Example (Logic):
 *  title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation):
 *  title: "Notification string"
 *  description: "Create a notification string with a timestamp."
 *  expression: "'New message received at ' + string(document.create_time)"
 *  The exact variables and functions that may be referenced within an
 *  expression
 *  are determined by the service that evaluates it. See the service
 *  documentation for additional information.
 */
@interface GTLRSecurityCommandCenter_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing
 *  its purpose. This can be used e.g. in UIs which allow to enter the
 *  expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Security Command Center finding.
 *  A finding is a record of assessment data like security, risk, health, or
 *  privacy, that is ingested into Security Command Center for presentation,
 *  notification, analysis, policy testing, and enforcement. For example, a
 *  cross-site scripting (XSS) vulnerability in an App Engine application is a
 *  finding.
 */
@interface GTLRSecurityCommandCenter_Finding : GTLRObject

/**
 *  The additional taxonomy group within findings from a given source.
 *  This field is immutable after creation time.
 *  Example: "XSS_FLASH_INJECTION"
 */
@property(nonatomic, copy, nullable) NSString *category;

/** The time at which the finding was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The time at which the event took place. For example, if the finding
 *  represents an open firewall it would capture the time the detector believes
 *  the firewall became open. The accuracy is determined by the detector.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  The URI that, if available, points to a web page outside of Security
 *  Command Center where additional information about the finding can be found.
 *  This field is guaranteed to be either empty or a well formed URL.
 */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  The relative resource name of this finding. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The relative resource name of the source the finding belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  This field is immutable after creation time.
 *  For example:
 *  "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  For findings on Google Cloud resources, the full resource
 *  name of the Google Cloud resource this finding is for. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *  When the finding is for a non-Google Cloud resource, the resourceName can
 *  be a customer or partner defined string. This field is immutable after
 *  creation time.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Output only. User specified security marks. These marks are entirely
 *  managed by the user and come from the SecurityMarks resource that belongs
 *  to the finding.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks *securityMarks;

/**
 *  Source specific properties. These properties are managed by the source
 *  that writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding_SourceProperties *sourceProperties;

/**
 *  The state of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_Active The finding
 *        requires attention and has not been addressed yet. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_Inactive The finding has
 *        been fixed, triaged as a non-issue or otherwise addressed
 *        and is no longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Source specific properties. These properties are managed by the source
 *  that writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Finding_SourceProperties : GTLRObject
@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRSecurityCommandCenter_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRSecurityCommandCenter_GetPolicyOptions : GTLRObject

/**
 *  Optional. The policy format version to be returned.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected.
 *  Requests for policies with any conditional bindings must specify version 3.
 *  Policies without any conditional bindings may specify any valid value or
 *  leave the field unset.
 *  To learn which resources support conditions in their IAM policies, see the
 *  [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Cloud SCC's Notification
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1NotificationMessage : GTLRObject

/**
 *  If it's a Finding based notification config, this field will be
 *  populated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding *finding;

/** Name of the notification config that generated current notification. */
@property(nonatomic, copy, nullable) NSString *notificationConfigName;

/** The Cloud resource tied to this notification's Finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource *resource;

@end


/**
 *  Security Command Center representation of a Google Cloud
 *  resource.
 *  The Asset is a Security Command Center resource that captures information
 *  about a single Google Cloud resource. All modifications to an Asset are only
 *  within the context of Security Command Center and don't affect the
 *  referenced
 *  Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset : GTLRObject

/** The time at which the asset was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the
 *  user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1IamPolicy *iamPolicy;

/**
 *  The relative resource name of this asset. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/assets/{asset_id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Resource managed properties. These properties are managed and defined by
 *  the Google Cloud resource and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset_ResourceProperties *resourceProperties;

/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityCenterProperties *securityCenterProperties;

/**
 *  User specified security marks. These marks are entirely managed by the user
 *  and come from the SecurityMarks resource that belongs to the asset.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks *securityMarks;

/**
 *  The time at which the asset was last updated, added, or deleted in Cloud
 *  SCC.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Resource managed properties. These properties are managed and defined by
 *  the Google Cloud resource and cannot be modified by the user.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset_ResourceProperties : GTLRObject
@end


/**
 *  Security Command Center finding.
 *  A finding is a record of assessment data (security, risk, health or privacy)
 *  ingested into Security Command Center for presentation, notification,
 *  analysis, policy testing, and enforcement. For example, an XSS vulnerability
 *  in an App Engine application is a finding.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding : GTLRObject

/**
 *  The additional taxonomy group within findings from a given source.
 *  This field is immutable after creation time.
 *  Example: "XSS_FLASH_INJECTION"
 */
@property(nonatomic, copy, nullable) NSString *category;

/** The time at which the finding was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The time at which the event took place. For example, if the finding
 *  represents an open firewall it would capture the time the detector believes
 *  the firewall became open. The accuracy is determined by the detector.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  The URI that, if available, points to a web page outside of Security
 *  Command Center where additional information about the finding can be found.
 *  This field is guaranteed to be either empty or a well formed URL.
 */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  The relative resource name of this finding. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The relative resource name of the source the finding belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  This field is immutable after creation time.
 *  For example:
 *  "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  For findings on Google Cloud resources, the full resource
 *  name of the Google Cloud resource this finding is for. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *  When the finding is for a non-Google Cloud resource, the resourceName can
 *  be a customer or partner defined string. This field is immutable after
 *  creation time.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Output only. User specified security marks. These marks are entirely
 *  managed by the user and come from the SecurityMarks resource that belongs
 *  to the finding.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks *securityMarks;

/**
 *  Source specific properties. These properties are managed by the source
 *  that writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties *sourceProperties;

/**
 *  The state of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Active
 *        The finding requires attention and has not been addressed yet. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Inactive
 *        The finding has been fixed, triaged as a non-issue or otherwise
 *        addressed
 *        and is no longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Source specific properties. These properties are managed by the source
 *  that writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties : GTLRObject
@end


/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the
 *  user.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1IamPolicy : GTLRObject

/**
 *  The JSON representation of the Policy associated with the asset.
 *  See https://cloud.google.com/iam/docs/reference/rest/v1/Policy for
 *  format details.
 */
@property(nonatomic, copy, nullable) NSString *policyBlob;

@end


/**
 *  Security Command Center's Notification
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1NotificationMessage : GTLRObject

/**
 *  If it's a Finding based notification config, this field will be
 *  populated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding *finding;

/** Name of the notification config that generated current notification. */
@property(nonatomic, copy, nullable) NSString *notificationConfigName;

/** The Cloud resource tied to the notification. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource *resource;

/**
 *  If it's an asset based notification config, this field will be
 *  populated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset *temporalAsset;

@end


/**
 *  Information related to the Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource : GTLRObject

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *project;

/** The human readable name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityCenterProperties : GTLRObject

/** The user defined display name for this resource. */
@property(nonatomic, copy, nullable) NSString *resourceDisplayName;

/**
 *  The full resource name of the Google Cloud resource this asset
 *  represents. This field is immutable after create time. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/** Owners of the Google Cloud resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceOwners;

/**
 *  The full resource name of the immediate parent of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceParent;

/** The user defined display name for the parent of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceParentDisplayName;

/**
 *  The full resource name of the project the resource belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceProject;

/** The user defined display name for the project of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceProjectDisplayName;

/**
 *  The type of the Google Cloud resource. Examples include: APPLICATION,
 *  PROJECT, and ORGANIZATION. This is a case insensitive field defined by
 *  Security Command Center and/or the producer of the resource and is
 *  immutable after create time.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

@end


/**
 *  User specified security marks that are attached to the parent Security
 *  Command Center resource. Security marks are scoped within a Security Command
 *  Center organization -- they can be modified and viewed by all users who have
 *  proper permissions on the organization.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks : GTLRObject

/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows:
 *  * Keys and values are treated as case insensitive
 *  * Keys must be between 1 - 256 characters (inclusive)
 *  * Keys must be letters, numbers, underscores, or dashes
 *  * Values have leading and trailing whitespace trimmed, remaining
 *  characters must be between 1 - 4096 characters (inclusive)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks *marks;

/**
 *  The relative resource name of the SecurityMarks. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Examples:
 *  "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows:
 *  * Keys and values are treated as case insensitive
 *  * Keys must be between 1 - 256 characters (inclusive)
 *  * Keys must be letters, numbers, underscores, or dashes
 *  * Values have leading and trailing whitespace trimmed, remaining
 *  characters must be between 1 - 4096 characters (inclusive)
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks : GTLRObject
@end


/**
 *  Wrapper over asset object that also captures the state change for the asset
 *  e.g. if it was a newly created asset vs updated or deleted asset.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset : GTLRObject

/**
 *  Asset data that includes attributes, properties and marks about the asset.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Asset *asset;

/**
 *  Represents if the asset was created/updated/deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_ChangeTypeUnspecified
 *        Unspecified or default. (Value: "CHANGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Created
 *        Newly created Asset (Value: "CREATED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Deleted
 *        Asset was deleted. (Value: "DELETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1TemporalAsset_ChangeType_Updated
 *        Asset was updated. (Value: "UPDATED")
 */
@property(nonatomic, copy, nullable) NSString *changeType;

@end


/**
 *  Information related to the Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource : GTLRObject

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *project;

/** The human readable name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Request message for grouping by assets.
 */
@interface GTLRSecurityCommandCenter_GroupAssetsRequest : GTLRObject

/**
 *  When compare_duration is set, the GroupResult's "state_change" property is
 *  updated to indicate whether the asset was added, removed, or remained
 *  present during the compare_duration period of time that precedes the
 *  read_time. This is the time between (read_time - compare_duration) and
 *  read_time.
 *  The state change value is derived based on the presence of the asset at the
 *  two points in time. Intermediate state changes between the two times don't
 *  affect the result. For example, the results aren't affected if the asset is
 *  removed and re-created again.
 *  Possible "state_change" values when compare_duration is specified:
 *  * "ADDED": indicates that the asset was not present at the start of
 *  compare_duration, but present at reference_time.
 *  * "REMOVED": indicates that the asset was present at the start of
 *  compare_duration, but not present at reference_time.
 *  * "ACTIVE": indicates that the asset was present at both the
 *  start and the end of the time period defined by
 *  compare_duration and reference_time.
 *  If compare_duration is not specified, then the only possible state_change
 *  is "UNUSED", which will be the state_change set for all assets present at
 *  read_time.
 *  If this field is set then `state_change` must be a specified field in
 *  `group_by`.
 */
@property(nonatomic, strong, nullable) GTLRDuration *compareDuration;

/**
 *  Expression that defines the filter to apply across assets.
 *  The expression is a list of zero or more restrictions combined via logical
 *  operators `AND` and `OR`.
 *  Parentheses are supported, and `OR` has higher precedence than `AND`.
 *  Restrictions have the form `<field> <operator> <value>` and may have a `-`
 *  character in front of them to indicate negation. The fields map to those
 *  defined in the Asset resource. Examples include:
 *  * name
 *  * security_center_properties.resource_name
 *  * resource_properties.a_property
 *  * security_marks.marks.marka
 *  The supported operators are:
 *  * `=` for all value types.
 *  * `>`, `<`, `>=`, `<=` for integer values.
 *  * `:`, meaning substring matching, for strings.
 *  The supported value types are:
 *  * string literals in quotes.
 *  * integer literals without quotes.
 *  * boolean literals `true` and `false` without quotes.
 *  The following field and operator combinations are supported:
 *  * name: `=`
 *  * update_time: `=`, `>`, `<`, `>=`, `<=`
 *  Usage: This should be milliseconds since epoch or an RFC3339 string.
 *  Examples:
 *  `update_time = "2019-06-10T16:07:18-07:00"`
 *  `update_time = 1560208038000`
 *  * create_time: `=`, `>`, `<`, `>=`, `<=`
 *  Usage: This should be milliseconds since epoch or an RFC3339 string.
 *  Examples:
 *  `create_time = "2019-06-10T16:07:18-07:00"`
 *  `create_time = 1560208038000`
 *  * iam_policy.policy_blob: `=`, `:`
 *  * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
 *  * security_marks.marks: `=`, `:`
 *  * security_center_properties.resource_name: `=`, `:`
 *  * security_center_properties.resource_display_name: `=`, `:`
 *  * security_center_properties.resource_type: `=`, `:`
 *  * security_center_properties.resource_parent: `=`, `:`
 *  * security_center_properties.resource_parent_display_name: `=`, `:`
 *  * security_center_properties.resource_project: `=`, `:`
 *  * security_center_properties.resource_project_display_name: `=`, `:`
 *  * security_center_properties.resource_owners: `=`, `:`
 *  For example, `resource_properties.size = 100` is a valid filter string.
 *  Use a partial match on the empty string to filter based on a property
 *  existing: `resource_properties.my_property : ""`
 *  Use a negated partial match on the empty string to filter based on a
 *  property not existing: `-resource_properties.my_property : ""`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. Expression that defines what assets fields to use for grouping.
 *  The string
 *  value should follow SQL syntax: comma separated list of fields. For
 *  example:
 *  "security_center_properties.resource_project,security_center_properties.project".
 *  The following fields are supported when compare_duration is not set:
 *  * security_center_properties.resource_project
 *  * security_center_properties.resource_project_display_name
 *  * security_center_properties.resource_type
 *  * security_center_properties.resource_parent
 *  * security_center_properties.resource_parent_display_name
 *  The following fields are supported when compare_duration is set:
 *  * security_center_properties.resource_type
 *  * security_center_properties.resource_project_display_name
 *  * security_center_properties.resource_parent_display_name
 */
@property(nonatomic, copy, nullable) NSString *groupBy;

/**
 *  The maximum number of results to return in a single response. Default is
 *  10, minimum is 1, maximum is 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  The value returned by the last `GroupAssetsResponse`; indicates
 *  that this is a continuation of a prior `GroupAssets` call, and that the
 *  system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Time used as a reference point when filtering assets. The filter is limited
 *  to assets existing at the supplied time and their values are those at that
 *  specific time. Absence of this field will default to the API's version of
 *  NOW.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

@end


/**
 *  Response message for grouping by assets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groupByResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityCommandCenter_GroupAssetsResponse : GTLRCollectionObject

/**
 *  Group results. There exists an element for each existing unique
 *  combination of property/values. The element contains a count for the number
 *  of times those specific property/values appear.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GroupResult *> *groupByResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the groupBy request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of results matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Request message for grouping by findings.
 */
@interface GTLRSecurityCommandCenter_GroupFindingsRequest : GTLRObject

/**
 *  When compare_duration is set, the GroupResult's "state_change" attribute is
 *  updated to indicate whether the finding had its state changed, the
 *  finding's state remained unchanged, or if the finding was added during the
 *  compare_duration period of time that precedes the read_time. This is the
 *  time between (read_time - compare_duration) and read_time.
 *  The state_change value is derived based on the presence and state of the
 *  finding at the two points in time. Intermediate state changes between the
 *  two times don't affect the result. For example, the results aren't affected
 *  if the finding is made inactive and then active again.
 *  Possible "state_change" values when compare_duration is specified:
 *  * "CHANGED": indicates that the finding was present and matched the given
 *  filter at the start of compare_duration, but changed its
 *  state at read_time.
 *  * "UNCHANGED": indicates that the finding was present and matched the given
 *  filter at the start of compare_duration and did not change
 *  state at read_time.
 *  * "ADDED": indicates that the finding did not match the given filter or
 *  was not present at the start of compare_duration, but was
 *  present at read_time.
 *  * "REMOVED": indicates that the finding was present and matched the
 *  filter at the start of compare_duration, but did not match
 *  the filter at read_time.
 *  If compare_duration is not specified, then the only possible state_change
 *  is "UNUSED", which will be the state_change set for all findings present
 *  at read_time.
 *  If this field is set then `state_change` must be a specified field in
 *  `group_by`.
 */
@property(nonatomic, strong, nullable) GTLRDuration *compareDuration;

/**
 *  Expression that defines the filter to apply across findings.
 *  The expression is a list of one or more restrictions combined via logical
 *  operators `AND` and `OR`.
 *  Parentheses are supported, and `OR` has higher precedence than `AND`.
 *  Restrictions have the form `<field> <operator> <value>` and may have a `-`
 *  character in front of them to indicate negation. Examples include:
 *  * name
 *  * source_properties.a_property
 *  * security_marks.marks.marka
 *  The supported operators are:
 *  * `=` for all value types.
 *  * `>`, `<`, `>=`, `<=` for integer values.
 *  * `:`, meaning substring matching, for strings.
 *  The supported value types are:
 *  * string literals in quotes.
 *  * integer literals without quotes.
 *  * boolean literals `true` and `false` without quotes.
 *  The following field and operator combinations are supported:
 *  * name: `=`
 *  * parent: `=`, `:`
 *  * resource_name: `=`, `:`
 *  * state: `=`, `:`
 *  * category: `=`, `:`
 *  * external_uri: `=`, `:`
 *  * event_time: `=`, `>`, `<`, `>=`, `<=`
 *  Usage: This should be milliseconds since epoch or an RFC3339 string.
 *  Examples:
 *  `event_time = "2019-06-10T16:07:18-07:00"`
 *  `event_time = 1560208038000`
 *  * security_marks.marks: `=`, `:`
 *  * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
 *  For example, `source_properties.size = 100` is a valid filter string.
 *  Use a partial match on the empty string to filter based on a property
 *  existing: `source_properties.my_property : ""`
 *  Use a negated partial match on the empty string to filter based on a
 *  property not existing: `-source_properties.my_property : ""`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. Expression that defines what assets fields to use for grouping
 *  (including
 *  `state_change`). The string value should follow SQL syntax: comma separated
 *  list of fields. For example: "parent,resource_name".
 *  The following fields are supported:
 *  * resource_name
 *  * category
 *  * state
 *  * parent
 *  The following fields are supported when compare_duration is set:
 *  * state_change
 */
@property(nonatomic, copy, nullable) NSString *groupBy;

/**
 *  The maximum number of results to return in a single response. Default is
 *  10, minimum is 1, maximum is 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  The value returned by the last `GroupFindingsResponse`; indicates
 *  that this is a continuation of a prior `GroupFindings` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Time used as a reference point when filtering findings. The filter is
 *  limited to findings existing at the supplied time and their values are
 *  those at that specific time. Absence of this field will default to the
 *  API's version of NOW.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

@end


/**
 *  Response message for group by findings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groupByResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityCommandCenter_GroupFindingsResponse : GTLRCollectionObject

/**
 *  Group results. There exists an element for each existing unique
 *  combination of property/values. The element contains a count for the number
 *  of times those specific property/values appear.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GroupResult *> *groupByResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the groupBy request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of results matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the properties and count of a groupBy request.
 */
@interface GTLRSecurityCommandCenter_GroupResult : GTLRObject

/**
 *  Total count of resources for the given properties.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Properties matching the groupBy fields in the request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GroupResult_Properties *properties;

@end


/**
 *  Properties matching the groupBy fields in the request.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GroupResult_Properties : GTLRObject
@end


/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the
 *  user.
 */
@interface GTLRSecurityCommandCenter_IamPolicy : GTLRObject

/**
 *  The JSON representation of the Policy associated with the asset.
 *  See https://cloud.google.com/iam/reference/rest/v1/Policy for format
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *policyBlob;

@end


/**
 *  Response message for listing assets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "listAssetsResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListAssetsResponse : GTLRCollectionObject

/**
 *  Assets matching the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ListAssetsResult *> *listAssetsResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the list request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of assets matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the Asset and its State.
 */
@interface GTLRSecurityCommandCenter_ListAssetsResult : GTLRObject

/** Asset matching the search request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Asset *asset;

/**
 *  State change of the asset between the points in time.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Active
 *        Asset was present at both point(s) in time. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Added
 *        Asset was added between the points in time. (Value: "ADDED")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Removed
 *        Asset was removed between the points in time. (Value: "REMOVED")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Unused
 *        State change is unused, this is the canonical default for this enum.
 *        (Value: "UNUSED")
 */
@property(nonatomic, copy, nullable) NSString *stateChange;

@end


/**
 *  Response message for listing findings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "listFindingsResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListFindingsResponse : GTLRCollectionObject

/**
 *  Findings matching the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ListFindingsResult *> *listFindingsResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the list request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of findings matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the Finding and its StateChange.
 */
@interface GTLRSecurityCommandCenter_ListFindingsResult : GTLRObject

/** Finding matching the search request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding *finding;

/** Output only. Resource that is associated with this finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Resource *resource;

/**
 *  State change of the finding between the points in time.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Added
 *        The finding was created between the points in time. (Value: "ADDED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Changed
 *        The finding has changed state in some way between the points in time
 *        and existed at both points. (Value: "CHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Removed
 *        The finding at timestamp does not match the filter specified, but it
 *        did at timestamp - compare_duration. (Value: "REMOVED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unchanged
 *        The finding has not changed state between the points in time and
 *        existed at both points. (Value: "UNCHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unused
 *        State change is unused, this is the canonical default for this enum.
 *        (Value: "UNUSED")
 */
@property(nonatomic, copy, nullable) NSString *stateChange;

@end


/**
 *  Response message for listing notification configs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "notificationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListNotificationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Notification configs belonging to the requested parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_NotificationConfig *> *notificationConfigs;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityCommandCenter_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Operation *> *operations;

@end


/**
 *  Response message for listing sources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityCommandCenter_ListSourcesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Sources belonging to the requested parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Source *> *sources;

@end


/**
 *  Cloud Security Command Center (Cloud SCC) notification configs.
 *  A notification config is a Cloud SCC resource that contains the
 *  configuration
 *  to send notifications for create/update events of findings, assets and etc.
 */
@interface GTLRSecurityCommandCenter_NotificationConfig : GTLRObject

/**
 *  The description of the notification config (max of 1024 characters).
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The relative resource name of this notification config. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/notificationConfigs/notify_public_bucket".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The PubSub topic to send notifications to. Its format is
 *  "projects/[project_id]/topics/[topic]".
 */
@property(nonatomic, copy, nullable) NSString *pubsubTopic;

/**
 *  Output only. The service account that needs "pubsub.topics.publish"
 *  permission to publish to the PubSub topic.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** The config for triggering streaming-based notifications. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_StreamingConfig *streamingConfig;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRSecurityCommandCenter_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress.
 *  If `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the
 *  `name` should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Operation_Response : GTLRObject
@end


/**
 *  User specified settings that are attached to the Security Command
 *  Center organization.
 */
@interface GTLRSecurityCommandCenter_OrganizationSettings : GTLRObject

/** The configuration used for Asset Discovery runs. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_AssetDiscoveryConfig *assetDiscoveryConfig;

/**
 *  A flag that indicates if Asset Discovery should be enabled. If the flag is
 *  set to `true`, then discovery of assets will occur. If it is set to `false,
 *  all historical assets will remain, but discovery of future assets will not
 *  occur.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAssetDiscovery;

/**
 *  The relative resource name of the settings. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/organizationSettings".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources.
 *  A `Policy` is a collection of `bindings`. A `binding` binds one or more
 *  `members` to a single `role`. Members can be user accounts, service
 *  accounts,
 *  Google groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role.
 *  For some types of Google Cloud resources, a `binding` can also specify a
 *  `condition`, which is a logical expression that allows access to a resource
 *  only if the expression evaluates to `true`. A condition can add constraints
 *  based on attributes of the request, the resource, or both. To learn which
 *  resources support conditions in their IAM policies, see the
 *  [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:**
 *  {
 *  "bindings": [
 *  {
 *  "role": "roles/resourcemanager.organizationAdmin",
 *  "members": [
 *  "user:mike\@example.com",
 *  "group:admins\@example.com",
 *  "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com"
 *  ]
 *  },
 *  {
 *  "role": "roles/resourcemanager.organizationViewer",
 *  "members": [
 *  "user:eve\@example.com"
 *  ],
 *  "condition": {
 *  "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020",
 *  "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
 *  }
 *  }
 *  ],
 *  "etag": "BwWWja0YfJA=",
 *  "version": 3
 *  }
 *  **YAML example:**
 *  bindings:
 *  - members:
 *  - user:mike\@example.com
 *  - group:admins\@example.com
 *  - domain:google.com
 *  - serviceAccount:my-project-id\@appspot.gserviceaccount.com
 *  role: roles/resourcemanager.organizationAdmin
 *  - members:
 *  - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer
 *  condition:
 *  title: expirable access
 *  description: Does not grant access after Sep 2020
 *  expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
 *  - etag: BwWWja0YfJA=
 *  - version: 3
 *  For a description of IAM and its features, see the
 *  [IAM documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRSecurityCommandCenter_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members` to a `role`. Optionally, may specify a
 *  `condition` that determines how and when the `bindings` are applied. Each
 *  of the `bindings` must contain at least one member.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help
 *  prevent simultaneous updates of a policy from overwriting each other.
 *  It is strongly suggested that systems make use of the `etag` in the
 *  read-modify-write cycle to perform policy updates in order to avoid race
 *  conditions: An `etag` is returned in the response to `getIamPolicy`, and
 *  systems are expected to put that etag in the request to `setIamPolicy` to
 *  ensure that their change will be applied to the same version of the policy.
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy.
 *  Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
 *  are rejected.
 *  Any operation that affects conditional role bindings must specify version
 *  `3`. This requirement applies to the following operations:
 *  * Getting a policy that includes a conditional role binding
 *  * Adding a conditional role binding to a policy
 *  * Changing a conditional role binding in a policy
 *  * Removing any role binding, with or without a condition, from a policy
 *  that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost.
 *  If a policy does not include any conditions, operations on that policy may
 *  specify any valid version or leave the field unset.
 *  To learn which resources support conditions in their IAM policies, see the
 *  [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Information related to the Google Cloud resource that is
 *  associated with this finding.
 */
@interface GTLRSecurityCommandCenter_Resource : GTLRObject

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentName;

/** The human readable name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectName;

@end


/**
 *  Request message for running asset discovery for an organization.
 */
@interface GTLRSecurityCommandCenter_RunAssetDiscoveryRequest : GTLRObject
@end


/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@interface GTLRSecurityCommandCenter_SecurityCenterProperties : GTLRObject

/** The user defined display name for this resource. */
@property(nonatomic, copy, nullable) NSString *resourceDisplayName;

/**
 *  The full resource name of the Google Cloud resource this asset
 *  represents. This field is immutable after create time. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/** Owners of the Google Cloud resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceOwners;

/**
 *  The full resource name of the immediate parent of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceParent;

/** The user defined display name for the parent of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceParentDisplayName;

/**
 *  The full resource name of the project the resource belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceProject;

/** The user defined display name for the project of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceProjectDisplayName;

/**
 *  The type of the Google Cloud resource. Examples include: APPLICATION,
 *  PROJECT, and ORGANIZATION. This is a case insensitive field defined by
 *  Security Command Center and/or the producer of the resource and is
 *  immutable after create time.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

@end


/**
 *  User specified security marks that are attached to the parent Security
 *  Command Center resource. Security marks are scoped within a Security Command
 *  Center organization -- they can be modified and viewed by all users who have
 *  proper permissions on the organization.
 */
@interface GTLRSecurityCommandCenter_SecurityMarks : GTLRObject

/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows:
 *  * Keys and values are treated as case insensitive
 *  * Keys must be between 1 - 256 characters (inclusive)
 *  * Keys must be letters, numbers, underscores, or dashes
 *  * Values have leading and trailing whitespace trimmed, remaining
 *  characters must be between 1 - 4096 characters (inclusive)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks_Marks *marks;

/**
 *  The relative resource name of the SecurityMarks. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Examples:
 *  "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows:
 *  * Keys and values are treated as case insensitive
 *  * Keys must be between 1 - 256 characters (inclusive)
 *  * Keys must be letters, numbers, underscores, or dashes
 *  * Values have leading and trailing whitespace trimmed, remaining
 *  characters must be between 1 - 4096 characters (inclusive)
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_SecurityMarks_Marks : GTLRObject
@end


/**
 *  Request message for updating a finding's state.
 */
@interface GTLRSecurityCommandCenter_SetFindingStateRequest : GTLRObject

/** Required. The time at which the updated state takes effect. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Required. The desired State of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Active The
 *        finding requires attention and has not been addressed yet. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Inactive
 *        The finding has been fixed, triaged as a non-issue or otherwise
 *        addressed
 *        and is no longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRSecurityCommandCenter_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a
 *  valid policy but certain Cloud Platform services (such as Projects)
 *  might reject them.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used:
 *  `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Security Command Center finding source. A finding source
 *  is an entity or a mechanism that can produce a finding. A source is like a
 *  container of findings that come from the same scanner, logger, monitor, and
 *  other tools.
 */
@interface GTLRSecurityCommandCenter_Source : GTLRObject

/**
 *  The description of the source (max of 1024 characters).
 *  Example:
 *  "Web Security Scanner is a web security scanner for common
 *  vulnerabilities in App Engine applications. It can automatically
 *  scan and detect four common vulnerabilities, including cross-site-scripting
 *  (XSS), Flash injection, mixed content (HTTP in HTTPS), and
 *  outdated or insecure libraries."
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The source's display name.
 *  A source's display name must be unique amongst its siblings, for example,
 *  two sources with the same parent can't share the same display name.
 *  The display name must have a length between 1 and 64 characters
 *  (inclusive).
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The relative resource name of this source. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details.
 *  You can find out more about this error model and how to work with it in the
 *  [API Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRSecurityCommandCenter_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRSecurityCommandCenter_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Status_Details_Item : GTLRObject
@end


/**
 *  The config for streaming-based notifications, which send each event as soon
 *  as it is detected.
 */
@interface GTLRSecurityCommandCenter_StreamingConfig : GTLRObject

/**
 *  Expression that defines the filter to apply across create/update events
 *  of assets or findings as specified by the event type. The expression is a
 *  list of zero or more restrictions combined via logical operators `AND`
 *  and `OR`. Parentheses are supported, and `OR` has higher precedence than
 *  `AND`.
 *  Restrictions have the form `<field> <operator> <value>` and may have a
 *  `-` character in front of them to indicate negation. The fields map to
 *  those defined in the corresponding resource.
 *  The supported operators are:
 *  * `=` for all value types.
 *  * `>`, `<`, `>=`, `<=` for integer values.
 *  * `:`, meaning substring matching, for strings.
 *  The supported value types are:
 *  * string literals in quotes.
 *  * integer literals without quotes.
 *  * boolean literals `true` and `false` without quotes.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRSecurityCommandCenter_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed. For more
 *  information see
 *  [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRSecurityCommandCenter_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is
 *  allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
