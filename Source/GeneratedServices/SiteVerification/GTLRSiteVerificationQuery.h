// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Site Verification API (siteVerification/v1)
// Description:
//   Verifies ownership of websites or domains with Google.
// Documentation:
//   https://developers.google.com/site-verification/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSiteVerification_WebResourceGettokenRequest;
@class GTLRSiteVerification_WebResourceResource;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other SiteVerification query classes.
 */
@interface GTLRSiteVerificationQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Relinquish ownership of a website or domain.
 *
 *  Method: siteVerification.webResource.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 */
@interface GTLRSiteVerificationQuery_WebResourceDelete : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceDeleteWithidentifier:]

/**
 *  The id of a verified site or domain.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Relinquish ownership of a website or domain.
 *
 *  @param identifier The id of a verified site or domain.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceDelete
 */
+ (instancetype)queryWithIdentifier:(NSString *)identifier;

@end

/**
 *  Get the most current data for a website or domain.
 *
 *  Method: siteVerification.webResource.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 */
@interface GTLRSiteVerificationQuery_WebResourceGet : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceGetWithidentifier:]

/**
 *  The id of a verified site or domain.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceResource.
 *
 *  Get the most current data for a website or domain.
 *
 *  @param identifier The id of a verified site or domain.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceGet
 */
+ (instancetype)queryWithIdentifier:(NSString *)identifier;

@end

/**
 *  Get a verification token for placing on a website or domain.
 *
 *  Method: siteVerification.webResource.getToken
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 *    @c kGTLRAuthScopeSiteVerificationVerifyOnly
 */
@interface GTLRSiteVerificationQuery_WebResourceGetToken : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceGetTokenWithObject:]

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceGettokenResponse.
 *
 *  Get a verification token for placing on a website or domain.
 *
 *  @param object The @c GTLRSiteVerification_WebResourceGettokenRequest to
 *    include in the query.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceGetToken
 */
+ (instancetype)queryWithObject:(GTLRSiteVerification_WebResourceGettokenRequest *)object;

@end

/**
 *  Attempt verification of a website or domain.
 *
 *  Method: siteVerification.webResource.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 *    @c kGTLRAuthScopeSiteVerificationVerifyOnly
 */
@interface GTLRSiteVerificationQuery_WebResourceInsert : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceInsertWithObject:verificationMethod:]

/** The method to use for verifying a site or domain. */
@property(nonatomic, copy, nullable) NSString *verificationMethod;

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceResource.
 *
 *  Attempt verification of a website or domain.
 *
 *  @param object The @c GTLRSiteVerification_WebResourceResource to include in
 *    the query.
 *  @param verificationMethod The method to use for verifying a site or domain.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceInsert
 */
+ (instancetype)queryWithObject:(GTLRSiteVerification_WebResourceResource *)object
             verificationMethod:(NSString *)verificationMethod;

@end

/**
 *  Get the list of your verified websites and domains.
 *
 *  Method: siteVerification.webResource.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 */
@interface GTLRSiteVerificationQuery_WebResourceList : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceList]

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceListResponse.
 *
 *  Get the list of your verified websites and domains.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceList
 */
+ (instancetype)query;

@end

/**
 *  Modify the list of owners for your website or domain. This method supports
 *  patch semantics.
 *
 *  Method: siteVerification.webResource.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 */
@interface GTLRSiteVerificationQuery_WebResourcePatch : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourcePatchWithObject:identifier:]

/**
 *  The id of a verified site or domain.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceResource.
 *
 *  Modify the list of owners for your website or domain. This method supports
 *  patch semantics.
 *
 *  @param object The @c GTLRSiteVerification_WebResourceResource to include in
 *    the query.
 *  @param identifier The id of a verified site or domain.
 *
 *  @return GTLRSiteVerificationQuery_WebResourcePatch
 */
+ (instancetype)queryWithObject:(GTLRSiteVerification_WebResourceResource *)object
                     identifier:(NSString *)identifier;

@end

/**
 *  Modify the list of owners for your website or domain.
 *
 *  Method: siteVerification.webResource.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSiteVerification
 */
@interface GTLRSiteVerificationQuery_WebResourceUpdate : GTLRSiteVerificationQuery
// Previous library name was
//   +[GTLQuerySiteVerification queryForWebResourceUpdateWithObject:identifier:]

/**
 *  The id of a verified site or domain.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Fetches a @c GTLRSiteVerification_WebResourceResource.
 *
 *  Modify the list of owners for your website or domain.
 *
 *  @param object The @c GTLRSiteVerification_WebResourceResource to include in
 *    the query.
 *  @param identifier The id of a verified site or domain.
 *
 *  @return GTLRSiteVerificationQuery_WebResourceUpdate
 */
+ (instancetype)queryWithObject:(GTLRSiteVerification_WebResourceResource *)object
                     identifier:(NSString *)identifier;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
