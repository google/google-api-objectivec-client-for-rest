// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   DoubleClick Search API (doubleclicksearch/v2)
// Description:
//   Reports and modifies your advertising data in DoubleClick Search (for
//   example, campaigns, ad groups, keywords, and conversions).
// Documentation:
//   https://developers.google.com/doubleclick-search/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDoubleClickSearch_Availability;
@class GTLRDoubleClickSearch_Conversion;
@class GTLRDoubleClickSearch_CustomDimension;
@class GTLRDoubleClickSearch_CustomMetric;
@class GTLRDoubleClickSearch_Report_Files_Item;
@class GTLRDoubleClickSearch_ReportApiColumnSpec;
@class GTLRDoubleClickSearch_ReportRequest;
@class GTLRDoubleClickSearch_ReportRequest_Filters_Item;
@class GTLRDoubleClickSearch_ReportRequest_OrderBy_Item;
@class GTLRDoubleClickSearch_ReportRequest_ReportScope;
@class GTLRDoubleClickSearch_ReportRequest_TimeRange;
@class GTLRDoubleClickSearch_ReportRow;
@class GTLRDoubleClickSearch_SavedColumn;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  A message containing availability data relevant to DoubleClick Search.
 */
@interface GTLRDoubleClickSearch_Availability : GTLRObject

/**
 *  DS advertiser ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  DS agency ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agencyId;

/**
 *  The time by which all conversions have been uploaded, in epoch millis UTC.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availabilityTimestamp;

/**
 *  The numeric segmentation identifier (for example, DoubleClick Search
 *  Floodlight activity ID).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *segmentationId;

/**
 *  The friendly segmentation identifier (for example, DoubleClick Search
 *  Floodlight activity name).
 */
@property(nonatomic, copy, nullable) NSString *segmentationName;

/**
 *  The segmentation type that this availability is for (its default value is
 *  FLOODLIGHT).
 */
@property(nonatomic, copy, nullable) NSString *segmentationType;

@end


/**
 *  A conversion containing data relevant to DoubleClick Search.
 */
@interface GTLRDoubleClickSearch_Conversion : GTLRObject

/**
 *  DS ad group ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adGroupId;

/**
 *  DS ad ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adId;

/**
 *  DS advertiser ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  DS agency ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agencyId;

/**
 *  Available to advertisers only after contacting DoubleClick Search customer
 *  support.
 */
@property(nonatomic, copy, nullable) NSString *attributionModel;

/**
 *  DS campaign ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignId;

/**
 *  Sales channel for the product. Acceptable values are:
 *  - "local": a physical store
 *  - "online": an online store
 */
@property(nonatomic, copy, nullable) NSString *channel;

/** DS click ID for the conversion. */
@property(nonatomic, copy, nullable) NSString *clickId;

/**
 *  For offline conversions, advertisers provide this ID. Advertisers can
 *  specify any ID that is meaningful to them. Each conversion in a request must
 *  specify a unique ID, and the combination of ID and timestamp must be unique
 *  amongst all conversions within the advertiser.
 *  For online conversions, DS copies the dsConversionId or floodlightOrderId
 *  into this property depending on the advertiser's Floodlight instructions.
 */
@property(nonatomic, copy, nullable) NSString *conversionId;

/**
 *  The time at which the conversion was last modified, in epoch millis UTC.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionModifiedTimestamp;

/**
 *  The time at which the conversion took place, in epoch millis UTC.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionTimestamp;

/**
 *  Available to advertisers only after contacting DoubleClick Search customer
 *  support.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *countMillis;

/**
 *  DS criterion (keyword) ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *criterionId;

/**
 *  The currency code for the conversion's revenue. Should be in ISO 4217
 *  alphabetic (3-char) format.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Custom dimensions for the conversion, which can be used to filter data in a
 *  report.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_CustomDimension *> *customDimension;

/** Custom metrics for the conversion. */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_CustomMetric *> *customMetric;

/** The type of device on which the conversion occurred. */
@property(nonatomic, copy, nullable) NSString *deviceType;

/**
 *  ID that DoubleClick Search generates for each conversion.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dsConversionId;

/**
 *  DS engine account ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *engineAccountId;

/** The Floodlight order ID provided by the advertiser for the conversion. */
@property(nonatomic, copy, nullable) NSString *floodlightOrderId;

/**
 *  ID that DS generates and uses to uniquely identify the inventory account
 *  that contains the product.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inventoryAccountId;

/**
 *  The country registered for the Merchant Center feed that contains the
 *  product. Use an ISO 3166 code to specify a country.
 */
@property(nonatomic, copy, nullable) NSString *productCountry;

/**
 *  DS product group ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *productGroupId;

/** The product ID (SKU). */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The language registered for the Merchant Center feed that contains the
 *  product. Use an ISO 639 code to specify a language.
 */
@property(nonatomic, copy, nullable) NSString *productLanguage;

/**
 *  The quantity of this conversion, in millis.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityMillis;

/**
 *  The revenue amount of this TRANSACTION conversion, in micros (value
 *  multiplied by 1000000, no decimal). For example, to specify a revenue value
 *  of "10" enter "10000000" (10 million) in your request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *revenueMicros;

/**
 *  The numeric segmentation identifier (for example, DoubleClick Search
 *  Floodlight activity ID).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *segmentationId;

/**
 *  The friendly segmentation identifier (for example, DoubleClick Search
 *  Floodlight activity name).
 */
@property(nonatomic, copy, nullable) NSString *segmentationName;

/** The segmentation type of this conversion (for example, FLOODLIGHT). */
@property(nonatomic, copy, nullable) NSString *segmentationType;

/**
 *  The state of the conversion, that is, either ACTIVE or REMOVED. Note: state
 *  DELETED is deprecated.
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The ID of the local store for which the product was advertised. Applicable
 *  only when the channel is "local".
 */
@property(nonatomic, copy, nullable) NSString *storeId;

/**
 *  The type of the conversion, that is, either ACTION or TRANSACTION. An ACTION
 *  conversion is an action by the user that has no monetarily quantifiable
 *  value, while a TRANSACTION conversion is an action that does have a
 *  monetarily quantifiable value. Examples are email list signups (ACTION)
 *  versus ecommerce purchases (TRANSACTION).
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A list of conversions.
 */
@interface GTLRDoubleClickSearch_ConversionList : GTLRObject

/** The conversions being requested. */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_Conversion *> *conversion;

/**
 *  Identifies this as a ConversionList resource. Value: the fixed string
 *  doubleclicksearch#conversionList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A message containing the custome dimension.
 */
@interface GTLRDoubleClickSearch_CustomDimension : GTLRObject

/** Custom dimension name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Custom dimension value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A message containing the custome metric.
 */
@interface GTLRDoubleClickSearch_CustomMetric : GTLRObject

/** Custom metric name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Custom metric numeric value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  A DoubleClick Search report. This object contains the report request, some
 *  report metadata such as currency code, and the generated report rows or
 *  report files.
 */
@interface GTLRDoubleClickSearch_Report : GTLRObject

/**
 *  Asynchronous report only. Contains a list of generated report files once the
 *  report has succesfully completed.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_Report_Files_Item *> *files;

/**
 *  Asynchronous report only. Id of the report.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Asynchronous report only. True if and only if the report has completed
 *  successfully and the report files are ready to be downloaded.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isReportReady;

/**
 *  Identifies this as a Report resource. Value: the fixed string
 *  doubleclicksearch#report.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The request that created the report. Optional fields not specified in the
 *  original request are filled with default values.
 */
@property(nonatomic, strong, nullable) GTLRDoubleClickSearch_ReportRequest *request;

/**
 *  The number of report rows generated by the report, not including headers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowCount;

/** Synchronous report only. Generated report rows. */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_ReportRow *> *rows;

/**
 *  The currency code of all monetary values produced in the report, including
 *  values that are set by users (e.g., keyword bid settings) and metrics (e.g.,
 *  cost and revenue). The currency code of a report is determined by the
 *  statisticsCurrency field of the report request.
 */
@property(nonatomic, copy, nullable) NSString *statisticsCurrencyCode;

/**
 *  If all statistics of the report are sourced from the same time zone, this
 *  would be it. Otherwise the field is unset.
 */
@property(nonatomic, copy, nullable) NSString *statisticsTimeZone;

@end


/**
 *  GTLRDoubleClickSearch_Report_Files_Item
 */
@interface GTLRDoubleClickSearch_Report_Files_Item : GTLRObject

/**
 *  The size of this report file in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *byteCount;

/** Use this url to download the report file. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  A request object used to create a DoubleClick Search report.
 */
@interface GTLRDoubleClickSearch_ReportApiColumnSpec : GTLRObject

/** Name of a DoubleClick Search column to include in the report. */
@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  Segments a report by a custom dimension. The report must be scoped to an
 *  advertiser or lower, and the custom dimension must already be set up in
 *  DoubleClick Search. The custom dimension name, which appears in DoubleClick
 *  Search, is case sensitive.
 *  If used in a conversion report, returns the value of the specified custom
 *  dimension for the given conversion, if set. This column does not segment the
 *  conversion report.
 */
@property(nonatomic, copy, nullable) NSString *customDimensionName;

/**
 *  Name of a custom metric to include in the report. The report must be scoped
 *  to an advertiser or lower, and the custom metric must already be set up in
 *  DoubleClick Search. The custom metric name, which appears in DoubleClick
 *  Search, is case sensitive.
 */
@property(nonatomic, copy, nullable) NSString *customMetricName;

/**
 *  Inclusive day in YYYY-MM-DD format. When provided, this overrides the
 *  overall time range of the report for this column only. Must be provided
 *  together with startDate.
 */
@property(nonatomic, copy, nullable) NSString *endDate;

/**
 *  Synchronous report only. Set to true to group by this column. Defaults to
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groupByColumn;

/**
 *  Text used to identify this column in the report output; defaults to
 *  columnName or savedColumnName when not specified. This can be used to
 *  prevent collisions between DoubleClick Search columns and saved columns with
 *  the same name.
 */
@property(nonatomic, copy, nullable) NSString *headerText;

/**
 *  The platform that is used to provide data for the custom dimension.
 *  Acceptable values are "floodlight".
 */
@property(nonatomic, copy, nullable) NSString *platformSource;

/**
 *  Returns metrics only for a specific type of product activity. Accepted
 *  values are:
 *  - "sold": returns metrics only for products that were sold
 *  - "advertised": returns metrics only for products that were advertised in a
 *  Shopping campaign, and that might or might not have been sold
 */
@property(nonatomic, copy, nullable) NSString *productReportPerspective;

/**
 *  Name of a saved column to include in the report. The report must be scoped
 *  at advertiser or lower, and this saved column must already be created in the
 *  DoubleClick Search UI.
 */
@property(nonatomic, copy, nullable) NSString *savedColumnName;

/**
 *  Inclusive date in YYYY-MM-DD format. When provided, this overrides the
 *  overall time range of the report for this column only. Must be provided
 *  together with endDate.
 */
@property(nonatomic, copy, nullable) NSString *startDate;

@end


/**
 *  A request object used to create a DoubleClick Search report.
 */
@interface GTLRDoubleClickSearch_ReportRequest : GTLRObject

/**
 *  The columns to include in the report. This includes both DoubleClick Search
 *  columns and saved columns. For DoubleClick Search columns, only the
 *  columnName parameter is required. For saved columns only the savedColumnName
 *  parameter is required. Both columnName and savedColumnName cannot be set in
 *  the same stanza.
 *  The maximum number of columns per request is 300.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_ReportApiColumnSpec *> *columns;

/**
 *  Format that the report should be returned in. Currently csv or tsv is
 *  supported.
 */
@property(nonatomic, copy, nullable) NSString *downloadFormat;

/**
 *  A list of filters to be applied to the report.
 *  The maximum number of filters per request is 300.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_ReportRequest_Filters_Item *> *filters;

/**
 *  Determines if removed entities should be included in the report. Defaults to
 *  false. Deprecated, please use includeRemovedEntities instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeDeletedEntities;

/**
 *  Determines if removed entities should be included in the report. Defaults to
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeRemovedEntities;

/**
 *  Asynchronous report only. The maximum number of rows per report file. A
 *  large report is split into many files based on this field. Acceptable values
 *  are 1000000 to 100000000, inclusive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRowsPerFile;

/**
 *  Synchronous report only. A list of columns and directions defining sorting
 *  to be performed on the report rows.
 *  The maximum number of orderings per request is 300.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_ReportRequest_OrderBy_Item *> *orderBy;

/**
 *  The reportScope is a set of IDs that are used to determine which subset of
 *  entities will be returned in the report. The full lineage of IDs from the
 *  lowest scoped level desired up through agency is required.
 */
@property(nonatomic, strong, nullable) GTLRDoubleClickSearch_ReportRequest_ReportScope *reportScope;

/**
 *  Determines the type of rows that are returned in the report. For example, if
 *  you specify reportType: keyword, each row in the report will contain data
 *  about a keyword. See the Types of Reports reference for the columns that are
 *  available for each type.
 */
@property(nonatomic, copy, nullable) NSString *reportType;

/**
 *  Synchronous report only. The maximum number of rows to return; additional
 *  rows are dropped. Acceptable values are 0 to 10000, inclusive. Defaults to
 *  10000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowCount;

/**
 *  Synchronous report only. Zero-based index of the first row to return.
 *  Acceptable values are 0 to 50000, inclusive. Defaults to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startRow;

/**
 *  Specifies the currency in which monetary will be returned. Possible values
 *  are: usd, agency (valid if the report is scoped to agency or lower),
 *  advertiser (valid if the report is scoped to * advertiser or lower), or
 *  account (valid if the report is scoped to engine account or lower).
 */
@property(nonatomic, copy, nullable) NSString *statisticsCurrency;

/**
 *  If metrics are requested in a report, this argument will be used to restrict
 *  the metrics to a specific time range.
 */
@property(nonatomic, strong, nullable) GTLRDoubleClickSearch_ReportRequest_TimeRange *timeRange;

/**
 *  If true, the report would only be created if all the requested stat data are
 *  sourced from a single timezone. Defaults to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verifySingleTimeZone;

@end


/**
 *  GTLRDoubleClickSearch_ReportRequest_Filters_Item
 */
@interface GTLRDoubleClickSearch_ReportRequest_Filters_Item : GTLRObject

/**
 *  Column to perform the filter on. This can be a DoubleClick Search column or
 *  a saved column.
 */
@property(nonatomic, strong, nullable) GTLRDoubleClickSearch_ReportApiColumnSpec *column;

/**
 *  Operator to use in the filter. See the filter reference for a list of
 *  available operators.
 *
 *  Remapped to 'operatorProperty' to avoid language reserved word 'operator'.
 */
@property(nonatomic, copy, nullable) NSString *operatorProperty;

/**
 *  A list of values to filter the column value against.
 *  The maximum number of filter values per request is 300.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *values;

@end


/**
 *  GTLRDoubleClickSearch_ReportRequest_OrderBy_Item
 */
@interface GTLRDoubleClickSearch_ReportRequest_OrderBy_Item : GTLRObject

/**
 *  Column to perform the sort on. This can be a DoubleClick Search-defined
 *  column or a saved column.
 */
@property(nonatomic, strong, nullable) GTLRDoubleClickSearch_ReportApiColumnSpec *column;

/** The sort direction, which is either ascending or descending. */
@property(nonatomic, copy, nullable) NSString *sortOrder;

@end


/**
 *  The reportScope is a set of IDs that are used to determine which subset of
 *  entities will be returned in the report. The full lineage of IDs from the
 *  lowest scoped level desired up through agency is required.
 */
@interface GTLRDoubleClickSearch_ReportRequest_ReportScope : GTLRObject

/**
 *  DS ad group ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adGroupId;

/**
 *  DS ad ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adId;

/**
 *  DS advertiser ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  DS agency ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agencyId;

/**
 *  DS campaign ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignId;

/**
 *  DS engine account ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *engineAccountId;

/**
 *  DS keyword ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *keywordId;

@end


/**
 *  If metrics are requested in a report, this argument will be used to restrict
 *  the metrics to a specific time range.
 */
@interface GTLRDoubleClickSearch_ReportRequest_TimeRange : GTLRObject

/**
 *  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See
 *  additional references on how changed attribute reports work.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *changedAttributesSinceTimestamp;

/**
 *  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See
 *  additional references on how changed metrics reports work.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *changedMetricsSinceTimestamp;

/** Inclusive date in YYYY-MM-DD format. */
@property(nonatomic, copy, nullable) NSString *endDate;

/** Inclusive date in YYYY-MM-DD format. */
@property(nonatomic, copy, nullable) NSString *startDate;

@end


/**
 *  A row in a DoubleClick Search report.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDoubleClickSearch_ReportRow : GTLRObject
@end


/**
 *  A saved column
 */
@interface GTLRDoubleClickSearch_SavedColumn : GTLRObject

/**
 *  Identifies this as a SavedColumn resource. Value: the fixed string
 *  doubleclicksearch#savedColumn.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The name of the saved column. */
@property(nonatomic, copy, nullable) NSString *savedColumnName;

/** The type of data this saved column will produce. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A list of saved columns. Advertisers create saved columns to report on
 *  Floodlight activities, Google Analytics goals, or custom KPIs. To request
 *  reports with saved columns, you'll need the saved column names that are
 *  available from this list.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDoubleClickSearch_SavedColumnList : GTLRCollectionObject

/**
 *  The saved columns being requested.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_SavedColumn *> *items;

/**
 *  Identifies this as a SavedColumnList resource. Value: the fixed string
 *  doubleclicksearch#savedColumnList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  The request to update availability.
 */
@interface GTLRDoubleClickSearch_UpdateAvailabilityRequest : GTLRObject

/** The availabilities being requested. */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_Availability *> *availabilities;

@end


/**
 *  The response to a update availability request.
 */
@interface GTLRDoubleClickSearch_UpdateAvailabilityResponse : GTLRObject

/** The availabilities being returned. */
@property(nonatomic, strong, nullable) NSArray<GTLRDoubleClickSearch_Availability *> *availabilities;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
