// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Services API (networkservices/v1)
// Documentation:
//   https://cloud.google.com/networking

#import "GTLRNetworkServicesObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRNetworkServices_AuditLogConfig.logType
NSString * const kGTLRNetworkServices_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRNetworkServices_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRNetworkServices_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRNetworkServices_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRNetworkServices_EndpointMatcherMetadataLabelMatcher.metadataLabelMatchCriteria
NSString * const kGTLRNetworkServices_EndpointMatcherMetadataLabelMatcher_MetadataLabelMatchCriteria_MatchAll = @"MATCH_ALL";
NSString * const kGTLRNetworkServices_EndpointMatcherMetadataLabelMatcher_MetadataLabelMatchCriteria_MatchAny = @"MATCH_ANY";
NSString * const kGTLRNetworkServices_EndpointMatcherMetadataLabelMatcher_MetadataLabelMatchCriteria_MetadataLabelMatchCriteriaUnspecified = @"METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED";

// GTLRNetworkServices_EndpointPolicy.type
NSString * const kGTLRNetworkServices_EndpointPolicy_Type_EndpointPolicyTypeUnspecified = @"ENDPOINT_POLICY_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkServices_EndpointPolicy_Type_GrpcServer = @"GRPC_SERVER";
NSString * const kGTLRNetworkServices_EndpointPolicy_Type_SidecarProxy = @"SIDECAR_PROXY";

// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_AuditConfig
//

@implementation GTLRNetworkServices_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRNetworkServices_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_AuditLogConfig
//

@implementation GTLRNetworkServices_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Binding
//

@implementation GTLRNetworkServices_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_CancelOperationRequest
//

@implementation GTLRNetworkServices_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Empty
//

@implementation GTLRNetworkServices_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_EndpointMatcher
//

@implementation GTLRNetworkServices_EndpointMatcher
@dynamic metadataLabelMatcher;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_EndpointMatcherMetadataLabelMatcher
//

@implementation GTLRNetworkServices_EndpointMatcherMetadataLabelMatcher
@dynamic metadataLabelMatchCriteria, metadataLabels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metadataLabels" : [GTLRNetworkServices_EndpointMatcherMetadataLabelMatcherMetadataLabels class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_EndpointMatcherMetadataLabelMatcherMetadataLabels
//

@implementation GTLRNetworkServices_EndpointMatcherMetadataLabelMatcherMetadataLabels
@dynamic labelName, labelValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_EndpointPolicy
//

@implementation GTLRNetworkServices_EndpointPolicy
@dynamic authorizationPolicy, clientTlsPolicy, createTime, descriptionProperty,
         endpointMatcher, labels, name, serverTlsPolicy, trafficPortSelector,
         type, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_EndpointPolicy_Labels
//

@implementation GTLRNetworkServices_EndpointPolicy_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Expr
//

@implementation GTLRNetworkServices_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_ListEndpointPoliciesResponse
//

@implementation GTLRNetworkServices_ListEndpointPoliciesResponse
@dynamic endpointPolicies, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"endpointPolicies" : [GTLRNetworkServices_EndpointPolicy class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"endpointPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_ListLocationsResponse
//

@implementation GTLRNetworkServices_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRNetworkServices_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_ListOperationsResponse
//

@implementation GTLRNetworkServices_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRNetworkServices_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Location
//

@implementation GTLRNetworkServices_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Location_Labels
//

@implementation GTLRNetworkServices_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Location_Metadata
//

@implementation GTLRNetworkServices_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Operation
//

@implementation GTLRNetworkServices_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Operation_Metadata
//

@implementation GTLRNetworkServices_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Operation_Response
//

@implementation GTLRNetworkServices_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_OperationMetadata
//

@implementation GTLRNetworkServices_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Policy
//

@implementation GTLRNetworkServices_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRNetworkServices_AuditConfig class],
    @"bindings" : [GTLRNetworkServices_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_SetIamPolicyRequest
//

@implementation GTLRNetworkServices_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Status
//

@implementation GTLRNetworkServices_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRNetworkServices_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_Status_Details_Item
//

@implementation GTLRNetworkServices_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_TestIamPermissionsRequest
//

@implementation GTLRNetworkServices_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_TestIamPermissionsResponse
//

@implementation GTLRNetworkServices_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkServices_TrafficPortSelector
//

@implementation GTLRNetworkServices_TrafficPortSelector
@dynamic ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end
