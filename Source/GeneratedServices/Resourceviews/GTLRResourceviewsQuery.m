// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Compute Engine Instance Groups API (resourceviews/v1beta2)
// Description:
//   The Resource View API allows users to create and manage logical sets of
//   Google Compute Engine instances.
// Documentation:
//   https://developers.google.com/compute/

#import "GTLRResourceviewsQuery.h"

#import "GTLRResourceviewsObjects.h"

// ----------------------------------------------------------------------------
// Constants

// format
NSString * const kGTLRResourceviewsFormatNone    = @"NONE";
NSString * const kGTLRResourceviewsFormatUrl     = @"URL";
NSString * const kGTLRResourceviewsFormatUrlPort = @"URL_PORT";

// listState
NSString * const kGTLRResourceviewsListStateAll     = @"ALL";
NSString * const kGTLRResourceviewsListStateRunning = @"RUNNING";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRResourceviewsQuery

@dynamic fields;

@end

@implementation GTLRResourceviewsQuery_ZoneOperationsGet

@dynamic operation, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                       operation:(NSString *)operation {
  NSArray *pathParams = @[
    @"operation", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations/{operation}";
  GTLRResourceviewsQuery_ZoneOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.operation = operation;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneOperations.get";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneOperationsList

@dynamic filter, maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations";
  GTLRResourceviewsQuery_ZoneOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRResourceviews_OperationList class];
  query.loggingName = @"resourceviews.zoneOperations.list";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsAddResources

@dynamic project, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRResourceviews_ZoneViewsAddResourcesRequest *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty
                   resourceView:(NSString *)resourceView {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}/addResources";
  GTLRResourceviewsQuery_ZoneViewsAddResources *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneViews.addResources";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsDelete

@dynamic project, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                    resourceView:(NSString *)resourceView {
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}";
  GTLRResourceviewsQuery_ZoneViewsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneViews.delete";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsGet

@dynamic project, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                    resourceView:(NSString *)resourceView {
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}";
  GTLRResourceviewsQuery_ZoneViewsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_ResourceView class];
  query.loggingName = @"resourceviews.zoneViews.get";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsGetService

@dynamic project, resourceName, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                    resourceView:(NSString *)resourceView {
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}/getService";
  GTLRResourceviewsQuery_ZoneViewsGetService *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_ZoneViewsGetServiceResponse class];
  query.loggingName = @"resourceviews.zoneViews.getService";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsInsert

@dynamic project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRResourceviews_ResourceView *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews";
  GTLRResourceviewsQuery_ZoneViewsInsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneViews.insert";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsList

@dynamic maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews";
  GTLRResourceviewsQuery_ZoneViewsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRResourceviews_ZoneViewsList class];
  query.loggingName = @"resourceviews.zoneViews.list";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsListResources

@dynamic format, listState, maxResults, pageToken, project, resourceView,
         serviceName, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                    resourceView:(NSString *)resourceView {
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}/resources";
  GTLRResourceviewsQuery_ZoneViewsListResources *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_ZoneViewsListResourcesResponse class];
  query.loggingName = @"resourceviews.zoneViews.listResources";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsRemoveResources

@dynamic project, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRResourceviews_ZoneViewsRemoveResourcesRequest *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty
                   resourceView:(NSString *)resourceView {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}/removeResources";
  GTLRResourceviewsQuery_ZoneViewsRemoveResources *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneViews.removeResources";
  return query;
}

@end

@implementation GTLRResourceviewsQuery_ZoneViewsSetService

@dynamic project, resourceView, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRResourceviews_ZoneViewsSetServiceRequest *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty
                   resourceView:(NSString *)resourceView {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"resourceView", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/resourceViews/{resourceView}/setService";
  GTLRResourceviewsQuery_ZoneViewsSetService *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.resourceView = resourceView;
  query.expectedObjectClass = [GTLRResourceviews_Operation class];
  query.loggingName = @"resourceviews.zoneViews.setService";
  return query;
}

@end
