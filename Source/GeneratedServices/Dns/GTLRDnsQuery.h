// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud DNS API (dns/v1)
// Documentation:
//   https://cloud.google.com/dns/docs

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDns_Change;
@class GTLRDns_ManagedZone;
@class GTLRDns_Policy;
@class GTLRDns_ResourceRecordSet;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// sortBy

/** Value: "changeSequence" */
FOUNDATION_EXTERN NSString * const kGTLRDnsSortByChangeSequence;
/** Value: "id" */
FOUNDATION_EXTERN NSString * const kGTLRDnsSortById;
/** Value: "startTime" */
FOUNDATION_EXTERN NSString * const kGTLRDnsSortByStartTime;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Dns query classes.
 */
@interface GTLRDnsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Atomically updates the ResourceRecordSet collection.
 *
 *  Method: dns.changes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesCreateWithObject:project:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Change.
 *
 *  Atomically updates the ResourceRecordSet collection.
 *
 *  @param object The @c GTLRDns_Change to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ChangesCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_Change *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  Fetches the representation of an existing Change.
 *
 *  Method: dns.changes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesGetWithproject:managedZone:changeId:]

/**
 *  The identifier of the requested change, from a previous
 *  ResourceRecordSetsChangeResponse.
 */
@property(nonatomic, copy, nullable) NSString *changeId;

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Change.
 *
 *  Fetches the representation of an existing Change.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *  @param changeId The identifier of the requested change, from a previous
 *    ResourceRecordSetsChangeResponse.
 *
 *  @return GTLRDnsQuery_ChangesGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                        changeId:(NSString *)changeId;

@end

/**
 *  Enumerates Changes to a ResourceRecordSet collection.
 *
 *  Method: dns.changes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesListWithproject:managedZone:]

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Sorting criterion. The only supported value is change sequence.
 *
 *  Likely values:
 *    @arg @c kGTLRDnsSortByChangeSequence Value "changeSequence"
 *
 *  @note If not set, the documented server-side default will be
 *        kGTLRDnsSortByChangeSequence.
 */
@property(nonatomic, copy, nullable) NSString *sortBy;

/** Sorting order direction: 'ascending' or 'descending'. */
@property(nonatomic, copy, nullable) NSString *sortOrder;

/**
 *  Fetches a @c GTLRDns_ChangesListResponse.
 *
 *  Enumerates Changes to a ResourceRecordSet collection.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ChangesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  Fetches the representation of an existing DnsKey.
 *
 *  Method: dns.dnsKeys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_DnsKeysGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForDnsKeysGetWithproject:managedZone:dnsKeyId:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  An optional comma-separated list of digest types to compute and display for
 *  key signing keys. If omitted, the recommended digest type is computed and
 *  displayed.
 */
@property(nonatomic, copy, nullable) NSString *digestType;

/** The identifier of the requested DnsKey. */
@property(nonatomic, copy, nullable) NSString *dnsKeyId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_DnsKey.
 *
 *  Fetches the representation of an existing DnsKey.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *  @param dnsKeyId The identifier of the requested DnsKey.
 *
 *  @return GTLRDnsQuery_DnsKeysGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                        dnsKeyId:(NSString *)dnsKeyId;

@end

/**
 *  Enumerates DnsKeys to a ResourceRecordSet collection.
 *
 *  Method: dns.dnsKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_DnsKeysList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForDnsKeysListWithproject:managedZone:]

/**
 *  An optional comma-separated list of digest types to compute and display for
 *  key signing keys. If omitted, the recommended digest type is computed and
 *  displayed.
 */
@property(nonatomic, copy, nullable) NSString *digestType;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_DnsKeysListResponse.
 *
 *  Enumerates DnsKeys to a ResourceRecordSet collection.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_DnsKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  Fetches the representation of an existing Operation.
 *
 *  Method: dns.managedZoneOperations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZoneOperationsGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZoneOperationsGetWithproject:managedZone:operation:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** Identifies the managed zone addressed by this request. */
@property(nonatomic, copy, nullable) NSString *managedZone;

/**
 *  Identifies the operation addressed by this request (ID of the operation).
 */
@property(nonatomic, copy, nullable) NSString *operation;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  Fetches the representation of an existing Operation.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *  @param operation Identifies the operation addressed by this request (ID of
 *    the operation).
 *
 *  @return GTLRDnsQuery_ManagedZoneOperationsGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                       operation:(NSString *)operation;

@end

/**
 *  Enumerates Operations for the given ManagedZone.
 *
 *  Method: dns.managedZoneOperations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZoneOperationsList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZoneOperationsListWithproject:managedZone:]

/** Identifies the managed zone addressed by this request. */
@property(nonatomic, copy, nullable) NSString *managedZone;

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Sorting criterion. The only supported values are START_TIME and ID.
 *
 *  Likely values:
 *    @arg @c kGTLRDnsSortByStartTime Value "startTime"
 *    @arg @c kGTLRDnsSortById Value "id"
 *
 *  @note If not set, the documented server-side default will be
 *        kGTLRDnsSortByStartTime.
 */
@property(nonatomic, copy, nullable) NSString *sortBy;

/**
 *  Fetches a @c GTLRDns_ManagedZoneOperationsListResponse.
 *
 *  Enumerates Operations for the given ManagedZone.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *
 *  @return GTLRDnsQuery_ManagedZoneOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  Creates a new ManagedZone.
 *
 *  Method: dns.managedZones.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesCreateWithObject:project:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZone.
 *
 *  Creates a new ManagedZone.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project Identifies the project addressed by this request.
 *
 *  @return GTLRDnsQuery_ManagedZonesCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project;

@end

/**
 *  Deletes a previously created ManagedZone.
 *
 *  Method: dns.managedZones.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesDelete : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesDeleteWithproject:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a previously created ManagedZone.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ManagedZonesDelete
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  Fetches the representation of an existing ManagedZone.
 *
 *  Method: dns.managedZones.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesGetWithproject:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZone.
 *
 *  Fetches the representation of an existing ManagedZone.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ManagedZonesGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  Enumerates ManagedZones that have been created but not yet deleted.
 *
 *  Method: dns.managedZones.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesListWithproject:]

/** Restricts the list to return only zones with this domain name. */
@property(nonatomic, copy, nullable) NSString *dnsName;

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZonesListResponse.
 *
 *  Enumerates ManagedZones that have been created but not yet deleted.
 *
 *  @param project Identifies the project addressed by this request.
 *
 *  @return GTLRDnsQuery_ManagedZonesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project;

@end

/**
 *  Applies a partial update to an existing ManagedZone.
 *
 *  Method: dns.managedZones.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesPatch : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesPatchWithObject:project:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  Applies a partial update to an existing ManagedZone.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ManagedZonesPatch
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  Updates an existing ManagedZone.
 *
 *  Method: dns.managedZones.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesUpdate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesUpdateWithObject:project:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  Updates an existing ManagedZone.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ManagedZonesUpdate
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  Creates a new Policy.
 *
 *  Method: dns.policies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesCreateWithObject:project:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Policy.
 *
 *  Creates a new Policy.
 *
 *  @param object The @c GTLRDns_Policy to include in the query.
 *  @param project Identifies the project addressed by this request.
 *
 *  @return GTLRDnsQuery_PoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_Policy *)object
                        project:(NSString *)project;

@end

/**
 *  Deletes a previously created Policy. Fails if the policy is still being
 *  referenced by a network.
 *
 *  Method: dns.policies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesDelete : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesDeleteWithproject:policy:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** User given friendly name of the policy addressed by this request. */
@property(nonatomic, copy, nullable) NSString *policy;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a previously created Policy. Fails if the policy is still being
 *  referenced by a network.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param policy User given friendly name of the policy addressed by this
 *    request.
 *
 *  @return GTLRDnsQuery_PoliciesDelete
 */
+ (instancetype)queryWithProject:(NSString *)project
                          policy:(NSString *)policy;

@end

/**
 *  Fetches the representation of an existing Policy.
 *
 *  Method: dns.policies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesGetWithproject:policy:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** User given friendly name of the policy addressed by this request. */
@property(nonatomic, copy, nullable) NSString *policy;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Policy.
 *
 *  Fetches the representation of an existing Policy.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param policy User given friendly name of the policy addressed by this
 *    request.
 *
 *  @return GTLRDnsQuery_PoliciesGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                          policy:(NSString *)policy;

@end

/**
 *  Enumerates all Policies associated with a project.
 *
 *  Method: dns.policies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesListWithproject:]

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_PoliciesListResponse.
 *
 *  Enumerates all Policies associated with a project.
 *
 *  @param project Identifies the project addressed by this request.
 *
 *  @return GTLRDnsQuery_PoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project;

@end

/**
 *  Applies a partial update to an existing Policy.
 *
 *  Method: dns.policies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesPatch : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesPatchWithObject:project:policy:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** User given friendly name of the policy addressed by this request. */
@property(nonatomic, copy, nullable) NSString *policy;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_PoliciesPatchResponse.
 *
 *  Applies a partial update to an existing Policy.
 *
 *  @param object The @c GTLRDns_Policy to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param policy User given friendly name of the policy addressed by this
 *    request.
 *
 *  @return GTLRDnsQuery_PoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRDns_Policy *)object
                        project:(NSString *)project
                         policy:(NSString *)policy;

@end

/**
 *  Updates an existing Policy.
 *
 *  Method: dns.policies.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_PoliciesUpdate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForPoliciesUpdateWithObject:project:policy:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** User given friendly name of the policy addressed by this request. */
@property(nonatomic, copy, nullable) NSString *policy;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_PoliciesUpdateResponse.
 *
 *  Updates an existing Policy.
 *
 *  @param object The @c GTLRDns_Policy to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param policy User given friendly name of the policy addressed by this
 *    request.
 *
 *  @return GTLRDnsQuery_PoliciesUpdate
 */
+ (instancetype)queryWithObject:(GTLRDns_Policy *)object
                        project:(NSString *)project
                         policy:(NSString *)policy;

@end

/**
 *  Fetch the representation of an existing Project.
 *
 *  Method: dns.projects.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsGetWithproject:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Project.
 *
 *  Fetch the representation of an existing Project.
 *
 *  @param project Identifies the project addressed by this request.
 *
 *  @return GTLRDnsQuery_ProjectsGet
 */
+ (instancetype)queryWithProject:(NSString *)project;

@end

/**
 *  Creates a new ResourceRecordSet.
 *
 *  Method: dns.projects.managedZones.rrsets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsManagedZonesRrsetsCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsManagedZonesRrsetsCreateWithObject:project:managedZone:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSet.
 *
 *  Creates a new ResourceRecordSet.
 *
 *  @param object The @c GTLRDns_ResourceRecordSet to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ProjectsManagedZonesRrsetsCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_ResourceRecordSet *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  Deletes a previously created ResourceRecordSet.
 *
 *  Method: dns.projects.managedZones.rrsets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsManagedZonesRrsetsDelete : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsManagedZonesRrsetsDeleteWithproject:managedZone:name:type:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Fully qualified domain name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/** RRSet type. */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSetsDeleteResponse.
 *
 *  Deletes a previously created ResourceRecordSet.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *  @param name Fully qualified domain name.
 *  @param type RRSet type.
 *
 *  @return GTLRDnsQuery_ProjectsManagedZonesRrsetsDelete
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                            name:(NSString *)name
                            type:(NSString *)type;

@end

/**
 *  Fetches the representation of an existing ResourceRecordSet.
 *
 *  Method: dns.projects.managedZones.rrsets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsManagedZonesRrsetsGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsManagedZonesRrsetsGetWithproject:managedZone:name:type:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Fully qualified domain name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/** RRSet type. */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSet.
 *
 *  Fetches the representation of an existing ResourceRecordSet.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *  @param name Fully qualified domain name.
 *  @param type RRSet type.
 *
 *  @return GTLRDnsQuery_ProjectsManagedZonesRrsetsGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                            name:(NSString *)name
                            type:(NSString *)type;

@end

/**
 *  Applies a partial update to an existing ResourceRecordSet.
 *
 *  Method: dns.projects.managedZones.rrsets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsManagedZonesRrsetsPatch : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsManagedZonesRrsetsPatchWithObject:project:managedZone:name:type:]

/**
 *  For mutating operation requests only. An optional identifier specified by
 *  the client. Must be unique for operation resources in the Operations
 *  collection.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/** Fully qualified domain name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/** RRSet type. */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSet.
 *
 *  Applies a partial update to an existing ResourceRecordSet.
 *
 *  @param object The @c GTLRDns_ResourceRecordSet to include in the query.
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *  @param name Fully qualified domain name.
 *  @param type RRSet type.
 *
 *  @return GTLRDnsQuery_ProjectsManagedZonesRrsetsPatch
 */
+ (instancetype)queryWithObject:(GTLRDns_ResourceRecordSet *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone
                           name:(NSString *)name
                           type:(NSString *)type;

@end

/**
 *  Enumerates ResourceRecordSets that you have created but not yet deleted.
 *
 *  Method: dns.resourceRecordSets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ResourceRecordSetsList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForResourceRecordSetsListWithproject:managedZone:]

/**
 *  Identifies the managed zone addressed by this request. Can be the managed
 *  zone name or ID.
 */
@property(nonatomic, copy, nullable) NSString *managedZone;

/**
 *  Optional. Maximum number of results to be returned. If unspecified, the
 *  server decides how many results to return.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Restricts the list to return only records with this fully qualified domain
 *  name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A tag returned by a previous list request that was truncated. Use
 *  this parameter to continue a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Identifies the project addressed by this request. */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Restricts the list to return only records of this type. If present, the
 *  "name" parameter must also be present.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSetsListResponse.
 *
 *  Enumerates ResourceRecordSets that you have created but not yet deleted.
 *
 *  @param project Identifies the project addressed by this request.
 *  @param managedZone Identifies the managed zone addressed by this request.
 *    Can be the managed zone name or ID.
 *
 *  @return GTLRDnsQuery_ResourceRecordSetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
