// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud DNS API (dns/v1)
// Description:
//   Configures and serves authoritative DNS records.
// Documentation:
//   https://developers.google.com/cloud-dns

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDns_Change;
@class GTLRDns_ManagedZone;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// sortBy

/** Value: "changeSequence" */
GTLR_EXTERN NSString * const kGTLRDnsSortByChangeSequence;
/** Value: "id" */
GTLR_EXTERN NSString * const kGTLRDnsSortById;
/** Value: "startTime" */
GTLR_EXTERN NSString * const kGTLRDnsSortByStartTime;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Dns query classes.
 */
@interface GTLRDnsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  GTLRDnsQuery_ChangesCreate
 *
 *  Method: dns.changes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesCreateWithObject:project:managedZone:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Change.
 *
 *  @param object The @c GTLRDns_Change to include in the query.
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ChangesCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_Change *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ChangesGet
 *
 *  Method: dns.changes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesGetWithproject:managedZone:changeId:]

@property(nonatomic, copy, nullable) NSString *changeId;

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Change.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *  @param changeId NSString
 *
 *  @return GTLRDnsQuery_ChangesGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                        changeId:(NSString *)changeId;

@end

/**
 *  GTLRDnsQuery_ChangesList
 *
 *  Method: dns.changes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ChangesList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForChangesListWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, assign) NSInteger maxResults;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  sortBy
 *
 *  Likely values:
 *    @arg @c kGTLRDnsSortByChangeSequence Value "changeSequence"
 *
 *  @note If not set, the documented server-side default will be
 *        kGTLRDnsSortByChangeSequence.
 */
@property(nonatomic, copy, nullable) NSString *sortBy;

@property(nonatomic, copy, nullable) NSString *sortOrder;

/**
 *  Fetches a @c GTLRDns_ChangesListResponse.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ChangesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_DnsKeysGet
 *
 *  Method: dns.dnsKeys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_DnsKeysGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForDnsKeysGetWithproject:managedZone:dnsKeyId:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *digestType;

@property(nonatomic, copy, nullable) NSString *dnsKeyId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_DnsKey.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *  @param dnsKeyId NSString
 *
 *  @return GTLRDnsQuery_DnsKeysGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                        dnsKeyId:(NSString *)dnsKeyId;

@end

/**
 *  GTLRDnsQuery_DnsKeysList
 *
 *  Method: dns.dnsKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_DnsKeysList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForDnsKeysListWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *digestType;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, assign) NSInteger maxResults;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_DnsKeysListResponse.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_DnsKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ManagedZoneOperationsGet
 *
 *  Method: dns.managedZoneOperations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZoneOperationsGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZoneOperationsGetWithproject:managedZone:operation:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *operation;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *  @param operation NSString
 *
 *  @return GTLRDnsQuery_ManagedZoneOperationsGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone
                       operation:(NSString *)operation;

@end

/**
 *  GTLRDnsQuery_ManagedZoneOperationsList
 *
 *  Method: dns.managedZoneOperations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZoneOperationsList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZoneOperationsListWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, assign) NSInteger maxResults;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  sortBy
 *
 *  Likely values:
 *    @arg @c kGTLRDnsSortById Value "id"
 *    @arg @c kGTLRDnsSortByStartTime Value "startTime"
 *
 *  @note If not set, the documented server-side default will be
 *        kGTLRDnsSortByStartTime.
 */
@property(nonatomic, copy, nullable) NSString *sortBy;

/**
 *  Fetches a @c GTLRDns_ManagedZoneOperationsListResponse.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ManagedZoneOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ManagedZonesCreate
 *
 *  Method: dns.managedZones.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesCreate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesCreateWithObject:project:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZone.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesCreate
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project;

@end

/**
 *  GTLRDnsQuery_ManagedZonesDelete
 *
 *  Method: dns.managedZones.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesDelete : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesDeleteWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesDelete
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ManagedZonesGet
 *
 *  Method: dns.managedZones.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesGetWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZone.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesGet
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ManagedZonesList
 *
 *  Method: dns.managedZones.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesListWithproject:]

@property(nonatomic, copy, nullable) NSString *dnsName;

@property(nonatomic, assign) NSInteger maxResults;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_ManagedZonesListResponse.
 *
 *  @param project NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project;

@end

/**
 *  GTLRDnsQuery_ManagedZonesPatch
 *
 *  Method: dns.managedZones.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesPatch : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesPatchWithObject:project:managedZone:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesPatch
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ManagedZonesUpdate
 *
 *  Method: dns.managedZones.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ManagedZonesUpdate : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForManagedZonesUpdateWithObject:project:managedZone:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Operation.
 *
 *  @param object The @c GTLRDns_ManagedZone to include in the query.
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ManagedZonesUpdate
 */
+ (instancetype)queryWithObject:(GTLRDns_ManagedZone *)object
                        project:(NSString *)project
                    managedZone:(NSString *)managedZone;

@end

/**
 *  GTLRDnsQuery_ProjectsGet
 *
 *  Method: dns.projects.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ProjectsGet : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForProjectsGetWithproject:]

@property(nonatomic, copy, nullable) NSString *clientOperationId;

@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRDns_Project.
 *
 *  @param project NSString
 *
 *  @return GTLRDnsQuery_ProjectsGet
 */
+ (instancetype)queryWithProject:(NSString *)project;

@end

/**
 *  GTLRDnsQuery_ResourceRecordSetsList
 *
 *  Method: dns.resourceRecordSets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDnsCloudPlatform
 *    @c kGTLRAuthScopeDnsCloudPlatformReadOnly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadonly
 *    @c kGTLRAuthScopeDnsNdevClouddnsReadwrite
 */
@interface GTLRDnsQuery_ResourceRecordSetsList : GTLRDnsQuery
// Previous library name was
//   +[GTLQueryDns queryForResourceRecordSetsListWithproject:managedZone:]

@property(nonatomic, copy, nullable) NSString *managedZone;

@property(nonatomic, assign) NSInteger maxResults;

@property(nonatomic, copy, nullable) NSString *name;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *project;

@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRDns_ResourceRecordSetsListResponse.
 *
 *  @param project NSString
 *  @param managedZone NSString
 *
 *  @return GTLRDnsQuery_ResourceRecordSetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProject:(NSString *)project
                     managedZone:(NSString *)managedZone;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
