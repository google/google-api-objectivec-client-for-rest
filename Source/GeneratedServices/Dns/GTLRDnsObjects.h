// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud DNS API (dns/v1)
// Description:
//   Configures and serves authoritative DNS records.
// Documentation:
//   https://developers.google.com/cloud-dns

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDns_Change;
@class GTLRDns_ManagedZone;
@class GTLRDns_Quota;
@class GTLRDns_ResourceRecordSet;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDns_Change.status

/** Value: "done" */
GTLR_EXTERN NSString * const kGTLRDns_Change_Status_Done;
/** Value: "pending" */
GTLR_EXTERN NSString * const kGTLRDns_Change_Status_Pending;

/**
 *  An atomic update to a collection of ResourceRecordSets.
 */
@interface GTLRDns_Change : GTLRObject

/** Which ResourceRecordSets to add? */
@property(nonatomic, strong, nullable) NSArray<GTLRDns_ResourceRecordSet *> *additions;

/** Which ResourceRecordSets to remove? Must match existing data exactly. */
@property(nonatomic, strong, nullable) NSArray<GTLRDns_ResourceRecordSet *> *deletions;

/**
 *  Unique identifier for the resource; defined by the server (output only).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "dns#change".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The time that this operation was started by the server (output only). This
 *  is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  Status of the operation (output only).
 *
 *  Likely values:
 *    @arg @c kGTLRDns_Change_Status_Done Value "done"
 *    @arg @c kGTLRDns_Change_Status_Pending Value "pending"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The response to a request to enumerate Changes to a ResourceRecordSets
 *  collection.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "changes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDns_ChangesListResponse : GTLRCollectionObject

/**
 *  The requested changes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDns_Change *> *changes;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The presence of this field indicates that there exist more results following
 *  your last page of results in pagination order. To fetch them, make another
 *  list request using this value as your pagination token.
 *  In this way you can retrieve the complete contents of even very large
 *  collections one page at a time. However, if the contents of the collection
 *  change between the first and last paginated list request, the set of all
 *  elements returned will be an inconsistent view of the collection. There is
 *  no way to retrieve a "snapshot" of collections larger than the maximum page
 *  size.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A zone is a subtree of the DNS namespace under one administrative
 *  responsibility. A ManagedZone is a resource that represents a DNS zone
 *  hosted by the Cloud DNS service.
 */
@interface GTLRDns_ManagedZone : GTLRObject

/**
 *  The time that this resource was created on the server. This is in RFC3339
 *  text format. Output only.
 */
@property(nonatomic, copy, nullable) NSString *creationTime;

/**
 *  A mutable string of at most 1024 characters associated with this resource
 *  for the user's convenience. Has no effect on the managed zone's function.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The DNS name of this managed zone, for instance "example.com.". */
@property(nonatomic, copy, nullable) NSString *dnsName;

/**
 *  Unique identifier for the resource; defined by the server (output only)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "dns#managedZone".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  User assigned name for this resource. Must be unique within the project. The
 *  name must be 1-63 characters long, must begin with a letter, end with a
 *  letter or digit, and only contain lowercase letters, digits or dashes.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Delegate your managed_zone to these virtual name servers; defined by the
 *  server (output only)
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *nameServers;

/**
 *  Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet
 *  is a set of DNS name servers that all host the same ManagedZones. Most users
 *  will leave this field unset.
 */
@property(nonatomic, copy, nullable) NSString *nameServerSet;

@end


/**
 *  GTLRDns_ManagedZonesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "managedZones" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDns_ManagedZonesListResponse : GTLRCollectionObject

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The managed zone resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDns_ManagedZone *> *managedZones;

/**
 *  The presence of this field indicates that there exist more results following
 *  your last page of results in pagination order. To fetch them, make another
 *  list request using this value as your page token.
 *  In this way you can retrieve the complete contents of even very large
 *  collections one page at a time. However, if the contents of the collection
 *  change between the first and last paginated list request, the set of all
 *  elements returned will be an inconsistent view of the collection. There is
 *  no way to retrieve a consistent snapshot of a collection larger than the
 *  maximum page size.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A project resource. The project is a top level container for resources
 *  including Cloud DNS ManagedZones. Projects can be created only in the APIs
 *  console.
 */
@interface GTLRDns_Project : GTLRObject

/**
 *  User assigned unique identifier for the resource (output only).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "dns#project".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Unique numeric identifier for the resource; defined by the server (output
 *  only).
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *number;

/** Quotas assigned to this project (output only). */
@property(nonatomic, strong, nullable) GTLRDns_Quota *quota;

@end


/**
 *  Limits associated with a Project.
 */
@interface GTLRDns_Quota : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "dns#quota".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Maximum allowed number of managed zones in the project.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *managedZones;

/**
 *  Maximum allowed number of ResourceRecords per ResourceRecordSet.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourceRecordsPerRrset;

/**
 *  Maximum allowed number of ResourceRecordSets to add per
 *  ChangesCreateRequest.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rrsetAdditionsPerChange;

/**
 *  Maximum allowed number of ResourceRecordSets to delete per
 *  ChangesCreateRequest.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rrsetDeletionsPerChange;

/**
 *  Maximum allowed number of ResourceRecordSets per zone in the project.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rrsetsPerManagedZone;

/**
 *  Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRrdataSizePerChange;

@end


/**
 *  A unit of data that will be returned by the DNS servers.
 */
@interface GTLRDns_ResourceRecordSet : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "dns#resourceRecordSet".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** For example, www.example.com. */
@property(nonatomic, copy, nullable) NSString *name;

/** As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1). */
@property(nonatomic, strong, nullable) NSArray<NSString *> *rrdatas;

/**
 *  Number of seconds that this ResourceRecordSet can be cached by resolvers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ttl;

/**
 *  The identifier of a supported record type, for example, A, AAAA, MX, TXT,
 *  and so on.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRDns_ResourceRecordSetsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "rrsets" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDns_ResourceRecordSetsListResponse : GTLRCollectionObject

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The presence of this field indicates that there exist more results following
 *  your last page of results in pagination order. To fetch them, make another
 *  list request using this value as your pagination token.
 *  In this way you can retrieve the complete contents of even very large
 *  collections one page at a time. However, if the contents of the collection
 *  change between the first and last paginated list request, the set of all
 *  elements returned will be an inconsistent view of the collection. There is
 *  no way to retrieve a consistent snapshot of a collection larger than the
 *  maximum page size.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The resource record set resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDns_ResourceRecordSet *> *rrsets;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
