// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   DoubleClick Bid Manager API (doubleclickbidmanager/v1)
// Description:
//   API for viewing and managing your reports in DoubleClick Bid Manager.
// Documentation:
//   https://developers.google.com/bid-manager/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDoubleClickBidManager_DownloadLineItemsRequest;
@class GTLRDoubleClickBidManager_DownloadRequest;
@class GTLRDoubleClickBidManager_Query;
@class GTLRDoubleClickBidManager_RunQueryRequest;
@class GTLRDoubleClickBidManager_UploadLineItemsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other DoubleClick Bid Manager query classes.
 */
@interface GTLRDoubleClickBidManagerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieves line items in CSV format. TrueView line items are not supported.
 *
 *  Method: doubleclickbidmanager.lineitems.downloadlineitems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_LineitemsDownloadlineitems : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForLineitemsDownloadlineitemsWithObject:]

/**
 *  Fetches a @c GTLRDoubleClickBidManager_DownloadLineItemsResponse.
 *
 *  Retrieves line items in CSV format. TrueView line items are not supported.
 *
 *  @param object The @c GTLRDoubleClickBidManager_DownloadLineItemsRequest to
 *    include in the query.
 *
 *  @return GTLRDoubleClickBidManagerQuery_LineitemsDownloadlineitems
 */
+ (instancetype)queryWithObject:(GTLRDoubleClickBidManager_DownloadLineItemsRequest *)object;

@end

/**
 *  Uploads line items in CSV format. TrueView line items are not supported.
 *
 *  Method: doubleclickbidmanager.lineitems.uploadlineitems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_LineitemsUploadlineitems : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForLineitemsUploadlineitemsWithObject:]

/**
 *  Fetches a @c GTLRDoubleClickBidManager_UploadLineItemsResponse.
 *
 *  Uploads line items in CSV format. TrueView line items are not supported.
 *
 *  @param object The @c GTLRDoubleClickBidManager_UploadLineItemsRequest to
 *    include in the query.
 *
 *  @return GTLRDoubleClickBidManagerQuery_LineitemsUploadlineitems
 */
+ (instancetype)queryWithObject:(GTLRDoubleClickBidManager_UploadLineItemsRequest *)object;

@end

/**
 *  Creates a query.
 *
 *  Method: doubleclickbidmanager.queries.createquery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_QueriesCreatequery : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForQueriesCreatequeryWithObject:]

/**
 *  Fetches a @c GTLRDoubleClickBidManager_Query.
 *
 *  Creates a query.
 *
 *  @param object The @c GTLRDoubleClickBidManager_Query to include in the
 *    query.
 *
 *  @return GTLRDoubleClickBidManagerQuery_QueriesCreatequery
 */
+ (instancetype)queryWithObject:(GTLRDoubleClickBidManager_Query *)object;

@end

/**
 *  Deletes a stored query as well as the associated stored reports.
 *
 *  Method: doubleclickbidmanager.queries.deletequery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_QueriesDeletequery : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForQueriesDeletequeryWithqueryId:]

/** Query ID to delete. */
@property(nonatomic, assign) long long queryId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a stored query as well as the associated stored reports.
 *
 *  @param queryId Query ID to delete.
 *
 *  @return GTLRDoubleClickBidManagerQuery_QueriesDeletequery
 */
+ (instancetype)queryWithQueryId:(long long)queryId;

@end

/**
 *  Retrieves a stored query.
 *
 *  Method: doubleclickbidmanager.queries.getquery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_QueriesGetquery : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForQueriesGetqueryWithqueryId:]

/** Query ID to retrieve. */
@property(nonatomic, assign) long long queryId;

/**
 *  Fetches a @c GTLRDoubleClickBidManager_Query.
 *
 *  Retrieves a stored query.
 *
 *  @param queryId Query ID to retrieve.
 *
 *  @return GTLRDoubleClickBidManagerQuery_QueriesGetquery
 */
+ (instancetype)queryWithQueryId:(long long)queryId;

@end

/**
 *  Retrieves stored queries.
 *
 *  Method: doubleclickbidmanager.queries.listqueries
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_QueriesListqueries : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForQueriesListqueries]

/**
 *  Fetches a @c GTLRDoubleClickBidManager_ListQueriesResponse.
 *
 *  Retrieves stored queries.
 *
 *  @return GTLRDoubleClickBidManagerQuery_QueriesListqueries
 */
+ (instancetype)query;

@end

/**
 *  Runs a stored query to generate a report.
 *
 *  Method: doubleclickbidmanager.queries.runquery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_QueriesRunquery : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForQueriesRunqueryWithObject:queryId:]

/** Query ID to run. */
@property(nonatomic, assign) long long queryId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Runs a stored query to generate a report.
 *
 *  @param object The @c GTLRDoubleClickBidManager_RunQueryRequest to include in
 *    the query.
 *  @param queryId Query ID to run.
 *
 *  @return GTLRDoubleClickBidManagerQuery_QueriesRunquery
 */
+ (instancetype)queryWithObject:(GTLRDoubleClickBidManager_RunQueryRequest *)object
                        queryId:(long long)queryId;

@end

/**
 *  Retrieves stored reports.
 *
 *  Method: doubleclickbidmanager.reports.listreports
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_ReportsListreports : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForReportsListreportsWithqueryId:]

/** Query ID with which the reports are associated. */
@property(nonatomic, assign) long long queryId;

/**
 *  Fetches a @c GTLRDoubleClickBidManager_ListReportsResponse.
 *
 *  Retrieves stored reports.
 *
 *  @param queryId Query ID with which the reports are associated.
 *
 *  @return GTLRDoubleClickBidManagerQuery_ReportsListreports
 */
+ (instancetype)queryWithQueryId:(long long)queryId;

@end

/**
 *  Retrieves entities in SDF format.
 *
 *  Method: doubleclickbidmanager.sdf.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleClickBidManager
 */
@interface GTLRDoubleClickBidManagerQuery_SdfDownload : GTLRDoubleClickBidManagerQuery
// Previous library name was
//   +[GTLQueryDoubleClickBidManager queryForSdfDownloadWithObject:]

/**
 *  Fetches a @c GTLRDoubleClickBidManager_DownloadResponse.
 *
 *  Retrieves entities in SDF format.
 *
 *  @param object The @c GTLRDoubleClickBidManager_DownloadRequest to include in
 *    the query.
 *
 *  @return GTLRDoubleClickBidManagerQuery_SdfDownload
 */
+ (instancetype)queryWithObject:(GTLRDoubleClickBidManager_DownloadRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
