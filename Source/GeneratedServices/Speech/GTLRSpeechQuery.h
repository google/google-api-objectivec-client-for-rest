// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Speech API (speech/v1)
// Description:
//   Converts audio to text by applying powerful neural network models.
// Documentation:
//   https://cloud.google.com/speech-to-text/docs/quickstart-protocol

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSpeech_LongRunningRecognizeRequest;
@class GTLRSpeech_RecognizeRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Speech query classes.
 */
@interface GTLRSpeechQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: speech.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_OperationsGet : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSpeech_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRSpeechQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  Method: speech.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_OperationsList : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForOperationsList]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSpeech_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  @return GTLRSpeechQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: speech.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_ProjectsLocationsOperationsGet : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForProjectsLocationsOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSpeech_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRSpeechQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  Method: speech.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_ProjectsLocationsOperationsList : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForProjectsLocationsOperationsListWithname:]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSpeech_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRSpeechQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: speech.projects.operations.manualRecognitionTasks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_ProjectsOperationsManualRecognitionTasksGet : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForProjectsOperationsManualRecognitionTasksGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSpeech_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRSpeechQuery_ProjectsOperationsManualRecognitionTasksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Performs asynchronous speech recognition: receive results via the
 *  google.longrunning.Operations interface. Returns either an
 *  `Operation.error` or an `Operation.response` which contains
 *  a `LongRunningRecognizeResponse` message.
 *
 *  Method: speech.speech.longrunningrecognize
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_SpeechLongrunningrecognize : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForSpeechLongrunningrecognizeWithObject:]

/**
 *  Fetches a @c GTLRSpeech_Operation.
 *
 *  Performs asynchronous speech recognition: receive results via the
 *  google.longrunning.Operations interface. Returns either an
 *  `Operation.error` or an `Operation.response` which contains
 *  a `LongRunningRecognizeResponse` message.
 *
 *  @param object The @c GTLRSpeech_LongRunningRecognizeRequest to include in
 *    the query.
 *
 *  @return GTLRSpeechQuery_SpeechLongrunningrecognize
 */
+ (instancetype)queryWithObject:(GTLRSpeech_LongRunningRecognizeRequest *)object;

@end

/**
 *  Performs synchronous speech recognition: receive results after all audio
 *  has been sent and processed.
 *
 *  Method: speech.speech.recognize
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSpeechCloudPlatform
 */
@interface GTLRSpeechQuery_SpeechRecognize : GTLRSpeechQuery
// Previous library name was
//   +[GTLQuerySpeech queryForSpeechRecognizeWithObject:]

/**
 *  Fetches a @c GTLRSpeech_RecognizeResponse.
 *
 *  Performs synchronous speech recognition: receive results after all audio
 *  has been sent and processed.
 *
 *  @param object The @c GTLRSpeech_RecognizeRequest to include in the query.
 *
 *  @return GTLRSpeechQuery_SpeechRecognize
 */
+ (instancetype)queryWithObject:(GTLRSpeech_RecognizeRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
