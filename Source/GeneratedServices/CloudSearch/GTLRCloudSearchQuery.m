// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Search API (cloudsearch/v1)
// Description:
//   Cloud Search provides cloud-based search capabilities over G Suite data.
//   The Cloud Search API allows indexing of non-G Suite data into Cloud Search.
// Documentation:
//   https://gsuite.google.com/products/cloud-search/

#import "GTLRCloudSearchQuery.h"

#import "GTLRCloudSearchObjects.h"

// ----------------------------------------------------------------------------
// Constants

// mode
NSString * const kGTLRCloudSearchModeAsynchronous = @"ASYNCHRONOUS";
NSString * const kGTLRCloudSearchModeSynchronous  = @"SYNCHRONOUS";
NSString * const kGTLRCloudSearchModeUnspecified  = @"UNSPECIFIED";

// resolutionStatusCode
NSString * const kGTLRCloudSearchResolutionStatusCodeCodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRCloudSearchResolutionStatusCodeIdentitySourceMisconfigured = @"IDENTITY_SOURCE_MISCONFIGURED";
NSString * const kGTLRCloudSearchResolutionStatusCodeIdentitySourceNotFound = @"IDENTITY_SOURCE_NOT_FOUND";
NSString * const kGTLRCloudSearchResolutionStatusCodeInternalError = @"INTERNAL_ERROR";
NSString * const kGTLRCloudSearchResolutionStatusCodeNotFound  = @"NOT_FOUND";
NSString * const kGTLRCloudSearchResolutionStatusCodeTooManyMappingsFound = @"TOO_MANY_MAPPINGS_FOUND";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudSearchQuery

@dynamic fields;

@end

@implementation GTLRCloudSearchQuery_DebugDatasourcesItemsCheckAccess

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithObject:(GTLRCloudSearch_Principal *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/debug/{+name}:checkAccess";
  GTLRCloudSearchQuery_DebugDatasourcesItemsCheckAccess *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_CheckAccessResponse class];
  query.loggingName = @"cloudsearch.debug.datasources.items.checkAccess";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_DebugDatasourcesItemsSearchByViewUrl

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_SearchItemsByViewUrlRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/debug/{+name}/items:searchByViewUrl";
  GTLRCloudSearchQuery_DebugDatasourcesItemsSearchByViewUrl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_SearchItemsByViewUrlResponse class];
  query.loggingName = @"cloudsearch.debug.datasources.items.searchByViewUrl";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_DebugDatasourcesItemsUnmappedidsList

@dynamic debugOptionsEnableDebugging, pageSize, pageToken, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/debug/{+parent}/unmappedids";
  GTLRCloudSearchQuery_DebugDatasourcesItemsUnmappedidsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSearch_ListUnmappedIdentitiesResponse class];
  query.loggingName = @"cloudsearch.debug.datasources.items.unmappedids.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_DebugIdentitysourcesItemsListForunmappedidentity

@dynamic debugOptionsEnableDebugging, groupResourceName, pageSize, pageToken,
         parent, userResourceName;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/debug/{+parent}/items:forunmappedidentity";
  GTLRCloudSearchQuery_DebugIdentitysourcesItemsListForunmappedidentity *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSearch_ListItemNamesForUnmappedIdentityResponse class];
  query.loggingName = @"cloudsearch.debug.identitysources.items.listForunmappedidentity";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_DebugIdentitysourcesUnmappedidsList

@dynamic debugOptionsEnableDebugging, pageSize, pageToken, parent,
         resolutionStatusCode;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/debug/{+parent}/unmappedids";
  GTLRCloudSearchQuery_DebugIdentitysourcesUnmappedidsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSearch_ListUnmappedIdentitiesResponse class];
  query.loggingName = @"cloudsearch.debug.identitysources.unmappedids.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesDeleteSchema

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/schema";
  GTLRCloudSearchQuery_IndexingDatasourcesDeleteSchema *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.deleteSchema";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesGetSchema

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/schema";
  GTLRCloudSearchQuery_IndexingDatasourcesGetSchema *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Schema class];
  query.loggingName = @"cloudsearch.indexing.datasources.getSchema";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsDelete

@dynamic connectorName, debugOptionsEnableDebugging, mode, name, version;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.delete";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsDeleteQueueItems

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_DeleteQueueItemsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/items:deleteQueueItems";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsDeleteQueueItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.deleteQueueItems";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsGet

@dynamic connectorName, debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Item class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.get";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsIndex

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_IndexItemRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}:index";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsIndex *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.index";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsList

@dynamic brief, connectorName, debugOptionsEnableDebugging, name, pageSize,
         pageToken;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/items";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_ListItemsResponse class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsPoll

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_PollItemsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/items:poll";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsPoll *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_PollItemsResponse class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.poll";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsPush

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_PushItemRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}:push";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsPush *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Item class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.push";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsUnreserve

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_UnreserveItemsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/items:unreserve";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsUnreserve *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.unreserve";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesItemsUpload

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_StartUploadItemRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}:upload";
  GTLRCloudSearchQuery_IndexingDatasourcesItemsUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_UploadItemRef class];
  query.loggingName = @"cloudsearch.indexing.datasources.items.upload";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_IndexingDatasourcesUpdateSchema

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_UpdateSchemaRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/indexing/{+name}/schema";
  GTLRCloudSearchQuery_IndexingDatasourcesUpdateSchema *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.indexing.datasources.updateSchema";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_MediaUpload

@dynamic resourceName;

+ (instancetype)queryWithObject:(GTLRCloudSearch_Media *)object
                   resourceName:(NSString *)resourceName
               uploadParameters:(GTLRUploadParameters *)uploadParameters {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resourceName" ];
  NSString *pathURITemplate = @"v1/media/{+resourceName}";
  GTLRCloudSearchQuery_MediaUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resourceName = resourceName;
  query.uploadParameters = uploadParameters;
  query.expectedObjectClass = [GTLRCloudSearch_Media class];
  query.loggingName = @"cloudsearch.media.upload";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudSearchQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.operations.get";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_QuerySearch

+ (instancetype)queryWithObject:(GTLRCloudSearch_SearchRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/query/search";
  GTLRCloudSearchQuery_QuerySearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSearch_SearchResponse class];
  query.loggingName = @"cloudsearch.query.search";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_QuerySourcesList

@dynamic pageToken, requestOptionsDebugOptionsEnableDebugging,
         requestOptionsLanguageCode, requestOptionsSearchApplicationId,
         requestOptionsTimeZone;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"requestOptionsDebugOptionsEnableDebugging" : @"requestOptions.debugOptions.enableDebugging",
    @"requestOptionsLanguageCode" : @"requestOptions.languageCode",
    @"requestOptionsSearchApplicationId" : @"requestOptions.searchApplicationId",
    @"requestOptionsTimeZone" : @"requestOptions.timeZone"
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/query/sources";
  GTLRCloudSearchQuery_QuerySourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSearch_ListQuerySourcesResponse class];
  query.loggingName = @"cloudsearch.query.sources.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_QuerySuggest

+ (instancetype)queryWithObject:(GTLRCloudSearch_SuggestRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/query/suggest";
  GTLRCloudSearchQuery_QuerySuggest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSearch_SuggestResponse class];
  query.loggingName = @"cloudsearch.query.suggest";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsDatasourcesCreate

+ (instancetype)queryWithObject:(GTLRCloudSearch_DataSource *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/settings/datasources";
  GTLRCloudSearchQuery_SettingsDatasourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.datasources.create";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsDatasourcesDelete

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsDatasourcesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.datasources.delete";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsDatasourcesGet

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsDatasourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_DataSource class];
  query.loggingName = @"cloudsearch.settings.datasources.get";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsDatasourcesList

@dynamic debugOptionsEnableDebugging, pageSize, pageToken;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/settings/datasources";
  GTLRCloudSearchQuery_SettingsDatasourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSearch_ListDataSourceResponse class];
  query.loggingName = @"cloudsearch.settings.datasources.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsDatasourcesUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_UpdateDataSourceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsDatasourcesUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.datasources.update";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsCreate

+ (instancetype)queryWithObject:(GTLRCloudSearch_SearchApplication *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1/settings/searchapplications";
  GTLRCloudSearchQuery_SettingsSearchapplicationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.searchapplications.create";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsDelete

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsSearchapplicationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.searchapplications.delete";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsGet

@dynamic debugOptionsEnableDebugging, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsSearchapplicationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_SearchApplication class];
  query.loggingName = @"cloudsearch.settings.searchapplications.get";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsList

@dynamic debugOptionsEnableDebugging, pageSize, pageToken;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"debugOptionsEnableDebugging" : @"debugOptions.enableDebugging" };
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/settings/searchapplications";
  GTLRCloudSearchQuery_SettingsSearchapplicationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSearch_ListSearchApplicationsResponse class];
  query.loggingName = @"cloudsearch.settings.searchapplications.list";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsReset

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_ResetSearchApplicationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}:reset";
  GTLRCloudSearchQuery_SettingsSearchapplicationsReset *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.searchapplications.reset";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_SettingsSearchapplicationsUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSearch_SearchApplication *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/settings/{+name}";
  GTLRCloudSearchQuery_SettingsSearchapplicationsUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_Operation class];
  query.loggingName = @"cloudsearch.settings.searchapplications.update";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_StatsGetIndex

@dynamic fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth,
         toDateYear;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"fromDateDay" : @"fromDate.day",
    @"fromDateMonth" : @"fromDate.month",
    @"fromDateYear" : @"fromDate.year",
    @"toDateDay" : @"toDate.day",
    @"toDateMonth" : @"toDate.month",
    @"toDateYear" : @"toDate.year"
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/stats/index";
  GTLRCloudSearchQuery_StatsGetIndex *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSearch_GetCustomerIndexStatsResponse class];
  query.loggingName = @"cloudsearch.stats.getIndex";
  return query;
}

@end

@implementation GTLRCloudSearchQuery_StatsIndexDatasourcesGet

@dynamic fromDateDay, fromDateMonth, fromDateYear, name, toDateDay, toDateMonth,
         toDateYear;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"fromDateDay" : @"fromDate.day",
    @"fromDateMonth" : @"fromDate.month",
    @"fromDateYear" : @"fromDate.year",
    @"toDateDay" : @"toDate.day",
    @"toDateMonth" : @"toDate.month",
    @"toDateYear" : @"toDate.year"
  };
  return map;
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/stats/index/{+name}";
  GTLRCloudSearchQuery_StatsIndexDatasourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSearch_GetDataSourceIndexStatsResponse class];
  query.loggingName = @"cloudsearch.stats.index.datasources.get";
  return query;
}

@end
