// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Functions API (cloudfunctions/v1)
// Description:
//   Manages lightweight user-provided functions executed in response to events.
// Documentation:
//   https://cloud.google.com/functions

#import "GTLRCloudFunctionsQuery.h"

#import "GTLRCloudFunctionsObjects.h"

@implementation GTLRCloudFunctionsQuery

@dynamic fields;

@end

@implementation GTLRCloudFunctionsQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudFunctionsQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_Operation class];
  query.loggingName = @"cloudfunctions.operations.get";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_OperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/operations";
  GTLRCloudFunctionsQuery_OperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudFunctions_ListOperationsResponse class];
  query.loggingName = @"cloudfunctions.operations.list";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsCall

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_CallFunctionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:call";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsCall *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_CallFunctionResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.call";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsCreate

@dynamic location;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_CloudFunction *)object
                       location:(NSString *)location {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}/functions";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRCloudFunctions_Operation class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.create";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_Operation class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.delete";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGenerateDownloadUrl

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_GenerateDownloadUrlRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:generateDownloadUrl";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGenerateDownloadUrl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_GenerateDownloadUrlResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.generateDownloadUrl";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGenerateUploadUrl

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_GenerateUploadUrlRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/functions:generateUploadUrl";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGenerateUploadUrl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudFunctions_GenerateUploadUrlResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.generateUploadUrl";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_CloudFunction class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.get";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_Policy class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/functions";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudFunctions_ListFunctionsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.list";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_CloudFunction *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_Operation class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.patch";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_Policy class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_TestIamPermissionsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRCloudFunctionsQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_ListLocationsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.list";
  return query;
}

@end
