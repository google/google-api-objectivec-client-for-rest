// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Healthcare API (healthcare/v1)
// Description:
//   Manage, store, and access healthcare data in Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/healthcare

#import "GTLRCloudHealthcareQuery.h"

#import "GTLRCloudHealthcareObjects.h"

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRCloudHealthcareViewBasic                 = @"BASIC";
NSString * const kGTLRCloudHealthcareViewFull                  = @"FULL";
NSString * const kGTLRCloudHealthcareViewMessageViewUnspecified = @"MESSAGE_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudHealthcareViewParsedOnly            = @"PARSED_ONLY";
NSString * const kGTLRCloudHealthcareViewRawOnly               = @"RAW_ONLY";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudHealthcareQuery

@dynamic fields;

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsCreate

@dynamic datasetId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Dataset *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasets";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDeidentify

@dynamic sourceDataset;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DeidentifyDatasetRequest *)object
                  sourceDataset:(NSString *)sourceDataset {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"sourceDataset" ];
  NSString *pathURITemplate = @"v1/{+sourceDataset}:deidentify";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.sourceDataset = sourceDataset;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.deidentify";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresCreate

@dynamic dicomStoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DicomStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDeidentify

@dynamic sourceStore;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DeidentifyDicomStoreRequest *)object
                    sourceStore:(NSString *)sourceStore {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"sourceStore" ];
  NSString *pathURITemplate = @"v1/{+sourceStore}:deidentify";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.sourceStore = sourceStore;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.deidentify";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ExportDicomDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:export";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.export";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresImport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ImportDicomDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:import";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.import";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListDicomStoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DicomStore *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.searchForSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForStudies

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSearchForStudies *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.searchForStudies";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStoreInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStoreInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.storeInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesRetrieveMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesRetrieveMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.retrieveMetadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesRetrieveStudy

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesRetrieveStudy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.retrieveStudy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSearchForSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSearchForSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.searchForSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesFramesRetrieveFrames

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesFramesRetrieveFrames *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveFrames";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesFramesRetrieveRendered

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesFramesRetrieveRendered *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveRendered";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveInstance

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveInstance *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveInstance";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveMetadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveRendered

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesInstancesRetrieveRendered *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveRendered";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesRetrieveMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesRetrieveMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.retrieveMetadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesRetrieveSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesRetrieveSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.retrieveSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesSeriesSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.series.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesStoreInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresStudiesStoreInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.studies.storeInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCreate

@dynamic fhirStoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_FhirStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/fhirStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDeidentify

@dynamic sourceStore;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DeidentifyFhirStoreRequest *)object
                    sourceStore:(NSString *)sourceStore {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"sourceStore" ];
  NSString *pathURITemplate = @"v1/{+sourceStore}:deidentify";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.sourceStore = sourceStore;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.deidentify";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ExportResourcesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:export";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.export";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCapabilities

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/fhir/metadata";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCapabilities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.capabilities";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCreate

@dynamic parent, type;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                           type:(NSString *)type {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"parent", @"type"
  ];
  NSString *pathURITemplate = @"v1/{+parent}/fhir/{+type}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.type = type;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirExecuteBundle

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/fhir";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirExecuteBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirHistory

@dynamic xAt, xCount, xPageToken, xSince, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"xAt" : @"_at",
    @"xCount" : @"_count",
    @"xPageToken" : @"_page_token",
    @"xSince" : @"_since"
  };
  return map;
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/_history";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirHistory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.history";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatientEverything

@dynamic xCount, xPageToken, end, name, start;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"xCount" : @"_count",
    @"xPageToken" : @"_page_token"
  };
  return map;
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/$everything";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatientEverything *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirRead

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirRead *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.read";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirResourcePurge

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/$purge";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirResourcePurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirSearch

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SearchResourcesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/fhir/_search";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.search";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.update";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirVread

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirVread *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.vread";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresImport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ImportResourcesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:import";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.import";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/fhirStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListFhirStoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_FhirStore *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSearch

@dynamic parent, resourceType;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/fhir";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.search";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Dataset class];
  query.loggingName = @"healthcare.projects.locations.datasets.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresCreate

@dynamic hl7V2StoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Hl7V2Store *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/hl7V2Stores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/hl7V2Stores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListHl7V2StoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_CreateMessageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/messages";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesIngest

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_IngestMessageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/messages:ingest";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesIngest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_IngestMessageResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/messages";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListMessagesResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Message *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Hl7V2Store *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasets";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListDatasetsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.operations.cancel";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.operations.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListOperationsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.operations.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Dataset *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Dataset class];
  query.loggingName = @"healthcare.projects.locations.datasets.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.testIamPermissions";
  return query;
}

@end
