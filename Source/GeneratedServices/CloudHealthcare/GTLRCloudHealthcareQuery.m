// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Healthcare API (healthcare/v1alpha2)
// Description:
//   Manage, store, and access healthcare data in Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/healthcare

#import "GTLRCloudHealthcareQuery.h"

#import "GTLRCloudHealthcareObjects.h"

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRCloudHealthcareViewFull                  = @"FULL";
NSString * const kGTLRCloudHealthcareViewMessageViewUnspecified = @"MESSAGE_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudHealthcareViewParsedOnly            = @"PARSED_ONLY";
NSString * const kGTLRCloudHealthcareViewRawOnly               = @"RAW_ONLY";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudHealthcareQuery

@dynamic fields;

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Annotation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/annotations";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Annotation class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.annotations.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.annotations.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Annotation class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.annotations.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/annotations";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListAnnotationsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.annotations.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Annotation *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresAnnotationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Annotation class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.annotations.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresCreate

@dynamic annotationStoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_AnnotationStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/annotationStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_AnnotationStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_AnnotationStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_GetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/annotationStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListAnnotationStoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_AnnotationStore *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_AnnotationStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsAnnotationStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.annotationStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsCreate

@dynamic datasetId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Dataset *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/datasets";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDeidentify

@dynamic sourceDataset;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DeidentifyDatasetRequest *)object
                  sourceDataset:(NSString *)sourceDataset {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"sourceDataset" ];
  NSString *pathURITemplate = @"v1alpha2/{+sourceDataset}:deidentify";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.sourceDataset = sourceDataset;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.deidentify";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresCreate

@dynamic dicomStoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DicomStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.searchForSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForStudies

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebSearchForStudies *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.searchForStudies";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStoreInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStoreInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.storeInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.metadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesRetrieveStudy

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesRetrieveStudy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.retrieveStudy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSearchForSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSearchForSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.searchForSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesDelete

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesFramesRendered

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesFramesRendered *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.frames.rendered";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesFramesRetrieveFrames

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesFramesRetrieveFrames *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.frames.retrieveFrames";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.metadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesRendered

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesRendered *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.rendered";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesRetrieveInstance

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesInstancesRetrieveInstance *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.retrieveInstance";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesMetadata

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.metadata";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesRetrieveSeries

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesRetrieveSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.retrieveSeries";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesSearchForInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithParent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesSeriesSearchForInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.searchForInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesStoreInstances

@dynamic dicomWebPath, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                   dicomWebPath:(NSString *)dicomWebPath {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"dicomWebPath", @"parent"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomWeb/{+dicomWebPath}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresDicomWebStudiesStoreInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.dicomWebPath = dicomWebPath;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.storeInstances";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ExportDicomDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}:export";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.export";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresImport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ImportDicomDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}:import";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.import";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/dicomStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListDicomStoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_DicomStore *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_DicomStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsDicomStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.dicomStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCapabilities

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/metadata";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCapabilities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.capabilities";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCreate

@dynamic fhirStoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_FhirStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhirStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ExportResourcesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}:export";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.export";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCapabilities

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/fhir/metadata";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCapabilities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.capabilities";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalDelete

@dynamic parent, type;

+ (instancetype)queryWithParent:(NSString *)parent
                           type:(NSString *)type {
  NSArray *pathParams = @[
    @"parent", @"type"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/{+type}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.type = type;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.conditionalDelete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalPatch

@dynamic parent, type;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                           type:(NSString *)type {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"parent", @"type"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/{+type}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.type = type;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.conditionalPatch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalUpdate

@dynamic parent, type;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                           type:(NSString *)type {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"parent", @"type"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/{+type}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirConditionalUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.type = type;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.conditionalUpdate";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCreate

@dynamic parent, type;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent
                           type:(NSString *)type {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"parent", @"type"
  ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/{+type}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.type = type;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirExecuteBundle

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirExecuteBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirHistory

@dynamic at, count, name, page, since;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/_history";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirHistory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.history";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirObservationLastn

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/Observation/$lastn";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirObservationLastn *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.Observation-lastn";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatientEverything

@dynamic end, name, start;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/$everything";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirPatientEverything *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirRead

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirRead *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.read";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirResourcePurge

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/$purge";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirResourcePurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirSearch

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SearchResourcesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhir/_search";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.search";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_HttpBody *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.update";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirVread

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresFhirVread *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_HttpBody class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.fhir.vread";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresImport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_ImportResourcesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}:import";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.import";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/fhirStores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListFhirStoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_FhirStore *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_FhirStore class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSecurityLabelsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSecurityLabelsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.securityLabels.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSecurityLabelsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSecurityLabelsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.securityLabels.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsFhirStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.fhirStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Dataset class];
  query.loggingName = @"healthcare.projects.locations.datasets.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresCreate

@dynamic hl7V2StoreId, parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Hl7V2Store *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/hl7V2Stores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:getIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/hl7V2Stores";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListHl7V2StoresResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_CreateMessageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/messages";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.create";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Empty class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.delete";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesIngest

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_IngestMessageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/messages:ingest";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesIngest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_IngestMessageResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/messages";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListMessagesResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Message *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresMessagesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Message class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.messages.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Hl7V2Store *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Hl7V2Store class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsHl7V2StoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.hl7V2Stores.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha2/{+parent}/datasets";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListDatasetsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Operation class];
  query.loggingName = @"healthcare.projects.locations.datasets.operations.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/operations";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListOperationsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.operations.list";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_Dataset *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Dataset class];
  query.loggingName = @"healthcare.projects.locations.datasets.patch";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:setIamPolicy";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_Policy class];
  query.loggingName = @"healthcare.projects.locations.datasets.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudHealthcare_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1alpha2/{+resource}:testIamPermissions";
  GTLRCloudHealthcareQuery_ProjectsLocationsDatasetsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudHealthcare_TestIamPermissionsResponse class];
  query.loggingName = @"healthcare.projects.locations.datasets.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}";
  GTLRCloudHealthcareQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_Location class];
  query.loggingName = @"healthcare.projects.locations.get";
  return query;
}

@end

@implementation GTLRCloudHealthcareQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha2/{+name}/locations";
  GTLRCloudHealthcareQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudHealthcare_ListLocationsResponse class];
  query.loggingName = @"healthcare.projects.locations.list";
  return query;
}

@end
