// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Fusion Tables API (fusiontables/v2)
// Description:
//   API for working with Fusion Tables data.
// Documentation:
//   https://developers.google.com/fusiontables

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRFusionTables_Bucket;
@class GTLRFusionTables_Column;
@class GTLRFusionTables_Column_BaseColumn;
@class GTLRFusionTables_LineStyle;
@class GTLRFusionTables_PointStyle;
@class GTLRFusionTables_PolygonStyle;
@class GTLRFusionTables_StyleFunction;
@class GTLRFusionTables_StyleFunction_Gradient;
@class GTLRFusionTables_StyleFunction_Gradient_Colors_Item;
@class GTLRFusionTables_StyleSetting;
@class GTLRFusionTables_Table;
@class GTLRFusionTables_Task;
@class GTLRFusionTables_Template;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Specifies the minimum and maximum values, the color, opacity, icon and
 *  weight of a bucket within a StyleSetting.
 */
@interface GTLRFusionTables_Bucket : GTLRObject

/** Color of line or the interior of a polygon in #RRGGBB format. */
@property(nonatomic, copy, nullable) NSString *color;

/** Icon name used for a point. */
@property(nonatomic, copy, nullable) NSString *icon;

/**
 *  Maximum value in the selected column for a row to be styled according to the
 *  bucket color, opacity, icon, or weight.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  Minimum value in the selected column for a row to be styled according to the
 *  bucket color, opacity, icon, or weight.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

/**
 *  Opacity of the color: 0.0 (transparent) to 1.0 (opaque).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *opacity;

/**
 *  Width of a line (in pixels).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *weight;

@end


/**
 *  Specifies the details of a column in a table.
 */
@interface GTLRFusionTables_Column : GTLRObject

/**
 *  Identifier of the base column. If present, this column is derived from the
 *  specified base column.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_Column_BaseColumn *baseColumn;

/**
 *  Identifier for the column.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *columnId;

/** JSON schema for interpreting JSON in this column. */
@property(nonatomic, copy, nullable) NSString *columnJsonSchema;

/** JSON object containing custom column properties. */
@property(nonatomic, copy, nullable) NSString *columnPropertiesJson;

/**
 *  Column description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Format pattern.
 *  Acceptable values are DT_DATE_MEDIUMe.g Dec 24, 2008 DT_DATE_SHORTfor
 *  example 12/24/08 DT_DATE_TIME_MEDIUMfor example Dec 24, 2008 8:30:45 PM
 *  DT_DATE_TIME_SHORTfor example 12/24/08 8:30 PM DT_DAY_MONTH_2_DIGIT_YEARfor
 *  example 24/12/08 DT_DAY_MONTH_2_DIGIT_YEAR_TIMEfor example 24/12/08 20:30
 *  DT_DAY_MONTH_2_DIGIT_YEAR_TIME_MERIDIANfor example 24/12/08 8:30 PM
 *  DT_DAY_MONTH_4_DIGIT_YEARfor example 24/12/2008
 *  DT_DAY_MONTH_4_DIGIT_YEAR_TIMEfor example 24/12/2008 20:30
 *  DT_DAY_MONTH_4_DIGIT_YEAR_TIME_MERIDIANfor example 24/12/2008 8:30 PM
 *  DT_ISO_YEAR_MONTH_DAYfor example 2008-12-24 DT_ISO_YEAR_MONTH_DAY_TIMEfor
 *  example 2008-12-24 20:30:45 DT_MONTH_DAY_4_DIGIT_YEARfor example 12/24/2008
 *  DT_TIME_LONGfor example 8:30:45 PM UTC-6 DT_TIME_MEDIUMfor example 8:30:45
 *  PM DT_TIME_SHORTfor example 8:30 PM DT_YEAR_ONLYfor example 2008
 *  HIGHLIGHT_UNTYPED_CELLSHighlight cell data that does not match the data type
 *  NONENo formatting (default) NUMBER_CURRENCYfor example $1234.56
 *  NUMBER_DEFAULTfor example 1,234.56 NUMBER_INTEGERfor example 1235
 *  NUMBER_NO_SEPARATORfor example 1234.56 NUMBER_PERCENTfor example 123,456%
 *  NUMBER_SCIENTIFICfor example 1E3 STRING_EIGHT_LINE_IMAGEDisplays thumbnail
 *  images as tall as eight lines of text STRING_FOUR_LINE_IMAGEDisplays
 *  thumbnail images as tall as four lines of text STRING_JSON_TEXTAllows
 *  editing of text as JSON in UI STRING_JSON_LISTAllows editing of text as a
 *  JSON list in UI STRING_LINKTreats cell as a link (must start with http:// or
 *  https://) STRING_ONE_LINE_IMAGEDisplays thumbnail images as tall as one line
 *  of text STRING_VIDEO_OR_MAPDisplay a video or map thumbnail
 */
@property(nonatomic, copy, nullable) NSString *formatPattern;

/**
 *  Column graph predicate.
 *  Used to map table to graph data model (subject,predicate,object)
 *  See W3C Graph-based Data Model.
 */
@property(nonatomic, copy, nullable) NSString *graphPredicate;

/**
 *  The kind of item this is. For a column, this is always fusiontables#column.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Name of the column. */
@property(nonatomic, copy, nullable) NSString *name;

/** Type of the column. */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  If true, data entered via the web application is validated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateData;

/**
 *  List of valid values used to validate data and supply a drop-down list of
 *  values in the web application.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *validValues;

@end


/**
 *  Identifier of the base column. If present, this column is derived from the
 *  specified base column.
 */
@interface GTLRFusionTables_Column_BaseColumn : GTLRObject

/**
 *  The id of the column in the base table from which this column is derived.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *columnId;

/**
 *  Offset to the entry in the list of base tables in the table definition.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tableIndex;

@end


/**
 *  Represents a list of columns in a table.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFusionTables_ColumnList : GTLRCollectionObject

/**
 *  List of all requested columns.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Column *> *items;

/**
 *  The kind of item this is. For a column list, this is always
 *  fusiontables#columnList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token used to access the next page of this result. No token is displayed if
 *  there are no more pages left.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of columns for the table.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Represents a Geometry object.
 */
@interface GTLRFusionTables_Geometry : GTLRObject

/**
 *  The list of geometries in this geometry collection.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *geometries;

/**
 *  geometry
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id geometry;

/** Type: A collection of geometries. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents an import request.
 */
@interface GTLRFusionTables_Import : GTLRObject

/**
 *  The kind of item this is. For an import, this is always fusiontables#import.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The number of rows received from the import request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numRowsReceived;

@end


/**
 *  Represents a line geometry.
 */
@interface GTLRFusionTables_Line : GTLRObject

/**
 *  The coordinates that define the line.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray<NSNumber *> *> *coordinates;

/** Type: A line geometry. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a LineStyle within a StyleSetting
 */
@interface GTLRFusionTables_LineStyle : GTLRObject

/** Color of the line in #RRGGBB format. */
@property(nonatomic, copy, nullable) NSString *strokeColor;

/**
 *  Column-value, gradient or buckets styler that is used to determine the line
 *  color and opacity.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *strokeColorStyler;

/**
 *  Opacity of the line : 0.0 (transparent) to 1.0 (opaque).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *strokeOpacity;

/**
 *  Width of the line in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *strokeWeight;

/**
 *  Column-value or bucket styler that is used to determine the width of the
 *  line.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *strokeWeightStyler;

@end


/**
 *  Represents a point object.
 */
@interface GTLRFusionTables_Point : GTLRObject

/**
 *  The coordinates that define the point.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *coordinates;

/** Point: A point geometry. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a PointStyle within a StyleSetting
 */
@interface GTLRFusionTables_PointStyle : GTLRObject

/**
 *  Name of the icon. Use values defined in
 *  http://www.google.com/fusiontables/DataSource?dsrcid=308519
 */
@property(nonatomic, copy, nullable) NSString *iconName;

/** Column or a bucket value from which the icon name is to be determined. */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *iconStyler;

@end


/**
 *  Represents a polygon object.
 */
@interface GTLRFusionTables_Polygon : GTLRObject

/**
 *  The coordinates that define the polygon.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray<NSArray<NSNumber *> *> *> *coordinates;

/** Type: A polygon geometry. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a PolygonStyle within a StyleSetting
 */
@interface GTLRFusionTables_PolygonStyle : GTLRObject

/** Color of the interior of the polygon in #RRGGBB format. */
@property(nonatomic, copy, nullable) NSString *fillColor;

/**
 *  Column-value, gradient, or bucket styler that is used to determine the
 *  interior color and opacity of the polygon.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *fillColorStyler;

/**
 *  Opacity of the interior of the polygon: 0.0 (transparent) to 1.0 (opaque).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fillOpacity;

/** Color of the polygon border in #RRGGBB format. */
@property(nonatomic, copy, nullable) NSString *strokeColor;

/**
 *  Column-value, gradient or buckets styler that is used to determine the
 *  border color and opacity.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *strokeColorStyler;

/**
 *  Opacity of the polygon border: 0.0 (transparent) to 1.0 (opaque).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *strokeOpacity;

/**
 *  Width of the polyon border in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *strokeWeight;

/**
 *  Column-value or bucket styler that is used to determine the width of the
 *  polygon border.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction *strokeWeightStyler;

@end


/**
 *  Represents a response to a SQL statement.
 */
@interface GTLRFusionTables_Sqlresponse : GTLRObject

/** Columns in the table. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *columns;

/**
 *  The kind of item this is. For responses to SQL queries, this is always
 *  fusiontables#sqlresponse.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The rows in the table. For each cell we print out whatever cell value (e.g.,
 *  numeric, string) exists. Thus it is important that each cell contains only
 *  one value.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray *> *rows;

@end


/**
 *  Represents a StyleFunction within a StyleSetting
 */
@interface GTLRFusionTables_StyleFunction : GTLRObject

/**
 *  Bucket function that assigns a style based on the range a column value falls
 *  into.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Bucket *> *buckets;

/** Name of the column whose value is used in the style. */
@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  Gradient function that interpolates a range of colors based on column value.
 */
@property(nonatomic, strong, nullable) GTLRFusionTables_StyleFunction_Gradient *gradient;

/**
 *  Stylers can be one of three kinds: "fusiontables#fromColumn if the column
 *  value is to be used as is, i.e., the column values can have colors in
 *  #RRGGBBAA format or integer line widths or icon names; fusiontables#gradient
 *  if the styling of the row is to be based on applying the gradient function
 *  on the column value; or fusiontables#buckets if the styling is to based on
 *  the bucket into which the the column value falls.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Gradient function that interpolates a range of colors based on column value.
 */
@interface GTLRFusionTables_StyleFunction_Gradient : GTLRObject

/** Array with two or more colors. */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_StyleFunction_Gradient_Colors_Item *> *colors;

/**
 *  Higher-end of the interpolation range: rows with this value will be assigned
 *  to colors[n-1].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  Lower-end of the interpolation range: rows with this value will be assigned
 *  to colors[0].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

@end


/**
 *  GTLRFusionTables_StyleFunction_Gradient_Colors_Item
 */
@interface GTLRFusionTables_StyleFunction_Gradient_Colors_Item : GTLRObject

/** Color in #RRGGBB format. */
@property(nonatomic, copy, nullable) NSString *color;

/**
 *  Opacity of the color: 0.0 (transparent) to 1.0 (opaque).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *opacity;

@end


/**
 *  Represents a complete StyleSettings object. The primary key is a combination
 *  of the tableId and a styleId.
 */
@interface GTLRFusionTables_StyleSetting : GTLRObject

/**
 *  The kind of item this is. A StyleSetting contains the style definitions for
 *  points, lines, and polygons in a table. Since a table can have any one or
 *  all of them, a style definition can have point, line and polygon style
 *  definitions.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Style definition for points in the table. */
@property(nonatomic, strong, nullable) GTLRFusionTables_PointStyle *markerOptions;

/** Optional name for the style setting. */
@property(nonatomic, copy, nullable) NSString *name;

/** Style definition for polygons in the table. */
@property(nonatomic, strong, nullable) GTLRFusionTables_PolygonStyle *polygonOptions;

/** Style definition for lines in the table. */
@property(nonatomic, strong, nullable) GTLRFusionTables_LineStyle *polylineOptions;

/**
 *  Identifier for the style setting (unique only within tables).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *styleId;

/** Identifier for the table. */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Represents a list of styles for a given table.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFusionTables_StyleSettingList : GTLRCollectionObject

/**
 *  All requested style settings.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_StyleSetting *> *items;

/**
 *  The kind of item this is. For a style list, this is always
 *  fusiontables#styleSettingList .
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token used to access the next page of this result. No token is displayed if
 *  there are no more styles left.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of styles for the table.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Represents a table.
 */
@interface GTLRFusionTables_Table : GTLRObject

/** Attribution assigned to the table. */
@property(nonatomic, copy, nullable) NSString *attribution;

/** Optional link for attribution. */
@property(nonatomic, copy, nullable) NSString *attributionLink;

/** Base table identifier if this table is a view or merged table. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *baseTableIds;

/** Default JSON schema for validating all JSON column properties. */
@property(nonatomic, copy, nullable) NSString *columnPropertiesJsonSchema;

/** Columns in the table. */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Column *> *columns;

/**
 *  Description assigned to the table.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Variable for whether table is exportable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isExportable;

/**
 *  The kind of item this is. For a table, this is always fusiontables#table.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Name assigned to a table. */
@property(nonatomic, copy, nullable) NSString *name;

/** SQL that encodes the table definition for derived tables. */
@property(nonatomic, copy, nullable) NSString *sql;

/** Encrypted unique alphanumeric identifier for the table. */
@property(nonatomic, copy, nullable) NSString *tableId;

/** JSON object containing custom table properties. */
@property(nonatomic, copy, nullable) NSString *tablePropertiesJson;

/** JSON schema for validating the JSON table properties. */
@property(nonatomic, copy, nullable) NSString *tablePropertiesJsonSchema;

@end


/**
 *  Represents a list of tables.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFusionTables_TableList : GTLRCollectionObject

/**
 *  List of all requested tables.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Table *> *items;

/**
 *  The kind of item this is. For table list, this is always
 *  fusiontables#tableList.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token used to access the next page of this result. No token is displayed if
 *  there are no more pages left.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A background task on a table, initiated for time- or resource-consuming
 *  operations such as changing column types or deleting all rows.
 */
@interface GTLRFusionTables_Task : GTLRObject

/** Type of the resource. This is always "fusiontables#task". */
@property(nonatomic, copy, nullable) NSString *kind;

/** Task percentage completion. */
@property(nonatomic, copy, nullable) NSString *progress;

/**
 *  false while the table is busy with some other task. true if this background
 *  task is currently running.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *started;

/**
 *  Identifier for the task.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *taskId;

/** Type of background task. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a list of tasks for a table.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFusionTables_TaskList : GTLRCollectionObject

/**
 *  List of all requested tasks.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Task *> *items;

/** Type of the resource. This is always "fusiontables#taskList". */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token used to access the next page of this result. No token is displayed if
 *  there are no more pages left.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of tasks for the table.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Represents the contents of InfoWindow templates.
 */
@interface GTLRFusionTables_Template : GTLRObject

/**
 *  List of columns from which the template is to be automatically constructed.
 *  Only one of body or automaticColumns can be specified.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *automaticColumnNames;

/**
 *  Body of the template. It contains HTML with {column_name} to insert values
 *  from a particular column. The body is sanitized to remove certain tags,
 *  e.g., script. Only one of body or automaticColumns can be specified.
 */
@property(nonatomic, copy, nullable) NSString *body;

/**
 *  The kind of item this is. For a template, this is always
 *  fusiontables#template.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Optional name assigned to a template. */
@property(nonatomic, copy, nullable) NSString *name;

/** Identifier for the table for which the template is defined. */
@property(nonatomic, copy, nullable) NSString *tableId;

/**
 *  Identifier for the template, unique within the context of a particular
 *  table.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *templateId;

@end


/**
 *  Represents a list of templates for a given table.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFusionTables_TemplateList : GTLRCollectionObject

/**
 *  List of all requested templates.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFusionTables_Template *> *items;

/**
 *  The kind of item this is. For a template list, this is always
 *  fusiontables#templateList .
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Token used to access the next page of this result. No token is displayed if
 *  there are no more pages left.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Total number of templates for the table.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
