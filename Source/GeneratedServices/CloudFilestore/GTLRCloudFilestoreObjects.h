// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Filestore API (file/v1)
// Description:
//   The Cloud Filestore API is used for creating and managing cloud file
//   servers.
// Documentation:
//   https://cloud.google.com/filestore/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudFilestore_Attributes;
@class GTLRCloudFilestore_Attributes_AttributeMap;
@class GTLRCloudFilestore_AttributeValue;
@class GTLRCloudFilestore_Distribution;
@class GTLRCloudFilestore_Exemplar;
@class GTLRCloudFilestore_Exemplar_Attachments_Item;
@class GTLRCloudFilestore_ExplicitBuckets;
@class GTLRCloudFilestore_ExponentialBuckets;
@class GTLRCloudFilestore_FileShareConfig;
@class GTLRCloudFilestore_GoogleApiServicecontrolV1Operation;
@class GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Labels;
@class GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_UserLabels;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_Labels;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenancePolicyNames;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenanceSchedules;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_ProducerMetadata;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_SoftwareVersions;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion;
@class GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata;
@class GTLRCloudFilestore_HttpRequest;
@class GTLRCloudFilestore_Instance;
@class GTLRCloudFilestore_Instance_Labels;
@class GTLRCloudFilestore_LinearBuckets;
@class GTLRCloudFilestore_Location;
@class GTLRCloudFilestore_Location_Labels;
@class GTLRCloudFilestore_Location_Metadata;
@class GTLRCloudFilestore_LogEntry;
@class GTLRCloudFilestore_LogEntry_Labels;
@class GTLRCloudFilestore_LogEntry_ProtoPayload;
@class GTLRCloudFilestore_LogEntry_StructPayload;
@class GTLRCloudFilestore_LogEntryOperation;
@class GTLRCloudFilestore_LogEntrySourceLocation;
@class GTLRCloudFilestore_MetricValue;
@class GTLRCloudFilestore_MetricValue_Labels;
@class GTLRCloudFilestore_MetricValueSet;
@class GTLRCloudFilestore_Money;
@class GTLRCloudFilestore_NetworkConfig;
@class GTLRCloudFilestore_Operation;
@class GTLRCloudFilestore_Operation_Metadata;
@class GTLRCloudFilestore_Operation_Response;
@class GTLRCloudFilestore_QuotaProperties;
@class GTLRCloudFilestore_ReportRequest;
@class GTLRCloudFilestore_ResourceInfo;
@class GTLRCloudFilestore_Status;
@class GTLRCloudFilestore_Status_Details_Item;
@class GTLRCloudFilestore_TraceSpan;
@class GTLRCloudFilestore_TruncatableString;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_GoogleApiServicecontrolV1Operation.importance

/**
 *  In addition to the behavior described in HIGH, DEBUG enables
 *  additional validation logic that is only useful during the onboarding
 *  process. This is only available to Google internal services and
 *  the service must be whitelisted by chemist-dev\@google.com in order
 *  to use this level.
 *
 *  Value: "DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_Debug;
/**
 *  The API implementation doesn't cache and aggregate the data.
 *  If the method returns successfully, it's guaranteed that the data has
 *  been persisted in durable storage.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_High;
/**
 *  The API implementation may cache and aggregate the data.
 *  The data may be lost when rare and unexpected system failures occur.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_Low;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance.state

/**
 *  Instance is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Creating;
/**
 *  Instance is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Deleting;
/**
 *  Instance encountered an error and is in indeterministic state.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Error;
/**
 *  Instance has been created and is ready to use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Ready;
/**
 *  Instance is unheathy and under repair.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Repairing;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_StateUnspecified;
/**
 *  Instance is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Updating;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_Instance.state

/**
 *  The instance is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_Creating;
/**
 *  The instance is shutting down.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_Deleting;
/**
 *  The instance is experiencing an issue and might be unusable. You can get
 *  further details from the `statusMessage` field of the `Instance`
 *  resource.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_Error;
/**
 *  The instance is available for use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_Ready;
/**
 *  Work is being done on the instance. You can get further details from the
 *  `statusMessage` field of the `Instance` resource.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_Repairing;
/**
 *  State not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_Instance.tier

/**
 *  BASIC instances offer a maximum capacity of 63.9 TB.
 *  BASIC_HDD is an alias for STANDARD Tier, offering economical
 *  performance backed by HDD.
 *
 *  Value: "BASIC_HDD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_BasicHdd;
/**
 *  BASIC instances offer a maximum capacity of 63.9 TB.
 *  BASIC_SSD is an alias for PREMIUM Tier, and offers improved
 *  performance backed by SSD.
 *
 *  Value: "BASIC_SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_BasicSsd;
/**
 *  HIGH_SCALE instances offer expanded capacity and performance scaling
 *  capabilities.
 *
 *  Value: "HIGH_SCALE_SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_HighScaleSsd;
/**
 *  PREMIUM tier. BASIC_SSD is the preferred term for this tier.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_Premium;
/**
 *  STANDARD tier. BASIC_HDD is the preferred term for this tier.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_Standard;
/**
 *  Not set.
 *
 *  Value: "TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_Instance_Tier_TierUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_LogEntry.severity

/**
 *  (700) A person must take an action immediately.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Alert;
/**
 *  (600) Critical events cause more severe problems or outages.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Critical;
/**
 *  (100) Debug or trace information.
 *
 *  Value: "DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Debug;
/**
 *  (0) The log entry has no assigned severity level.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Default;
/**
 *  (800) One or more systems are unusable.
 *
 *  Value: "EMERGENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Emergency;
/**
 *  (500) Error events are likely to cause problems.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Error;
/**
 *  (200) Routine information, such as ongoing status or performance.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Info;
/**
 *  (300) Normal but significant events, such as start up, shut down, or
 *  a configuration change.
 *
 *  Value: "NOTICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Notice;
/**
 *  (400) Warning events might cause problems.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_LogEntry_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_NetworkConfig.modes

/** Value: "ADDRESS_MODE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_NetworkConfig_Modes_AddressModeUnspecified;
/** Value: "MODE_IPV4" */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_NetworkConfig_Modes_ModeIpv4;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_QuotaProperties.quotaMode

/**
 *  Decreases available quota by the cost specified for the operation.
 *  If cost is higher than available quota, operation fails and returns
 *  error.
 *
 *  Value: "ACQUIRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_QuotaProperties_QuotaMode_Acquire;
/**
 *  Decreases available quota by the cost specified for the operation.
 *  If cost is higher than available quota, operation does not fail and
 *  available quota goes down to zero but it returns error.
 *
 *  Value: "ACQUIRE_BEST_EFFORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_QuotaProperties_QuotaMode_AcquireBestEffort;
/**
 *  Does not change any available quota. Only checks if there is enough
 *  quota.
 *  No lock is placed on the checked tokens neither.
 *
 *  Value: "CHECK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_QuotaProperties_QuotaMode_Check;
/**
 *  Increases available quota by the operation cost specified for the
 *  operation.
 *
 *  Value: "RELEASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_QuotaProperties_QuotaMode_Release;

// ----------------------------------------------------------------------------
// GTLRCloudFilestore_TraceSpan.spanKind

/**
 *  Indicates that the span covers the client-side wrapper around an RPC or
 *  other remote request.
 *
 *  Value: "CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_Client;
/**
 *  Indicates that the span describes consumer receiving a message from a
 *  broker. Unlike client and server, there is no direct critical path
 *  latency relationship between producer and consumer spans (e.g. receiving
 *  a message from a pubsub service subscription).
 *
 *  Value: "CONSUMER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_Consumer;
/**
 *  Indicates that the span is used internally. Default value.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_Internal;
/**
 *  Indicates that the span describes producer sending a message to a broker.
 *  Unlike client and server, there is no direct critical path latency
 *  relationship between producer and consumer spans (e.g. publishing a
 *  message to a pubsub service).
 *
 *  Value: "PRODUCER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_Producer;
/**
 *  Indicates that the span covers server-side handling of an RPC or other
 *  remote network request.
 *
 *  Value: "SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_Server;
/**
 *  Unspecified. Do NOT use as default.
 *  Implementations MAY assume SpanKind.INTERNAL to be default.
 *
 *  Value: "SPAN_KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFilestore_TraceSpan_SpanKind_SpanKindUnspecified;

/**
 *  A set of attributes, each in the format `[KEY]:[VALUE]`.
 */
@interface GTLRCloudFilestore_Attributes : GTLRObject

/**
 *  The set of attributes. Each attribute's key can be up to 128 bytes
 *  long. The value can be a string up to 256 bytes, a signed 64-bit integer,
 *  or the Boolean values `true` and `false`. For example:
 *  "/instance_id": "my-instance"
 *  "/http/user_agent": ""
 *  "/http/request_bytes": 300
 *  "abc.com/myattribute": true
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Attributes_AttributeMap *attributeMap;

/**
 *  The number of attributes that were discarded. Attributes can be discarded
 *  because their keys are too long or because there are too many attributes.
 *  If this value is 0 then all attributes are valid.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *droppedAttributesCount;

@end


/**
 *  The set of attributes. Each attribute's key can be up to 128 bytes
 *  long. The value can be a string up to 256 bytes, a signed 64-bit integer,
 *  or the Boolean values `true` and `false`. For example:
 *  "/instance_id": "my-instance"
 *  "/http/user_agent": ""
 *  "/http/request_bytes": 300
 *  "abc.com/myattribute": true
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudFilestore_AttributeValue. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Attributes_AttributeMap : GTLRObject
@end


/**
 *  The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.
 */
@interface GTLRCloudFilestore_AttributeValue : GTLRObject

/**
 *  A Boolean value represented by `true` or `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/**
 *  A 64-bit signed integer.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intValue;

/** A string up to 256 bytes long. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_TruncatableString *stringValue;

@end


/**
 *  Message for reporting billing requests through Eventstream.
 */
@interface GTLRCloudFilestore_BillingView : GTLRObject

/**
 *  Billing requests to be reported for an [Eventstream
 *  resource](http://google3/cloud/eventstream/v2/resource_event.proto).
 *  Each request contains billing operations to be reported under a service
 *  name. See go/billing-view-construction for documentation on constructing
 *  billing view report requests.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_ReportRequest *> *reportRequests;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRCloudFilestore_CancelOperationRequest : GTLRObject
@end


/**
 *  Distribution represents a frequency distribution of double-valued sample
 *  points. It contains the size of the population of sample points plus
 *  additional optional information:
 *  - the arithmetic mean of the samples
 *  - the minimum and maximum of the samples
 *  - the sum-squared-deviation of the samples, used to compute variance
 *  - a histogram of the values of the sample points
 */
@interface GTLRCloudFilestore_Distribution : GTLRObject

/**
 *  The number of samples in each histogram bucket. `bucket_counts` are
 *  optional. If present, they must sum to the `count` value.
 *  The buckets are defined below in `bucket_option`. There are N buckets.
 *  `bucket_counts[0]` is the number of samples in the underflow bucket.
 *  `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
 *  in each of the finite buckets. And `bucket_counts[N] is the number
 *  of samples in the overflow bucket. See the comments of `bucket_option`
 *  below for more details.
 *  Any suffix of trailing zeros may be omitted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bucketCounts;

/**
 *  The total number of samples in the distribution. Must be >= 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Example points. Must be in increasing order of `value` field. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Exemplar *> *exemplars;

/** Buckets with arbitrary user-provided width. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_ExplicitBuckets *explicitBuckets;

/** Buckets with exponentially growing width. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_ExponentialBuckets *exponentialBuckets;

/** Buckets with constant width. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LinearBuckets *linearBuckets;

/**
 *  The maximum of the population of values. Ignored if `count` is zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  The arithmetic mean of the samples in the distribution. If `count` is
 *  zero then this field must be zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mean;

/**
 *  The minimum of the population of values. Ignored if `count` is zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

/**
 *  The sum of squared deviations from the mean:
 *  Sum[i=1..count]((x_i - mean)^2)
 *  where each x_i is a sample values. If `count` is zero then this field
 *  must be zero, otherwise validation of the request fails.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sumOfSquaredDeviation;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRCloudFilestore_Empty : GTLRObject
@end


/**
 *  Exemplars are example points that may be used to annotate aggregated
 *  distribution values. They are metadata that gives information about a
 *  particular value added to a Distribution bucket, such as a trace ID that
 *  was active when a value was added. They may contain further information,
 *  such as a example values and timestamps, origin, etc.
 */
@interface GTLRCloudFilestore_Exemplar : GTLRObject

/**
 *  Contextual information about the example value. Examples are:
 *  Trace: type.googleapis.com/google.monitoring.v3.SpanContext
 *  Literal string: type.googleapis.com/google.protobuf.StringValue
 *  Labels dropped during aggregation:
 *  type.googleapis.com/google.monitoring.v3.DroppedLabels
 *  There may be only a single attachment of any given message type in a
 *  single exemplar, and this is enforced by the system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Exemplar_Attachments_Item *> *attachments;

/** The observation (sampling) time of the above value. */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Value of the exemplar point. This value determines to which bucket the
 *  exemplar belongs.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRCloudFilestore_Exemplar_Attachments_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Exemplar_Attachments_Item : GTLRObject
@end


/**
 *  Describing buckets with arbitrary user-provided width.
 */
@interface GTLRCloudFilestore_ExplicitBuckets : GTLRObject

/**
 *  'bound' is a list of strictly increasing boundaries between
 *  buckets. Note that a list of length N-1 defines N buckets because
 *  of fenceposting. See comments on `bucket_options` for details.
 *  The i'th finite bucket covers the interval
 *  [bound[i-1], bound[i])
 *  where i ranges from 1 to bound_size() - 1. Note that there are no
 *  finite buckets at all if 'bound' only contains a single element; in
 *  that special case the single bound defines the boundary between the
 *  underflow and overflow buckets.
 *  bucket number lower bound upper bound
 *  i == 0 (underflow) -inf bound[i]
 *  0 < i < bound_size() bound[i-1] bound[i]
 *  i == bound_size() (overflow) bound[i-1] +inf
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bounds;

@end


/**
 *  Describing buckets with exponentially growing width.
 */
@interface GTLRCloudFilestore_ExponentialBuckets : GTLRObject

/**
 *  The i'th exponential bucket covers the interval
 *  [scale * growth_factor^(i-1), scale * growth_factor^i)
 *  where i ranges from 1 to num_finite_buckets inclusive.
 *  Must be larger than 1.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *growthFactor;

/**
 *  The number of finite buckets. With the underflow and overflow buckets,
 *  the total number of buckets is `num_finite_buckets` + 2.
 *  See comments on `bucket_options` for details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  The i'th exponential bucket covers the interval
 *  [scale * growth_factor^(i-1), scale * growth_factor^i)
 *  where i ranges from 1 to num_finite_buckets inclusive.
 *  Must be > 0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scale;

@end


/**
 *  File share configuration for the instance.
 */
@interface GTLRCloudFilestore_FileShareConfig : GTLRObject

/**
 *  File share capacity in gigabytes (GB).
 *  Cloud Filestore defines 1 GB as 1024^3 bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacityGb;

/** The name of the file share (must be 16 characters or less). */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents information regarding an operation.
 */
@interface GTLRCloudFilestore_GoogleApiServicecontrolV1Operation : GTLRObject

/**
 *  Identity of the consumer who is using the service.
 *  This field should be filled in for the operations initiated by a
 *  consumer, but not for service-initiated operations that are
 *  not related to a specific consumer.
 *  - This can be in one of the following formats:
 *  - project:PROJECT_ID,
 *  - project`_`number:PROJECT_NUMBER,
 *  - projects/PROJECT_ID or PROJECT_NUMBER,
 *  - folders/FOLDER_NUMBER,
 *  - organizations/ORGANIZATION_NUMBER,
 *  - api`_`key:API_KEY.
 */
@property(nonatomic, copy, nullable) NSString *consumerId;

/**
 *  End time of the operation.
 *  Required when the operation is used in ServiceController.Report,
 *  but optional when the operation is used in ServiceController.Check.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  DO NOT USE. This is an experimental field.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_Debug
 *        In addition to the behavior described in HIGH, DEBUG enables
 *        additional validation logic that is only useful during the onboarding
 *        process. This is only available to Google internal services and
 *        the service must be whitelisted by chemist-dev\@google.com in order
 *        to use this level. (Value: "DEBUG")
 *    @arg @c kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_High
 *        The API implementation doesn't cache and aggregate the data.
 *        If the method returns successfully, it's guaranteed that the data has
 *        been persisted in durable storage. (Value: "HIGH")
 *    @arg @c kGTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Importance_Low
 *        The API implementation may cache and aggregate the data.
 *        The data may be lost when rare and unexpected system failures occur.
 *        (Value: "LOW")
 */
@property(nonatomic, copy, nullable) NSString *importance;

/**
 *  Labels describing the operation. Only the following labels are allowed:
 *  - Labels describing monitored resources as defined in
 *  the service configuration.
 *  - Default labels of metric values. When specified, labels defined in the
 *  metric value override these default.
 *  - The following labels defined by Google Cloud Platform:
 *  - `cloud.googleapis.com/location` describing the location where the
 *  operation happened,
 *  - `servicecontrol.googleapis.com/user_agent` describing the user agent
 *  of the API request,
 *  - `servicecontrol.googleapis.com/service_agent` describing the service
 *  used to handle the API request (e.g. ESP),
 *  - `servicecontrol.googleapis.com/platform` describing the platform
 *  where the API is served, such as App Engine, Compute Engine, or
 *  Kubernetes Engine.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Labels *labels;

/** Represents information to be logged. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_LogEntry *> *logEntries;

/**
 *  Represents information about this operation. Each MetricValueSet
 *  corresponds to a metric defined in the service configuration.
 *  The data type used in the MetricValueSet must agree with
 *  the data type specified in the metric definition.
 *  Within a single operation, it is not allowed to have more than one
 *  MetricValue instances that have the same metric names and identical
 *  label value combinations. If a request has such duplicated MetricValue
 *  instances, the entire request is rejected with
 *  an invalid argument error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_MetricValueSet *> *metricValueSets;

/**
 *  Identity of the operation. This must be unique within the scope of the
 *  service that generated the operation. If the service calls
 *  Check() and Report() on the same operation, the two calls should carry
 *  the same id.
 *  UUID version 4 is recommended, though not required.
 *  In scenarios where an operation is computed from existing information
 *  and an idempotent id is desirable for deduplication purpose, UUID version 5
 *  is recommended. See RFC 4122 for details.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/** Fully qualified name of the operation. Reserved for future use. */
@property(nonatomic, copy, nullable) NSString *operationName;

/**
 *  Represents the properties needed for quota check. Applicable only if this
 *  operation is for a quota check request. If this is not specified, no quota
 *  check will be performed.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_QuotaProperties *quotaProperties;

/**
 *  The resources that are involved in the operation.
 *  The maximum supported number of entries in this field is 100.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_ResourceInfo *> *resources;

/** Required. Start time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Unimplemented. A list of Cloud Trace spans. The span names shall contain
 *  the id of the destination project which can be either the produce or the
 *  consumer project.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_TraceSpan *> *traceSpans;

/**
 *  User defined labels for the resource that this operation is associated
 *  with. Only a combination of 1000 user labels per consumer project are
 *  allowed.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_UserLabels *userLabels;

@end


/**
 *  Labels describing the operation. Only the following labels are allowed:
 *  - Labels describing monitored resources as defined in
 *  the service configuration.
 *  - Default labels of metric values. When specified, labels defined in the
 *  metric value override these default.
 *  - The following labels defined by Google Cloud Platform:
 *  - `cloud.googleapis.com/location` describing the location where the
 *  operation happened,
 *  - `servicecontrol.googleapis.com/user_agent` describing the user agent
 *  of the API request,
 *  - `servicecontrol.googleapis.com/service_agent` describing the service
 *  used to handle the API request (e.g. ESP),
 *  - `servicecontrol.googleapis.com/platform` describing the platform
 *  where the API is served, such as App Engine, Compute Engine, or
 *  Kubernetes Engine.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_Labels : GTLRObject
@end


/**
 *  User defined labels for the resource that this operation is associated
 *  with. Only a combination of 1000 user labels per consumer project are
 *  allowed.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleApiServicecontrolV1Operation_UserLabels : GTLRObject
@end


/**
 *  GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance : GTLRObject

/**
 *  consumer_defined_name is the name that is set by the consumer. On the other
 *  hand Name field represents system-assigned id of an instance so consumers
 *  are not necessarily aware of it.
 *  consumer_defined_name is used for notification/UI purposes for consumer to
 *  recognize their instances.
 */
@property(nonatomic, copy, nullable) NSString *consumerDefinedName;

/** Output only. Timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Resource labels to represent user provided metadata. Each label
 *  is a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_Labels *labels;

/**
 *  The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the referenced policy must define the same policy
 *  type. For complete details of MaintenancePolicy, please refer to
 *  go/cloud-saas-mw-ug.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenancePolicyNames *maintenancePolicyNames;

/**
 *  The MaintenanceSchedule contains the scheduling information of published
 *  maintenance schedule.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenanceSchedules *maintenanceSchedules;

/** Optional. The MaintenanceSettings associated with instance. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings *maintenanceSettings;

/**
 *  Unique name of the resource. It uses the form:
 *  `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Custom string attributes used primarily to expose
 *  producer-specific information in monitoring dashboards.
 *  See go/get-instance-metadata.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_ProducerMetadata *producerMetadata;

/**
 *  Output only. The list of data plane resources provisioned for this
 *  instance, e.g. compute VMs. See go/get-instance-metadata.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource *> *provisionedResources;

/**
 *  Link to the SLM instance template. Only populated when updating SLM
 *  instances via SSA's Actuation service adaptor.
 *  Service producers with custom control plane (e.g. Cloud SQL) doesn't
 *  need to populate this field. Instead they should use software_versions.
 */
@property(nonatomic, copy, nullable) NSString *slmInstanceTemplate;

/**
 *  Output only. SLO metadata for instance classification in the
 *  Standardized dataplane SLO platform.
 *  See go/cloud-ssa-standard-slo for feature description.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata *sloMetadata;

/**
 *  Software versions that are used to deploy this instance. This can be
 *  mutated by rollout services.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_SoftwareVersions *softwareVersions;

/**
 *  Output only. Current lifecycle state of the resource (e.g. if it's being
 *  created or ready to use).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Creating
 *        Instance is being created. (Value: "CREATING")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Deleting
 *        Instance is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Error
 *        Instance encountered an error and is in indeterministic state. (Value:
 *        "ERROR")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Ready
 *        Instance has been created and is ready to use. (Value: "READY")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Repairing
 *        Instance is unheathy and under repair. (Value: "REPAIRING")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_State_Updating
 *        Instance is being updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. ID of the associated GCP tenant project.
 *  See go/get-instance-metadata.
 */
@property(nonatomic, copy, nullable) NSString *tenantProjectId;

/** Output only. Timestamp when the resource was last modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Resource labels to represent user provided metadata. Each label
 *  is a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_Labels : GTLRObject
@end


/**
 *  The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the referenced policy must define the same policy
 *  type. For complete details of MaintenancePolicy, please refer to
 *  go/cloud-saas-mw-ug.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenancePolicyNames : GTLRObject
@end


/**
 *  The MaintenanceSchedule contains the scheduling information of published
 *  maintenance schedule.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_MaintenanceSchedules : GTLRObject
@end


/**
 *  Output only. Custom string attributes used primarily to expose
 *  producer-specific information in monitoring dashboards.
 *  See go/get-instance-metadata.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_ProducerMetadata : GTLRObject
@end


/**
 *  Software versions that are used to deploy this instance. This can be
 *  mutated by rollout services.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1Instance_SoftwareVersions : GTLRObject
@end


/**
 *  Maintenance schedule which is exposed to customer and potentially end user,
 *  indicating published upcoming future maintenance schedule
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule : GTLRObject

/**
 *  Can this scheduled update be rescheduled?
 *  By default, it's true and API needs to do explicitly check whether it's
 *  set, if it's set as false explicitly, it's false
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canReschedule;

/** The scheduled end time for the maintenance. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The rollout management policy this maintenance schedule is associated
 *  with. When doing reschedule update request, the reschedule should be
 *  against this given policy.
 */
@property(nonatomic, copy, nullable) NSString *rolloutManagementPolicy;

/** The scheduled start time for the maintenance. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Maintenance settings associated with instance. Allows service producers and
 *  end users to assign settings that controls maintenance on this instance.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings : GTLRObject

/**
 *  Optional. Exclude instance from maintenance. When true, rollout service will
 *  not
 *  attempt maintenance on the instance. Rollout service will include the
 *  instance in reported rollout progress as not attempted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclude;

@end


/**
 *  Node information for custom per-node SLO implementations.
 *  SSA does not support per-node SLO, but producers can populate per-node
 *  information in SloMetadata for custom precomputations.
 *  SSA Eligibility Exporter will emit per-node metric based on this
 *  information.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata : GTLRObject

/**
 *  By default node is eligible if instance is eligible.
 *  But individual node might be excluded from SLO by adding entry here.
 *  For semantic see SloMetadata.exclusions.
 *  If both instance and node level exclusions are present for time period,
 *  the node level's reason will be reported by Eligibility Exporter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion *> *exclusions;

/** The location of the node, if different from instance location. */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  The id of the node.
 *  This should be equal to SaasInstanceNode.node_id.
 */
@property(nonatomic, copy, nullable) NSString *nodeId;

@end


/**
 *  Describes provisioned dataplane resources.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource : GTLRObject

/**
 *  Type of the resource. This can be either a GCP resource or a custom one
 *  (e.g. another cloud provider's VM). For GCP compute resources use singular
 *  form of the names listed in GCP compute API documentation
 *  (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with
 *  'compute-', for example: 'compute-instance', 'compute-disk',
 *  'compute-autoscaler'.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  URL identifying the resource, e.g.
 *  "https://www.googleapis.com/compute/v1/projects/...)".
 */
@property(nonatomic, copy, nullable) NSString *resourceUrl;

@end


/**
 *  SloEligibility is a tuple containing eligibility value: true if an instance
 *  is eligible for SLO calculation or false if it should be excluded from all
 *  SLO-related calculations along with a user-defined reason.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility : GTLRObject

/**
 *  Whether an instance is eligible or ineligible.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *eligible;

/**
 *  User-defined reason for the current value of instance eligibility. Usually,
 *  this can be directly mapped to the internal state. An empty reason is
 *  allowed.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  SloExclusion represents an exclusion in SLI calculation applies to all SLOs.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion : GTLRObject

/**
 *  Exclusion duration. No restrictions on the possible values.
 *  When an ongoing operation is taking longer than initially expected,
 *  an existing entry in the exclusion list can be updated by extending the
 *  duration. This is supported by the subsystem exporting eligibility data
 *  as long as such extension is committed at least 10 minutes before the
 *  original exclusion expiration - otherwise it is possible that there will
 *  be "gaps" in the exclusion application in the exported timeseries.
 */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  Human-readable reason for the exclusion.
 *  This should be a static string (e.g. "Disruptive update in progress")
 *  and should not contain dynamically generated data (e.g. instance name).
 *  Can be left empty.
 */
@property(nonatomic, copy, nullable) NSString *reason;

/**
 *  Name of an SLI that this exclusion applies to. Can be left empty,
 *  signaling that the instance should be excluded from all SLIs defined
 *  in the service SLO configuration.
 */
@property(nonatomic, copy, nullable) NSString *sliName;

/**
 *  Start time of the exclusion. No alignment (e.g. to a full minute) needed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  SloMetadata contains resources required for proper SLO classification of the
 *  instance.
 */
@interface GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata : GTLRObject

/** Optional. User-defined instance eligibility. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility *eligibility;

/**
 *  List of SLO exclusion windows. When multiple entries in the list match
 *  (matching the exclusion time-window against current time point)
 *  the exclusion reason used in the first matching entry will be published.
 *  It is not needed to include expired exclusion in this list, as only the
 *  currently applicable exclusions are taken into account by the eligibility
 *  exporting subsystem (the historical state of exclusions will be reflected
 *  in the historically produced timeseries regardless of the current state).
 *  This field can be used to mark the instance as temporary ineligible
 *  for the purpose of SLO calculation. For permanent instance SLO exclusion,
 *  use of custom instance eligibility is recommended. See 'eligibility' field
 *  below.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion *> *exclusions;

/**
 *  Optional. List of nodes.
 *  Some producers need to use per-node metadata to calculate SLO.
 *  This field allows such producers to publish per-node SLO meta data,
 *  which will be consumed by SSA Eligibility Exporter and published in the
 *  form of per node metric to Monarch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata *> *nodes;

/**
 *  Name of the SLO tier the Instance belongs to. This name will be expected to
 *  match the tiers specified in the service SLO configuration.
 *  Field is mandatory and must not be empty.
 */
@property(nonatomic, copy, nullable) NSString *tier;

@end


/**
 *  A common proto for logging HTTP requests. Only contains semantics
 *  defined by the HTTP specification. Product-specific logging
 *  information MUST be defined in a separate message.
 */
@interface GTLRCloudFilestore_HttpRequest : GTLRObject

/**
 *  The number of HTTP response bytes inserted into cache. Set only when a
 *  cache fill was attempted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheFillBytes;

/**
 *  Whether or not an entity was served from cache
 *  (with or without validation).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheHit;

/**
 *  Whether or not a cache lookup was attempted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheLookup;

/**
 *  Whether or not the response was validated with the origin server before
 *  being served from cache. This field is only meaningful if `cache_hit` is
 *  True.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheValidatedWithOriginServer;

/**
 *  The request processing latency on the server, from the time the request was
 *  received until the response was sent.
 */
@property(nonatomic, strong, nullable) GTLRDuration *latency;

/**
 *  Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  The referer URL of the request, as defined in
 *  [HTTP/1.1 Header Field
 *  Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
 */
@property(nonatomic, copy, nullable) NSString *referer;

/**
 *  The IP address (IPv4 or IPv6) of the client that issued the HTTP
 *  request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
 */
@property(nonatomic, copy, nullable) NSString *remoteIp;

/** The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`. */
@property(nonatomic, copy, nullable) NSString *requestMethod;

/**
 *  The size of the HTTP request message in bytes, including the request
 *  headers and the request body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestSize;

/**
 *  The scheme (http, https), the host name, the path, and the query
 *  portion of the URL that was requested.
 *  Example: `"http://example.com/some/info?color=red"`.
 */
@property(nonatomic, copy, nullable) NSString *requestUrl;

/**
 *  The size of the HTTP response message sent back to the client, in bytes,
 *  including the response headers and the response body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseSize;

/**
 *  The IP address (IPv4 or IPv6) of the origin server that the request was
 *  sent to.
 */
@property(nonatomic, copy, nullable) NSString *serverIp;

/**
 *  The response code indicating the status of the response.
 *  Examples: 200, 404.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *status;

/**
 *  The user agent sent by the client. Example:
 *  `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET
 *  CLR 1.0.3705)"`.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

@end


/**
 *  A Cloud Filestore instance.
 */
@interface GTLRCloudFilestore_Instance : GTLRObject

/** Output only. The time when the instance was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The description of the instance (2048 characters or less).
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Server-specified ETag for the instance resource to prevent simultaneous
 *  updates from overwriting each other.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  File system shares on the instance.
 *  For this version, only a single file share is supported.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_FileShareConfig *> *fileShares;

/** Resource labels to represent user provided metadata. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Instance_Labels *labels;

/**
 *  Output only. The resource name of the instance, in the format
 *  projects/{project}/locations/{location}/instances/{instance}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  VPC networks to which the instance is connected.
 *  For this version, only a single network is supported.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_NetworkConfig *> *networks;

/**
 *  Output only. The instance state.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_Instance_State_Creating The instance is being
 *        created. (Value: "CREATING")
 *    @arg @c kGTLRCloudFilestore_Instance_State_Deleting The instance is
 *        shutting down. (Value: "DELETING")
 *    @arg @c kGTLRCloudFilestore_Instance_State_Error The instance is
 *        experiencing an issue and might be unusable. You can get
 *        further details from the `statusMessage` field of the `Instance`
 *        resource. (Value: "ERROR")
 *    @arg @c kGTLRCloudFilestore_Instance_State_Ready The instance is available
 *        for use. (Value: "READY")
 *    @arg @c kGTLRCloudFilestore_Instance_State_Repairing Work is being done on
 *        the instance. You can get further details from the
 *        `statusMessage` field of the `Instance` resource. (Value: "REPAIRING")
 *    @arg @c kGTLRCloudFilestore_Instance_State_StateUnspecified State not set.
 *        (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Additional information about the instance state, if available.
 */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  The service tier of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_BasicHdd BASIC instances offer a
 *        maximum capacity of 63.9 TB.
 *        BASIC_HDD is an alias for STANDARD Tier, offering economical
 *        performance backed by HDD. (Value: "BASIC_HDD")
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_BasicSsd BASIC instances offer a
 *        maximum capacity of 63.9 TB.
 *        BASIC_SSD is an alias for PREMIUM Tier, and offers improved
 *        performance backed by SSD. (Value: "BASIC_SSD")
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_HighScaleSsd HIGH_SCALE
 *        instances offer expanded capacity and performance scaling
 *        capabilities. (Value: "HIGH_SCALE_SSD")
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_Premium PREMIUM tier. BASIC_SSD
 *        is the preferred term for this tier. (Value: "PREMIUM")
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_Standard STANDARD tier.
 *        BASIC_HDD is the preferred term for this tier. (Value: "STANDARD")
 *    @arg @c kGTLRCloudFilestore_Instance_Tier_TierUnspecified Not set. (Value:
 *        "TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *tier;

@end


/**
 *  Resource labels to represent user provided metadata.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_Instance_Labels : GTLRObject
@end


/**
 *  Describing buckets with constant width.
 */
@interface GTLRCloudFilestore_LinearBuckets : GTLRObject

/**
 *  The number of finite buckets. With the underflow and overflow buckets,
 *  the total number of buckets is `num_finite_buckets` + 2.
 *  See comments on `bucket_options` for details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  The i'th linear bucket covers the interval
 *  [offset + (i-1) * width, offset + i * width)
 *  where i ranges from 1 to num_finite_buckets, inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The i'th linear bucket covers the interval
 *  [offset + (i-1) * width, offset + i * width)
 *  where i ranges from 1 to num_finite_buckets, inclusive.
 *  Must be strictly positive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  ListInstancesResponse is the result of ListInstancesRequest.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "instances" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFilestore_ListInstancesResponse : GTLRCollectionObject

/**
 *  A list of instances in the project for the specified location.
 *  If the {location} value in the request is "-", the response contains a list
 *  of instances from all locations. If any location is unreachable, the
 *  response will only return instances in reachable locations and the
 *  "unreachable" field will be populated with a list of unreachable locations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Instance *> *instances;

/**
 *  The token you can use to retrieve the next page of results. Not returned
 *  if there are no more results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFilestore_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFilestore_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Operation *> *operations;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRCloudFilestore_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name.
 *  For example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations.
 *  For example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Location_Metadata : GTLRObject
@end


/**
 *  An individual log entry.
 */
@interface GTLRCloudFilestore_LogEntry : GTLRObject

/**
 *  Optional. Information about the HTTP request associated with this
 *  log entry, if applicable.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_HttpRequest *httpRequest;

/**
 *  A unique ID for the log entry used for deduplication. If omitted,
 *  the implementation will generate one based on operation_id.
 */
@property(nonatomic, copy, nullable) NSString *insertId;

/**
 *  A set of user-defined (key, value) data that provides additional
 *  information about the log entry.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LogEntry_Labels *labels;

/**
 *  Required. The log to which this log entry belongs. Examples: `"syslog"`,
 *  `"book_log"`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Information about an operation associated with the log entry, if
 *  applicable.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LogEntryOperation *operation;

/**
 *  The log entry payload, represented as a protocol buffer that is
 *  expressed as a JSON object. The only accepted type currently is
 *  AuditLog.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LogEntry_ProtoPayload *protoPayload;

/**
 *  The severity of the log entry. The default value is
 *  `LogSeverity.DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Alert (700) A person must
 *        take an action immediately. (Value: "ALERT")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Critical (600) Critical
 *        events cause more severe problems or outages. (Value: "CRITICAL")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Debug (100) Debug or trace
 *        information. (Value: "DEBUG")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Default (0) The log entry
 *        has no assigned severity level. (Value: "DEFAULT")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Emergency (800) One or more
 *        systems are unusable. (Value: "EMERGENCY")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Error (500) Error events are
 *        likely to cause problems. (Value: "ERROR")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Info (200) Routine
 *        information, such as ongoing status or performance. (Value: "INFO")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Notice (300) Normal but
 *        significant events, such as start up, shut down, or
 *        a configuration change. (Value: "NOTICE")
 *    @arg @c kGTLRCloudFilestore_LogEntry_Severity_Warning (400) Warning events
 *        might cause problems. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Optional. Source code location information associated with the log entry,
 *  if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LogEntrySourceLocation *sourceLocation;

/**
 *  The log entry payload, represented as a structure that
 *  is expressed as a JSON object.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_LogEntry_StructPayload *structPayload;

/** The log entry payload, represented as a Unicode string (UTF-8). */
@property(nonatomic, copy, nullable) NSString *textPayload;

/**
 *  The time the event described by the log entry occurred. If
 *  omitted, defaults to operation start time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Optional. Resource name of the trace associated with the log entry, if any.
 *  If this field contains a relative resource name, you can assume the name is
 *  relative to `//tracing.googleapis.com`. Example:
 *  `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
 */
@property(nonatomic, copy, nullable) NSString *trace;

@end


/**
 *  A set of user-defined (key, value) data that provides additional
 *  information about the log entry.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_LogEntry_Labels : GTLRObject
@end


/**
 *  The log entry payload, represented as a protocol buffer that is
 *  expressed as a JSON object. The only accepted type currently is
 *  AuditLog.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_LogEntry_ProtoPayload : GTLRObject
@end


/**
 *  The log entry payload, represented as a structure that
 *  is expressed as a JSON object.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_LogEntry_StructPayload : GTLRObject
@end


/**
 *  Additional information about a potentially long-running operation with which
 *  a log entry is associated.
 */
@interface GTLRCloudFilestore_LogEntryOperation : GTLRObject

/**
 *  Optional. Set this to True if this is the first log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *first;

/**
 *  Optional. An arbitrary operation identifier. Log entries with the
 *  same identifier are assumed to be part of the same operation.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Optional. Set this to True if this is the last log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *last;

/**
 *  Optional. An arbitrary producer identifier. The combination of
 *  `id` and `producer` must be globally unique. Examples for `producer`:
 *  `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
 */
@property(nonatomic, copy, nullable) NSString *producer;

@end


/**
 *  Additional information about the source code location that produced the log
 *  entry.
 */
@interface GTLRCloudFilestore_LogEntrySourceLocation : GTLRObject

/**
 *  Optional. Source file name. Depending on the runtime environment, this
 *  might be a simple name or a fully-qualified name.
 */
@property(nonatomic, copy, nullable) NSString *file;

/**
 *  Optional. Human-readable name of the function or method being invoked, with
 *  optional context such as the class or package name. This information may be
 *  used in contexts such as the logs viewer, where a file and line number are
 *  less meaningful. The format can vary by language. For example:
 *  `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
 *  (Python).
 */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  Optional. Line within the source file. 1-based; 0 indicates no line number
 *  available.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *line;

@end


/**
 *  Represents a single metric value.
 */
@interface GTLRCloudFilestore_MetricValue : GTLRObject

/**
 *  A boolean value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/** A distribution value. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Distribution *distributionValue;

/**
 *  A double precision floating point value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  The end of the time period over which this metric value's measurement
 *  applies.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  A signed 64-bit integer value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *int64Value;

/**
 *  The labels describing the metric value.
 *  See comments on google.api.servicecontrol.v1.Operation.labels for
 *  the overriding relationship.
 *  Note that this map must not contain monitored resource labels.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_MetricValue_Labels *labels;

/** A money value. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Money *moneyValue;

/**
 *  The start of the time period over which this metric value's measurement
 *  applies. The time period has different semantics for different metric
 *  types (cumulative, delta, and gauge). See the metric definition
 *  documentation in the service configuration for details.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** A text string value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  The labels describing the metric value.
 *  See comments on google.api.servicecontrol.v1.Operation.labels for
 *  the overriding relationship.
 *  Note that this map must not contain monitored resource labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFilestore_MetricValue_Labels : GTLRObject
@end


/**
 *  Represents a set of metric values in the same metric.
 *  Each metric value in the set should have a unique combination of start time,
 *  end time, and label values.
 */
@interface GTLRCloudFilestore_MetricValueSet : GTLRObject

/** The metric name defined in the service configuration. */
@property(nonatomic, copy, nullable) NSString *metricName;

/** The values in this metric. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_MetricValue *> *metricValues;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRCloudFilestore_Money : GTLRObject

/** The 3-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount.
 *  The value must be between -999,999,999 and +999,999,999 inclusive.
 *  If `units` is positive, `nanos` must be positive or zero.
 *  If `units` is zero, `nanos` can be positive, zero, or negative.
 *  If `units` is negative, `nanos` must be negative or zero.
 *  For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount.
 *  For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Network configuration for the instance.
 */
@interface GTLRCloudFilestore_NetworkConfig : GTLRObject

/**
 *  Output only. IPv4 addresses in the format
 *  {octet 1}.{octet 2}.{octet 3}.{octet 4} or IPv6 addresses in the format
 *  {block 1}:{block 2}:{block 3}:{block 4}:{block 5}:{block 6}:{block
 *  7}:{block 8}.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ipAddresses;

/**
 *  Internet protocol versions for which the instance has IP addresses
 *  assigned. For this version, only MODE_IPV4 is supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *modes;

/**
 *  The name of the Google Compute Engine
 *  [VPC network](/compute/docs/networks-and-firewalls#networks) to which the
 *  instance is connected.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  A /29 CIDR block in one of the
 *  [internal IP address
 *  ranges](https://www.arin.net/knowledge/address_filters.html) that
 *  identifies the range of IP addresses reserved for this instance. For
 *  example, 10.0.0.0/29 or 192.168.0.0/29. The range you specify can't overlap
 *  with either existing subnets or assigned IP address ranges for other Cloud
 *  Filestore instances in the selected VPC network.
 */
@property(nonatomic, copy, nullable) NSString *reservedIpRange;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudFilestore_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress.
 *  If `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the
 *  `name` should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time.
 *  Some services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx`
 *  is the original method name. For example, if the original method name
 *  is `TakeSnapshot()`, the inferred response type is
 *  `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudFilestore_OperationMetadata : GTLRObject

/** [Output only] API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  [Output only] Identifies whether the user has requested cancellation
 *  of the operation. Operations that have successfully been cancelled
 *  have Operation.error value with a google.rpc.Status.code of 1,
 *  corresponding to `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** [Output only] The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** [Output only] The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** [Output only] Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/**
 *  [Output only] Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** [Output only] Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Represents the properties needed for quota operations.
 */
@interface GTLRCloudFilestore_QuotaProperties : GTLRObject

/**
 *  Quota mode for this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_QuotaProperties_QuotaMode_Acquire Decreases
 *        available quota by the cost specified for the operation.
 *        If cost is higher than available quota, operation fails and returns
 *        error. (Value: "ACQUIRE")
 *    @arg @c kGTLRCloudFilestore_QuotaProperties_QuotaMode_AcquireBestEffort
 *        Decreases available quota by the cost specified for the operation.
 *        If cost is higher than available quota, operation does not fail and
 *        available quota goes down to zero but it returns error. (Value:
 *        "ACQUIRE_BEST_EFFORT")
 *    @arg @c kGTLRCloudFilestore_QuotaProperties_QuotaMode_Check Does not
 *        change any available quota. Only checks if there is enough
 *        quota.
 *        No lock is placed on the checked tokens neither. (Value: "CHECK")
 *    @arg @c kGTLRCloudFilestore_QuotaProperties_QuotaMode_Release Increases
 *        available quota by the operation cost specified for the
 *        operation. (Value: "RELEASE")
 */
@property(nonatomic, copy, nullable) NSString *quotaMode;

@end


/**
 *  Request message for the Report method.
 */
@interface GTLRCloudFilestore_ReportRequest : GTLRObject

/**
 *  Operations to be reported.
 *  Typically the service should report one operation per request.
 *  Putting multiple operations into a single request is allowed, but should
 *  be used only when multiple operations are natually available at the time
 *  of the report.
 *  There is no limit on the number of operations in the same ReportRequest,
 *  however the ReportRequest size should be no larger than 1MB. See
 *  ReportResponse.report_errors for partial failure behavior.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_GoogleApiServicecontrolV1Operation *> *operations;

/**
 *  Specifies which version of service config should be used to process the
 *  request.
 *  If unspecified or no matching version can be found, the
 *  latest one will be used.
 */
@property(nonatomic, copy, nullable) NSString *serviceConfigId;

/**
 *  The service name as specified in its service configuration. For example,
 *  `"pubsub.googleapis.com"`.
 *  See
 *  [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
 *  for the definition of a service name.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

@end


/**
 *  Describes a resource associated with this operation.
 */
@interface GTLRCloudFilestore_ResourceInfo : GTLRObject

/**
 *  The identifier of the parent of this resource instance.
 *  Must be in one of the following formats:
 *  - “projects/<project-id or project-number>”
 *  - “folders/<folder-id>”
 *  - “organizations/<organization-id>”
 */
@property(nonatomic, copy, nullable) NSString *resourceContainer;

/**
 *  The location of the resource. If not empty, the resource will be checked
 *  against location policy. The value must be a valid zone, region or
 *  multiregion. For example: "europe-west4" or "northamerica-northeast1-a"
 */
@property(nonatomic, copy, nullable) NSString *resourceLocation;

/** Name of the resource. This is used for auditing purposes. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details.
 *  You can find out more about this error model and how to work with it in the
 *  [API Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudFilestore_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFilestore_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudFilestore_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFilestore_Status_Details_Item : GTLRObject
@end


/**
 *  A span represents a single operation within a trace. Spans can be
 *  nested to form a trace tree. Often, a trace contains a root span
 *  that describes the end-to-end latency, and one or more subspans for
 *  its sub-operations. A trace can also contain multiple root spans,
 *  or none at all. Spans do not need to be contiguous&mdash;there may be
 *  gaps or overlaps between spans in a trace.
 */
@interface GTLRCloudFilestore_TraceSpan : GTLRObject

/**
 *  A set of attributes on the span. You can have up to 32 attributes per
 *  span.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Attributes *attributes;

/**
 *  An optional number of child spans that were generated while this span
 *  was active. If set, allows implementation to detect missing child spans.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *childSpanCount;

/**
 *  A description of the span's operation (up to 128 bytes).
 *  Stackdriver Trace displays the description in the
 *  Google Cloud Platform Console.
 *  For example, the display name can be a qualified method name or a file name
 *  and a line number where the operation is called. A best practice is to use
 *  the same display name within an application and at the same call point.
 *  This makes it easier to correlate spans in different traces.
 */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_TruncatableString *displayName;

/**
 *  The end time of the span. On the client side, this is the time kept by
 *  the local machine where the span execution ends. On the server side, this
 *  is the time when the server application handler stops running.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The resource name of the span in the following format:
 *  projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier
 *  for a trace within a project;
 *  it is a 32-character hexadecimal encoding of a 16-byte array.
 *  [SPAN_ID] is a unique identifier for a span within a trace; it
 *  is a 16-character hexadecimal encoding of an 8-byte array.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The [SPAN_ID] of this span's parent span. If this is a root span,
 *  then this field must be empty.
 */
@property(nonatomic, copy, nullable) NSString *parentSpanId;

/**
 *  (Optional) Set this parameter to indicate whether this span is in
 *  the same process as its parent. If you do not set this parameter,
 *  Stackdriver Trace is unable to take advantage of this helpful
 *  information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sameProcessAsParentSpan;

/** The [SPAN_ID] portion of the span's resource name. */
@property(nonatomic, copy, nullable) NSString *spanId;

/**
 *  Distinguishes between spans generated in a particular context. For example,
 *  two spans with the same name may be distinguished using `CLIENT` (caller)
 *  and `SERVER` (callee) to identify an RPC call.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_Client Indicates that the
 *        span covers the client-side wrapper around an RPC or
 *        other remote request. (Value: "CLIENT")
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_Consumer Indicates that the
 *        span describes consumer receiving a message from a
 *        broker. Unlike client and server, there is no direct critical path
 *        latency relationship between producer and consumer spans (e.g.
 *        receiving
 *        a message from a pubsub service subscription). (Value: "CONSUMER")
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_Internal Indicates that the
 *        span is used internally. Default value. (Value: "INTERNAL")
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_Producer Indicates that the
 *        span describes producer sending a message to a broker.
 *        Unlike client and server, there is no direct critical path latency
 *        relationship between producer and consumer spans (e.g. publishing a
 *        message to a pubsub service). (Value: "PRODUCER")
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_Server Indicates that the
 *        span covers server-side handling of an RPC or other
 *        remote network request. (Value: "SERVER")
 *    @arg @c kGTLRCloudFilestore_TraceSpan_SpanKind_SpanKindUnspecified
 *        Unspecified. Do NOT use as default.
 *        Implementations MAY assume SpanKind.INTERNAL to be default. (Value:
 *        "SPAN_KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *spanKind;

/**
 *  The start time of the span. On the client side, this is the time kept by
 *  the local machine where the span execution starts. On the server side, this
 *  is the time when the server's application handler starts running.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** An optional final status for this span. */
@property(nonatomic, strong, nullable) GTLRCloudFilestore_Status *status;

@end


/**
 *  Represents a string that might be shortened to a specified length.
 */
@interface GTLRCloudFilestore_TruncatableString : GTLRObject

/**
 *  The number of bytes removed from the original string. If this
 *  value is 0, then the string was not shortened.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *truncatedByteCount;

/**
 *  The shortened string. For example, if the original string is 500
 *  bytes long and the limit of the string is 128 bytes, then
 *  `value` contains the first 128 bytes of the 500-byte string.
 *  Truncation always happens on a UTF8 character boundary. If there
 *  are multi-byte characters in the string, then the length of the
 *  shortened string might be less than the size limit.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
