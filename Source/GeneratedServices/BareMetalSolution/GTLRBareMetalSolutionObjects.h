// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Bare Metal Solution API (baremetalsolution/v2)
// Description:
//   Provides ways to manage Bare Metal Solution hardware installed in a
//   regional extension located near a Google Cloud data center.
// Documentation:
//   https://cloud.google.com/bare-metal

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRBareMetalSolution_Instance;
@class GTLRBareMetalSolution_Instance_Labels;
@class GTLRBareMetalSolution_Location;
@class GTLRBareMetalSolution_Location_Labels;
@class GTLRBareMetalSolution_Location_Metadata;
@class GTLRBareMetalSolution_Lun;
@class GTLRBareMetalSolution_Network;
@class GTLRBareMetalSolution_Network_Labels;
@class GTLRBareMetalSolution_Operation_Metadata;
@class GTLRBareMetalSolution_Operation_Response;
@class GTLRBareMetalSolution_QosPolicy;
@class GTLRBareMetalSolution_Schedule;
@class GTLRBareMetalSolution_SnapshotReservationDetail;
@class GTLRBareMetalSolution_SnapshotSchedulePolicy;
@class GTLRBareMetalSolution_SnapshotSchedulePolicy_Labels;
@class GTLRBareMetalSolution_Status;
@class GTLRBareMetalSolution_Status_Details_Item;
@class GTLRBareMetalSolution_VlanAttachment;
@class GTLRBareMetalSolution_Volume;
@class GTLRBareMetalSolution_Volume_Labels;
@class GTLRBareMetalSolution_VolumeSnapshot;
@class GTLRBareMetalSolution_VRF;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Instance.state

/**
 *  The server has been deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Instance_State_Deleted;
/**
 *  The server is being provisioned.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Instance_State_Provisioning;
/**
 *  The server is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Instance_State_Running;
/**
 *  The server is in an unknown state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Instance_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Lun.multiprotocolType

/**
 *  Server with Linux OS.
 *
 *  Value: "LINUX"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_MultiprotocolType_Linux;
/**
 *  Server has no OS specified.
 *
 *  Value: "MULTIPROTOCOL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_MultiprotocolType_MultiprotocolTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Lun.state

/**
 *  The LUN is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_State_Creating;
/**
 *  The LUN has been requested to be deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_State_Deleting;
/**
 *  The LUN is ready for use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_State_Ready;
/**
 *  The LUN is in an unknown state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_State_StateUnspecified;
/**
 *  The LUN is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_State_Updating;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Lun.storageType

/**
 *  This storage type for this LUN is HDD.
 *
 *  Value: "HDD"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_StorageType_Hdd;
/**
 *  This storage type for this LUN is SSD.
 *
 *  Value: "SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_StorageType_Ssd;
/**
 *  The storage type for this LUN is unknown.
 *
 *  Value: "STORAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Lun_StorageType_StorageTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Network.state

/**
 *  The Network has been provisioned.
 *
 *  Value: "PROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_State_Provisioned;
/**
 *  The Network is provisioning.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_State_Provisioning;
/**
 *  The Network is in an unknown state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Network.type

/**
 *  Client network, a network peered to a Google Cloud VPC.
 *
 *  Value: "CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_Type_Client;
/**
 *  Private network, a network local to the Bare Metal Solution environment.
 *
 *  Value: "PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_Type_Private;
/**
 *  Unspecified value.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Network_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Volume.snapshotAutoDeleteBehavior

/**
 *  Don't delete any snapshots. This disables new snapshot creation, as long as
 *  the snapshot reserved space is full.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_Disabled;
/**
 *  Delete the newest snapshots first.
 *
 *  Value: "NEWEST_FIRST"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_NewestFirst;
/**
 *  Delete the oldest snapshots first.
 *
 *  Value: "OLDEST_FIRST"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_OldestFirst;
/**
 *  The unspecified behavior.
 *
 *  Value: "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_SnapshotAutoDeleteBehaviorUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Volume.state

/**
 *  The storage volume is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_State_Creating;
/**
 *  The storage volume has been requested to be deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_State_Deleting;
/**
 *  The storage volume is ready for use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_State_Ready;
/**
 *  The storage volume is in an unknown state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_Volume.storageType

/**
 *  This storage type for this volume is HDD.
 *
 *  Value: "HDD"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_StorageType_Hdd;
/**
 *  The storage type for this volume is SSD.
 *
 *  Value: "SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_StorageType_Ssd;
/**
 *  The storage type for this volume is unknown.
 *
 *  Value: "STORAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_Volume_StorageType_StorageTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRBareMetalSolution_VRF.state

/**
 *  The vrf is provisioned.
 *
 *  Value: "PROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_VRF_State_Provisioned;
/**
 *  The vrf is provisioning.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_VRF_State_Provisioning;
/**
 *  The unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBareMetalSolution_VRF_State_StateUnspecified;

/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
 *  representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRBareMetalSolution_Empty : GTLRObject
@end


/**
 *  A server.
 */
@interface GTLRBareMetalSolution_Instance : GTLRObject

/** Output only. Create a time stamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  True if you enable hyperthreading for the server, otherwise false. The
 *  default value is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hyperthreadingEnabled;

/**
 *  An identifier for the `Instance`, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  True if the interactive serial console feature is enabled for the instance,
 *  false otherwise. The default value is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *interactiveSerialConsoleEnabled;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Instance_Labels *labels;

/** List of LUNs associated with this server. */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Lun *> *luns;

/**
 *  The server type. [Available server
 *  types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Output only. The resource name of this `Instance`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/instances/{instance}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** List of networks associated with this server. */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Network *> *networks;

/**
 *  The state of the server.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Instance_State_Deleted The server has been
 *        deleted. (Value: "DELETED")
 *    @arg @c kGTLRBareMetalSolution_Instance_State_Provisioning The server is
 *        being provisioned. (Value: "PROVISIONING")
 *    @arg @c kGTLRBareMetalSolution_Instance_State_Running The server is
 *        running. (Value: "RUNNING")
 *    @arg @c kGTLRBareMetalSolution_Instance_State_StateUnspecified The server
 *        is in an unknown state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Update a time stamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRBareMetalSolution_Instance_Labels : GTLRObject
@end


/**
 *  Response message for the list of servers.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "instances" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBareMetalSolution_ListInstancesResponse : GTLRCollectionObject

/**
 *  The list of servers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Instance *> *instances;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBareMetalSolution_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message containing the list of storage volume luns.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "luns" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBareMetalSolution_ListLunsResponse : GTLRCollectionObject

/**
 *  The list of luns.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Lun *> *luns;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message containing the list of networks.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "networks" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBareMetalSolution_ListNetworksResponse : GTLRCollectionObject

/**
 *  The list of networks.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Network *> *networks;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message containing the list of snapshot schedule policies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "snapshotSchedulePolicies" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRBareMetalSolution_ListSnapshotSchedulePoliciesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The snapshot schedule policies registered in this project.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_SnapshotSchedulePolicy *> *snapshotSchedulePolicies;

@end


/**
 *  Response message containing the list of storage volume snapshots.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "volumeSnapshots" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRBareMetalSolution_ListVolumeSnapshotsResponse : GTLRCollectionObject

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The list of storage volumes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_VolumeSnapshot *> *volumeSnapshots;

@end


/**
 *  Response message containing the list of storage volumes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "volumes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBareMetalSolution_ListVolumesResponse : GTLRCollectionObject

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The list of storage volumes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Volume *> *volumes;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRBareMetalSolution_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRBareMetalSolution_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRBareMetalSolution_Location_Metadata : GTLRObject
@end


/**
 *  A storage volume logical unit number (LUN).
 */
@interface GTLRBareMetalSolution_Lun : GTLRObject

/**
 *  Display if this LUN is a boot LUN.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bootLun;

/**
 *  An identifier for the LUN, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The LUN multiprotocol type ensures the characteristics of the LUN are
 *  optimized for each operating system.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Lun_MultiprotocolType_Linux Server with
 *        Linux OS. (Value: "LINUX")
 *    @arg @c kGTLRBareMetalSolution_Lun_MultiprotocolType_MultiprotocolTypeUnspecified
 *        Server has no OS specified. (Value: "MULTIPROTOCOL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *multiprotocolType;

/** Output only. The name of the LUN. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Display if this LUN can be shared between multiple physical servers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shareable;

/**
 *  The size of this LUN, in gigabytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

/**
 *  The state of this storage volume.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Lun_State_Creating The LUN is being
 *        created. (Value: "CREATING")
 *    @arg @c kGTLRBareMetalSolution_Lun_State_Deleting The LUN has been
 *        requested to be deleted. (Value: "DELETING")
 *    @arg @c kGTLRBareMetalSolution_Lun_State_Ready The LUN is ready for use.
 *        (Value: "READY")
 *    @arg @c kGTLRBareMetalSolution_Lun_State_StateUnspecified The LUN is in an
 *        unknown state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRBareMetalSolution_Lun_State_Updating The LUN is being
 *        updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The storage type for this LUN.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Lun_StorageType_Hdd This storage type for
 *        this LUN is HDD. (Value: "HDD")
 *    @arg @c kGTLRBareMetalSolution_Lun_StorageType_Ssd This storage type for
 *        this LUN is SSD. (Value: "SSD")
 *    @arg @c kGTLRBareMetalSolution_Lun_StorageType_StorageTypeUnspecified The
 *        storage type for this LUN is unknown. (Value:
 *        "STORAGE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *storageType;

/** Display the storage volume for this LUN. */
@property(nonatomic, copy, nullable) NSString *storageVolume;

/** The WWID for this LUN. */
@property(nonatomic, copy, nullable) NSString *wwid;

@end


/**
 *  A Network.
 */
@interface GTLRBareMetalSolution_Network : GTLRObject

/** The cidr of the Network. */
@property(nonatomic, copy, nullable) NSString *cidr;

/**
 *  An identifier for the `Network`, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** IP address configured. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Network_Labels *labels;

/** List of physical interfaces. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *macAddress;

/**
 *  Output only. The resource name of this `Network`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/networks/{network}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** IP range for reserved for services (e.g. NFS). */
@property(nonatomic, copy, nullable) NSString *servicesCidr;

/**
 *  The Network state.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Network_State_Provisioned The Network has
 *        been provisioned. (Value: "PROVISIONED")
 *    @arg @c kGTLRBareMetalSolution_Network_State_Provisioning The Network is
 *        provisioning. (Value: "PROVISIONING")
 *    @arg @c kGTLRBareMetalSolution_Network_State_StateUnspecified The Network
 *        is in an unknown state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The type of this network.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Network_Type_Client Client network, a
 *        network peered to a Google Cloud VPC. (Value: "CLIENT")
 *    @arg @c kGTLRBareMetalSolution_Network_Type_Private Private network, a
 *        network local to the Bare Metal Solution environment. (Value:
 *        "PRIVATE")
 *    @arg @c kGTLRBareMetalSolution_Network_Type_TypeUnspecified Unspecified
 *        value. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The vlan id of the Network. */
@property(nonatomic, copy, nullable) NSString *vlanId;

/** The vrf for the Network. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_VRF *vrf;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRBareMetalSolution_Network_Labels : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRBareMetalSolution_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRBareMetalSolution_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRBareMetalSolution_Operation_Response : GTLRObject
@end


/**
 *  QOS policy parameters.
 */
@interface GTLRBareMetalSolution_QosPolicy : GTLRObject

/**
 *  The bandwidth permitted by the QOS policy, in gbps.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bandwidthGbps;

@end


/**
 *  Message requesting to reset a server.
 */
@interface GTLRBareMetalSolution_ResetInstanceRequest : GTLRObject
@end


/**
 *  Message for restoring a volume snapshot.
 */
@interface GTLRBareMetalSolution_RestoreVolumeSnapshotRequest : GTLRObject
@end


/**
 *  A snapshot schedule.
 */
@interface GTLRBareMetalSolution_Schedule : GTLRObject

/** A crontab-like specification that the schedule uses to take snapshots. */
@property(nonatomic, copy, nullable) NSString *crontabSpec;

/** A list of snapshot names created in this schedule. */
@property(nonatomic, copy, nullable) NSString *prefix;

/**
 *  The maximum number of snapshots to retain in this schedule.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retentionCount;

@end


/**
 *  Details about snapshot space reservation and usage on the storage volume.
 */
@interface GTLRBareMetalSolution_SnapshotReservationDetail : GTLRObject

/**
 *  The space on this storage volume reserved for snapshots, shown in GiB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reservedSpaceGib;

/**
 *  The amount, in GiB, of available space in this storage volume's reserved
 *  snapshot space.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reservedSpaceRemainingGib;

/**
 *  The percent of snapshot space on this storage volume actually being used by
 *  the snapshot copies. This value might be higher than 100% if the snapshot
 *  copies have overflowed into the data portion of the storage volume.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reservedSpaceUsedPercent;

@end


/**
 *  A snapshot schedule policy.
 */
@interface GTLRBareMetalSolution_SnapshotSchedulePolicy : GTLRObject

/**
 *  The description of the snapshot schedule policy.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  An identifier for the snapshot schedule policy, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_SnapshotSchedulePolicy_Labels *labels;

/** Output only. The name of the snapshot schedule policy. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The snapshot schedules contained in this policy. You can specify a maximum
 *  of 5 schedules.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Schedule *> *schedules;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRBareMetalSolution_SnapshotSchedulePolicy_Labels : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRBareMetalSolution_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRBareMetalSolution_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRBareMetalSolution_Status_Details_Item : GTLRObject
@end


/**
 *  VLAN attachment details.
 */
@interface GTLRBareMetalSolution_VlanAttachment : GTLRObject

/** The peer IP of the attachment. */
@property(nonatomic, copy, nullable) NSString *peerIp;

/**
 *  The peer vlan ID of the attachment.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peerVlanId;

/** The router IP of the attachment. */
@property(nonatomic, copy, nullable) NSString *routerIp;

@end


/**
 *  A storage volume.
 */
@interface GTLRBareMetalSolution_Volume : GTLRObject

/**
 *  The size, in GiB, that this storage volume has expanded as a result of an
 *  auto grow policy. In the absence of auto-grow, the value is 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoGrownSizeGib;

/**
 *  The current size of this storage volume, in GiB, including space reserved
 *  for snapshots. This size might be different than the requested size if the
 *  storage volume has been configured with auto grow or auto shrink.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *currentSizeGib;

/**
 *  An identifier for the `Volume`, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_Volume_Labels *labels;

/**
 *  Output only. The resource name of this `Volume`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/volumes/{volume}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The space remaining in the storage volume for new LUNs, in GiB, excluding
 *  space reserved for snapshots.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remainingSpaceGib;

/**
 *  The requested size of this storage volume, in GiB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedSizeGib;

/**
 *  The behavior to use when snapshot reserved space is full.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_Disabled
 *        Don't delete any snapshots. This disables new snapshot creation, as
 *        long as the snapshot reserved space is full. (Value: "DISABLED")
 *    @arg @c kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_NewestFirst
 *        Delete the newest snapshots first. (Value: "NEWEST_FIRST")
 *    @arg @c kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_OldestFirst
 *        Delete the oldest snapshots first. (Value: "OLDEST_FIRST")
 *    @arg @c kGTLRBareMetalSolution_Volume_SnapshotAutoDeleteBehavior_SnapshotAutoDeleteBehaviorUnspecified
 *        The unspecified behavior. (Value:
 *        "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *snapshotAutoDeleteBehavior;

/**
 *  Details about snapshot space reservation and usage on the storage volume.
 */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_SnapshotReservationDetail *snapshotReservationDetail;

/**
 *  The name of the snapshot schedule policy in use for this volume, if any.
 */
@property(nonatomic, copy, nullable) NSString *snapshotSchedulePolicy;

/**
 *  The state of this storage volume.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Volume_State_Creating The storage volume is
 *        being created. (Value: "CREATING")
 *    @arg @c kGTLRBareMetalSolution_Volume_State_Deleting The storage volume
 *        has been requested to be deleted. (Value: "DELETING")
 *    @arg @c kGTLRBareMetalSolution_Volume_State_Ready The storage volume is
 *        ready for use. (Value: "READY")
 *    @arg @c kGTLRBareMetalSolution_Volume_State_StateUnspecified The storage
 *        volume is in an unknown state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The storage type for this volume.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_Volume_StorageType_Hdd This storage type
 *        for this volume is HDD. (Value: "HDD")
 *    @arg @c kGTLRBareMetalSolution_Volume_StorageType_Ssd The storage type for
 *        this volume is SSD. (Value: "SSD")
 *    @arg @c kGTLRBareMetalSolution_Volume_StorageType_StorageTypeUnspecified
 *        The storage type for this volume is unknown. (Value:
 *        "STORAGE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *storageType;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRBareMetalSolution_Volume_Labels : GTLRObject
@end


/**
 *  Snapshot registered for a given storage volume.
 */
@interface GTLRBareMetalSolution_VolumeSnapshot : GTLRObject

/** Output only. The creation time of the storage volume snapshot. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The description of the storage volume snapshot.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  An identifier for the snapshot, generated by the backend.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Output only. The name of the storage volume snapshot. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The size of the storage volume snapshot, in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

/** The storage volume this snapshot belongs to. */
@property(nonatomic, copy, nullable) NSString *storageVolume;

@end


/**
 *  A network VRF.
 */
@interface GTLRBareMetalSolution_VRF : GTLRObject

/** The name of the VRF. */
@property(nonatomic, copy, nullable) NSString *name;

/** The QOS policy applied to this VRF. */
@property(nonatomic, strong, nullable) GTLRBareMetalSolution_QosPolicy *qosPolicy;

/**
 *  The possible state of VRF.
 *
 *  Likely values:
 *    @arg @c kGTLRBareMetalSolution_VRF_State_Provisioned The vrf is
 *        provisioned. (Value: "PROVISIONED")
 *    @arg @c kGTLRBareMetalSolution_VRF_State_Provisioning The vrf is
 *        provisioning. (Value: "PROVISIONING")
 *    @arg @c kGTLRBareMetalSolution_VRF_State_StateUnspecified The unspecified
 *        state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The list of VLAN attachments for the VRF. */
@property(nonatomic, strong, nullable) NSArray<GTLRBareMetalSolution_VlanAttachment *> *vlanAttachments;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
