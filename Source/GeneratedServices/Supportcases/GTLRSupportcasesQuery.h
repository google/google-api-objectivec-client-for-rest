// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Support Cases Private API (supportcases/v2)
// Description:
//   Support Cases API
// Documentation:
//   https://sites.google.com/a/google.com/cases/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSupportcases_AssignCohortsRequest;
@class GTLRSupportcases_AssignRequest;
@class GTLRSupportcases_AuthenticateRequest;
@class GTLRSupportcases_AutoAssignRequest;
@class GTLRSupportcases_BatchCreatePitchRequest;
@class GTLRSupportcases_BatchUpdateAttributesRequest;
@class GTLRSupportcases_BlockRequest;
@class GTLRSupportcases_BuildNewEmailRequest;
@class GTLRSupportcases_BuildReplyEmailRequest;
@class GTLRSupportcases_CallBackRequest;
@class GTLRSupportcases_CancelAuthHoldRequest;
@class GTLRSupportcases_CancelComponentsRequest;
@class GTLRSupportcases_CancelEntitlementRequest;
@class GTLRSupportcases_CancelHardwareOrderRequest;
@class GTLRSupportcases_CancelRmaRequest;
@class GTLRSupportcases_CancelSendRequest;
@class GTLRSupportcases_CancelSubscriptionRequest;
@class GTLRSupportcases_CheckRedeemerRequest;
@class GTLRSupportcases_CreateAgentActivityRequest;
@class GTLRSupportcases_CreateConsultNoteRequest;
@class GTLRSupportcases_CreateEmailRequest;
@class GTLRSupportcases_CreateExchangeWithoutReturnRequest;
@class GTLRSupportcases_CreateFromHelpCenterDeepLinkRequest;
@class GTLRSupportcases_CreateNewCaseRequest;
@class GTLRSupportcases_CreateNoteConsultCaseRequest;
@class GTLRSupportcases_CreateNoteRequest;
@class GTLRSupportcases_CreateRealTimeConsultCaseRequest;
@class GTLRSupportcases_CreateTroubleshooterSessionRequest;
@class GTLRSupportcases_CreateWorkflowRequest;
@class GTLRSupportcases_DeauthenticateRequest;
@class GTLRSupportcases_DedupeRequest;
@class GTLRSupportcases_DiscardDraftRequest;
@class GTLRSupportcases_EscalateRequest;
@class GTLRSupportcases_FinalizeConsultNoteRequest;
@class GTLRSupportcases_FinalizeNoteRequest;
@class GTLRSupportcases_FinishRequest;
@class GTLRSupportcases_GetAccountReviewStatusRequest;
@class GTLRSupportcases_GetAuthenticationCreditCardTypesRequest;
@class GTLRSupportcases_GetAuthenticationQuestionsRequest;
@class GTLRSupportcases_GetAuthenticationResultRequest;
@class GTLRSupportcases_GetBusinessListingsRequest;
@class GTLRSupportcases_GetCancellationStatusRequest;
@class GTLRSupportcases_GetConsultSlaRequest;
@class GTLRSupportcases_GetCustomerSummaryRequest;
@class GTLRSupportcases_GetHardwareOrderDetailRequest;
@class GTLRSupportcases_GetHardwareSignalsRequest;
@class GTLRSupportcases_GetLostStolenEligibilityRequest;
@class GTLRSupportcases_GetLostStolenRefundEligibilityRequest;
@class GTLRSupportcases_GetMailingAddressRequest;
@class GTLRSupportcases_GetOneTimePurchasesRequest;
@class GTLRSupportcases_GetOrdersRequest;
@class GTLRSupportcases_GetPaymentMethodHijackReviewsStatusRequest;
@class GTLRSupportcases_GetPaymentsInfoRequest;
@class GTLRSupportcases_GetRefundStatusRequest;
@class GTLRSupportcases_GetReplacementDetailRequest;
@class GTLRSupportcases_GetRmaOrderDetailRequest;
@class GTLRSupportcases_GetShippingAddressRequest;
@class GTLRSupportcases_GetShippingCustomerNameRequest;
@class GTLRSupportcases_GetShippingCustomerPhoneNumberRequest;
@class GTLRSupportcases_GetSubscriptionsRequest;
@class GTLRSupportcases_InitiatePaymentMethodHijackReviewsRequest;
@class GTLRSupportcases_ListBankAccountCountriesRequest;
@class GTLRSupportcases_ListBillingAddressesRequest;
@class GTLRSupportcases_ListCreditCardTypesRequest;
@class GTLRSupportcases_ListDevicesRequest;
@class GTLRSupportcases_ListHardwareOrdersRequest;
@class GTLRSupportcases_ListHardwareRefundsRequest;
@class GTLRSupportcases_ListOtherDevicesRequest;
@class GTLRSupportcases_ListPurchasedAppsRequest;
@class GTLRSupportcases_ListPurchasedBooksRequest;
@class GTLRSupportcases_ListPurchasedVideosRequest;
@class GTLRSupportcases_ListShippingAddressesRequest;
@class GTLRSupportcases_ListSubscriptionsRequest;
@class GTLRSupportcases_ListTransactionsRequest;
@class GTLRSupportcases_ListTransactionsRequest1;
@class GTLRSupportcases_LogDataAccessRequest;
@class GTLRSupportcases_LogResolutionRequest;
@class GTLRSupportcases_LogTroubleshooterActivityRequest;
@class GTLRSupportcases_LookupGiftCardRequest;
@class GTLRSupportcases_MarkOriginalDeviceReceivedRequest;
@class GTLRSupportcases_NeedsInfoRequest;
@class GTLRSupportcases_OfferedSolutionRequest;
@class GTLRSupportcases_ReadCaseRequest;
@class GTLRSupportcases_RedeemGiftCardRequest;
@class GTLRSupportcases_RefundHardwareOrderRequest;
@class GTLRSupportcases_RefundOrdersRequest;
@class GTLRSupportcases_RefundTransactionsRequest;
@class GTLRSupportcases_ReleaseRequest;
@class GTLRSupportcases_RouteRequest;
@class GTLRSupportcases_RunRmaStepsRequest;
@class GTLRSupportcases_RunWorkflowRequest;
@class GTLRSupportcases_SaveRmaRequest;
@class GTLRSupportcases_SearchAccountReviewsRequest;
@class GTLRSupportcases_SearchMultipleCategoryInfosRequest;
@class GTLRSupportcases_SearchOrdersRequest;
@class GTLRSupportcases_SearchSetting;
@class GTLRSupportcases_SendEmailRequest;
@class GTLRSupportcases_SendRmaRequest;
@class GTLRSupportcases_SetCallbackNumberRequest;
@class GTLRSupportcases_SpamRequest;
@class GTLRSupportcases_SplitRequest;
@class GTLRSupportcases_SubmitRmaRequest;
@class GTLRSupportcases_SuggestResolutionsRequest;
@class GTLRSupportcases_TakeRequest;
@class GTLRSupportcases_TransferRequest;
@class GTLRSupportcases_TroubleshootAccountRequest;
@class GTLRSupportcases_TroubleshootIssueRequest;
@class GTLRSupportcases_TroubleshootTransactionRequest;
@class GTLRSupportcases_UnassignRequest;
@class GTLRSupportcases_UnblockRequest;
@class GTLRSupportcases_UnspamRequest;
@class GTLRSupportcases_UpdateAccountsRequest;
@class GTLRSupportcases_UpdateAgentCategoriesRequest;
@class GTLRSupportcases_UpdateAttributesRequest;
@class GTLRSupportcases_UpdateConsultNoteRequest;
@class GTLRSupportcases_UpdateContactEmailRequest;
@class GTLRSupportcases_UpdateContactNameRequest;
@class GTLRSupportcases_UpdateCustomerAttributesRequest;
@class GTLRSupportcases_UpdateDisconnectedChannelRequest;
@class GTLRSupportcases_UpdateEligibleProgramRequest;
@class GTLRSupportcases_UpdateEmailRequest;
@class GTLRSupportcases_UpdateLocaleRequest;
@class GTLRSupportcases_UpdateNoteRequest;
@class GTLRSupportcases_UpdateProductRequest;
@class GTLRSupportcases_UpdateSummaryRequest;
@class GTLRSupportcases_UpdateWorkflowRequest;
@class GTLRSupportcases_ValidateConsultFormRequest;
@class GTLRSupportcases_VerifyGiftCardRequest;
@class GTLRSupportcases_WaitForConsultRequest;

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// accountSignals

/** Value: "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsAccountSignalTypeUnspecified;
/** Value: "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsCustomerBvidDocsSubmissionStatus;
/** Value: "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsCustomerOfflineCheckDocsSubmissionStatus;
/** Value: "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsCustomerRiskDocsSubmissionStatus;
/** Value: "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsCustomerSanctionsDocsSubmissionStatus;
/** Value: "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsGaiaAccountCheckoutServiceStatus;
/** Value: "HAS_POSITIVE_WALLET_BALANCE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsHasPositiveWalletBalance;
/** Value: "IS_VIP" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsIsVip;
/** Value: "MOST_RECENT_TRANSACTION_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesAccountSignalsMostRecentTransactionType;

// ----------------------------------------------------------------------------
// caseType

/** Value: "ASSIGNED" */
GTLR_EXTERN NSString * const kGTLRSupportcasesCaseTypeAssigned;
/** Value: "RECENT" */
GTLR_EXTERN NSString * const kGTLRSupportcasesCaseTypeRecent;
/** Value: "UNKNOWN_CASE_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesCaseTypeUnknownCaseType;
/** Value: "WAITING" */
GTLR_EXTERN NSString * const kGTLRSupportcasesCaseTypeWaiting;

// ----------------------------------------------------------------------------
// channels

/** Value: "ADOPTION" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsAdoption;
/** Value: "CHAT" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsChat;
/** Value: "EMAIL" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsEmail;
/** Value: "GOAL" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsGoal;
/** Value: "HANGOUT" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsHangout;
/** Value: "INCENTIVE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsIncentive;
/** Value: "MARKETING_EMAIL" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsMarketingEmail;
/** Value: "MEETING" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsMeeting;
/** Value: "NOTE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsNote;
/** Value: "PHONE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsPhone;
/** Value: "STUB" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsStub;
/** Value: "TRAX" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsTrax;
/** Value: "UNKNOWN_EVENT_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsUnknownEventType;
/** Value: "WEB" */
GTLR_EXTERN NSString * const kGTLRSupportcasesChannelsWeb;

// ----------------------------------------------------------------------------
// replyType

/** Value: "REPLY" */
GTLR_EXTERN NSString * const kGTLRSupportcasesReplyTypeReply;
/** Value: "REPLY_ALL" */
GTLR_EXTERN NSString * const kGTLRSupportcasesReplyTypeReplyAll;
/** Value: "UNKNOWN_REPLY_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesReplyTypeUnknownReplyType;

// ----------------------------------------------------------------------------
// requestedSettingTypes

/** Value: "AGENT_SETTING" */
GTLR_EXTERN NSString * const kGTLRSupportcasesRequestedSettingTypesAgentSetting;
/** Value: "SEARCH_SETTING" */
GTLR_EXTERN NSString * const kGTLRSupportcasesRequestedSettingTypesSearchSetting;
/** Value: "UNKNOWN_AGENT_SETTING_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesRequestedSettingTypesUnknownAgentSettingType;

// ----------------------------------------------------------------------------
// state

/** Value: "RMA_CANCELLED" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateRmaCancelled;
/** Value: "RMA_COMPLETED" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateRmaCompleted;
/** Value: "RMA_INCOMPLETE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateRmaIncomplete;
/** Value: "RMA_PENDING" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateRmaPending;
/** Value: "RMA_SUBMITTED" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateRmaSubmitted;
/** Value: "UNKNOWN_RMA_STATE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesStateUnknownRmaState;

// ----------------------------------------------------------------------------
// troubleshooterType

/** Value: "NOE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTroubleshooterTypeNoe;
/** Value: "PLAY_APPS" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTroubleshooterTypePlayApps;
/** Value: "PLAY_PURCHASES" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTroubleshooterTypePlayPurchases;
/** Value: "TROUBLESHOOTER_TYPE_NOT_SET" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTroubleshooterTypeTroubleshooterTypeNotSet;

// ----------------------------------------------------------------------------
// type

/** Value: "CANNED_RESPONSE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTypeCannedResponse;
/** Value: "HELP_CENTER" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTypeHelpCenter;
/** Value: "TROUBLE_SHOOTER" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTypeTroubleShooter;
/** Value: "UNKNOWN_RESOLUTION_TYPE" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTypeUnknownResolutionType;
/** Value: "WORKFLOW" */
GTLR_EXTERN NSString * const kGTLRSupportcasesTypeWorkflow;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Supportcases query classes.
 */
@interface GTLRSupportcasesQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Adds an agent activity.
 *
 *  Method: supportcases.agentActivities.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_AgentActivitiesCreate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentActivitiesCreateWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_AgentActivity.
 *
 *  Adds an agent activity.
 *
 *  @param object The @c GTLRSupportcases_CreateAgentActivityRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_AgentActivitiesCreate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateAgentActivityRequest *)object;

@end

/**
 *  Creates an agent activity from a help center deep link.
 *
 *  Method: supportcases.agentActivities.createFromHelpCenterDeepLink
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_AgentActivitiesCreateFromHelpCenterDeepLink : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentActivitiesCreateFromHelpCenterDeepLinkWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_AgentActivity.
 *
 *  Creates an agent activity from a help center deep link.
 *
 *  @param object The @c GTLRSupportcases_CreateFromHelpCenterDeepLinkRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_AgentActivitiesCreateFromHelpCenterDeepLink
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateFromHelpCenterDeepLinkRequest *)object;

@end

/**
 *  Lists an agent activities.
 *
 *  Method: supportcases.agentActivities.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentActivitiesList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentActivitiesList]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSupportcases_ListAgentActivitiesResponse.
 *
 *  Lists an agent activities.
 *
 *  @returns GTLRSupportcasesQuery_AgentActivitiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets agent setting for the agent id in the resource name. If agent id is
 *  "me", get agent setting for the current logged in agent.
 *
 *  Method: supportcases.agentSettings.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_AgentSetting.
 *
 *  Gets agent setting for the agent id in the resource name. If agent id is
 *  "me", get agent setting for the current logged in agent.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets phone setting for the given agent id. If agent id is "me", gets phone
 *  setting for the agent currently logged in. This call is already deprecated.
 *
 *  Method: supportcases.agentSettings.getPhoneSetting
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsGetPhoneSetting : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsGetPhoneSettingWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetPhoneSettingResponse.
 *
 *  Gets phone setting for the given agent id. If agent id is "me", gets phone
 *  setting for the agent currently logged in. This call is already deprecated.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsGetPhoneSetting
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets agent's real time setting for the given agent id in the resource name.
 *  If agent id is "me", use the current logged in agent.
 *
 *  Method: supportcases.agentSettings.getRealTimeSetting
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsGetRealTimeSetting : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsGetRealTimeSettingWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RealTimeSetting.
 *
 *  Gets agent's real time setting for the given agent id in the resource name.
 *  If agent id is "me", use the current logged in agent.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsGetRealTimeSetting
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets agent's search settings for the agent id in the resource name. If agent
 *  id is "me", use the current logged in agent.
 *
 *  Method: supportcases.agentSettings.getSearchSetting
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsGetSearchSetting : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsGetSearchSettingWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SearchSetting.
 *
 *  Gets agent's search settings for the agent id in the resource name. If agent
 *  id is "me", use the current logged in agent.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsGetSearchSetting
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List all agent settings.
 *
 *  Method: supportcases.agentSettings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsList]

/**
 *  Fetches a @c GTLRSupportcases_ListAgentSettingsResponse.
 *
 *  List all agent settings.
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsList
 */
+ (instancetype)query;

@end

/**
 *  Lists settings for the agent id in the resource name. If agent id is "me",
 *  get agent setting for the current logged in agent.
 *
 *  Method: supportcases.agentSettings.listSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AgentSettingsListSettings : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsListSettingsWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  requestedSettingTypes
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesRequestedSettingTypesAgentSetting Value
 *        "AGENT_SETTING"
 *    @arg @c kGTLRSupportcasesRequestedSettingTypesSearchSetting Value
 *        "SEARCH_SETTING"
 *    @arg @c kGTLRSupportcasesRequestedSettingTypesUnknownAgentSettingType
 *        Value "UNKNOWN_AGENT_SETTING_TYPE"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *requestedSettingTypes;

/**
 *  Fetches a @c GTLRSupportcases_ListSettingsResponse.
 *
 *  Lists settings for the agent id in the resource name. If agent id is "me",
 *  get agent setting for the current logged in agent.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsListSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates search settings for the agent id in the resource name. If agent id
 *  is "me", use the current logged in agent.
 *
 *  Method: supportcases.agentSettings.updateSearchSetting
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_AgentSettingsUpdateSearchSetting : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAgentSettingsUpdateSearchSettingWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SearchSetting.
 *
 *  Updates search settings for the agent id in the resource name. If agent id
 *  is "me", use the current logged in agent.
 *
 *  @param object The @c GTLRSupportcases_SearchSetting to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AgentSettingsUpdateSearchSetting
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SearchSetting *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the specified attribute.
 *
 *  Method: supportcases.attributes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_AttributesGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForAttributesGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Attribute.
 *
 *  Gets the specified attribute.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_AttributesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Assigns the specified case.
 *
 *  Method: supportcases.cases.assign
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesAssign : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesAssignWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_AssignResponse.
 *
 *  Assigns the specified case.
 *
 *  @param object The @c GTLRSupportcases_AssignRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesAssign
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_AssignRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates attributes for a case in batch.
 *
 *  Method: supportcases.cases.attributes.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesAttributesBatchUpdate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesAttributesBatchUpdateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_BatchUpdateAttributesResponse.
 *
 *  Updates attributes for a case in batch.
 *
 *  @param object The @c GTLRSupportcases_BatchUpdateAttributesRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesAttributesBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_BatchUpdateAttributesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates attributes for the specified case. Note: This call adds the
 *  attributes that are not present on the case to the case. If attribute is
 *  already present on the case, the value is replaced.
 *
 *  Method: supportcases.cases.attributes.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesAttributesUpdate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesAttributesUpdateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateAttributesResponse.
 *
 *  Updates attributes for the specified case. Note: This call adds the
 *  attributes that are not present on the case to the case. If attribute is
 *  already present on the case, the value is replaced.
 *
 *  @param object The @c GTLRSupportcases_UpdateAttributesRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesAttributesUpdate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAttributesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Auto assign a case to the calling user.
 *
 *  Method: supportcases.cases.autoAssign
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesAutoAssign : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesAutoAssignWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_AutoAssignResponse.
 *
 *  Auto assign a case to the calling user.
 *
 *  @param object The @c GTLRSupportcases_AutoAssignRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_CasesAutoAssign
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_AutoAssignRequest *)object;

@end

/**
 *  Indicate the specified case is blocked by a bug/case/legal order, etc.
 *
 *  Method: supportcases.cases.block
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesBlock : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesBlockWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_BlockResponse.
 *
 *  Indicate the specified case is blocked by a bug/case/legal order, etc.
 *
 *  @param object The @c GTLRSupportcases_BlockRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesBlock
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_BlockRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a callback. Deauthenticates customer.
 *
 *  Method: supportcases.cases.callBack
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCallBack : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCallBackWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CallBackResponse.
 *
 *  Makes a callback. Deauthenticates customer.
 *
 *  @param object The @c GTLRSupportcases_CallBackRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCallBack
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CallBackRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new case (Note this is not a true CRUD method as no resource is
 *  being passed in).
 *
 *  Method: supportcases.cases.createNewCase
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCreateNewCase : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCreateNewCaseWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CreateNewCaseResponse.
 *
 *  Creates a new case (Note this is not a true CRUD method as no resource is
 *  being passed in).
 *
 *  @param object The @c GTLRSupportcases_CreateNewCaseRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_CasesCreateNewCase
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNewCaseRequest *)object;

@end

/**
 *  Creates a consult case via note channel for this case.
 *
 *  Method: supportcases.cases.createNoteConsult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCreateNoteConsult : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCreateNoteConsultWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CreateNoteConsultCaseResponse.
 *
 *  Creates a consult case via note channel for this case.
 *
 *  @param object The @c GTLRSupportcases_CreateNoteConsultCaseRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCreateNoteConsult
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNoteConsultCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a consult case via RealTime channel for this case.
 *
 *  Method: supportcases.cases.createRealTimeConsult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCreateRealTimeConsult : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCreateRealTimeConsultWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CreateRealTimeConsultCaseResponse.
 *
 *  Creates a consult case via RealTime channel for this case.
 *
 *  @param object The @c GTLRSupportcases_CreateRealTimeConsultCaseRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCreateRealTimeConsult
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateRealTimeConsultCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Authenticates a customer for a case.
 *
 *  Method: supportcases.cases.customer.authenticate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerAuthenticate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerAuthenticateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_AuthenticateResponse.
 *
 *  Authenticates a customer for a case.
 *
 *  @param object The @c GTLRSupportcases_AuthenticateRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerAuthenticate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_AuthenticateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists customer billing addresses. Only intended for use by the Cases
 *  frontend.
 *
 *  Method: supportcases.cases.customer.billingAddresses
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerBillingAddresses : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerBillingAddressesWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListBillingAddressesResponse.
 *
 *  Lists customer billing addresses. Only intended for use by the Cases
 *  frontend.
 *
 *  @param object The @c GTLRSupportcases_ListBillingAddressesRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerBillingAddresses
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListBillingAddressesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Check if a customer has a valid Wallet account. Suppresses warning: GET
 *  requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.cases.customer.checkWalletAccount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerCheckWalletAccount : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerCheckWalletAccountWithname:]

@property(nonatomic, copy, nullable) NSString *email;

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CheckWalletAccountResponse.
 *
 *  Check if a customer has a valid Wallet account. Suppresses warning: GET
 *  requires method name starting with "Get" or "List"
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerCheckWalletAccount
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Sets a callback phone number.
 *
 *  Method: supportcases.cases.customer.contact.callbackNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerContactCallbackNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerContactCallbackNumberWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SetCallbackNumberResponse.
 *
 *  Sets a callback phone number.
 *
 *  @param object The @c GTLRSupportcases_SetCallbackNumberRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerContactCallbackNumber
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SetCallbackNumberRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the callback phone number associated with a case.
 *
 *  Method: supportcases.cases.customer.contact.getCallbackNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerContactGetCallbackNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerContactGetCallbackNumberWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_PhoneNumber.
 *
 *  Gets the callback phone number associated with a case.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerContactGetCallbackNumber
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deauthenticates a customer for a case.
 *
 *  Method: supportcases.cases.customer.deauthenticate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerDeauthenticate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerDeauthenticateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_DeauthenticateResponse.
 *
 *  Deauthenticates a customer for a case.
 *
 *  @param object The @c GTLRSupportcases_DeauthenticateRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerDeauthenticate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_DeauthenticateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get credit card types for authentication.
 *
 *  Method: supportcases.cases.customer.getAuthenticationCreditCardTypes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerGetAuthenticationCreditCardTypes : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerGetAuthenticationCreditCardTypesWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetAuthenticationCreditCardTypesResponse.
 *
 *  Get credit card types for authentication.
 *
 *  @param object The @c
 *    GTLRSupportcases_GetAuthenticationCreditCardTypesRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerGetAuthenticationCreditCardTypes
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationCreditCardTypesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get authentication options for a customer for a case.
 *
 *  Method: supportcases.cases.customer.getAuthenticationQuestions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerGetAuthenticationQuestions : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerGetAuthenticationQuestionsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetAuthenticationQuestionsResponse.
 *
 *  Get authentication options for a customer for a case.
 *
 *  @param object The @c GTLRSupportcases_GetAuthenticationQuestionsRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerGetAuthenticationQuestions
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationQuestionsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get authentication status for a customer of a case.
 *
 *  Method: supportcases.cases.customer.getAuthenticationResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerGetAuthenticationResult : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerGetAuthenticationResultWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetAuthenticationResultResponse.
 *
 *  Get authentication status for a customer of a case.
 *
 *  @param object The @c GTLRSupportcases_GetAuthenticationResultRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerGetAuthenticationResult
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationResultRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the business listings for a customer.
 *
 *  Method: supportcases.cases.customer.getBusinessListings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerGetBusinessListings : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerGetBusinessListingsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetBusinessListingsResponse.
 *
 *  Gets the business listings for a customer.
 *
 *  @param object The @c GTLRSupportcases_GetBusinessListingsRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerGetBusinessListings
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetBusinessListingsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists customer shipping addresses. Only intended for use by the Cases
 *  frontend.
 *
 *  Method: supportcases.cases.customer.shippingAddresses
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesCustomerShippingAddresses : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerShippingAddressesWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListShippingAddressesResponse.
 *
 *  Lists customer shipping addresses. Only intended for use by the Cases
 *  frontend.
 *
 *  @param object The @c GTLRSupportcases_ListShippingAddressesRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerShippingAddresses
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListShippingAddressesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates contact email for the specified case.
 *
 *  Method: supportcases.cases.customer.updateContactEmail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerUpdateContactEmail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerUpdateContactEmailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateContactEmailResponse.
 *
 *  Updates contact email for the specified case.
 *
 *  @param object The @c GTLRSupportcases_UpdateContactEmailRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerUpdateContactEmail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateContactEmailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates contact name for the specified case.
 *
 *  Method: supportcases.cases.customer.updateContactName
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerUpdateContactName : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerUpdateContactNameWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateContactNameResponse.
 *
 *  Updates contact name for the specified case.
 *
 *  @param object The @c GTLRSupportcases_UpdateContactNameRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerUpdateContactName
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateContactNameRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates customer attributes for the specified case.
 *
 *  Method: supportcases.cases.customer.updateCustomerAttributes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesCustomerUpdateCustomerAttributes : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesCustomerUpdateCustomerAttributesWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateCustomerAttributesResponse.
 *
 *  Updates customer attributes for the specified case.
 *
 *  @param object The @c GTLRSupportcases_UpdateCustomerAttributesRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesCustomerUpdateCustomerAttributes
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateCustomerAttributesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deduplicates a case by closing duplicates cases.
 *
 *  Method: supportcases.cases.dedupe
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesDedupe : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesDedupeWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_DedupeResponse.
 *
 *  Deduplicates a case by closing duplicates cases.
 *
 *  @param object The @c GTLRSupportcases_DedupeRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesDedupe
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_DedupeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Escalates a case.
 *
 *  Method: supportcases.cases.escalate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesEscalate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesEscalateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_EscalateResponse.
 *
 *  Escalates a case.
 *
 *  @param object The @c GTLRSupportcases_EscalateRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesEscalate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_EscalateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the specified case to the finished state and triggers other finisher
 *  related workflows.
 *
 *  Method: supportcases.cases.finish
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesFinish : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesFinishWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_FinishResponse.
 *
 *  Sets the specified case to the finished state and triggers other finisher
 *  related workflows.
 *
 *  @param object The @c GTLRSupportcases_FinishRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesFinish
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_FinishRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the specified case.
 *
 *  Method: supportcases.cases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Case.
 *
 *  Gets the specified case.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the search count for cases associated with the calling agent, and begin
 *  sending Tango notifications when the count changes.
 *
 *  Method: supportcases.cases.getAgentSearchCount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesGetAgentSearchCount : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesGetAgentSearchCount]

/**
 *  Fetches a @c GTLRSupportcases_GetAgentSearchCountResponse.
 *
 *  Gets the search count for cases associated with the calling agent, and begin
 *  sending Tango notifications when the count changes.
 *
 *  @returns GTLRSupportcasesQuery_CasesGetAgentSearchCount
 */
+ (instancetype)query;

@end

/**
 *  Gets information about unread cases for the calling agent. Only intended for
 *  use by the Cases frontend.
 *
 *  Method: supportcases.cases.getAgentUnreadCasesInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesGetAgentUnreadCasesInfo : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesGetAgentUnreadCasesInfo]

/**
 *  Fetches a @c GTLRSupportcases_GetAgentUnreadCasesInfoResponse.
 *
 *  Gets information about unread cases for the calling agent. Only intended for
 *  use by the Cases frontend.
 *
 *  @returns GTLRSupportcasesQuery_CasesGetAgentUnreadCasesInfo
 */
+ (instancetype)query;

@end

/**
 *  Calculates the SLA due by time that a new consult case would have.
 *
 *  Method: supportcases.cases.getConsultSla
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesGetConsultSla : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesGetConsultSlaWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetConsultSlaResponse.
 *
 *  Calculates the SLA due by time that a new consult case would have.
 *
 *  @param object The @c GTLRSupportcases_GetConsultSlaRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesGetConsultSla
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetConsultSlaRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates agent categories for the specified case. Note: This call replaces
 *  categories on the case by new categories passed in the request.
 *
 *  Method: supportcases.cases.issue.product.updateAgentCategories
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesIssueProductUpdateAgentCategories : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesIssueProductUpdateAgentCategoriesWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateAgentCategoriesResponse.
 *
 *  Updates agent categories for the specified case. Note: This call replaces
 *  categories on the case by new categories passed in the request.
 *
 *  @param object The @c GTLRSupportcases_UpdateAgentCategoriesRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesIssueProductUpdateAgentCategories
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAgentCategoriesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates case's accounts.
 *
 *  Method: supportcases.cases.issue.updateAccounts
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesIssueUpdateAccounts : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesIssueUpdateAccountsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateAccountsResponse.
 *
 *  Updates case's accounts.
 *
 *  @param object The @c GTLRSupportcases_UpdateAccountsRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesIssueUpdateAccounts
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAccountsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the case's issue locale.
 *
 *  Method: supportcases.cases.issue.updateLocale
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesIssueUpdateLocale : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesIssueUpdateLocaleWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateLocaleResponse.
 *
 *  Updates the case's issue locale.
 *
 *  @param object The @c GTLRSupportcases_UpdateLocaleRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesIssueUpdateLocale
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateLocaleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates product for the specified case.
 *
 *  Method: supportcases.cases.issue.updateProduct
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesIssueUpdateProduct : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesIssueUpdateProductWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Product.
 *
 *  Updates product for the specified case.
 *
 *  @param object The @c GTLRSupportcases_UpdateProductRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesIssueUpdateProduct
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateProductRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates case's issue summary.
 *
 *  Method: supportcases.cases.issue.updateSummary
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesIssueUpdateSummary : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesIssueUpdateSummaryWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateSummaryResponse.
 *
 *  Updates case's issue summary.
 *
 *  @param object The @c GTLRSupportcases_UpdateSummaryRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesIssueUpdateSummary
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateSummaryRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists cases associated with the agent. Only intended for use by the Cases
 *  frontend.
 *
 *  Method: supportcases.cases.listByAgent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesListByAgent : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesListByAgent]

/**
 *  caseType
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesCaseTypeAssigned Value "ASSIGNED"
 *    @arg @c kGTLRSupportcasesCaseTypeRecent Value "RECENT"
 *    @arg @c kGTLRSupportcasesCaseTypeUnknownCaseType Value "UNKNOWN_CASE_TYPE"
 *    @arg @c kGTLRSupportcasesCaseTypeWaiting Value "WAITING"
 */
@property(nonatomic, copy, nullable) NSString *caseType;

@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSupportcases_ListCasesByAgentResponse.
 *
 *  Lists cases associated with the agent. Only intended for use by the Cases
 *  frontend.
 *
 *  @returns GTLRSupportcasesQuery_CasesListByAgent
 */
+ (instancetype)query;

@end

/**
 *  Sets the specified case to the needs info state.
 *
 *  Method: supportcases.cases.needsInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesNeedsInfo : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesNeedsInfoWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_NeedsInfoResponse.
 *
 *  Sets the specified case to the needs info state.
 *
 *  @param object The @c GTLRSupportcases_NeedsInfoRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesNeedsInfo
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_NeedsInfoRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the specified case to the solution offered state indicating that a
 *  previous communication was a "solution".
 *
 *  Method: supportcases.cases.offeredSolution
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesOfferedSolution : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesOfferedSolutionWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_OfferedSolutionResponse.
 *
 *  Sets the specified case to the solution offered state indicating that a
 *  previous communication was a "solution".
 *
 *  @param object The @c GTLRSupportcases_OfferedSolutionRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesOfferedSolution
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_OfferedSolutionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Marks a case as read by the calling agent if they are the assignee.
 *
 *  Method: supportcases.cases.read
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesRead : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesReadWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Marks a case as read by the calling agent if they are the assignee.
 *
 *  @param object The @c GTLRSupportcases_ReadCaseRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesRead
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ReadCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Unassigns the specified case from the gaia user associated with this call.
 *
 *  Method: supportcases.cases.release
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesRelease : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesReleaseWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ReleaseResponse.
 *
 *  Unassigns the specified case from the gaia user associated with this call.
 *
 *  @param object The @c GTLRSupportcases_ReleaseRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesRelease
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ReleaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Routes the specified case to another product or team.
 *
 *  Method: supportcases.cases.route
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesRoute : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesRouteWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RouteResponse.
 *
 *  Routes the specified case to another product or team.
 *
 *  @param object The @c GTLRSupportcases_RouteRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesRoute
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RouteRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Marks the specified case as spam.
 *
 *  Method: supportcases.cases.spam
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesSpam : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesSpamWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SpamResponse.
 *
 *  Marks the specified case as spam.
 *
 *  @param object The @c GTLRSupportcases_SpamRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesSpam
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SpamRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Move a case's communication into a new case.
 *
 *  Method: supportcases.cases.split
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesSplit : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesSplitWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SplitResponse.
 *
 *  Move a case's communication into a new case.
 *
 *  @param object The @c GTLRSupportcases_SplitRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesSplit
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SplitRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Suggests a set of headers (like from aliases) for a new email on a case.
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.cases.suggestNewEmailHeaders
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesSuggestNewEmailHeaders : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesSuggestNewEmailHeadersWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SuggestNewEmailHeadersResponse.
 *
 *  Suggests a set of headers (like from aliases) for a new email on a case.
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesSuggestNewEmailHeaders
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Suggests a set of headers (like from aliases) for a note Suppresses warning:
 *  GET requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.cases.suggestNoteHeaders
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesSuggestNoteHeaders : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesSuggestNoteHeadersWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SuggestNoteHeadersResponse.
 *
 *  Suggests a set of headers (like from aliases) for a note Suppresses warning:
 *  GET requires method name starting with "Get" or "List"
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesSuggestNoteHeaders
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Assigns the specified case to the gaia user associated with this call.
 *
 *  Method: supportcases.cases.take
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesTake : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesTakeWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_TakeResponse.
 *
 *  Assigns the specified case to the gaia user associated with this call.
 *
 *  @param object The @c GTLRSupportcases_TakeRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesTake
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_TakeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Transfers the specified case from the gaia user associated with this call to
 *  another user.
 *
 *  Method: supportcases.cases.transfer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesTransfer : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesTransferWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_TransferResponse.
 *
 *  Transfers the specified case from the gaia user associated with this call to
 *  another user.
 *
 *  @param object The @c GTLRSupportcases_TransferRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesTransfer
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_TransferRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Unassigns the specified case from its current assignee. Note that this also
 *  moves the case to the UNASSIGNED state.
 *
 *  Method: supportcases.cases.unassign
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesUnassign : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesUnassignWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UnassignResponse.
 *
 *  Unassigns the specified case from its current assignee. Note that this also
 *  moves the case to the UNASSIGNED state.
 *
 *  @param object The @c GTLRSupportcases_UnassignRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesUnassign
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UnassignRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Indicate the specified case is no longer blocked by a bug/case/ legal order,
 *  etc.
 *
 *  Method: supportcases.cases.unblock
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesUnblock : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesUnblockWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UnblockResponse.
 *
 *  Indicate the specified case is no longer blocked by a bug/case/ legal order,
 *  etc.
 *
 *  @param object The @c GTLRSupportcases_UnblockRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesUnblock
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UnblockRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Unmark the specified case as spam.
 *
 *  Method: supportcases.cases.unspam
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesUnspam : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesUnspamWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UnspamResponse.
 *
 *  Unmark the specified case as spam.
 *
 *  @param object The @c GTLRSupportcases_UnspamRequest to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesUnspam
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UnspamRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates disconnected channel for the specified case.
 *
 *  Method: supportcases.cases.updateDisconnectedChannel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesUpdateDisconnectedChannel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesUpdateDisconnectedChannelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Updates disconnected channel for the specified case.
 *
 *  @param object The @c GTLRSupportcases_UpdateDisconnectedChannelRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesUpdateDisconnectedChannel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateDisconnectedChannelRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Update customer attributes indicating eligibility for opportunities.
 *
 *  Method: supportcases.cases.updateEligibleProgram
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesUpdateEligibleProgram : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesUpdateEligibleProgramWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateEligibleProgramResponse.
 *
 *  Update customer attributes indicating eligibility for opportunities.
 *
 *  @param object The @c GTLRSupportcases_UpdateEligibleProgramRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesUpdateEligibleProgram
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateEligibleProgramRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Validates that consult forms are properly configured.
 *
 *  Method: supportcases.cases.validateConsultForm
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_CasesValidateConsultForm : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesValidateConsultFormWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ValidateConsultFormResponse.
 *
 *  Validates that consult forms are properly configured.
 *
 *  @param object The @c GTLRSupportcases_ValidateConsultFormRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_CasesValidateConsultForm
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ValidateConsultFormRequest *)object;

@end

/**
 *  Sets a case with an active consult case to IN_CONSULT state.
 *
 *  Method: supportcases.cases.waitForConsult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesWaitForConsult : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesWaitForConsultWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_WaitForConsultResponse.
 *
 *  Sets a case with an active consult case to IN_CONSULT state.
 *
 *  @param object The @c GTLRSupportcases_WaitForConsultRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesWaitForConsult
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_WaitForConsultRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get workflow state.
 *
 *  Method: supportcases.cases.workflows.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CasesWorkflowsGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesWorkflowsGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CasesWorkflow.
 *
 *  Get workflow state.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesWorkflowsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new workflow state on a case.
 *
 *  Method: supportcases.cases.workflows.post
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesWorkflowsPost : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesWorkflowsPostWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CasesWorkflow.
 *
 *  Creates a new workflow state on a case.
 *
 *  @param object The @c GTLRSupportcases_CreateWorkflowRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesWorkflowsPost
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateWorkflowRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates workflow state.
 *
 *  Method: supportcases.cases.workflows.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CasesWorkflowsUpdate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCasesWorkflowsUpdateWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CasesWorkflow.
 *
 *  Updates workflow state.
 *
 *  @param object The @c GTLRSupportcases_UpdateWorkflowRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CasesWorkflowsUpdate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateWorkflowRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Batch gets category info. (Best effort, returns valid category infos only)
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.categoryInfos.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosBatchGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosBatchGet]

@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Fetches a @c GTLRSupportcases_BatchGetCategoryInfosResponse.
 *
 *  Batch gets category info. (Best effort, returns valid category infos only)
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosBatchGet
 */
+ (instancetype)query;

@end

/**
 *  Gets the specified category info.
 *
 *  Method: supportcases.categoryInfos.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CategoryInfo.
 *
 *  Gets the specified category info.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists children category info.
 *
 *  Method: supportcases.categoryInfos.listChildren
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosListChildren : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosListChildrenWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListChildrenCategoryInfosResponse.
 *
 *  Lists children category info.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosListChildren
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists gKMS top level category info.
 *
 *  Method: supportcases.categoryInfos.listTopLevel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosListTopLevel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosListTopLevel]

/**
 *  Fetches a @c GTLRSupportcases_ListTopLevelCategoryInfosResponse.
 *
 *  Lists gKMS top level category info.
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosListTopLevel
 */
+ (instancetype)query;

@end

/**
 *  Lists all properties associated with a category info.
 *
 *  Method: supportcases.categoryInfos.properties.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosPropertiesList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosPropertiesListWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListPropertiesResponse.
 *
 *  Lists all properties associated with a category info.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosPropertiesList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Searches category info. Suppresses warning: GET requires method name
 *  starting with "Get" or "List"
 *
 *  Method: supportcases.categoryInfos.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosSearch : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosSearch]

@property(nonatomic, assign) BOOL baselineOnly;

@property(nonatomic, assign) NSInteger filterByParentCategoryId;

@property(nonatomic, assign) BOOL filterConsultCategories;

@property(nonatomic, assign) NSInteger maximumResults;

@property(nonatomic, strong, nullable) NSArray<NSString *> *productIds;

@property(nonatomic, copy, nullable) NSString *query;

/**
 *  topCategoryPathNodeIds
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *topCategoryPathNodeIds;

/**
 *  Fetches a @c GTLRSupportcases_SearchCategoryInfosResponse.
 *
 *  Searches category info. Suppresses warning: GET requires method name
 *  starting with "Get" or "List"
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosSearch
 */
+ (instancetype)query;

@end

/**
 *  Searches multiple category info.
 *
 *  Method: supportcases.categoryInfos.searchMultiple
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CategoryInfosSearchMultiple : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCategoryInfosSearchMultipleWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SearchCategoryInfosResponse.
 *
 *  Searches multiple category info.
 *
 *  @param object The @c GTLRSupportcases_SearchMultipleCategoryInfosRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_CategoryInfosSearchMultiple
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SearchMultipleCategoryInfosRequest *)object;

@end

/**
 *  Deletes an attachment from a draft.
 *
 *  Method: supportcases.communications.attachments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsAttachmentsDelete : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsAttachmentsDeleteWithname:]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Deletes an attachment from a draft.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsAttachmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Builds an email template for the first email on a case.
 *
 *  Method: supportcases.communications.buildNewEmail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CommunicationsBuildNewEmail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsBuildNewEmailWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_BuildNewEmailResponse.
 *
 *  Builds an email template for the first email on a case.
 *
 *  @param object The @c GTLRSupportcases_BuildNewEmailRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsBuildNewEmail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_BuildNewEmailRequest *)object;

@end

/**
 *  Builds an email template for a reply to an existing email.
 *
 *  Method: supportcases.communications.buildReplyEmail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CommunicationsBuildReplyEmail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsBuildReplyEmailWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_BuildReplyEmailResponse.
 *
 *  Builds an email template for a reply to an existing email.
 *
 *  @param object The @c GTLRSupportcases_BuildReplyEmailRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsBuildReplyEmail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_BuildReplyEmailRequest *)object;

@end

/**
 *  Cancel a pending send (for email only).
 *
 *  Method: supportcases.communications.cancelSend
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsCancelSend : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsCancelSendWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancel a pending send (for email only).
 *
 *  @param object The @c GTLRSupportcases_CancelSendRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsCancelSend
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelSendRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a draft note that replies to a consult note.
 *
 *  Method: supportcases.communications.createConsultNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsCreateConsultNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsCreateConsultNoteWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CreateConsultNoteResponse.
 *
 *  Creates a draft note that replies to a consult note.
 *
 *  @param object The @c GTLRSupportcases_CreateConsultNoteRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsCreateConsultNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateConsultNoteRequest *)object;

@end

/**
 *  Creates a draft email and adds it to a case.
 *
 *  Method: supportcases.communications.createEmail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsCreateEmail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsCreateEmailWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CreateEmailResponse.
 *
 *  Creates a draft email and adds it to a case.
 *
 *  @param object The @c GTLRSupportcases_CreateEmailRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsCreateEmail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateEmailRequest *)object;

@end

/**
 *  Creates a note.
 *
 *  Method: supportcases.communications.createNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsCreateNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsCreateNoteWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CreateNoteResponse.
 *
 *  Creates a note.
 *
 *  @param object The @c GTLRSupportcases_CreateNoteRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsCreateNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNoteRequest *)object;

@end

/**
 *  Discards a draft communication.
 *
 *  Method: supportcases.communications.discardDraft
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsDiscardDraft : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsDiscardDraftWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_DiscardDraftResponse.
 *
 *  Discards a draft communication.
 *
 *  @param object The @c GTLRSupportcases_DiscardDraftRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsDiscardDraft
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_DiscardDraftRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Finalizes and sends a draft note for a consult case.
 *
 *  Method: supportcases.communications.finalizeConsultNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsFinalizeConsultNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsFinalizeConsultNoteWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_FinalizeConsultNoteResponse.
 *
 *  Finalizes and sends a draft note for a consult case.
 *
 *  @param object The @c GTLRSupportcases_FinalizeConsultNoteRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsFinalizeConsultNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_FinalizeConsultNoteRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Finalize a note (a note cannot be updated after it is finalized).
 *
 *  Method: supportcases.communications.finalizeNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsFinalizeNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsFinalizeNoteWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_FinalizeNoteResponse.
 *
 *  Finalize a note (a note cannot be updated after it is finalized).
 *
 *  @param object The @c GTLRSupportcases_FinalizeNoteRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsFinalizeNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_FinalizeNoteRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists communications that match the filter.
 *
 *  Method: supportcases.communications.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CommunicationsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsList]

@property(nonatomic, strong, nullable) NSArray<NSString *> *caseIds;

/**
 *  Fetches a @c GTLRSupportcases_ListCommunicationsResponse.
 *
 *  Lists communications that match the filter.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsList
 */
+ (instancetype)query;

@end

/**
 *  Lists communications that are related to each other, including the
 *  communications on the requested case. Related communications include consult
 *  communications from target cases. Currently, only related communications
 *  from consult cases are supported.
 *
 *  Method: supportcases.communications.listRelated
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CommunicationsListRelated : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsListRelated]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *contextCaseId;

/**
 *  Fetches a @c GTLRSupportcases_ListRelatedCommunicationsResponse.
 *
 *  Lists communications that are related to each other, including the
 *  communications on the requested case. Related communications include consult
 *  communications from target cases. Currently, only related communications
 *  from consult cases are supported.
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsListRelated
 */
+ (instancetype)query;

@end

/**
 *  Sends a draft email. This finalizes the email.
 *
 *  Method: supportcases.communications.send
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsSend : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsSendWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_SendEmailResponse.
 *
 *  Sends a draft email. This finalizes the email.
 *
 *  @param object The @c GTLRSupportcases_SendEmailRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsSend
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SendEmailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Suggests a set of email headers for an email reply to another email.
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.communications.suggestReplyEmailHeaders
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CommunicationsSuggestReplyEmailHeaders : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsSuggestReplyEmailHeaders]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  replyType
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesReplyTypeReply Value "REPLY"
 *    @arg @c kGTLRSupportcasesReplyTypeReplyAll Value "REPLY_ALL"
 *    @arg @c kGTLRSupportcasesReplyTypeUnknownReplyType Value
 *        "UNKNOWN_REPLY_TYPE"
 */
@property(nonatomic, copy, nullable) NSString *replyType;

/**
 *  Fetches a @c GTLRSupportcases_SuggestReplyEmailHeadersResponse.
 *
 *  Suggests a set of email headers for an email reply to another email.
 *  Suppresses warning: GET requires method name starting with "Get" or "List"
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsSuggestReplyEmailHeaders
 */
+ (instancetype)query;

@end

/**
 *  Updates a draft consult note with new content.
 *
 *  Method: supportcases.communications.updateConsultNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsUpdateConsultNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsUpdateConsultNoteWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateConsultNoteResponse.
 *
 *  Updates a draft consult note with new content.
 *
 *  @param object The @c GTLRSupportcases_UpdateConsultNoteRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsUpdateConsultNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateConsultNoteRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a draft email.
 *
 *  Method: supportcases.communications.updateEmail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsUpdateEmail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsUpdateEmailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateEmailResponse.
 *
 *  Updates a draft email.
 *
 *  @param object The @c GTLRSupportcases_UpdateEmailRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsUpdateEmail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateEmailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a draft note.
 *
 *  Method: supportcases.communications.updateNote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_CommunicationsUpdateNote : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCommunicationsUpdateNoteWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_UpdateNoteResponse.
 *
 *  Updates a draft note.
 *
 *  @param object The @c GTLRSupportcases_UpdateNoteRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_CommunicationsUpdateNote
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateNoteRequest *)object
                           name:(NSString *)name;

@end

/**
 *  List customer interactions.
 *
 *  Method: supportcases.customerInteractions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CustomerInteractionsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCustomerInteractionsList]

@property(nonatomic, copy, nullable) NSString *adwordsCid;

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  channels
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesChannelsAdoption Value "ADOPTION"
 *    @arg @c kGTLRSupportcasesChannelsChat Value "CHAT"
 *    @arg @c kGTLRSupportcasesChannelsEmail Value "EMAIL"
 *    @arg @c kGTLRSupportcasesChannelsGoal Value "GOAL"
 *    @arg @c kGTLRSupportcasesChannelsHangout Value "HANGOUT"
 *    @arg @c kGTLRSupportcasesChannelsIncentive Value "INCENTIVE"
 *    @arg @c kGTLRSupportcasesChannelsMarketingEmail Value "MARKETING_EMAIL"
 *    @arg @c kGTLRSupportcasesChannelsMeeting Value "MEETING"
 *    @arg @c kGTLRSupportcasesChannelsNote Value "NOTE"
 *    @arg @c kGTLRSupportcasesChannelsPhone Value "PHONE"
 *    @arg @c kGTLRSupportcasesChannelsStub Value "STUB"
 *    @arg @c kGTLRSupportcasesChannelsTrax Value "TRAX"
 *    @arg @c kGTLRSupportcasesChannelsUnknownEventType Value
 *        "UNKNOWN_EVENT_TYPE"
 *    @arg @c kGTLRSupportcasesChannelsWeb Value "WEB"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *channels;

@property(nonatomic, copy, nullable) NSString *emailAddress;

@property(nonatomic, strong, nullable) NSArray<NSString *> *excludeCases;

@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, strong, nullable) NSArray<NSString *> *products;

/**
 *  Fetches a @c GTLRSupportcases_ListInteractionsResponse.
 *
 *  List customer interactions.
 *
 *  @returns GTLRSupportcasesQuery_CustomerInteractionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Summary statistics about the cutomer's interaction history. Suppresses
 *  warning: GET requires method name starting with "Get" or "List"
 *
 *  Method: supportcases.customerInteractions.summarize
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CustomerInteractionsSummarize : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCustomerInteractionsSummarize]

@property(nonatomic, copy, nullable) NSString *adwordsCid;

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *emailAddress;

@property(nonatomic, strong, nullable) NSArray<NSString *> *excludeCases;

@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  Fetches a @c GTLRSupportcases_SummarizeResponse.
 *
 *  Summary statistics about the cutomer's interaction history. Suppresses
 *  warning: GET requires method name starting with "Get" or "List"
 *
 *  @returns GTLRSupportcasesQuery_CustomerInteractionsSummarize
 */
+ (instancetype)query;

@end

/**
 *  List issues and their resolutions for a customer.
 *
 *  Method: supportcases.customerIssues.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_CustomerIssuesList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForCustomerIssuesList]

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  Fetches a @c GTLRSupportcases_ListCustomerIssuesResponse.
 *
 *  List issues and their resolutions for a customer.
 *
 *  @returns GTLRSupportcasesQuery_CustomerIssuesList
 */
+ (instancetype)query;

@end

/**
 *  Gets the specified device by any device ID.
 *
 *  Method: supportcases.devices.getById
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_DevicesGetById : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForDevicesGetById]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *deviceId;

/**
 *  Fetches a @c GTLRSupportcases_GetByDeviceIdResponse.
 *
 *  Gets the specified device by any device ID.
 *
 *  @returns GTLRSupportcasesQuery_DevicesGetById
 */
+ (instancetype)query;

@end

/**
 *  List devices.
 *
 *  Method: supportcases.devices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_DevicesList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForDevicesList]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *email;

@property(nonatomic, assign) BOOL excludeGoogleStoreOrders;

@property(nonatomic, assign) BOOL excludeRmaTypes;

@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSupportcases_ListDevicesResponse.
 *
 *  List devices.
 *
 *  @returns GTLRSupportcasesQuery_DevicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the owner of a device. Suppresses warning: GET requires method name
 *  starting with "Get" or "List"
 *
 *  Method: supportcases.devices.updateOwner
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_DevicesUpdateOwner : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForDevicesUpdateOwner]

@property(nonatomic, copy, nullable) NSString *addressAddressee;

@property(nonatomic, copy, nullable) NSString *addressAddressLine1;

@property(nonatomic, copy, nullable) NSString *addressAddressLine2;

@property(nonatomic, copy, nullable) NSString *addressAddressLine3;

@property(nonatomic, copy, nullable) NSString *addressCity;

@property(nonatomic, copy, nullable) NSString *addressCountryCode;

@property(nonatomic, copy, nullable) NSString *addressPostalCode;

@property(nonatomic, copy, nullable) NSString *addressStateProvinceCode;

@property(nonatomic, copy, nullable) NSString *deviceId;

@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Fetches a @c GTLRSupportcases_UpdateOwnerResponse.
 *
 *  Updates the owner of a device. Suppresses warning: GET requires method name
 *  starting with "Get" or "List"
 *
 *  @returns GTLRSupportcasesQuery_DevicesUpdateOwner
 */
+ (instancetype)query;

@end

/**
 *  If the card is already redeemed by somebody else, customer can try a few
 *  users.
 *
 *  Method: supportcases.giftCards.checkRedeemer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_GiftCardsCheckRedeemer : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForGiftCardsCheckRedeemerWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CheckRedeemerResponse.
 *
 *  If the card is already redeemed by somebody else, customer can try a few
 *  users.
 *
 *  @param object The @c GTLRSupportcases_CheckRedeemerRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_GiftCardsCheckRedeemer
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CheckRedeemerRequest *)object;

@end

/**
 *  Finds a gift card based on its full redemption code or activation number.
 *  With full redemption code, returns redemption token on success.
 *
 *  Method: supportcases.giftCards.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_GiftCardsLookup : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForGiftCardsLookupWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_LookupGiftCardResponse.
 *
 *  Finds a gift card based on its full redemption code or activation number.
 *  With full redemption code, returns redemption token on success.
 *
 *  @param object The @c GTLRSupportcases_LookupGiftCardRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_GiftCardsLookup
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_LookupGiftCardRequest *)object;

@end

/**
 *  Redeems a gift card to a customer using the redemption token.
 *
 *  Method: supportcases.giftCards.redeem
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_GiftCardsRedeem : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForGiftCardsRedeemWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_RedeemGiftCardResponse.
 *
 *  Redeems a gift card to a customer using the redemption token.
 *
 *  @param object The @c GTLRSupportcases_RedeemGiftCardRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_GiftCardsRedeem
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RedeemGiftCardRequest *)object;

@end

/**
 *  Verifies ownership of a damaged GC by checking if the activation number and
 *  partial redemption code are valid and refers to the same card. Returns the
 *  redemption token on success.
 *
 *  Method: supportcases.giftCards.verify
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_GiftCardsVerify : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForGiftCardsVerifyWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_VerifyGiftCardResponse.
 *
 *  Verifies ownership of a damaged GC by checking if the activation number and
 *  partial redemption code are valid and refers to the same card. Returns the
 *  redemption token on success.
 *
 *  @param object The @c GTLRSupportcases_VerifyGiftCardRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_GiftCardsVerify
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_VerifyGiftCardRequest *)object;

@end

/**
 *  Logs data access.
 *
 *  Method: supportcases.ginlogs.logDataAccess
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_GinlogsLogDataAccess : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForGinlogsLogDataAccessWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Logs data access.
 *
 *  @param object The @c GTLRSupportcases_LogDataAccessRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_GinlogsLogDataAccess
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_LogDataAccessRequest *)object;

@end

/**
 *  Cancels the hardware order.
 *
 *  Method: supportcases.hardwareAuditor.orders.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersCancelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancels the hardware order.
 *
 *  @param object The @c GTLRSupportcases_CancelHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets detail for a hardware order.
 *
 *  Method: supportcases.hardwareAuditor.orders.getDetail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersGetDetail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersGetDetailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_HardwareOrderDetail.
 *
 *  Gets detail for a hardware order.
 *
 *  @param object The @c GTLRSupportcases_GetHardwareOrderDetailRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersGetDetail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareOrderDetailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets shipping address for a purchase. Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareAuditor.orders.getShippingAddress
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingAddress : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersGetShippingAddressWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingAddress.
 *
 *  Gets shipping address for a purchase. Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingAddressRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingAddress
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer name for a hardware order Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareAuditor.orders.getShippingCustomerName
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerName : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersGetShippingCustomerNameWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerName.
 *
 *  Gets the shipping customer name for a hardware order Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerNameRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerName
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer phone number for a hardware order Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareAuditor.orders.getShippingCustomerPhoneNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerPhoneNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersGetShippingCustomerPhoneNumberWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerPhoneNumber.
 *
 *  Gets the shipping customer phone number for a hardware order Get by orderId:
 *  /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerPhoneNumberRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerPhoneNumber
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists hardware orders.
 *
 *  Method: supportcases.hardwareAuditor.orders.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersListWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareOrdersResponse.
 *
 *  Lists hardware orders.
 *
 *  @param object The @c GTLRSupportcases_ListHardwareOrdersRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersList
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareOrdersRequest *)object;

@end

/**
 *  Lists refunds for a hardware order.
 *
 *  Method: supportcases.hardwareAuditor.orders.refunds
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorOrdersRefunds : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorOrdersRefundsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareRefundsResponse.
 *
 *  Lists refunds for a hardware order.
 *
 *  @param object The @c GTLRSupportcases_ListHardwareRefundsRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorOrdersRefunds
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels the hardware order by shipment id.
 *
 *  Method: supportcases.hardwareAuditor.shipments.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareAuditorShipmentsCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorShipmentsCancelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancels the hardware order by shipment id.
 *
 *  @param object The @c GTLRSupportcases_CancelHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorShipmentsCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  --------- Begin of shipment Id based calls ----------------- Gets shipping
 *  address for a purchase Get by shipmentId: /v2/hardwareAuditor/shipments/:
 *
 *  Method: supportcases.hardwareAuditor.shipments.getShippingAddress
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingAddress : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorShipmentsGetShippingAddressWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingAddress.
 *
 *  --------- Begin of shipment Id based calls ----------------- Gets shipping
 *  address for a purchase Get by shipmentId: /v2/hardwareAuditor/shipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingAddressRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingAddress
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer name for a hardware order Get by shipmentId:
 *  /v2/hardwareAuditor/shipments/:
 *
 *  Method: supportcases.hardwareAuditor.shipments.getShippingCustomerName
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerName : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorShipmentsGetShippingCustomerNameWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerName.
 *
 *  Gets the shipping customer name for a hardware order Get by shipmentId:
 *  /v2/hardwareAuditor/shipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerNameRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerName
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer phone number for a hardware order Get by
 *  shipmentId: /v2/hardwareAuditor/shipments/:
 *
 *  Method: supportcases.hardwareAuditor.shipments.getShippingCustomerPhoneNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerPhoneNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorShipmentsGetShippingCustomerPhoneNumberWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerPhoneNumber.
 *
 *  Gets the shipping customer phone number for a hardware order Get by
 *  shipmentId: /v2/hardwareAuditor/shipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerPhoneNumberRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerPhoneNumber
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists refunds for a hardware order. Get by shipmentId:
 *  /v2/hardwareAuditor/shipments/:
 *
 *  Method: supportcases.hardwareAuditor.shipments.refunds
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareAuditorShipmentsRefunds : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareAuditorShipmentsRefundsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareRefundsResponse.
 *
 *  Lists refunds for a hardware order. Get by shipmentId:
 *  /v2/hardwareAuditor/shipments/:
 *
 *  @param object The @c GTLRSupportcases_ListHardwareRefundsRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareAuditorShipmentsRefunds
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels the hardware order.
 *
 *  Method: supportcases.hardwareOrders.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareOrdersCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersCancelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancels the hardware order.
 *
 *  @param object The @c GTLRSupportcases_CancelHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets detail for a hardware order.
 *
 *  Method: supportcases.hardwareOrders.getDetail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersGetDetail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersGetDetailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_HardwareOrderDetail.
 *
 *  Gets detail for a hardware order.
 *
 *  @param object The @c GTLRSupportcases_GetHardwareOrderDetailRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersGetDetail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareOrderDetailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets lost stolen refund eligibility for account Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareOrders.getLostStolenRefundEligibility
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersGetLostStolenRefundEligibility : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersGetLostStolenRefundEligibilityWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_LostStolenRefundEligibility.
 *
 *  Gets lost stolen refund eligibility for account Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetLostStolenRefundEligibilityRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersGetLostStolenRefundEligibility
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenRefundEligibilityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets shipping address for a purchase Get by orderId: /v2/hardwareOrders/
 *  DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareOrders.getShippingAddress
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersGetShippingAddress : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersGetShippingAddressWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingAddress.
 *
 *  Gets shipping address for a purchase Get by orderId: /v2/hardwareOrders/
 *  DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingAddressRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersGetShippingAddress
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer name for a hardware order Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareOrders.getShippingCustomerName
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerName : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersGetShippingCustomerNameWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerName.
 *
 *  Gets the shipping customer name for a hardware order Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerNameRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerName
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer phone number for a hardware order Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareOrders.getShippingCustomerPhoneNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerPhoneNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersGetShippingCustomerPhoneNumberWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerPhoneNumber.
 *
 *  Gets the shipping customer phone number for a hardware order Get by orderId:
 *  /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerPhoneNumberRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerPhoneNumber
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets hardware signals based on the case and customer.
 *
 *  Method: supportcases.hardwareOrders.hardwareSignals
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersHardwareSignals : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersHardwareSignalsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetHardwareSignalsResponse.
 *
 *  Gets hardware signals based on the case and customer.
 *
 *  @param object The @c GTLRSupportcases_GetHardwareSignalsRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersHardwareSignals
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareSignalsRequest *)object;

@end

/**
 *  Lists hardware orders.
 *
 *  Method: supportcases.hardwareOrders.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersListWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareOrdersResponse.
 *
 *  Lists hardware orders.
 *
 *  @param object The @c GTLRSupportcases_ListHardwareOrdersRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersList
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareOrdersRequest *)object;

@end

/**
 *  Gets a user's devices that are not in the ListHardwareOrders result.
 *
 *  Method: supportcases.hardwareOrders.listOtherDevices
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersListOtherDevices : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersListOtherDevicesWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListOtherDevicesResponse.
 *
 *  Gets a user's devices that are not in the ListHardwareOrders result.
 *
 *  @param object The @c GTLRSupportcases_ListOtherDevicesRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersListOtherDevices
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListOtherDevicesRequest *)object;

@end

/**
 *  Refunds a hardware order
 *
 *  Method: supportcases.hardwareOrders.refund
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareOrdersRefund : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersRefundWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RefundHardwareOrderResponse.
 *
 *  Refunds a hardware order
 *
 *  @param object The @c GTLRSupportcases_RefundHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersRefund
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RefundHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists refunds for a hardware order. Get by orderId: /v2/hardwareOrders/
 *  DEPRECATED TODO(b/34705382)
 *
 *  Method: supportcases.hardwareOrders.refunds
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareOrdersRefunds : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareOrdersRefundsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareRefundsResponse.
 *
 *  Lists refunds for a hardware order. Get by orderId: /v2/hardwareOrders/
 *  DEPRECATED TODO(b/34705382)
 *
 *  @param object The @c GTLRSupportcases_ListHardwareRefundsRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareOrdersRefunds
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels the hardware shipment by shipment id.
 *
 *  Method: supportcases.hardwareShipments.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsCancelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancels the hardware shipment by shipment id.
 *
 *  @param object The @c GTLRSupportcases_CancelHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets lost stolen refund eligibility for account Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  Method: supportcases.hardwareShipments.getLostStolenRefundEligibility
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsGetLostStolenRefundEligibility : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsGetLostStolenRefundEligibilityWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_LostStolenRefundEligibility.
 *
 *  Gets lost stolen refund eligibility for account Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  @param object The @c GTLRSupportcases_GetLostStolenRefundEligibilityRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsGetLostStolenRefundEligibility
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenRefundEligibilityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  --------- Begin of shipment Id based calls ----------------- Gets shipping
 *  address for a purchase Get by shipmentId: /v2/hardwareShipments/:
 *
 *  Method: supportcases.hardwareShipments.getShippingAddress
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsGetShippingAddress : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsGetShippingAddressWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingAddress.
 *
 *  --------- Begin of shipment Id based calls ----------------- Gets shipping
 *  address for a purchase Get by shipmentId: /v2/hardwareShipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingAddressRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsGetShippingAddress
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer name for a hardware order Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  Method: supportcases.hardwareShipments.getShippingCustomerName
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerName : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsGetShippingCustomerNameWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerName.
 *
 *  Gets the shipping customer name for a hardware order Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerNameRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerName
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the shipping customer phone number for a hardware order Get by
 *  shipmentId: /v2/hardwareShipments/:
 *
 *  Method: supportcases.hardwareShipments.getShippingCustomerPhoneNumber
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerPhoneNumber : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsGetShippingCustomerPhoneNumberWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ShippingCustomerPhoneNumber.
 *
 *  Gets the shipping customer phone number for a hardware order Get by
 *  shipmentId: /v2/hardwareShipments/:
 *
 *  @param object The @c GTLRSupportcases_GetShippingCustomerPhoneNumberRequest
 *    to include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerPhoneNumber
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Refunds a hardware shipment by shipment id.
 *
 *  Method: supportcases.hardwareShipments.refund
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsRefund : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsRefundWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RefundHardwareOrderResponse.
 *
 *  Refunds a hardware shipment by shipment id.
 *
 *  @param object The @c GTLRSupportcases_RefundHardwareOrderRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsRefund
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RefundHardwareOrderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists refunds for a hardware order. Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  Method: supportcases.hardwareShipments.refunds
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_HardwareShipmentsRefunds : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForHardwareShipmentsRefundsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListHardwareRefundsResponse.
 *
 *  Lists refunds for a hardware order. Get by shipmentId:
 *  /v2/hardwareShipments/:
 *
 *  @param object The @c GTLRSupportcases_ListHardwareRefundsRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_HardwareShipmentsRefunds
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists opportunities.
 *
 *  Method: supportcases.opportunities.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_OpportunitiesList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForOpportunitiesList]

@property(nonatomic, assign) BOOL agentWhitelistedForApollo;

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  Fetches a @c GTLRSupportcases_ListOpportunitiesResponse.
 *
 *  Lists opportunities.
 *
 *  @returns GTLRSupportcasesQuery_OpportunitiesList
 */
+ (instancetype)query;

@end

/**
 *  Batch creates pitches.
 *
 *  Method: supportcases.opportunities.pitches.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_OpportunitiesPitchesBatchCreate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForOpportunitiesPitchesBatchCreateWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_BatchCreatePitchResponse.
 *
 *  Batch creates pitches.
 *
 *  @param object The @c GTLRSupportcases_BatchCreatePitchRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_OpportunitiesPitchesBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_BatchCreatePitchRequest *)object;

@end

/**
 *  Get refund status.
 *
 *  Method: supportcases.play.digitalContent.getRefundStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentGetRefundStatus : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentGetRefundStatusWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetRefundStatusResponse.
 *
 *  Get refund status.
 *
 *  @param object The @c GTLRSupportcases_GetRefundStatusRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentGetRefundStatus
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetRefundStatusRequest *)object;

@end

/**
 *  Get a collection of orders.
 *
 *  Method: supportcases.play.digitalContent.orders.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentOrdersBatchGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentOrdersBatchGetWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetOrdersResponse.
 *
 *  Get a collection of orders.
 *
 *  @param object The @c GTLRSupportcases_GetOrdersRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentOrdersBatchGet
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetOrdersRequest *)object;

@end

/**
 *  Refund orders.
 *
 *  Method: supportcases.play.digitalContent.orders.refund
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentOrdersRefund : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentOrdersRefundWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_RefundOrdersResponse.
 *
 *  Refund orders.
 *
 *  @param object The @c GTLRSupportcases_RefundOrdersRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentOrdersRefund
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RefundOrdersRequest *)object;

@end

/**
 *  Search for orders.
 *
 *  Method: supportcases.play.digitalContent.orders.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentOrdersSearch : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentOrdersSearchWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SearchOrdersResponse.
 *
 *  Search for orders.
 *
 *  @param object The @c GTLRSupportcases_SearchOrdersRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentOrdersSearch
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SearchOrdersRequest *)object;

@end

/**
 *  Get a collection of subscriptions.
 *
 *  Method: supportcases.play.digitalContent.subscriptions.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsBatchGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentSubscriptionsBatchGetWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetSubscriptionsResponse.
 *
 *  Get a collection of subscriptions.
 *
 *  @param object The @c GTLRSupportcases_GetSubscriptionsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsBatchGet
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetSubscriptionsRequest *)object;

@end

/**
 *  Cancel subscription.
 *
 *  Method: supportcases.play.digitalContent.subscriptions.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentSubscriptionsCancelWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CancelSubscriptionResponse.
 *
 *  Cancel subscription.
 *
 *  @param object The @c GTLRSupportcases_CancelSubscriptionRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelSubscriptionRequest *)object;

@end

/**
 *  Get cancellation status.
 *
 *  Method: supportcases.play.digitalContent.subscriptions.getCancellationStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsGetCancellationStatus : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentSubscriptionsGetCancellationStatusWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetCancellationStatusResponse.
 *
 *  Get cancellation status.
 *
 *  @param object The @c GTLRSupportcases_GetCancellationStatusRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsGetCancellationStatus
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetCancellationStatusRequest *)object;

@end

/**
 *  List subscriptions.
 *
 *  Method: supportcases.play.digitalContent.subscriptions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForPlayDigitalContentSubscriptionsListWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListSubscriptionsResponse.
 *
 *  List subscriptions.
 *
 *  @param object The @c GTLRSupportcases_ListSubscriptionsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsList
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListSubscriptionsRequest *)object;

@end

/**
 *  Gets the specified product.
 *
 *  Method: supportcases.products.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsGetWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Product1.
 *
 *  Gets the specified product.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_ProductsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the available escalation targets.
 *
 *  Method: supportcases.products.getEscalationTargets
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsGetEscalationTargets : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsGetEscalationTargetsWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetEscalationTargetsResponse.
 *
 *  Gets the available escalation targets.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_ProductsGetEscalationTargets
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the available routing targets.
 *
 *  Method: supportcases.products.getRoutingTargets
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsGetRoutingTargets : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsGetRoutingTargetsWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_GetRoutingTargetsResponse.
 *
 *  Gets the available routing targets.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_ProductsGetRoutingTargets
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for a specified product.
 *
 *  Method: supportcases.products.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsGetSettings : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsGetSettingsWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Settings.
 *
 *  Gets the settings for a specified product.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_ProductsGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists products.
 *
 *  Method: supportcases.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsList]

/**
 *  Fetches a @c GTLRSupportcases_ListProductsResponse.
 *
 *  Lists products.
 *
 *  @returns GTLRSupportcasesQuery_ProductsList
 */
+ (instancetype)query;

@end

/**
 *  Lists product settings for an agent.
 *
 *  Method: supportcases.products.listSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_ProductsListSettings : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForProductsListSettingsWithname:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ListSettingsResponse1.
 *
 *  Lists product settings for an agent.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_ProductsListSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Query and assign cohorts for this case.
 *
 *  Method: supportcases.resolutions.cohorts.assign
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_ResolutionsCohortsAssign : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForResolutionsCohortsAssignWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_AssignCohortsResponse.
 *
 *  Query and assign cohorts for this case.
 *
 *  @param object The @c GTLRSupportcases_AssignCohortsRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_ResolutionsCohortsAssign
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_AssignCohortsRequest *)object;

@end

/**
 *  Query for resolutions.
 *
 *  Method: supportcases.resolutions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_ResolutionsList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForResolutionsList]

@property(nonatomic, assign) BOOL autocompleteResults;

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *q;

@property(nonatomic, copy, nullable) NSString *resultsToken;

@property(nonatomic, copy, nullable) NSString *searchSessionId;

/**
 *  type
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesTypeCannedResponse Value "CANNED_RESPONSE"
 *    @arg @c kGTLRSupportcasesTypeHelpCenter Value "HELP_CENTER"
 *    @arg @c kGTLRSupportcasesTypeTroubleShooter Value "TROUBLE_SHOOTER"
 *    @arg @c kGTLRSupportcasesTypeUnknownResolutionType Value
 *        "UNKNOWN_RESOLUTION_TYPE"
 *    @arg @c kGTLRSupportcasesTypeWorkflow Value "WORKFLOW"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *type;

/**
 *  Fetches a @c GTLRSupportcases_ListResolutionsResponse.
 *
 *  Query for resolutions.
 *
 *  @returns GTLRSupportcasesQuery_ResolutionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Log a resolution.
 *
 *  Method: supportcases.resolutions.log
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_ResolutionsLog : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForResolutionsLogWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Log a resolution.
 *
 *  @param object The @c GTLRSupportcases_LogResolutionRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_ResolutionsLog
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_LogResolutionRequest *)object;

@end

/**
 *  Suggest some resolutions to a case based on provided signals.
 *
 *  Method: supportcases.resolutions.suggest
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_ResolutionsSuggest : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForResolutionsSuggestWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SuggestResolutionsResponse.
 *
 *  Suggest some resolutions to a case based on provided signals.
 *
 *  @param object The @c GTLRSupportcases_SuggestResolutionsRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_ResolutionsSuggest
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SuggestResolutionsRequest *)object;

@end

/**
 *  Saves (Insert/Update) an RMA.
 *
 *  Method: supportcases.rma.save
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmaSave : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmaSaveWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SaveRmaResponse.
 *
 *  Saves (Insert/Update) an RMA.
 *
 *  @param object The @c GTLRSupportcases_SaveRmaRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_RmaSave
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SaveRmaRequest *)object;

@end

/**
 *  Cancel an RMA.
 *
 *  Method: supportcases.rmas.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasCancelWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_CancelRmaResponse.
 *
 *  Cancel an RMA.
 *
 *  @param object The @c GTLRSupportcases_CancelRmaRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelRmaRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels an auth hold for an advanced exchange RMA.
 *
 *  Method: supportcases.rmas.cancelAuthHold
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasCancelAuthHold : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasCancelAuthHoldWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Cancels an auth hold for an advanced exchange RMA.
 *
 *  @param object The @c GTLRSupportcases_CancelAuthHoldRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasCancelAuthHold
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelAuthHoldRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sends merchandise without expecting a return.
 *
 *  Method: supportcases.rmas.createExchangeWithoutReturn
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasCreateExchangeWithoutReturn : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasCreateExchangeWithoutReturnWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CreateExchangeWithoutReturnResponse.
 *
 *  Sends merchandise without expecting a return.
 *
 *  @param object The @c GTLRSupportcases_CreateExchangeWithoutReturnRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_RmasCreateExchangeWithoutReturn
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateExchangeWithoutReturnRequest *)object;

@end

/**
 *  Gets the specified RMA.
 *
 *  Method: supportcases.rmas.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasGet : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasGetWithname:]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Rma.
 *
 *  Gets the specified RMA.
 *
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Determines the eligibility of a lost/stolen RMA.
 *
 *  Method: supportcases.rmas.getLostStolenEligibility
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasGetLostStolenEligibility : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasGetLostStolenEligibilityWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_LostStolenEligibility.
 *
 *  Determines the eligibility of a lost/stolen RMA.
 *
 *  @param object The @c GTLRSupportcases_GetLostStolenEligibilityRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasGetLostStolenEligibility
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenEligibilityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get mailing address for an RMA
 *
 *  Method: supportcases.rmas.getMailingAddress
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasGetMailingAddress : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasGetMailingAddressWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_MailingAddress.
 *
 *  Get mailing address for an RMA
 *
 *  @param object The @c GTLRSupportcases_GetMailingAddressRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasGetMailingAddress
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetMailingAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets an RMA's order detail.
 *
 *  Method: supportcases.rmas.getOrderDetail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasGetOrderDetail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasGetOrderDetailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RmaOrderDetail.
 *
 *  Gets an RMA's order detail.
 *
 *  @param object The @c GTLRSupportcases_GetRmaOrderDetailRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasGetOrderDetail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetRmaOrderDetailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get details for a replacement device that is not associated with an order.
 *
 *  Method: supportcases.rmas.getReplacementDetail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasGetReplacementDetail : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasGetReplacementDetailWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_ReplacementDetail.
 *
 *  Get details for a replacement device that is not associated with an order.
 *
 *  @param object The @c GTLRSupportcases_GetReplacementDetailRequest to include
 *    in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasGetReplacementDetail
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetReplacementDetailRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists RMAs by Case ID and RMA state
 *
 *  Method: supportcases.rmas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_RmasList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasList]

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  state
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesStateRmaCancelled Value "RMA_CANCELLED"
 *    @arg @c kGTLRSupportcasesStateRmaCompleted Value "RMA_COMPLETED"
 *    @arg @c kGTLRSupportcasesStateRmaIncomplete Value "RMA_INCOMPLETE"
 *    @arg @c kGTLRSupportcasesStateRmaPending Value "RMA_PENDING"
 *    @arg @c kGTLRSupportcasesStateRmaSubmitted Value "RMA_SUBMITTED"
 *    @arg @c kGTLRSupportcasesStateUnknownRmaState Value "UNKNOWN_RMA_STATE"
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Fetches a @c GTLRSupportcases_ListRmasResponse.
 *
 *  Lists RMAs by Case ID and RMA state
 *
 *  @returns GTLRSupportcasesQuery_RmasList
 */
+ (instancetype)query;

@end

/**
 *  Lists two-character country codes valid for Buyer's Remorse RMAs.
 *
 *  Method: supportcases.rmas.listBuyersRemorseCountryCodes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasListBuyersRemorseCountryCodes : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasListBuyersRemorseCountryCodes]

/**
 *  Fetches a @c GTLRSupportcases_ListBuyersRemorseCountryCodesResponse.
 *
 *  Lists two-character country codes valid for Buyer's Remorse RMAs.
 *
 *  @returns GTLRSupportcasesQuery_RmasListBuyersRemorseCountryCodes
 */
+ (instancetype)query;

@end

/**
 *  Marks an original device as received in a Standard Exchange.
 *
 *  Method: supportcases.rmas.markOriginalDeviceReceived
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasMarkOriginalDeviceReceived : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasMarkOriginalDeviceReceivedWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Marks an original device as received in a Standard Exchange.
 *
 *  @param object The @c GTLRSupportcases_MarkOriginalDeviceReceivedRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasMarkOriginalDeviceReceived
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_MarkOriginalDeviceReceivedRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Run the given RMA workflow steps.
 *
 *  Method: supportcases.rmas.runRmaSteps
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasRunRmaSteps : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasRunRmaStepsWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_RunRmaStepsResponse.
 *
 *  Run the given RMA workflow steps.
 *
 *  @param object The @c GTLRSupportcases_RunRmaStepsRequest to include in the
 *    query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_RmasRunRmaSteps
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RunRmaStepsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  DEPRECATED: Use RunRmaSteps instead. Run the given workflow for an RMA.
 *
 *  Method: supportcases.rmas.runWorkflow
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasRunWorkflow : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasRunWorkflowWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_RunWorkflowResponse.
 *
 *  DEPRECATED: Use RunRmaSteps instead. Run the given workflow for an RMA.
 *
 *  @param object The @c GTLRSupportcases_RunWorkflowRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_RmasRunWorkflow
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RunWorkflowRequest *)object;

@end

/**
 *  Initiates a new RMA.
 *
 *  Method: supportcases.rmas.send
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmasSend : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmasSendWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SendRmaResponse.
 *
 *  Initiates a new RMA.
 *
 *  @param object The @c GTLRSupportcases_SendRmaRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_RmasSend
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SendRmaRequest *)object;

@end

/**
 *  DEPRECATED: Use SendRma instead. Submit an RMA.
 *
 *  Method: supportcases.rma.submit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_RmaSubmit : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForRmaSubmitWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SubmitRmaResponse.
 *
 *  DEPRECATED: Use SendRma instead. Submit an RMA.
 *
 *  @param object The @c GTLRSupportcases_SubmitRmaRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_RmaSubmit
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SubmitRmaRequest *)object;

@end

/**
 *  Gets assign-stream-enabled searches associated with the agent.
 *
 *  Method: supportcases.teams.getMyAssignStreamSearches
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_TeamsGetMyAssignStreamSearches : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTeamsGetMyAssignStreamSearches]

/**
 *  Fetches a @c GTLRSupportcases_GetMyAssignStreamSearchesResponse.
 *
 *  Gets assign-stream-enabled searches associated with the agent.
 *
 *  @returns GTLRSupportcasesQuery_TeamsGetMyAssignStreamSearches
 */
+ (instancetype)query;

@end

/**
 *  Start a new troubleshooter session.
 *
 *  Method: supportcases.troubleshooterSessions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsCreate : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsCreateWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_TroubleshooterSession.
 *
 *  Start a new troubleshooter session.
 *
 *  @param object The @c GTLRSupportcases_CreateTroubleshooterSessionRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsCreate
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CreateTroubleshooterSessionRequest *)object;

@end

/**
 *  Lists devices on a customer's account.
 *
 *  Method: supportcases.troubleshooterSessions.listDevices
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsListDevices : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsListDevicesWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListDevicesResponse1.
 *
 *  Lists devices on a customer's account.
 *
 *  @param object The @c GTLRSupportcases_ListDevicesRequest to include in the
 *    query.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsListDevices
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListDevicesRequest *)object;

@end

/**
 *  Lists issues.
 *
 *  Method: supportcases.troubleshooterSessions.listIssues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsListIssues : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsListIssues]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, copy, nullable) NSString *issueId;

/**
 *  troubleshooterType
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesTroubleshooterTypeNoe Value "NOE"
 *    @arg @c kGTLRSupportcasesTroubleshooterTypePlayApps Value "PLAY_APPS"
 *    @arg @c kGTLRSupportcasesTroubleshooterTypePlayPurchases Value
 *        "PLAY_PURCHASES"
 *    @arg @c kGTLRSupportcasesTroubleshooterTypeTroubleshooterTypeNotSet Value
 *        "TROUBLESHOOTER_TYPE_NOT_SET"
 */
@property(nonatomic, copy, nullable) NSString *troubleshooterType;

/**
 *  Fetches a @c GTLRSupportcases_ListIssuesResponse.
 *
 *  Lists issues.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsListIssues
 */
+ (instancetype)query;

@end

/**
 *  Lists purchased apps on a customer's account.
 *
 *  Method: supportcases.troubleshooterSessions.listPurchasedApps
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedApps : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsListPurchasedAppsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListPurchasedAppsResponse.
 *
 *  Lists purchased apps on a customer's account.
 *
 *  @param object The @c GTLRSupportcases_ListPurchasedAppsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedApps
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedAppsRequest *)object;

@end

/**
 *  Lists purchased books on a customer's account.
 *
 *  Method: supportcases.troubleshooterSessions.listPurchasedBooks
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedBooks : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsListPurchasedBooksWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListPurchasedBooksResponse.
 *
 *  Lists purchased books on a customer's account.
 *
 *  @param object The @c GTLRSupportcases_ListPurchasedBooksRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedBooks
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedBooksRequest *)object;

@end

/**
 *  Lists purchased videos on a customer's account.
 *
 *  Method: supportcases.troubleshooterSessions.listPurchasedVideos
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedVideos : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsListPurchasedVideosWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListPurchasedVideosResponse.
 *
 *  Lists purchased videos on a customer's account.
 *
 *  @param object The @c GTLRSupportcases_ListPurchasedVideosRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedVideos
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedVideosRequest *)object;

@end

/**
 *  Log troubleshooter activity.
 *
 *  Method: supportcases.troubleshooterSessions.log
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsLog : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsLogWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_Empty.
 *
 *  Log troubleshooter activity.
 *
 *  @param object The @c GTLRSupportcases_LogTroubleshooterActivityRequest to
 *    include in the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsLog
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_LogTroubleshooterActivityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Troubleshoot issue.
 *
 *  Method: supportcases.troubleshooterSessions.troubleshootIssue
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 *    @c kGTLRAuthScopeSupportcasesSupportcontent
 */
@interface GTLRSupportcasesQuery_TroubleshooterSessionsTroubleshootIssue : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForTroubleshooterSessionsTroubleshootIssueWithObject:name:]

@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSupportcases_TroubleshootIssueResponse.
 *
 *  Troubleshoot issue.
 *
 *  @param object The @c GTLRSupportcases_TroubleshootIssueRequest to include in
 *    the query.
 *  @param name NSString
 *
 *  @returns GTLRSupportcasesQuery_TroubleshooterSessionsTroubleshootIssue
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootIssueRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Fetches Payments info, such as number of Payments accounts for the user.
 *
 *  Method: supportcases.wallets.accounts.getPaymentsInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsAccountsGetPaymentsInfo : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsGetPaymentsInfoWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetPaymentsInfoResponse.
 *
 *  Fetches Payments info, such as number of Payments accounts for the user.
 *
 *  @param object The @c GTLRSupportcases_GetPaymentsInfoRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsGetPaymentsInfo
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetPaymentsInfoRequest *)object;

@end

/**
 *  Fetches the review status of a wallet account. This is a POST API because it
 *  takes in a sso_ticket.
 *
 *  Method: supportcases.wallets.accounts.getReviewStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsAccountsGetReviewStatus : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsGetReviewStatusWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetAccountReviewStatusResponse.
 *
 *  Fetches the review status of a wallet account. This is a POST API because it
 *  takes in a sso_ticket.
 *
 *  @param object The @c GTLRSupportcases_GetAccountReviewStatusRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsGetReviewStatus
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetAccountReviewStatusRequest *)object;

@end

/**
 *  Fetches Wallet account signals for troubleshooting Wallet issues.
 *
 *  Method: supportcases.wallets.accounts.getSignals
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsAccountsGetSignals : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsGetSignals]

/**
 *  accountSignals
 *
 *  Likely values:
 *    @arg @c kGTLRSupportcasesAccountSignalsAccountSignalTypeUnspecified Value
 *        "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRSupportcasesAccountSignalsCustomerBvidDocsSubmissionStatus
 *        Value "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS"
 *    @arg @c kGTLRSupportcasesAccountSignalsCustomerOfflineCheckDocsSubmissionStatus
 *        Value "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS"
 *    @arg @c kGTLRSupportcasesAccountSignalsCustomerRiskDocsSubmissionStatus
 *        Value "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS"
 *    @arg @c kGTLRSupportcasesAccountSignalsCustomerSanctionsDocsSubmissionStatus
 *        Value "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS"
 *    @arg @c kGTLRSupportcasesAccountSignalsGaiaAccountCheckoutServiceStatus
 *        Value "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS"
 *    @arg @c kGTLRSupportcasesAccountSignalsHasPositiveWalletBalance Value
 *        "HAS_POSITIVE_WALLET_BALANCE"
 *    @arg @c kGTLRSupportcasesAccountSignalsIsVip Value "IS_VIP"
 *    @arg @c kGTLRSupportcasesAccountSignalsMostRecentTransactionType Value
 *        "MOST_RECENT_TRANSACTION_TYPE"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *accountSignals;

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  Fetches a @c GTLRSupportcases_GetAccountSignalsResponse.
 *
 *  Fetches Wallet account signals for troubleshooting Wallet issues.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsGetSignals
 */
+ (instancetype)query;

@end

/**
 *  Retrieve status for Payment Method Hijack (PMH) reviews. This is a POST API
 *  because it takes in a sso_ticket.
 *
 *  Method: supportcases.wallets.accounts.paymentInstruments.getHijackReviewsStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsGetHijackReviewsStatus : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsPaymentInstrumentsGetHijackReviewsStatusWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetPaymentMethodHijackReviewsStatusResponse.
 *
 *  Retrieve status for Payment Method Hijack (PMH) reviews. This is a POST API
 *  because it takes in a sso_ticket.
 *
 *  @param object The @c
 *    GTLRSupportcases_GetPaymentMethodHijackReviewsStatusRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsGetHijackReviewsStatus
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetPaymentMethodHijackReviewsStatusRequest *)object;

@end

/**
 *  Initiate Payment Method Hijack (PMH) reviews.
 *
 *  Method: supportcases.wallets.accounts.paymentInstruments.initiateHijackReviews
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsInitiateHijackReviews : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsPaymentInstrumentsInitiateHijackReviewsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_InitiatePaymentMethodHijackReviewsResponse.
 *
 *  Initiate Payment Method Hijack (PMH) reviews.
 *
 *  @param object The @c
 *    GTLRSupportcases_InitiatePaymentMethodHijackReviewsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsInitiateHijackReviews
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_InitiatePaymentMethodHijackReviewsRequest *)object;

@end

/**
 *  Initiates a review on the Wallet account. This is a POST API because it
 *  takes in a sso_ticket. This API could lead to a review escalation (increase
 *  in priority).
 *
 *  Method: supportcases.wallets.accounts.searchReviews
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_WalletsAccountsSearchReviews : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsAccountsSearchReviewsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_SearchAccountReviewsResponse.
 *
 *  Initiates a review on the Wallet account. This is a POST API because it
 *  takes in a sso_ticket. This API could lead to a review escalation (increase
 *  in priority).
 *
 *  @param object The @c GTLRSupportcases_SearchAccountReviewsRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsAccountsSearchReviews
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_SearchAccountReviewsRequest *)object;

@end

/**
 *  List supported Bank Account countries. Initially will only return supported
 *  Bank Account countries for Payment Method Hijacks (PMH). This is a POST API
 *  because it takes in a sso_ticket.
 *
 *  Method: supportcases.wallets.bankAccountCountries
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsBankAccountCountries : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsBankAccountCountriesWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListBankAccountCountriesResponse.
 *
 *  List supported Bank Account countries. Initially will only return supported
 *  Bank Account countries for Payment Method Hijacks (PMH). This is a POST API
 *  because it takes in a sso_ticket.
 *
 *  @param object The @c GTLRSupportcases_ListBankAccountCountriesRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsBankAccountCountries
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListBankAccountCountriesRequest *)object;

@end

/**
 *  List supported Credit Card types. Initially will only return supported
 *  credit cards for Payment Method Hijacks (PMH). This is a POST API because it
 *  takes in a sso_ticket.
 *
 *  Method: supportcases.wallets.creditCardTypes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsCreditCardTypes : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsCreditCardTypesWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListCreditCardTypesResponse.
 *
 *  List supported Credit Card types. Initially will only return supported
 *  credit cards for Payment Method Hijacks (PMH). This is a POST API because it
 *  takes in a sso_ticket.
 *
 *  @param object The @c GTLRSupportcases_ListCreditCardTypesRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsCreditCardTypes
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListCreditCardTypesRequest *)object;

@end

/**
 *  Fetches suggestions for payment(credit card, bank, direct carrier billing)
 *  issuers.
 *
 *  Method: supportcases.wallets.paymentInstruments.suggestIssuer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsPaymentInstrumentsSuggestIssuer : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsPaymentInstrumentsSuggestIssuer]

@property(nonatomic, copy, nullable) NSString *caseId;

@property(nonatomic, assign) BOOL includeDescription;

@property(nonatomic, copy, nullable) NSString *instrumentTypeToken;

@property(nonatomic, copy, nullable) NSString *searchKey;

/**
 *  Fetches a @c GTLRSupportcases_SuggestPaymentInstrumentIssuerResponse.
 *
 *  Fetches suggestions for payment(credit card, bank, direct carrier billing)
 *  issuers.
 *
 *  @returns GTLRSupportcasesQuery_WalletsPaymentInstrumentsSuggestIssuer
 */
+ (instancetype)query;

@end

/**
 *  List supported payment instrument types. This API is not customer
 *  contextual.
 *
 *  Method: supportcases.wallets.paymentInstrumentTypeInfos.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsPaymentInstrumentTypeInfosList : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsPaymentInstrumentTypeInfosList]

@property(nonatomic, copy, nullable) NSString *caseId;

/**
 *  Fetches a @c GTLRSupportcases_ListPaymentInstrumentTypeInfosResponse.
 *
 *  List supported payment instrument types. This API is not customer
 *  contextual.
 *
 *  @returns GTLRSupportcasesQuery_WalletsPaymentInstrumentTypeInfosList
 */
+ (instancetype)query;

@end

/**
 *  Query for transactions.
 *
 *  Method: supportcases.wallets.transactions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsTransactions : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsTransactionsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListTransactionsResponse.
 *
 *  Query for transactions.
 *
 *  @param object The @c GTLRSupportcases_ListTransactionsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsTransactions
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListTransactionsRequest *)object;

@end

/**
 *  Troubleshoots a Wallet account for issues.
 *
 *  Method: supportcases.wallets.troubleshootAccount
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsTroubleshootAccount : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsTroubleshootAccountWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_TroubleshootAccountResponse.
 *
 *  Troubleshoots a Wallet account for issues.
 *
 *  @param object The @c GTLRSupportcases_TroubleshootAccountRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsTroubleshootAccount
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootAccountRequest *)object;

@end

/**
 *  Troubleshoots a Wallet transaction for issues.
 *
 *  Method: supportcases.wallets.troubleshootTransaction
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_WalletsTroubleshootTransaction : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForWalletsTroubleshootTransactionWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_TroubleshootTransactionResponse.
 *
 *  Troubleshoots a Wallet transaction for issues.
 *
 *  @param object The @c GTLRSupportcases_TroubleshootTransactionRequest to
 *    include in the query.
 *
 *  @returns GTLRSupportcasesQuery_WalletsTroubleshootTransaction
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootTransactionRequest *)object;

@end

/**
 *  Cancel/Downgrade component(s).
 *
 *  Method: supportcases.youtube.components.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_YoutubeComponentsCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeComponentsCancelWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CancelComponentsResponse.
 *
 *  Cancel/Downgrade component(s).
 *
 *  @param object The @c GTLRSupportcases_CancelComponentsRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeComponentsCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelComponentsRequest *)object;

@end

/**
 *  Cancel entitlement.
 *
 *  Method: supportcases.youtube.entitlements.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_YoutubeEntitlementsCancel : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeEntitlementsCancelWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_CancelEntitlementResponse.
 *
 *  Cancel entitlement.
 *
 *  @param object The @c GTLRSupportcases_CancelEntitlementRequest to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeEntitlementsCancel
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_CancelEntitlementRequest *)object;

@end

/**
 *  Gets a list of one time purchases.
 *
 *  Method: supportcases.youtube.onetimepurchases
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_YoutubeOnetimepurchases : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeOnetimepurchasesWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetOneTimePurchasesResponse.
 *
 *  Gets a list of one time purchases.
 *
 *  @param object The @c GTLRSupportcases_GetOneTimePurchasesRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeOnetimepurchases
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetOneTimePurchasesRequest *)object;

@end

/**
 *  Get Customer Summary Information for entitlements and refund history.
 *
 *  Method: supportcases.youtube.summary
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_YoutubeSummary : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeSummaryWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_GetCustomerSummaryResponse.
 *
 *  Get Customer Summary Information for entitlements and refund history.
 *
 *  @param object The @c GTLRSupportcases_GetCustomerSummaryRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeSummary
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_GetCustomerSummaryRequest *)object;

@end

/**
 *  Get all transactions for entitlements.
 *
 *  Method: supportcases.youtube.transactions.listByEntitlements
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCasesReadonly
 */
@interface GTLRSupportcasesQuery_YoutubeTransactionsListByEntitlements : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeTransactionsListByEntitlementsWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_ListTransactionsResponse1.
 *
 *  Get all transactions for entitlements.
 *
 *  @param object The @c GTLRSupportcases_ListTransactionsRequest1 to include in
 *    the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeTransactionsListByEntitlements
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_ListTransactionsRequest1 *)object;

@end

/**
 *  Refund a batch of transactions.
 *
 *  Method: supportcases.youtube.transactions.refund
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSupportcasesCases
 */
@interface GTLRSupportcasesQuery_YoutubeTransactionsRefund : GTLRSupportcasesQuery
// Previous library name was
//   +[GTLQuerySupportcases queryForYoutubeTransactionsRefundWithObject:]

/**
 *  Fetches a @c GTLRSupportcases_RefundTransactionsResponse.
 *
 *  Refund a batch of transactions.
 *
 *  @param object The @c GTLRSupportcases_RefundTransactionsRequest to include
 *    in the query.
 *
 *  @returns GTLRSupportcasesQuery_YoutubeTransactionsRefund
 */
+ (instancetype)queryWithObject:(GTLRSupportcases_RefundTransactionsRequest *)object;

@end

NS_ASSUME_NONNULL_END
