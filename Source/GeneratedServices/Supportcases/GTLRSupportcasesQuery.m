// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Support Cases Private API (supportcases/v2)
// Description:
//   Support Cases API
// Documentation:
//   https://sites.google.com/a/google.com/cases/

#import "GTLRSupportcasesQuery.h"

#import "GTLRSupportcasesObjects.h"

// ----------------------------------------------------------------------------
// Constants

// accountSignals
NSString * const kGTLRSupportcasesAccountSignalsAccountSignalTypeUnspecified = @"ACCOUNT_SIGNAL_TYPE_UNSPECIFIED";
NSString * const kGTLRSupportcasesAccountSignalsCustomerBvidDocsSubmissionStatus = @"CUSTOMER_BVID_DOCS_SUBMISSION_STATUS";
NSString * const kGTLRSupportcasesAccountSignalsCustomerOfflineCheckDocsSubmissionStatus = @"CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS";
NSString * const kGTLRSupportcasesAccountSignalsCustomerRiskDocsSubmissionStatus = @"CUSTOMER_RISK_DOCS_SUBMISSION_STATUS";
NSString * const kGTLRSupportcasesAccountSignalsCustomerSanctionsDocsSubmissionStatus = @"CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS";
NSString * const kGTLRSupportcasesAccountSignalsGaiaAccountCheckoutServiceStatus = @"GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS";
NSString * const kGTLRSupportcasesAccountSignalsHasPositiveWalletBalance = @"HAS_POSITIVE_WALLET_BALANCE";
NSString * const kGTLRSupportcasesAccountSignalsIsVip          = @"IS_VIP";
NSString * const kGTLRSupportcasesAccountSignalsMostRecentTransactionType = @"MOST_RECENT_TRANSACTION_TYPE";

// caseType
NSString * const kGTLRSupportcasesCaseTypeAssigned        = @"ASSIGNED";
NSString * const kGTLRSupportcasesCaseTypeRecent          = @"RECENT";
NSString * const kGTLRSupportcasesCaseTypeUnknownCaseType = @"UNKNOWN_CASE_TYPE";
NSString * const kGTLRSupportcasesCaseTypeWaiting         = @"WAITING";

// channels
NSString * const kGTLRSupportcasesChannelsAdoption         = @"ADOPTION";
NSString * const kGTLRSupportcasesChannelsChat             = @"CHAT";
NSString * const kGTLRSupportcasesChannelsEmail            = @"EMAIL";
NSString * const kGTLRSupportcasesChannelsGoal             = @"GOAL";
NSString * const kGTLRSupportcasesChannelsHangout          = @"HANGOUT";
NSString * const kGTLRSupportcasesChannelsIncentive        = @"INCENTIVE";
NSString * const kGTLRSupportcasesChannelsMarketingEmail   = @"MARKETING_EMAIL";
NSString * const kGTLRSupportcasesChannelsMeeting          = @"MEETING";
NSString * const kGTLRSupportcasesChannelsNote             = @"NOTE";
NSString * const kGTLRSupportcasesChannelsPhone            = @"PHONE";
NSString * const kGTLRSupportcasesChannelsStub             = @"STUB";
NSString * const kGTLRSupportcasesChannelsTrax             = @"TRAX";
NSString * const kGTLRSupportcasesChannelsUnknownEventType = @"UNKNOWN_EVENT_TYPE";
NSString * const kGTLRSupportcasesChannelsWeb              = @"WEB";

// replyType
NSString * const kGTLRSupportcasesReplyTypeReply            = @"REPLY";
NSString * const kGTLRSupportcasesReplyTypeReplyAll         = @"REPLY_ALL";
NSString * const kGTLRSupportcasesReplyTypeUnknownReplyType = @"UNKNOWN_REPLY_TYPE";

// requestedSettingTypes
NSString * const kGTLRSupportcasesRequestedSettingTypesAgentSetting = @"AGENT_SETTING";
NSString * const kGTLRSupportcasesRequestedSettingTypesSearchSetting = @"SEARCH_SETTING";
NSString * const kGTLRSupportcasesRequestedSettingTypesUnknownAgentSettingType = @"UNKNOWN_AGENT_SETTING_TYPE";

// state
NSString * const kGTLRSupportcasesStateRmaCancelled    = @"RMA_CANCELLED";
NSString * const kGTLRSupportcasesStateRmaCompleted    = @"RMA_COMPLETED";
NSString * const kGTLRSupportcasesStateRmaIncomplete   = @"RMA_INCOMPLETE";
NSString * const kGTLRSupportcasesStateRmaPending      = @"RMA_PENDING";
NSString * const kGTLRSupportcasesStateRmaSubmitted    = @"RMA_SUBMITTED";
NSString * const kGTLRSupportcasesStateUnknownRmaState = @"UNKNOWN_RMA_STATE";

// troubleshooterType
NSString * const kGTLRSupportcasesTroubleshooterTypeNoe        = @"NOE";
NSString * const kGTLRSupportcasesTroubleshooterTypePlayApps   = @"PLAY_APPS";
NSString * const kGTLRSupportcasesTroubleshooterTypePlayPurchases = @"PLAY_PURCHASES";
NSString * const kGTLRSupportcasesTroubleshooterTypeTroubleshooterTypeNotSet = @"TROUBLESHOOTER_TYPE_NOT_SET";

// type
NSString * const kGTLRSupportcasesTypeCannedResponse        = @"CANNED_RESPONSE";
NSString * const kGTLRSupportcasesTypeHelpCenter            = @"HELP_CENTER";
NSString * const kGTLRSupportcasesTypeTroubleShooter        = @"TROUBLE_SHOOTER";
NSString * const kGTLRSupportcasesTypeUnknownResolutionType = @"UNKNOWN_RESOLUTION_TYPE";
NSString * const kGTLRSupportcasesTypeWorkflow              = @"WORKFLOW";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRSupportcasesQuery

@dynamic fields;

@end

@implementation GTLRSupportcasesQuery_AgentActivitiesCreate

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateAgentActivityRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"agentActivities";
  GTLRSupportcasesQuery_AgentActivitiesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_AgentActivity class];
  query.loggingName = @"supportcases.agentActivities.create";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentActivitiesCreateFromHelpCenterDeepLink

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateFromHelpCenterDeepLinkRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"agentActivities:createFromHelpCenterDeepLink";
  GTLRSupportcasesQuery_AgentActivitiesCreateFromHelpCenterDeepLink *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_AgentActivity class];
  query.loggingName = @"supportcases.agentActivities.createFromHelpCenterDeepLink";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentActivitiesList

@dynamic caseId, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"agentActivities";
  GTLRSupportcasesQuery_AgentActivitiesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListAgentActivitiesResponse class];
  query.loggingName = @"supportcases.agentActivities.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AgentSettingsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_AgentSetting class];
  query.loggingName = @"supportcases.agentSettings.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsGetPhoneSetting

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AgentSettingsGetPhoneSetting *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetPhoneSettingResponse class];
  query.loggingName = @"supportcases.agentSettings.getPhoneSetting";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsGetRealTimeSetting

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AgentSettingsGetRealTimeSetting *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RealTimeSetting class];
  query.loggingName = @"supportcases.agentSettings.getRealTimeSetting";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsGetSearchSetting

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AgentSettingsGetSearchSetting *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SearchSetting class];
  query.loggingName = @"supportcases.agentSettings.getSearchSetting";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsList

+ (instancetype)query {
  NSString *pathURITemplate = @"agentSettings";
  GTLRSupportcasesQuery_AgentSettingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListAgentSettingsResponse class];
  query.loggingName = @"supportcases.agentSettings.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsListSettings

@dynamic name, requestedSettingTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requestedSettingTypes" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:listSettings";
  GTLRSupportcasesQuery_AgentSettingsListSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListSettingsResponse class];
  query.loggingName = @"supportcases.agentSettings.listSettings";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AgentSettingsUpdateSearchSetting

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_SearchSetting *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AgentSettingsUpdateSearchSetting *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SearchSetting class];
  query.loggingName = @"supportcases.agentSettings.updateSearchSetting";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_AttributesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_AttributesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Attribute class];
  query.loggingName = @"supportcases.attributes.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesAssign

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_AssignRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:assign";
  GTLRSupportcasesQuery_CasesAssign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_AssignResponse class];
  query.loggingName = @"supportcases.cases.assign";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesAttributesBatchUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_BatchUpdateAttributesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:batchUpdate";
  GTLRSupportcasesQuery_CasesAttributesBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_BatchUpdateAttributesResponse class];
  query.loggingName = @"supportcases.cases.attributes.batchUpdate";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesAttributesUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAttributesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:update";
  GTLRSupportcasesQuery_CasesAttributesUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateAttributesResponse class];
  query.loggingName = @"supportcases.cases.attributes.update";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesAutoAssign

+ (instancetype)queryWithObject:(GTLRSupportcases_AutoAssignRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"cases:autoAssign";
  GTLRSupportcasesQuery_CasesAutoAssign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_AutoAssignResponse class];
  query.loggingName = @"supportcases.cases.autoAssign";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesBlock

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_BlockRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:block";
  GTLRSupportcasesQuery_CasesBlock *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_BlockResponse class];
  query.loggingName = @"supportcases.cases.block";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCallBack

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CallBackRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:callBack";
  GTLRSupportcasesQuery_CasesCallBack *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CallBackResponse class];
  query.loggingName = @"supportcases.cases.callBack";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCreateNewCase

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNewCaseRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"cases:createNewCase";
  GTLRSupportcasesQuery_CasesCreateNewCase *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CreateNewCaseResponse class];
  query.loggingName = @"supportcases.cases.createNewCase";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCreateNoteConsult

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNoteConsultCaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:createNoteConsult";
  GTLRSupportcasesQuery_CasesCreateNoteConsult *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CreateNoteConsultCaseResponse class];
  query.loggingName = @"supportcases.cases.createNoteConsult";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCreateRealTimeConsult

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateRealTimeConsultCaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:createRealTimeConsult";
  GTLRSupportcasesQuery_CasesCreateRealTimeConsult *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CreateRealTimeConsultCaseResponse class];
  query.loggingName = @"supportcases.cases.createRealTimeConsult";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerAuthenticate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_AuthenticateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:authenticate";
  GTLRSupportcasesQuery_CasesCustomerAuthenticate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_AuthenticateResponse class];
  query.loggingName = @"supportcases.cases.customer.authenticate";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerBillingAddresses

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListBillingAddressesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/customer/billingAddresses";
  GTLRSupportcasesQuery_CasesCustomerBillingAddresses *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListBillingAddressesResponse class];
  query.loggingName = @"supportcases.cases.customer.billingAddresses";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerCheckWalletAccount

@dynamic email, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:checkWalletAccount";
  GTLRSupportcasesQuery_CasesCustomerCheckWalletAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CheckWalletAccountResponse class];
  query.loggingName = @"supportcases.cases.customer.checkWalletAccount";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerContactCallbackNumber

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_SetCallbackNumberRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesCustomerContactCallbackNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SetCallbackNumberResponse class];
  query.loggingName = @"supportcases.cases.customer.contact.callbackNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerContactGetCallbackNumber

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesCustomerContactGetCallbackNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_PhoneNumber class];
  query.loggingName = @"supportcases.cases.customer.contact.getCallbackNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerDeauthenticate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_DeauthenticateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:deauthenticate";
  GTLRSupportcasesQuery_CasesCustomerDeauthenticate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_DeauthenticateResponse class];
  query.loggingName = @"supportcases.cases.customer.deauthenticate";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerGetAuthenticationCreditCardTypes

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationCreditCardTypesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getAuthenticationCreditCardTypes";
  GTLRSupportcasesQuery_CasesCustomerGetAuthenticationCreditCardTypes *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetAuthenticationCreditCardTypesResponse class];
  query.loggingName = @"supportcases.cases.customer.getAuthenticationCreditCardTypes";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerGetAuthenticationQuestions

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationQuestionsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getAuthenticationQuestions";
  GTLRSupportcasesQuery_CasesCustomerGetAuthenticationQuestions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetAuthenticationQuestionsResponse class];
  query.loggingName = @"supportcases.cases.customer.getAuthenticationQuestions";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerGetAuthenticationResult

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetAuthenticationResultRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getAuthenticationResult";
  GTLRSupportcasesQuery_CasesCustomerGetAuthenticationResult *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetAuthenticationResultResponse class];
  query.loggingName = @"supportcases.cases.customer.getAuthenticationResult";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerGetBusinessListings

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetBusinessListingsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getBusinessListings";
  GTLRSupportcasesQuery_CasesCustomerGetBusinessListings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetBusinessListingsResponse class];
  query.loggingName = @"supportcases.cases.customer.getBusinessListings";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerShippingAddresses

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListShippingAddressesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/customer/shippingAddresses";
  GTLRSupportcasesQuery_CasesCustomerShippingAddresses *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListShippingAddressesResponse class];
  query.loggingName = @"supportcases.cases.customer.shippingAddresses";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerUpdateContactEmail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateContactEmailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateContactEmail";
  GTLRSupportcasesQuery_CasesCustomerUpdateContactEmail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateContactEmailResponse class];
  query.loggingName = @"supportcases.cases.customer.updateContactEmail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerUpdateContactName

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateContactNameRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateContactName";
  GTLRSupportcasesQuery_CasesCustomerUpdateContactName *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateContactNameResponse class];
  query.loggingName = @"supportcases.cases.customer.updateContactName";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesCustomerUpdateCustomerAttributes

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateCustomerAttributesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateCustomerAttributes";
  GTLRSupportcasesQuery_CasesCustomerUpdateCustomerAttributes *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateCustomerAttributesResponse class];
  query.loggingName = @"supportcases.cases.customer.updateCustomerAttributes";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesDedupe

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_DedupeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:dedupe";
  GTLRSupportcasesQuery_CasesDedupe *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_DedupeResponse class];
  query.loggingName = @"supportcases.cases.dedupe";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesEscalate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_EscalateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:escalate";
  GTLRSupportcasesQuery_CasesEscalate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_EscalateResponse class];
  query.loggingName = @"supportcases.cases.escalate";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesFinish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_FinishRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:finish";
  GTLRSupportcasesQuery_CasesFinish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_FinishResponse class];
  query.loggingName = @"supportcases.cases.finish";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Case class];
  query.loggingName = @"supportcases.cases.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesGetAgentSearchCount

+ (instancetype)query {
  NSString *pathURITemplate = @"cases:getAgentSearchCount";
  GTLRSupportcasesQuery_CasesGetAgentSearchCount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_GetAgentSearchCountResponse class];
  query.loggingName = @"supportcases.cases.getAgentSearchCount";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesGetAgentUnreadCasesInfo

+ (instancetype)query {
  NSString *pathURITemplate = @"cases:GetAgentUnreadCasesInfo";
  GTLRSupportcasesQuery_CasesGetAgentUnreadCasesInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_GetAgentUnreadCasesInfoResponse class];
  query.loggingName = @"supportcases.cases.getAgentUnreadCasesInfo";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesGetConsultSla

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetConsultSlaRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getConsultSla";
  GTLRSupportcasesQuery_CasesGetConsultSla *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetConsultSlaResponse class];
  query.loggingName = @"supportcases.cases.getConsultSla";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesIssueProductUpdateAgentCategories

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAgentCategoriesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateAgentCategories";
  GTLRSupportcasesQuery_CasesIssueProductUpdateAgentCategories *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateAgentCategoriesResponse class];
  query.loggingName = @"supportcases.cases.issue.product.updateAgentCategories";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesIssueUpdateAccounts

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateAccountsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesIssueUpdateAccounts *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateAccountsResponse class];
  query.loggingName = @"supportcases.cases.issue.updateAccounts";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesIssueUpdateLocale

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateLocaleRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateLocale";
  GTLRSupportcasesQuery_CasesIssueUpdateLocale *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateLocaleResponse class];
  query.loggingName = @"supportcases.cases.issue.updateLocale";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesIssueUpdateProduct

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateProductRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesIssueUpdateProduct *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Product class];
  query.loggingName = @"supportcases.cases.issue.updateProduct";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesIssueUpdateSummary

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateSummaryRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateSummary";
  GTLRSupportcasesQuery_CasesIssueUpdateSummary *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateSummaryResponse class];
  query.loggingName = @"supportcases.cases.issue.updateSummary";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesListByAgent

@dynamic caseType, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"cases:listByAgent";
  GTLRSupportcasesQuery_CasesListByAgent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListCasesByAgentResponse class];
  query.loggingName = @"supportcases.cases.listByAgent";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesNeedsInfo

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_NeedsInfoRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:needsInfo";
  GTLRSupportcasesQuery_CasesNeedsInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_NeedsInfoResponse class];
  query.loggingName = @"supportcases.cases.needsInfo";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesOfferedSolution

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_OfferedSolutionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:offeredSolution";
  GTLRSupportcasesQuery_CasesOfferedSolution *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_OfferedSolutionResponse class];
  query.loggingName = @"supportcases.cases.offeredSolution";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesRead

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ReadCaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:read";
  GTLRSupportcasesQuery_CasesRead *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.cases.read";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesRelease

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ReleaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:release";
  GTLRSupportcasesQuery_CasesRelease *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ReleaseResponse class];
  query.loggingName = @"supportcases.cases.release";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesRoute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_RouteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:route";
  GTLRSupportcasesQuery_CasesRoute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RouteResponse class];
  query.loggingName = @"supportcases.cases.route";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesSpam

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_SpamRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:spam";
  GTLRSupportcasesQuery_CasesSpam *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SpamResponse class];
  query.loggingName = @"supportcases.cases.spam";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesSplit

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_SplitRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:split";
  GTLRSupportcasesQuery_CasesSplit *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SplitResponse class];
  query.loggingName = @"supportcases.cases.split";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesSuggestNewEmailHeaders

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:suggestNewEmailHeaders";
  GTLRSupportcasesQuery_CasesSuggestNewEmailHeaders *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SuggestNewEmailHeadersResponse class];
  query.loggingName = @"supportcases.cases.suggestNewEmailHeaders";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesSuggestNoteHeaders

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:suggestNoteHeaders";
  GTLRSupportcasesQuery_CasesSuggestNoteHeaders *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SuggestNoteHeadersResponse class];
  query.loggingName = @"supportcases.cases.suggestNoteHeaders";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesTake

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_TakeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:take";
  GTLRSupportcasesQuery_CasesTake *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_TakeResponse class];
  query.loggingName = @"supportcases.cases.take";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesTransfer

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_TransferRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:transfer";
  GTLRSupportcasesQuery_CasesTransfer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_TransferResponse class];
  query.loggingName = @"supportcases.cases.transfer";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesUnassign

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UnassignRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:unassign";
  GTLRSupportcasesQuery_CasesUnassign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UnassignResponse class];
  query.loggingName = @"supportcases.cases.unassign";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesUnblock

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UnblockRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:unblock";
  GTLRSupportcasesQuery_CasesUnblock *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UnblockResponse class];
  query.loggingName = @"supportcases.cases.unblock";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesUnspam

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UnspamRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:unspam";
  GTLRSupportcasesQuery_CasesUnspam *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UnspamResponse class];
  query.loggingName = @"supportcases.cases.unspam";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesUpdateDisconnectedChannel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateDisconnectedChannelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateDisconnectedChannel";
  GTLRSupportcasesQuery_CasesUpdateDisconnectedChannel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.cases.updateDisconnectedChannel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesUpdateEligibleProgram

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateEligibleProgramRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateEligibleProgram";
  GTLRSupportcasesQuery_CasesUpdateEligibleProgram *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateEligibleProgramResponse class];
  query.loggingName = @"supportcases.cases.updateEligibleProgram";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesValidateConsultForm

+ (instancetype)queryWithObject:(GTLRSupportcases_ValidateConsultFormRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"cases:validateConsultForm";
  GTLRSupportcasesQuery_CasesValidateConsultForm *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ValidateConsultFormResponse class];
  query.loggingName = @"supportcases.cases.validateConsultForm";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesWaitForConsult

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_WaitForConsultRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:WaitForConsult";
  GTLRSupportcasesQuery_CasesWaitForConsult *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_WaitForConsultResponse class];
  query.loggingName = @"supportcases.cases.waitForConsult";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesWorkflowsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesWorkflowsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CasesWorkflow class];
  query.loggingName = @"supportcases.cases.workflows.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesWorkflowsPost

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateWorkflowRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CasesWorkflowsPost *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CasesWorkflow class];
  query.loggingName = @"supportcases.cases.workflows.post";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CasesWorkflowsUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateWorkflowRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:update";
  GTLRSupportcasesQuery_CasesWorkflowsUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CasesWorkflow class];
  query.loggingName = @"supportcases.cases.workflows.update";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosBatchGet

@dynamic names;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"categoryInfos:batchGet";
  GTLRSupportcasesQuery_CategoryInfosBatchGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_BatchGetCategoryInfosResponse class];
  query.loggingName = @"supportcases.categoryInfos.batchGet";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CategoryInfosGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CategoryInfo class];
  query.loggingName = @"supportcases.categoryInfos.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosListChildren

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:listChildren";
  GTLRSupportcasesQuery_CategoryInfosListChildren *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListChildrenCategoryInfosResponse class];
  query.loggingName = @"supportcases.categoryInfos.listChildren";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosListTopLevel

+ (instancetype)query {
  NSString *pathURITemplate = @"categoryInfos:listTopLevel";
  GTLRSupportcasesQuery_CategoryInfosListTopLevel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListTopLevelCategoryInfosResponse class];
  query.loggingName = @"supportcases.categoryInfos.listTopLevel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosPropertiesList

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/properties";
  GTLRSupportcasesQuery_CategoryInfosPropertiesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListPropertiesResponse class];
  query.loggingName = @"supportcases.categoryInfos.properties.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosSearch

@dynamic baselineOnly, filterByParentCategoryId, filterConsultCategories,
         maximumResults, productIds, query, topCategoryPathNodeIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"productIds" : [NSString class],
    @"topCategoryPathNodeIds" : [NSNumber class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"categoryInfos:search";
  GTLRSupportcasesQuery_CategoryInfosSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_SearchCategoryInfosResponse class];
  query.loggingName = @"supportcases.categoryInfos.search";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CategoryInfosSearchMultiple

+ (instancetype)queryWithObject:(GTLRSupportcases_SearchMultipleCategoryInfosRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"categoryInfos:searchMultiple";
  GTLRSupportcasesQuery_CategoryInfosSearchMultiple *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SearchCategoryInfosResponse class];
  query.loggingName = @"supportcases.categoryInfos.searchMultiple";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsAttachmentsDelete

@dynamic caseId, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_CommunicationsAttachmentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.communications.attachments.delete";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsBuildNewEmail

+ (instancetype)queryWithObject:(GTLRSupportcases_BuildNewEmailRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"communications:buildNewEmail";
  GTLRSupportcasesQuery_CommunicationsBuildNewEmail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_BuildNewEmailResponse class];
  query.loggingName = @"supportcases.communications.buildNewEmail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsBuildReplyEmail

+ (instancetype)queryWithObject:(GTLRSupportcases_BuildReplyEmailRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"communications:buildReplyEmail";
  GTLRSupportcasesQuery_CommunicationsBuildReplyEmail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_BuildReplyEmailResponse class];
  query.loggingName = @"supportcases.communications.buildReplyEmail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsCancelSend

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelSendRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancelSend";
  GTLRSupportcasesQuery_CommunicationsCancelSend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.communications.cancelSend";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsCreateConsultNote

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateConsultNoteRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"communications:createConsultNote";
  GTLRSupportcasesQuery_CommunicationsCreateConsultNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CreateConsultNoteResponse class];
  query.loggingName = @"supportcases.communications.createConsultNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsCreateEmail

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateEmailRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"communications:createEmail";
  GTLRSupportcasesQuery_CommunicationsCreateEmail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CreateEmailResponse class];
  query.loggingName = @"supportcases.communications.createEmail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsCreateNote

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateNoteRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"communications:createNote";
  GTLRSupportcasesQuery_CommunicationsCreateNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CreateNoteResponse class];
  query.loggingName = @"supportcases.communications.createNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsDiscardDraft

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_DiscardDraftRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:discardDraft";
  GTLRSupportcasesQuery_CommunicationsDiscardDraft *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_DiscardDraftResponse class];
  query.loggingName = @"supportcases.communications.discardDraft";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsFinalizeConsultNote

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_FinalizeConsultNoteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:finalizeConsultNote";
  GTLRSupportcasesQuery_CommunicationsFinalizeConsultNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_FinalizeConsultNoteResponse class];
  query.loggingName = @"supportcases.communications.finalizeConsultNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsFinalizeNote

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_FinalizeNoteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:finalizeNote";
  GTLRSupportcasesQuery_CommunicationsFinalizeNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_FinalizeNoteResponse class];
  query.loggingName = @"supportcases.communications.finalizeNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsList

@dynamic caseIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"caseIds" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"communications";
  GTLRSupportcasesQuery_CommunicationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListCommunicationsResponse class];
  query.loggingName = @"supportcases.communications.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsListRelated

@dynamic caseId, contextCaseId;

+ (instancetype)query {
  NSString *pathURITemplate = @"communications:listRelated";
  GTLRSupportcasesQuery_CommunicationsListRelated *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListRelatedCommunicationsResponse class];
  query.loggingName = @"supportcases.communications.listRelated";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsSend

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_SendEmailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:send";
  GTLRSupportcasesQuery_CommunicationsSend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_SendEmailResponse class];
  query.loggingName = @"supportcases.communications.send";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsSuggestReplyEmailHeaders

@dynamic caseId, messageId, replyType;

+ (instancetype)query {
  NSString *pathURITemplate = @"communications:suggestReplyEmailHeaders";
  GTLRSupportcasesQuery_CommunicationsSuggestReplyEmailHeaders *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_SuggestReplyEmailHeadersResponse class];
  query.loggingName = @"supportcases.communications.suggestReplyEmailHeaders";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsUpdateConsultNote

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateConsultNoteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateConsultNote";
  GTLRSupportcasesQuery_CommunicationsUpdateConsultNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateConsultNoteResponse class];
  query.loggingName = @"supportcases.communications.updateConsultNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsUpdateEmail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateEmailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateEmail";
  GTLRSupportcasesQuery_CommunicationsUpdateEmail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateEmailResponse class];
  query.loggingName = @"supportcases.communications.updateEmail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CommunicationsUpdateNote

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_UpdateNoteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:updateNote";
  GTLRSupportcasesQuery_CommunicationsUpdateNote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_UpdateNoteResponse class];
  query.loggingName = @"supportcases.communications.updateNote";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CustomerInteractionsList

@dynamic adwordsCid, caseId, channels, emailAddress, excludeCases, pageSize,
         pageToken, products;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"channels" : [NSString class],
    @"excludeCases" : [NSString class],
    @"products" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"customerInteractions";
  GTLRSupportcasesQuery_CustomerInteractionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListInteractionsResponse class];
  query.loggingName = @"supportcases.customerInteractions.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CustomerInteractionsSummarize

@dynamic adwordsCid, caseId, emailAddress, excludeCases, startTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"excludeCases" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"customerInteractions:summarize";
  GTLRSupportcasesQuery_CustomerInteractionsSummarize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_SummarizeResponse class];
  query.loggingName = @"supportcases.customerInteractions.summarize";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_CustomerIssuesList

@dynamic caseId;

+ (instancetype)query {
  NSString *pathURITemplate = @"customerIssues:list";
  GTLRSupportcasesQuery_CustomerIssuesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListCustomerIssuesResponse class];
  query.loggingName = @"supportcases.customerIssues.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_DevicesGetById

@dynamic caseId, deviceId;

+ (instancetype)query {
  NSString *pathURITemplate = @"devices:getById";
  GTLRSupportcasesQuery_DevicesGetById *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_GetByDeviceIdResponse class];
  query.loggingName = @"supportcases.devices.getById";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_DevicesList

@dynamic caseId, email, excludeGoogleStoreOrders, excludeRmaTypes, pageSize,
         pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"devices";
  GTLRSupportcasesQuery_DevicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListDevicesResponse class];
  query.loggingName = @"supportcases.devices.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_DevicesUpdateOwner

@dynamic addressAddressee, addressAddressLine1, addressAddressLine2,
         addressAddressLine3, addressCity, addressCountryCode,
         addressPostalCode, addressStateProvinceCode, deviceId, email;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"addressAddressee" : @"address.addressee",
    @"addressAddressLine1" : @"address.addressLine1",
    @"addressAddressLine2" : @"address.addressLine2",
    @"addressAddressLine3" : @"address.addressLine3",
    @"addressCity" : @"address.city",
    @"addressCountryCode" : @"address.countryCode",
    @"addressPostalCode" : @"address.postalCode",
    @"addressStateProvinceCode" : @"address.stateProvinceCode"
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"devices:updateOwner";
  GTLRSupportcasesQuery_DevicesUpdateOwner *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_UpdateOwnerResponse class];
  query.loggingName = @"supportcases.devices.updateOwner";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_GiftCardsCheckRedeemer

+ (instancetype)queryWithObject:(GTLRSupportcases_CheckRedeemerRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"giftCards:checkRedeemer";
  GTLRSupportcasesQuery_GiftCardsCheckRedeemer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CheckRedeemerResponse class];
  query.loggingName = @"supportcases.giftCards.checkRedeemer";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_GiftCardsLookup

+ (instancetype)queryWithObject:(GTLRSupportcases_LookupGiftCardRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"giftCards:lookup";
  GTLRSupportcasesQuery_GiftCardsLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_LookupGiftCardResponse class];
  query.loggingName = @"supportcases.giftCards.lookup";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_GiftCardsRedeem

+ (instancetype)queryWithObject:(GTLRSupportcases_RedeemGiftCardRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"giftCards:redeem";
  GTLRSupportcasesQuery_GiftCardsRedeem *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_RedeemGiftCardResponse class];
  query.loggingName = @"supportcases.giftCards.redeem";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_GiftCardsVerify

+ (instancetype)queryWithObject:(GTLRSupportcases_VerifyGiftCardRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"giftCards:verify";
  GTLRSupportcasesQuery_GiftCardsVerify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_VerifyGiftCardResponse class];
  query.loggingName = @"supportcases.giftCards.verify";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_GinlogsLogDataAccess

+ (instancetype)queryWithObject:(GTLRSupportcases_LogDataAccessRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"ginlogs:logDataAccess";
  GTLRSupportcasesQuery_GinlogsLogDataAccess *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.ginlogs.logDataAccess";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancel";
  GTLRSupportcasesQuery_HardwareAuditorOrdersCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersGetDetail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareOrderDetailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getDetail";
  GTLRSupportcasesQuery_HardwareAuditorOrdersGetDetail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_HardwareOrderDetail class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.getDetail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingAddress

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingAddress";
  GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingAddress *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingAddress class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.getShippingAddress";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerName

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerName";
  GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerName *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerName class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.getShippingCustomerName";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerPhoneNumber

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerPhoneNumber";
  GTLRSupportcasesQuery_HardwareAuditorOrdersGetShippingCustomerPhoneNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerPhoneNumber class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.getShippingCustomerPhoneNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersList

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareOrdersRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"hardwareAuditor/orders:list";
  GTLRSupportcasesQuery_HardwareAuditorOrdersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareOrdersResponse class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorOrdersRefunds

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/refunds";
  GTLRSupportcasesQuery_HardwareAuditorOrdersRefunds *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareRefundsResponse class];
  query.loggingName = @"supportcases.hardwareAuditor.orders.refunds";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorShipmentsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancel";
  GTLRSupportcasesQuery_HardwareAuditorShipmentsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.hardwareAuditor.shipments.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingAddress

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingAddress";
  GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingAddress *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingAddress class];
  query.loggingName = @"supportcases.hardwareAuditor.shipments.getShippingAddress";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerName

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerName";
  GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerName *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerName class];
  query.loggingName = @"supportcases.hardwareAuditor.shipments.getShippingCustomerName";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerPhoneNumber

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerPhoneNumber";
  GTLRSupportcasesQuery_HardwareAuditorShipmentsGetShippingCustomerPhoneNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerPhoneNumber class];
  query.loggingName = @"supportcases.hardwareAuditor.shipments.getShippingCustomerPhoneNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareAuditorShipmentsRefunds

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/refunds";
  GTLRSupportcasesQuery_HardwareAuditorShipmentsRefunds *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareRefundsResponse class];
  query.loggingName = @"supportcases.hardwareAuditor.shipments.refunds";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancel";
  GTLRSupportcasesQuery_HardwareOrdersCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.hardwareOrders.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersGetDetail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareOrderDetailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getDetail";
  GTLRSupportcasesQuery_HardwareOrdersGetDetail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_HardwareOrderDetail class];
  query.loggingName = @"supportcases.hardwareOrders.getDetail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersGetLostStolenRefundEligibility

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenRefundEligibilityRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getLostStolenRefundEligibility";
  GTLRSupportcasesQuery_HardwareOrdersGetLostStolenRefundEligibility *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_LostStolenRefundEligibility class];
  query.loggingName = @"supportcases.hardwareOrders.getLostStolenRefundEligibility";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersGetShippingAddress

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingAddress";
  GTLRSupportcasesQuery_HardwareOrdersGetShippingAddress *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingAddress class];
  query.loggingName = @"supportcases.hardwareOrders.getShippingAddress";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerName

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerName";
  GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerName *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerName class];
  query.loggingName = @"supportcases.hardwareOrders.getShippingCustomerName";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerPhoneNumber

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerPhoneNumber";
  GTLRSupportcasesQuery_HardwareOrdersGetShippingCustomerPhoneNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerPhoneNumber class];
  query.loggingName = @"supportcases.hardwareOrders.getShippingCustomerPhoneNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersHardwareSignals

+ (instancetype)queryWithObject:(GTLRSupportcases_GetHardwareSignalsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"hardwareOrders:hardwareSignals";
  GTLRSupportcasesQuery_HardwareOrdersHardwareSignals *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetHardwareSignalsResponse class];
  query.loggingName = @"supportcases.hardwareOrders.hardwareSignals";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersList

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareOrdersRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"hardwareOrders:list";
  GTLRSupportcasesQuery_HardwareOrdersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareOrdersResponse class];
  query.loggingName = @"supportcases.hardwareOrders.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersListOtherDevices

+ (instancetype)queryWithObject:(GTLRSupportcases_ListOtherDevicesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"hardwareOrders:listOtherDevices";
  GTLRSupportcasesQuery_HardwareOrdersListOtherDevices *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListOtherDevicesResponse class];
  query.loggingName = @"supportcases.hardwareOrders.listOtherDevices";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersRefund

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_RefundHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:refund";
  GTLRSupportcasesQuery_HardwareOrdersRefund *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RefundHardwareOrderResponse class];
  query.loggingName = @"supportcases.hardwareOrders.refund";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareOrdersRefunds

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/refunds";
  GTLRSupportcasesQuery_HardwareOrdersRefunds *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareRefundsResponse class];
  query.loggingName = @"supportcases.hardwareOrders.refunds";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancel";
  GTLRSupportcasesQuery_HardwareShipmentsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.hardwareShipments.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsGetLostStolenRefundEligibility

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenRefundEligibilityRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getLostStolenRefundEligibility";
  GTLRSupportcasesQuery_HardwareShipmentsGetLostStolenRefundEligibility *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_LostStolenRefundEligibility class];
  query.loggingName = @"supportcases.hardwareShipments.getLostStolenRefundEligibility";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsGetShippingAddress

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingAddressRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingAddress";
  GTLRSupportcasesQuery_HardwareShipmentsGetShippingAddress *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingAddress class];
  query.loggingName = @"supportcases.hardwareShipments.getShippingAddress";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerName

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerNameRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerName";
  GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerName *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerName class];
  query.loggingName = @"supportcases.hardwareShipments.getShippingCustomerName";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerPhoneNumber

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetShippingCustomerPhoneNumberRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getShippingCustomerPhoneNumber";
  GTLRSupportcasesQuery_HardwareShipmentsGetShippingCustomerPhoneNumber *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ShippingCustomerPhoneNumber class];
  query.loggingName = @"supportcases.hardwareShipments.getShippingCustomerPhoneNumber";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsRefund

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_RefundHardwareOrderRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:refund";
  GTLRSupportcasesQuery_HardwareShipmentsRefund *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RefundHardwareOrderResponse class];
  query.loggingName = @"supportcases.hardwareShipments.refund";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_HardwareShipmentsRefunds

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_ListHardwareRefundsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}/refunds";
  GTLRSupportcasesQuery_HardwareShipmentsRefunds *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListHardwareRefundsResponse class];
  query.loggingName = @"supportcases.hardwareShipments.refunds";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_OpportunitiesList

@dynamic agentWhitelistedForApollo, caseId;

+ (instancetype)query {
  NSString *pathURITemplate = @"opportunities";
  GTLRSupportcasesQuery_OpportunitiesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListOpportunitiesResponse class];
  query.loggingName = @"supportcases.opportunities.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_OpportunitiesPitchesBatchCreate

+ (instancetype)queryWithObject:(GTLRSupportcases_BatchCreatePitchRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"opportunities/pitches:batchCreate";
  GTLRSupportcasesQuery_OpportunitiesPitchesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_BatchCreatePitchResponse class];
  query.loggingName = @"supportcases.opportunities.pitches.batchCreate";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentGetRefundStatus

+ (instancetype)queryWithObject:(GTLRSupportcases_GetRefundStatusRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent:getRefundStatus";
  GTLRSupportcasesQuery_PlayDigitalContentGetRefundStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetRefundStatusResponse class];
  query.loggingName = @"supportcases.play.digitalContent.getRefundStatus";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentOrdersBatchGet

+ (instancetype)queryWithObject:(GTLRSupportcases_GetOrdersRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/orders:batchGet";
  GTLRSupportcasesQuery_PlayDigitalContentOrdersBatchGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetOrdersResponse class];
  query.loggingName = @"supportcases.play.digitalContent.orders.batchGet";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentOrdersRefund

+ (instancetype)queryWithObject:(GTLRSupportcases_RefundOrdersRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/orders:refund";
  GTLRSupportcasesQuery_PlayDigitalContentOrdersRefund *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_RefundOrdersResponse class];
  query.loggingName = @"supportcases.play.digitalContent.orders.refund";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentOrdersSearch

+ (instancetype)queryWithObject:(GTLRSupportcases_SearchOrdersRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/orders:search";
  GTLRSupportcasesQuery_PlayDigitalContentOrdersSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SearchOrdersResponse class];
  query.loggingName = @"supportcases.play.digitalContent.orders.search";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsBatchGet

+ (instancetype)queryWithObject:(GTLRSupportcases_GetSubscriptionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/subscriptions:batchGet";
  GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsBatchGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetSubscriptionsResponse class];
  query.loggingName = @"supportcases.play.digitalContent.subscriptions.batchGet";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsCancel

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelSubscriptionRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/subscriptions:cancel";
  GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CancelSubscriptionResponse class];
  query.loggingName = @"supportcases.play.digitalContent.subscriptions.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsGetCancellationStatus

+ (instancetype)queryWithObject:(GTLRSupportcases_GetCancellationStatusRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/subscriptions:getCancellationStatus";
  GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsGetCancellationStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetCancellationStatusResponse class];
  query.loggingName = @"supportcases.play.digitalContent.subscriptions.getCancellationStatus";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsList

+ (instancetype)queryWithObject:(GTLRSupportcases_ListSubscriptionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"play/digitalContent/subscriptions:list";
  GTLRSupportcasesQuery_PlayDigitalContentSubscriptionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListSubscriptionsResponse class];
  query.loggingName = @"supportcases.play.digitalContent.subscriptions.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_ProductsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Product1 class];
  query.loggingName = @"supportcases.products.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsGetEscalationTargets

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getEscalationTargets";
  GTLRSupportcasesQuery_ProductsGetEscalationTargets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetEscalationTargetsResponse class];
  query.loggingName = @"supportcases.products.getEscalationTargets";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsGetRoutingTargets

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getRoutingTargets";
  GTLRSupportcasesQuery_ProductsGetRoutingTargets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_GetRoutingTargetsResponse class];
  query.loggingName = @"supportcases.products.getRoutingTargets";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsGetSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_ProductsGetSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Settings class];
  query.loggingName = @"supportcases.products.getSettings";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsList

+ (instancetype)query {
  NSString *pathURITemplate = @"products";
  GTLRSupportcasesQuery_ProductsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListProductsResponse class];
  query.loggingName = @"supportcases.products.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ProductsListSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:listSettings";
  GTLRSupportcasesQuery_ProductsListSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ListSettingsResponse1 class];
  query.loggingName = @"supportcases.products.listSettings";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ResolutionsCohortsAssign

+ (instancetype)queryWithObject:(GTLRSupportcases_AssignCohortsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"resolutions/cohorts:assign";
  GTLRSupportcasesQuery_ResolutionsCohortsAssign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_AssignCohortsResponse class];
  query.loggingName = @"supportcases.resolutions.cohorts.assign";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ResolutionsList

@dynamic autocompleteResults, caseId, pageSize, pageToken, q, resultsToken,
         searchSessionId, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"type" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"resolutions";
  GTLRSupportcasesQuery_ResolutionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListResolutionsResponse class];
  query.loggingName = @"supportcases.resolutions.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ResolutionsLog

+ (instancetype)queryWithObject:(GTLRSupportcases_LogResolutionRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"resolutions:log";
  GTLRSupportcasesQuery_ResolutionsLog *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.resolutions.log";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_ResolutionsSuggest

+ (instancetype)queryWithObject:(GTLRSupportcases_SuggestResolutionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"resolutions:suggest";
  GTLRSupportcasesQuery_ResolutionsSuggest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SuggestResolutionsResponse class];
  query.loggingName = @"supportcases.resolutions.suggest";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmaSave

+ (instancetype)queryWithObject:(GTLRSupportcases_SaveRmaRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"rma:save";
  GTLRSupportcasesQuery_RmaSave *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SaveRmaResponse class];
  query.loggingName = @"supportcases.rma.save";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelRmaRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancel";
  GTLRSupportcasesQuery_RmasCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_CancelRmaResponse class];
  query.loggingName = @"supportcases.rmas.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasCancelAuthHold

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelAuthHoldRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:cancelAuthHold";
  GTLRSupportcasesQuery_RmasCancelAuthHold *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.rmas.cancelAuthHold";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasCreateExchangeWithoutReturn

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateExchangeWithoutReturnRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"rmas:createExchangeWithoutReturn";
  GTLRSupportcasesQuery_RmasCreateExchangeWithoutReturn *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CreateExchangeWithoutReturnResponse class];
  query.loggingName = @"supportcases.rmas.createExchangeWithoutReturn";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasGet

@dynamic caseId, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}";
  GTLRSupportcasesQuery_RmasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Rma class];
  query.loggingName = @"supportcases.rmas.get";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasGetLostStolenEligibility

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetLostStolenEligibilityRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getLostStolenEligibility";
  GTLRSupportcasesQuery_RmasGetLostStolenEligibility *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_LostStolenEligibility class];
  query.loggingName = @"supportcases.rmas.getLostStolenEligibility";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasGetMailingAddress

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetMailingAddressRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getMailingAddress";
  GTLRSupportcasesQuery_RmasGetMailingAddress *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_MailingAddress class];
  query.loggingName = @"supportcases.rmas.getMailingAddress";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasGetOrderDetail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetRmaOrderDetailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getOrderDetail";
  GTLRSupportcasesQuery_RmasGetOrderDetail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RmaOrderDetail class];
  query.loggingName = @"supportcases.rmas.getOrderDetail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasGetReplacementDetail

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_GetReplacementDetailRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:getReplacementDetail";
  GTLRSupportcasesQuery_RmasGetReplacementDetail *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_ReplacementDetail class];
  query.loggingName = @"supportcases.rmas.getReplacementDetail";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasList

@dynamic caseId, state;

+ (instancetype)query {
  NSString *pathURITemplate = @"rmas";
  GTLRSupportcasesQuery_RmasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListRmasResponse class];
  query.loggingName = @"supportcases.rmas.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasListBuyersRemorseCountryCodes

+ (instancetype)query {
  NSString *pathURITemplate = @"rmas:listBuyersRemorseCountryCodes";
  GTLRSupportcasesQuery_RmasListBuyersRemorseCountryCodes *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListBuyersRemorseCountryCodesResponse class];
  query.loggingName = @"supportcases.rmas.listBuyersRemorseCountryCodes";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasMarkOriginalDeviceReceived

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_MarkOriginalDeviceReceivedRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:markOriginalDeviceReceived";
  GTLRSupportcasesQuery_RmasMarkOriginalDeviceReceived *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.rmas.markOriginalDeviceReceived";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasRunRmaSteps

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_RunRmaStepsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:runRmaSteps";
  GTLRSupportcasesQuery_RmasRunRmaSteps *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_RunRmaStepsResponse class];
  query.loggingName = @"supportcases.rmas.runRmaSteps";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasRunWorkflow

+ (instancetype)queryWithObject:(GTLRSupportcases_RunWorkflowRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"rmas:runWorkflow";
  GTLRSupportcasesQuery_RmasRunWorkflow *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_RunWorkflowResponse class];
  query.loggingName = @"supportcases.rmas.runWorkflow";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmasSend

+ (instancetype)queryWithObject:(GTLRSupportcases_SendRmaRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"rmas:send";
  GTLRSupportcasesQuery_RmasSend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SendRmaResponse class];
  query.loggingName = @"supportcases.rmas.send";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_RmaSubmit

+ (instancetype)queryWithObject:(GTLRSupportcases_SubmitRmaRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"rma:submit";
  GTLRSupportcasesQuery_RmaSubmit *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SubmitRmaResponse class];
  query.loggingName = @"supportcases.rma.submit";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TeamsGetMyAssignStreamSearches

+ (instancetype)query {
  NSString *pathURITemplate = @"teams:getMyAssignStreamSearches";
  GTLRSupportcasesQuery_TeamsGetMyAssignStreamSearches *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_GetMyAssignStreamSearchesResponse class];
  query.loggingName = @"supportcases.teams.getMyAssignStreamSearches";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsCreate

+ (instancetype)queryWithObject:(GTLRSupportcases_CreateTroubleshooterSessionRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"troubleshooterSessions:create";
  GTLRSupportcasesQuery_TroubleshooterSessionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_TroubleshooterSession class];
  query.loggingName = @"supportcases.troubleshooterSessions.create";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsListDevices

+ (instancetype)queryWithObject:(GTLRSupportcases_ListDevicesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"troubleshooterSessions:listDevices";
  GTLRSupportcasesQuery_TroubleshooterSessionsListDevices *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListDevicesResponse1 class];
  query.loggingName = @"supportcases.troubleshooterSessions.listDevices";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsListIssues

@dynamic caseId, issueId, troubleshooterType;

+ (instancetype)query {
  NSString *pathURITemplate = @"troubleshooterSessions:listIssues";
  GTLRSupportcasesQuery_TroubleshooterSessionsListIssues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListIssuesResponse class];
  query.loggingName = @"supportcases.troubleshooterSessions.listIssues";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedApps

+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedAppsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"troubleshooterSessions:listPurchasedApps";
  GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedApps *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListPurchasedAppsResponse class];
  query.loggingName = @"supportcases.troubleshooterSessions.listPurchasedApps";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedBooks

+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedBooksRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"troubleshooterSessions:listPurchasedBooks";
  GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedBooks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListPurchasedBooksResponse class];
  query.loggingName = @"supportcases.troubleshooterSessions.listPurchasedBooks";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedVideos

+ (instancetype)queryWithObject:(GTLRSupportcases_ListPurchasedVideosRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"troubleshooterSessions:listPurchasedVideos";
  GTLRSupportcasesQuery_TroubleshooterSessionsListPurchasedVideos *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListPurchasedVideosResponse class];
  query.loggingName = @"supportcases.troubleshooterSessions.listPurchasedVideos";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsLog

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_LogTroubleshooterActivityRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:log";
  GTLRSupportcasesQuery_TroubleshooterSessionsLog *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_Empty class];
  query.loggingName = @"supportcases.troubleshooterSessions.log";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_TroubleshooterSessionsTroubleshootIssue

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootIssueRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"{+name}:troubleshootIssue";
  GTLRSupportcasesQuery_TroubleshooterSessionsTroubleshootIssue *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSupportcases_TroubleshootIssueResponse class];
  query.loggingName = @"supportcases.troubleshooterSessions.troubleshootIssue";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsGetPaymentsInfo

+ (instancetype)queryWithObject:(GTLRSupportcases_GetPaymentsInfoRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/accounts:getPaymentsInfo";
  GTLRSupportcasesQuery_WalletsAccountsGetPaymentsInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetPaymentsInfoResponse class];
  query.loggingName = @"supportcases.wallets.accounts.getPaymentsInfo";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsGetReviewStatus

+ (instancetype)queryWithObject:(GTLRSupportcases_GetAccountReviewStatusRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/accounts:getReviewStatus";
  GTLRSupportcasesQuery_WalletsAccountsGetReviewStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetAccountReviewStatusResponse class];
  query.loggingName = @"supportcases.wallets.accounts.getReviewStatus";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsGetSignals

@dynamic accountSignals, caseId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accountSignals" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"wallets/accounts:getSignals";
  GTLRSupportcasesQuery_WalletsAccountsGetSignals *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_GetAccountSignalsResponse class];
  query.loggingName = @"supportcases.wallets.accounts.getSignals";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsGetHijackReviewsStatus

+ (instancetype)queryWithObject:(GTLRSupportcases_GetPaymentMethodHijackReviewsStatusRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/accounts/paymentInstruments:getHijackReviewsStatus";
  GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsGetHijackReviewsStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetPaymentMethodHijackReviewsStatusResponse class];
  query.loggingName = @"supportcases.wallets.accounts.paymentInstruments.getHijackReviewsStatus";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsInitiateHijackReviews

+ (instancetype)queryWithObject:(GTLRSupportcases_InitiatePaymentMethodHijackReviewsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/accounts/paymentInstruments:initiateHijackReviews";
  GTLRSupportcasesQuery_WalletsAccountsPaymentInstrumentsInitiateHijackReviews *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_InitiatePaymentMethodHijackReviewsResponse class];
  query.loggingName = @"supportcases.wallets.accounts.paymentInstruments.initiateHijackReviews";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsAccountsSearchReviews

+ (instancetype)queryWithObject:(GTLRSupportcases_SearchAccountReviewsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/accounts:searchReviews";
  GTLRSupportcasesQuery_WalletsAccountsSearchReviews *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_SearchAccountReviewsResponse class];
  query.loggingName = @"supportcases.wallets.accounts.searchReviews";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsBankAccountCountries

+ (instancetype)queryWithObject:(GTLRSupportcases_ListBankAccountCountriesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/bankAccountCountries";
  GTLRSupportcasesQuery_WalletsBankAccountCountries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListBankAccountCountriesResponse class];
  query.loggingName = @"supportcases.wallets.bankAccountCountries";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsCreditCardTypes

+ (instancetype)queryWithObject:(GTLRSupportcases_ListCreditCardTypesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/creditCardTypes";
  GTLRSupportcasesQuery_WalletsCreditCardTypes *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListCreditCardTypesResponse class];
  query.loggingName = @"supportcases.wallets.creditCardTypes";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsPaymentInstrumentsSuggestIssuer

@dynamic caseId, includeDescription, instrumentTypeToken, searchKey;

+ (instancetype)query {
  NSString *pathURITemplate = @"wallets/paymentInstruments:suggestIssuer";
  GTLRSupportcasesQuery_WalletsPaymentInstrumentsSuggestIssuer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_SuggestPaymentInstrumentIssuerResponse class];
  query.loggingName = @"supportcases.wallets.paymentInstruments.suggestIssuer";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsPaymentInstrumentTypeInfosList

@dynamic caseId;

+ (instancetype)query {
  NSString *pathURITemplate = @"wallets/paymentInstrumentTypeInfos";
  GTLRSupportcasesQuery_WalletsPaymentInstrumentTypeInfosList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSupportcases_ListPaymentInstrumentTypeInfosResponse class];
  query.loggingName = @"supportcases.wallets.paymentInstrumentTypeInfos.list";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsTransactions

+ (instancetype)queryWithObject:(GTLRSupportcases_ListTransactionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets/transactions";
  GTLRSupportcasesQuery_WalletsTransactions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListTransactionsResponse class];
  query.loggingName = @"supportcases.wallets.transactions";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsTroubleshootAccount

+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootAccountRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets:troubleshootAccount";
  GTLRSupportcasesQuery_WalletsTroubleshootAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_TroubleshootAccountResponse class];
  query.loggingName = @"supportcases.wallets.troubleshootAccount";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_WalletsTroubleshootTransaction

+ (instancetype)queryWithObject:(GTLRSupportcases_TroubleshootTransactionRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"wallets:troubleshootTransaction";
  GTLRSupportcasesQuery_WalletsTroubleshootTransaction *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_TroubleshootTransactionResponse class];
  query.loggingName = @"supportcases.wallets.troubleshootTransaction";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeComponentsCancel

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelComponentsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/components:cancel";
  GTLRSupportcasesQuery_YoutubeComponentsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CancelComponentsResponse class];
  query.loggingName = @"supportcases.youtube.components.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeEntitlementsCancel

+ (instancetype)queryWithObject:(GTLRSupportcases_CancelEntitlementRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/entitlements:cancel";
  GTLRSupportcasesQuery_YoutubeEntitlementsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_CancelEntitlementResponse class];
  query.loggingName = @"supportcases.youtube.entitlements.cancel";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeOnetimepurchases

+ (instancetype)queryWithObject:(GTLRSupportcases_GetOneTimePurchasesRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/onetimepurchases";
  GTLRSupportcasesQuery_YoutubeOnetimepurchases *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetOneTimePurchasesResponse class];
  query.loggingName = @"supportcases.youtube.onetimepurchases";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeSummary

+ (instancetype)queryWithObject:(GTLRSupportcases_GetCustomerSummaryRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/summary";
  GTLRSupportcasesQuery_YoutubeSummary *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_GetCustomerSummaryResponse class];
  query.loggingName = @"supportcases.youtube.summary";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeTransactionsListByEntitlements

+ (instancetype)queryWithObject:(GTLRSupportcases_ListTransactionsRequest1 *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/transactions:listByEntitlements";
  GTLRSupportcasesQuery_YoutubeTransactionsListByEntitlements *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_ListTransactionsResponse1 class];
  query.loggingName = @"supportcases.youtube.transactions.listByEntitlements";
  return query;
}

@end

@implementation GTLRSupportcasesQuery_YoutubeTransactionsRefund

+ (instancetype)queryWithObject:(GTLRSupportcases_RefundTransactionsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"youtube/transactions:refund";
  GTLRSupportcasesQuery_YoutubeTransactionsRefund *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRSupportcases_RefundTransactionsResponse class];
  query.loggingName = @"supportcases.youtube.transactions.refund";
  return query;
}

@end
