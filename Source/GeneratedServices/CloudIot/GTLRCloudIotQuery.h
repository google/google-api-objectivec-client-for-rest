// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud IoT API (cloudiot/v1)
// Description:
//   Registers and manages IoT (Internet of Things) devices that connect to the
//   Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/iot

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudIot_BindDeviceToGatewayRequest;
@class GTLRCloudIot_Device;
@class GTLRCloudIot_DeviceRegistry;
@class GTLRCloudIot_GetIamPolicyRequest;
@class GTLRCloudIot_ModifyCloudToDeviceConfigRequest;
@class GTLRCloudIot_SendCommandToDeviceRequest;
@class GTLRCloudIot_SetIamPolicyRequest;
@class GTLRCloudIot_TestIamPermissionsRequest;
@class GTLRCloudIot_UnbindDeviceFromGatewayRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// gatewayListOptionsGatewayType

/** Value: "GATEWAY" */
GTLR_EXTERN NSString * const kGTLRCloudIotGatewayListOptionsGatewayTypeGateway;
/** Value: "GATEWAY_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRCloudIotGatewayListOptionsGatewayTypeGatewayTypeUnspecified;
/** Value: "NON_GATEWAY" */
GTLR_EXTERN NSString * const kGTLRCloudIotGatewayListOptionsGatewayTypeNonGateway;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloud Iot query classes.
 */
@interface GTLRCloudIotQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Associates the device with the gateway.
 *
 *  Method: cloudiot.projects.locations.registries.bindDeviceToGateway
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesBindDeviceToGateway : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesBindDeviceToGatewayWithObject:parent:]

/**
 *  The name of the registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_BindDeviceToGatewayResponse.
 *
 *  Associates the device with the gateway.
 *
 *  @param object The @c GTLRCloudIot_BindDeviceToGatewayRequest to include in
 *    the query.
 *  @param parent The name of the registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesBindDeviceToGateway
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_BindDeviceToGatewayRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a device registry that contains devices.
 *
 *  Method: cloudiot.projects.locations.registries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesCreate : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesCreateWithObject:parent:]

/**
 *  The project and cloud region where this device registry must be created.
 *  For example, `projects/example-project/locations/us-central1`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_DeviceRegistry.
 *
 *  Creates a device registry that contains devices.
 *
 *  @param object The @c GTLRCloudIot_DeviceRegistry to include in the query.
 *  @param parent The project and cloud region where this device registry must
 *    be created.
 *    For example, `projects/example-project/locations/us-central1`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_DeviceRegistry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a device registry configuration.
 *
 *  Method: cloudiot.projects.locations.registries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDelete : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDeleteWithname:]

/**
 *  The name of the device registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_Empty.
 *
 *  Deletes a device registry configuration.
 *
 *  @param name The name of the device registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the last few versions of the device configuration in descending
 *  order (i.e.: newest first).
 *
 *  Method: cloudiot.projects.locations.registries.devices.configVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesConfigVersionsList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesConfigVersionsListWithname:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The number of versions to list. Versions are listed in decreasing order of
 *  the version number. The maximum number of versions retained is 10. If this
 *  value is zero, it will return all the versions available.
 */
@property(nonatomic, assign) NSInteger numVersions;

/**
 *  Fetches a @c GTLRCloudIot_ListDeviceConfigVersionsResponse.
 *
 *  Lists the last few versions of the device configuration in descending
 *  order (i.e.: newest first).
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesConfigVersionsList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a device in a device registry.
 *
 *  Method: cloudiot.projects.locations.registries.devices.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesCreate : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesCreateWithObject:parent:]

/**
 *  The name of the device registry where this device should be created.
 *  For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_Device.
 *
 *  Creates a device in a device registry.
 *
 *  @param object The @c GTLRCloudIot_Device to include in the query.
 *  @param parent The name of the device registry where this device should be
 *    created.
 *    For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_Device *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a device.
 *
 *  Method: cloudiot.projects.locations.registries.devices.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesDelete : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesDeleteWithname:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_Empty.
 *
 *  Deletes a device.
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a device.
 *
 *  Method: cloudiot.projects.locations.registries.devices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesGet : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesGetWithname:]

/**
 *  The fields of the `Device` resource to be returned in the response. If the
 *  field mask is unset or empty, all fields are returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_Device.
 *
 *  Gets details about a device.
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List devices in a device registry.
 *
 *  Method: cloudiot.projects.locations.registries.devices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesListWithparent:]

/**
 *  A list of device string IDs. For example, `['device0', 'device12']`.
 *  If empty, this field is ignored. Maximum IDs: 10,000
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deviceIds;

/**
 *  A list of device numeric IDs. If empty, this field is ignored. Maximum
 *  IDs: 10,000.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *deviceNumIds;

/**
 *  The fields of the `Device` resource to be returned in the response. The
 *  fields `id` and `num_id` are always returned, along with any
 *  other fields specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  If set, returns only the gateways with which the specified device is
 *  associated. The device ID can be numeric (`num_id`) or the user-defined
 *  string (`id`). For example, if `456` is specified, returns only the
 *  gateways to which the device with `num_id` 456 is bound.
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsAssociationsDeviceId;

/**
 *  If set, only devices associated with the specified gateway are returned.
 *  The gateway ID can be numeric (`num_id`) or the user-defined string
 *  (`id`). For example, if `123` is specified, only devices bound to the
 *  gateway with `num_id` 123 are returned.
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsAssociationsGatewayId;

/**
 *  If `GATEWAY` is specified, only gateways are returned. If `NON_GATEWAY`
 *  is specified, only non-gateway devices are returned. If
 *  `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeGatewayTypeUnspecified
 *        Value "GATEWAY_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeGateway Value "GATEWAY"
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeNonGateway Value
 *        "NON_GATEWAY"
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsGatewayType;

/**
 *  The maximum number of devices to return in the response. If this value
 *  is zero, the service will select a default size. A call may return fewer
 *  objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListDevicesResponse`; indicates
 *  that this is a continuation of a prior `ListDevices` call and
 *  the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The device registry path. Required. For example,
 *  `projects/my-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_ListDevicesResponse.
 *
 *  List devices in a device registry.
 *
 *  @param parent The device registry path. Required. For example,
 *    `projects/my-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies the configuration for the device, which is eventually sent from
 *  the Cloud IoT Core servers. Returns the modified configuration version and
 *  its metadata.
 *
 *  Method: cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesModifyCloudToDeviceConfig : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesModifyCloudToDeviceConfigWithObject:name:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_DeviceConfig.
 *
 *  Modifies the configuration for the device, which is eventually sent from
 *  the Cloud IoT Core servers. Returns the modified configuration version and
 *  its metadata.
 *
 *  @param object The @c GTLRCloudIot_ModifyCloudToDeviceConfigRequest to
 *    include in the query.
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesModifyCloudToDeviceConfig
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_ModifyCloudToDeviceConfigRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a device.
 *
 *  Method: cloudiot.projects.locations.registries.devices.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesPatch : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesPatchWithObject:name:]

/**
 *  The resource path name. For example,
 *  `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
 *  `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
 *  When `name` is populated as a response from the service, it always ends
 *  in the device numeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Only updates the `device` fields indicated by this mask.
 *  The field mask must not be empty, and it must not contain fields that
 *  are immutable or only set by the server.
 *  Mutable top-level fields: `credentials`, `blocked`, and `metadata`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudIot_Device.
 *
 *  Updates a device.
 *
 *  @param object The @c GTLRCloudIot_Device to include in the query.
 *  @param name The resource path name. For example,
 *    `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
 *    `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
 *    When `name` is populated as a response from the service, it always ends
 *    in the device numeric ID.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_Device *)object
                           name:(NSString *)name;

@end

/**
 *  Sends a command to the specified device. In order for a device to be able
 *  to receive commands, it must:
 *  1) be connected to Cloud IoT Core using the MQTT protocol, and
 *  2) be subscribed to the group of MQTT topics specified by
 *  /devices/{device-id}/commands/#. This subscription will receive commands
 *  at the top-level topic /devices/{device-id}/commands as well as commands
 *  for subfolders, like /devices/{device-id}/commands/subfolder.
 *  Note that subscribing to specific subfolders is not supported.
 *  If the command could not be delivered to the device, this method will
 *  return an error; in particular, if the device is not subscribed, this
 *  method will return FAILED_PRECONDITION. Otherwise, this method will
 *  return OK. If the subscription is QoS 1, at least once delivery will be
 *  guaranteed; for QoS 0, no acknowledgment will be expected from the device.
 *
 *  Method: cloudiot.projects.locations.registries.devices.sendCommandToDevice
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesSendCommandToDevice : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesSendCommandToDeviceWithObject:name:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_SendCommandToDeviceResponse.
 *
 *  Sends a command to the specified device. In order for a device to be able
 *  to receive commands, it must:
 *  1) be connected to Cloud IoT Core using the MQTT protocol, and
 *  2) be subscribed to the group of MQTT topics specified by
 *  /devices/{device-id}/commands/#. This subscription will receive commands
 *  at the top-level topic /devices/{device-id}/commands as well as commands
 *  for subfolders, like /devices/{device-id}/commands/subfolder.
 *  Note that subscribing to specific subfolders is not supported.
 *  If the command could not be delivered to the device, this method will
 *  return an error; in particular, if the device is not subscribed, this
 *  method will return FAILED_PRECONDITION. Otherwise, this method will
 *  return OK. If the subscription is QoS 1, at least once delivery will be
 *  guaranteed; for QoS 0, no acknowledgment will be expected from the device.
 *
 *  @param object The @c GTLRCloudIot_SendCommandToDeviceRequest to include in
 *    the query.
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesSendCommandToDevice
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_SendCommandToDeviceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists the last few versions of the device state in descending order (i.e.:
 *  newest first).
 *
 *  Method: cloudiot.projects.locations.registries.devices.states.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesStatesList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesDevicesStatesListWithname:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The number of states to list. States are listed in descending order of
 *  update time. The maximum number of states retained is 10. If this
 *  value is zero, it will return all the states available.
 */
@property(nonatomic, assign) NSInteger numStates;

/**
 *  Fetches a @c GTLRCloudIot_ListDeviceStatesResponse.
 *
 *  Lists the last few versions of the device state in descending order (i.e.:
 *  newest first).
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesDevicesStatesList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a device registry configuration.
 *
 *  Method: cloudiot.projects.locations.registries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGet : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGetWithname:]

/**
 *  The name of the device registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_DeviceRegistry.
 *
 *  Gets a device registry configuration.
 *
 *  @param name The name of the device registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  Method: cloudiot.projects.locations.registries.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGetIamPolicy : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_Policy.
 *
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  @param object The @c GTLRCloudIot_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Associates the device with the gateway.
 *
 *  Method: cloudiot.projects.locations.registries.groups.bindDeviceToGateway
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsBindDeviceToGateway : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsBindDeviceToGatewayWithObject:parent:]

/**
 *  The name of the registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_BindDeviceToGatewayResponse.
 *
 *  Associates the device with the gateway.
 *
 *  @param object The @c GTLRCloudIot_BindDeviceToGatewayRequest to include in
 *    the query.
 *  @param parent The name of the registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsBindDeviceToGateway
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_BindDeviceToGatewayRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the last few versions of the device configuration in descending
 *  order (i.e.: newest first).
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.configVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesConfigVersionsList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesConfigVersionsListWithname:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The number of versions to list. Versions are listed in decreasing order of
 *  the version number. The maximum number of versions retained is 10. If this
 *  value is zero, it will return all the versions available.
 */
@property(nonatomic, assign) NSInteger numVersions;

/**
 *  Fetches a @c GTLRCloudIot_ListDeviceConfigVersionsResponse.
 *
 *  Lists the last few versions of the device configuration in descending
 *  order (i.e.: newest first).
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesConfigVersionsList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a device.
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesGet : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesGetWithname:]

/**
 *  The fields of the `Device` resource to be returned in the response. If the
 *  field mask is unset or empty, all fields are returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_Device.
 *
 *  Gets details about a device.
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List devices in a device registry.
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesListWithparent:]

/**
 *  A list of device string IDs. For example, `['device0', 'device12']`.
 *  If empty, this field is ignored. Maximum IDs: 10,000
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deviceIds;

/**
 *  A list of device numeric IDs. If empty, this field is ignored. Maximum
 *  IDs: 10,000.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *deviceNumIds;

/**
 *  The fields of the `Device` resource to be returned in the response. The
 *  fields `id` and `num_id` are always returned, along with any
 *  other fields specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  If set, returns only the gateways with which the specified device is
 *  associated. The device ID can be numeric (`num_id`) or the user-defined
 *  string (`id`). For example, if `456` is specified, returns only the
 *  gateways to which the device with `num_id` 456 is bound.
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsAssociationsDeviceId;

/**
 *  If set, only devices associated with the specified gateway are returned.
 *  The gateway ID can be numeric (`num_id`) or the user-defined string
 *  (`id`). For example, if `123` is specified, only devices bound to the
 *  gateway with `num_id` 123 are returned.
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsAssociationsGatewayId;

/**
 *  If `GATEWAY` is specified, only gateways are returned. If `NON_GATEWAY`
 *  is specified, only non-gateway devices are returned. If
 *  `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeGatewayTypeUnspecified
 *        Value "GATEWAY_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeGateway Value "GATEWAY"
 *    @arg @c kGTLRCloudIotGatewayListOptionsGatewayTypeNonGateway Value
 *        "NON_GATEWAY"
 */
@property(nonatomic, copy, nullable) NSString *gatewayListOptionsGatewayType;

/**
 *  The maximum number of devices to return in the response. If this value
 *  is zero, the service will select a default size. A call may return fewer
 *  objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListDevicesResponse`; indicates
 *  that this is a continuation of a prior `ListDevices` call and
 *  the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The device registry path. Required. For example,
 *  `projects/my-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_ListDevicesResponse.
 *
 *  List devices in a device registry.
 *
 *  @param parent The device registry path. Required. For example,
 *    `projects/my-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies the configuration for the device, which is eventually sent from
 *  the Cloud IoT Core servers. Returns the modified configuration version and
 *  its metadata.
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.modifyCloudToDeviceConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesModifyCloudToDeviceConfig : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesModifyCloudToDeviceConfigWithObject:name:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_DeviceConfig.
 *
 *  Modifies the configuration for the device, which is eventually sent from
 *  the Cloud IoT Core servers. Returns the modified configuration version and
 *  its metadata.
 *
 *  @param object The @c GTLRCloudIot_ModifyCloudToDeviceConfigRequest to
 *    include in the query.
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesModifyCloudToDeviceConfig
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_ModifyCloudToDeviceConfigRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a device.
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesPatch : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesPatchWithObject:name:]

/**
 *  The resource path name. For example,
 *  `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
 *  `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
 *  When `name` is populated as a response from the service, it always ends
 *  in the device numeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Only updates the `device` fields indicated by this mask.
 *  The field mask must not be empty, and it must not contain fields that
 *  are immutable or only set by the server.
 *  Mutable top-level fields: `credentials`, `blocked`, and `metadata`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudIot_Device.
 *
 *  Updates a device.
 *
 *  @param object The @c GTLRCloudIot_Device to include in the query.
 *  @param name The resource path name. For example,
 *    `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
 *    `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
 *    When `name` is populated as a response from the service, it always ends
 *    in the device numeric ID.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_Device *)object
                           name:(NSString *)name;

@end

/**
 *  Sends a command to the specified device. In order for a device to be able
 *  to receive commands, it must:
 *  1) be connected to Cloud IoT Core using the MQTT protocol, and
 *  2) be subscribed to the group of MQTT topics specified by
 *  /devices/{device-id}/commands/#. This subscription will receive commands
 *  at the top-level topic /devices/{device-id}/commands as well as commands
 *  for subfolders, like /devices/{device-id}/commands/subfolder.
 *  Note that subscribing to specific subfolders is not supported.
 *  If the command could not be delivered to the device, this method will
 *  return an error; in particular, if the device is not subscribed, this
 *  method will return FAILED_PRECONDITION. Otherwise, this method will
 *  return OK. If the subscription is QoS 1, at least once delivery will be
 *  guaranteed; for QoS 0, no acknowledgment will be expected from the device.
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.sendCommandToDevice
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesSendCommandToDevice : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesSendCommandToDeviceWithObject:name:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudIot_SendCommandToDeviceResponse.
 *
 *  Sends a command to the specified device. In order for a device to be able
 *  to receive commands, it must:
 *  1) be connected to Cloud IoT Core using the MQTT protocol, and
 *  2) be subscribed to the group of MQTT topics specified by
 *  /devices/{device-id}/commands/#. This subscription will receive commands
 *  at the top-level topic /devices/{device-id}/commands as well as commands
 *  for subfolders, like /devices/{device-id}/commands/subfolder.
 *  Note that subscribing to specific subfolders is not supported.
 *  If the command could not be delivered to the device, this method will
 *  return an error; in particular, if the device is not subscribed, this
 *  method will return FAILED_PRECONDITION. Otherwise, this method will
 *  return OK. If the subscription is QoS 1, at least once delivery will be
 *  guaranteed; for QoS 0, no acknowledgment will be expected from the device.
 *
 *  @param object The @c GTLRCloudIot_SendCommandToDeviceRequest to include in
 *    the query.
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesSendCommandToDevice
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_SendCommandToDeviceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists the last few versions of the device state in descending order (i.e.:
 *  newest first).
 *
 *  Method: cloudiot.projects.locations.registries.groups.devices.states.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesStatesList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsDevicesStatesListWithname:]

/**
 *  The name of the device. For example,
 *  `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
 *  `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The number of states to list. States are listed in descending order of
 *  update time. The maximum number of states retained is 10. If this
 *  value is zero, it will return all the states available.
 */
@property(nonatomic, assign) NSInteger numStates;

/**
 *  Fetches a @c GTLRCloudIot_ListDeviceStatesResponse.
 *
 *  Lists the last few versions of the device state in descending order (i.e.:
 *  newest first).
 *
 *  @param name The name of the device. For example,
 *    `projects/p0/locations/us-central1/registries/registry0/devices/device0`
 *    or
 *    `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsDevicesStatesList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  Method: cloudiot.projects.locations.registries.groups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsGetIamPolicy : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_Policy.
 *
 *  Gets the access control policy for a resource.
 *  Returns an empty policy if the resource exists and does not have a policy
 *  set.
 *
 *  @param object The @c GTLRCloudIot_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  Method: cloudiot.projects.locations.registries.groups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsSetIamPolicy : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  @param object The @c GTLRCloudIot_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *
 *  Method: cloudiot.projects.locations.registries.groups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsTestIamPermissions : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *
 *  @param object The @c GTLRCloudIot_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Deletes the association between the device and the gateway.
 *
 *  Method: cloudiot.projects.locations.registries.groups.unbindDeviceFromGateway
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsUnbindDeviceFromGateway : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesGroupsUnbindDeviceFromGatewayWithObject:parent:]

/**
 *  The name of the registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_UnbindDeviceFromGatewayResponse.
 *
 *  Deletes the association between the device and the gateway.
 *
 *  @param object The @c GTLRCloudIot_UnbindDeviceFromGatewayRequest to include
 *    in the query.
 *  @param parent The name of the registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesGroupsUnbindDeviceFromGateway
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_UnbindDeviceFromGatewayRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists device registries.
 *
 *  Method: cloudiot.projects.locations.registries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesList : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesListWithparent:]

/**
 *  The maximum number of registries to return in the response. If this value
 *  is zero, the service will select a default size. A call may return fewer
 *  objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListDeviceRegistriesResponse`; indicates
 *  that this is a continuation of a prior `ListDeviceRegistries` call and
 *  the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The project and cloud region path. For example,
 *  `projects/example-project/locations/us-central1`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_ListDeviceRegistriesResponse.
 *
 *  Lists device registries.
 *
 *  @param parent The project and cloud region path. For example,
 *    `projects/example-project/locations/us-central1`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a device registry configuration.
 *
 *  Method: cloudiot.projects.locations.registries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesPatch : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesPatchWithObject:name:]

/**
 *  The resource path name. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Only updates the `device_registry` fields indicated by this mask.
 *  The field mask must not be empty, and it must not contain fields that
 *  are immutable or only set by the server.
 *  Mutable top-level fields: `event_notification_config`, `http_config`,
 *  `mqtt_config`, and `state_notification_config`.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudIot_DeviceRegistry.
 *
 *  Updates a device registry configuration.
 *
 *  @param object The @c GTLRCloudIot_DeviceRegistry to include in the query.
 *  @param name The resource path name. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_DeviceRegistry *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  Method: cloudiot.projects.locations.registries.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesSetIamPolicy : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.
 *
 *  @param object The @c GTLRCloudIot_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *
 *  Method: cloudiot.projects.locations.registries.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesTestIamPermissions : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudIot_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource.
 *  If the resource does not exist, this will return an empty set of
 *  permissions, not a NOT_FOUND error.
 *
 *  @param object The @c GTLRCloudIot_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Deletes the association between the device and the gateway.
 *
 *  Method: cloudiot.projects.locations.registries.unbindDeviceFromGateway
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudIot
 *    @c kGTLRAuthScopeCloudIotCloudPlatform
 */
@interface GTLRCloudIotQuery_ProjectsLocationsRegistriesUnbindDeviceFromGateway : GTLRCloudIotQuery
// Previous library name was
//   +[GTLQueryCloudIot queryForProjectsLocationsRegistriesUnbindDeviceFromGatewayWithObject:parent:]

/**
 *  The name of the registry. For example,
 *  `projects/example-project/locations/us-central1/registries/my-registry`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudIot_UnbindDeviceFromGatewayResponse.
 *
 *  Deletes the association between the device and the gateway.
 *
 *  @param object The @c GTLRCloudIot_UnbindDeviceFromGatewayRequest to include
 *    in the query.
 *  @param parent The name of the registry. For example,
 *    `projects/example-project/locations/us-central1/registries/my-registry`.
 *
 *  @return GTLRCloudIotQuery_ProjectsLocationsRegistriesUnbindDeviceFromGateway
 */
+ (instancetype)queryWithObject:(GTLRCloudIot_UnbindDeviceFromGatewayRequest *)object
                         parent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
