// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   CustomSearch API (customsearch/v1)
// Description:
//   Searches over a website or collection of websites
// Documentation:
//   https://developers.google.com/custom-search/v1/using_rest

#import "GTLRCustomsearchQuery.h"

#import "GTLRCustomsearchObjects.h"

// ----------------------------------------------------------------------------
// Constants

// filter
NSString * const kGTLRCustomsearchFilterX0 = @"0";
NSString * const kGTLRCustomsearchFilterX1 = @"1";

// imgColorType
NSString * const kGTLRCustomsearchImgColorTypeColor = @"color";
NSString * const kGTLRCustomsearchImgColorTypeGray  = @"gray";
NSString * const kGTLRCustomsearchImgColorTypeMono  = @"mono";

// imgDominantColor
NSString * const kGTLRCustomsearchImgDominantColorBlack  = @"black";
NSString * const kGTLRCustomsearchImgDominantColorBlue   = @"blue";
NSString * const kGTLRCustomsearchImgDominantColorBrown  = @"brown";
NSString * const kGTLRCustomsearchImgDominantColorGray   = @"gray";
NSString * const kGTLRCustomsearchImgDominantColorGreen  = @"green";
NSString * const kGTLRCustomsearchImgDominantColorOrange = @"orange";
NSString * const kGTLRCustomsearchImgDominantColorPink   = @"pink";
NSString * const kGTLRCustomsearchImgDominantColorPurple = @"purple";
NSString * const kGTLRCustomsearchImgDominantColorRed    = @"red";
NSString * const kGTLRCustomsearchImgDominantColorTeal   = @"teal";
NSString * const kGTLRCustomsearchImgDominantColorWhite  = @"white";
NSString * const kGTLRCustomsearchImgDominantColorYellow = @"yellow";

// imgSize
NSString * const kGTLRCustomsearchImgSizeHuge    = @"huge";
NSString * const kGTLRCustomsearchImgSizeIcon    = @"icon";
NSString * const kGTLRCustomsearchImgSizeLarge   = @"large";
NSString * const kGTLRCustomsearchImgSizeMedium  = @"medium";
NSString * const kGTLRCustomsearchImgSizeSmall   = @"small";
NSString * const kGTLRCustomsearchImgSizeXlarge  = @"xlarge";
NSString * const kGTLRCustomsearchImgSizeXxlarge = @"xxlarge";

// imgType
NSString * const kGTLRCustomsearchImgTypeClipart = @"clipart";
NSString * const kGTLRCustomsearchImgTypeFace    = @"face";
NSString * const kGTLRCustomsearchImgTypeLineart = @"lineart";
NSString * const kGTLRCustomsearchImgTypeNews    = @"news";
NSString * const kGTLRCustomsearchImgTypePhoto   = @"photo";

// lr
NSString * const kGTLRCustomsearchLrLangAr   = @"lang_ar";
NSString * const kGTLRCustomsearchLrLangBg   = @"lang_bg";
NSString * const kGTLRCustomsearchLrLangCa   = @"lang_ca";
NSString * const kGTLRCustomsearchLrLangCs   = @"lang_cs";
NSString * const kGTLRCustomsearchLrLangDa   = @"lang_da";
NSString * const kGTLRCustomsearchLrLangDe   = @"lang_de";
NSString * const kGTLRCustomsearchLrLangEl   = @"lang_el";
NSString * const kGTLRCustomsearchLrLangEn   = @"lang_en";
NSString * const kGTLRCustomsearchLrLangEs   = @"lang_es";
NSString * const kGTLRCustomsearchLrLangEt   = @"lang_et";
NSString * const kGTLRCustomsearchLrLangFi   = @"lang_fi";
NSString * const kGTLRCustomsearchLrLangFr   = @"lang_fr";
NSString * const kGTLRCustomsearchLrLangHr   = @"lang_hr";
NSString * const kGTLRCustomsearchLrLangHu   = @"lang_hu";
NSString * const kGTLRCustomsearchLrLangId   = @"lang_id";
NSString * const kGTLRCustomsearchLrLangIs   = @"lang_is";
NSString * const kGTLRCustomsearchLrLangIt   = @"lang_it";
NSString * const kGTLRCustomsearchLrLangIw   = @"lang_iw";
NSString * const kGTLRCustomsearchLrLangJa   = @"lang_ja";
NSString * const kGTLRCustomsearchLrLangKo   = @"lang_ko";
NSString * const kGTLRCustomsearchLrLangLt   = @"lang_lt";
NSString * const kGTLRCustomsearchLrLangLv   = @"lang_lv";
NSString * const kGTLRCustomsearchLrLangNl   = @"lang_nl";
NSString * const kGTLRCustomsearchLrLangNo   = @"lang_no";
NSString * const kGTLRCustomsearchLrLangPl   = @"lang_pl";
NSString * const kGTLRCustomsearchLrLangPt   = @"lang_pt";
NSString * const kGTLRCustomsearchLrLangRo   = @"lang_ro";
NSString * const kGTLRCustomsearchLrLangRu   = @"lang_ru";
NSString * const kGTLRCustomsearchLrLangSk   = @"lang_sk";
NSString * const kGTLRCustomsearchLrLangSl   = @"lang_sl";
NSString * const kGTLRCustomsearchLrLangSr   = @"lang_sr";
NSString * const kGTLRCustomsearchLrLangSv   = @"lang_sv";
NSString * const kGTLRCustomsearchLrLangTr   = @"lang_tr";
NSString * const kGTLRCustomsearchLrLangZhCN = @"lang_zh-CN";
NSString * const kGTLRCustomsearchLrLangZhTW = @"lang_zh-TW";

// safe
NSString * const kGTLRCustomsearchSafeActive = @"active";
NSString * const kGTLRCustomsearchSafeHigh   = @"high";
NSString * const kGTLRCustomsearchSafeMedium = @"medium";
NSString * const kGTLRCustomsearchSafeOff    = @"off";

// searchType
NSString * const kGTLRCustomsearchSearchTypeImage = @"image";

// siteSearchFilter
NSString * const kGTLRCustomsearchSiteSearchFilterE = @"e";
NSString * const kGTLRCustomsearchSiteSearchFilterI = @"i";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCustomsearchQuery

@dynamic fields;

@end

@implementation GTLRCustomsearchQuery_CseList

@dynamic c2coff, cr, cx, dateRestrict, exactTerms, excludeTerms, fileType,
         filter, gl, googlehost, highRange, hl, hq, imgColorType,
         imgDominantColor, imgSize, imgType, linkSite, lowRange, lr, num,
         orTerms, q, relatedSite, rights, safe, searchType, siteSearch,
         siteSearchFilter, sort, start;

+ (instancetype)queryWithQ:(NSString *)q {
  NSString *pathURITemplate = @"v1";
  GTLRCustomsearchQuery_CseList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.q = q;
  query.expectedObjectClass = [GTLRCustomsearch_Search class];
  query.loggingName = @"search.cse.list";
  return query;
}

@end

@implementation GTLRCustomsearchQuery_CseSiterestrictList

@dynamic c2coff, cr, cx, dateRestrict, exactTerms, excludeTerms, fileType,
         filter, gl, googlehost, highRange, hl, hq, imgColorType,
         imgDominantColor, imgSize, imgType, linkSite, lowRange, lr, num,
         orTerms, q, relatedSite, rights, safe, searchType, siteSearch,
         siteSearchFilter, sort, start;

+ (instancetype)queryWithQ:(NSString *)q {
  NSString *pathURITemplate = @"v1/siterestrict";
  GTLRCustomsearchQuery_CseSiterestrictList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.q = q;
  query.expectedObjectClass = [GTLRCustomsearch_Search class];
  query.loggingName = @"search.cse.siterestrict.list";
  return query;
}

@end
