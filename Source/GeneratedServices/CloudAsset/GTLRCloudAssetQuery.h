// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Asset API (cloudasset/v1)
// Description:
//   The cloud asset API manages the history and inventory of cloud resources.
// Documentation:
//   https://cloud.google.com/asset-inventory/docs/quickstart

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudAsset_AnalyzeIamPolicyLongrunningRequest;
@class GTLRCloudAsset_CreateFeedRequest;
@class GTLRCloudAsset_ExportAssetsRequest;
@class GTLRCloudAsset_UpdateFeedRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// contentType

/**
 *  The Cloud Access context manager Policy set on an asset.
 *
 *  Value: "ACCESS_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeAccessPolicy;
/**
 *  Unspecified content type.
 *
 *  Value: "CONTENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeContentTypeUnspecified;
/**
 *  The actual IAM policy set on a resource.
 *
 *  Value: "IAM_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeIamPolicy;
/**
 *  The Cloud Organization Policy set on an asset.
 *
 *  Value: "ORG_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeOrgPolicy;
/**
 *  The runtime OS Inventory information.
 *
 *  Value: "OS_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeOsInventory;
/**
 *  Resource metadata.
 *
 *  Value: "RESOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAssetContentTypeResource;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloud Asset query classes.
 */
@interface GTLRCloudAssetQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a feed in a parent project/folder/organization to listen to its
 *  asset updates.
 *
 *  Method: cloudasset.feeds.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_FeedsCreate : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForFeedsCreateWithObject:parent:]

/**
 *  Required. The name of the project/folder/organization where this feed should
 *  be created in. It can only be an organization number (such as
 *  "organizations/123"), a folder number (such as "folders/123"), a project ID
 *  (such as "projects/my-project-id")", or a project number (such as
 *  "projects/12345").
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAsset_Feed.
 *
 *  Creates a feed in a parent project/folder/organization to listen to its
 *  asset updates.
 *
 *  @param object The @c GTLRCloudAsset_CreateFeedRequest to include in the
 *    query.
 *  @param parent Required. The name of the project/folder/organization where
 *    this feed should be created in. It can only be an organization number
 *    (such as "organizations/123"), a folder number (such as "folders/123"), a
 *    project ID (such as "projects/my-project-id")", or a project number (such
 *    as "projects/12345").
 *
 *  @return GTLRCloudAssetQuery_FeedsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudAsset_CreateFeedRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an asset feed.
 *
 *  Method: cloudasset.feeds.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_FeedsDelete : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForFeedsDeleteWithname:]

/**
 *  Required. The name of the feed and it must be in the format of:
 *  projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
 *  organizations/organization_number/feeds/feed_id
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAsset_Empty.
 *
 *  Deletes an asset feed.
 *
 *  @param name Required. The name of the feed and it must be in the format of:
 *    projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
 *    organizations/organization_number/feeds/feed_id
 *
 *  @return GTLRCloudAssetQuery_FeedsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about an asset feed.
 *
 *  Method: cloudasset.feeds.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_FeedsGet : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForFeedsGetWithname:]

/**
 *  Required. The name of the Feed and it must be in the format of:
 *  projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
 *  organizations/organization_number/feeds/feed_id
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAsset_Feed.
 *
 *  Gets details about an asset feed.
 *
 *  @param name Required. The name of the Feed and it must be in the format of:
 *    projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
 *    organizations/organization_number/feeds/feed_id
 *
 *  @return GTLRCloudAssetQuery_FeedsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all asset feeds in a parent project/folder/organization.
 *
 *  Method: cloudasset.feeds.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_FeedsList : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForFeedsListWithparent:]

/**
 *  Required. The parent project/folder/organization whose feeds are to be
 *  listed. It can only be using project/folder/organization number (such as
 *  "folders/12345")", or a project ID (such as "projects/my-project-id").
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAsset_ListFeedsResponse.
 *
 *  Lists all asset feeds in a parent project/folder/organization.
 *
 *  @param parent Required. The parent project/folder/organization whose feeds
 *    are to be listed. It can only be using project/folder/organization number
 *    (such as "folders/12345")", or a project ID (such as
 *    "projects/my-project-id").
 *
 *  @return GTLRCloudAssetQuery_FeedsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an asset feed configuration.
 *
 *  Method: cloudasset.feeds.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_FeedsPatch : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForFeedsPatchWithObject:name:]

/**
 *  Required. The format will be
 *  projects/{project_number}/feeds/{client-assigned_feed_identifier} or
 *  folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
 *  organizations/{organization_number}/feeds/{client-assigned_feed_identifier}
 *  The client-assigned feed identifier must be unique within the parent
 *  project/folder/organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAsset_Feed.
 *
 *  Updates an asset feed configuration.
 *
 *  @param object The @c GTLRCloudAsset_UpdateFeedRequest to include in the
 *    query.
 *  @param name Required. The format will be
 *    projects/{project_number}/feeds/{client-assigned_feed_identifier} or
 *    folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
 *    organizations/{organization_number}/feeds/{client-assigned_feed_identifier}
 *    The client-assigned feed identifier must be unique within the parent
 *    project/folder/organization.
 *
 *  @return GTLRCloudAssetQuery_FeedsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudAsset_UpdateFeedRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudasset.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_OperationsGet : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAsset_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudAssetQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Analyzes IAM policies to answer which identities have what accesses on which
 *  resources.
 *
 *  Method: cloudasset.analyzeIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1AnalyzeIamPolicy : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForAnalyzeIamPolicyWithscope:]

/** Optional. The permissions to appear in result. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *analysisQueryAccessSelectorPermissions;

/** Optional. The roles to appear in result. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *analysisQueryAccessSelectorRoles;

/**
 *  Required. The identity appear in the form of members in [IAM policy
 *  binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The
 *  examples of supported forms are: "user:mike\@example.com",
 *  "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com". Notice that
 *  wildcard characters (such as * and ?) are not supported. You must give a
 *  specific identity.
 */
@property(nonatomic, copy, nullable) NSString *analysisQueryIdentitySelectorIdentity;

/**
 *  Optional. If true, the response will include access analysis from identities
 *  to resources via service account impersonation. This is a very expensive
 *  operation, because many derived queries will be executed. We highly
 *  recommend you use AssetService.AnalyzeIamPolicyLongrunning rpc instead. For
 *  example, if the request analyzes for which resources user A has permission
 *  P, and there's an IAM policy states user A has
 *  iam.serviceAccounts.getAccessToken permission to a service account SA, and
 *  there's another IAM policy states service account SA has permission P to a
 *  GCP folder F, then user A potentially has access to the GCP folder F. And
 *  those advanced analysis results will be included in
 *  AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another
 *  example, if the request analyzes for who has permission P to a GCP folder F,
 *  and there's an IAM policy states user A has iam.serviceAccounts.actAs
 *  permission to a service account SA, and there's another IAM policy states
 *  service account SA has permission P to the GCP folder F, then user A
 *  potentially has access to the GCP folder F. And those advanced analysis
 *  results will be included in
 *  AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Default is
 *  false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsAnalyzeServiceAccountImpersonation;

/**
 *  Optional. If true, the identities section of the result will expand any
 *  Google groups appearing in an IAM policy binding. If
 *  IamPolicyAnalysisQuery.identity_selector is specified, the identity in the
 *  result will be determined by the selector, and this flag is not allowed to
 *  set. Default is false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsExpandGroups;

/**
 *  Optional. If true and IamPolicyAnalysisQuery.resource_selector is not
 *  specified, the resource section of the result will expand any resource
 *  attached to an IAM policy to include resources lower in the resource
 *  hierarchy. For example, if the request analyzes for which resources user A
 *  has permission P, and the results include an IAM policy with P on a GCP
 *  folder, the results will also include resources in that folder with
 *  permission P. If true and IamPolicyAnalysisQuery.resource_selector is
 *  specified, the resource section of the result will expand the specified
 *  resource to include resources lower in the resource hierarchy. Only project
 *  or lower resources are supported. Folder and organization resource cannot be
 *  used together with this option. For example, if the request analyzes for
 *  which users have permission P on a GCP project with this option enabled, the
 *  results will include all users who have permission P on that project or any
 *  lower resource. Default is false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsExpandResources;

/**
 *  Optional. If true, the access section of result will expand any roles
 *  appearing in IAM policy bindings to include their permissions. If
 *  IamPolicyAnalysisQuery.access_selector is specified, the access section of
 *  the result will be determined by the selector, and this flag is not allowed
 *  to set. Default is false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsExpandRoles;

/**
 *  Optional. If true, the result will output group identity edges, starting
 *  from the binding's group members, to any expanded identities. Default is
 *  false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsOutputGroupEdges;

/**
 *  Optional. If true, the result will output resource edges, starting from the
 *  policy attached resource, to any expanded resources. Default is false.
 */
@property(nonatomic, assign) BOOL analysisQueryOptionsOutputResourceEdges;

/**
 *  Required. The [full resource name]
 *  (https://cloud.google.com/asset-inventory/docs/resource-name-format) of a
 *  resource of [supported resource
 *  types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types).
 */
@property(nonatomic, copy, nullable) NSString *analysisQueryResourceSelectorFullResourceName;

/**
 *  Optional. Amount of time executable has to complete. See JSON representation
 *  of
 *  [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json).
 *  If this field is set with a value less than the RPC deadline, and the
 *  execution of your query hasn't finished in the specified execution timeout,
 *  you will get a response with partial result. Otherwise, your query's
 *  execution will continue until the RPC deadline. If it's not finished until
 *  then, you will get a DEADLINE_EXCEEDED error. Default is empty.
 */
@property(nonatomic, strong, nullable) GTLRDuration *executionTimeout;

/**
 *  Required. The relative name of the root asset. Only resources and IAM
 *  policies within the scope will be analyzed. This can only be an organization
 *  number (such as "organizations/123"), a folder number (such as
 *  "folders/123"), a project ID (such as "projects/my-project-id"), or a
 *  project number (such as "projects/12345"). To know how to get organization
 *  id, visit [here
 *  ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
 *  To know how to get folder or project id, visit [here
 *  ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Fetches a @c GTLRCloudAsset_AnalyzeIamPolicyResponse.
 *
 *  Analyzes IAM policies to answer which identities have what accesses on which
 *  resources.
 *
 *  @param scope Required. The relative name of the root asset. Only resources
 *    and IAM policies within the scope will be analyzed. This can only be an
 *    organization number (such as "organizations/123"), a folder number (such
 *    as "folders/123"), a project ID (such as "projects/my-project-id"), or a
 *    project number (such as "projects/12345"). To know how to get organization
 *    id, visit [here
 *    ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
 *    To know how to get folder or project id, visit [here
 *    ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
 *
 *  @return GTLRCloudAssetQuery_V1AnalyzeIamPolicy
 */
+ (instancetype)queryWithScope:(NSString *)scope;

@end

/**
 *  Analyzes IAM policies asynchronously to answer which identities have what
 *  accesses on which resources, and writes the analysis results to a Google
 *  Cloud Storage or a BigQuery destination. For Cloud Storage destination, the
 *  output format is the JSON format that represents a AnalyzeIamPolicyResponse.
 *  This method implements the google.longrunning.Operation, which allows you to
 *  track the operation status. We recommend intervals of at least 2 seconds
 *  with exponential backoff retry to poll the operation result. The metadata
 *  contains the request to help callers to map responses to requests.
 *
 *  Method: cloudasset.analyzeIamPolicyLongrunning
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1AnalyzeIamPolicyLongrunning : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForAnalyzeIamPolicyLongrunningWithObject:scope:]

/**
 *  Required. The relative name of the root asset. Only resources and IAM
 *  policies within the scope will be analyzed. This can only be an organization
 *  number (such as "organizations/123"), a folder number (such as
 *  "folders/123"), a project ID (such as "projects/my-project-id"), or a
 *  project number (such as "projects/12345"). To know how to get organization
 *  id, visit [here
 *  ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
 *  To know how to get folder or project id, visit [here
 *  ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Fetches a @c GTLRCloudAsset_Operation.
 *
 *  Analyzes IAM policies asynchronously to answer which identities have what
 *  accesses on which resources, and writes the analysis results to a Google
 *  Cloud Storage or a BigQuery destination. For Cloud Storage destination, the
 *  output format is the JSON format that represents a AnalyzeIamPolicyResponse.
 *  This method implements the google.longrunning.Operation, which allows you to
 *  track the operation status. We recommend intervals of at least 2 seconds
 *  with exponential backoff retry to poll the operation result. The metadata
 *  contains the request to help callers to map responses to requests.
 *
 *  @param object The @c GTLRCloudAsset_AnalyzeIamPolicyLongrunningRequest to
 *    include in the query.
 *  @param scope Required. The relative name of the root asset. Only resources
 *    and IAM policies within the scope will be analyzed. This can only be an
 *    organization number (such as "organizations/123"), a folder number (such
 *    as "folders/123"), a project ID (such as "projects/my-project-id"), or a
 *    project number (such as "projects/12345"). To know how to get organization
 *    id, visit [here
 *    ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
 *    To know how to get folder or project id, visit [here
 *    ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
 *
 *  @return GTLRCloudAssetQuery_V1AnalyzeIamPolicyLongrunning
 */
+ (instancetype)queryWithObject:(GTLRCloudAsset_AnalyzeIamPolicyLongrunningRequest *)object
                          scope:(NSString *)scope;

@end

/**
 *  Batch gets the update history of assets that overlap a time window. For
 *  IAM_POLICY content, this API outputs history when the asset and its attached
 *  IAM POLICY both exist. This can create gaps in the output history.
 *  Otherwise, this API outputs history with asset in both non-delete or deleted
 *  status. If a specified asset does not exist, this API returns an
 *  INVALID_ARGUMENT error.
 *
 *  Method: cloudasset.batchGetAssetsHistory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1BatchGetAssetsHistory : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForBatchGetAssetsHistoryWithparent:]

/**
 *  A list of the full names of the assets. See:
 *  https://cloud.google.com/asset-inventory/docs/resource-name-format Example:
 *  `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
 *  The request becomes a no-op if the asset name list is empty, and the max
 *  size of the asset name list is 100 in one request.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assetNames;

/**
 *  Optional. The content type.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAssetContentTypeContentTypeUnspecified Unspecified
 *        content type. (Value: "CONTENT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAssetContentTypeResource Resource metadata. (Value:
 *        "RESOURCE")
 *    @arg @c kGTLRCloudAssetContentTypeIamPolicy The actual IAM policy set on a
 *        resource. (Value: "IAM_POLICY")
 *    @arg @c kGTLRCloudAssetContentTypeOrgPolicy The Cloud Organization Policy
 *        set on an asset. (Value: "ORG_POLICY")
 *    @arg @c kGTLRCloudAssetContentTypeAccessPolicy The Cloud Access context
 *        manager Policy set on an asset. (Value: "ACCESS_POLICY")
 *    @arg @c kGTLRCloudAssetContentTypeOsInventory The runtime OS Inventory
 *        information. (Value: "OS_INVENTORY")
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  Required. The relative name of the root asset. It can only be an
 *  organization number (such as "organizations/123"), a project ID (such as
 *  "projects/my-project-id")", or a project number (such as "projects/12345").
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  End time of the time window (inclusive). If not specified, the current
 *  timestamp is used instead.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *readTimeWindowEndTime;

/** Start time of the time window (exclusive). */
@property(nonatomic, strong, nullable) GTLRDateTime *readTimeWindowStartTime;

/**
 *  Fetches a @c GTLRCloudAsset_BatchGetAssetsHistoryResponse.
 *
 *  Batch gets the update history of assets that overlap a time window. For
 *  IAM_POLICY content, this API outputs history when the asset and its attached
 *  IAM POLICY both exist. This can create gaps in the output history.
 *  Otherwise, this API outputs history with asset in both non-delete or deleted
 *  status. If a specified asset does not exist, this API returns an
 *  INVALID_ARGUMENT error.
 *
 *  @param parent Required. The relative name of the root asset. It can only be
 *    an organization number (such as "organizations/123"), a project ID (such
 *    as "projects/my-project-id")", or a project number (such as
 *    "projects/12345").
 *
 *  @return GTLRCloudAssetQuery_V1BatchGetAssetsHistory
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Exports assets with time and resource types to a given Cloud Storage
 *  location/BigQuery table. For Cloud Storage location destinations, the output
 *  format is newline-delimited JSON. Each line represents a
 *  google.cloud.asset.v1.Asset in the JSON format; for BigQuery table
 *  destinations, the output table stores the fields in asset proto as columns.
 *  This API implements the google.longrunning.Operation API , which allows you
 *  to keep track of the export. We recommend intervals of at least 2 seconds
 *  with exponential retry to poll the export operation result. For regular-size
 *  resource parent, the export operation usually finishes within 5 minutes.
 *
 *  Method: cloudasset.exportAssets
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1ExportAssets : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForExportAssetsWithObject:parent:]

/**
 *  Required. The relative name of the root asset. This can only be an
 *  organization number (such as "organizations/123"), a project ID (such as
 *  "projects/my-project-id"), or a project number (such as "projects/12345"),
 *  or a folder number (such as "folders/123").
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAsset_Operation.
 *
 *  Exports assets with time and resource types to a given Cloud Storage
 *  location/BigQuery table. For Cloud Storage location destinations, the output
 *  format is newline-delimited JSON. Each line represents a
 *  google.cloud.asset.v1.Asset in the JSON format; for BigQuery table
 *  destinations, the output table stores the fields in asset proto as columns.
 *  This API implements the google.longrunning.Operation API , which allows you
 *  to keep track of the export. We recommend intervals of at least 2 seconds
 *  with exponential retry to poll the export operation result. For regular-size
 *  resource parent, the export operation usually finishes within 5 minutes.
 *
 *  @param object The @c GTLRCloudAsset_ExportAssetsRequest to include in the
 *    query.
 *  @param parent Required. The relative name of the root asset. This can only
 *    be an organization number (such as "organizations/123"), a project ID
 *    (such as "projects/my-project-id"), or a project number (such as
 *    "projects/12345"), or a folder number (such as "folders/123").
 *
 *  @return GTLRCloudAssetQuery_V1ExportAssets
 */
+ (instancetype)queryWithObject:(GTLRCloudAsset_ExportAssetsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Searches all IAM policies within the specified scope, such as a project,
 *  folder, or organization. The caller must be granted the
 *  `cloudasset.assets.searchAllIamPolicies` permission on the desired scope,
 *  otherwise the request will be rejected.
 *
 *  Method: cloudasset.searchAllIamPolicies
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1SearchAllIamPolicies : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForSearchAllIamPoliciesWithscope:]

/**
 *  Optional. The page size for search result pagination. Page size is capped at
 *  500 even if a larger value is given. If set to zero, server will pick an
 *  appropriate default. Returned results may be fewer than requested. When this
 *  happens, there could be more results as long as `next_page_token` is
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieve the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of all other method parameters must
 *  be identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The query statement. See [how to construct a
 *  query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
 *  for more information. If not specified or empty, it will search all the IAM
 *  policies within the specified `scope`. Note that the query string is
 *  compared against each Cloud IAM policy binding, including its members,
 *  roles, and Cloud IAM conditions. The returned Cloud IAM policies will only
 *  contain the bindings that match your query. To learn more about the IAM
 *  policy structure, see [IAM policy
 *  doc](https://cloud.google.com/iam/docs/policies#structure). Examples: *
 *  `policy:amy\@gmail.com` to find IAM policy bindings that specify user
 *  "amy\@gmail.com". * `policy:roles/compute.admin` to find IAM policy bindings
 *  that specify the Compute Admin role. * `policy:comp*` to find IAM policy
 *  bindings that contain "comp" as a prefix of any word in the binding. *
 *  `policy.role.permissions:storage.buckets.update` to find IAM policy bindings
 *  that specify a role containing "storage.buckets.update" permission. Note
 *  that if callers don't have `iam.roles.get` access to a role's included
 *  permissions, policy bindings that specify this role will be dropped from the
 *  search results. * `policy.role.permissions:upd*` to find IAM policy bindings
 *  that specify a role containing "upd" as a prefix of any word in the role
 *  permission. Note that if callers don't have `iam.roles.get` access to a
 *  role's included permissions, policy bindings that specify this role will be
 *  dropped from the search results. * `resource:organizations/123456` to find
 *  IAM policy bindings that are set on "organizations/123456". *
 *  `resource=//cloudresourcemanager.googleapis.com/projects/myproject` to find
 *  IAM policy bindings that are set on the project named "myproject". *
 *  `Important` to find IAM policy bindings that contain "Important" as a word
 *  in any of the searchable fields (except for the included permissions). *
 *  `resource:(instance1 OR instance2) policy:amy` to find IAM policy bindings
 *  that are set on resources "instance1" or "instance2" and also specify user
 *  "amy".
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required. A scope can be a project, a folder, or an organization. The search
 *  is limited to the IAM policies within the `scope`. The caller must be
 *  granted the
 *  [`cloudasset.assets.searchAllIamPolicies`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions)
 *  permission on the desired scope. The allowed values are: *
 *  projects/{PROJECT_ID} (e.g., "projects/foo-bar") * projects/{PROJECT_NUMBER}
 *  (e.g., "projects/12345678") * folders/{FOLDER_NUMBER} (e.g.,
 *  "folders/1234567") * organizations/{ORGANIZATION_NUMBER} (e.g.,
 *  "organizations/123456")
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Fetches a @c GTLRCloudAsset_SearchAllIamPoliciesResponse.
 *
 *  Searches all IAM policies within the specified scope, such as a project,
 *  folder, or organization. The caller must be granted the
 *  `cloudasset.assets.searchAllIamPolicies` permission on the desired scope,
 *  otherwise the request will be rejected.
 *
 *  @param scope Required. A scope can be a project, a folder, or an
 *    organization. The search is limited to the IAM policies within the
 *    `scope`. The caller must be granted the
 *    [`cloudasset.assets.searchAllIamPolicies`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions)
 *    permission on the desired scope. The allowed values are: *
 *    projects/{PROJECT_ID} (e.g., "projects/foo-bar") *
 *    projects/{PROJECT_NUMBER} (e.g., "projects/12345678") *
 *    folders/{FOLDER_NUMBER} (e.g., "folders/1234567") *
 *    organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
 *
 *  @return GTLRCloudAssetQuery_V1SearchAllIamPolicies
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithScope:(NSString *)scope;

@end

/**
 *  Searches all Cloud resources within the specified scope, such as a project,
 *  folder, or organization. The caller must be granted the
 *  `cloudasset.assets.searchAllResources` permission on the desired scope,
 *  otherwise the request will be rejected.
 *
 *  Method: cloudasset.searchAllResources
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAssetCloudPlatform
 */
@interface GTLRCloudAssetQuery_V1SearchAllResources : GTLRCloudAssetQuery
// Previous library name was
//   +[GTLQueryCloudAsset queryForSearchAllResourcesWithscope:]

/**
 *  Optional. A list of asset types that this request searches for. If empty, it
 *  will search all the [searchable asset
 *  types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
 *  Regular expressions are also supported. For example: *
 *  "compute.googleapis.com.*" snapshots resources whose asset type starts with
 *  "compute.googleapis.com". * ".*Instance" snapshots resources whose asset
 *  type ends with "Instance". * ".*Instance.*" snapshots resources whose asset
 *  type contains "Instance". See
 *  [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular
 *  expression syntax. If the regular expression does not match any supported
 *  asset type, an INVALID_ARGUMENT error will be returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assetTypes;

/**
 *  Optional. A comma separated list of fields specifying the sorting order of
 *  the results. The default order is ascending. Add " DESC" after the field
 *  name to indicate descending order. Redundant space characters are ignored.
 *  Example: "location DESC, name". Only string fields in the response are
 *  sortable, including `name`, `displayName`, `description`, `location`. All
 *  the other fields such as repeated fields (e.g., `networkTags`), map fields
 *  (e.g., `labels`) and struct fields (e.g., `additionalAttributes`) are not
 *  supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The page size for search result pagination. Page size is capped at
 *  500 even if a larger value is given. If set to zero, server will pick an
 *  appropriate default. Returned results may be fewer than requested. When this
 *  happens, there could be more results as long as `next_page_token` is
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. `page_token` must be the value of
 *  `next_page_token` from the previous response. The values of all other method
 *  parameters, must be identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The query statement. See [how to construct a
 *  query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query)
 *  for more information. If not specified or empty, it will search all the
 *  resources within the specified `scope`. Examples: * `name:Important` to find
 *  Cloud resources whose name contains "Important" as a word. *
 *  `name=Important` to find the Cloud resource whose name is exactly
 *  "Important". * `displayName:Impor*` to find Cloud resources whose display
 *  name contains "Impor" as a prefix of any word in the field. *
 *  `location:us-west*` to find Cloud resources whose location contains both
 *  "us" and "west" as prefixes. * `labels:prod` to find Cloud resources whose
 *  labels contain "prod" as a key or value. * `labels.env:prod` to find Cloud
 *  resources that have a label "env" and its value is "prod". * `labels.env:*`
 *  to find Cloud resources that have a label "env". * `kmsKey:key` to find
 *  Cloud resources encrypted with a customer-managed encryption key whose name
 *  contains the word "key". * `state:ACTIVE` to find Cloud resources whose
 *  state contains "ACTIVE" as a word. * `createTime<1609459200` to find Cloud
 *  resources that were created before "2021-01-01 00:00:00 UTC". 1609459200 is
 *  the epoch timestamp of "2021-01-01 00:00:00 UTC" in seconds. *
 *  `updateTime>1609459200` to find Cloud resources that were updated after
 *  "2021-01-01 00:00:00 UTC". 1609459200 is the epoch timestamp of "2021-01-01
 *  00:00:00 UTC" in seconds. * `Important` to find Cloud resources that contain
 *  "Important" as a word in any of the searchable fields. * `Impor*` to find
 *  Cloud resources that contain "Impor" as a prefix of any word in any of the
 *  searchable fields. * `Important location:(us-west1 OR global)` to find Cloud
 *  resources that contain "Important" as a word in any of the searchable fields
 *  and are also located in the "us-west1" region or the "global" location.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required. A scope can be a project, a folder, or an organization. The search
 *  is limited to the resources within the `scope`. The caller must be granted
 *  the
 *  [`cloudasset.assets.searchAllResources`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions)
 *  permission on the desired scope. The allowed values are: *
 *  projects/{PROJECT_ID} (e.g., "projects/foo-bar") * projects/{PROJECT_NUMBER}
 *  (e.g., "projects/12345678") * folders/{FOLDER_NUMBER} (e.g.,
 *  "folders/1234567") * organizations/{ORGANIZATION_NUMBER} (e.g.,
 *  "organizations/123456")
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Fetches a @c GTLRCloudAsset_SearchAllResourcesResponse.
 *
 *  Searches all Cloud resources within the specified scope, such as a project,
 *  folder, or organization. The caller must be granted the
 *  `cloudasset.assets.searchAllResources` permission on the desired scope,
 *  otherwise the request will be rejected.
 *
 *  @param scope Required. A scope can be a project, a folder, or an
 *    organization. The search is limited to the resources within the `scope`.
 *    The caller must be granted the
 *    [`cloudasset.assets.searchAllResources`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions)
 *    permission on the desired scope. The allowed values are: *
 *    projects/{PROJECT_ID} (e.g., "projects/foo-bar") *
 *    projects/{PROJECT_NUMBER} (e.g., "projects/12345678") *
 *    folders/{FOLDER_NUMBER} (e.g., "folders/1234567") *
 *    organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
 *
 *  @return GTLRCloudAssetQuery_V1SearchAllResources
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithScope:(NSString *)scope;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
