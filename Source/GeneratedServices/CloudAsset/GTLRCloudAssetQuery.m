// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Asset API (cloudasset/v1beta1)
// Description:
//   The cloud asset API manages the history and inventory of cloud resources.
// Documentation:
//   https://console.cloud.google.com/apis/api/cloudasset.googleapis.com/overview

#import "GTLRCloudAssetQuery.h"

#import "GTLRCloudAssetObjects.h"

// ----------------------------------------------------------------------------
// Constants

// contentType
NSString * const kGTLRCloudAssetContentTypeContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudAssetContentTypeIamPolicy           = @"IAM_POLICY";
NSString * const kGTLRCloudAssetContentTypeResource            = @"RESOURCE";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudAssetQuery

@dynamic fields;

@end

@implementation GTLRCloudAssetQuery_OrganizationsBatchGetAssetsHistory

@dynamic assetNames, contentType, parent, readTimeWindowEndTime,
         readTimeWindowStartTime;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"readTimeWindowEndTime" : @"readTimeWindow.endTime",
    @"readTimeWindowStartTime" : @"readTimeWindow.startTime"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assetNames" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:batchGetAssetsHistory";
  GTLRCloudAssetQuery_OrganizationsBatchGetAssetsHistory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudAsset_BatchGetAssetsHistoryResponse class];
  query.loggingName = @"cloudasset.organizations.batchGetAssetsHistory";
  return query;
}

@end

@implementation GTLRCloudAssetQuery_OrganizationsExportAssets

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudAsset_ExportAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:exportAssets";
  GTLRCloudAssetQuery_OrganizationsExportAssets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudAsset_Operation class];
  query.loggingName = @"cloudasset.organizations.exportAssets";
  return query;
}

@end

@implementation GTLRCloudAssetQuery_OrganizationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudAssetQuery_OrganizationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudAsset_Operation class];
  query.loggingName = @"cloudasset.organizations.operations.get";
  return query;
}

@end

@implementation GTLRCloudAssetQuery_ProjectsBatchGetAssetsHistory

@dynamic assetNames, contentType, parent, readTimeWindowEndTime,
         readTimeWindowStartTime;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"readTimeWindowEndTime" : @"readTimeWindow.endTime",
    @"readTimeWindowStartTime" : @"readTimeWindow.startTime"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assetNames" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:batchGetAssetsHistory";
  GTLRCloudAssetQuery_ProjectsBatchGetAssetsHistory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudAsset_BatchGetAssetsHistoryResponse class];
  query.loggingName = @"cloudasset.projects.batchGetAssetsHistory";
  return query;
}

@end

@implementation GTLRCloudAssetQuery_ProjectsExportAssets

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudAsset_ExportAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:exportAssets";
  GTLRCloudAssetQuery_ProjectsExportAssets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudAsset_Operation class];
  query.loggingName = @"cloudasset.projects.exportAssets";
  return query;
}

@end

@implementation GTLRCloudAssetQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudAssetQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudAsset_Operation class];
  query.loggingName = @"cloudasset.projects.operations.get";
  return query;
}

@end
