// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Identity and Access Management (IAM) API (iam/v1)
// Description:
//   Manages identity and access control for Google Cloud Platform resources,
//   including the creation of service accounts, which you can use to
//   authenticate to Google and make API calls.
// Documentation:
//   https://cloud.google.com/iam/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRIam_CreateRoleRequest;
@class GTLRIam_CreateServiceAccountKeyRequest;
@class GTLRIam_CreateServiceAccountRequest;
@class GTLRIam_DisableServiceAccountRequest;
@class GTLRIam_EnableServiceAccountRequest;
@class GTLRIam_LintPolicyRequest;
@class GTLRIam_PatchServiceAccountRequest;
@class GTLRIam_QueryAuditableServicesRequest;
@class GTLRIam_QueryGrantableRolesRequest;
@class GTLRIam_QueryTestablePermissionsRequest;
@class GTLRIam_Role;
@class GTLRIam_ServiceAccount;
@class GTLRIam_SetIamPolicyRequest;
@class GTLRIam_SignBlobRequest;
@class GTLRIam_SignJwtRequest;
@class GTLRIam_TestIamPermissionsRequest;
@class GTLRIam_UndeleteRoleRequest;
@class GTLRIam_UndeleteServiceAccountRequest;
@class GTLRIam_UploadServiceAccountKeyRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// keyTypes

/** Value: "KEY_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesKeyTypeUnspecified;
/** Value: "SYSTEM_MANAGED" */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesSystemManaged;
/** Value: "USER_MANAGED" */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesUserManaged;

// ----------------------------------------------------------------------------
// publicKeyType

/** Value: "TYPE_NONE" */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeNone;
/** Value: "TYPE_RAW_PUBLIC_KEY" */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeRawPublicKey;
/** Value: "TYPE_X509_PEM_FILE" */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeX509PemFile;

// ----------------------------------------------------------------------------
// view

/** Value: "BASIC" */
FOUNDATION_EXTERN NSString * const kGTLRIamViewBasic;
/** Value: "FULL" */
FOUNDATION_EXTERN NSString * const kGTLRIamViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other iam query classes.
 */
@interface GTLRIamQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Lints, or validates, an IAM policy. Currently checks the
 *  google.iam.v1.Binding.condition field, which contains a condition
 *  expression for a role binding.
 *  Successful calls to this method always return an HTTP `200 OK` status code,
 *  even if the linter detects an issue in the IAM policy.
 *
 *  Method: iam.iamPolicies.lintPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_IamPoliciesLintPolicy : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForIamPoliciesLintPolicyWithObject:]

/**
 *  Fetches a @c GTLRIam_LintPolicyResponse.
 *
 *  Lints, or validates, an IAM policy. Currently checks the
 *  google.iam.v1.Binding.condition field, which contains a condition
 *  expression for a role binding.
 *  Successful calls to this method always return an HTTP `200 OK` status code,
 *  even if the linter detects an issue in the IAM policy.
 *
 *  @param object The @c GTLRIam_LintPolicyRequest to include in the query.
 *
 *  @return GTLRIamQuery_IamPoliciesLintPolicy
 */
+ (instancetype)queryWithObject:(GTLRIam_LintPolicyRequest *)object;

@end

/**
 *  Returns a list of services that allow you to opt into audit logs that are
 *  not generated by default.
 *  To learn more about audit logs, see the [Logging
 *  documentation](https://cloud.google.com/logging/docs/audit).
 *
 *  Method: iam.iamPolicies.queryAuditableServices
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_IamPoliciesQueryAuditableServices : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForIamPoliciesQueryAuditableServicesWithObject:]

/**
 *  Fetches a @c GTLRIam_QueryAuditableServicesResponse.
 *
 *  Returns a list of services that allow you to opt into audit logs that are
 *  not generated by default.
 *  To learn more about audit logs, see the [Logging
 *  documentation](https://cloud.google.com/logging/docs/audit).
 *
 *  @param object The @c GTLRIam_QueryAuditableServicesRequest to include in the
 *    query.
 *
 *  @return GTLRIamQuery_IamPoliciesQueryAuditableServices
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryAuditableServicesRequest *)object;

@end

/**
 *  Creates a new custom Role.
 *
 *  Method: iam.organizations.roles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesCreate : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesCreateWithObject:parent:]

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `parent` value format is described below:
 *  * [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):
 *  `projects/{PROJECT_ID}`. This method creates project-level
 *  [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *  *
 *  [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):
 *  `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *  [custom roles](/iam/docs/understanding-custom-roles). Example request
 *  URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Creates a new custom Role.
 *
 *  @param object The @c GTLRIam_CreateRoleRequest to include in the query.
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `parent` value format is described below:
 *    *
 *    [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):
 *    `projects/{PROJECT_ID}`. This method creates project-level
 *    [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *    *
 *    [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):
 *    `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *    [custom roles](/iam/docs/understanding-custom-roles). Example request
 *    URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateRoleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a custom Role.
 *  When you delete a custom role, the following changes occur immediately:
 *  * You cannot bind a member to the custom role in an IAM
 *  Policy.
 *  * Existing bindings to the custom role are not changed, but they have no
 *  effect.
 *  * By default, the response from ListRoles does not include the custom
 *  role.
 *  You have 7 days to undelete the custom role. After 7 days, the following
 *  changes occur:
 *  * The custom role is permanently deleted and cannot be recovered.
 *  * If an IAM policy contains a binding to the custom role, the binding is
 *  permanently removed.
 *
 *  Method: iam.organizations.roles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesDelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesDeleteWithname:]

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  deletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Deletes a custom Role.
 *  When you delete a custom role, the following changes occur immediately:
 *  * You cannot bind a member to the custom role in an IAM
 *  Policy.
 *  * Existing bindings to the custom role are not changed, but they have no
 *  effect.
 *  * By default, the response from ListRoles does not include the custom
 *  role.
 *  You have 7 days to undelete the custom role. After 7 days, the following
 *  changes occur:
 *  * The custom role is permanently deleted and cannot be recovered.
 *  * If an IAM policy contains a binding to the custom role, the binding is
 *  permanently removed.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    *
 *    [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    deletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.organizations.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesGet : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesGetWithname:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *  This method returns results from all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *  * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`roles`](/iam/reference/rest/v1/roles),
 *    [`projects`](/iam/reference/rest/v1/projects.roles), or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *    This method returns results from all
 *    [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *    Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *    * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  Method: iam.organizations.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesList : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesListWithparent:]

/**
 *  Optional limit on the number of roles to include in the response.
 *  The default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `parent` value format is described below:
 *  * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
 *  This method doesn't require a resource; it simply returns all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles`
 *  * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level
 *  [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *  *
 *  [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all
 *  organization-level [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified,
 *  the `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not
 *  return the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Value "BASIC"
 *    @arg @c kGTLRIamViewFull Value "FULL"
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the
 *    request, namely
 *    [`roles`](/iam/reference/rest/v1/roles),
 *    [`projects`](/iam/reference/rest/v1/projects.roles), or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `parent` value format is described below:
 *    * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
 *    This method doesn't require a resource; it simply returns all
 *    [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *    Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles`
 *    * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
 *    `projects/{PROJECT_ID}`. This method lists all project-level
 *    [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *    *
 *    [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
 *    `organizations/{ORGANIZATION_ID}`. This method lists all
 *    organization-level [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the definition of a custom Role.
 *
 *  Method: iam.organizations.roles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesPatch : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesPatchWithObject:name:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  updates only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A mask describing which fields in the Role have changed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Updates the definition of a custom Role.
 *
 *  @param object The @c GTLRIam_Role to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    updates only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_Role *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a custom Role.
 *
 *  Method: iam.organizations.roles.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesUndelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForOrganizationsRolesUndeleteWithObject:name:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  *
 *  [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes
 *  only [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  undeletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Undeletes a custom Role.
 *
 *  @param object The @c GTLRIam_UndeleteRoleRequest to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    *
 *    [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes
 *    only [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    undeletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteRoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists every permission that you can test on a resource. A permission is
 *  testable if you can check whether a member has that permission on the
 *  resource.
 *
 *  Method: iam.permissions.queryTestablePermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_PermissionsQueryTestablePermissions : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForPermissionsQueryTestablePermissionsWithObject:]

/**
 *  Fetches a @c GTLRIam_QueryTestablePermissionsResponse.
 *
 *  Lists every permission that you can test on a resource. A permission is
 *  testable if you can check whether a member has that permission on the
 *  resource.
 *
 *  @param object The @c GTLRIam_QueryTestablePermissionsRequest to include in
 *    the query.
 *
 *  @return GTLRIamQuery_PermissionsQueryTestablePermissions
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryTestablePermissionsRequest *)object;

@end

/**
 *  Creates a new custom Role.
 *
 *  Method: iam.projects.roles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesCreate : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesCreateWithObject:parent:]

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `parent` value format is described below:
 *  * [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):
 *  `projects/{PROJECT_ID}`. This method creates project-level
 *  [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *  *
 *  [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):
 *  `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *  [custom roles](/iam/docs/understanding-custom-roles). Example request
 *  URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Creates a new custom Role.
 *
 *  @param object The @c GTLRIam_CreateRoleRequest to include in the query.
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `parent` value format is described below:
 *    *
 *    [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):
 *    `projects/{PROJECT_ID}`. This method creates project-level
 *    [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *    *
 *    [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):
 *    `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *    [custom roles](/iam/docs/understanding-custom-roles). Example request
 *    URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateRoleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a custom Role.
 *  When you delete a custom role, the following changes occur immediately:
 *  * You cannot bind a member to the custom role in an IAM
 *  Policy.
 *  * Existing bindings to the custom role are not changed, but they have no
 *  effect.
 *  * By default, the response from ListRoles does not include the custom
 *  role.
 *  You have 7 days to undelete the custom role. After 7 days, the following
 *  changes occur:
 *  * The custom role is permanently deleted and cannot be recovered.
 *  * If an IAM policy contains a binding to the custom role, the binding is
 *  permanently removed.
 *
 *  Method: iam.projects.roles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesDelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesDeleteWithname:]

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  deletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Deletes a custom Role.
 *  When you delete a custom role, the following changes occur immediately:
 *  * You cannot bind a member to the custom role in an IAM
 *  Policy.
 *  * Existing bindings to the custom role are not changed, but they have no
 *  effect.
 *  * By default, the response from ListRoles does not include the custom
 *  role.
 *  You have 7 days to undelete the custom role. After 7 days, the following
 *  changes occur:
 *  * The custom role is permanently deleted and cannot be recovered.
 *  * If an IAM policy contains a binding to the custom role, the binding is
 *  permanently removed.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    *
 *    [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    deletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.projects.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesGet : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesGetWithname:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *  This method returns results from all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *  * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`roles`](/iam/reference/rest/v1/roles),
 *    [`projects`](/iam/reference/rest/v1/projects.roles), or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *    This method returns results from all
 *    [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *    Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *    * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  Method: iam.projects.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesList : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesListWithparent:]

/**
 *  Optional limit on the number of roles to include in the response.
 *  The default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `parent` value format is described below:
 *  * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
 *  This method doesn't require a resource; it simply returns all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles`
 *  * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level
 *  [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *  *
 *  [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all
 *  organization-level [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified,
 *  the `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not
 *  return the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Value "BASIC"
 *    @arg @c kGTLRIamViewFull Value "FULL"
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the
 *    request, namely
 *    [`roles`](/iam/reference/rest/v1/roles),
 *    [`projects`](/iam/reference/rest/v1/projects.roles), or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `parent` value format is described below:
 *    * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
 *    This method doesn't require a resource; it simply returns all
 *    [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *    Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles`
 *    * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
 *    `projects/{PROJECT_ID}`. This method lists all project-level
 *    [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *    *
 *    [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
 *    `organizations/{ORGANIZATION_ID}`. This method lists all
 *    organization-level [custom roles](/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the definition of a custom Role.
 *
 *  Method: iam.projects.roles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesPatch : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesPatchWithObject:name:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  updates only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A mask describing which fields in the Role have changed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Updates the definition of a custom Role.
 *
 *  @param object The @c GTLRIam_Role to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    updates only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_Role *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a custom Role.
 *
 *  Method: iam.projects.roles.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesUndelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsRolesUndeleteWithObject:name:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](/iam/reference/rest/v1/projects.roles) or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  *
 *  [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes
 *  only [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  undeletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Undeletes a custom Role.
 *
 *  @param object The @c GTLRIam_UndeleteRoleRequest to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`projects`](/iam/reference/rest/v1/projects.roles) or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    *
 *    [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes
 *    only [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    undeletes only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteRoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsCreate : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsCreateWithObject:name:]

/**
 *  Required. The resource name of the project associated with the service
 *  accounts, such as `projects/my-project-123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Creates a ServiceAccount.
 *
 *  @param object The @c GTLRIam_CreateServiceAccountRequest to include in the
 *    query.
 *  @param name Required. The resource name of the project associated with the
 *    service
 *    accounts, such as `projects/my-project-123`.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a ServiceAccount.
 *  **Warning:** After you delete a service account, you might not be able to
 *  undelete it. If you know that you need to re-enable the service account in
 *  the future, use DisableServiceAccount instead.
 *  If you delete a service account, IAM permanently removes the service
 *  account 30 days later. Google Cloud cannot recover the service account
 *  after it is permanently removed, even if you file a support request.
 *  To help avoid unplanned outages, we recommend that you disable the service
 *  account before you delete it. Use DisableServiceAccount to disable the
 *  service account, then wait at least 24 hours and watch for unintended
 *  consequences. If there are no unintended consequences, you can delete the
 *  service account.
 *
 *  Method: iam.projects.serviceAccounts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsDelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsDeleteWithname:]

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Deletes a ServiceAccount.
 *  **Warning:** After you delete a service account, you might not be able to
 *  undelete it. If you know that you need to re-enable the service account in
 *  the future, use DisableServiceAccount instead.
 *  If you delete a service account, IAM permanently removes the service
 *  account 30 days later. Google Cloud cannot recover the service account
 *  after it is permanently removed, even if you file a support request.
 *  To help avoid unplanned outages, we recommend that you disable the service
 *  account before you delete it. Use DisableServiceAccount to disable the
 *  service account, then wait at least 24 hours and watch for unintended
 *  consequences. If there are no unintended consequences, you can delete the
 *  service account.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disables a ServiceAccount immediately.
 *  If an application uses the service account to authenticate, that
 *  application can no longer call Google APIs or access Google Cloud
 *  resources. Existing access tokens for the service account are rejected, and
 *  requests for new access tokens will fail.
 *  To re-enable the service account, use EnableServiceAccount. After you
 *  re-enable the service account, its existing access tokens will be accepted,
 *  and you can request new access tokens.
 *  To help avoid unplanned outages, we recommend that you disable the service
 *  account before you delete it. Use this method to disable the service
 *  account, then wait at least 24 hours and watch for unintended consequences.
 *  If there are no unintended consequences, you can delete the service account
 *  with DeleteServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsDisable : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsDisableWithObject:name:]

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Disables a ServiceAccount immediately.
 *  If an application uses the service account to authenticate, that
 *  application can no longer call Google APIs or access Google Cloud
 *  resources. Existing access tokens for the service account are rejected, and
 *  requests for new access tokens will fail.
 *  To re-enable the service account, use EnableServiceAccount. After you
 *  re-enable the service account, its existing access tokens will be accepted,
 *  and you can request new access tokens.
 *  To help avoid unplanned outages, we recommend that you disable the service
 *  account before you delete it. Use this method to disable the service
 *  account, then wait at least 24 hours and watch for unintended consequences.
 *  If there are no unintended consequences, you can delete the service account
 *  with DeleteServiceAccount.
 *
 *  @param object The @c GTLRIam_DisableServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsDisable
 */
+ (instancetype)queryWithObject:(GTLRIam_DisableServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enables a ServiceAccount that was disabled by
 *  DisableServiceAccount.
 *  If the service account is already enabled, then this method has no effect.
 *  If the service account was disabled by other means—for example, if Google
 *  disabled the service account because it was compromised—you cannot use this
 *  method to enable the service account.
 *
 *  Method: iam.projects.serviceAccounts.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsEnable : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsEnableWithObject:name:]

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Enables a ServiceAccount that was disabled by
 *  DisableServiceAccount.
 *  If the service account is already enabled, then this method has no effect.
 *  If the service account was disabled by other means—for example, if Google
 *  disabled the service account because it was compromised—you cannot use this
 *  method to enable the service account.
 *
 *  @param object The @c GTLRIam_EnableServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsEnable
 */
+ (instancetype)queryWithObject:(GTLRIam_EnableServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsGet : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsGetWithname:]

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Gets a ServiceAccount.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy that is attached to a ServiceAccount. This IAM
 *  policy specifies which members have access to the service account.
 *  This method does not tell you whether the service account has been granted
 *  any roles on other resources. To check whether a service account has role
 *  grants on a resource, use the `getIamPolicy` method for that resource. For
 *  example, to view the role grants for a project, call the Resource Manager
 *  API's
 *  [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
 *  method.
 *
 *  Method: iam.projects.serviceAccounts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsGetIamPolicy : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsGetIamPolicyWithresource:]

/**
 *  Optional. The policy format version to be returned.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected.
 *  Requests for policies with any conditional bindings must specify version 3.
 *  Policies without any conditional bindings may specify any valid value or
 *  leave the field unset.
 *  To learn which resources support conditions in their IAM policies, see the
 *  [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_Policy.
 *
 *  Gets the IAM policy that is attached to a ServiceAccount. This IAM
 *  policy specifies which members have access to the service account.
 *  This method does not tell you whether the service account has been granted
 *  any roles on other resources. To check whether a service account has role
 *  grants on a resource, use the `getIamPolicy` method for that resource. For
 *  example, to view the role grants for a project, call the Resource Manager
 *  API's
 *  [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
 *  method.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Creates a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysCreate : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsKeysCreateWithObject:name:]

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Creates a ServiceAccountKey.
 *
 *  @param object The @c GTLRIam_CreateServiceAccountKeyRequest to include in
 *    the query.
 *  @param name Required. The resource name of the service account in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysDelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsKeysDeleteWithname:]

/**
 *  Required. The resource name of the service account key in the following
 *  format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Deletes a ServiceAccountKey.
 *
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysGet : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsKeysGetWithname:]

/**
 *  Required. The resource name of the service account key in the following
 *  format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The output format of the public key requested.
 *  X509_PEM is the default output format.
 *
 *  Likely values:
 *    @arg @c kGTLRIamPublicKeyTypeTypeNone Value "TYPE_NONE"
 *    @arg @c kGTLRIamPublicKeyTypeTypeX509PemFile Value "TYPE_X509_PEM_FILE"
 *    @arg @c kGTLRIamPublicKeyTypeTypeRawPublicKey Value "TYPE_RAW_PUBLIC_KEY"
 */
@property(nonatomic, copy, nullable) NSString *publicKeyType;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Gets a ServiceAccountKey.
 *
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every ServiceAccountKey for a service account.
 *
 *  Method: iam.projects.serviceAccounts.keys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysList : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsKeysListWithname:]

/**
 *  Filters the types of keys the user wants to include in the list
 *  response. Duplicate key types are not allowed. If no key type
 *  is provided, all keys are returned.
 *
 *  Likely values:
 *    @arg @c kGTLRIamKeyTypesKeyTypeUnspecified Value "KEY_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRIamKeyTypesUserManaged Value "USER_MANAGED"
 *    @arg @c kGTLRIamKeyTypesSystemManaged Value "SYSTEM_MANAGED"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *keyTypes;

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ListServiceAccountKeysResponse.
 *
 *  Lists every ServiceAccountKey for a service account.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a ServiceAccountKey, using a public key that you provide.
 *
 *  Method: iam.projects.serviceAccounts.keys.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysUpload : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsKeysUploadWithObject:name:]

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Creates a ServiceAccountKey, using a public key that you provide.
 *
 *  @param object The @c GTLRIam_UploadServiceAccountKeyRequest to include in
 *    the query.
 *  @param name The resource name of the service account in the following
 *    format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysUpload
 */
+ (instancetype)queryWithObject:(GTLRIam_UploadServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists every ServiceAccount that belongs to a specific project.
 *
 *  Method: iam.projects.serviceAccounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsList : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsListWithname:]

/**
 *  Required. The resource name of the project associated with the service
 *  accounts, such as `projects/my-project-123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional limit on the number of service accounts to include in the
 *  response. Further accounts can subsequently be obtained by including the
 *  ListServiceAccountsResponse.next_page_token
 *  in a subsequent request.
 *  The default is 20, and the maximum is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional pagination token returned in an earlier
 *  ListServiceAccountsResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRIam_ListServiceAccountsResponse.
 *
 *  Lists every ServiceAccount that belongs to a specific project.
 *
 *  @param name Required. The resource name of the project associated with the
 *    service
 *    accounts, such as `projects/my-project-123`.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Patches a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsPatch : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsPatchWithObject:name:]

/**
 *  The resource name of the service account.
 *  Use one of the following formats:
 *  * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
 *  * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
 *  As an alternative, you can use the `-` wildcard character instead of the
 *  project ID:
 *  * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
 *  * `projects/-/serviceAccounts/{UNIQUE_ID}`
 *  When possible, avoid using the `-` wildcard character, because it can cause
 *  response messages to contain misleading error codes. For example, if you
 *  try to get the service account
 *  `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *  response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *  Found` error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Patches a ServiceAccount.
 *
 *  @param object The @c GTLRIam_PatchServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account.
 *    Use one of the following formats:
 *    * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
 *    * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
 *    As an alternative, you can use the `-` wildcard character instead of the
 *    project ID:
 *    * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
 *    * `projects/-/serviceAccounts/{UNIQUE_ID}`
 *    When possible, avoid using the `-` wildcard character, because it can
 *    cause
 *    response messages to contain misleading error codes. For example, if you
 *    try to get the service account
 *    `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *    response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *    Found` error.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_PatchServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy that is attached to a ServiceAccount.
 *  Use this method to grant or revoke access to the service account. For
 *  example, you could grant a member the ability to impersonate the service
 *  account.
 *  This method does not enable the service account to access other resources.
 *  To grant roles to a service account on a resource, follow these steps:
 *  1. Call the resource's `getIamPolicy` method to get its current IAM policy.
 *  2. Edit the policy so that it binds the service account to an IAM role for
 *  the resource.
 *  3. Call the resource's `setIamPolicy` method to update its IAM policy.
 *  For detailed instructions, see
 *  [Granting roles to a service account for specific
 *  resources](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts).
 *
 *  Method: iam.projects.serviceAccounts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSetIamPolicy : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_Policy.
 *
 *  Sets the IAM policy that is attached to a ServiceAccount.
 *  Use this method to grant or revoke access to the service account. For
 *  example, you could grant a member the ability to impersonate the service
 *  account.
 *  This method does not enable the service account to access other resources.
 *  To grant roles to a service account on a resource, follow these steps:
 *  1. Call the resource's `getIamPolicy` method to get its current IAM policy.
 *  2. Edit the policy so that it binds the service account to an IAM role for
 *  the resource.
 *  3. Call the resource's `setIamPolicy` method to update its IAM policy.
 *  For detailed instructions, see
 *  [Granting roles to a service account for specific
 *  resources](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts).
 *
 *  @param object The @c GTLRIam_SetIamPolicyRequest to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRIam_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  **Note:** This method is deprecated and will stop working on July 1, 2021.
 *  Use the
 *  [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions.
 *  Signs a blob using the system-managed private key for a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.signBlob
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSignBlob : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsSignBlobWithObject:name:]

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api).
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_SignBlobResponse.
 *
 *  **Note:** This method is deprecated and will stop working on July 1, 2021.
 *  Use the
 *  [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions.
 *  Signs a blob using the system-managed private key for a ServiceAccount.
 *
 *  @param object The @c GTLRIam_SignBlobRequest to include in the query.
 *  @param name Required. Deprecated. [Migrate to Service Account Credentials
 *    API](https://cloud.google.com/iam/help/credentials/migrate-api).
 *    The resource name of the service account in the following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSignBlob
 */
+ (instancetype)queryWithObject:(GTLRIam_SignBlobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  **Note:** This method is deprecated and will stop working on July 1, 2021.
 *  Use the
 *  [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions.
 *  Signs a JSON Web Token (JWT) using the system-managed private key for a
 *  ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.signJwt
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSignJwt : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsSignJwtWithObject:name:]

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api).
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account. The `ACCOUNT` value can be the `email` address or the
 *  `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_SignJwtResponse.
 *
 *  **Note:** This method is deprecated and will stop working on July 1, 2021.
 *  Use the
 *  [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions.
 *  Signs a JSON Web Token (JWT) using the system-managed private key for a
 *  ServiceAccount.
 *
 *  @param object The @c GTLRIam_SignJwtRequest to include in the query.
 *  @param name Required. Deprecated. [Migrate to Service Account Credentials
 *    API](https://cloud.google.com/iam/help/credentials/migrate-api).
 *    The resource name of the service account in the following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account. The `ACCOUNT` value can be the `email` address or the
 *    `unique_id` of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSignJwt
 */
+ (instancetype)queryWithObject:(GTLRIam_SignJwtRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Tests whether the caller has the specified permissions on a
 *  ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsTestIamPermissions : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_TestIamPermissionsResponse.
 *
 *  Tests whether the caller has the specified permissions on a
 *  ServiceAccount.
 *
 *  @param object The @c GTLRIam_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRIam_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Restores a deleted ServiceAccount.
 *  **Important:** It is not always possible to restore a deleted service
 *  account. Use this method only as a last resort.
 *  After you delete a service account, IAM permanently removes the service
 *  account 30 days later. There is no way to restore a deleted service account
 *  that has been permanently removed.
 *
 *  Method: iam.projects.serviceAccounts.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsUndelete : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsUndeleteWithObject:name:]

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`.
 *  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *  the account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_UndeleteServiceAccountResponse.
 *
 *  Restores a deleted ServiceAccount.
 *  **Important:** It is not always possible to restore a deleted service
 *  account. Use this method only as a last resort.
 *  After you delete a service account, IAM permanently removes the service
 *  account 30 days later. There is no way to restore a deleted service account
 *  that has been permanently removed.
 *
 *  @param object The @c GTLRIam_UndeleteServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`.
 *    Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
 *    the account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  **Note:** We are in the process of deprecating this method. Use
 *  PatchServiceAccount instead.
 *  Updates a ServiceAccount.
 *  You can update only the `display_name` and `description` fields.
 *
 *  Method: iam.projects.serviceAccounts.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsUpdate : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForProjectsServiceAccountsUpdateWithObject:name:]

/**
 *  The resource name of the service account.
 *  Use one of the following formats:
 *  * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
 *  * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
 *  As an alternative, you can use the `-` wildcard character instead of the
 *  project ID:
 *  * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
 *  * `projects/-/serviceAccounts/{UNIQUE_ID}`
 *  When possible, avoid using the `-` wildcard character, because it can cause
 *  response messages to contain misleading error codes. For example, if you
 *  try to get the service account
 *  `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *  response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *  Found` error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  **Note:** We are in the process of deprecating this method. Use
 *  PatchServiceAccount instead.
 *  Updates a ServiceAccount.
 *  You can update only the `display_name` and `description` fields.
 *
 *  @param object The @c GTLRIam_ServiceAccount to include in the query.
 *  @param name The resource name of the service account.
 *    Use one of the following formats:
 *    * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}`
 *    * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}`
 *    As an alternative, you can use the `-` wildcard character instead of the
 *    project ID:
 *    * `projects/-/serviceAccounts/{EMAIL_ADDRESS}`
 *    * `projects/-/serviceAccounts/{UNIQUE_ID}`
 *    When possible, avoid using the `-` wildcard character, because it can
 *    cause
 *    response messages to contain misleading error codes. For example, if you
 *    try to get the service account
 *    `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *    response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *    Found` error.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsUpdate
 */
+ (instancetype)queryWithObject:(GTLRIam_ServiceAccount *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesGet : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForRolesGetWithname:]

/**
 *  The `name` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `name` value format is described below:
 *  * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *  This method returns results from all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *  * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](/iam/docs/understanding-custom-roles) that have been
 *  created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the
 *    request, namely
 *    [`roles`](/iam/reference/rest/v1/roles),
 *    [`projects`](/iam/reference/rest/v1/projects.roles), or
 *    [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *    resource type's `name` value format is described below:
 *    * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
 *    This method returns results from all
 *    [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *    Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`
 *    * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom roles](/iam/docs/understanding-custom-roles) that have been
 *    created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom roles](/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_RolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  Method: iam.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesList : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForRolesList]

/**
 *  Optional limit on the number of roles to include in the response.
 *  The default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](/iam/reference/rest/v1/roles),
 *  [`projects`](/iam/reference/rest/v1/projects.roles), or
 *  [`organizations`](/iam/reference/rest/v1/organizations.roles). Each
 *  resource type's `parent` value format is described below:
 *  * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
 *  This method doesn't require a resource; it simply returns all
 *  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
 *  Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles`
 *  * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level
 *  [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`
 *  *
 *  [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all
 *  organization-level [custom roles](/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified,
 *  the `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not
 *  return the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Value "BASIC"
 *    @arg @c kGTLRIamViewFull Value "FULL"
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role
 *  that is defined for an organization or project.
 *
 *  @return GTLRIamQuery_RolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists roles that can be granted on a Google Cloud resource. A role is
 *  grantable if the IAM policy for the resource can contain bindings to the
 *  role.
 *
 *  Method: iam.roles.queryGrantableRoles
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesQueryGrantableRoles : GTLRIamQuery
// Previous library name was
//   +[GTLQueryIam queryForRolesQueryGrantableRolesWithObject:]

/**
 *  Fetches a @c GTLRIam_QueryGrantableRolesResponse.
 *
 *  Lists roles that can be granted on a Google Cloud resource. A role is
 *  grantable if the IAM policy for the resource can contain bindings to the
 *  role.
 *
 *  @param object The @c GTLRIam_QueryGrantableRolesRequest to include in the
 *    query.
 *
 *  @return GTLRIamQuery_RolesQueryGrantableRoles
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryGrantableRolesRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
