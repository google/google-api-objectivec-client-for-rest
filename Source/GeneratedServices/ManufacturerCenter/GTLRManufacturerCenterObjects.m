// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Manufacturer Center API (manufacturers/v1)
// Description:
//   Public API for managing Manufacturer Center related data.
// Documentation:
//   https://developers.google.com/manufacturers/

#import "GTLRManufacturerCenterObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRManufacturerCenter_DestinationStatus.status
NSString * const kGTLRManufacturerCenter_DestinationStatus_Status_Active = @"ACTIVE";
NSString * const kGTLRManufacturerCenter_DestinationStatus_Status_Disapproved = @"DISAPPROVED";
NSString * const kGTLRManufacturerCenter_DestinationStatus_Status_Pending = @"PENDING";
NSString * const kGTLRManufacturerCenter_DestinationStatus_Status_Unknown = @"UNKNOWN";

// GTLRManufacturerCenter_Image.status
NSString * const kGTLRManufacturerCenter_Image_Status_CrawlError = @"CRAWL_ERROR";
NSString * const kGTLRManufacturerCenter_Image_Status_CrawlSkipped = @"CRAWL_SKIPPED";
NSString * const kGTLRManufacturerCenter_Image_Status_DecodingError = @"DECODING_ERROR";
NSString * const kGTLRManufacturerCenter_Image_Status_Hostloaded = @"HOSTLOADED";
NSString * const kGTLRManufacturerCenter_Image_Status_Http404  = @"HTTP_404";
NSString * const kGTLRManufacturerCenter_Image_Status_Ok       = @"OK";
NSString * const kGTLRManufacturerCenter_Image_Status_PendingCrawl = @"PENDING_CRAWL";
NSString * const kGTLRManufacturerCenter_Image_Status_PendingProcessing = @"PENDING_PROCESSING";
NSString * const kGTLRManufacturerCenter_Image_Status_ProcessingError = @"PROCESSING_ERROR";
NSString * const kGTLRManufacturerCenter_Image_Status_Roboted  = @"ROBOTED";
NSString * const kGTLRManufacturerCenter_Image_Status_StatusUnspecified = @"STATUS_UNSPECIFIED";
NSString * const kGTLRManufacturerCenter_Image_Status_TooBig   = @"TOO_BIG";
NSString * const kGTLRManufacturerCenter_Image_Status_Xroboted = @"XROBOTED";

// GTLRManufacturerCenter_Image.type
NSString * const kGTLRManufacturerCenter_Image_Type_Crawled    = @"CRAWLED";
NSString * const kGTLRManufacturerCenter_Image_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";
NSString * const kGTLRManufacturerCenter_Image_Type_Uploaded   = @"UPLOADED";

// GTLRManufacturerCenter_Issue.resolution
NSString * const kGTLRManufacturerCenter_Issue_Resolution_PendingProcessing = @"PENDING_PROCESSING";
NSString * const kGTLRManufacturerCenter_Issue_Resolution_ResolutionUnspecified = @"RESOLUTION_UNSPECIFIED";
NSString * const kGTLRManufacturerCenter_Issue_Resolution_UserAction = @"USER_ACTION";

// GTLRManufacturerCenter_Issue.severity
NSString * const kGTLRManufacturerCenter_Issue_Severity_Error  = @"ERROR";
NSString * const kGTLRManufacturerCenter_Issue_Severity_Info   = @"INFO";
NSString * const kGTLRManufacturerCenter_Issue_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";
NSString * const kGTLRManufacturerCenter_Issue_Severity_Warning = @"WARNING";

// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Attributes
//

@implementation GTLRManufacturerCenter_Attributes
@dynamic additionalImageLink, ageGroup, brand, capacity, color, count,
         descriptionProperty, disclosureDate, excludedDestination,
         featureDescription, flavor, format, gender, gtin, imageLink,
         includedDestination, itemGroupId, material, mpn, pattern,
         productDetail, productLine, productName, productPageUrl, productType,
         releaseDate, scent, size, sizeSystem, sizeType, suggestedRetailPrice,
         targetClientId, theme, title, videoLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"additionalImageLink" : [GTLRManufacturerCenter_Image class],
    @"excludedDestination" : [NSString class],
    @"featureDescription" : [GTLRManufacturerCenter_FeatureDescription class],
    @"gtin" : [NSString class],
    @"includedDestination" : [NSString class],
    @"productDetail" : [GTLRManufacturerCenter_ProductDetail class],
    @"productType" : [NSString class],
    @"videoLink" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Capacity
//

@implementation GTLRManufacturerCenter_Capacity
@dynamic unit, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Count
//

@implementation GTLRManufacturerCenter_Count
@dynamic unit, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_DestinationStatus
//

@implementation GTLRManufacturerCenter_DestinationStatus
@dynamic destination, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Empty
//

@implementation GTLRManufacturerCenter_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_FeatureDescription
//

@implementation GTLRManufacturerCenter_FeatureDescription
@dynamic headline, image, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Image
//

@implementation GTLRManufacturerCenter_Image
@dynamic imageUrl, status, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Issue
//

@implementation GTLRManufacturerCenter_Issue
@dynamic attribute, descriptionProperty, destination, resolution, severity,
         timestamp, title, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_ListProductsResponse
//

@implementation GTLRManufacturerCenter_ListProductsResponse
@dynamic nextPageToken, products;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"products" : [GTLRManufacturerCenter_Product class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"products";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Price
//

@implementation GTLRManufacturerCenter_Price
@dynamic amount, currency;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_Product
//

@implementation GTLRManufacturerCenter_Product
@dynamic attributes, contentLanguage, destinationStatuses, issues, name, parent,
         productId, targetCountry;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"destinationStatuses" : [GTLRManufacturerCenter_DestinationStatus class],
    @"issues" : [GTLRManufacturerCenter_Issue class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManufacturerCenter_ProductDetail
//

@implementation GTLRManufacturerCenter_ProductDetail
@dynamic attributeName, attributeValue, sectionName;
@end
