// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Perspective Comment Analyzer API (commentanalyzer/v1alpha1)
// Description:
//   The Perspective Comment Analyzer API provides information about the
//   potential impact of a comment on a conversation (e.g. it can provide a
//   score for the "toxicity" of a comment). Users can leverage the
//   "SuggestCommentScore" method to submit corrections to improve Perspective
//   over time. Users can set the "doNotStore" flag to ensure that all submitted
//   comments are automatically deleted after scores are returned.
// Documentation:
//   https://conversationai.github.io/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCommentAnalyzer_AnalyzeCommentRequest;
@class GTLRCommentAnalyzer_SuggestCommentScoreRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Comment Analyzer query classes.
 */
@interface GTLRCommentAnalyzerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Analyzes the provided text and returns scores for requested attributes.
 *
 *  Method: commentanalyzer.comments.analyze
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCommentAnalyzerUserinfoEmail
 */
@interface GTLRCommentAnalyzerQuery_CommentsAnalyze : GTLRCommentAnalyzerQuery
// Previous library name was
//   +[GTLQueryCommentAnalyzer queryForCommentsAnalyzeWithObject:]

/**
 *  Fetches a @c GTLRCommentAnalyzer_AnalyzeCommentResponse.
 *
 *  Analyzes the provided text and returns scores for requested attributes.
 *
 *  @param object The @c GTLRCommentAnalyzer_AnalyzeCommentRequest to include in
 *    the query.
 *
 *  @return GTLRCommentAnalyzerQuery_CommentsAnalyze
 */
+ (instancetype)queryWithObject:(GTLRCommentAnalyzer_AnalyzeCommentRequest *)object;

@end

/**
 *  Suggest comment scores as training data.
 *
 *  Method: commentanalyzer.comments.suggestscore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCommentAnalyzerUserinfoEmail
 */
@interface GTLRCommentAnalyzerQuery_CommentsSuggestscore : GTLRCommentAnalyzerQuery
// Previous library name was
//   +[GTLQueryCommentAnalyzer queryForCommentsSuggestscoreWithObject:]

/**
 *  Fetches a @c GTLRCommentAnalyzer_SuggestCommentScoreResponse.
 *
 *  Suggest comment scores as training data.
 *
 *  @param object The @c GTLRCommentAnalyzer_SuggestCommentScoreRequest to
 *    include in the query.
 *
 *  @return GTLRCommentAnalyzerQuery_CommentsSuggestscore
 */
+ (instancetype)queryWithObject:(GTLRCommentAnalyzer_SuggestCommentScoreRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
