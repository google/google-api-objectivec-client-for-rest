// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Game Services API (gameservices/v1)
// Description:
//   Deploy and manage infrastructure for global multiplayer gaming experiences.
// Documentation:
//   https://cloud.google.com/solutions/gaming/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRGameServices_CancelOperationRequest;
@class GTLRGameServices_FetchDeploymentStateRequest;
@class GTLRGameServices_GameServerCluster;
@class GTLRGameServices_GameServerConfig;
@class GTLRGameServices_GameServerDeployment;
@class GTLRGameServices_GameServerDeploymentRollout;
@class GTLRGameServices_Realm;
@class GTLRGameServices_SetIamPolicyRequest;
@class GTLRGameServices_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Includes basic information of a GameServerCluster resource and omits
 *  `cluster_state`. This is the default value (for methods
 *  ListGameServerClusters, GetGameServerCluster, and
 *  PreviewCreateGameServerCluster).
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRGameServicesViewBasic;
/**
 *  Include basic information of a GameServerCluster resource as well as
 *  `cluster_state`.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRGameServicesViewFull;
/**
 *  If the value is not set, Google Cloud Game Servers defaults to the `BASIC`
 *  view.
 *
 *  Value: "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGameServicesViewGameServerClusterViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Game Services query classes.
 */
@interface GTLRGameServicesQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new game server config in a given project, location, and game
 *  server deployment. Game server configs are immutable, and are not applied
 *  until referenced in the game server deployment rollout resource.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.configs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsCreate : GTLRGameServicesQuery

/** Required. The ID of the game server config resource to create. */
@property(nonatomic, copy, nullable) NSString *configId;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Creates a new game server config in a given project, location, and game
 *  server deployment. Game server configs are immutable, and are not applied
 *  until referenced in the game server deployment rollout resource.
 *
 *  @param object The @c GTLRGameServices_GameServerConfig to include in the
 *    query.
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single game server config. The deletion fails if the game server
 *  config is referenced in a game server deployment rollout.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.configs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsDelete : GTLRGameServicesQuery

/**
 *  Required. The name of the game server config to delete, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Deletes a single game server config. The deletion fails if the game server
 *  config is referenced in a game server deployment rollout.
 *
 *  @param name Required. The name of the game server config to delete, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single game server config.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.configs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsGet : GTLRGameServicesQuery

/**
 *  Required. The name of the game server config to retrieve, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_GameServerConfig.
 *
 *  Gets details of a single game server config.
 *
 *  @param name Required. The name of the game server config to retrieve, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists game server configs in a given project, location, and game server
 *  deployment.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.configs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsList : GTLRGameServicesQuery

/**
 *  Optional. The filter to apply to list results (see
 *  [Filtering](https://google.aip.dev/160)).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results following [Cloud API
 *  syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If unspecified, the server
 *  picks an appropriate default. The server may return fewer items than
 *  requested. A caller should only rely on response's next_page_token to
 *  determine if there are more GameServerConfigs left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous list request,
 *  if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/
 *  *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_ListGameServerConfigsResponse.
 *
 *  Lists game server configs in a given project, location, and game server
 *  deployment.
 *
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/
 *    *`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new game server deployment in a given project and location.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsCreate : GTLRGameServicesQuery

/** Required. The ID of the game server deployment resource to create. */
@property(nonatomic, copy, nullable) NSString *deploymentId;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Creates a new game server deployment in a given project and location.
 *
 *  @param object The @c GTLRGameServices_GameServerDeployment to include in the
 *    query.
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single game server deployment.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsDelete : GTLRGameServicesQuery

/**
 *  Required. The name of the game server deployment to delete, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Deletes a single game server deployment.
 *
 *  @param name Required. The name of the game server deployment to delete, in
 *    the following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves information about the current state of the game server deployment.
 *  Gathers all the Agones fleets and Agones autoscalers, including fleets
 *  running an older version of the game server deployment.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.fetchDeploymentState
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsFetchDeploymentState : GTLRGameServicesQuery

/**
 *  Required. The name of the game server deployment, in the following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_FetchDeploymentStateResponse.
 *
 *  Retrieves information about the current state of the game server deployment.
 *  Gathers all the Agones fleets and Agones autoscalers, including fleets
 *  running an older version of the game server deployment.
 *
 *  @param object The @c GTLRGameServices_FetchDeploymentStateRequest to include
 *    in the query.
 *  @param name Required. The name of the game server deployment, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsFetchDeploymentState
 */
+ (instancetype)queryWithObject:(GTLRGameServices_FetchDeploymentStateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single game server deployment.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGet : GTLRGameServicesQuery

/**
 *  Required. The name of the game server deployment to retrieve, in the
 *  following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_GameServerDeployment.
 *
 *  Gets details of a single game server deployment.
 *
 *  @param name Required. The name of the game server deployment to retrieve, in
 *    the following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGetIamPolicy : GTLRGameServicesQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGameServices_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Gets details of a single game server deployment rollout.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.getRollout
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGetRollout : GTLRGameServicesQuery

/**
 *  Required. The name of the game server deployment rollout to retrieve, in the
 *  following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_GameServerDeploymentRollout.
 *
 *  Gets details of a single game server deployment rollout.
 *
 *  @param name Required. The name of the game server deployment rollout to
 *    retrieve, in the following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsGetRollout
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists game server deployments in a given project and location.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsList : GTLRGameServicesQuery

/**
 *  Optional. The filter to apply to list results (see
 *  [Filtering](https://google.aip.dev/160)).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results following [Cloud API
 *  syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If unspecified, the server
 *  picks an appropriate default. The server may return fewer items than
 *  requested. A caller should only rely on the response's next_page_token to
 *  determine if there are more GameServerDeployments left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous list request,
 *  if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_ListGameServerDeploymentsResponse.
 *
 *  Lists game server deployments in a given project and location.
 *
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Patches a game server deployment.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsPatch : GTLRGameServicesQuery

/**
 *  The resource name of the game server deployment, in the following form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 *  For example,
 *  `projects/my-project/locations/global/gameServerDeployments/my-deployment`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask to apply to the resource. At least one path must
 *  be supplied in this field. For more information, see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Patches a game server deployment.
 *
 *  @param object The @c GTLRGameServices_GameServerDeployment to include in the
 *    query.
 *  @param name The resource name of the game server deployment, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.
 *    For example,
 *    `projects/my-project/locations/global/gameServerDeployments/my-deployment`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsPatch
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerDeployment *)object
                           name:(NSString *)name;

@end

/**
 *  Previews the game server deployment rollout. This API does not mutate the
 *  rollout resource.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.previewRollout
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsPreviewRollout : GTLRGameServicesQuery

/**
 *  The resource name of the game server deployment rollout, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 *  For example,
 *  `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The target timestamp to compute the preview. Defaults to the
 *  immediately after the proposed rollout completes.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *previewTime;

/**
 *  Optional. The update mask to apply to the resource. At least one path must
 *  be supplied in this field. For more information, see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_PreviewGameServerDeploymentRolloutResponse.
 *
 *  Previews the game server deployment rollout. This API does not mutate the
 *  rollout resource.
 *
 *  @param object The @c GTLRGameServices_GameServerDeploymentRollout to include
 *    in the query.
 *  @param name The resource name of the game server deployment rollout, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 *    For example,
 *    `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsPreviewRollout
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerDeploymentRollout *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsSetIamPolicy : GTLRGameServicesQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGameServices_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGameServices_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGameServices_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsTestIamPermissions : GTLRGameServicesQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGameServices_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGameServices_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGameServices_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Patches a single game server deployment rollout. The method will not return
 *  an error if the update does not affect any existing realms. For example, the
 *  following cases will not return an error: * The default_game_server_config
 *  is changed but all existing realms use the override. * A non-existing realm
 *  is explicitly called out in the game_server_config_overrides field.
 *
 *  Method: gameservices.projects.locations.gameServerDeployments.updateRollout
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsUpdateRollout : GTLRGameServicesQuery

/**
 *  The resource name of the game server deployment rollout, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 *  For example,
 *  `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask to apply to the resource. At least one path must
 *  be supplied in this field. For more information, see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Patches a single game server deployment rollout. The method will not return
 *  an error if the update does not affect any existing realms. For example, the
 *  following cases will not return an error: * The default_game_server_config
 *  is changed but all existing realms use the override. * A non-existing realm
 *  is explicitly called out in the game_server_config_overrides field.
 *
 *  @param object The @c GTLRGameServices_GameServerDeploymentRollout to include
 *    in the query.
 *  @param name The resource name of the game server deployment rollout, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`.
 *    For example,
 *    `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGameServerDeploymentsUpdateRollout
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerDeploymentRollout *)object
                           name:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: gameservices.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsGet : GTLRGameServicesQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: gameservices.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsList : GTLRGameServicesQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  If true, the returned list will include locations which are not yet
 *  revealed.
 */
@property(nonatomic, assign) BOOL includeUnrevealedLocations;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGameServices_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: gameservices.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsOperationsCancel : GTLRGameServicesQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRGameServices_CancelOperationRequest to include in
 *    the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRGameServices_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: gameservices.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsOperationsDelete : GTLRGameServicesQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gameservices.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsOperationsGet : GTLRGameServicesQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: gameservices.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsOperationsList : GTLRGameServicesQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGameServices_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new realm in a given project and location.
 *
 *  Method: gameservices.projects.locations.realms.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsCreate : GTLRGameServicesQuery

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The ID of the realm resource to create. */
@property(nonatomic, copy, nullable) NSString *realmId;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Creates a new realm in a given project and location.
 *
 *  @param object The @c GTLRGameServices_Realm to include in the query.
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsCreate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_Realm *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single realm.
 *
 *  Method: gameservices.projects.locations.realms.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsDelete : GTLRGameServicesQuery

/**
 *  Required. The name of the realm to delete, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Deletes a single realm.
 *
 *  @param name Required. The name of the realm to delete, in the following
 *    form: `projects/{project}/locations/{locationId}/realms/{realmId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new game server cluster in a given project and location.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersCreate : GTLRGameServicesQuery

/** Required. The ID of the game server cluster resource to create. */
@property(nonatomic, copy, nullable) NSString *gameServerClusterId;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Creates a new game server cluster in a given project and location.
 *
 *  @param object The @c GTLRGameServices_GameServerCluster to include in the
 *    query.
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single game server cluster.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersDelete : GTLRGameServicesQuery

/**
 *  Required. The name of the game server cluster to delete, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Deletes a single game server cluster.
 *
 *  @param name Required. The name of the game server cluster to delete, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single game server cluster.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersGet : GTLRGameServicesQuery

/**
 *  Required. The name of the game server cluster to retrieve, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. View for the returned GameServerCluster objects. When `FULL` is
 *  specified, the `cluster_state` field is also returned in the
 *  GameServerCluster object, which includes the state of the referenced
 *  Kubernetes cluster such as versions and provider info. The default/unset
 *  value is `GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED`, the same as `BASIC`, which
 *  does not return the `cluster_state` field.
 *
 *  Likely values:
 *    @arg @c kGTLRGameServicesViewGameServerClusterViewUnspecified If the value
 *        is not set, Google Cloud Game Servers defaults to the `BASIC` view.
 *        (Value: "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGameServicesViewBasic Includes basic information of a
 *        GameServerCluster resource and omits `cluster_state`. This is the
 *        default value (for methods ListGameServerClusters,
 *        GetGameServerCluster, and PreviewCreateGameServerCluster). (Value:
 *        "BASIC")
 *    @arg @c kGTLRGameServicesViewFull Include basic information of a
 *        GameServerCluster resource as well as `cluster_state`. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGameServices_GameServerCluster.
 *
 *  Gets details of a single game server cluster.
 *
 *  @param name Required. The name of the game server cluster to retrieve, in
 *    the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists game server clusters in a given project and location.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersList : GTLRGameServicesQuery

/**
 *  Optional. The filter to apply to list results (see
 *  [Filtering](https://google.aip.dev/160)).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results following [Cloud API
 *  syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If unspecified, the server
 *  picks an appropriate default. The server may return fewer items than
 *  requested. A caller should only rely on response's next_page_token to
 *  determine if there are more GameServerClusters left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous list request,
 *  if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. View for the returned GameServerCluster objects. When `FULL` is
 *  specified, the `cluster_state` field is also returned in the
 *  GameServerCluster object, which includes the state of the referenced
 *  Kubernetes cluster such as versions and provider info. The default/unset
 *  value is `GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED`, the same as `BASIC`, which
 *  does not return the `cluster_state` field.
 *
 *  Likely values:
 *    @arg @c kGTLRGameServicesViewGameServerClusterViewUnspecified If the value
 *        is not set, Google Cloud Game Servers defaults to the `BASIC` view.
 *        (Value: "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGameServicesViewBasic Includes basic information of a
 *        GameServerCluster resource and omits `cluster_state`. This is the
 *        default value (for methods ListGameServerClusters,
 *        GetGameServerCluster, and PreviewCreateGameServerCluster). (Value:
 *        "BASIC")
 *    @arg @c kGTLRGameServicesViewFull Include basic information of a
 *        GameServerCluster resource as well as `cluster_state`. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGameServices_ListGameServerClustersResponse.
 *
 *  Lists game server clusters in a given project and location.
 *
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Patches a single game server cluster.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPatch : GTLRGameServicesQuery

/**
 *  Required. The resource name of the game server cluster, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 *  For example,
 *  `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask to apply to the resource. At least one path must
 *  be supplied in this field. For more information, see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Patches a single game server cluster.
 *
 *  @param object The @c GTLRGameServices_GameServerCluster to include in the
 *    query.
 *  @param name Required. The resource name of the game server cluster, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 *    For example,
 *    `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Previews creation of a new game server cluster in a given project and
 *  location.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.previewCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewCreate : GTLRGameServicesQuery

/** Required. The ID of the game server cluster resource to create. */
@property(nonatomic, copy, nullable) NSString *gameServerClusterId;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. The target timestamp to compute the preview. */
@property(nonatomic, strong, nullable) GTLRDateTime *previewTime;

/**
 *  Optional. This field is deprecated. Preview will always return
 *  KubernetesClusterState.
 *
 *  Likely values:
 *    @arg @c kGTLRGameServicesViewGameServerClusterViewUnspecified If the value
 *        is not set, Google Cloud Game Servers defaults to the `BASIC` view.
 *        (Value: "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGameServicesViewBasic Includes basic information of a
 *        GameServerCluster resource and omits `cluster_state`. This is the
 *        default value (for methods ListGameServerClusters,
 *        GetGameServerCluster, and PreviewCreateGameServerCluster). (Value:
 *        "BASIC")
 *    @arg @c kGTLRGameServicesViewFull Include basic information of a
 *        GameServerCluster resource as well as `cluster_state`. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGameServices_PreviewCreateGameServerClusterResponse.
 *
 *  Previews creation of a new game server cluster in a given project and
 *  location.
 *
 *  @param object The @c GTLRGameServices_GameServerCluster to include in the
 *    query.
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewCreate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Previews deletion of a single game server cluster.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.previewDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewDelete : GTLRGameServicesQuery

/**
 *  Required. The name of the game server cluster to delete, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. The target timestamp to compute the preview. */
@property(nonatomic, strong, nullable) GTLRDateTime *previewTime;

/**
 *  Fetches a @c GTLRGameServices_PreviewDeleteGameServerClusterResponse.
 *
 *  Previews deletion of a single game server cluster.
 *
 *  @param name Required. The name of the game server cluster to delete, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Previews updating a GameServerCluster.
 *
 *  Method: gameservices.projects.locations.realms.gameServerClusters.previewUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewUpdate : GTLRGameServicesQuery

/**
 *  Required. The resource name of the game server cluster, in the following
 *  form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 *  For example,
 *  `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. The target timestamp to compute the preview. */
@property(nonatomic, strong, nullable) GTLRDateTime *previewTime;

/**
 *  Required. Mask of fields to update. At least one path must be supplied in
 *  this field. For more information, see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_PreviewUpdateGameServerClusterResponse.
 *
 *  Previews updating a GameServerCluster.
 *
 *  @param object The @c GTLRGameServices_GameServerCluster to include in the
 *    query.
 *  @param name Required. The resource name of the game server cluster, in the
 *    following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.
 *    For example,
 *    `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGameServerClustersPreviewUpdate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_GameServerCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single realm.
 *
 *  Method: gameservices.projects.locations.realms.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsGet : GTLRGameServicesQuery

/**
 *  Required. The name of the realm to retrieve, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGameServices_Realm.
 *
 *  Gets details of a single realm.
 *
 *  @param name Required. The name of the realm to retrieve, in the following
 *    form: `projects/{project}/locations/{locationId}/realms/{realmId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists realms in a given project and location.
 *
 *  Method: gameservices.projects.locations.realms.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsList : GTLRGameServicesQuery

/**
 *  Optional. The filter to apply to list results (see
 *  [Filtering](https://google.aip.dev/160)).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results following [Cloud API
 *  syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If unspecified, the server
 *  picks an appropriate default. The server may return fewer items than
 *  requested. A caller should only rely on the response's next_page_token to
 *  determine if there are more realms left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous list request,
 *  if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the following form:
 *  `projects/{project}/locations/{locationId}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGameServices_ListRealmsResponse.
 *
 *  Lists realms in a given project and location.
 *
 *  @param parent Required. The parent resource name, in the following form:
 *    `projects/{project}/locations/{locationId}`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Patches a single realm.
 *
 *  Method: gameservices.projects.locations.realms.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsPatch : GTLRGameServicesQuery

/**
 *  The resource name of the realm, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`. For example,
 *  `projects/my-project/locations/global/realms/my-realm`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask to apply to the resource. For more information,
 *  see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_Operation.
 *
 *  Patches a single realm.
 *
 *  @param object The @c GTLRGameServices_Realm to include in the query.
 *  @param name The resource name of the realm, in the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}`. For example,
 *    `projects/my-project/locations/global/realms/my-realm`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsPatch
 */
+ (instancetype)queryWithObject:(GTLRGameServices_Realm *)object
                           name:(NSString *)name;

@end

/**
 *  Previews patches to a single realm.
 *
 *  Method: gameservices.projects.locations.realms.previewUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGameServicesCloudPlatform
 */
@interface GTLRGameServicesQuery_ProjectsLocationsRealmsPreviewUpdate : GTLRGameServicesQuery

/**
 *  The resource name of the realm, in the following form:
 *  `projects/{project}/locations/{locationId}/realms/{realmId}`. For example,
 *  `projects/my-project/locations/global/realms/my-realm`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. The target timestamp to compute the preview. */
@property(nonatomic, strong, nullable) GTLRDateTime *previewTime;

/**
 *  Required. The update mask to apply to the resource. For more information,
 *  see the [`FieldMask`
 *  definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGameServices_PreviewRealmUpdateResponse.
 *
 *  Previews patches to a single realm.
 *
 *  @param object The @c GTLRGameServices_Realm to include in the query.
 *  @param name The resource name of the realm, in the following form:
 *    `projects/{project}/locations/{locationId}/realms/{realmId}`. For example,
 *    `projects/my-project/locations/global/realms/my-realm`.
 *
 *  @return GTLRGameServicesQuery_ProjectsLocationsRealmsPreviewUpdate
 */
+ (instancetype)queryWithObject:(GTLRGameServices_Realm *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
