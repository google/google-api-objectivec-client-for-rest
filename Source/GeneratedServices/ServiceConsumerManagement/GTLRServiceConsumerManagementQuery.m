// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Consumer Management API (serviceconsumermanagement/v1)
// Description:
//   Manages the service consumers of a Service Infrastructure service.
// Documentation:
//   https://cloud.google.com/service-consumer-management/docs/overview

#import "GTLRServiceConsumerManagementQuery.h"

#import "GTLRServiceConsumerManagementObjects.h"

@implementation GTLRServiceConsumerManagementQuery

@dynamic fields;

@end

@implementation GTLRServiceConsumerManagementQuery_OperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRServiceConsumerManagementQuery_OperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Empty class];
  query.loggingName = @"serviceconsumermanagement.operations.cancel";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_OperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRServiceConsumerManagementQuery_OperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Empty class];
  query.loggingName = @"serviceconsumermanagement.operations.delete";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRServiceConsumerManagementQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.operations.get";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_OperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRServiceConsumerManagementQuery_OperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_ListOperationsResponse class];
  query.loggingName = @"serviceconsumermanagement.operations.list";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesSearch

@dynamic pageSize, pageToken, parent, query;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:search";
  GTLRServiceConsumerManagementQuery_ServicesSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_SearchTenancyUnitsResponse class];
  query.loggingName = @"serviceconsumermanagement.services.search";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsAddProject

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_AddTenantProjectRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:addProject";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsAddProject *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.addProject";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsApplyProjectConfig

@dynamic name;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_ApplyTenantProjectConfigRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:applyProjectConfig";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsApplyProjectConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.applyProjectConfig";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsAttachProject

@dynamic name;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_AttachTenantProjectRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:attachProject";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsAttachProject *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.attachProject";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_CreateTenancyUnitRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tenancyUnits";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_TenancyUnit class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.create";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.delete";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tenancyUnits";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_ListTenancyUnitsResponse class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.list";
  return query;
}

@end

@implementation GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsRemoveProject

@dynamic name;

+ (instancetype)queryWithObject:(GTLRServiceConsumerManagement_RemoveTenantProjectRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:removeProject";
  GTLRServiceConsumerManagementQuery_ServicesTenancyUnitsRemoveProject *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRServiceConsumerManagement_Operation class];
  query.loggingName = @"serviceconsumermanagement.services.tenancyUnits.removeProject";
  return query;
}

@end
