// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Classroom API (classroom/v1)
// Description:
//   Manages classes, rosters, and invitations in Google Classroom.
// Documentation:
//   https://developers.google.com/classroom/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRClassroom_Announcement;
@class GTLRClassroom_Assignment;
@class GTLRClassroom_AssignmentSubmission;
@class GTLRClassroom_Attachment;
@class GTLRClassroom_CloudPubsubTopic;
@class GTLRClassroom_Course;
@class GTLRClassroom_CourseAlias;
@class GTLRClassroom_CourseMaterial;
@class GTLRClassroom_CourseMaterialSet;
@class GTLRClassroom_CourseRosterChangesInfo;
@class GTLRClassroom_CourseWork;
@class GTLRClassroom_CourseWorkChangesInfo;
@class GTLRClassroom_Date;
@class GTLRClassroom_DriveFile;
@class GTLRClassroom_DriveFolder;
@class GTLRClassroom_Feed;
@class GTLRClassroom_Form;
@class GTLRClassroom_GlobalPermission;
@class GTLRClassroom_GradeHistory;
@class GTLRClassroom_Guardian;
@class GTLRClassroom_GuardianInvitation;
@class GTLRClassroom_IndividualStudentsOptions;
@class GTLRClassroom_Invitation;
@class GTLRClassroom_Link;
@class GTLRClassroom_Material;
@class GTLRClassroom_ModifyIndividualStudentsOptions;
@class GTLRClassroom_MultipleChoiceQuestion;
@class GTLRClassroom_MultipleChoiceSubmission;
@class GTLRClassroom_Name;
@class GTLRClassroom_SharedDriveFile;
@class GTLRClassroom_ShortAnswerSubmission;
@class GTLRClassroom_StateHistory;
@class GTLRClassroom_Student;
@class GTLRClassroom_StudentSubmission;
@class GTLRClassroom_SubmissionHistory;
@class GTLRClassroom_Teacher;
@class GTLRClassroom_TimeOfDay;
@class GTLRClassroom_UserProfile;
@class GTLRClassroom_YouTubeVideo;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRClassroom_Announcement.assigneeMode

/**
 *  All students can see the item.
 *  This is the default state.
 *
 *  Value: "ALL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_AssigneeMode_AllStudents;
/**
 *  No mode specified. This is never returned.
 *
 *  Value: "ASSIGNEE_MODE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_AssigneeMode_AssigneeModeUnspecified;
/**
 *  A subset of the students can see the item.
 *
 *  Value: "INDIVIDUAL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_AssigneeMode_IndividualStudents;

// ----------------------------------------------------------------------------
// GTLRClassroom_Announcement.state

/**
 *  No state specified. This is never returned.
 *
 *  Value: "ANNOUNCEMENT_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_State_AnnouncementStateUnspecified;
/**
 *  Status for announcement that was published but is now deleted.
 *  Announcement in this state is visible only to course teachers and domain
 *  administrators.
 *  Announcement in this state is deleted after some time.
 *
 *  Value: "DELETED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_State_Deleted;
/**
 *  Status for an announcement that is not yet published.
 *  Announcement in this state is visible only to course teachers and domain
 *  administrators.
 *
 *  Value: "DRAFT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_State_Draft;
/**
 *  Status for announcement that has been published.
 *  This is the default state.
 *
 *  Value: "PUBLISHED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Announcement_State_Published;

// ----------------------------------------------------------------------------
// GTLRClassroom_Course.courseState

/**
 *  The course is active.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_Active;
/**
 *  The course has been archived. You cannot modify it except to change it
 *  to a different state.
 *
 *  Value: "ARCHIVED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_Archived;
/**
 *  No course state. No returned Course message will use this value.
 *
 *  Value: "COURSE_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_CourseStateUnspecified;
/**
 *  The course has been created, but declined. It is accessible by the
 *  course owner and domain administrators, though it will not be
 *  displayed in the web UI. You cannot modify the course except to change it
 *  to the `PROVISIONED` state.
 *  A course may only be changed to `DECLINED` if it is in the `PROVISIONED`
 *  state.
 *
 *  Value: "DECLINED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_Declined;
/**
 *  The course has been created, but not yet activated. It is accessible by
 *  the primary teacher and domain administrators, who may modify it or
 *  change it to the `ACTIVE` or `DECLINED` states.
 *  A course may only be changed to `PROVISIONED` if it is in the `DECLINED`
 *  state.
 *
 *  Value: "PROVISIONED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_Provisioned;
/**
 *  The course has been suspended. You cannot modify the course, and only the
 *  user identified by the `owner_id` can view the course.
 *  A course may be placed in this state if it potentially violates the
 *  Terms of Service.
 *
 *  Value: "SUSPENDED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Course_CourseState_Suspended;

// ----------------------------------------------------------------------------
// GTLRClassroom_CourseWork.assigneeMode

/**
 *  All students can see the item.
 *  This is the default state.
 *
 *  Value: "ALL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_AssigneeMode_AllStudents;
/**
 *  No mode specified. This is never returned.
 *
 *  Value: "ASSIGNEE_MODE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_AssigneeMode_AssigneeModeUnspecified;
/**
 *  A subset of the students can see the item.
 *
 *  Value: "INDIVIDUAL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_AssigneeMode_IndividualStudents;

// ----------------------------------------------------------------------------
// GTLRClassroom_CourseWork.state

/**
 *  No state specified. This is never returned.
 *
 *  Value: "COURSE_WORK_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_State_CourseWorkStateUnspecified;
/**
 *  Status for work that was published but is now deleted.
 *  Work in this state is visible only to course teachers and domain
 *  administrators.
 *  Work in this state is deleted after some time.
 *
 *  Value: "DELETED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_State_Deleted;
/**
 *  Status for work that is not yet published.
 *  Work in this state is visible only to course teachers and domain
 *  administrators.
 *
 *  Value: "DRAFT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_State_Draft;
/**
 *  Status for work that has been published.
 *  This is the default state.
 *
 *  Value: "PUBLISHED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_State_Published;

// ----------------------------------------------------------------------------
// GTLRClassroom_CourseWork.submissionModificationMode

/**
 *  Submissions can be modified at any time.
 *
 *  Value: "MODIFIABLE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_SubmissionModificationMode_Modifiable;
/**
 *  Submissions can be modified before being turned in.
 *
 *  Value: "MODIFIABLE_UNTIL_TURNED_IN"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_SubmissionModificationMode_ModifiableUntilTurnedIn;
/**
 *  No modification mode specified. This is never returned.
 *
 *  Value: "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_SubmissionModificationMode_SubmissionModificationModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRClassroom_CourseWork.workType

/**
 *  An assignment.
 *
 *  Value: "ASSIGNMENT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_WorkType_Assignment;
/**
 *  No work type specified. This is never returned.
 *
 *  Value: "COURSE_WORK_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_WorkType_CourseWorkTypeUnspecified;
/**
 *  A multiple-choice question.
 *
 *  Value: "MULTIPLE_CHOICE_QUESTION"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_WorkType_MultipleChoiceQuestion;
/**
 *  A short answer question.
 *
 *  Value: "SHORT_ANSWER_QUESTION"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_CourseWork_WorkType_ShortAnswerQuestion;

// ----------------------------------------------------------------------------
// GTLRClassroom_Feed.feedType

/**
 *  All roster changes for a particular course.
 *  Notifications will be generated whenever a user joins or leaves a course.
 *  No notifications will be generated when an invitation is created or
 *  deleted, but notifications will be generated when a user joins a course
 *  by accepting an invitation.
 *
 *  Value: "COURSE_ROSTER_CHANGES"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Feed_FeedType_CourseRosterChanges;
/**
 *  All course work activity for a particular course.
 *  Notifications will be generated when a CourseWork or
 *  StudentSubmission object is created or modified. No notification will be
 *  generated when a StudentSubmission object is created in connection with
 *  the creation or modification of its parent CourseWork object (but a
 *  notification will be generated for that CourseWork object's creation or
 *  modification).
 *
 *  Value: "COURSE_WORK_CHANGES"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Feed_FeedType_CourseWorkChanges;
/**
 *  All roster changes for a particular domain.
 *  Notifications will be generated whenever a user joins or leaves a course.
 *  No notifications will be generated when an invitation is created or
 *  deleted, but notifications will be generated when a user joins a course
 *  by accepting an invitation.
 *
 *  Value: "DOMAIN_ROSTER_CHANGES"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Feed_FeedType_DomainRosterChanges;
/**
 *  Should never be returned or provided.
 *
 *  Value: "FEED_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Feed_FeedType_FeedTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRClassroom_GlobalPermission.permission

/**
 *  User is permitted to create a course.
 *
 *  Value: "CREATE_COURSE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GlobalPermission_Permission_CreateCourse;
/**
 *  No permission is specified. This is not returned and is not a
 *  valid value.
 *
 *  Value: "PERMISSION_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GlobalPermission_Permission_PermissionUnspecified;

// ----------------------------------------------------------------------------
// GTLRClassroom_GradeHistory.gradeChangeType

/**
 *  A change in the numerator of the assigned grade.
 *
 *  Value: "ASSIGNED_GRADE_POINTS_EARNED_CHANGE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GradeHistory_GradeChangeType_AssignedGradePointsEarnedChange;
/**
 *  A change in the numerator of the draft grade.
 *
 *  Value: "DRAFT_GRADE_POINTS_EARNED_CHANGE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GradeHistory_GradeChangeType_DraftGradePointsEarnedChange;
/**
 *  A change in the denominator of the grade.
 *
 *  Value: "MAX_POINTS_CHANGE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GradeHistory_GradeChangeType_MaxPointsChange;
/**
 *  No grade change type specified. This should never be returned.
 *
 *  Value: "UNKNOWN_GRADE_CHANGE_TYPE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GradeHistory_GradeChangeType_UnknownGradeChangeType;

// ----------------------------------------------------------------------------
// GTLRClassroom_GuardianInvitation.state

/**
 *  The invitation is no longer active. It may have been accepted, declined,
 *  withdrawn or it may have expired.
 *
 *  Value: "COMPLETE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GuardianInvitation_State_Complete;
/**
 *  Should never be returned.
 *
 *  Value: "GUARDIAN_INVITATION_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GuardianInvitation_State_GuardianInvitationStateUnspecified;
/**
 *  The invitation is active and awaiting a response.
 *
 *  Value: "PENDING"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_GuardianInvitation_State_Pending;

// ----------------------------------------------------------------------------
// GTLRClassroom_Invitation.role

/**
 *  No course role.
 *
 *  Value: "COURSE_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Invitation_Role_CourseRoleUnspecified;
/**
 *  Owner of the course.
 *
 *  Value: "OWNER"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Invitation_Role_Owner;
/**
 *  Student in the course.
 *
 *  Value: "STUDENT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Invitation_Role_Student;
/**
 *  Teacher of the course.
 *
 *  Value: "TEACHER"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_Invitation_Role_Teacher;

// ----------------------------------------------------------------------------
// GTLRClassroom_ModifyAnnouncementAssigneesRequest.assigneeMode

/**
 *  All students can see the item.
 *  This is the default state.
 *
 *  Value: "ALL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_AllStudents;
/**
 *  No mode specified. This is never returned.
 *
 *  Value: "ASSIGNEE_MODE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_AssigneeModeUnspecified;
/**
 *  A subset of the students can see the item.
 *
 *  Value: "INDIVIDUAL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_IndividualStudents;

// ----------------------------------------------------------------------------
// GTLRClassroom_ModifyCourseWorkAssigneesRequest.assigneeMode

/**
 *  All students can see the item.
 *  This is the default state.
 *
 *  Value: "ALL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_AllStudents;
/**
 *  No mode specified. This is never returned.
 *
 *  Value: "ASSIGNEE_MODE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_AssigneeModeUnspecified;
/**
 *  A subset of the students can see the item.
 *
 *  Value: "INDIVIDUAL_STUDENTS"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_IndividualStudents;

// ----------------------------------------------------------------------------
// GTLRClassroom_SharedDriveFile.shareMode

/**
 *  Students can edit the shared file.
 *
 *  Value: "EDIT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_SharedDriveFile_ShareMode_Edit;
/**
 *  Students have a personal copy of the shared file.
 *
 *  Value: "STUDENT_COPY"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_SharedDriveFile_ShareMode_StudentCopy;
/**
 *  No sharing mode specified. This should never be returned.
 *
 *  Value: "UNKNOWN_SHARE_MODE"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_SharedDriveFile_ShareMode_UnknownShareMode;
/**
 *  Students can view the shared file.
 *
 *  Value: "VIEW"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_SharedDriveFile_ShareMode_View;

// ----------------------------------------------------------------------------
// GTLRClassroom_StateHistory.state

/**
 *  The Submission has been created.
 *
 *  Value: "CREATED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_Created;
/**
 *  The student turned in the assigned document, and then chose to
 *  "unsubmit" the assignment, giving the student control again as the
 *  owner.
 *
 *  Value: "RECLAIMED_BY_STUDENT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_ReclaimedByStudent;
/**
 *  The teacher has returned the assigned document to the student.
 *
 *  Value: "RETURNED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_Returned;
/**
 *  No state specified. This should never be returned.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_StateUnspecified;
/**
 *  The student edited their submission after turning it in. Currently,
 *  only used by Questions, when the student edits their answer.
 *
 *  Value: "STUDENT_EDITED_AFTER_TURN_IN"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_StudentEditedAfterTurnIn;
/**
 *  The student has turned in an assigned document, which may or may not be
 *  a template.
 *
 *  Value: "TURNED_IN"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StateHistory_State_TurnedIn;

// ----------------------------------------------------------------------------
// GTLRClassroom_StudentSubmission.courseWorkType

/**
 *  An assignment.
 *
 *  Value: "ASSIGNMENT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_CourseWorkType_Assignment;
/**
 *  No work type specified. This is never returned.
 *
 *  Value: "COURSE_WORK_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_CourseWorkType_CourseWorkTypeUnspecified;
/**
 *  A multiple-choice question.
 *
 *  Value: "MULTIPLE_CHOICE_QUESTION"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_CourseWorkType_MultipleChoiceQuestion;
/**
 *  A short answer question.
 *
 *  Value: "SHORT_ANSWER_QUESTION"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_CourseWorkType_ShortAnswerQuestion;

// ----------------------------------------------------------------------------
// GTLRClassroom_StudentSubmission.state

/**
 *  Has been created.
 *
 *  Value: "CREATED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_Created;
/**
 *  The student has never accessed this submission. Attachments are not
 *  returned and timestamps is not set.
 *
 *  Value: "NEW"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_New;
/**
 *  Student chose to "unsubmit" the assignment.
 *
 *  Value: "RECLAIMED_BY_STUDENT"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_ReclaimedByStudent;
/**
 *  Has been returned to the student.
 *
 *  Value: "RETURNED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_Returned;
/**
 *  No state specified. This should never be returned.
 *
 *  Value: "SUBMISSION_STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_SubmissionStateUnspecified;
/**
 *  Has been turned in to the teacher.
 *
 *  Value: "TURNED_IN"
 */
GTLR_EXTERN NSString * const kGTLRClassroom_StudentSubmission_State_TurnedIn;

/**
 *  Announcement created by a teacher for students of the course
 */
@interface GTLRClassroom_Announcement : GTLRObject

/**
 *  Absolute link to this announcement in the Classroom web UI.
 *  This is only populated if `state` is `PUBLISHED`.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  Assignee mode of the announcement.
 *  If unspecified, the default value is `ALL_STUDENTS`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_Announcement_AssigneeMode_AllStudents All students
 *        can see the item.
 *        This is the default state. (Value: "ALL_STUDENTS")
 *    @arg @c kGTLRClassroom_Announcement_AssigneeMode_AssigneeModeUnspecified
 *        No mode specified. This is never returned. (Value:
 *        "ASSIGNEE_MODE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_Announcement_AssigneeMode_IndividualStudents A
 *        subset of the students can see the item. (Value:
 *        "INDIVIDUAL_STUDENTS")
 */
@property(nonatomic, copy, nullable) NSString *assigneeMode;

/**
 *  Identifier of the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Timestamp when this announcement was created.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Identifier for the user that created the announcement.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *creatorUserId;

/**
 *  Classroom-assigned identifier of this announcement, unique per course.
 *  Read-only.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifiers of students with access to the announcement.
 *  This field is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
 *  If the `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students specified
 *  in this
 *  field will be able to see the announcement.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_IndividualStudentsOptions *individualStudentsOptions;

/**
 *  Additional materials.
 *  Announcements must have no more than 20 material items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Material *> *materials;

/** Optional timestamp when this announcement is scheduled to be published. */
@property(nonatomic, strong, nullable) GTLRDateTime *scheduledTime;

/**
 *  Status of this announcement.
 *  If unspecified, the default state is `DRAFT`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_Announcement_State_AnnouncementStateUnspecified No
 *        state specified. This is never returned. (Value:
 *        "ANNOUNCEMENT_STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_Announcement_State_Deleted Status for announcement
 *        that was published but is now deleted.
 *        Announcement in this state is visible only to course teachers and
 *        domain
 *        administrators.
 *        Announcement in this state is deleted after some time. (Value:
 *        "DELETED")
 *    @arg @c kGTLRClassroom_Announcement_State_Draft Status for an announcement
 *        that is not yet published.
 *        Announcement in this state is visible only to course teachers and
 *        domain
 *        administrators. (Value: "DRAFT")
 *    @arg @c kGTLRClassroom_Announcement_State_Published Status for
 *        announcement that has been published.
 *        This is the default state. (Value: "PUBLISHED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Description of this announcement.
 *  The text must be a valid UTF-8 string containing no more
 *  than 30,000 characters.
 */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  Timestamp of the most recent change to this announcement.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Additional details for assignments.
 */
@interface GTLRClassroom_Assignment : GTLRObject

/**
 *  Drive folder where attachments from student submissions are placed.
 *  This is only populated for course teachers and administrators.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFolder *studentWorkFolder;

@end


/**
 *  Student work for an assignment.
 */
@interface GTLRClassroom_AssignmentSubmission : GTLRObject

/**
 *  Attachments added by the student.
 *  Drive files that correspond to materials with a share mode of
 *  STUDENT_COPY may not exist yet if the student has not accessed the
 *  assignment in Classroom.
 *  Some attachment metadata is only populated if the requesting user has
 *  permission to access it. Identifier and alternate_link fields are always
 *  available, but others (e.g. title) may not be.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Attachment *> *attachments;

@end


/**
 *  Attachment added to student assignment work.
 *  When creating attachments, setting the `form` field is not supported.
 */
@interface GTLRClassroom_Attachment : GTLRObject

/** Google Drive file attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFile *driveFile;

/** Google Forms attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_Form *form;

/** Link attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_Link *link;

/** Youtube video attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_YouTubeVideo *youTubeVideo;

@end


/**
 *  A reference to a Cloud Pub/Sub topic.
 *  To register for notifications, the owner of the topic must grant
 *  `classroom-notifications\@system.gserviceaccount.com` the
 *  `projects.topics.publish` permission.
 */
@interface GTLRClassroom_CloudPubsubTopic : GTLRObject

/**
 *  The `name` field of a Cloud Pub/Sub
 *  [Topic](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
 */
@property(nonatomic, copy, nullable) NSString *topicName;

@end


/**
 *  A Course in Classroom.
 */
@interface GTLRClassroom_Course : GTLRObject

/**
 *  Absolute link to this course in the Classroom web UI.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  The Calendar ID for a calendar that all course members can see, to which
 *  Classroom adds events for course work and announcements in the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *calendarId;

/**
 *  The email address of a Google group containing all members of the course.
 *  This group does not accept email and can only be used for permissions.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseGroupEmail;

/**
 *  Sets of materials that appear on the "about" page of this course.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_CourseMaterialSet *> *courseMaterialSets;

/**
 *  State of the course.
 *  If unspecified, the default state is `PROVISIONED`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_Course_CourseState_Active The course is active.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRClassroom_Course_CourseState_Archived The course has been
 *        archived. You cannot modify it except to change it
 *        to a different state. (Value: "ARCHIVED")
 *    @arg @c kGTLRClassroom_Course_CourseState_CourseStateUnspecified No course
 *        state. No returned Course message will use this value. (Value:
 *        "COURSE_STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_Course_CourseState_Declined The course has been
 *        created, but declined. It is accessible by the
 *        course owner and domain administrators, though it will not be
 *        displayed in the web UI. You cannot modify the course except to change
 *        it
 *        to the `PROVISIONED` state.
 *        A course may only be changed to `DECLINED` if it is in the
 *        `PROVISIONED`
 *        state. (Value: "DECLINED")
 *    @arg @c kGTLRClassroom_Course_CourseState_Provisioned The course has been
 *        created, but not yet activated. It is accessible by
 *        the primary teacher and domain administrators, who may modify it or
 *        change it to the `ACTIVE` or `DECLINED` states.
 *        A course may only be changed to `PROVISIONED` if it is in the
 *        `DECLINED`
 *        state. (Value: "PROVISIONED")
 *    @arg @c kGTLRClassroom_Course_CourseState_Suspended The course has been
 *        suspended. You cannot modify the course, and only the
 *        user identified by the `owner_id` can view the course.
 *        A course may be placed in this state if it potentially violates the
 *        Terms of Service. (Value: "SUSPENDED")
 */
@property(nonatomic, copy, nullable) NSString *courseState;

/**
 *  Creation time of the course.
 *  Specifying this field in a course update mask results in an error.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Optional description.
 *  For example, "We'll be learning about the structure of living
 *  creatures from a combination of textbooks, guest lectures, and lab work.
 *  Expect to be excited!"
 *  If set, this field must be a valid UTF-8 string and no longer than 30,000
 *  characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional heading for the description.
 *  For example, "Welcome to 10th Grade Biology."
 *  If set, this field must be a valid UTF-8 string and no longer than 3600
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *descriptionHeading;

/**
 *  Enrollment code to use when joining this course.
 *  Specifying this field in a course update mask results in an error.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *enrollmentCode;

/**
 *  Whether or not guardian notifications are enabled for this course.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guardiansEnabled;

/**
 *  Identifier for this course assigned by Classroom.
 *  When
 *  creating a course,
 *  you may optionally set this identifier to an
 *  alias string in the
 *  request to create a corresponding alias. The `id` is still assigned by
 *  Classroom and cannot be updated after the course is created.
 *  Specifying this field in a course update mask results in an error.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Name of the course.
 *  For example, "10th Grade Biology".
 *  The name is required. It must be between 1 and 750 characters and a valid
 *  UTF-8 string.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The identifier of the owner of a course.
 *  When specified as a parameter of a
 *  create course request, this
 *  field is required.
 *  The identifier can be one of the following:
 *  * the numeric identifier for the user
 *  * the email address of the user
 *  * the string literal `"me"`, indicating the requesting user
 *  This must be set in a create request. Admins can also specify this field
 *  in a patch course request to
 *  transfer ownership. In other contexts, it is read-only.
 */
@property(nonatomic, copy, nullable) NSString *ownerId;

/**
 *  Optional room location.
 *  For example, "301".
 *  If set, this field must be a valid UTF-8 string and no longer than 650
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *room;

/**
 *  Section of the course.
 *  For example, "Period 2".
 *  If set, this field must be a valid UTF-8 string and no longer than 2800
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *section;

/**
 *  Information about a Drive Folder that is shared with all teachers of the
 *  course.
 *  This field will only be set for teachers of the course and domain
 *  administrators.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFolder *teacherFolder;

/**
 *  The email address of a Google group containing all teachers of the course.
 *  This group does not accept email and can only be used for permissions.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *teacherGroupEmail;

/**
 *  Time of the most recent update to this course.
 *  Specifying this field in a course update mask results in an error.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Alternative identifier for a course.
 *  An alias uniquely identifies a course. It must be unique within one of the
 *  following scopes:
 *  * domain: A domain-scoped alias is visible to all users within the alias
 *  creator's domain and can be created only by a domain admin. A domain-scoped
 *  alias is often used when a course has an identifier external to Classroom.
 *  * project: A project-scoped alias is visible to any request from an
 *  application using the Developer Console project ID that created the alias
 *  and can be created by any project. A project-scoped alias is often used when
 *  an application has alternative identifiers. A random value can also be used
 *  to avoid duplicate courses in the event of transmission failures, as
 *  retrying
 *  a request will return `ALREADY_EXISTS` if a previous one has succeeded.
 */
@interface GTLRClassroom_CourseAlias : GTLRObject

/**
 *  Alias string. The format of the string indicates the desired alias scoping.
 *  * `d:<name>` indicates a domain-scoped alias.
 *  Example: `d:math_101`
 *  * `p:<name>` indicates a project-scoped alias.
 *  Example: `p:abc123`
 *  This field has a maximum length of 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *alias;

@end


/**
 *  A material attached to a course as part of a material set.
 */
@interface GTLRClassroom_CourseMaterial : GTLRObject

/** Google Drive file attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFile *driveFile;

/** Google Forms attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_Form *form;

/** Link atatchment. */
@property(nonatomic, strong, nullable) GTLRClassroom_Link *link;

/** Youtube video attachment. */
@property(nonatomic, strong, nullable) GTLRClassroom_YouTubeVideo *youTubeVideo;

@end


/**
 *  A set of materials that appears on the "About" page of the course.
 *  These materials might include a syllabus, schedule, or other background
 *  information relating to the course as a whole.
 */
@interface GTLRClassroom_CourseMaterialSet : GTLRObject

/** Materials attached to this set. */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_CourseMaterial *> *materials;

/** Title for this set. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Information about a `Feed` with a `feed_type` of `COURSE_ROSTER_CHANGES`.
 */
@interface GTLRClassroom_CourseRosterChangesInfo : GTLRObject

/** The `course_id` of the course to subscribe to roster changes for. */
@property(nonatomic, copy, nullable) NSString *courseId;

@end


/**
 *  Course work created by a teacher for students of the course.
 */
@interface GTLRClassroom_CourseWork : GTLRObject

/**
 *  Absolute link to this course work in the Classroom web UI.
 *  This is only populated if `state` is `PUBLISHED`.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  Assignee mode of the coursework.
 *  If unspecified, the default value is `ALL_STUDENTS`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_CourseWork_AssigneeMode_AllStudents All students
 *        can see the item.
 *        This is the default state. (Value: "ALL_STUDENTS")
 *    @arg @c kGTLRClassroom_CourseWork_AssigneeMode_AssigneeModeUnspecified No
 *        mode specified. This is never returned. (Value:
 *        "ASSIGNEE_MODE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_CourseWork_AssigneeMode_IndividualStudents A subset
 *        of the students can see the item. (Value: "INDIVIDUAL_STUDENTS")
 */
@property(nonatomic, copy, nullable) NSString *assigneeMode;

/**
 *  Assignment details.
 *  This is populated only when `work_type` is `ASSIGNMENT`.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_Assignment *assignment;

/**
 *  Whether this course work item is associated with the Developer Console
 *  project making the request.
 *  See google.classroom.Work.CreateCourseWork for more
 *  details.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *associatedWithDeveloper;

/**
 *  Identifier of the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Timestamp when this course work was created.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Identifier for the user that created the coursework.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *creatorUserId;

/**
 *  Optional description of this course work.
 *  If set, the description must be a valid UTF-8 string containing no more
 *  than 30,000 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional date, in UTC, that submissions for this course work are due.
 *  This must be specified if `due_time` is specified.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_Date *dueDate;

/**
 *  Optional time of day, in UTC, that submissions for this course work
 *  are due.
 *  This must be specified if `due_date` is specified.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_TimeOfDay *dueTime;

/**
 *  Classroom-assigned identifier of this course work, unique per course.
 *  Read-only.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifiers of students with access to the coursework.
 *  This field is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
 *  If the `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students
 *  specified in this field will be assigned the coursework.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_IndividualStudentsOptions *individualStudentsOptions;

/**
 *  Additional materials.
 *  CourseWork must have no more than 20 material items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Material *> *materials;

/**
 *  Maximum grade for this course work.
 *  If zero or unspecified, this assignment is considered ungraded.
 *  This must be a non-negative integer value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPoints;

/**
 *  Multiple choice question details.
 *  For read operations, this field is populated only when `work_type` is
 *  `MULTIPLE_CHOICE_QUESTION`.
 *  For write operations, this field must be specified when creating course
 *  work with a `work_type` of `MULTIPLE_CHOICE_QUESTION`, and it must not be
 *  set otherwise.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_MultipleChoiceQuestion *multipleChoiceQuestion;

/** Optional timestamp when this course work is scheduled to be published. */
@property(nonatomic, strong, nullable) GTLRDateTime *scheduledTime;

/**
 *  Status of this course work.
 *  If unspecified, the default state is `DRAFT`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_CourseWork_State_CourseWorkStateUnspecified No
 *        state specified. This is never returned. (Value:
 *        "COURSE_WORK_STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_CourseWork_State_Deleted Status for work that was
 *        published but is now deleted.
 *        Work in this state is visible only to course teachers and domain
 *        administrators.
 *        Work in this state is deleted after some time. (Value: "DELETED")
 *    @arg @c kGTLRClassroom_CourseWork_State_Draft Status for work that is not
 *        yet published.
 *        Work in this state is visible only to course teachers and domain
 *        administrators. (Value: "DRAFT")
 *    @arg @c kGTLRClassroom_CourseWork_State_Published Status for work that has
 *        been published.
 *        This is the default state. (Value: "PUBLISHED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Setting to determine when students are allowed to modify submissions.
 *  If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_CourseWork_SubmissionModificationMode_Modifiable
 *        Submissions can be modified at any time. (Value: "MODIFIABLE")
 *    @arg @c kGTLRClassroom_CourseWork_SubmissionModificationMode_ModifiableUntilTurnedIn
 *        Submissions can be modified before being turned in. (Value:
 *        "MODIFIABLE_UNTIL_TURNED_IN")
 *    @arg @c kGTLRClassroom_CourseWork_SubmissionModificationMode_SubmissionModificationModeUnspecified
 *        No modification mode specified. This is never returned. (Value:
 *        "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *submissionModificationMode;

/**
 *  Title of this course work.
 *  The title must be a valid UTF-8 string containing between 1 and 3000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Timestamp of the most recent change to this course work.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Type of this course work.
 *  The type is set when the course work is created and cannot be changed.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_CourseWork_WorkType_Assignment An assignment.
 *        (Value: "ASSIGNMENT")
 *    @arg @c kGTLRClassroom_CourseWork_WorkType_CourseWorkTypeUnspecified No
 *        work type specified. This is never returned. (Value:
 *        "COURSE_WORK_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_CourseWork_WorkType_MultipleChoiceQuestion A
 *        multiple-choice question. (Value: "MULTIPLE_CHOICE_QUESTION")
 *    @arg @c kGTLRClassroom_CourseWork_WorkType_ShortAnswerQuestion A short
 *        answer question. (Value: "SHORT_ANSWER_QUESTION")
 */
@property(nonatomic, copy, nullable) NSString *workType;

@end


/**
 *  Information about a `Feed` with a `feed_type` of `COURSE_WORK_CHANGES`.
 */
@interface GTLRClassroom_CourseWorkChangesInfo : GTLRObject

/** The `course_id` of the course to subscribe to work changes for. */
@property(nonatomic, copy, nullable) NSString *courseId;

@end


/**
 *  Represents a whole or partial calendar date, e.g. a birthday. The time of
 *  day
 *  and time zone are either specified elsewhere or are not significant. The
 *  date
 *  is relative to the Proleptic Gregorian Calendar. This can represent:
 *  * A full date, with non-zero year, month and day values
 *  * A month and day value, with a zero year, e.g. an anniversary
 *  * A year on its own, with zero month and day values
 *  * A year and month value, with a zero day, e.g. a credit card expiration
 *  date
 *  Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
 */
@interface GTLRClassroom_Date : GTLRObject

/**
 *  Day of month. Must be from 1 to 31 and valid for the year and month, or 0
 *  if specifying a year by itself or a year and month where the day is not
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of year. Must be from 1 to 12, or 0 if specifying a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of date. Must be from 1 to 9999, or 0 if specifying a date without
 *  a year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Representation of a Google Drive file.
 */
@interface GTLRClassroom_DriveFile : GTLRObject

/**
 *  URL that can be used to access the Drive item.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  Drive API resource ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  URL of a thumbnail image of the Drive item.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailUrl;

/**
 *  Title of the Drive item.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Representation of a Google Drive folder.
 */
@interface GTLRClassroom_DriveFolder : GTLRObject

/**
 *  URL that can be used to access the Drive folder.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  Drive API resource ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Title of the Drive folder.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRClassroom_Empty : GTLRObject
@end


/**
 *  A class of notifications that an application can register to receive.
 *  For example: "all roster changes for a domain".
 */
@interface GTLRClassroom_Feed : GTLRObject

/**
 *  Information about a `Feed` with a `feed_type` of `COURSE_ROSTER_CHANGES`.
 *  This field must be specified if `feed_type` is `COURSE_ROSTER_CHANGES`.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_CourseRosterChangesInfo *courseRosterChangesInfo;

/**
 *  Information about a `Feed` with a `feed_type` of `COURSE_WORK_CHANGES`.
 *  This field must be specified if `feed_type` is `COURSE_WORK_CHANGES`.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_CourseWorkChangesInfo *courseWorkChangesInfo;

/**
 *  The type of feed.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_Feed_FeedType_CourseRosterChanges All roster
 *        changes for a particular course.
 *        Notifications will be generated whenever a user joins or leaves a
 *        course.
 *        No notifications will be generated when an invitation is created or
 *        deleted, but notifications will be generated when a user joins a
 *        course
 *        by accepting an invitation. (Value: "COURSE_ROSTER_CHANGES")
 *    @arg @c kGTLRClassroom_Feed_FeedType_CourseWorkChanges All course work
 *        activity for a particular course.
 *        Notifications will be generated when a CourseWork or
 *        StudentSubmission object is created or modified. No notification will
 *        be
 *        generated when a StudentSubmission object is created in connection
 *        with
 *        the creation or modification of its parent CourseWork object (but a
 *        notification will be generated for that CourseWork object's creation
 *        or
 *        modification). (Value: "COURSE_WORK_CHANGES")
 *    @arg @c kGTLRClassroom_Feed_FeedType_DomainRosterChanges All roster
 *        changes for a particular domain.
 *        Notifications will be generated whenever a user joins or leaves a
 *        course.
 *        No notifications will be generated when an invitation is created or
 *        deleted, but notifications will be generated when a user joins a
 *        course
 *        by accepting an invitation. (Value: "DOMAIN_ROSTER_CHANGES")
 *    @arg @c kGTLRClassroom_Feed_FeedType_FeedTypeUnspecified Should never be
 *        returned or provided. (Value: "FEED_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *feedType;

@end


/**
 *  Google Forms item.
 */
@interface GTLRClassroom_Form : GTLRObject

/** URL of the form. */
@property(nonatomic, copy, nullable) NSString *formUrl;

/**
 *  URL of the form responses document.
 *  Only set if respsonses have been recorded and only when the
 *  requesting user is an editor of the form.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *responseUrl;

/**
 *  URL of a thumbnail image of the Form.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailUrl;

/**
 *  Title of the Form.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Global user permission description.
 */
@interface GTLRClassroom_GlobalPermission : GTLRObject

/**
 *  Permission value.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_GlobalPermission_Permission_CreateCourse User is
 *        permitted to create a course. (Value: "CREATE_COURSE")
 *    @arg @c kGTLRClassroom_GlobalPermission_Permission_PermissionUnspecified
 *        No permission is specified. This is not returned and is not a
 *        valid value. (Value: "PERMISSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *permission;

@end


/**
 *  The history of each grade on this submission.
 */
@interface GTLRClassroom_GradeHistory : GTLRObject

/** The teacher who made the grade change. */
@property(nonatomic, copy, nullable) NSString *actorUserId;

/**
 *  The type of grade change at this time in the submission grade history.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_GradeHistory_GradeChangeType_AssignedGradePointsEarnedChange
 *        A change in the numerator of the assigned grade. (Value:
 *        "ASSIGNED_GRADE_POINTS_EARNED_CHANGE")
 *    @arg @c kGTLRClassroom_GradeHistory_GradeChangeType_DraftGradePointsEarnedChange
 *        A change in the numerator of the draft grade. (Value:
 *        "DRAFT_GRADE_POINTS_EARNED_CHANGE")
 *    @arg @c kGTLRClassroom_GradeHistory_GradeChangeType_MaxPointsChange A
 *        change in the denominator of the grade. (Value: "MAX_POINTS_CHANGE")
 *    @arg @c kGTLRClassroom_GradeHistory_GradeChangeType_UnknownGradeChangeType
 *        No grade change type specified. This should never be returned. (Value:
 *        "UNKNOWN_GRADE_CHANGE_TYPE")
 */
@property(nonatomic, copy, nullable) NSString *gradeChangeType;

/** When the grade of the submission was changed. */
@property(nonatomic, strong, nullable) GTLRDateTime *gradeTimestamp;

/**
 *  The denominator of the grade at this time in the submission grade
 *  history.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPoints;

/**
 *  The numerator of the grade at this time in the submission grade history.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pointsEarned;

@end


/**
 *  Association between a student and a guardian of that student. The guardian
 *  may receive information about the student's course work.
 */
@interface GTLRClassroom_Guardian : GTLRObject

/** Identifier for the guardian. */
@property(nonatomic, copy, nullable) NSString *guardianId;

/** User profile for the guardian. */
@property(nonatomic, strong, nullable) GTLRClassroom_UserProfile *guardianProfile;

/**
 *  The email address to which the initial guardian invitation was sent.
 *  This field is only visible to domain administrators.
 */
@property(nonatomic, copy, nullable) NSString *invitedEmailAddress;

/** Identifier for the student to whom the guardian relationship applies. */
@property(nonatomic, copy, nullable) NSString *studentId;

@end


/**
 *  An invitation to become the guardian of a specified user, sent to a
 *  specified
 *  email address.
 */
@interface GTLRClassroom_GuardianInvitation : GTLRObject

/**
 *  The time that this invitation was created.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Unique identifier for this invitation.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *invitationId;

/**
 *  Email address that the invitation was sent to.
 *  This field is only visible to domain administrators.
 */
@property(nonatomic, copy, nullable) NSString *invitedEmailAddress;

/**
 *  The state that this invitation is in.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_GuardianInvitation_State_Complete The invitation is
 *        no longer active. It may have been accepted, declined,
 *        withdrawn or it may have expired. (Value: "COMPLETE")
 *    @arg @c kGTLRClassroom_GuardianInvitation_State_GuardianInvitationStateUnspecified
 *        Should never be returned. (Value:
 *        "GUARDIAN_INVITATION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_GuardianInvitation_State_Pending The invitation is
 *        active and awaiting a response. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** ID of the student (in standard format) */
@property(nonatomic, copy, nullable) NSString *studentId;

@end


/**
 *  Assignee details about a coursework/announcement.
 *  This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
 */
@interface GTLRClassroom_IndividualStudentsOptions : GTLRObject

/**
 *  Identifiers for the students that have access to the
 *  coursework/announcement.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *studentIds;

@end


/**
 *  An invitation to join a course.
 */
@interface GTLRClassroom_Invitation : GTLRObject

/** Identifier of the course to invite the user to. */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Identifier assigned by Classroom.
 *  Read-only.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Role to invite the user to have.
 *  Must not be `COURSE_ROLE_UNSPECIFIED`.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_Invitation_Role_CourseRoleUnspecified No course
 *        role. (Value: "COURSE_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_Invitation_Role_Owner Owner of the course. (Value:
 *        "OWNER")
 *    @arg @c kGTLRClassroom_Invitation_Role_Student Student in the course.
 *        (Value: "STUDENT")
 *    @arg @c kGTLRClassroom_Invitation_Role_Teacher Teacher of the course.
 *        (Value: "TEACHER")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  Identifier of the invited user.
 *  When specified as a parameter of a request, this identifier can be set to
 *  one of the following:
 *  * the numeric identifier for the user
 *  * the email address of the user
 *  * the string literal `"me"`, indicating the requesting user
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  URL item.
 */
@interface GTLRClassroom_Link : GTLRObject

/**
 *  URL of a thumbnail image of the target URL.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailUrl;

/**
 *  Title of the target of the URL.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  URL to link to.
 *  This must be a valid UTF-8 string containing between 1 and 2024 characters.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Response when listing course work.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "announcements" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListAnnouncementsResponse : GTLRCollectionObject

/**
 *  Announcement items that match the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Announcement *> *announcements;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing course aliases.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "aliases" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListCourseAliasesResponse : GTLRCollectionObject

/**
 *  The course aliases.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_CourseAlias *> *aliases;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing courses.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "courses" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListCoursesResponse : GTLRCollectionObject

/**
 *  Courses that match the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Course *> *courses;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing course work.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "courseWork" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListCourseWorkResponse : GTLRCollectionObject

/**
 *  Course work items that match the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_CourseWork *> *courseWork;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing guardian invitations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "guardianInvitations" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRClassroom_ListGuardianInvitationsResponse : GTLRCollectionObject

/**
 *  Guardian invitations that matched the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_GuardianInvitation *> *guardianInvitations;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing guardians.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "guardians" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListGuardiansResponse : GTLRCollectionObject

/**
 *  Guardians on this page of results that met the criteria specified in
 *  the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Guardian *> *guardians;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing invitations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "invitations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListInvitationsResponse : GTLRCollectionObject

/**
 *  Invitations that match the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Invitation *> *invitations;

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response when listing students.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "students" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListStudentsResponse : GTLRCollectionObject

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Students who match the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Student *> *students;

@end


/**
 *  Response when listing student submissions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "studentSubmissions" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRClassroom_ListStudentSubmissionsResponse : GTLRCollectionObject

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Student work that matches the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_StudentSubmission *> *studentSubmissions;

@end


/**
 *  Response when listing teachers.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "teachers" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRClassroom_ListTeachersResponse : GTLRCollectionObject

/**
 *  Token identifying the next page of results to return. If empty, no further
 *  results are available.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Teachers who match the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Teacher *> *teachers;

@end


/**
 *  Material attached to course work.
 *  When creating attachments, setting the `form` field is not supported.
 */
@interface GTLRClassroom_Material : GTLRObject

/** Google Drive file material. */
@property(nonatomic, strong, nullable) GTLRClassroom_SharedDriveFile *driveFile;

/** Google Forms material. */
@property(nonatomic, strong, nullable) GTLRClassroom_Form *form;

/**
 *  Link material. On creation, will be upgraded to a more appropriate type
 *  if possible, and this will be reflected in the response.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_Link *link;

/** YouTube video material. */
@property(nonatomic, strong, nullable) GTLRClassroom_YouTubeVideo *youtubeVideo;

@end


/**
 *  Request to modify assignee mode and options of an announcement.
 */
@interface GTLRClassroom_ModifyAnnouncementAssigneesRequest : GTLRObject

/**
 *  Mode of the announcement describing whether it will be accessible by all
 *  students or specified individual students.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_AllStudents
 *        All students can see the item.
 *        This is the default state. (Value: "ALL_STUDENTS")
 *    @arg @c kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_AssigneeModeUnspecified
 *        No mode specified. This is never returned. (Value:
 *        "ASSIGNEE_MODE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_ModifyAnnouncementAssigneesRequest_AssigneeMode_IndividualStudents
 *        A subset of the students can see the item. (Value:
 *        "INDIVIDUAL_STUDENTS")
 */
@property(nonatomic, copy, nullable) NSString *assigneeMode;

/**
 *  Set which students can view or cannot view the announcement.
 *  Must be specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_ModifyIndividualStudentsOptions *modifyIndividualStudentsOptions;

@end


/**
 *  Request to modify the attachments of a student submission.
 */
@interface GTLRClassroom_ModifyAttachmentsRequest : GTLRObject

/**
 *  Attachments to add.
 *  A student submission may not have more than 20 attachments.
 *  Form attachments are not supported.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_Attachment *> *addAttachments;

@end


/**
 *  Request to modify assignee mode and options of a coursework.
 */
@interface GTLRClassroom_ModifyCourseWorkAssigneesRequest : GTLRObject

/**
 *  Mode of the coursework describing whether it will be assigned to all
 *  students or specified individual students.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_AllStudents
 *        All students can see the item.
 *        This is the default state. (Value: "ALL_STUDENTS")
 *    @arg @c kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_AssigneeModeUnspecified
 *        No mode specified. This is never returned. (Value:
 *        "ASSIGNEE_MODE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_ModifyCourseWorkAssigneesRequest_AssigneeMode_IndividualStudents
 *        A subset of the students can see the item. (Value:
 *        "INDIVIDUAL_STUDENTS")
 */
@property(nonatomic, copy, nullable) NSString *assigneeMode;

/**
 *  Set which students are assigned or not assigned to the coursework.
 *  Must be specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_ModifyIndividualStudentsOptions *modifyIndividualStudentsOptions;

@end


/**
 *  Contains fields to add or remove students from a course work or announcement
 *  where the `assigneeMode` is set to `INDIVIDUAL_STUDENTS`.
 */
@interface GTLRClassroom_ModifyIndividualStudentsOptions : GTLRObject

/**
 *  Ids of students to be added as having access to this
 *  coursework/announcement.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *addStudentIds;

/**
 *  Ids of students to be removed from having access to this
 *  coursework/announcement.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *removeStudentIds;

@end


/**
 *  Additional details for multiple-choice questions.
 */
@interface GTLRClassroom_MultipleChoiceQuestion : GTLRObject

/** Possible choices. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *choices;

@end


/**
 *  Student work for a multiple-choice question.
 */
@interface GTLRClassroom_MultipleChoiceSubmission : GTLRObject

/** Student's select choice. */
@property(nonatomic, copy, nullable) NSString *answer;

@end


/**
 *  Details of the user's name.
 */
@interface GTLRClassroom_Name : GTLRObject

/**
 *  The user's last name.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *familyName;

/**
 *  The user's full name formed by concatenating the first and last name
 *  values.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *fullName;

/**
 *  The user's first name.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *givenName;

@end


/**
 *  Request to reclaim a student submission.
 */
@interface GTLRClassroom_ReclaimStudentSubmissionRequest : GTLRObject
@end


/**
 *  An instruction to Classroom to send notifications from the `feed` to the
 *  provided destination.
 */
@interface GTLRClassroom_Registration : GTLRObject

/** The Cloud Pub/Sub topic that notifications are to be sent to. */
@property(nonatomic, strong, nullable) GTLRClassroom_CloudPubsubTopic *cloudPubsubTopic;

/**
 *  The time until which the `Registration` is effective.
 *  This is a read-only field assigned by the server.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expiryTime;

/**
 *  Specification for the class of notifications that Classroom should deliver
 *  to the destination.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_Feed *feed;

/**
 *  A server-generated unique identifier for this `Registration`.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *registrationId;

@end


/**
 *  Request to return a student submission.
 */
@interface GTLRClassroom_ReturnStudentSubmissionRequest : GTLRObject
@end


/**
 *  Drive file that is used as material for course work.
 */
@interface GTLRClassroom_SharedDriveFile : GTLRObject

/** Drive file details. */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFile *driveFile;

/**
 *  Mechanism by which students access the Drive item.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_SharedDriveFile_ShareMode_Edit Students can edit
 *        the shared file. (Value: "EDIT")
 *    @arg @c kGTLRClassroom_SharedDriveFile_ShareMode_StudentCopy Students have
 *        a personal copy of the shared file. (Value: "STUDENT_COPY")
 *    @arg @c kGTLRClassroom_SharedDriveFile_ShareMode_UnknownShareMode No
 *        sharing mode specified. This should never be returned. (Value:
 *        "UNKNOWN_SHARE_MODE")
 *    @arg @c kGTLRClassroom_SharedDriveFile_ShareMode_View Students can view
 *        the shared file. (Value: "VIEW")
 */
@property(nonatomic, copy, nullable) NSString *shareMode;

@end


/**
 *  Student work for a short answer question.
 */
@interface GTLRClassroom_ShortAnswerSubmission : GTLRObject

/** Student response to a short-answer question. */
@property(nonatomic, copy, nullable) NSString *answer;

@end


/**
 *  The history of each state this submission has been in.
 */
@interface GTLRClassroom_StateHistory : GTLRObject

/** The teacher or student who made the change */
@property(nonatomic, copy, nullable) NSString *actorUserId;

/**
 *  The workflow pipeline stage.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_StateHistory_State_Created The Submission has been
 *        created. (Value: "CREATED")
 *    @arg @c kGTLRClassroom_StateHistory_State_ReclaimedByStudent The student
 *        turned in the assigned document, and then chose to
 *        "unsubmit" the assignment, giving the student control again as the
 *        owner. (Value: "RECLAIMED_BY_STUDENT")
 *    @arg @c kGTLRClassroom_StateHistory_State_Returned The teacher has
 *        returned the assigned document to the student. (Value: "RETURNED")
 *    @arg @c kGTLRClassroom_StateHistory_State_StateUnspecified No state
 *        specified. This should never be returned. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_StateHistory_State_StudentEditedAfterTurnIn The
 *        student edited their submission after turning it in. Currently,
 *        only used by Questions, when the student edits their answer. (Value:
 *        "STUDENT_EDITED_AFTER_TURN_IN")
 *    @arg @c kGTLRClassroom_StateHistory_State_TurnedIn The student has turned
 *        in an assigned document, which may or may not be
 *        a template. (Value: "TURNED_IN")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** When the submission entered this state. */
@property(nonatomic, strong, nullable) GTLRDateTime *stateTimestamp;

@end


/**
 *  Student in a course.
 */
@interface GTLRClassroom_Student : GTLRObject

/**
 *  Identifier of the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Global user information for the student.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_UserProfile *profile;

/**
 *  Information about a Drive Folder for this student's work in this course.
 *  Only visible to the student and domain administrators.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_DriveFolder *studentWorkFolder;

/**
 *  Identifier of the user.
 *  When specified as a parameter of a request, this identifier can be one of
 *  the following:
 *  * the numeric identifier for the user
 *  * the email address of the user
 *  * the string literal `"me"`, indicating the requesting user
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  Student submission for course work.
 *  StudentSubmission items are generated when a CourseWork item is created.
 *  StudentSubmissions that have never been accessed (i.e. with `state` = NEW)
 *  may not have a creation time or update time.
 */
@interface GTLRClassroom_StudentSubmission : GTLRObject

/**
 *  Absolute link to the submission in the Classroom web UI.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  Optional grade. If unset, no grade was set.
 *  This value must be non-negative. Decimal (i.e. non-integer) values are
 *  allowed, but will be rounded to two decimal places.
 *  This may be modified only by course teachers.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *assignedGrade;

/**
 *  Submission content when course_work_type is ASSIGNMENT.
 *  Students can modify this content using
 *  google.classroom.Work.ModifyAttachments.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_AssignmentSubmission *assignmentSubmission;

/**
 *  Whether this student submission is associated with the Developer Console
 *  project making the request.
 *  See google.classroom.Work.CreateCourseWork for more
 *  details.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *associatedWithDeveloper;

/**
 *  Identifier of the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Identifier for the course work this corresponds to.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseWorkId;

/**
 *  Type of course work this submission is for.
 *  Read-only.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_StudentSubmission_CourseWorkType_Assignment An
 *        assignment. (Value: "ASSIGNMENT")
 *    @arg @c kGTLRClassroom_StudentSubmission_CourseWorkType_CourseWorkTypeUnspecified
 *        No work type specified. This is never returned. (Value:
 *        "COURSE_WORK_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_StudentSubmission_CourseWorkType_MultipleChoiceQuestion
 *        A multiple-choice question. (Value: "MULTIPLE_CHOICE_QUESTION")
 *    @arg @c kGTLRClassroom_StudentSubmission_CourseWorkType_ShortAnswerQuestion
 *        A short answer question. (Value: "SHORT_ANSWER_QUESTION")
 */
@property(nonatomic, copy, nullable) NSString *courseWorkType;

/**
 *  Creation time of this submission.
 *  This may be unset if the student has not accessed this item.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Optional pending grade. If unset, no grade was set.
 *  This value must be non-negative. Decimal (i.e. non-integer) values are
 *  allowed, but will be rounded to two decimal places.
 *  This is only visible to and modifiable by course teachers.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *draftGrade;

/**
 *  Classroom-assigned Identifier for the student submission.
 *  This is unique among submissions for the relevant course work.
 *  Read-only.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Whether this submission is late.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *late;

/** Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION. */
@property(nonatomic, strong, nullable) GTLRClassroom_MultipleChoiceSubmission *multipleChoiceSubmission;

/** Submission content when course_work_type is SHORT_ANSWER_QUESTION. */
@property(nonatomic, strong, nullable) GTLRClassroom_ShortAnswerSubmission *shortAnswerSubmission;

/**
 *  State of this submission.
 *  Read-only.
 *
 *  Likely values:
 *    @arg @c kGTLRClassroom_StudentSubmission_State_Created Has been created.
 *        (Value: "CREATED")
 *    @arg @c kGTLRClassroom_StudentSubmission_State_New The student has never
 *        accessed this submission. Attachments are not
 *        returned and timestamps is not set. (Value: "NEW")
 *    @arg @c kGTLRClassroom_StudentSubmission_State_ReclaimedByStudent Student
 *        chose to "unsubmit" the assignment. (Value: "RECLAIMED_BY_STUDENT")
 *    @arg @c kGTLRClassroom_StudentSubmission_State_Returned Has been returned
 *        to the student. (Value: "RETURNED")
 *    @arg @c kGTLRClassroom_StudentSubmission_State_SubmissionStateUnspecified
 *        No state specified. This should never be returned. (Value:
 *        "SUBMISSION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRClassroom_StudentSubmission_State_TurnedIn Has been turned in
 *        to the teacher. (Value: "TURNED_IN")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The history of the submission (includes state and grade histories).
 *  Read-only.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_SubmissionHistory *> *submissionHistory;

/**
 *  Last update time of this submission.
 *  This may be unset if the student has not accessed this item.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Identifier for the student that owns this submission.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  The history of the submission. This currently includes state and grade
 *  histories.
 */
@interface GTLRClassroom_SubmissionHistory : GTLRObject

/** The grade history information of the submission, if present. */
@property(nonatomic, strong, nullable) GTLRClassroom_GradeHistory *gradeHistory;

/** The state history information of the submission, if present. */
@property(nonatomic, strong, nullable) GTLRClassroom_StateHistory *stateHistory;

@end


/**
 *  Teacher of a course.
 */
@interface GTLRClassroom_Teacher : GTLRObject

/**
 *  Identifier of the course.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *courseId;

/**
 *  Global user information for the teacher.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_UserProfile *profile;

/**
 *  Identifier of the user.
 *  When specified as a parameter of a request, this identifier can be one of
 *  the following:
 *  * the numeric identifier for the user
 *  * the email address of the user
 *  * the string literal `"me"`, indicating the requesting user
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLRClassroom_TimeOfDay : GTLRObject

/**
 *  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
 *  to allow the value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of hour of day. Must be from 0 to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 *  allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Request to turn in a student submission.
 */
@interface GTLRClassroom_TurnInStudentSubmissionRequest : GTLRObject
@end


/**
 *  Global information for a user.
 */
@interface GTLRClassroom_UserProfile : GTLRObject

/**
 *  Email address of the user.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *emailAddress;

/**
 *  Identifier of the user.
 *  Read-only.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Name of the user.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) GTLRClassroom_Name *name;

/**
 *  Global permissions of the user.
 *  Read-only.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRClassroom_GlobalPermission *> *permissions;

/**
 *  URL of user's profile photo.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *photoUrl;

/**
 *  Represents whether a G Suite for Education user's domain administrator has
 *  explicitly verified them as being a teacher. If the user is not a member of
 *  a G Suite for Education domain, than this field will always be false.
 *  Read-only
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verifiedTeacher;

@end


/**
 *  YouTube video item.
 */
@interface GTLRClassroom_YouTubeVideo : GTLRObject

/**
 *  URL that can be used to view the YouTube video.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *alternateLink;

/**
 *  YouTube API resource ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  URL of a thumbnail image of the YouTube video.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailUrl;

/**
 *  Title of the YouTube video.
 *  Read-only.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
