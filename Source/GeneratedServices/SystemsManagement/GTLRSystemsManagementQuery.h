// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud OS Config API (osconfig/v1)
// Description:
//   OS management tools that can be used for patch management, patch
//   compliance, and configuration management on VM instances.
// Documentation:
//   https://cloud.google.com/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSystemsManagement_CancelPatchJobRequest;
@class GTLRSystemsManagement_ExecutePatchJobRequest;
@class GTLRSystemsManagement_PatchDeployment;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Systems Management query classes.
 */
@interface GTLRSystemsManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Create an OS Config patch deployment.
 *
 *  Method: osconfig.projects.patchDeployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchDeploymentsCreate : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchDeploymentsCreateWithObject:parent:]

/**
 *  Required. The project to apply this patch deployment to in the form
 *  `projects/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A name for the patch deployment in the project. When creating a
 *  name the following rules apply: * Must contain only lowercase letters,
 *  numbers, and hyphens. * Must start with a letter. * Must be between 1-63
 *  characters. * Must end with a number or a letter. * Must be unique within
 *  the project.
 */
@property(nonatomic, copy, nullable) NSString *patchDeploymentId;

/**
 *  Fetches a @c GTLRSystemsManagement_PatchDeployment.
 *
 *  Create an OS Config patch deployment.
 *
 *  @param object The @c GTLRSystemsManagement_PatchDeployment to include in the
 *    query.
 *  @param parent Required. The project to apply this patch deployment to in the
 *    form `projects/ *`.
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRSystemsManagement_PatchDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete an OS Config patch deployment.
 *
 *  Method: osconfig.projects.patchDeployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchDeploymentsDelete : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchDeploymentsDeleteWithname:]

/**
 *  Required. The resource name of the patch deployment in the form `projects/ *
 *  /patchDeployments/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSystemsManagement_Empty.
 *
 *  Delete an OS Config patch deployment.
 *
 *  @param name Required. The resource name of the patch deployment in the form
 *    `projects/ * /patchDeployments/ *`.
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get an OS Config patch deployment.
 *
 *  Method: osconfig.projects.patchDeployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchDeploymentsGet : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchDeploymentsGetWithname:]

/**
 *  Required. The resource name of the patch deployment in the form `projects/ *
 *  /patchDeployments/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSystemsManagement_PatchDeployment.
 *
 *  Get an OS Config patch deployment.
 *
 *  @param name Required. The resource name of the patch deployment in the form
 *    `projects/ * /patchDeployments/ *`.
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a page of OS Config patch deployments.
 *
 *  Method: osconfig.projects.patchDeployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchDeploymentsList : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchDeploymentsListWithparent:]

/**
 *  Optional. The maximum number of patch deployments to return. Default is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  ListPatchDeployments that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The resource name of the parent in the form `projects/ *`. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSystemsManagement_ListPatchDeploymentsResponse.
 *
 *  Get a page of OS Config patch deployments.
 *
 *  @param parent Required. The resource name of the parent in the form
 *    `projects/ *`.
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Cancel a patch job. The patch job must be active. Canceled patch jobs cannot
 *  be restarted.
 *
 *  Method: osconfig.projects.patchJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchJobsCancel : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchJobsCancelWithObject:name:]

/** Required. Name of the patch in the form `projects/ * /patchJobs/ *` */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSystemsManagement_PatchJob.
 *
 *  Cancel a patch job. The patch job must be active. Canceled patch jobs cannot
 *  be restarted.
 *
 *  @param object The @c GTLRSystemsManagement_CancelPatchJobRequest to include
 *    in the query.
 *  @param name Required. Name of the patch in the form `projects/ * /patchJobs/
 *    *`
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRSystemsManagement_CancelPatchJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Patch VM instances by creating and running a patch job.
 *
 *  Method: osconfig.projects.patchJobs.execute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchJobsExecute : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchJobsExecuteWithObject:parent:]

/**
 *  Required. The project in which to run this patch in the form `projects/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSystemsManagement_PatchJob.
 *
 *  Patch VM instances by creating and running a patch job.
 *
 *  @param object The @c GTLRSystemsManagement_ExecutePatchJobRequest to include
 *    in the query.
 *  @param parent Required. The project in which to run this patch in the form
 *    `projects/ *`
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchJobsExecute
 */
+ (instancetype)queryWithObject:(GTLRSystemsManagement_ExecutePatchJobRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get the patch job. This can be used to track the progress of an ongoing
 *  patch job or review the details of completed jobs.
 *
 *  Method: osconfig.projects.patchJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchJobsGet : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchJobsGetWithname:]

/** Required. Name of the patch in the form `projects/ * /patchJobs/ *` */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSystemsManagement_PatchJob.
 *
 *  Get the patch job. This can be used to track the progress of an ongoing
 *  patch job or review the details of completed jobs.
 *
 *  @param name Required. Name of the patch in the form `projects/ * /patchJobs/
 *    *`
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a list of instance details for a given patch job.
 *
 *  Method: osconfig.projects.patchJobs.instanceDetails.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchJobsInstanceDetailsList : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchJobsInstanceDetailsListWithparent:]

/**
 *  A filter expression that filters results listed in the response. This field
 *  supports filtering results by instance zone, name, state, or
 *  `failure_reason`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of instance details records to return. Default is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous call that indicates where this
 *  listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent for the instances are in the form of `projects/ *
 *  /patchJobs/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSystemsManagement_ListPatchJobInstanceDetailsResponse.
 *
 *  Get a list of instance details for a given patch job.
 *
 *  @param parent Required. The parent for the instances are in the form of
 *    `projects/ * /patchJobs/ *`.
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchJobsInstanceDetailsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get a list of patch jobs.
 *
 *  Method: osconfig.projects.patchJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSystemsManagementCloudPlatform
 */
@interface GTLRSystemsManagementQuery_ProjectsPatchJobsList : GTLRSystemsManagementQuery
// Previous library name was
//   +[GTLQuerySystemsManagement queryForProjectsPatchJobsListWithparent:]

/**
 *  If provided, this field specifies the criteria that must be met by patch
 *  jobs to be included in the response. Currently, filtering is only available
 *  on the patch_deployment field.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The maximum number of instance status to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous call that indicates where this
 *  listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. In the form of `projects/ *` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSystemsManagement_ListPatchJobsResponse.
 *
 *  Get a list of patch jobs.
 *
 *  @param parent Required. In the form of `projects/ *`
 *
 *  @return GTLRSystemsManagementQuery_ProjectsPatchJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
