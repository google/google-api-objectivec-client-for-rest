// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud OS Config API (osconfig/v1)
// Description:
//   OS management tools that can be used for patch management, patch
//   compliance, and configuration management on VM instances.
// Documentation:
//   https://cloud.google.com/

#import "GTLRSystemsManagementQuery.h"

#import "GTLRSystemsManagementObjects.h"

@implementation GTLRSystemsManagementQuery

@dynamic fields;

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchDeploymentsCreate

@dynamic parent, patchDeploymentId;

+ (instancetype)queryWithObject:(GTLRSystemsManagement_PatchDeployment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/patchDeployments";
  GTLRSystemsManagementQuery_ProjectsPatchDeploymentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSystemsManagement_PatchDeployment class];
  query.loggingName = @"osconfig.projects.patchDeployments.create";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchDeploymentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSystemsManagementQuery_ProjectsPatchDeploymentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSystemsManagement_Empty class];
  query.loggingName = @"osconfig.projects.patchDeployments.delete";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchDeploymentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSystemsManagementQuery_ProjectsPatchDeploymentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSystemsManagement_PatchDeployment class];
  query.loggingName = @"osconfig.projects.patchDeployments.get";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchDeploymentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/patchDeployments";
  GTLRSystemsManagementQuery_ProjectsPatchDeploymentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSystemsManagement_ListPatchDeploymentsResponse class];
  query.loggingName = @"osconfig.projects.patchDeployments.list";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSystemsManagement_CancelPatchJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRSystemsManagementQuery_ProjectsPatchJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSystemsManagement_PatchJob class];
  query.loggingName = @"osconfig.projects.patchJobs.cancel";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchJobsExecute

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSystemsManagement_ExecutePatchJobRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/patchJobs:execute";
  GTLRSystemsManagementQuery_ProjectsPatchJobsExecute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSystemsManagement_PatchJob class];
  query.loggingName = @"osconfig.projects.patchJobs.execute";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSystemsManagementQuery_ProjectsPatchJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSystemsManagement_PatchJob class];
  query.loggingName = @"osconfig.projects.patchJobs.get";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchJobsInstanceDetailsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/instanceDetails";
  GTLRSystemsManagementQuery_ProjectsPatchJobsInstanceDetailsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSystemsManagement_ListPatchJobInstanceDetailsResponse class];
  query.loggingName = @"osconfig.projects.patchJobs.instanceDetails.list";
  return query;
}

@end

@implementation GTLRSystemsManagementQuery_ProjectsPatchJobsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/patchJobs";
  GTLRSystemsManagementQuery_ProjectsPatchJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSystemsManagement_ListPatchJobsResponse class];
  query.loggingName = @"osconfig.projects.patchJobs.list";
  return query;
}

@end
