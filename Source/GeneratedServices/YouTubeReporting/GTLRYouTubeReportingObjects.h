// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   YouTube Reporting API (youtubereporting/v1)
// Description:
//   Schedules reporting jobs containing your YouTube Analytics data and
//   downloads the resulting bulk data reports in the form of CSV files.
// Documentation:
//   https://developers.google.com/youtube/reporting/v1/reports/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRYouTubeReporting_Job;
@class GTLRYouTubeReporting_Report;
@class GTLRYouTubeReporting_ReportType;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance:
 *  service Foo {
 *  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
 *  }
 *  The JSON representation for `Empty` is empty JSON object `{}`.
 */
@interface GTLRYouTubeReporting_Empty : GTLRObject
@end


/**
 *  A job creating reports of a specific type.
 */
@interface GTLRYouTubeReporting_Job : GTLRObject

/** The creation date/time of the job. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The date/time when this job will expire/expired. After a job expired, no
 *  new reports are generated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  The server-generated ID of the job (max. 40 characters).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The name of the job (max. 100 characters). */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The type of reports this job creates. Corresponds to the ID of a
 *  ReportType.
 */
@property(nonatomic, copy, nullable) NSString *reportTypeId;

/**
 *  True if this a system-managed job that cannot be modified by the user;
 *  otherwise false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *systemManaged;

@end


/**
 *  Response message for ReportingService.ListJobs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "jobs" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRYouTubeReporting_ListJobsResponse : GTLRCollectionObject

/**
 *  The list of jobs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRYouTubeReporting_Job *> *jobs;

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the
 *  ListJobsRequest.page_token
 *  field in the subsequent call to `ListJobs` method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ReportingService.ListReports.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "reports" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRYouTubeReporting_ListReportsResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the
 *  ListReportsRequest.page_token
 *  field in the subsequent call to `ListReports` method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of report types.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRYouTubeReporting_Report *> *reports;

@end


/**
 *  Response message for ReportingService.ListReportTypes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "reportTypes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRYouTubeReporting_ListReportTypesResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results.
 *  Pass this value in the
 *  ListReportTypesRequest.page_token
 *  field in the subsequent call to `ListReportTypes` method to retrieve the
 *  next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of report types.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRYouTubeReporting_ReportType *> *reportTypes;

@end


/**
 *  Media resource.
 */
@interface GTLRYouTubeReporting_Media : GTLRObject

/** Name of the media resource. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  A report's metadata including the URL from which the report itself can be
 *  downloaded.
 */
@interface GTLRYouTubeReporting_Report : GTLRObject

/** The date/time when this report was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The URL from which the report can be downloaded (max. 1000 characters). */
@property(nonatomic, copy, nullable) NSString *downloadUrl;

/**
 *  The end of the time period that the report instance covers. The value is
 *  exclusive.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The server-generated ID of the report.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The date/time when the job this report belongs to will expire/expired. */
@property(nonatomic, strong, nullable) GTLRDateTime *jobExpireTime;

/** The ID of the job that created this report. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The start of the time period that the report instance covers. The value is
 *  inclusive.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  A report type.
 */
@interface GTLRYouTubeReporting_ReportType : GTLRObject

/** The date/time when this report type was/will be deprecated. */
@property(nonatomic, strong, nullable) GTLRDateTime *deprecateTime;

/**
 *  The ID of the report type (max. 100 characters).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The name of the report type (max. 100 characters). */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  True if this a system-managed report type; otherwise false. Reporting jobs
 *  for system-managed report types are created automatically and can thus not
 *  be used in the `CreateJob` method.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *systemManaged;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
