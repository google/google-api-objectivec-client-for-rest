// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   YouTube Reporting API (youtubereporting/v1)
// Description:
//   Schedules reporting jobs containing your YouTube Analytics data and
//   downloads the resulting bulk data reports in the form of CSV files.
// Documentation:
//   https://developers.google.com/youtube/reporting/v1/reports/

#import "GTLRYouTubeReportingObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRYouTubeReporting_GdataCompositeMedia.referenceType
NSString * const kGTLRYouTubeReporting_GdataCompositeMedia_ReferenceType_BigstoreRef = @"BIGSTORE_REF";
NSString * const kGTLRYouTubeReporting_GdataCompositeMedia_ReferenceType_BlobRef = @"BLOB_REF";
NSString * const kGTLRYouTubeReporting_GdataCompositeMedia_ReferenceType_CosmoBinaryReference = @"COSMO_BINARY_REFERENCE";
NSString * const kGTLRYouTubeReporting_GdataCompositeMedia_ReferenceType_Inline = @"INLINE";
NSString * const kGTLRYouTubeReporting_GdataCompositeMedia_ReferenceType_Path = @"PATH";

// GTLRYouTubeReporting_GdataMedia.referenceType
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_ArbitraryBytes = @"ARBITRARY_BYTES";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_BigstoreRef = @"BIGSTORE_REF";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_BlobRef = @"BLOB_REF";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_CompositeMedia = @"COMPOSITE_MEDIA";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_CosmoBinaryReference = @"COSMO_BINARY_REFERENCE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_DiffChecksumsResponse = @"DIFF_CHECKSUMS_RESPONSE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_DiffDownloadResponse = @"DIFF_DOWNLOAD_RESPONSE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_DiffUploadRequest = @"DIFF_UPLOAD_REQUEST";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_DiffUploadResponse = @"DIFF_UPLOAD_RESPONSE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_DiffVersionResponse = @"DIFF_VERSION_RESPONSE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_GetMedia = @"GET_MEDIA";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_Inline = @"INLINE";
NSString * const kGTLRYouTubeReporting_GdataMedia_ReferenceType_Path = @"PATH";

// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_Empty
//

@implementation GTLRYouTubeReporting_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataBlobstore2Info
//

@implementation GTLRYouTubeReporting_GdataBlobstore2Info
@dynamic blobGeneration, blobId, downloadReadHandle, readToken,
         uploadMetadataContainer;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataCompositeMedia
//

@implementation GTLRYouTubeReporting_GdataCompositeMedia
@dynamic blobRef, blobstore2Info, cosmoBinaryReference, crc32cHash,
         inlineProperty, length, md5Hash, objectId, path, referenceType,
         sha1Hash;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"inlineProperty" : @"inline" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataContentTypeInfo
//

@implementation GTLRYouTubeReporting_GdataContentTypeInfo
@dynamic bestGuess, fromBytes, fromFileName, fromHeader, fromUrlPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDiffChecksumsResponse
//

@implementation GTLRYouTubeReporting_GdataDiffChecksumsResponse
@dynamic checksumsLocation, chunkSizeBytes, objectLocation, objectSizeBytes,
         objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDiffDownloadResponse
//

@implementation GTLRYouTubeReporting_GdataDiffDownloadResponse
@dynamic objectLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDiffUploadRequest
//

@implementation GTLRYouTubeReporting_GdataDiffUploadRequest
@dynamic checksumsInfo, objectInfo, objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDiffUploadResponse
//

@implementation GTLRYouTubeReporting_GdataDiffUploadResponse
@dynamic objectVersion, originalObject;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDiffVersionResponse
//

@implementation GTLRYouTubeReporting_GdataDiffVersionResponse
@dynamic objectSizeBytes, objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataDownloadParameters
//

@implementation GTLRYouTubeReporting_GdataDownloadParameters
@dynamic allowGzipCompression, ignoreRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataMedia
//

@implementation GTLRYouTubeReporting_GdataMedia
@dynamic algorithm, bigstoreObjectRef, blobRef, blobstore2Info, compositeMedia,
         contentType, contentTypeInfo, cosmoBinaryReference, crc32cHash,
         diffChecksumsResponse, diffDownloadResponse, diffUploadRequest,
         diffUploadResponse, diffVersionResponse, downloadParameters, filename,
         hashProperty, hashVerified, inlineProperty, isPotentialRetry, length,
         md5Hash, mediaId, objectId, path, referenceType, sha1Hash, sha256Hash,
         timestamp, token;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"hashProperty" : @"hash",
    @"inlineProperty" : @"inline"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"compositeMedia" : [GTLRYouTubeReporting_GdataCompositeMedia class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_GdataObjectId
//

@implementation GTLRYouTubeReporting_GdataObjectId
@dynamic bucketName, generation, objectName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_Job
//

@implementation GTLRYouTubeReporting_Job
@dynamic createTime, expireTime, identifier, name, reportTypeId, systemManaged;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_ListJobsResponse
//

@implementation GTLRYouTubeReporting_ListJobsResponse
@dynamic jobs, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [GTLRYouTubeReporting_Job class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"jobs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_ListReportsResponse
//

@implementation GTLRYouTubeReporting_ListReportsResponse
@dynamic nextPageToken, reports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"reports" : [GTLRYouTubeReporting_Report class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"reports";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_ListReportTypesResponse
//

@implementation GTLRYouTubeReporting_ListReportTypesResponse
@dynamic nextPageToken, reportTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"reportTypes" : [GTLRYouTubeReporting_ReportType class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"reportTypes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_Report
//

@implementation GTLRYouTubeReporting_Report
@dynamic createTime, downloadUrl, endTime, identifier, jobExpireTime, jobId,
         startTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRYouTubeReporting_ReportType
//

@implementation GTLRYouTubeReporting_ReportType
@dynamic deprecateTime, identifier, name, systemManaged;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end
