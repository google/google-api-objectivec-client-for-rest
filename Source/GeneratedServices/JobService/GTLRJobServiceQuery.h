// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Job Discovery (jobs/v2)
// Description:
//   Cloud Job Discovery provides the capability to create, read, update, and
//   delete job postings, as well as search jobs based on keywords and filters.
// Documentation:
//   https://cloud.google.com/job-discovery/docs

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRJobService_BatchDeleteJobsRequest;
@class GTLRJobService_Company;
@class GTLRJobService_CreateJobRequest;
@class GTLRJobService_DeleteJobsByFilterRequest;
@class GTLRJobService_GetHistogramRequest;
@class GTLRJobService_SearchJobsRequest;
@class GTLRJobService_UpdateJobRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// scope

/** Value: "COMPLETION_SCOPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRJobServiceScopeCompletionScopeUnspecified;
/** Value: "PUBLIC" */
GTLR_EXTERN NSString * const kGTLRJobServiceScopePublic;
/** Value: "TENANT" */
GTLR_EXTERN NSString * const kGTLRJobServiceScopeTenant;

// ----------------------------------------------------------------------------
// type

/** Value: "COMBINED" */
GTLR_EXTERN NSString * const kGTLRJobServiceTypeCombined;
/** Value: "COMPANY_NAME" */
GTLR_EXTERN NSString * const kGTLRJobServiceTypeCompanyName;
/** Value: "COMPLETION_TYPE_UNSPECIFIED" */
GTLR_EXTERN NSString * const kGTLRJobServiceTypeCompletionTypeUnspecified;
/** Value: "JOB_TITLE" */
GTLR_EXTERN NSString * const kGTLRJobServiceTypeJobTitle;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Job Service query classes.
 */
@interface GTLRJobServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new company entity.
 *
 *  Method: jobs.companies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesCreate : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesCreateWithObject:]

/**
 *  Fetches a @c GTLRJobService_Company.
 *
 *  Creates a new company entity.
 *
 *  @param object The @c GTLRJobService_Company to include in the query.
 *
 *  @return GTLRJobServiceQuery_CompaniesCreate
 */
+ (instancetype)queryWithObject:(GTLRJobService_Company *)object;

@end

/**
 *  Deletes the specified company.
 *
 *  Method: jobs.companies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesDelete : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesDeleteWithname:]

/**
 *  Required.
 *  The resource name of the company to be deleted,
 *  such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRJobService_Empty.
 *
 *  Deletes the specified company.
 *
 *  @param name Required.
 *    The resource name of the company to be deleted,
 *    such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 *
 *  @return GTLRJobServiceQuery_CompaniesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified company.
 *
 *  Method: jobs.companies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesGet : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesGetWithname:]

/**
 *  Required.
 *  Resource name of the company to retrieve,
 *  such as "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRJobService_Company.
 *
 *  Retrieves the specified company.
 *
 *  @param name Required.
 *    Resource name of the company to retrieve,
 *    such as "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 *
 *  @return GTLRJobServiceQuery_CompaniesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deprecated. Use ListJobs instead.
 *  Lists all jobs associated with a company.
 *
 *  Method: jobs.companies.jobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesJobsList : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesJobsListWithcompanyName:]

/**
 *  Required.
 *  The resource name of the company that owns the jobs to be listed,
 *  such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 */
@property(nonatomic, copy, nullable) NSString *companyName;

/**
 *  Optional.
 *  If set to `true`, only job ID, job requisition ID and language code will be
 *  returned.
 *  A typical use is to synchronize job repositories.
 *  Defaults to false.
 */
@property(nonatomic, assign) BOOL idsOnly;

/**
 *  Deprecated. Please DO NOT use this field except for small companies.
 *  Suggest counting jobs page by page instead.
 *  Optional.
 *  Set to true if the total number of open jobs is to be returned.
 *  Defaults to false.
 */
@property(nonatomic, assign) BOOL includeJobsCount;

/**
 *  Optional.
 *  The requisition ID, also known as posting ID, assigned by the company
 *  to the job.
 *  The number of allowable characters is 225.
 */
@property(nonatomic, copy, nullable) NSString *jobRequisitionId;

/**
 *  Optional.
 *  The maximum number of jobs to be returned per page of results.
 *  If ids_only is set to true, the maximum allowed page size
 *  is 1000. Otherwise, the maximum allowed page size is 100.
 *  Default is 100 if empty or a number < 1 is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional.
 *  The starting point of a query result.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRJobService_ListCompanyJobsResponse.
 *
 *  Deprecated. Use ListJobs instead.
 *  Lists all jobs associated with a company.
 *
 *  @param companyName Required.
 *    The resource name of the company that owns the jobs to be listed,
 *    such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 *
 *  @return GTLRJobServiceQuery_CompaniesJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithCompanyName:(NSString *)companyName;

@end

/**
 *  Lists all companies associated with a Cloud Job Discovery account.
 *
 *  Method: jobs.companies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesList : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesList]

/**
 *  Optional.
 *  Set to true if the companies request must have open jobs.
 *  Defaults to false.
 *  If true, at most page_size of companies are fetched, among which
 *  only those with open jobs are returned.
 */
@property(nonatomic, assign) BOOL mustHaveOpenJobs;

/**
 *  Optional.
 *  The maximum number of companies to be returned, at most 100.
 *  Default is 100 if a non-positive number is provided.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional.
 *  The starting indicator from which to return results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRJobService_ListCompaniesResponse.
 *
 *  Lists all companies associated with a Cloud Job Discovery account.
 *
 *  @return GTLRJobServiceQuery_CompaniesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the specified company. Company names can't be updated. To update a
 *  company name, delete the company and all jobs associated with it, and only
 *  then re-create them.
 *
 *  Method: jobs.companies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_CompaniesPatch : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForCompaniesPatchWithObject:name:]

/**
 *  Required during company update.
 *  The resource name for a company. This is generated by the service when a
 *  company is created, for example,
 *  "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional but strongly recommended to be provided for the best service
 *  experience.
 *  If update_company_fields is provided, only the specified fields in
 *  company are updated. Otherwise all the fields are updated.
 *  A field mask to specify the company fields to update. Valid values are:
 *  * displayName
 *  * website
 *  * imageUrl
 *  * companySize
 *  * distributorBillingCompanyId
 *  * companyInfoSources
 *  * careerPageLink
 *  * hiringAgency
 *  * hqLocation
 *  * eeoText
 *  * keywordSearchableCustomAttributes
 *  * title (deprecated)
 *  * keywordSearchableCustomFields (deprecated)
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateCompanyFields;

/**
 *  Fetches a @c GTLRJobService_Company.
 *
 *  Updates the specified company. Company names can't be updated. To update a
 *  company name, delete the company and all jobs associated with it, and only
 *  then re-create them.
 *
 *  @param object The @c GTLRJobService_Company to include in the query.
 *  @param name Required during company update.
 *    The resource name for a company. This is generated by the service when a
 *    company is created, for example,
 *    "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
 *
 *  @return GTLRJobServiceQuery_CompaniesPatch
 */
+ (instancetype)queryWithObject:(GTLRJobService_Company *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a list of Jobs by filter.
 *
 *  Method: jobs.jobs.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsBatchDelete : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsBatchDeleteWithObject:]

/**
 *  Fetches a @c GTLRJobService_Empty.
 *
 *  Deletes a list of Jobs by filter.
 *
 *  @param object The @c GTLRJobService_BatchDeleteJobsRequest to include in the
 *    query.
 *
 *  @return GTLRJobServiceQuery_JobsBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRJobService_BatchDeleteJobsRequest *)object;

@end

/**
 *  Creates a new job.
 *
 *  Method: jobs.jobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsCreate : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsCreateWithObject:]

/**
 *  Fetches a @c GTLRJobService_Job.
 *
 *  Creates a new job.
 *
 *  @param object The @c GTLRJobService_CreateJobRequest to include in the
 *    query.
 *
 *  @return GTLRJobServiceQuery_JobsCreate
 */
+ (instancetype)queryWithObject:(GTLRJobService_CreateJobRequest *)object;

@end

/**
 *  Deletes the specified job. You can specify whether to synchronously wait
 *  for validation, indexing, and general processing to be completed before
 *  the response is returned.
 *
 *  Method: jobs.jobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsDelete : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsDeleteWithname:]

/**
 *  Deprecated. This field is not working anymore.
 *  Optional.
 *  If set to true, this call waits for all processing steps to complete
 *  before the job is cleaned up. Otherwise, the call returns while some
 *  steps are still taking place asynchronously, hence faster.
 */
@property(nonatomic, assign) BOOL disableFastProcess;

/**
 *  Required.
 *  The resource name of the job to be deleted, such as "jobs/11111111".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRJobService_Empty.
 *
 *  Deletes the specified job. You can specify whether to synchronously wait
 *  for validation, indexing, and general processing to be completed before
 *  the response is returned.
 *
 *  @param name Required.
 *    The resource name of the job to be deleted, such as "jobs/11111111".
 *
 *  @return GTLRJobServiceQuery_JobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deprecated. Use BatchDeleteJobs instead.
 *  Deletes the specified job by filter. You can specify whether to
 *  synchronously wait for validation, indexing, and general processing to be
 *  completed before the response is returned.
 *
 *  Method: jobs.jobs.deleteByFilter
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsDeleteByFilter : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsDeleteByFilterWithObject:]

/**
 *  Fetches a @c GTLRJobService_Empty.
 *
 *  Deprecated. Use BatchDeleteJobs instead.
 *  Deletes the specified job by filter. You can specify whether to
 *  synchronously wait for validation, indexing, and general processing to be
 *  completed before the response is returned.
 *
 *  @param object The @c GTLRJobService_DeleteJobsByFilterRequest to include in
 *    the query.
 *
 *  @return GTLRJobServiceQuery_JobsDeleteByFilter
 */
+ (instancetype)queryWithObject:(GTLRJobService_DeleteJobsByFilterRequest *)object;

@end

/**
 *  Retrieves the specified job, whose status is OPEN or recently EXPIRED
 *  in 60 days.
 *
 *  Method: jobs.jobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsGet : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsGetWithname:]

/**
 *  Required.
 *  The resource name of the job to retrieve, such as "jobs/11111111".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRJobService_Job.
 *
 *  Retrieves the specified job, whose status is OPEN or recently EXPIRED
 *  in 60 days.
 *
 *  @param name Required.
 *    The resource name of the job to retrieve, such as "jobs/11111111".
 *
 *  @return GTLRJobServiceQuery_JobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deprecated. Use SearchJobsRequest.histogram_facets instead to make
 *  a single call with both search and histogram.
 *  Retrieves a histogram for the given
 *  GetHistogramRequest. This call provides a structured
 *  count of jobs that match against the search query, grouped by specified
 *  facets.
 *  This call constrains the visibility of jobs
 *  present in the database, and only counts jobs the caller has
 *  permission to search against.
 *  For example, use this call to generate the
 *  number of jobs in the U.S. by state.
 *
 *  Method: jobs.jobs.histogram
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsHistogram : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsHistogramWithObject:]

/**
 *  Fetches a @c GTLRJobService_GetHistogramResponse.
 *
 *  Deprecated. Use SearchJobsRequest.histogram_facets instead to make
 *  a single call with both search and histogram.
 *  Retrieves a histogram for the given
 *  GetHistogramRequest. This call provides a structured
 *  count of jobs that match against the search query, grouped by specified
 *  facets.
 *  This call constrains the visibility of jobs
 *  present in the database, and only counts jobs the caller has
 *  permission to search against.
 *  For example, use this call to generate the
 *  number of jobs in the U.S. by state.
 *
 *  @param object The @c GTLRJobService_GetHistogramRequest to include in the
 *    query.
 *
 *  @return GTLRJobServiceQuery_JobsHistogram
 */
+ (instancetype)queryWithObject:(GTLRJobService_GetHistogramRequest *)object;

@end

/**
 *  Lists jobs by filter.
 *
 *  Method: jobs.jobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsList : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsList]

/**
 *  Required.
 *  The filter string specifies the jobs to be enumerated.
 *  Supported operator: =, AND
 *  The fields eligible for filtering are:
 *  * `companyName` (Required)
 *  * `requisitionId` (Optional)
 *  Sample Query:
 *  * companyName = "companies/123"
 *  * companyName = "companies/123" AND requisitionId = "req-1"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional.
 *  If set to `true`, only Job.name, Job.requisition_id and
 *  Job.language_code will be returned.
 *  A typical use case is to synchronize job repositories.
 *  Defaults to false.
 */
@property(nonatomic, assign) BOOL idsOnly;

/**
 *  Optional.
 *  The maximum number of jobs to be returned per page of results.
 *  If ids_only is set to true, the maximum allowed page size
 *  is 1000. Otherwise, the maximum allowed page size is 100.
 *  Default is 100 if empty or a number < 1 is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional.
 *  The starting point of a query result.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRJobService_ListJobsResponse.
 *
 *  Lists jobs by filter.
 *
 *  @return GTLRJobServiceQuery_JobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the specified job. You can specify whether to synchronously wait
 *  for validation, indexing, and general processing to be completed before
 *  the response is returned.
 *  If this call is executed synchronously, the returned job
 *  is guaranteed to be fully processed and complete upon response.
 *  The `companyName` and `distributorCompanyId` job fields cannot be updated.
 *
 *  Method: jobs.jobs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsPatch : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsPatchWithObject:name:]

/**
 *  Required during job update.
 *  Resource name assigned to a job by the API, for example, "/jobs/foo". Use
 *  of this field in job queries and API calls is preferred over the use of
 *  requisition_id since this value is unique.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRJobService_Job.
 *
 *  Updates the specified job. You can specify whether to synchronously wait
 *  for validation, indexing, and general processing to be completed before
 *  the response is returned.
 *  If this call is executed synchronously, the returned job
 *  is guaranteed to be fully processed and complete upon response.
 *  The `companyName` and `distributorCompanyId` job fields cannot be updated.
 *
 *  @param object The @c GTLRJobService_UpdateJobRequest to include in the
 *    query.
 *  @param name Required during job update.
 *    Resource name assigned to a job by the API, for example, "/jobs/foo". Use
 *    of this field in job queries and API calls is preferred over the use of
 *    requisition_id since this value is unique.
 *
 *  @return GTLRJobServiceQuery_JobsPatch
 */
+ (instancetype)queryWithObject:(GTLRJobService_UpdateJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Searches for jobs using the provided SearchJobsRequest.
 *  This call constrains the visibility of jobs
 *  present in the database, and only returns jobs that the caller has
 *  permission to search against.
 *
 *  Method: jobs.jobs.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsSearch : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsSearchWithObject:]

/**
 *  Fetches a @c GTLRJobService_SearchJobsResponse.
 *
 *  Searches for jobs using the provided SearchJobsRequest.
 *  This call constrains the visibility of jobs
 *  present in the database, and only returns jobs that the caller has
 *  permission to search against.
 *
 *  @param object The @c GTLRJobService_SearchJobsRequest to include in the
 *    query.
 *
 *  @return GTLRJobServiceQuery_JobsSearch
 */
+ (instancetype)queryWithObject:(GTLRJobService_SearchJobsRequest *)object;

@end

/**
 *  Searches for jobs using the provided SearchJobsRequest.
 *  This call is intended to use for large, periodic tasks such as
 *  email alert processing, and has different algorithmic adjustments that are
 *  targeted to passive job seekers.
 *  This call constrains the visibility of jobs
 *  present in the database, and only returns jobs the caller has
 *  permission to search against.
 *
 *  Method: jobs.jobs.searchForAlert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_JobsSearchForAlert : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForJobsSearchForAlertWithObject:]

/**
 *  Fetches a @c GTLRJobService_SearchJobsResponse.
 *
 *  Searches for jobs using the provided SearchJobsRequest.
 *  This call is intended to use for large, periodic tasks such as
 *  email alert processing, and has different algorithmic adjustments that are
 *  targeted to passive job seekers.
 *  This call constrains the visibility of jobs
 *  present in the database, and only returns jobs the caller has
 *  permission to search against.
 *
 *  @param object The @c GTLRJobService_SearchJobsRequest to include in the
 *    query.
 *
 *  @return GTLRJobServiceQuery_JobsSearchForAlert
 */
+ (instancetype)queryWithObject:(GTLRJobService_SearchJobsRequest *)object;

@end

/**
 *  Completes the specified prefix with job keyword suggestions.
 *  Intended for use by a job search auto-complete search box.
 *
 *  Method: jobs.complete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeJobService
 *    @c kGTLRAuthScopeJobServiceCloudPlatform
 */
@interface GTLRJobServiceQuery_V2Complete : GTLRJobServiceQuery
// Previous library name was
//   +[GTLQueryJobService queryForComplete]

/**
 *  Optional.
 *  If provided, restricts completion to the specified company.
 */
@property(nonatomic, copy, nullable) NSString *companyName;

/**
 *  Required.
 *  The language of the query. This is
 *  the BCP-47 language code, such as "en-US" or "sr-Latn".
 *  For more information, see
 *  [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).
 *  For CompletionType.JOB_TITLE type, only open jobs with same
 *  language_code are returned.
 *  For CompletionType.COMPANY_NAME type,
 *  only companies having open jobs with same language_code are
 *  returned.
 *  For CompletionType.COMBINED type, only open jobs with same
 *  language_code or companies having open jobs with same
 *  language_code are returned.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required.
 *  Completion result count.
 *  The maximum allowed page size is 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required.
 *  The query used to generate suggestions.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Optional.
 *  The scope of the completion. The defaults is CompletionScope.PUBLIC.
 *
 *  Likely values:
 *    @arg @c kGTLRJobServiceScopeCompletionScopeUnspecified Value
 *        "COMPLETION_SCOPE_UNSPECIFIED"
 *    @arg @c kGTLRJobServiceScopeTenant Value "TENANT"
 *    @arg @c kGTLRJobServiceScopePublic Value "PUBLIC"
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Optional.
 *  The completion topic. The default is CompletionType.COMBINED.
 *
 *  Likely values:
 *    @arg @c kGTLRJobServiceTypeCompletionTypeUnspecified Value
 *        "COMPLETION_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRJobServiceTypeJobTitle Value "JOB_TITLE"
 *    @arg @c kGTLRJobServiceTypeCompanyName Value "COMPANY_NAME"
 *    @arg @c kGTLRJobServiceTypeCombined Value "COMBINED"
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRJobService_CompleteQueryResponse.
 *
 *  Completes the specified prefix with job keyword suggestions.
 *  Intended for use by a job search auto-complete search box.
 *
 *  @return GTLRJobServiceQuery_V2Complete
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
