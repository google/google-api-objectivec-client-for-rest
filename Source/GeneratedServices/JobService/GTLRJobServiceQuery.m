// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Job Discovery (jobs/v2)
// Description:
//   Cloud Job Discovery provides the capability to create, read, update, and
//   delete job postings, as well as search jobs based on keywords and filters.
// Documentation:
//   https://cloud.google.com/job-discovery/docs

#import "GTLRJobServiceQuery.h"

#import "GTLRJobServiceObjects.h"

// ----------------------------------------------------------------------------
// Constants

// scope
NSString * const kGTLRJobServiceScopeCompletionScopeUnspecified = @"COMPLETION_SCOPE_UNSPECIFIED";
NSString * const kGTLRJobServiceScopePublic                    = @"PUBLIC";
NSString * const kGTLRJobServiceScopeTenant                    = @"TENANT";

// type
NSString * const kGTLRJobServiceTypeCombined                  = @"COMBINED";
NSString * const kGTLRJobServiceTypeCompanyName               = @"COMPANY_NAME";
NSString * const kGTLRJobServiceTypeCompletionTypeUnspecified = @"COMPLETION_TYPE_UNSPECIFIED";
NSString * const kGTLRJobServiceTypeJobTitle                  = @"JOB_TITLE";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRJobServiceQuery

@dynamic fields;

@end

@implementation GTLRJobServiceQuery_CompaniesCreate

+ (instancetype)queryWithObject:(GTLRJobService_Company *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/companies";
  GTLRJobServiceQuery_CompaniesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_Company class];
  query.loggingName = @"jobs.companies.create";
  return query;
}

@end

@implementation GTLRJobServiceQuery_CompaniesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_CompaniesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Empty class];
  query.loggingName = @"jobs.companies.delete";
  return query;
}

@end

@implementation GTLRJobServiceQuery_CompaniesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_CompaniesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Company class];
  query.loggingName = @"jobs.companies.get";
  return query;
}

@end

@implementation GTLRJobServiceQuery_CompaniesJobsList

@dynamic companyName, idsOnly, includeJobsCount, jobRequisitionId, pageSize,
         pageToken;

+ (instancetype)queryWithCompanyName:(NSString *)companyName {
  NSArray *pathParams = @[ @"companyName" ];
  NSString *pathURITemplate = @"v2/{+companyName}/jobs";
  GTLRJobServiceQuery_CompaniesJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.companyName = companyName;
  query.expectedObjectClass = [GTLRJobService_ListCompanyJobsResponse class];
  query.loggingName = @"jobs.companies.jobs.list";
  return query;
}

@end

@implementation GTLRJobServiceQuery_CompaniesList

@dynamic mustHaveOpenJobs, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/companies";
  GTLRJobServiceQuery_CompaniesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRJobService_ListCompaniesResponse class];
  query.loggingName = @"jobs.companies.list";
  return query;
}

@end

@implementation GTLRJobServiceQuery_CompaniesPatch

@dynamic name, updateCompanyFields;

+ (instancetype)queryWithObject:(GTLRJobService_Company *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_CompaniesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Company class];
  query.loggingName = @"jobs.companies.patch";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsBatchDelete

+ (instancetype)queryWithObject:(GTLRJobService_BatchDeleteJobsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs:batchDelete";
  GTLRJobServiceQuery_JobsBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_Empty class];
  query.loggingName = @"jobs.jobs.batchDelete";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsCreate

+ (instancetype)queryWithObject:(GTLRJobService_CreateJobRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs";
  GTLRJobServiceQuery_JobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_Job class];
  query.loggingName = @"jobs.jobs.create";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsDelete

@dynamic disableFastProcess, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_JobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Empty class];
  query.loggingName = @"jobs.jobs.delete";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsDeleteByFilter

+ (instancetype)queryWithObject:(GTLRJobService_DeleteJobsByFilterRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs:deleteByFilter";
  GTLRJobServiceQuery_JobsDeleteByFilter *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_Empty class];
  query.loggingName = @"jobs.jobs.deleteByFilter";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_JobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Job class];
  query.loggingName = @"jobs.jobs.get";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsHistogram

+ (instancetype)queryWithObject:(GTLRJobService_GetHistogramRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs:histogram";
  GTLRJobServiceQuery_JobsHistogram *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_GetHistogramResponse class];
  query.loggingName = @"jobs.jobs.histogram";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsList

@dynamic filter, idsOnly, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/jobs";
  GTLRJobServiceQuery_JobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRJobService_ListJobsResponse class];
  query.loggingName = @"jobs.jobs.list";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRJobService_UpdateJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRJobServiceQuery_JobsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRJobService_Job class];
  query.loggingName = @"jobs.jobs.patch";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsSearch

+ (instancetype)queryWithObject:(GTLRJobService_SearchJobsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs:search";
  GTLRJobServiceQuery_JobsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_SearchJobsResponse class];
  query.loggingName = @"jobs.jobs.search";
  return query;
}

@end

@implementation GTLRJobServiceQuery_JobsSearchForAlert

+ (instancetype)queryWithObject:(GTLRJobService_SearchJobsRequest *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v2/jobs:searchForAlert";
  GTLRJobServiceQuery_JobsSearchForAlert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRJobService_SearchJobsResponse class];
  query.loggingName = @"jobs.jobs.searchForAlert";
  return query;
}

@end

@implementation GTLRJobServiceQuery_V2Complete

@dynamic companyName, languageCode, pageSize, query, scope, type;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2:complete";
  GTLRJobServiceQuery_V2Complete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRJobService_CompleteQueryResponse class];
  query.loggingName = @"jobs.complete";
  return query;
}

@end
