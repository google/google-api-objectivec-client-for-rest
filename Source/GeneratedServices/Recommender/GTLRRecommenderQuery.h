// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Recommender API (recommender/v1)
// Documentation:
//   https://cloud.google.com/recommender/docs/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRRecommender_GoogleCloudRecommenderV1MarkInsightAcceptedRequest;
@class GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationClaimedRequest;
@class GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationFailedRequest;
@class GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationSucceededRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Recommender query classes.
 */
@interface GTLRRecommenderQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the requested insight. Requires the recommender.*.get IAM permission
 *  for the specified insight type.
 *
 *  Method: recommender.projects.locations.insightTypes.insights.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsGet : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsInsightTypesInsightsGetWithname:]

/** Required. Name of the insight. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Insight.
 *
 *  Gets the requested insight. Requires the recommender.*.get IAM permission
 *  for the specified insight type.
 *
 *  @param name Required. Name of the insight.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists insights for a Cloud project. Requires the recommender.*.list IAM
 *  permission for the specified insight type.
 *
 *  Method: recommender.projects.locations.insightTypes.insights.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsList : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsInsightTypesInsightsListWithparent:]

/**
 *  Optional. Filter expression to restrict the insights returned. Supported
 *  filter fields: state Eg: `state:"DISMISSED" or state:"ACTIVE"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. If not specified, the server will determine
 *  the number of results to return.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters must be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The container resource on which to execute the request. Acceptable
 *  formats: 1.
 *  "projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]",
 *  LOCATION here refers to GCP Locations:
 *  https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to
 *  supported insight types:
 *  https://cloud.google.com/recommender/docs/insights/insight-types.)
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1ListInsightsResponse.
 *
 *  Lists insights for a Cloud project. Requires the recommender.*.list IAM
 *  permission for the specified insight type.
 *
 *  @param parent Required. The container resource on which to execute the
 *    request. Acceptable formats: 1.
 *    "projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]",
 *    LOCATION here refers to GCP Locations:
 *    https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to
 *    supported insight types:
 *    https://cloud.google.com/recommender/docs/insights/insight-types.)
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Marks the Insight State as Accepted. Users can use this method to indicate
 *  to the Recommender API that they have applied some action based on the
 *  insight. This stops the insight content from being updated.
 *  MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the
 *  recommender.*.update IAM permission for the specified insight.
 *
 *  Method: recommender.projects.locations.insightTypes.insights.markAccepted
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsMarkAccepted : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsInsightTypesInsightsMarkAcceptedWithObject:name:]

/** Required. Name of the insight. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Insight.
 *
 *  Marks the Insight State as Accepted. Users can use this method to indicate
 *  to the Recommender API that they have applied some action based on the
 *  insight. This stops the insight content from being updated.
 *  MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the
 *  recommender.*.update IAM permission for the specified insight.
 *
 *  @param object The @c
 *    GTLRRecommender_GoogleCloudRecommenderV1MarkInsightAcceptedRequest to
 *    include in the query.
 *  @param name Required. Name of the insight.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsInsightTypesInsightsMarkAccepted
 */
+ (instancetype)queryWithObject:(GTLRRecommender_GoogleCloudRecommenderV1MarkInsightAcceptedRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the requested recommendation. Requires the recommender.*.get IAM
 *  permission for the specified recommender.
 *
 *  Method: recommender.projects.locations.recommenders.recommendations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsGet : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsRecommendersRecommendationsGetWithname:]

/** Required. Name of the recommendation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Recommendation.
 *
 *  Gets the requested recommendation. Requires the recommender.*.get IAM
 *  permission for the specified recommender.
 *
 *  @param name Required. Name of the recommendation.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists recommendations for a Cloud project. Requires the recommender.*.list
 *  IAM permission for the specified recommender.
 *
 *  Method: recommender.projects.locations.recommenders.recommendations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsList : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsRecommendersRecommendationsListWithparent:]

/**
 *  Filter expression to restrict the recommendations returned. Supported filter
 *  fields: state_info.state Eg: `state_info.state:"DISMISSED" or
 *  state_info.state:"FAILED"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. If not specified, the server will determine
 *  the number of results to return.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters must be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The container resource on which to execute the request. Acceptable
 *  formats: 1.
 *  "projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]",
 *  LOCATION here refers to GCP Locations:
 *  https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported
 *  recommenders: https://cloud.google.com/recommender/docs/recommenders.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRRecommender_GoogleCloudRecommenderV1ListRecommendationsResponse.
 *
 *  Lists recommendations for a Cloud project. Requires the recommender.*.list
 *  IAM permission for the specified recommender.
 *
 *  @param parent Required. The container resource on which to execute the
 *    request. Acceptable formats: 1.
 *    "projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]",
 *    LOCATION here refers to GCP Locations:
 *    https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to
 *    supported recommenders:
 *    https://cloud.google.com/recommender/docs/recommenders.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Marks the Recommendation State as Claimed. Users can use this method to
 *  indicate to the Recommender API that they are starting to apply the
 *  recommendation themselves. This stops the recommendation content from being
 *  updated. Associated insights are frozen and placed in the ACCEPTED state.
 *  MarkRecommendationClaimed can be applied to recommendations in CLAIMED,
 *  SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM
 *  permission for the specified recommender.
 *
 *  Method: recommender.projects.locations.recommenders.recommendations.markClaimed
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkClaimed : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsRecommendersRecommendationsMarkClaimedWithObject:name:]

/** Required. Name of the recommendation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Recommendation.
 *
 *  Marks the Recommendation State as Claimed. Users can use this method to
 *  indicate to the Recommender API that they are starting to apply the
 *  recommendation themselves. This stops the recommendation content from being
 *  updated. Associated insights are frozen and placed in the ACCEPTED state.
 *  MarkRecommendationClaimed can be applied to recommendations in CLAIMED,
 *  SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM
 *  permission for the specified recommender.
 *
 *  @param object The @c
 *    GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
 *    to include in the query.
 *  @param name Required. Name of the recommendation.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkClaimed
 */
+ (instancetype)queryWithObject:(GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationClaimedRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Marks the Recommendation State as Failed. Users can use this method to
 *  indicate to the Recommender API that they have applied the recommendation
 *  themselves, and the operation failed. This stops the recommendation content
 *  from being updated. Associated insights are frozen and placed in the
 *  ACCEPTED state. MarkRecommendationFailed can be applied to recommendations
 *  in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the
 *  recommender.*.update IAM permission for the specified recommender.
 *
 *  Method: recommender.projects.locations.recommenders.recommendations.markFailed
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkFailed : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsRecommendersRecommendationsMarkFailedWithObject:name:]

/** Required. Name of the recommendation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Recommendation.
 *
 *  Marks the Recommendation State as Failed. Users can use this method to
 *  indicate to the Recommender API that they have applied the recommendation
 *  themselves, and the operation failed. This stops the recommendation content
 *  from being updated. Associated insights are frozen and placed in the
 *  ACCEPTED state. MarkRecommendationFailed can be applied to recommendations
 *  in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the
 *  recommender.*.update IAM permission for the specified recommender.
 *
 *  @param object The @c
 *    GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationFailedRequest to
 *    include in the query.
 *  @param name Required. Name of the recommendation.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkFailed
 */
+ (instancetype)queryWithObject:(GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationFailedRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Marks the Recommendation State as Succeeded. Users can use this method to
 *  indicate to the Recommender API that they have applied the recommendation
 *  themselves, and the operation was successful. This stops the recommendation
 *  content from being updated. Associated insights are frozen and placed in the
 *  ACCEPTED state. MarkRecommendationSucceeded can be applied to
 *  recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the
 *  recommender.*.update IAM permission for the specified recommender.
 *
 *  Method: recommender.projects.locations.recommenders.recommendations.markSucceeded
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRecommenderCloudPlatform
 */
@interface GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkSucceeded : GTLRRecommenderQuery
// Previous library name was
//   +[GTLQueryRecommender queryForProjectsLocationsRecommendersRecommendationsMarkSucceededWithObject:name:]

/** Required. Name of the recommendation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRecommender_GoogleCloudRecommenderV1Recommendation.
 *
 *  Marks the Recommendation State as Succeeded. Users can use this method to
 *  indicate to the Recommender API that they have applied the recommendation
 *  themselves, and the operation was successful. This stops the recommendation
 *  content from being updated. Associated insights are frozen and placed in the
 *  ACCEPTED state. MarkRecommendationSucceeded can be applied to
 *  recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the
 *  recommender.*.update IAM permission for the specified recommender.
 *
 *  @param object The @c
 *    GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
 *    to include in the query.
 *  @param name Required. Name of the recommendation.
 *
 *  @return GTLRRecommenderQuery_ProjectsLocationsRecommendersRecommendationsMarkSucceeded
 */
+ (instancetype)queryWithObject:(GTLRRecommender_GoogleCloudRecommenderV1MarkRecommendationSucceededRequest *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
