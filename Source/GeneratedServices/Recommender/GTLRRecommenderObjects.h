// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Recommender API (recommender/v1beta1)
// Documentation:
//   https://cloud.google.com/recommender/docs/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRRecommender_GoogleCloudRecommenderV1beta1CostProjection;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1Impact;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest_StateMetadata;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest_StateMetadata;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest_StateMetadata;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1Operation;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathFilters;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathValueMatchers;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1OperationGroup;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1Recommendation;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationContent;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_StateMetadata;
@class GTLRRecommender_GoogleCloudRecommenderV1beta1ValueMatcher;
@class GTLRRecommender_GoogleTypeMoney;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRRecommender_GoogleCloudRecommenderV1beta1Impact.category

/**
 *  Default unspecified category. Don't use directly.
 *
 *  Value: "CATEGORY_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_CategoryUnspecified;
/**
 *  Indicates a potential increase or decrease in cost.
 *
 *  Value: "COST"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Cost;
/**
 *  Indicates a potential increase or decrease in manageability.
 *
 *  Value: "MANAGEABILITY"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Manageability;
/**
 *  Indicates a potential increase or decrease in performance.
 *
 *  Value: "PERFORMANCE"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Performance;
/**
 *  Indicates a potential increase or decrease in security.
 *
 *  Value: "SECURITY"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Security;

// ----------------------------------------------------------------------------
// GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo.state

/**
 *  Recommendation is active and can be applied. Recommendations content can
 *  be updated by Google.
 *  ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Active;
/**
 *  Recommendation is in claimed state. Recommendations content is
 *  immutable and cannot be updated by Google.
 *  CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
 *
 *  Value: "CLAIMED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Claimed;
/**
 *  Recommendation is in dismissed state. Recommendation content can be
 *  updated by Google.
 *  DISMISSED recommendations can be marked as ACTIVE.
 *
 *  Value: "DISMISSED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Dismissed;
/**
 *  Recommendation is in failed state. Recommendations content is immutable
 *  and cannot be updated by Google.
 *  FAILED recommendations can be marked as SUCCEEDED, or FAILED.
 *
 *  Value: "FAILED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Failed;
/**
 *  Default state. Don't use directly.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_StateUnspecified;
/**
 *  Recommendation is in succeeded state. Recommendations content is
 *  immutable and cannot be updated by Google.
 *  SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.
 *
 *  Value: "SUCCEEDED"
 */
GTLR_EXTERN NSString * const kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Succeeded;

/**
 *  Contains metadata about how much money a recommendation can save or incur.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1CostProjection : GTLRObject

/**
 *  An approximate projection on amount saved or amount incurred. Negative cost
 *  units indicate cost savings and positive cost units indicate increase.
 *  See google.type.Money documentation for positive/negative units.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleTypeMoney *cost;

/** Duration for which this cost applies. */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

@end


/**
 *  Contains the impact a recommendation can have for a given category.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1Impact : GTLRObject

/**
 *  Category that is being targeted.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_CategoryUnspecified
 *        Default unspecified category. Don't use directly. (Value:
 *        "CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Cost
 *        Indicates a potential increase or decrease in cost. (Value: "COST")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Manageability
 *        Indicates a potential increase or decrease in manageability. (Value:
 *        "MANAGEABILITY")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Performance
 *        Indicates a potential increase or decrease in performance. (Value:
 *        "PERFORMANCE")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1Impact_Category_Security
 *        Indicates a potential increase or decrease in security. (Value:
 *        "SECURITY")
 */
@property(nonatomic, copy, nullable) NSString *category;

/** Use with CategoryType.COST */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1CostProjection *costProjection;

@end


/**
 *  Response to the `ListRecommendations` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "recommendations" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1ListRecommendationsResponse : GTLRCollectionObject

/**
 *  A token that can be used to request the next page of results. This field is
 *  empty if there are no additional results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The set of recommendations for the `parent` resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommender_GoogleCloudRecommenderV1beta1Recommendation *> *recommendations;

@end


/**
 *  Request for the `MarkRecommendationClaimed` Method.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest : GTLRObject

/** Fingerprint of the Recommendation. Provides optimistic locking. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest_StateMetadata *stateMetadata;

@end


/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest_StateMetadata : GTLRObject
@end


/**
 *  Request for the `MarkRecommendationFailed` Method.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest : GTLRObject

/** Fingerprint of the Recommendation. Provides optimistic locking. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest_StateMetadata *stateMetadata;

@end


/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest_StateMetadata : GTLRObject
@end


/**
 *  Request for the `MarkRecommendationSucceeded` Method.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest : GTLRObject

/** Fingerprint of the Recommendation. Provides optimistic locking. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest_StateMetadata *stateMetadata;

@end


/**
 *  State properties to include with this state. Overwrites any existing
 *  `state_metadata`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest_StateMetadata : GTLRObject
@end


/**
 *  Contains an operation for a resource loosely based on the JSON-PATCH format
 *  with support for:
 *  * Custom filters for describing partial array patch.
 *  * Extended path values for describing nested arrays.
 *  * Custom fields for describing the resource for which the operation is being
 *  described.
 *  * Allows extension to custom operations not natively supported by RFC6902.
 *  See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1Operation : GTLRObject

/**
 *  Type of this operation. Contains one of 'and', 'remove', 'replace', 'move',
 *  'copy', 'test' and 'custom' operations. This field is case-insensitive and
 *  always populated.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Path to the target field being operated on. If the operation is at the
 *  resource level, then path should be "/". This field is always populated.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Set of filters to apply if `path` refers to array elements or nested array
 *  elements in order to narrow down to a single unique element that is being
 *  tested/modified.
 *  This is intended to be an exact match per filter. To perform advanced
 *  matching, use path_value_matchers.
 *  * Example: {
 *  "/versions/ * /name" : "it-123"
 *  "/versions/ * /targetSize/percent": 20
 *  }
 *  * Example: {
 *  "/bindings/ * /role": "roles/admin"
 *  "/bindings/ * /condition" : null
 *  }
 *  * Example: {
 *  "/bindings/ * /role": "roles/admin"
 *  "/bindings/ * /members/ *" : ["x\@google.com", "y\@google.com"]
 *  }
 *  When both path_filters and path_value_matchers are set, an implicit AND
 *  must be performed.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathFilters *pathFilters;

/**
 *  Similar to path_filters, this contains set of filters to apply if `path`
 *  field referes to array elements. This is meant to support value matching
 *  beyond exact match. To perform exact match, use path_filters.
 *  When both path_filters and path_value_matchers are set, an implicit AND
 *  must be performed.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathValueMatchers *pathValueMatchers;

/**
 *  Contains the fully qualified resource name. This field is always populated.
 *  ex: //cloudresourcemanager.googleapis.com/projects/foo.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Type of GCP resource being modified/tested. This field is always populated.
 *  Example: cloudresourcemanager.googleapis.com/Project,
 *  compute.googleapis.com/Instance
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Can be set with action 'copy' or 'move' to indicate the source field within
 *  resource or source_resource, ignored if provided for other operation types.
 */
@property(nonatomic, copy, nullable) NSString *sourcePath;

/**
 *  Can be set with action 'copy' to copy resource configuration across
 *  different resources of the same type. Example: A resource clone can be
 *  done via action = 'copy', path = "/", from = "/",
 *  source_resource = <source> and resource_name = <target>.
 *  This field is empty for all other values of `action`.
 */
@property(nonatomic, copy, nullable) NSString *sourceResource;

/**
 *  Value for the `path` field. Will be set for actions:'add'/'replace'.
 *  Maybe set for action: 'test'. Either this or `value_matcher` will be set
 *  for 'test' operation. An exact match must be performed.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

/**
 *  Can be set for action 'test' for advanced matching for the value of
 *  'path' field. Either this or `value` will be set for 'test' operation.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1ValueMatcher *valueMatcher;

@end


/**
 *  Set of filters to apply if `path` refers to array elements or nested array
 *  elements in order to narrow down to a single unique element that is being
 *  tested/modified.
 *  This is intended to be an exact match per filter. To perform advanced
 *  matching, use path_value_matchers.
 *  * Example: {
 *  "/versions/ * /name" : "it-123"
 *  "/versions/ * /targetSize/percent": 20
 *  }
 *  * Example: {
 *  "/bindings/ * /role": "roles/admin"
 *  "/bindings/ * /condition" : null
 *  }
 *  * Example: {
 *  "/bindings/ * /role": "roles/admin"
 *  "/bindings/ * /members/ *" : ["x\@google.com", "y\@google.com"]
 *  }
 *  When both path_filters and path_value_matchers are set, an implicit AND
 *  must be performed.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathFilters : GTLRObject
@end


/**
 *  Similar to path_filters, this contains set of filters to apply if `path`
 *  field referes to array elements. This is meant to support value matching
 *  beyond exact match. To perform exact match, use path_filters.
 *  When both path_filters and path_value_matchers are set, an implicit AND
 *  must be performed.
 *
 *  @note This class is documented as having more properties of
 *        GTLRRecommender_GoogleCloudRecommenderV1beta1ValueMatcher. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1Operation_PathValueMatchers : GTLRObject
@end


/**
 *  Group of operations that need to be performed atomically.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1OperationGroup : GTLRObject

/**
 *  List of operations across one or more resources that belong to this group.
 *  Loosely based on RFC6902 and should be performed in the order they appear.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommender_GoogleCloudRecommenderV1beta1Operation *> *operations;

@end


/**
 *  A recommendation along with a suggested action. E.g., a rightsizing
 *  recommendation for an underutilized VM, IAM role recommendations, etc
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1Recommendation : GTLRObject

/**
 *  Optional set of additional impact that this recommendation may have when
 *  trying to optimize for the primary category. These may be positive
 *  or negative.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommender_GoogleCloudRecommenderV1beta1Impact *> *additionalImpact;

/**
 *  Content of the recommendation describing recommended changes to resources.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationContent *content;

/**
 *  Free-form human readable summary in English. The maximum length is 500
 *  characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of the Recommendation. Provides optimistic locking when
 *  updating states.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Last time this recommendation was refreshed by the system that created it
 *  in the first place.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastRefreshTime;

/**
 *  Name of recommendation.
 *  A project recommendation is represented as
 *  projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The primary impact that this recommendation can have while trying to
 *  optimize for one category.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1Impact *primaryImpact;

/**
 *  Contains an identifier for a subtype of recommendations produced for the
 *  same recommender. Subtype is a function of content and impact, meaning a
 *  new subtype might be added when significant changes to `content` or
 *  `primary_impact.category` are introduced. See the Recommenders section
 *  to see a list of subtypes for a given Recommender.
 *  Examples:
 *  For recommender = "google.iam.policy.Recommender",
 *  recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"
 */
@property(nonatomic, copy, nullable) NSString *recommenderSubtype;

/** Information for state. Contains state and metadata. */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo *stateInfo;

@end


/**
 *  Contains what resources are changing and how they are changing.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationContent : GTLRObject

/**
 *  Operations to one or more Google Cloud resources grouped in such a way
 *  that, all operations within one group are expected to be performed
 *  atomically and in an order.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommender_GoogleCloudRecommenderV1beta1OperationGroup *> *operationGroups;

@end


/**
 *  Information for state. Contains state and metadata.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo : GTLRObject

/**
 *  The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Active
 *        Recommendation is active and can be applied. Recommendations content
 *        can
 *        be updated by Google.
 *        ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Claimed
 *        Recommendation is in claimed state. Recommendations content is
 *        immutable and cannot be updated by Google.
 *        CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or
 *        FAILED. (Value: "CLAIMED")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Dismissed
 *        Recommendation is in dismissed state. Recommendation content can be
 *        updated by Google.
 *        DISMISSED recommendations can be marked as ACTIVE. (Value:
 *        "DISMISSED")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Failed
 *        Recommendation is in failed state. Recommendations content is
 *        immutable
 *        and cannot be updated by Google.
 *        FAILED recommendations can be marked as SUCCEEDED, or FAILED. (Value:
 *        "FAILED")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_StateUnspecified
 *        Default state. Don't use directly. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_State_Succeeded
 *        Recommendation is in succeeded state. Recommendations content is
 *        immutable and cannot be updated by Google.
 *        SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.
 *        (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  A map of metadata for the state, provided by user or automations systems.
 */
@property(nonatomic, strong, nullable) GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_StateMetadata *stateMetadata;

@end


/**
 *  A map of metadata for the state, provided by user or automations systems.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1RecommendationStateInfo_StateMetadata : GTLRObject
@end


/**
 *  Contains various matching options for values for a GCP resource field.
 */
@interface GTLRRecommender_GoogleCloudRecommenderV1beta1ValueMatcher : GTLRObject

/**
 *  To be used for full regex matching. The regular expression is using the
 *  Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be
 *  used with RE2::FullMatch
 */
@property(nonatomic, copy, nullable) NSString *matchesPattern;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRRecommender_GoogleTypeMoney : GTLRObject

/** The 3-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount.
 *  The value must be between -999,999,999 and +999,999,999 inclusive.
 *  If `units` is positive, `nanos` must be positive or zero.
 *  If `units` is zero, `nanos` can be positive, zero, or negative.
 *  If `units` is negative, `nanos` must be negative or zero.
 *  For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount.
 *  For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
