// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Resource Manager API (cloudresourcemanager/v3)
// Description:
//   Creates, reads, and updates metadata for Google Cloud Platform resource
//   containers.
// Documentation:
//   https://cloud.google.com/resource-manager

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudResourceManager_GetIamPolicyRequest;
@class GTLRCloudResourceManager_Lien;
@class GTLRCloudResourceManager_SetIamPolicyRequest;
@class GTLRCloudResourceManager_TagBinding;
@class GTLRCloudResourceManager_TagKey;
@class GTLRCloudResourceManager_TagValue;
@class GTLRCloudResourceManager_TestIamPermissionsRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Resource Manager query classes.
 */
@interface GTLRCloudResourceManagerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Create a Lien which applies to the resource denoted by the `parent` field.
 *  Callers of this method will require permission on the `parent` resource. For
 *  example, applying to `projects/1234` requires permission
 *  `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the
 *  number of Liens which may be applied.
 *
 *  Method: cloudresourcemanager.liens.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensCreate : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForLiensCreateWithObject:]

/**
 *  Fetches a @c GTLRCloudResourceManager_Lien.
 *
 *  Create a Lien which applies to the resource denoted by the `parent` field.
 *  Callers of this method will require permission on the `parent` resource. For
 *  example, applying to `projects/1234` requires permission
 *  `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the
 *  number of Liens which may be applied.
 *
 *  @param object The @c GTLRCloudResourceManager_Lien to include in the query.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Lien *)object;

@end

/**
 *  Delete a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.updateLiens`.
 *
 *  Method: cloudresourcemanager.liens.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensDelete : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForLiensDeleteWithname:]

/** Required. The name/identifier of the Lien to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Empty.
 *
 *  Delete a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.updateLiens`.
 *
 *  @param name Required. The name/identifier of the Lien to delete.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.get`
 *
 *  Method: cloudresourcemanager.liens.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensGet : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForLiensGetWithname:]

/** Required. The name/identifier of the Lien. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Lien.
 *
 *  Retrieve a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.get`
 *
 *  @param name Required. The name/identifier of the Lien.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List all Liens applied to the `parent` resource. Callers of this method will
 *  require permission on the `parent` resource. For example, a Lien with a
 *  `parent` of `projects/1234` requires permission
 *  `resourcemanager.projects.get`.
 *
 *  Method: cloudresourcemanager.liens.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensList : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForLiensList]

/**
 *  The maximum number of items to return. This is a suggestion for the server.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The `next_page_token` value returned from a previous List request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the resource to list all attached Liens. For example,
 *  `projects/1234`. (google.api.field_policy).resource_type annotation is not
 *  set since the parent depends on the meta api implementation. This field
 *  could be a project or other sub project resources.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListLiensResponse.
 *
 *  List all Liens applied to the `parent` resource. Callers of this method will
 *  require permission on the `parent` resource. For example, a Lien with a
 *  `parent` of `projects/1234` requires permission
 *  `resourcemanager.projects.get`.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudresourcemanager.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OperationsGet : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudResourceManagerQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a TagBinding between a TagValue and a cloud resource (currently
 *  project, folder, or organization).
 *
 *  Method: cloudresourcemanager.tagBindings.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsCreate : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagBindingsCreateWithObject:]

/**
 *  Optional. Set to true to perform the validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a TagBinding between a TagValue and a cloud resource (currently
 *  project, folder, or organization).
 *
 *  @param object The @c GTLRCloudResourceManager_TagBinding to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagBinding *)object;

@end

/**
 *  Deletes a TagBinding.
 *
 *  Method: cloudresourcemanager.tagBindings.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsDelete : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagBindingsDeleteWithname:]

/**
 *  Required. The name of the TagBinding. This is a String of the form:
 *  `tagBindings/{id}` (e.g.
 *  `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagBinding.
 *
 *  @param name Required. The name of the TagBinding. This is a String of the
 *    form: `tagBindings/{id}` (e.g.
 *    `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the TagBindings for the given cloud resource, as specified with
 *  `parent`. NOTE: The `parent` field is expected to be a full resource name:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *
 *  Method: cloudresourcemanager.tagBindings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsList : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagBindingsList]

/**
 *  Optional. The maximum number of TagBindings to return in the response. This
 *  is currently not used by the server and will return the full page even if a
 *  size is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `ListTagBindings` that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The full resource name of a resource for which you want to list
 *  existing TagBindings. E.g.
 *  "//cloudresourcemanager.googleapis.com/projects/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagBindingsResponse.
 *
 *  Lists the TagBindings for the given cloud resource, as specified with
 *  `parent`. NOTE: The `parent` field is expected to be a full resource name:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new TagKey. If another request with the same parameters is sent
 *  while the original request is in process, the second request will receive an
 *  error. A maximum of 300 TagKeys can exist under a parent at any given time.
 *
 *  Method: cloudresourcemanager.tagKeys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysCreate : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysCreateWithObject:]

/**
 *  Optional. Set to true to perform validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a new TagKey. If another request with the same parameters is sent
 *  while the original request is in process, the second request will receive an
 *  error. A maximum of 300 TagKeys can exist under a parent at any given time.
 *
 *  @param object The @c GTLRCloudResourceManager_TagKey to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object;

@end

/**
 *  Deletes a TagKey. The TagKey cannot be deleted if it has any child
 *  TagValues.
 *
 *  Method: cloudresourcemanager.tagKeys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysDelete : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysDeleteWithname:]

/**
 *  Optional. The etag known to the client for the expected state of the TagKey.
 *  This is to be used for optimistic concurrency.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The resource name of a TagKey to be deleted in the format
 *  `tagKeys/123`. The TagKey cannot be a parent of any existing TagValues or it
 *  will not be deleted successfully.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Set as true to perform validations necessary for deletion, but not
 *  actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagKey. The TagKey cannot be deleted if it has any child
 *  TagValues.
 *
 *  @param name Required. The resource name of a TagKey to be deleted in the
 *    format `tagKeys/123`. The TagKey cannot be a parent of any existing
 *    TagValues or it will not be deleted successfully.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key
 *  does not exist or the user does not have permission to view it.
 *
 *  Method: cloudresourcemanager.tagKeys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysGet : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysGetWithname:]

/**
 *  Required. A resource name in the format `tagKeys/{id}`, such as
 *  `tagKeys/123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_TagKey.
 *
 *  Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key
 *  does not exist or the user does not have permission to view it.
 *
 *  @param name Required. A resource name in the format `tagKeys/{id}`, such as
 *    `tagKeys/123`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a TagKey. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagKey's resource name. For example, "tagKeys/1234". The caller must
 *  have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission
 *  on the specified TagKey.
 *
 *  Method: cloudresourcemanager.tagKeys.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for a TagKey. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagKey's resource name. For example, "tagKeys/1234". The caller must
 *  have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission
 *  on the specified TagKey.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all TagKeys for a parent resource.
 *
 *  Method: cloudresourcemanager.tagKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysList : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysList]

/**
 *  Optional. The maximum number of TagKeys to return in the response. This is
 *  currently not used by the server and will return the full page even if a
 *  size is specified currently.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to `ListTagKey`
 *  that indicates where this listing should continue from. This is currently
 *  not used by the server.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the new TagKey's parent. Must be of the form
 *  `folders/{folder_id}` or `organizations/{org_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagKeysResponse.
 *
 *  Lists all TagKeys for a parent resource.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the attributes of the TagKey resource.
 *
 *  Method: cloudresourcemanager.tagKeys.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysPatch : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysPatchWithObject:name:]

/**
 *  Immutable. The resource name for a TagKey. Must be in the format
 *  `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
 *  the TagKey.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fields to be updated. The mask may only contain `description` or `etag`. If
 *  omitted entirely, both `description` and `etag` are assumed to be
 *  significant.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Set as true to perform validations necessary for updating the resource, but
 *  not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates the attributes of the TagKey resource.
 *
 *  @param object The @c GTLRCloudResourceManager_TagKey to include in the
 *    query.
 *  @param name Immutable. The resource name for a TagKey. Must be in the format
 *    `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
 *    the TagKey.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on a TagKey, replacing any existing policy.
 *  The `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy`
 *  permission on the identified tagValue.
 *
 *  Method: cloudresourcemanager.tagKeys.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on a TagKey, replacing any existing policy.
 *  The `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy`
 *  permission on the identified tagValue.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified TagKey. The
 *  `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". There are no permissions required for making this API call.
 *
 *  Method: cloudresourcemanager.tagKeys.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagKeysTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified TagKey. The
 *  `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". There are no permissions required for making this API call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a TagValue as a child of the specified TagKey. If a another request
 *  with the same parameters is sent while the original request is in process
 *  the second request will receive an error. A maximum of 300 TagValues can
 *  exist under a TagKey at any given time.
 *
 *  Method: cloudresourcemanager.tagValues.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesCreate : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesCreateWithObject:]

/**
 *  Optional. Set as true to perform the validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a TagValue as a child of the specified TagKey. If a another request
 *  with the same parameters is sent while the original request is in process
 *  the second request will receive an error. A maximum of 300 TagValues can
 *  exist under a TagKey at any given time.
 *
 *  @param object The @c GTLRCloudResourceManager_TagValue to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object;

@end

/**
 *  Deletes a TagValue. The TagValue cannot have any bindings when it is
 *  deleted.
 *
 *  Method: cloudresourcemanager.tagValues.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesDelete : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesDeleteWithname:]

/**
 *  Optional. The etag known to the client for the expected state of the
 *  TagValue. This is to be used for optimistic concurrency.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Resource name for TagValue to be deleted in the format
 *  tagValues/456.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Set as true to perform the validations necessary for deletion, but
 *  not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagValue. The TagValue cannot have any bindings when it is
 *  deleted.
 *
 *  @param name Required. Resource name for TagValue to be deleted in the format
 *    tagValues/456.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves TagValue. If the TagValue or namespaced name does not exist, or if
 *  the user does not have permission to view it, this method will return
 *  `PERMISSION_DENIED`.
 *
 *  Method: cloudresourcemanager.tagValues.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesGet : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesGetWithname:]

/**
 *  Required. Resource name for TagValue to be fetched in the format
 *  `tagValues/456`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_TagValue.
 *
 *  Retrieves TagValue. If the TagValue or namespaced name does not exist, or if
 *  the user does not have permission to view it, this method will return
 *  `PERMISSION_DENIED`.
 *
 *  @param name Required. Resource name for TagValue to be fetched in the format
 *    `tagValues/456`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a TagValue. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagValue's resource name. For example: `tagValues/1234`. The caller must
 *  have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy`
 *  permission on the identified TagValue to get the access control policy.
 *
 *  Method: cloudresourcemanager.tagValues.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesGetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being requested. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for a TagValue. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagValue's resource name. For example: `tagValues/1234`. The caller must
 *  have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy`
 *  permission on the identified TagValue to get the access control policy.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all TagValues for a specific TagKey.
 *
 *  Method: cloudresourcemanager.tagValues.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesList : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesList]

/**
 *  Optional. The maximum number of TagValues to return in the response. This is
 *  currently not used by the server and will return the full page even if a
 *  size is specified currently.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `ListTagValues` that indicates where this listing should continue from. This
 *  is currently not used by the server.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Resource name for TagKey, parent of the TagValues to be listed, in
 *  the format `tagKeys/123`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagValuesResponse.
 *
 *  Lists all TagValues for a specific TagKey.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the attributes of the TagValue resource.
 *
 *  Method: cloudresourcemanager.tagValues.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesPatch : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesPatchWithObject:name:]

/** Immutable. Resource name for TagValue in the format `tagValues/456`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. True to perform validations necessary for updating the resource,
 *  but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates the attributes of the TagValue resource.
 *
 *  @param object The @c GTLRCloudResourceManager_TagValue to include in the
 *    query.
 *  @param name Immutable. Resource name for TagValue in the format
 *    `tagValues/456`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on a TagValue, replacing any existing policy.
 *  The `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. The caller must have
 *  `resourcemanager.tagValues.setIamPolicy` permission on the identified
 *  tagValue.
 *
 *  Method: cloudresourcemanager.tagValues.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified. See the
 *  operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on a TagValue, replacing any existing policy.
 *  The `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. The caller must have
 *  `resourcemanager.tagValues.setIamPolicy` permission on the identified
 *  tagValue.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified TagValue. The
 *  `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. There are no permissions required for making this API
 *  call.
 *
 *  Method: cloudresourcemanager.tagValues.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions : GTLRCloudResourceManagerQuery
// Previous library name was
//   +[GTLQueryCloudResourceManager queryForTagValuesTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified TagValue. The
 *  `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. There are no permissions required for making this API
 *  call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See the operation documentation for the appropriate value for
 *    this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
