// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Resource Manager API (cloudresourcemanager/v3)
// Description:
//   Creates, reads, and updates metadata for Google Cloud Platform resource
//   containers.
// Documentation:
//   https://cloud.google.com/resource-manager

#import "GTLRCloudResourceManagerQuery.h"

#import "GTLRCloudResourceManagerObjects.h"

@implementation GTLRCloudResourceManagerQuery

@dynamic fields;

@end

@implementation GTLRCloudResourceManagerQuery_LiensCreate

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Lien *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v3/liens";
  GTLRCloudResourceManagerQuery_LiensCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudResourceManager_Lien class];
  query.loggingName = @"cloudresourcemanager.liens.create";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_LiensDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_LiensDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Empty class];
  query.loggingName = @"cloudresourcemanager.liens.delete";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_LiensGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_LiensGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Lien class];
  query.loggingName = @"cloudresourcemanager.liens.get";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_LiensList

@dynamic pageSize, pageToken, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v3/liens";
  GTLRCloudResourceManagerQuery_LiensList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudResourceManager_ListLiensResponse class];
  query.loggingName = @"cloudresourcemanager.liens.list";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.operations.get";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagBindingsCreate

@dynamic validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagBinding *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v3/tagBindings";
  GTLRCloudResourceManagerQuery_TagBindingsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagBindings.create";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagBindingsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagBindingsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagBindings.delete";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagBindingsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v3/tagBindings";
  GTLRCloudResourceManagerQuery_TagBindingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudResourceManager_ListTagBindingsResponse class];
  query.loggingName = @"cloudresourcemanager.tagBindings.list";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysCreate

@dynamic validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v3/tagKeys";
  GTLRCloudResourceManagerQuery_TagKeysCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagKeys.create";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysDelete

@dynamic ETag, name, validateOnly;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagKeysDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagKeys.delete";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagKeysGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_TagKey class];
  query.loggingName = @"cloudresourcemanager.tagKeys.get";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:getIamPolicy";
  GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_Policy class];
  query.loggingName = @"cloudresourcemanager.tagKeys.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysList

@dynamic pageSize, pageToken, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v3/tagKeys";
  GTLRCloudResourceManagerQuery_TagKeysList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudResourceManager_ListTagKeysResponse class];
  query.loggingName = @"cloudresourcemanager.tagKeys.list";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagKeysPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagKeys.patch";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:setIamPolicy";
  GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_Policy class];
  query.loggingName = @"cloudresourcemanager.tagKeys.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:testIamPermissions";
  GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_TestIamPermissionsResponse class];
  query.loggingName = @"cloudresourcemanager.tagKeys.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesCreate

@dynamic validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v3/tagValues";
  GTLRCloudResourceManagerQuery_TagValuesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagValues.create";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesDelete

@dynamic ETag, name, validateOnly;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagValuesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagValues.delete";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagValuesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_TagValue class];
  query.loggingName = @"cloudresourcemanager.tagValues.get";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:getIamPolicy";
  GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_Policy class];
  query.loggingName = @"cloudresourcemanager.tagValues.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v3/tagValues";
  GTLRCloudResourceManagerQuery_TagValuesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudResourceManager_ListTagValuesResponse class];
  query.loggingName = @"cloudresourcemanager.tagValues.list";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v3/{+name}";
  GTLRCloudResourceManagerQuery_TagValuesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudResourceManager_Operation class];
  query.loggingName = @"cloudresourcemanager.tagValues.patch";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:setIamPolicy";
  GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_Policy class];
  query.loggingName = @"cloudresourcemanager.tagValues.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v3/{+resource}:testIamPermissions";
  GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudResourceManager_TestIamPermissionsResponse class];
  query.loggingName = @"cloudresourcemanager.tagValues.testIamPermissions";
  return query;
}

@end
