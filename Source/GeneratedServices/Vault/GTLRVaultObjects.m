// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   G Suite Vault API (vault/v1)
// Description:
//   Archiving and eDiscovery for G Suite.
// Documentation:
//   https://developers.google.com/vault

#import "GTLRVaultObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRVault_Hold.corpus
NSString * const kGTLRVault_Hold_Corpus_CorpusTypeUnspecified = @"CORPUS_TYPE_UNSPECIFIED";
NSString * const kGTLRVault_Hold_Corpus_Drive                 = @"DRIVE";
NSString * const kGTLRVault_Hold_Corpus_Groups                = @"GROUPS";
NSString * const kGTLRVault_Hold_Corpus_HangoutsChat          = @"HANGOUTS_CHAT";
NSString * const kGTLRVault_Hold_Corpus_Mail                  = @"MAIL";

// GTLRVault_Matter.state
NSString * const kGTLRVault_Matter_State_Closed           = @"CLOSED";
NSString * const kGTLRVault_Matter_State_Deleted          = @"DELETED";
NSString * const kGTLRVault_Matter_State_Open             = @"OPEN";
NSString * const kGTLRVault_Matter_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRVault_MatterPermission.role
NSString * const kGTLRVault_MatterPermission_Role_Collaborator = @"COLLABORATOR";
NSString * const kGTLRVault_MatterPermission_Role_Owner        = @"OWNER";
NSString * const kGTLRVault_MatterPermission_Role_RoleUnspecified = @"ROLE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRVault_AddMatterPermissionsRequest
//

@implementation GTLRVault_AddMatterPermissionsRequest
@dynamic ccMe, matterPermission, sendEmails;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_CloseMatterRequest
//

@implementation GTLRVault_CloseMatterRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_CloseMatterResponse
//

@implementation GTLRVault_CloseMatterResponse
@dynamic matter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_CorpusQuery
//

@implementation GTLRVault_CorpusQuery
@dynamic driveQuery, groupsQuery, hangoutsChatQuery, mailQuery;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_Empty
//

@implementation GTLRVault_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldAccount
//

@implementation GTLRVault_HeldAccount
@dynamic accountId, holdTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldDriveQuery
//

@implementation GTLRVault_HeldDriveQuery
@dynamic includeTeamDriveFiles;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldGroupsQuery
//

@implementation GTLRVault_HeldGroupsQuery
@dynamic endTime, startTime, terms;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldHangoutsChatQuery
//

@implementation GTLRVault_HeldHangoutsChatQuery
@dynamic includeRooms;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldMailQuery
//

@implementation GTLRVault_HeldMailQuery
@dynamic endTime, startTime, terms;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_HeldOrgUnit
//

@implementation GTLRVault_HeldOrgUnit
@dynamic holdTime, orgUnitId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_Hold
//

@implementation GTLRVault_Hold
@dynamic accounts, corpus, holdId, name, orgUnit, query, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accounts" : [GTLRVault_HeldAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_ListHeldAccountsResponse
//

@implementation GTLRVault_ListHeldAccountsResponse
@dynamic accounts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accounts" : [GTLRVault_HeldAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_ListHoldsResponse
//

@implementation GTLRVault_ListHoldsResponse
@dynamic holds, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"holds" : [GTLRVault_Hold class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"holds";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_ListMattersResponse
//

@implementation GTLRVault_ListMattersResponse
@dynamic matters, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matters" : [GTLRVault_Matter class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"matters";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_Matter
//

@implementation GTLRVault_Matter
@dynamic descriptionProperty, matterId, matterPermissions, name, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matterPermissions" : [GTLRVault_MatterPermission class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_MatterPermission
//

@implementation GTLRVault_MatterPermission
@dynamic accountId, role;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_RemoveMatterPermissionsRequest
//

@implementation GTLRVault_RemoveMatterPermissionsRequest
@dynamic accountId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_ReopenMatterRequest
//

@implementation GTLRVault_ReopenMatterRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_ReopenMatterResponse
//

@implementation GTLRVault_ReopenMatterResponse
@dynamic matter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVault_UndeleteMatterRequest
//

@implementation GTLRVault_UndeleteMatterRequest
@end
