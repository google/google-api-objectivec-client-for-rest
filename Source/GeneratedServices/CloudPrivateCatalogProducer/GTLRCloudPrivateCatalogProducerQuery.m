// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Private Catalog Producer API (cloudprivatecatalogproducer/v1beta1)
// Description:
//   Enables cloud users to manage and share enterprise catalogs intheir
//   organizations.
// Documentation:
//   https://sites.google.com/corp/google.com/cloudprivatecatalog

#import "GTLRCloudPrivateCatalogProducerQuery.h"

#import "GTLRCloudPrivateCatalogProducerObjects.h"

@implementation GTLRCloudPrivateCatalogProducerQuery

@dynamic fields;

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/associations";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Association class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.associations.create";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.associations.delete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Association class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.associations.get";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/associations";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.associations.list";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsCreate

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"v1beta1/catalogs";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.create";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.delete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.get";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1beta1/{+resource}:getIamPolicy";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleIamV1Policy class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1beta1/catalogs";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.list";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.patch";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCopy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:copy";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCopy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.copy";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/products";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.create";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.delete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.get";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsIconsUpload

@dynamic product;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest *)object
                        product:(NSString *)product {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"product" ];
  NSString *pathURITemplate = @"v1beta1/{+product}/icons:upload";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsIconsUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.product = product;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.icons.upload";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/products";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.list";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.patch";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/versions";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.versions.create";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.versions.delete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.versions.get";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/versions";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.versions.list";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.products.versions.patch";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1beta1/{+resource}:setIamPolicy";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleIamV1Policy class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1beta1/{+resource}:testIamPermissions";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_CatalogsUndelete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:undelete";
  GTLRCloudPrivateCatalogProducerQuery_CatalogsUndelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog class];
  query.loggingName = @"cloudprivatecatalogproducer.catalogs.undelete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_OperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:cancel";
  GTLRCloudPrivateCatalogProducerQuery_OperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.operations.cancel";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_OperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_OperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty class];
  query.loggingName = @"cloudprivatecatalogproducer.operations.delete";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRCloudPrivateCatalogProducerQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation class];
  query.loggingName = @"cloudprivatecatalogproducer.operations.get";
  return query;
}

@end

@implementation GTLRCloudPrivateCatalogProducerQuery_OperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1beta1/operations";
  GTLRCloudPrivateCatalogProducerQuery_OperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudPrivateCatalogProducer_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"cloudprivatecatalogproducer.operations.list";
  return query;
}

@end
