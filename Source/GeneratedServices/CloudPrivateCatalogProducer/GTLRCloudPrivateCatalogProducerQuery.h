// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Private Catalog Producer API (cloudprivatecatalogproducer/v1beta1)
// Description:
//   Enables cloud users to manage and share enterprise catalogs intheir
//   organizations.
// Documentation:
//   https://sites.google.com/corp/google.com/cloudprivatecatalog

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version;
@class GTLRCloudPrivateCatalogProducer_GoogleIamV1SetIamPolicyRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsRequest;
@class GTLRCloudPrivateCatalogProducer_GoogleLongrunningCancelOperationRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud PrivateCatalog Producer query classes.
 */
@interface GTLRCloudPrivateCatalogProducerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an Association instance under a given Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.associations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsCreate : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsAssociationsCreateWithObject:parent:]

/** The `Catalog` resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Association.
 *
 *  Creates an Association instance under a given Catalog.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest
 *    to include in the query.
 *  @param parent The `Catalog` resource's name.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the given Association.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.associations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsDelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsAssociationsDeleteWithname:]

/** The resource name of the `Association` to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Deletes the given Association.
 *
 *  @param name The resource name of the `Association` to delete.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the requested Association resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.associations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsGet : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsAssociationsGetWithname:]

/** The resource name of the `Association` to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Association.
 *
 *  Returns the requested Association resource.
 *
 *  @param name The resource name of the `Association` to retrieve.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all Association resources under a catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.associations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsList : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsAssociationsListWithparent:]

/** The maximum number of catalog associations to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from the previous call to
 *  `ListAssociations`.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The resource name of the `Catalog` whose `Associations` are
 *  being retrieved. In the format `catalogs/<catalog>`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse.
 *
 *  Lists all Association resources under a catalog.
 *
 *  @param parent The resource name of the `Catalog` whose `Associations` are
 *    being retrieved. In the format `catalogs/<catalog>`.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsAssociationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new Catalog resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsCreate : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsCreateWithObject:]

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation.
 *
 *  Creates a new Catalog resource.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog
 *    to include in the query.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog *)object;

@end

/**
 *  Soft deletes an existing Catalog and all resources under it.
 *  The catalog can only be deleted if there is no associations under it or
 *  DeleteCatalogRequest.force is true. The delete operation
 *  can be recovered by the PrivateCatalogProducer.UndeleteCatalog
 *  method.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsDelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsDeleteWithname:]

/**
 *  Forces deletion of the `Catalog` and its `Association` resources.
 *  If the `Catalog` is still associated with other resources and
 *  force is not set to true, then the operation fails.
 */
@property(nonatomic, assign) BOOL force;

/** The resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog.
 *
 *  Soft deletes an existing Catalog and all resources under it.
 *  The catalog can only be deleted if there is no associations under it or
 *  DeleteCatalogRequest.force is true. The delete operation
 *  can be recovered by the PrivateCatalogProducer.UndeleteCatalog
 *  method.
 *
 *  @param name The resource name of the catalog.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the requested Catalog resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsGet : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsGetWithname:]

/** The resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog.
 *
 *  Returns the requested Catalog resource.
 *
 *  @param name The resource name of the catalog.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets IAM policy for the specified Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsGetIamPolicy : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsGetIamPolicyWithresource:]

/**
 *  REQUIRED: The resource for which the policy is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleIamV1Policy.
 *
 *  Gets IAM policy for the specified Catalog.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Catalog resources that the producer has access to, within the
 *  scope of the parent resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsList : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsList]

/** The maximum number of catalogs to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous call to ListCatalogs
 *  that indicates where this listing should continue from.
 *  This field is optional.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The resource name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse.
 *
 *  Lists Catalog resources that the producer has access to, within the
 *  scope of the parent resource.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates a specific Catalog resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsPatch : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsPatchWithObject:name:]

/**
 *  Output only. The resource name of the catalog, in the format
 *  `catalogs/{catalog_id}'.
 *  A unique identifier for the catalog, which is generated
 *  by catalog service.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask that controls which fields of the catalog should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog.
 *
 *  Updates a specific Catalog resource.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog
 *    to include in the query.
 *  @param name Output only. The resource name of the catalog, in the format
 *    `catalogs/{catalog_id}'.
 *    A unique identifier for the catalog, which is generated
 *    by catalog service.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog *)object
                           name:(NSString *)name;

@end

/**
 *  Copies a Product under another Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.copy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCopy : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsCopyWithObject:name:]

/** The resource name of the current product that is copied from. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation.
 *
 *  Copies a Product under another Catalog.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest
 *    to include in the query.
 *  @param name The resource name of the current product that is copied from.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCopy
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Product instance under a given Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCreate : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsCreateWithObject:parent:]

/** The catalog name of the new product's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product.
 *
 *  Creates a Product instance under a given Catalog.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product
 *    to include in the query.
 *  @param parent The catalog name of the new product's parent.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product *)object
                         parent:(NSString *)parent;

@end

/**
 *  Hard deletes a Product.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsDelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsDeleteWithname:]

/** The resource name of the product. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Hard deletes a Product.
 *
 *  @param name The resource name of the product.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the requested Product resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsGet : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsGetWithname:]

/** The resource name of the product. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product.
 *
 *  Returns the requested Product resource.
 *
 *  @param name The resource name of the product.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an Icon instance under a given Product.
 *  If Product only has a default icon, a new Icon
 *  instance is created and associated with the given Product.
 *  If Product already has a non-default icon, the action creates
 *  a new Icon instance, associates the newly created
 *  Icon with the given Product and deletes the old icon.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.icons.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsIconsUpload : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsIconsUploadWithObject:product:]

/** The resource name of the product. */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Creates an Icon instance under a given Product.
 *  If Product only has a default icon, a new Icon
 *  instance is created and associated with the given Product.
 *  If Product already has a non-default icon, the action creates
 *  a new Icon instance, associates the newly created
 *  Icon with the given Product and deletes the old icon.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest
 *    to include in the query.
 *  @param product The resource name of the product.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsIconsUpload
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Lists Product resources that the producer has access to, within the
 *  scope of the parent catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsList : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsListWithparent:]

/**
 *  A filter expression used to restrict the returned results based
 *  upon properties of the product.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The maximum number of products to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous call to ListProducts
 *  that indicates where this listing should continue from.
 *  This field is optional.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The resource name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse.
 *
 *  Lists Product resources that the producer has access to, within the
 *  scope of the parent catalog.
 *
 *  @param parent The resource name of the parent resource.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a specific Product resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsPatch : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsPatchWithObject:name:]

/**
 *  Required. The resource name of the product in the format
 *  `catalogs/{catalog_id}/products/a-z*[a-z0-9]'.
 *  A unique identifier for the product under a catalog, which cannot
 *  be changed after the product is created. The final
 *  segment of the name must between 1 and 256 characters in length.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask that controls which fields of the product should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product.
 *
 *  Updates a specific Product resource.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product
 *    to include in the query.
 *  @param name Required. The resource name of the product in the format
 *    `catalogs/{catalog_id}/products/a-z*[a-z0-9]'.
 *    A unique identifier for the product under a catalog, which cannot
 *    be changed after the product is created. The final
 *    segment of the name must between 1 and 256 characters in length.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Product *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Version instance under a given Product.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsCreate : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsVersionsCreateWithObject:parent:]

/** The product name of the new version's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation.
 *
 *  Creates a Version instance under a given Product.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version
 *    to include in the query.
 *  @param parent The product name of the new version's parent.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version *)object
                         parent:(NSString *)parent;

@end

/**
 *  Hard deletes a Version.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.versions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsDelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsVersionsDeleteWithname:]

/** The resource name of the version. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Hard deletes a Version.
 *
 *  @param name The resource name of the version.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the requested Version resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsGet : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsVersionsGetWithname:]

/** The resource name of the version. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version.
 *
 *  Returns the requested Version resource.
 *
 *  @param name The resource name of the version.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Version resources that the producer has access to, within the
 *  scope of the parent Product.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsList : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsVersionsListWithparent:]

/** The maximum number of versions to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous call to ListVersions
 *  that indicates where this listing should continue from.
 *  This field is optional.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The resource name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse.
 *
 *  Lists Version resources that the producer has access to, within the
 *  scope of the parent Product.
 *
 *  @param parent The resource name of the parent resource.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a specific Version resource.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.products.versions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsPatch : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsProductsVersionsPatchWithObject:name:]

/**
 *  Required. The resource name of the version, in the format
 *  `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.
 *  A unique identifier for the version under a product, which can't
 *  be changed after the version is created. The final segment of the name must
 *  between 1 and 63 characters in length.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask that controls which fields of the version should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version.
 *
 *  Updates a specific Version resource.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version
 *    to include in the query.
 *  @param name Required. The resource name of the version, in the format
 *    `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.
 *    A unique identifier for the version under a product, which can't
 *    be changed after the version is created. The final segment of the name
 *    must
 *    between 1 and 63 characters in length.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsProductsVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Version *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy for the specified Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsSetIamPolicy : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsSetIamPolicyWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy is being specified.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleIamV1Policy.
 *
 *  Sets the IAM policy for the specified Catalog.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleIamV1SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Tests the IAM permissions for the specified Catalog.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsTestIamPermissions : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsTestIamPermissionsWithObject:resource:]

/**
 *  REQUIRED: The resource for which the policy detail is being requested.
 *  See the operation documentation for the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Tests the IAM permissions for the specified Catalog.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested.
 *    See the operation documentation for the appropriate value for this field.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Undeletes a deleted Catalog and all resources under it.
 *
 *  Method: cloudprivatecatalogproducer.catalogs.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_CatalogsUndelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForCatalogsUndeleteWithObject:name:]

/** The resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1Catalog.
 *
 *  Undeletes a deleted Catalog and all resources under it.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest
 *    to include in the query.
 *  @param name The resource name of the catalog.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_CatalogsUndelete
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not
 *  guaranteed. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use
 *  Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation,
 *  the operation is not deleted; instead, it becomes an operation with
 *  an Operation.error value with a google.rpc.Status.code of 1,
 *  corresponding to `Code.CANCELLED`.
 *
 *  Method: cloudprivatecatalogproducer.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_OperationsCancel : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForOperationsCancelWithObject:name:]

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not
 *  guaranteed. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use
 *  Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation,
 *  the operation is not deleted; instead, it becomes an operation with
 *  an Operation.error value with a google.rpc.Status.code of 1,
 *  corresponding to `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRCloudPrivateCatalogProducer_GoogleLongrunningCancelOperationRequest to
 *    include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_OperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudPrivateCatalogProducer_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: cloudprivatecatalogproducer.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_OperationsDelete : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForOperationsDeleteWithname:]

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_OperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudprivatecatalogproducer.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_OperationsGet : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForOperationsGetWithname:]

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudPrivateCatalogProducer_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  Method: cloudprivatecatalogproducer.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudPrivateCatalogProducerCloudPlatform
 */
@interface GTLRCloudPrivateCatalogProducerQuery_OperationsList : GTLRCloudPrivateCatalogProducerQuery
// Previous library name was
//   +[GTLQueryCloudPrivateCatalogProducer queryForOperationsList]

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRCloudPrivateCatalogProducer_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *  NOTE: the `name` binding allows API services to override the binding
 *  to use different resource name schemes, such as `users/ * /operations`. To
 *  override the binding, API services can add a binding such as
 *  `"/v1/{name=users/ *}/operations"` to their service configuration.
 *  For backwards compatibility, the default name includes the operations
 *  collection id, however overriding users must ensure the name binding
 *  is the parent resource, without the operations collection id.
 *
 *  @return GTLRCloudPrivateCatalogProducerQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
