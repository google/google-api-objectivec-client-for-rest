// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Datastream API (datastream/v1alpha1)
// Documentation:
//   https://cloud.google.com/datastream/

#import "GTLRDatastreamObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRDatastream_GcsDestinationConfig.gcsFileFormat
NSString * const kGTLRDatastream_GcsDestinationConfig_GcsFileFormat_Avro = @"AVRO";
NSString * const kGTLRDatastream_GcsDestinationConfig_GcsFileFormat_GcsFileFormatUnspecified = @"GCS_FILE_FORMAT_UNSPECIFIED";

// GTLRDatastream_JsonFileFormat.compression
NSString * const kGTLRDatastream_JsonFileFormat_Compression_Gzip = @"GZIP";
NSString * const kGTLRDatastream_JsonFileFormat_Compression_JsonCompressionUnspecified = @"JSON_COMPRESSION_UNSPECIFIED";
NSString * const kGTLRDatastream_JsonFileFormat_Compression_NoCompression = @"NO_COMPRESSION";

// GTLRDatastream_JsonFileFormat.schemaFileFormat
NSString * const kGTLRDatastream_JsonFileFormat_SchemaFileFormat_AvroSchemaFile = @"AVRO_SCHEMA_FILE";
NSString * const kGTLRDatastream_JsonFileFormat_SchemaFileFormat_NoSchemaFile = @"NO_SCHEMA_FILE";
NSString * const kGTLRDatastream_JsonFileFormat_SchemaFileFormat_SchemaFileFormatUnspecified = @"SCHEMA_FILE_FORMAT_UNSPECIFIED";

// GTLRDatastream_PrivateConnection.state
NSString * const kGTLRDatastream_PrivateConnection_State_Created = @"CREATED";
NSString * const kGTLRDatastream_PrivateConnection_State_Creating = @"CREATING";
NSString * const kGTLRDatastream_PrivateConnection_State_Deleting = @"DELETING";
NSString * const kGTLRDatastream_PrivateConnection_State_Failed = @"FAILED";
NSString * const kGTLRDatastream_PrivateConnection_State_FailedToDelete = @"FAILED_TO_DELETE";
NSString * const kGTLRDatastream_PrivateConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDatastream_Stream.state
NSString * const kGTLRDatastream_Stream_State_Created          = @"CREATED";
NSString * const kGTLRDatastream_Stream_State_Draining         = @"DRAINING";
NSString * const kGTLRDatastream_Stream_State_Failed           = @"FAILED";
NSString * const kGTLRDatastream_Stream_State_FailedPermanently = @"FAILED_PERMANENTLY";
NSString * const kGTLRDatastream_Stream_State_Maintenance      = @"MAINTENANCE";
NSString * const kGTLRDatastream_Stream_State_Paused           = @"PAUSED";
NSString * const kGTLRDatastream_Stream_State_Running          = @"RUNNING";
NSString * const kGTLRDatastream_Stream_State_Starting         = @"STARTING";
NSString * const kGTLRDatastream_Stream_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDatastream_Validation.status
NSString * const kGTLRDatastream_Validation_Status_Failed      = @"FAILED";
NSString * const kGTLRDatastream_Validation_Status_NotExecuted = @"NOT_EXECUTED";
NSString * const kGTLRDatastream_Validation_Status_Passed      = @"PASSED";
NSString * const kGTLRDatastream_Validation_Status_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRDatastream_ValidationMessage.level
NSString * const kGTLRDatastream_ValidationMessage_Level_Error = @"ERROR";
NSString * const kGTLRDatastream_ValidationMessage_Level_LevelUnspecified = @"LEVEL_UNSPECIFIED";
NSString * const kGTLRDatastream_ValidationMessage_Level_Warning = @"WARNING";

// ----------------------------------------------------------------------------
//
//   GTLRDatastream_AvroFileFormat
//

@implementation GTLRDatastream_AvroFileFormat
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_BackfillAllStrategy
//

@implementation GTLRDatastream_BackfillAllStrategy
@dynamic mysqlExcludedObjects, oracleExcludedObjects;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_BackfillNoneStrategy
//

@implementation GTLRDatastream_BackfillNoneStrategy
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_CancelOperationRequest
//

@implementation GTLRDatastream_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ConnectionProfile
//

@implementation GTLRDatastream_ConnectionProfile
@dynamic createTime, displayName, forwardSshConnectivity, gcsProfile, labels,
         mysqlProfile, name, noConnectivity, oracleProfile, privateConnectivity,
         staticServiceIpConnectivity, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ConnectionProfile_Labels
//

@implementation GTLRDatastream_ConnectionProfile_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_DestinationConfig
//

@implementation GTLRDatastream_DestinationConfig
@dynamic destinationConnectionProfileName, gcsDestinationConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_DiscoverConnectionProfileRequest
//

@implementation GTLRDatastream_DiscoverConnectionProfileRequest
@dynamic connectionProfile, connectionProfileName, mysqlRdbms, oracleRdbms,
         recursionDepth, recursive;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_DiscoverConnectionProfileResponse
//

@implementation GTLRDatastream_DiscoverConnectionProfileResponse
@dynamic mysqlRdbms, oracleRdbms;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Empty
//

@implementation GTLRDatastream_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Error
//

@implementation GTLRDatastream_Error
@dynamic details, errorTime, errorUuid, message, reason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Error_Details
//

@implementation GTLRDatastream_Error_Details

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_FetchErrorsRequest
//

@implementation GTLRDatastream_FetchErrorsRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_FetchErrorsResponse
//

@implementation GTLRDatastream_FetchErrorsResponse
@dynamic errors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRDatastream_Error class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_FetchStaticIpsResponse
//

@implementation GTLRDatastream_FetchStaticIpsResponse
@dynamic nextPageToken, staticIps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"staticIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ForwardSshTunnelConnectivity
//

@implementation GTLRDatastream_ForwardSshTunnelConnectivity
@dynamic hostname, password, port, privateKey, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_GcsDestinationConfig
//

@implementation GTLRDatastream_GcsDestinationConfig
@dynamic avroFileFormat, fileRotationInterval, fileRotationMb, gcsFileFormat,
         jsonFileFormat, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_GcsProfile
//

@implementation GTLRDatastream_GcsProfile
@dynamic bucketName, rootPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_JsonFileFormat
//

@implementation GTLRDatastream_JsonFileFormat
@dynamic compression, schemaFileFormat;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListConnectionProfilesResponse
//

@implementation GTLRDatastream_ListConnectionProfilesResponse
@dynamic connectionProfiles, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connectionProfiles" : [GTLRDatastream_ConnectionProfile class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"connectionProfiles";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListLocationsResponse
//

@implementation GTLRDatastream_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRDatastream_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListOperationsResponse
//

@implementation GTLRDatastream_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDatastream_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListPrivateConnectionsResponse
//

@implementation GTLRDatastream_ListPrivateConnectionsResponse
@dynamic nextPageToken, privateConnections, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"privateConnections" : [GTLRDatastream_PrivateConnection class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"privateConnections";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListRoutesResponse
//

@implementation GTLRDatastream_ListRoutesResponse
@dynamic nextPageToken, routes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routes" : [GTLRDatastream_Route class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"routes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ListStreamsResponse
//

@implementation GTLRDatastream_ListStreamsResponse
@dynamic nextPageToken, streams, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"streams" : [GTLRDatastream_Stream class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"streams";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Location
//

@implementation GTLRDatastream_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Location_Labels
//

@implementation GTLRDatastream_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Location_Metadata
//

@implementation GTLRDatastream_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlColumn
//

@implementation GTLRDatastream_MysqlColumn
@dynamic collation, columnName, dataType, length, nullable, ordinalPosition,
         primaryKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlDatabase
//

@implementation GTLRDatastream_MysqlDatabase
@dynamic databaseName, mysqlTables;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mysqlTables" : [GTLRDatastream_MysqlTable class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlProfile
//

@implementation GTLRDatastream_MysqlProfile
@dynamic hostname, password, port, sslConfig, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlRdbms
//

@implementation GTLRDatastream_MysqlRdbms
@dynamic mysqlDatabases;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mysqlDatabases" : [GTLRDatastream_MysqlDatabase class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlSourceConfig
//

@implementation GTLRDatastream_MysqlSourceConfig
@dynamic allowlist, rejectlist;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlSslConfig
//

@implementation GTLRDatastream_MysqlSslConfig
@dynamic caCertificate, caCertificateSet, clientCertificate,
         clientCertificateSet, clientKey, clientKeySet;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_MysqlTable
//

@implementation GTLRDatastream_MysqlTable
@dynamic mysqlColumns, tableName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mysqlColumns" : [GTLRDatastream_MysqlColumn class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_NoConnectivitySettings
//

@implementation GTLRDatastream_NoConnectivitySettings
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Operation
//

@implementation GTLRDatastream_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Operation_Metadata
//

@implementation GTLRDatastream_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Operation_Response
//

@implementation GTLRDatastream_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OperationMetadata
//

@implementation GTLRDatastream_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, validationResult, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleColumn
//

@implementation GTLRDatastream_OracleColumn
@dynamic columnName, dataType, encoding, length, nullable, ordinalPosition,
         precision, primaryKey, scale;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleProfile
//

@implementation GTLRDatastream_OracleProfile
@dynamic connectionAttributes, databaseService, hostname, password, port,
         username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleProfile_ConnectionAttributes
//

@implementation GTLRDatastream_OracleProfile_ConnectionAttributes

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleRdbms
//

@implementation GTLRDatastream_OracleRdbms
@dynamic oracleSchemas;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"oracleSchemas" : [GTLRDatastream_OracleSchema class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleSchema
//

@implementation GTLRDatastream_OracleSchema
@dynamic oracleTables, schemaName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"oracleTables" : [GTLRDatastream_OracleTable class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleSourceConfig
//

@implementation GTLRDatastream_OracleSourceConfig
@dynamic allowlist, rejectlist;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_OracleTable
//

@implementation GTLRDatastream_OracleTable
@dynamic oracleColumns, tableName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"oracleColumns" : [GTLRDatastream_OracleColumn class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_PrivateConnection
//

@implementation GTLRDatastream_PrivateConnection
@dynamic createTime, displayName, error, labels, name, state, updateTime,
         vpcPeeringConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_PrivateConnection_Labels
//

@implementation GTLRDatastream_PrivateConnection_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_PrivateConnectivity
//

@implementation GTLRDatastream_PrivateConnectivity
@dynamic privateConnectionName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Route
//

@implementation GTLRDatastream_Route
@dynamic createTime, destinationAddress, destinationPort, displayName, labels,
         name, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Route_Labels
//

@implementation GTLRDatastream_Route_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_SourceConfig
//

@implementation GTLRDatastream_SourceConfig
@dynamic mysqlSourceConfig, oracleSourceConfig, sourceConnectionProfileName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_StaticServiceIpConnectivity
//

@implementation GTLRDatastream_StaticServiceIpConnectivity
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Status
//

@implementation GTLRDatastream_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDatastream_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Status_Details_Item
//

@implementation GTLRDatastream_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Stream
//

@implementation GTLRDatastream_Stream
@dynamic backfillAll, backfillNone, createTime, destinationConfig, displayName,
         errors, labels, name, sourceConfig, state, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRDatastream_Error class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Stream_Labels
//

@implementation GTLRDatastream_Stream_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_Validation
//

@implementation GTLRDatastream_Validation
@dynamic code, descriptionProperty, message, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"message" : [GTLRDatastream_ValidationMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ValidationMessage
//

@implementation GTLRDatastream_ValidationMessage
@dynamic code, level, message, metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ValidationMessage_Metadata
//

@implementation GTLRDatastream_ValidationMessage_Metadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_ValidationResult
//

@implementation GTLRDatastream_ValidationResult
@dynamic validations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"validations" : [GTLRDatastream_Validation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatastream_VpcPeeringConfig
//

@implementation GTLRDatastream_VpcPeeringConfig
@dynamic subnet, vpcName;
@end
