// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Dataproc API (dataproc/v1)
// Description:
//   Manages Hadoop-based clusters and jobs on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/dataproc/

#import "GTLRDataprocObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRDataproc_ClusterOperationStatus.state
NSString * const kGTLRDataproc_ClusterOperationStatus_State_Done = @"DONE";
NSString * const kGTLRDataproc_ClusterOperationStatus_State_Pending = @"PENDING";
NSString * const kGTLRDataproc_ClusterOperationStatus_State_Running = @"RUNNING";
NSString * const kGTLRDataproc_ClusterOperationStatus_State_Unknown = @"UNKNOWN";

// GTLRDataproc_ClusterStatus.state
NSString * const kGTLRDataproc_ClusterStatus_State_Creating = @"CREATING";
NSString * const kGTLRDataproc_ClusterStatus_State_Deleting = @"DELETING";
NSString * const kGTLRDataproc_ClusterStatus_State_Error    = @"ERROR";
NSString * const kGTLRDataproc_ClusterStatus_State_Running  = @"RUNNING";
NSString * const kGTLRDataproc_ClusterStatus_State_Unknown  = @"UNKNOWN";
NSString * const kGTLRDataproc_ClusterStatus_State_Updating = @"UPDATING";

// GTLRDataproc_ClusterStatus.substate
NSString * const kGTLRDataproc_ClusterStatus_Substate_StaleStatus = @"STALE_STATUS";
NSString * const kGTLRDataproc_ClusterStatus_Substate_Unhealthy = @"UNHEALTHY";
NSString * const kGTLRDataproc_ClusterStatus_Substate_Unspecified = @"UNSPECIFIED";

// GTLRDataproc_JobStatus.state
NSString * const kGTLRDataproc_JobStatus_State_AttemptFailure  = @"ATTEMPT_FAILURE";
NSString * const kGTLRDataproc_JobStatus_State_Cancelled       = @"CANCELLED";
NSString * const kGTLRDataproc_JobStatus_State_CancelPending   = @"CANCEL_PENDING";
NSString * const kGTLRDataproc_JobStatus_State_CancelStarted   = @"CANCEL_STARTED";
NSString * const kGTLRDataproc_JobStatus_State_Done            = @"DONE";
NSString * const kGTLRDataproc_JobStatus_State_Error           = @"ERROR";
NSString * const kGTLRDataproc_JobStatus_State_Pending         = @"PENDING";
NSString * const kGTLRDataproc_JobStatus_State_Running         = @"RUNNING";
NSString * const kGTLRDataproc_JobStatus_State_SetupDone       = @"SETUP_DONE";
NSString * const kGTLRDataproc_JobStatus_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDataproc_JobStatus.substate
NSString * const kGTLRDataproc_JobStatus_Substate_Queued      = @"QUEUED";
NSString * const kGTLRDataproc_JobStatus_Substate_StaleStatus = @"STALE_STATUS";
NSString * const kGTLRDataproc_JobStatus_Substate_Submitted   = @"SUBMITTED";
NSString * const kGTLRDataproc_JobStatus_Substate_Unspecified = @"UNSPECIFIED";

// GTLRDataproc_LoggingConfig_DriverLogLevels.driverLogLevel
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_All = @"ALL";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Debug = @"DEBUG";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Error = @"ERROR";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Fatal = @"FATAL";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Info = @"INFO";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_LevelUnspecified = @"LEVEL_UNSPECIFIED";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Off = @"OFF";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Trace = @"TRACE";
NSString * const kGTLRDataproc_LoggingConfig_DriverLogLevels_DriverLogLevel_Warn = @"WARN";

// GTLRDataproc_WorkflowMetadata.state
NSString * const kGTLRDataproc_WorkflowMetadata_State_Done    = @"DONE";
NSString * const kGTLRDataproc_WorkflowMetadata_State_Pending = @"PENDING";
NSString * const kGTLRDataproc_WorkflowMetadata_State_Running = @"RUNNING";
NSString * const kGTLRDataproc_WorkflowMetadata_State_Unknown = @"UNKNOWN";

// GTLRDataproc_WorkflowNode.state
NSString * const kGTLRDataproc_WorkflowNode_State_Blocked      = @"BLOCKED";
NSString * const kGTLRDataproc_WorkflowNode_State_Completed    = @"COMPLETED";
NSString * const kGTLRDataproc_WorkflowNode_State_Failed       = @"FAILED";
NSString * const kGTLRDataproc_WorkflowNode_State_NodeStateUnspecified = @"NODE_STATE_UNSPECIFIED";
NSString * const kGTLRDataproc_WorkflowNode_State_Runnable     = @"RUNNABLE";
NSString * const kGTLRDataproc_WorkflowNode_State_Running      = @"RUNNING";

// GTLRDataproc_YarnApplication.state
NSString * const kGTLRDataproc_YarnApplication_State_Accepted  = @"ACCEPTED";
NSString * const kGTLRDataproc_YarnApplication_State_Failed    = @"FAILED";
NSString * const kGTLRDataproc_YarnApplication_State_Finished  = @"FINISHED";
NSString * const kGTLRDataproc_YarnApplication_State_Killed    = @"KILLED";
NSString * const kGTLRDataproc_YarnApplication_State_New       = @"NEW";
NSString * const kGTLRDataproc_YarnApplication_State_NewSaving = @"NEW_SAVING";
NSString * const kGTLRDataproc_YarnApplication_State_Running   = @"RUNNING";
NSString * const kGTLRDataproc_YarnApplication_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDataproc_YarnApplication_State_Submitted = @"SUBMITTED";

// ----------------------------------------------------------------------------
//
//   GTLRDataproc_AcceleratorConfig
//

@implementation GTLRDataproc_AcceleratorConfig
@dynamic acceleratorCount, acceleratorTypeUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Binding
//

@implementation GTLRDataproc_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_CancelJobRequest
//

@implementation GTLRDataproc_CancelJobRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Cluster
//

@implementation GTLRDataproc_Cluster
@dynamic clusterName, clusterUuid, config, labels, metrics, projectId, status,
         statusHistory;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"statusHistory" : [GTLRDataproc_ClusterStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Cluster_Labels
//

@implementation GTLRDataproc_Cluster_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterConfig
//

@implementation GTLRDataproc_ClusterConfig
@dynamic configBucket, encryptionConfig, gceClusterConfig,
         initializationActions, masterConfig, secondaryWorkerConfig,
         softwareConfig, workerConfig;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"initializationActions" : [GTLRDataproc_NodeInitializationAction class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterMetrics
//

@implementation GTLRDataproc_ClusterMetrics
@dynamic hdfsMetrics, yarnMetrics;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterMetrics_HdfsMetrics
//

@implementation GTLRDataproc_ClusterMetrics_HdfsMetrics

+ (Class)classForAdditionalProperties {
  return [NSNumber class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterMetrics_YarnMetrics
//

@implementation GTLRDataproc_ClusterMetrics_YarnMetrics

+ (Class)classForAdditionalProperties {
  return [NSNumber class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterOperation
//

@implementation GTLRDataproc_ClusterOperation
@dynamic done, error, operationId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterOperationMetadata
//

@implementation GTLRDataproc_ClusterOperationMetadata
@dynamic clusterName, clusterUuid, descriptionProperty, labels, operationType,
         status, statusHistory, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"statusHistory" : [GTLRDataproc_ClusterOperationStatus class],
    @"warnings" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterOperationMetadata_Labels
//

@implementation GTLRDataproc_ClusterOperationMetadata_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterOperationStatus
//

@implementation GTLRDataproc_ClusterOperationStatus
@dynamic details, innerState, state, stateStartTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterSelector
//

@implementation GTLRDataproc_ClusterSelector
@dynamic clusterLabels, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterSelector_ClusterLabels
//

@implementation GTLRDataproc_ClusterSelector_ClusterLabels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ClusterStatus
//

@implementation GTLRDataproc_ClusterStatus
@dynamic detail, state, stateStartTime, substate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_DiagnoseClusterRequest
//

@implementation GTLRDataproc_DiagnoseClusterRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_DiagnoseClusterResults
//

@implementation GTLRDataproc_DiagnoseClusterResults
@dynamic outputUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_DiskConfig
//

@implementation GTLRDataproc_DiskConfig
@dynamic bootDiskSizeGb, bootDiskType, numLocalSsds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Empty
//

@implementation GTLRDataproc_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_EncryptionConfig
//

@implementation GTLRDataproc_EncryptionConfig
@dynamic gcePdKmsKeyName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Expr
//

@implementation GTLRDataproc_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_GceClusterConfig
//

@implementation GTLRDataproc_GceClusterConfig
@dynamic internalIpOnly, metadata, networkUri, serviceAccount,
         serviceAccountScopes, subnetworkUri, tags, zoneUri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceAccountScopes" : [NSString class],
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_GceClusterConfig_Metadata
//

@implementation GTLRDataproc_GceClusterConfig_Metadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_GetIamPolicyRequest
//

@implementation GTLRDataproc_GetIamPolicyRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_HadoopJob
//

@implementation GTLRDataproc_HadoopJob
@dynamic archiveUris, args, fileUris, jarFileUris, loggingConfig, mainClass,
         mainJarFileUri, properties;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"archiveUris" : [NSString class],
    @"args" : [NSString class],
    @"fileUris" : [NSString class],
    @"jarFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_HadoopJob_Properties
//

@implementation GTLRDataproc_HadoopJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_HiveJob
//

@implementation GTLRDataproc_HiveJob
@dynamic continueOnFailure, jarFileUris, properties, queryFileUri, queryList,
         scriptVariables;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jarFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_HiveJob_Properties
//

@implementation GTLRDataproc_HiveJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_HiveJob_ScriptVariables
//

@implementation GTLRDataproc_HiveJob_ScriptVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_InstanceGroupConfig
//

@implementation GTLRDataproc_InstanceGroupConfig
@dynamic accelerators, diskConfig, imageUri, instanceNames, isPreemptible,
         machineTypeUri, managedGroupConfig, numInstances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRDataproc_AcceleratorConfig class],
    @"instanceNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_InstantiateWorkflowTemplateRequest
//

@implementation GTLRDataproc_InstantiateWorkflowTemplateRequest
@dynamic parameters, requestId, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_InstantiateWorkflowTemplateRequest_Parameters
//

@implementation GTLRDataproc_InstantiateWorkflowTemplateRequest_Parameters

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Job
//

@implementation GTLRDataproc_Job
@dynamic driverControlFilesUri, driverOutputResourceUri, hadoopJob, hiveJob,
         jobUuid, labels, pigJob, placement, pysparkJob, reference, scheduling,
         sparkJob, sparkSqlJob, status, statusHistory, yarnApplications;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"statusHistory" : [GTLRDataproc_JobStatus class],
    @"yarnApplications" : [GTLRDataproc_YarnApplication class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Job_Labels
//

@implementation GTLRDataproc_Job_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_JobPlacement
//

@implementation GTLRDataproc_JobPlacement
@dynamic clusterName, clusterUuid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_JobReference
//

@implementation GTLRDataproc_JobReference
@dynamic jobId, projectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_JobScheduling
//

@implementation GTLRDataproc_JobScheduling
@dynamic maxFailuresPerHour;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_JobStatus
//

@implementation GTLRDataproc_JobStatus
@dynamic details, state, stateStartTime, substate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ListClustersResponse
//

@implementation GTLRDataproc_ListClustersResponse
@dynamic clusters, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"clusters" : [GTLRDataproc_Cluster class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"clusters";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ListJobsResponse
//

@implementation GTLRDataproc_ListJobsResponse
@dynamic jobs, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [GTLRDataproc_Job class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"jobs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ListOperationsResponse
//

@implementation GTLRDataproc_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDataproc_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ListWorkflowTemplatesResponse
//

@implementation GTLRDataproc_ListWorkflowTemplatesResponse
@dynamic nextPageToken, templates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"templates" : [GTLRDataproc_WorkflowTemplate class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"templates";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_LoggingConfig
//

@implementation GTLRDataproc_LoggingConfig
@dynamic driverLogLevels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_LoggingConfig_DriverLogLevels
//

@implementation GTLRDataproc_LoggingConfig_DriverLogLevels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ManagedCluster
//

@implementation GTLRDataproc_ManagedCluster
@dynamic clusterName, config, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ManagedCluster_Labels
//

@implementation GTLRDataproc_ManagedCluster_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ManagedGroupConfig
//

@implementation GTLRDataproc_ManagedGroupConfig
@dynamic instanceGroupManagerName, instanceTemplateName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_NodeInitializationAction
//

@implementation GTLRDataproc_NodeInitializationAction
@dynamic executableFile, executionTimeout;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Operation
//

@implementation GTLRDataproc_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Operation_Metadata
//

@implementation GTLRDataproc_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Operation_Response
//

@implementation GTLRDataproc_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_OrderedJob
//

@implementation GTLRDataproc_OrderedJob
@dynamic hadoopJob, hiveJob, labels, pigJob, prerequisiteStepIds, pysparkJob,
         scheduling, sparkJob, sparkSqlJob, stepId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"prerequisiteStepIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_OrderedJob_Labels
//

@implementation GTLRDataproc_OrderedJob_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ParameterValidation
//

@implementation GTLRDataproc_ParameterValidation
@dynamic regex, values;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_PigJob
//

@implementation GTLRDataproc_PigJob
@dynamic continueOnFailure, jarFileUris, loggingConfig, properties,
         queryFileUri, queryList, scriptVariables;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jarFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_PigJob_Properties
//

@implementation GTLRDataproc_PigJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_PigJob_ScriptVariables
//

@implementation GTLRDataproc_PigJob_ScriptVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Policy
//

@implementation GTLRDataproc_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRDataproc_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_PySparkJob
//

@implementation GTLRDataproc_PySparkJob
@dynamic archiveUris, args, fileUris, jarFileUris, loggingConfig,
         mainPythonFileUri, properties, pythonFileUris;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"archiveUris" : [NSString class],
    @"args" : [NSString class],
    @"fileUris" : [NSString class],
    @"jarFileUris" : [NSString class],
    @"pythonFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_PySparkJob_Properties
//

@implementation GTLRDataproc_PySparkJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_QueryList
//

@implementation GTLRDataproc_QueryList
@dynamic queries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"queries" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_RegexValidation
//

@implementation GTLRDataproc_RegexValidation
@dynamic regexes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"regexes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SetIamPolicyRequest
//

@implementation GTLRDataproc_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SoftwareConfig
//

@implementation GTLRDataproc_SoftwareConfig
@dynamic imageVersion, properties;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SoftwareConfig_Properties
//

@implementation GTLRDataproc_SoftwareConfig_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SparkJob
//

@implementation GTLRDataproc_SparkJob
@dynamic archiveUris, args, fileUris, jarFileUris, loggingConfig, mainClass,
         mainJarFileUri, properties;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"archiveUris" : [NSString class],
    @"args" : [NSString class],
    @"fileUris" : [NSString class],
    @"jarFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SparkJob_Properties
//

@implementation GTLRDataproc_SparkJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SparkSqlJob
//

@implementation GTLRDataproc_SparkSqlJob
@dynamic jarFileUris, loggingConfig, properties, queryFileUri, queryList,
         scriptVariables;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jarFileUris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SparkSqlJob_Properties
//

@implementation GTLRDataproc_SparkSqlJob_Properties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SparkSqlJob_ScriptVariables
//

@implementation GTLRDataproc_SparkSqlJob_ScriptVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Status
//

@implementation GTLRDataproc_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDataproc_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_Status_Details_Item
//

@implementation GTLRDataproc_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_SubmitJobRequest
//

@implementation GTLRDataproc_SubmitJobRequest
@dynamic job, requestId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_TemplateParameter
//

@implementation GTLRDataproc_TemplateParameter
@dynamic descriptionProperty, fields, name, validation;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fields" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_TestIamPermissionsRequest
//

@implementation GTLRDataproc_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_TestIamPermissionsResponse
//

@implementation GTLRDataproc_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_ValueValidation
//

@implementation GTLRDataproc_ValueValidation
@dynamic values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowGraph
//

@implementation GTLRDataproc_WorkflowGraph
@dynamic nodes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodes" : [GTLRDataproc_WorkflowNode class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowMetadata
//

@implementation GTLRDataproc_WorkflowMetadata
@dynamic clusterName, clusterUuid, createCluster, deleteCluster, endTime, graph,
         parameters, startTime, state, templateProperty, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"templateProperty" : @"template" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowMetadata_Parameters
//

@implementation GTLRDataproc_WorkflowMetadata_Parameters

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowNode
//

@implementation GTLRDataproc_WorkflowNode
@dynamic error, jobId, prerequisiteStepIds, state, stepId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"prerequisiteStepIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowTemplate
//

@implementation GTLRDataproc_WorkflowTemplate
@dynamic createTime, identifier, jobs, labels, name, parameters, placement,
         updateTime, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [GTLRDataproc_OrderedJob class],
    @"parameters" : [GTLRDataproc_TemplateParameter class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowTemplate_Labels
//

@implementation GTLRDataproc_WorkflowTemplate_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_WorkflowTemplatePlacement
//

@implementation GTLRDataproc_WorkflowTemplatePlacement
@dynamic clusterSelector, managedCluster;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataproc_YarnApplication
//

@implementation GTLRDataproc_YarnApplication
@dynamic name, progress, state, trackingUrl;
@end
