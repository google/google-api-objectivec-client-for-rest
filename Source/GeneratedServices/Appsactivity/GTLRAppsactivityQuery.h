// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Drive Activity API (appsactivity/v1)
// Description:
//   Provides a historical view of activity.
// Documentation:
//   https://developers.google.com/google-apps/activity/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// groupingStrategy

/** Value: "driveUi" */
GTLR_EXTERN NSString * const kGTLRAppsactivityGroupingStrategyDriveUi;
/** Value: "none" */
GTLR_EXTERN NSString * const kGTLRAppsactivityGroupingStrategyNone;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Appsactivity query classes.
 */
@interface GTLRAppsactivityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Returns a list of activities visible to the current logged in user. Visible
 *  activities are determined by the visiblity settings of the object that was
 *  acted on, e.g. Drive files a user can see. An activity is a record of past
 *  events. Multiple events may be merged if they are similar. A request is
 *  scoped to activities from a given Google service using the source parameter.
 *
 *  Method: appsactivity.activities.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppsactivityActivity
 */
@interface GTLRAppsactivityQuery_ActivitiesList : GTLRAppsactivityQuery
// Previous library name was
//   +[GTLQueryAppsactivity queryForActivitiesList]

/**
 *  Identifies the Drive folder containing the items for which to return
 *  activities.
 */
@property(nonatomic, copy, nullable) NSString *driveAncestorId;

/** Identifies the Drive item to return activities for. */
@property(nonatomic, copy, nullable) NSString *driveFileId;

/**
 *  Indicates the strategy to use when grouping singleEvents items in the
 *  associated combinedEvent object.
 *
 *  Likely values:
 *    @arg @c kGTLRAppsactivityGroupingStrategyDriveUi Value "driveUi"
 *    @arg @c kGTLRAppsactivityGroupingStrategyNone Value "none"
 *
 *  @note If not set, the documented server-side default will be
 *        kGTLRAppsactivityGroupingStrategyDriveUi.
 */
@property(nonatomic, copy, nullable) NSString *groupingStrategy;

/**
 *  The maximum number of events to return on a page. The response includes a
 *  continuation token if there are more events.
 *
 *  @note If not set, the documented server-side default will be 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token to retrieve a specific page of results. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The Google service from which to return activities. Possible values of
 *  source are:
 *  - drive.google.com
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Indicates the user to return activity for. Use the special value me to
 *  indicate the currently authenticated user.
 *
 *  @note If not set, the documented server-side default will be me.
 */
@property(nonatomic, copy, nullable) NSString *userId;

/**
 *  Fetches a @c GTLRAppsactivity_ListActivitiesResponse.
 *
 *  Returns a list of activities visible to the current logged in user. Visible
 *  activities are determined by the visiblity settings of the object that was
 *  acted on, e.g. Drive files a user can see. An activity is a record of past
 *  events. Multiple events may be merged if they are similar. A request is
 *  scoped to activities from a given Google service using the source parameter.
 *
 *  @return GTLRAppsactivityQuery_ActivitiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
