// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud User Accounts API (clouduseraccounts/vm_alpha)
// Description:
//   Creates and manages users and groups for accessing Google Compute Engine
//   virtual machines.
// Documentation:
//   https://cloud.google.com/compute/docs/access/user-accounts/api/latest/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudUserAccounts_AuditConfig;
@class GTLRCloudUserAccounts_AuthorizedKeysView;
@class GTLRCloudUserAccounts_Binding;
@class GTLRCloudUserAccounts_Condition;
@class GTLRCloudUserAccounts_Group;
@class GTLRCloudUserAccounts_LinuxAccountViews;
@class GTLRCloudUserAccounts_LinuxGroupView;
@class GTLRCloudUserAccounts_LinuxUserView;
@class GTLRCloudUserAccounts_LogConfig;
@class GTLRCloudUserAccounts_LogConfigCounterOptions;
@class GTLRCloudUserAccounts_Operation;
@class GTLRCloudUserAccounts_Operation_Error;
@class GTLRCloudUserAccounts_Operation_Error_Errors_Item;
@class GTLRCloudUserAccounts_Operation_Warnings_Item;
@class GTLRCloudUserAccounts_Operation_Warnings_Item_Data_Item;
@class GTLRCloudUserAccounts_PublicKey;
@class GTLRCloudUserAccounts_Rule;
@class GTLRCloudUserAccounts_User;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Condition.iam

/** Value: "ATTRIBUTION" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Iam_Attribution;
/** Value: "AUTHORITY" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Iam_Authority;
/** Value: "NO_ATTR" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Iam_NoAttr;

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Condition.op

/** Value: "DISCHARGED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_Discharged;
/** Value: "EQUALS" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_Equals;
/** Value: "IN" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_In;
/** Value: "NO_OP" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_NoOp;
/** Value: "NOT_EQUALS" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_NotEquals;
/** Value: "NOT_IN" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Op_NotIn;

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Condition.sys

/** Value: "IP" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Sys_Ip;
/** Value: "NAME" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Sys_Name;
/** Value: "NO_ATTR" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Sys_NoAttr;
/** Value: "REGION" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Sys_Region;
/** Value: "SERVICE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Condition_Sys_Service;

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Operation.status

/** Value: "DONE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Status_Done;
/** Value: "PENDING" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Status_Pending;
/** Value: "RUNNING" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Status_Running;

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Operation_Warnings_Item.code

/** Value: "CLEANUP_FAILED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_CleanupFailed;
/** Value: "DEPRECATED_RESOURCE_USED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_DeprecatedResourceUsed;
/** Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/** Value: "INJECTED_KERNELS_DEPRECATED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_InjectedKernelsDeprecated;
/** Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopAddressNotAssigned;
/** Value: "NEXT_HOP_CANNOT_IP_FORWARD" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopCannotIpForward;
/** Value: "NEXT_HOP_INSTANCE_NOT_FOUND" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopInstanceNotFound;
/** Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/** Value: "NEXT_HOP_NOT_RUNNING" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopNotRunning;
/** Value: "NO_RESULTS_ON_PAGE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NoResultsOnPage;
/** Value: "NOT_CRITICAL_ERROR" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NotCriticalError;
/** Value: "REQUIRED_TOS_AGREEMENT" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_RequiredTosAgreement;
/** Value: "RESOURCE_NOT_DELETED" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_ResourceNotDeleted;
/** Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate;
/** Value: "UNREACHABLE" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCloudUserAccounts_Rule.action

/** Value: "ALLOW" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_Allow;
/** Value: "ALLOW_WITH_LOG" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_AllowWithLog;
/** Value: "DENY" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_Deny;
/** Value: "DENY_WITH_LOG" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_DenyWithLog;
/** Value: "LOG" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_Log;
/** Value: "NO_ACTION" */
GTLR_EXTERN NSString * const kGTLRCloudUserAccounts_Rule_Action_NoAction;

/**
 *  Enables "data access" audit logging for a service and specifies a list of
 *  members that are log-exempted.
 */
@interface GTLRCloudUserAccounts_AuditConfig : GTLRObject

/**
 *  Specifies the identities that are exempted from "data access" audit logging
 *  for the `service` specified above. Follows the same format of
 *  Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  Specifies a service that will be enabled for "data access" audit logging.
 *  For example, `resourcemanager`, `storage`, `compute`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  A list of authorized public keys for a user account.
 */
@interface GTLRCloudUserAccounts_AuthorizedKeysView : GTLRObject

/** [Output Only] The list of authorized public keys in SSH format. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *keys;

/**
 *  [Output Only] Whether the user has the ability to elevate on the instance
 *  that requested the authorized keys.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sudoer;

@end


/**
 *  Associates `members` with a `role`.
 */
@interface GTLRCloudUserAccounts_Binding : GTLRObject

/**
 *  Specifies the identities requesting access for a Cloud Platform resource.
 *  `members` can have the following values:
 *  * `allUsers`: A special identifier that represents anyone who is on the
 *  internet; with or without a Google account.
 *  * `allAuthenticatedUsers`: A special identifier that represents anyone who
 *  is authenticated with a Google account or a service account.
 *  * `user:{emailid}`: An email address that represents a specific Google
 *  account. For example, `alice\@gmail.com` or `joe\@example.com`.
 *  * `serviceAccount:{emailid}`: An email address that represents a service
 *  account. For example, `my-other-app\@appspot.gserviceaccount.com`.
 *  * `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`.
 *  * `domain:{domain}`: A Google Apps domain name that represents all the users
 *  of that domain. For example, `google.com` or `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to `members`. For example, `roles/viewer`,
 *  `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  A condition to be met.
 */
@interface GTLRCloudUserAccounts_Condition : GTLRObject

/**
 *  Trusted attributes supplied by the IAM system.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Condition_Iam_Attribution Value
 *        "ATTRIBUTION"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Iam_Authority Value "AUTHORITY"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Iam_NoAttr Value "NO_ATTR"
 */
@property(nonatomic, copy, nullable) NSString *iam;

/**
 *  An operator to apply the subject with.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_Discharged Value "DISCHARGED"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_Equals Value "EQUALS"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_In Value "IN"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_NoOp Value "NO_OP"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_NotEquals Value "NOT_EQUALS"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Op_NotIn Value "NOT_IN"
 */
@property(nonatomic, copy, nullable) NSString *op;

/** Trusted attributes discharged by the service. */
@property(nonatomic, copy, nullable) NSString *svc;

/**
 *  Trusted attributes supplied by any service that owns resources and uses the
 *  IAM system for access control.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Condition_Sys_Ip Value "IP"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Sys_Name Value "NAME"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Sys_NoAttr Value "NO_ATTR"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Sys_Region Value "REGION"
 *    @arg @c kGTLRCloudUserAccounts_Condition_Sys_Service Value "SERVICE"
 */
@property(nonatomic, copy, nullable) NSString *sys;

/** The object of the condition. Exactly one of these must be set. */
@property(nonatomic, copy, nullable) NSString *value;

/** The objects of the condition. This is mutually exclusive with 'value'. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  A Group resource.
 */
@interface GTLRCloudUserAccounts_Group : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional textual description of the resource; provided by the client when
 *  the resource is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always clouduseraccounts#group for
 *  groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] A list of URLs to User resources who belong to the group.
 *  Users may only be members of groups in the same project.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Name of the resource; provided by the client when the resource is created.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  GTLRCloudUserAccounts_GroupList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudUserAccounts_GroupList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of Group resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Group *> *items;

/**
 *  [Output Only] Type of resource. Always clouduseraccounts#groupList for lists
 *  of groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  GTLRCloudUserAccounts_GroupsAddMemberRequest
 */
@interface GTLRCloudUserAccounts_GroupsAddMemberRequest : GTLRObject

/** Fully-qualified URLs of the User resources to add. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *users;

@end


/**
 *  GTLRCloudUserAccounts_GroupsRemoveMemberRequest
 */
@interface GTLRCloudUserAccounts_GroupsRemoveMemberRequest : GTLRObject

/** Fully-qualified URLs of the User resources to remove. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *users;

@end


/**
 *  A list of all Linux accounts for this project. This API is only used by
 *  Compute Engine virtual machines to get information about user accounts for a
 *  project or instance. Linux resources are read-only views into users and
 *  groups managed by the Compute Engine Accounts API.
 */
@interface GTLRCloudUserAccounts_LinuxAccountViews : GTLRObject

/** [Output Only] A list of all groups within a project. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_LinuxGroupView *> *groupViews;

/**
 *  [Output Only] Type of the resource. Always
 *  clouduseraccounts#linuxAccountViews for Linux resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] A list of all users within a project. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_LinuxUserView *> *userViews;

@end


/**
 *  GTLRCloudUserAccounts_LinuxGetAuthorizedKeysViewResponse
 */
@interface GTLRCloudUserAccounts_LinuxGetAuthorizedKeysViewResponse : GTLRObject

/** [Output Only] A list of authorized public keys for a user. */
@property(nonatomic, strong, nullable) GTLRCloudUserAccounts_AuthorizedKeysView *resource;

@end


/**
 *  GTLRCloudUserAccounts_LinuxGetLinuxAccountViewsResponse
 */
@interface GTLRCloudUserAccounts_LinuxGetLinuxAccountViewsResponse : GTLRObject

/** [Output Only] A list of authorized user accounts and groups. */
@property(nonatomic, strong, nullable) GTLRCloudUserAccounts_LinuxAccountViews *resource;

@end


/**
 *  A detailed view of a Linux group.
 */
@interface GTLRCloudUserAccounts_LinuxGroupView : GTLRObject

/**
 *  [Output Only] The Group ID.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gid;

/** [Output Only] Group name. */
@property(nonatomic, copy, nullable) NSString *groupName;

/** [Output Only] List of user accounts that belong to the group. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

@end


/**
 *  A detailed view of a Linux user account.
 */
@interface GTLRCloudUserAccounts_LinuxUserView : GTLRObject

/** [Output Only] The GECOS (user information) entry for this account. */
@property(nonatomic, copy, nullable) NSString *gecos;

/**
 *  [Output Only] User's default group ID.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gid;

/** [Output Only] The path to the home directory for this account. */
@property(nonatomic, copy, nullable) NSString *homeDirectory;

/** [Output Only] The path to the login shell for this account. */
@property(nonatomic, copy, nullable) NSString *shell;

/**
 *  [Output Only] User ID.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *uid;

/** [Output Only] The username of the account. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  Specifies what kind of log the caller must write
 */
@interface GTLRCloudUserAccounts_LogConfig : GTLRObject

/** Counter options. */
@property(nonatomic, strong, nullable) GTLRCloudUserAccounts_LogConfigCounterOptions *counter;

@end


/**
 *  Options for counters
 */
@interface GTLRCloudUserAccounts_LogConfigCounterOptions : GTLRObject

/** The field value to attribute. */
@property(nonatomic, copy, nullable) NSString *field;

/** The metric to update. */
@property(nonatomic, copy, nullable) NSString *metric;

@end


/**
 *  An Operation resource, used to manage asynchronous API requests.
 */
@interface GTLRCloudUserAccounts_Operation : GTLRObject

/** [Output Only] Reserved for future use. */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] A textual description of the operation, which is set when the
 *  operation is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The time that this operation was completed. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *endTime;

/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRCloudUserAccounts_Operation_Error *error;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  message that was returned, such as NOT FOUND.
 */
@property(nonatomic, copy, nullable) NSString *httpErrorMessage;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  status code that was returned. For example, a 404 means the resource was not
 *  found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpErrorStatusCode;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The time that this operation was requested. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  [Output Only] Type of the resource. Always compute#operation for Operation
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The type of operation, such as insert, update, or delete, and
 *  so on.
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  [Output Only] An optional progress indicator that ranges from 0 to 100.
 *  There is no requirement that this be linear or support any granularity of
 *  operations. This should not be used to guess when the operation will be
 *  complete. This number should monotonically increase as the operation
 *  progresses.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *progress;

/**
 *  [Output Only] The URL of the region where the operation resides. Only
 *  available when performing regional operations.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The time that this operation was started by the server. This
 *  value is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  [Output Only] The status of the operation, which can be one of the
 *  following: PENDING, RUNNING, or DONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Operation_Status_Done Value "DONE"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Status_Pending Value "PENDING"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Status_Running Value "RUNNING"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] An optional textual description of the current status of the
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  [Output Only] The unique target ID, which identifies a specific incarnation
 *  of the target resource.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetId;

/** [Output Only] The URL of the resource that the operation modifies. */
@property(nonatomic, copy, nullable) NSString *targetLink;

/**
 *  [Output Only] User who requested the operation, for example:
 *  user\@example.com.
 */
@property(nonatomic, copy, nullable) NSString *user;

/**
 *  [Output Only] If warning messages are generated during processing of the
 *  operation, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Operation_Warnings_Item *> *warnings;

/**
 *  [Output Only] The URL of the zone where the operation resides. Only
 *  available when performing per-zone operations.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@interface GTLRCloudUserAccounts_Operation_Error : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Operation_Error_Errors_Item *> *errors;

@end


/**
 *  GTLRCloudUserAccounts_Operation_Warnings_Item
 */
@interface GTLRCloudUserAccounts_Operation_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_CleanupFailed
 *        Value "CLEANUP_FAILED"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_DeprecatedResourceUsed
 *        Value "DEPRECATED_RESOURCE_USED"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        Value "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_InjectedKernelsDeprecated
 *        Value "INJECTED_KERNELS_DEPRECATED"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopAddressNotAssigned
 *        Value "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopCannotIpForward
 *        Value "NEXT_HOP_CANNOT_IP_FORWARD"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopInstanceNotFound
 *        Value "NEXT_HOP_INSTANCE_NOT_FOUND"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        Value "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NextHopNotRunning
 *        Value "NEXT_HOP_NOT_RUNNING"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NoResultsOnPage
 *        Value "NO_RESULTS_ON_PAGE"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_NotCriticalError
 *        Value "NOT_CRITICAL_ERROR"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_RequiredTosAgreement
 *        Value "REQUIRED_TOS_AGREEMENT"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_ResourceNotDeleted
 *        Value "RESOURCE_NOT_DELETED"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Value "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 *    @arg @c kGTLRCloudUserAccounts_Operation_Warnings_Item_Code_Unreachable
 *        Value "UNREACHABLE"
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Operation_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudUserAccounts_Operation_Error_Errors_Item
 */
@interface GTLRCloudUserAccounts_Operation_Error_Errors_Item : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudUserAccounts_Operation_Warnings_Item_Data_Item
 */
@interface GTLRCloudUserAccounts_Operation_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of Operation resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudUserAccounts_OperationList : GTLRCollectionObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of Operation resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Operation *> *items;

/**
 *  [Output Only] Type of resource. Always compute#operations for Operations
 *  resource.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Defines an Identity and Access Management (IAM) policy. It is used to
 *  specify access control policies for Cloud Platform resources.
 *  A `Policy` consists of a list of `bindings`. A `Binding` binds a list of
 *  `members` to a `role`, where the members can be user accounts, Google
 *  groups, Google domains, and service accounts. A `role` is a named list of
 *  permissions defined by IAM.
 *  **Example**
 *  { "bindings": [ { "role": "roles/owner", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-other-app\@appspot.gserviceaccount.com", ] }, { "role":
 *  "roles/viewer", "members": ["user:sean\@example.com"] } ] }
 *  For a description of IAM and its features, see the [IAM developer's
 *  guide](https://cloud.google.com/iam).
 */
@interface GTLRCloudUserAccounts_Policy : GTLRObject

/**
 *  Specifies audit logging configs for "data access". "data access": generally
 *  refers to data reads/writes and admin reads. "admin activity": generally
 *  refers to admin writes.
 *  Note: `AuditConfig` doesn't apply to "admin activity", which always enables
 *  audit logging.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members` to a `role`. Multiple `bindings` must not be
 *  specified for the same `role`. `bindings` with no members will result in an
 *  error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy.
 *  If no `etag` is provided in the call to `setIamPolicy`, then the existing
 *  policy is overwritten blindly.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  iamOwned
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iamOwned;

/**
 *  If more than one rule is specified, the rules are applied in the following
 *  manner: - All matching LOG rules are always applied. - If any
 *  DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be
 *  applied if one or more matching rule requires logging. - Otherwise, if any
 *  ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be
 *  applied if one or more matching rule requires logging. - Otherwise, if no
 *  rule applies, permission is denied.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Rule *> *rules;

/**
 *  Version of the `Policy`. The default version is 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  A public key for authenticating to guests.
 */
@interface GTLRCloudUserAccounts_PublicKey : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional textual description of the resource; provided by the client when
 *  the resource is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional expiration timestamp. If provided, the timestamp must be in RFC3339
 *  text format. If not provided, the public key never expires.
 */
@property(nonatomic, copy, nullable) NSString *expirationTimestamp;

/**
 *  [Output Only] The fingerprint of the key is defined by RFC4716 to be the MD5
 *  digest of the public key.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** Public key text in SSH format, defined by RFC4253 section 6.6. */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  A rule to be applied in a Policy.
 */
@interface GTLRCloudUserAccounts_Rule : GTLRObject

/**
 *  Required
 *
 *  Likely values:
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_Allow Value "ALLOW"
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_AllowWithLog Value
 *        "ALLOW_WITH_LOG"
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_Deny Value "DENY"
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_DenyWithLog Value
 *        "DENY_WITH_LOG"
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_Log Value "LOG"
 *    @arg @c kGTLRCloudUserAccounts_Rule_Action_NoAction Value "NO_ACTION"
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Additional restrictions that must be met */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_Condition *> *conditions;

/**
 *  Human-readable description of the rule.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in this set of
 *  entries.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ins;

/**
 *  The config returned to callers of tech.iam.IAM.CheckPolicy for any entries
 *  that match the LOG action.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_LogConfig *> *logConfigs;

/**
 *  The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is not in this set of
 *  entries.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notIns;

/**
 *  A permission is a string of form '..' (e.g., 'storage.buckets.list'). A
 *  value of '*' matches all permissions, and a verb part of '*' (e.g.,
 *  'storage.buckets.*') matches all verbs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRCloudUserAccounts_TestPermissionsRequest
 */
@interface GTLRCloudUserAccounts_TestPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the 'resource'. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRCloudUserAccounts_TestPermissionsResponse
 */
@interface GTLRCloudUserAccounts_TestPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A User resource.
 */
@interface GTLRCloudUserAccounts_User : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional textual description of the resource; provided by the client when
 *  the resource is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] A list of URLs to Group resources who contain the user. Users
 *  are only members of groups in the same project.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *groups;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always clouduseraccounts#user for users.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource; provided by the client when the resource is created.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Email address of account's owner. This account will be validated to make
 *  sure it exists. The email can belong to any domain, but it must be tied to a
 *  Google account.
 */
@property(nonatomic, copy, nullable) NSString *owner;

/** [Output Only] Public keys that this user may use to login. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_PublicKey *> *publicKeys;

/** [Output Only] Server defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  GTLRCloudUserAccounts_UserList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudUserAccounts_UserList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of User resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudUserAccounts_User *> *items;

/**
 *  [Output Only] Type of resource. Always clouduseraccounts#userList for lists
 *  of users.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
