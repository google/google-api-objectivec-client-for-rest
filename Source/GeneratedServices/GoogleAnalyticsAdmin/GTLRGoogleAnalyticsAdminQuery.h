// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Admin API (analyticsadmin/v1alpha)
// Documentation:
//   http://code.google.com/apis/analytics/docs/mgmt/home.html

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRGoogleAnalyticsAdmin_V1alphaAccount;
@class GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream;
@class GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomDimensionRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomMetricRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaConversionEvent;
@class GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension;
@class GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric;
@class GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings;
@class GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaGoogleSignalsSettings;
@class GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream;
@class GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret;
@class GTLRGoogleAnalyticsAdmin_V1alphaProperty;
@class GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaSearchChangeHistoryEventsRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaUserLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Google Analytics Admin query classes.
 */
@interface GTLRGoogleAnalyticsAdminQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  Method: analyticsadmin.accounts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the Account to soft-delete. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  @param name Required. The name of the Account to soft-delete. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single Account.
 *
 *  Method: analyticsadmin.accounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the account to lookup. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAccount.
 *
 *  Lookup for a single Account.
 *
 *  @param name Required. The name of the account to lookup. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  Method: analyticsadmin.accounts.getDataSharingSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the settings to lookup. Format:
 *  accounts/{account}/dataSharingSettings Example:
 *  "accounts/1000/dataSharingSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaDataSharingSettings.
 *
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    accounts/{account}/dataSharingSettings Example:
 *    "accounts/1000/dataSharingSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA4 properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  Method: analyticsadmin.accounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccounts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAccounts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Accounts in the results.
 *  Accounts can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListAccountsResponse.
 *
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA4 properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates an account.
 *
 *  Method: analyticsadmin.accounts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this account. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAccount.
 *
 *  Updates an account.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAccount to include in
 *    the query.
 *  @param name Output only. Resource name of this account. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAccount *)object
                           name:(NSString *)name;

@end

/**
 *  Requests a ticket for creating an account.
 *
 *  Method: analyticsadmin.accounts.provisionAccountTicket
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket : GTLRGoogleAnalyticsAdminQuery

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketResponse.
 *
 *  Requests a ticket for creating an account.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest to include
 *    in the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest *)object;

@end

/**
 *  Searches through all changes to an account or its children given the
 *  specified set of filters.
 *
 *  Method: analyticsadmin.accounts.searchChangeHistoryEvents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsSearchChangeHistoryEvents : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account resource for which to return change history resources.
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaSearchChangeHistoryEventsResponse.
 *
 *  Searches through all changes to an account or its children given the
 *  specified set of filters.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaSearchChangeHistoryEventsRequest to
 *    include in the query.
 *  @param account Required. The account resource for which to return change
 *    history resources.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsSearchChangeHistoryEvents
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaSearchChangeHistoryEventsRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  Method: analyticsadmin.accountSummaries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountSummariesList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of AccountSummary resources to return. The service may
 *  return fewer than this value, even if there are additional pages. If
 *  unspecified, at most 50 resources will be returned. The maximum value is
 *  200; (higher values will be coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccountSummaries` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListAccountSummaries` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListAccountSummariesResponse.
 *
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountSummariesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  Method: analyticsadmin.accounts.userLinks.audit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksAudit : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksResponse.
 *
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest
 *    to include in the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksAudit
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. This field is required. The parent field in the CreateUserLinkRequest
 *  messages must either be empty or match this field. Example format:
 *  accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksResponse.
 *
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. This field is required. The parent field in the
 *    CreateUserLinkRequest messages must either be empty or match this field.
 *    Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all values for user link names to delete must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all values for user link names to delete
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The names of the user links to retrieve. A maximum of 1000 user
 *  links can be retrieved in a batch. Format:
 *  accounts/{accountId}/userLinks/{userLinkId}
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all provided values for the 'names' field must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchGetUserLinksResponse.
 *
 *  Gets information about multiple users' links to an account or property.
 *
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all provided values for the 'names' field
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchGet
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchUpdate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent field in the UpdateUserLinkRequest messages must either be
 *  empty or match this field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksResponse.
 *
 *  Updates information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent field in the UpdateUserLinkRequest messages
 *    must either be empty or match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  Method: analyticsadmin.accounts.userLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Optional. If set, then email the new user notifying them that they've been
 *  granted permissions to the resource.
 */
@property(nonatomic, assign) BOOL notifyNewUser;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a user link on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksDelete : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a user link on an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a user's link to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksGet : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Gets information about a user's link to an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of user links to return. The service may return fewer
 *  than this value. If unspecified, at most 200 user links will be returned.
 *  The maximum value is 500; values above 500 will be coerced to 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListUserLinks` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListUserLinks` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListUserLinksResponse.
 *
 *  Lists all user links on an account or property.
 *
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a user link on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksPatch : GTLRGoogleAnalyticsAdminQuery

/** Output only. Example format: properties/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Updates a user link on an account or property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param name Output only. Example format: properties/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes an android app stream on a property.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the android app data stream to delete. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/123/androidAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes an android app stream on a property.
 *
 *  @param name Required. The name of the android app data stream to delete.
 *    Format: properties/{property_id}/androidAppDataStreams/{stream_id}
 *    Example: "properties/123/androidAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single AndroidAppDataStream
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the android app data stream to lookup. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/123/androidAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream.
 *
 *  Lookup for a single AndroidAppDataStream
 *
 *  @param name Required. The name of the android app data stream to lookup.
 *    Format: properties/{property_id}/androidAppDataStreams/{stream_id}
 *    Example: "properties/123/androidAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child android app streams under the specified parent property.
 *  Android app streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant android app streams are found.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `ListAndroidAppDataStreams` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to limit results to
 *  app streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaListAndroidAppDataStreamsResponse.
 *
 *  Returns child android app streams under the specified parent property.
 *  Android app streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant android app streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    limit results to app streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.measurementProtocolSecrets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The parent resource where this secret will be created. Any type of
 *  stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *  parent. Format: properties/{property}/webDataStreams/{webDataStream}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Creates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param parent Required. The parent resource where this secret will be
 *    created. Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes target MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.measurementProtocolSecrets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the MeasurementProtocolSecret to delete. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes target MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the MeasurementProtocolSecret to delete.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.measurementProtocolSecrets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the measurement protocol secret to lookup. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the measurement protocol secret to lookup.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.measurementProtocolSecrets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 10
 *  resources will be returned. The maximum value is 10. Higher values will be
 *  coerced to the maximum.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListMeasurementProtocolSecrets`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListMeasurementProtocolSecrets` must match the
 *  call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent stream. Any type of stream
 *  (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a parent.
 *  Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaListMeasurementProtocolSecretsResponse.
 *
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  @param parent Required. The resource name of the parent stream. Any type of
 *    stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *    parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.measurementProtocolSecrets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this secret. This secret may be a child of any
 *  type of stream. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. Omitted fields will not be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Updates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param name Output only. Resource name of this secret. This secret may be a
 *    child of any type of stream. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsMeasurementProtocolSecretsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                           name:(NSString *)name;

@end

/**
 *  Updates an android app stream on a property.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/1000/androidAppDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream.
 *
 *  Updates an android app stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *    "properties/1000/androidAppDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a conversion event with the specified attributes.
 *
 *  Method: analyticsadmin.properties.conversionEvents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the parent property where this conversion
 *  event will be created. Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaConversionEvent.
 *
 *  Creates a conversion event with the specified attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaConversionEvent to
 *    include in the query.
 *  @param parent Required. The resource name of the parent property where this
 *    conversion event will be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaConversionEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a conversion event in a property.
 *
 *  Method: analyticsadmin.properties.conversionEvents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the conversion event to delete. Format:
 *  properties/{property}/conversionEvents/{conversion_event} Example:
 *  "properties/123/conversionEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a conversion event in a property.
 *
 *  @param name Required. The resource name of the conversion event to delete.
 *    Format: properties/{property}/conversionEvents/{conversion_event} Example:
 *    "properties/123/conversionEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single conversion event.
 *
 *  Method: analyticsadmin.properties.conversionEvents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the conversion event to retrieve. Format:
 *  properties/{property}/conversionEvents/{conversion_event} Example:
 *  "properties/123/conversionEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaConversionEvent.
 *
 *  Retrieve a single conversion event.
 *
 *  @param name Required. The resource name of the conversion event to retrieve.
 *    Format: properties/{property}/conversionEvents/{conversion_event} Example:
 *    "properties/123/conversionEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a list of conversion events in the specified parent property.
 *  Returns an empty list if no conversion events are found.
 *
 *  Method: analyticsadmin.properties.conversionEvents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListConversionEvents` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListConversionEvents` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent property. Example:
 *  'properties/123'
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListConversionEventsResponse.
 *
 *  Returns a list of conversion events in the specified parent property.
 *  Returns an empty list if no conversion events are found.
 *
 *  @param parent Required. The resource name of the parent property. Example:
 *    'properties/123'
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an "GA4" property with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Creates an "GA4" property with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaProperty to include in
 *    the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProperty *)object;

@end

/**
 *  Archives a CustomDimension on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsArchive : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomDimension to archive. Example format:
 *  properties/1234/customDimensions/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Archives a CustomDimension on a property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomDimensionRequest to include
 *    in the query.
 *  @param name Required. The name of the CustomDimension to archive. Example
 *    format: properties/1234/customDimensions/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsArchive
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomDimensionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a CustomDimension.
 *
 *  Method: analyticsadmin.properties.customDimensions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension.
 *
 *  Creates a CustomDimension.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension to
 *    include in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lookup for a single CustomDimension.
 *
 *  Method: analyticsadmin.properties.customDimensions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomDimension to get. Example format:
 *  properties/1234/customDimensions/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension.
 *
 *  Lookup for a single CustomDimension.
 *
 *  @param name Required. The name of the CustomDimension to get. Example
 *    format: properties/1234/customDimensions/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CustomDimensions on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListCustomDimensions` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListCustomDimensions` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListCustomDimensionsResponse.
 *
 *  Lists CustomDimensions on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a CustomDimension on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name for this CustomDimension resource. Format:
 *  properties/{property}/customDimensions/{customDimension}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension.
 *
 *  Updates a CustomDimension on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension to
 *    include in the query.
 *  @param name Output only. Resource name for this CustomDimension resource.
 *    Format: properties/{property}/customDimensions/{customDimension}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaCustomDimension *)object
                           name:(NSString *)name;

@end

/**
 *  Archives a CustomMetric on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsArchive : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomMetric to archive. Example format:
 *  properties/1234/customMetrics/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Archives a CustomMetric on a property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomMetricRequest to include in
 *    the query.
 *  @param name Required. The name of the CustomMetric to archive. Example
 *    format: properties/1234/customMetrics/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsArchive
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaArchiveCustomMetricRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a CustomMetric.
 *
 *  Method: analyticsadmin.properties.customMetrics.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric.
 *
 *  Creates a CustomMetric.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric to include
 *    in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lookup for a single CustomMetric.
 *
 *  Method: analyticsadmin.properties.customMetrics.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomMetric to get. Example format:
 *  properties/1234/customMetrics/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric.
 *
 *  Lookup for a single CustomMetric.
 *
 *  @param name Required. The name of the CustomMetric to get. Example format:
 *    properties/1234/customMetrics/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CustomMetrics on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListCustomMetrics` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListCustomMetrics` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListCustomMetricsResponse.
 *
 *  Lists CustomMetrics on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a CustomMetric on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name for this CustomMetric resource. Format:
 *  properties/{property}/customMetrics/{customMetric}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric.
 *
 *  Updates a CustomMetric on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric to include
 *    in the query.
 *  @param name Output only. Resource name for this CustomMetric resource.
 *    Format: properties/{property}/customMetrics/{customMetric}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaCustomMetric *)object
                           name:(NSString *)name;

@end

/**
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found, or is not an GA4 Property.
 *
 *  Method: analyticsadmin.properties.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the Property to soft-delete. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found, or is not an GA4 Property.
 *
 *  @param name Required. The name of the Property to soft-delete. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Format: properties/{property_id} Example: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink.
 *
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink to include
 *    in the query.
 *  @param parent Required. Format: properties/{property_id} Example:
 *    properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a FirebaseLink on a property
 *
 *  Method: analyticsadmin.properties.firebaseLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}
 *  Example: properties/1234/firebaseLinks/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a FirebaseLink on a property
 *
 *  @param name Required. Format:
 *    properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
 *    properties/1234/firebaseLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListFirebaseLinks` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListProperties` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Format: properties/{property_id} Example: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListFirebaseLinksResponse.
 *
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  @param parent Required. Format: properties/{property_id} Example:
 *    properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lookup for a single "GA4" Property.
 *
 *  Method: analyticsadmin.properties.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the property to lookup. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Lookup for a single "GA4" Property.
 *
 *  @param name Required. The name of the property to lookup. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for Google Signals settings for a property.
 *
 *  Method: analyticsadmin.properties.getGoogleSignalsSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGetGoogleSignalsSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the google signals settings to retrieve. Format:
 *  properties/{property}/googleSignalsSettings
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleSignalsSettings.
 *
 *  Lookup for Google Signals settings for a property.
 *
 *  @param name Required. The name of the google signals settings to retrieve.
 *    Format: properties/{property}/googleSignalsSettings
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGetGoogleSignalsSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a GoogleAdsLink.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink.
 *
 *  Creates a GoogleAdsLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink to
 *    include in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234/googleAdsLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a GoogleAdsLink on a property
 *
 *  @param name Required. Example format: properties/1234/googleAdsLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists GoogleAdsLinks on a property.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListGoogleAdsLinks` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListGoogleAdsLinks` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListGoogleAdsLinksResponse.
 *
 *  Lists GoogleAdsLinks on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Format:
 *  properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *  googleAdsLinkId is not the Google Ads customer ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink.
 *
 *  Updates a GoogleAdsLink on a property
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink to
 *    include in the query.
 *  @param name Output only. Format:
 *    properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *    googleAdsLinkId is not the Google Ads customer ID.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes an iOS app stream on a property.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the iOS app data stream to delete. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/123/iosAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes an iOS app stream on a property.
 *
 *  @param name Required. The name of the iOS app data stream to delete. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/123/iosAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single IosAppDataStream
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the iOS app data stream to lookup. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/123/iosAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream.
 *
 *  Lookup for a single IosAppDataStream
 *
 *  @param name Required. The name of the iOS app data stream to lookup. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/123/iosAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child iOS app data streams under the specified parent property. iOS
 *  app data streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant iOS app data streams are found.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListIosAppDataStreams` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListIosAppDataStreams` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to list results of
 *  app streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListIosAppDataStreamsResponse.
 *
 *  Returns child iOS app data streams under the specified parent property. iOS
 *  app data streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant iOS app data streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    list results of app streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.measurementProtocolSecrets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The parent resource where this secret will be created. Any type of
 *  stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *  parent. Format: properties/{property}/webDataStreams/{webDataStream}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Creates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param parent Required. The parent resource where this secret will be
 *    created. Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes target MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.measurementProtocolSecrets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the MeasurementProtocolSecret to delete. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes target MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the MeasurementProtocolSecret to delete.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.measurementProtocolSecrets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the measurement protocol secret to lookup. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the measurement protocol secret to lookup.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.measurementProtocolSecrets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 10
 *  resources will be returned. The maximum value is 10. Higher values will be
 *  coerced to the maximum.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListMeasurementProtocolSecrets`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListMeasurementProtocolSecrets` must match the
 *  call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent stream. Any type of stream
 *  (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a parent.
 *  Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaListMeasurementProtocolSecretsResponse.
 *
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  @param parent Required. The resource name of the parent stream. Any type of
 *    stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *    parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.measurementProtocolSecrets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this secret. This secret may be a child of any
 *  type of stream. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. Omitted fields will not be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Updates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param name Output only. Resource name of this secret. This secret may be a
 *    child of any type of stream. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsMeasurementProtocolSecretsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                           name:(NSString *)name;

@end

/**
 *  Updates an iOS app stream on a property.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/1000/iosAppDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream.
 *
 *  Updates an iOS app stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/1000/iosAppDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Returns child Properties under the specified parent Account. Only "GA4"
 *  properties will be returned. Properties will be excluded if the caller does
 *  not have access. Soft-deleted (ie: "trashed") properties are excluded by
 *  default. Returns an empty list if no relevant properties are found.
 *
 *  Method: analyticsadmin.properties.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesList : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. An expression for filtering the results of the request. Fields
 *  eligible for filtering are: `parent:`(The resource name of the parent
 *  account) or `firebase_project:`(The id or number of the linked firebase
 *  project). Some examples of filters: ``` | Filter | Description |
 *  |-----------------------------|-------------------------------------------|
 *  | parent:accounts/123 | The account with account id: 123. | |
 *  firebase_project:project-id | The firebase project with id: project-id. | |
 *  firebase_project:123 | The firebase project with number: 123. | ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListProperties` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListProperties` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Properties in the results.
 *  Properties can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListPropertiesResponse.
 *
 *  Returns child Properties under the specified parent Account. Only "GA4"
 *  properties will be returned. Properties will be excluded if the caller does
 *  not have access. Soft-deleted (ie: "trashed") properties are excluded by
 *  default. Returns an empty list if no relevant properties are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates a property.
 *
 *  Method: analyticsadmin.properties.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this property. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Updates a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaProperty to include in
 *    the query.
 *  @param name Output only. Resource name of this property. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProperty *)object
                           name:(NSString *)name;

@end

/**
 *  Updates Google Signals settings for a property.
 *
 *  Method: analyticsadmin.properties.updateGoogleSignalsSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUpdateGoogleSignalsSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this setting. Format:
 *  properties/{property_id}/googleSignalsSettings Example:
 *  "properties/1000/googleSignalsSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleSignalsSettings.
 *
 *  Updates Google Signals settings for a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleSignalsSettings
 *    to include in the query.
 *  @param name Output only. Resource name of this setting. Format:
 *    properties/{property_id}/googleSignalsSettings Example:
 *    "properties/1000/googleSignalsSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUpdateGoogleSignalsSettings
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaGoogleSignalsSettings *)object
                           name:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  Method: analyticsadmin.properties.userLinks.audit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksAudit : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksResponse.
 *
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest
 *    to include in the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksAudit
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  Method: analyticsadmin.properties.userLinks.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. This field is required. The parent field in the CreateUserLinkRequest
 *  messages must either be empty or match this field. Example format:
 *  accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksResponse.
 *
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. This field is required. The parent field in the
 *    CreateUserLinkRequest messages must either be empty or match this field.
 *    Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all values for user link names to delete must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all values for user link names to delete
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The names of the user links to retrieve. A maximum of 1000 user
 *  links can be retrieved in a batch. Format:
 *  accounts/{accountId}/userLinks/{userLinkId}
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all provided values for the 'names' field must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchGetUserLinksResponse.
 *
 *  Gets information about multiple users' links to an account or property.
 *
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all provided values for the 'names' field
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchGet
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchUpdate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent field in the UpdateUserLinkRequest messages must either be
 *  empty or match this field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksResponse.
 *
 *  Updates information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent field in the UpdateUserLinkRequest messages
 *    must either be empty or match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  Method: analyticsadmin.properties.userLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Optional. If set, then email the new user notifying them that they've been
 *  granted permissions to the resource.
 */
@property(nonatomic, assign) BOOL notifyNewUser;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a user link on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksDelete : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a user link on an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a user's link to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksGet : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Gets information about a user's link to an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of user links to return. The service may return fewer
 *  than this value. If unspecified, at most 200 user links will be returned.
 *  The maximum value is 500; values above 500 will be coerced to 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListUserLinks` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListUserLinks` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListUserLinksResponse.
 *
 *  Lists all user links on an account or property.
 *
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a user link on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksPatch : GTLRGoogleAnalyticsAdminQuery

/** Output only. Example format: properties/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Updates a user link on an account or property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param name Output only. Example format: properties/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a web stream with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.webDataStreams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The parent resource where this web data stream will be created.
 *  Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Creates a web stream with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream to
 *    include in the query.
 *  @param parent Required. The parent resource where this web data stream will
 *    be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a web stream on a property.
 *
 *  Method: analyticsadmin.properties.webDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the web data stream to delete. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/123/webDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a web stream on a property.
 *
 *  @param name Required. The name of the web data stream to delete. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/123/webDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single WebDataStream
 *
 *  Method: analyticsadmin.properties.webDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the web data stream to lookup. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/123/webDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Lookup for a single WebDataStream
 *
 *  @param name Required. The name of the web data stream to lookup. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/123/webDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  Method: analyticsadmin.properties.webDataStreams.getEnhancedMeasurementSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetEnhancedMeasurementSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the settings to lookup. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *  Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings.
 *
 *  Returns the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *    Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetEnhancedMeasurementSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the Site Tag for the specified web stream. Site Tags are immutable
 *  singletons.
 *
 *  Method: analyticsadmin.properties.webDataStreams.getGlobalSiteTag
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetGlobalSiteTag : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the site tag to lookup. Note that site tags are
 *  singletons and do not have unique IDs. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
 *  "properties/123/webDataStreams/456/globalSiteTag"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGlobalSiteTag.
 *
 *  Returns the Site Tag for the specified web stream. Site Tags are immutable
 *  singletons.
 *
 *  @param name Required. The name of the site tag to lookup. Note that site
 *    tags are singletons and do not have unique IDs. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
 *    "properties/123/webDataStreams/456/globalSiteTag"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetGlobalSiteTag
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child web data streams under the specified parent property. Web data
 *  streams will be excluded if the caller does not have access. Returns an
 *  empty list if no relevant web data streams are found.
 *
 *  Method: analyticsadmin.properties.webDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListWebDataStreams` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListWebDataStreams` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to list results of
 *  web streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListWebDataStreamsResponse.
 *
 *  Returns child web data streams under the specified parent property. Web data
 *  streams will be excluded if the caller does not have access. Returns an
 *  empty list if no relevant web data streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    list results of web streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.webDataStreams.measurementProtocolSecrets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The parent resource where this secret will be created. Any type of
 *  stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *  parent. Format: properties/{property}/webDataStreams/{webDataStream}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Creates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param parent Required. The parent resource where this secret will be
 *    created. Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes target MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.webDataStreams.measurementProtocolSecrets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the MeasurementProtocolSecret to delete. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes target MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the MeasurementProtocolSecret to delete.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.webDataStreams.measurementProtocolSecrets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the measurement protocol secret to lookup. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *  Note: Any type of stream (WebDataStream, IosAppDataStream,
 *  AndroidAppDataStream) may be a parent.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Lookup for a single "GA4" MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the measurement protocol secret to lookup.
 *    Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *    Note: Any type of stream (WebDataStream, IosAppDataStream,
 *    AndroidAppDataStream) may be a parent.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  Method: analyticsadmin.properties.webDataStreams.measurementProtocolSecrets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 10
 *  resources will be returned. The maximum value is 10. Higher values will be
 *  coerced to the maximum.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListMeasurementProtocolSecrets`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListMeasurementProtocolSecrets` must match the
 *  call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent stream. Any type of stream
 *  (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a parent.
 *  Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaListMeasurementProtocolSecretsResponse.
 *
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  @param parent Required. The resource name of the parent stream. Any type of
 *    stream (WebDataStream, IosAppDataStream, AndroidAppDataStream) may be a
 *    parent. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.webDataStreams.measurementProtocolSecrets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this secret. This secret may be a child of any
 *  type of stream. Format:
 *  properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. Omitted fields will not be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret.
 *
 *  Updates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret to include in
 *    the query.
 *  @param name Output only. Resource name of this secret. This secret may be a
 *    child of any type of stream. Format:
 *    properties/{property}/webDataStreams/{webDataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsMeasurementProtocolSecretsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaMeasurementProtocolSecret *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a web stream on a property.
 *
 *  Method: analyticsadmin.properties.webDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/1000/webDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Updates a web stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/1000/webDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  Method: analyticsadmin.properties.webDataStreams.updateEnhancedMeasurementSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsUpdateEnhancedMeasurementSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *  Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings.
 *
 *  Updates the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings to include in
 *    the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *    Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsUpdateEnhancedMeasurementSettings
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
