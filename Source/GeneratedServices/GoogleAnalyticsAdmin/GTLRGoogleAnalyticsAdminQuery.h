// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Admin API (analyticsadmin/v1alpha)
// Documentation:
//   http://code.google.com/apis/analytics/docs/mgmt/home.html

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRGoogleAnalyticsAdmin_V1alphaAccount;
@class GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream;
@class GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings;
@class GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream;
@class GTLRGoogleAnalyticsAdmin_V1alphaProperty;
@class GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest;
@class GTLRGoogleAnalyticsAdmin_V1alphaUserLink;
@class GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Google Analytics Admin query classes.
 */
@interface GTLRGoogleAnalyticsAdminQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  Method: analyticsadmin.accounts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsDeleteWithname:]

/**
 *  Required. The name of the Account to soft-delete. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  @param name Required. The name of the Account to soft-delete. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single Account. Throws "Target not found" if no such account
 *  found, or if caller does not have permissions to access it.
 *
 *  Method: analyticsadmin.accounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsGetWithname:]

/**
 *  Required. The name of the account to lookup. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAccount.
 *
 *  Lookup for a single Account. Throws "Target not found" if no such account
 *  found, or if caller does not have permissions to access it.
 *
 *  @param name Required. The name of the account to lookup. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  Method: analyticsadmin.accounts.getDataSharingSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsGetDataSharingSettingsWithname:]

/**
 *  Required. The name of the settings to lookup. Format:
 *  accounts/{account}/dataSharingSettings Example:
 *  "accounts/1000/dataSharingSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaDataSharingSettings.
 *
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    accounts/{account}/dataSharingSettings Example:
 *    "accounts/1000/dataSharingSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA4 properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  Method: analyticsadmin.accounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsList]

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccounts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAccounts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Accounts in the results.
 *  Accounts can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListAccountsResponse.
 *
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA4 properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates an account.
 *
 *  Method: analyticsadmin.accounts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsPatchWithObject:name:]

/**
 *  Output only. Resource name of this account. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAccount.
 *
 *  Updates an account.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAccount to include in
 *    the query.
 *  @param name Output only. Resource name of this account. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAccount *)object
                           name:(NSString *)name;

@end

/**
 *  Requests a ticket for creating an account.
 *
 *  Method: analyticsadmin.accounts.provisionAccountTicket
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsProvisionAccountTicketWithObject:]

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketResponse.
 *
 *  Requests a ticket for creating an account.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest to include
 *    in the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProvisionAccountTicketRequest *)object;

@end

/**
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  Method: analyticsadmin.accountSummaries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountSummariesList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountSummariesList]

/**
 *  The maximum number of AccountSummary resources to return. The service may
 *  return fewer than this value, even if there are additional pages. If
 *  unspecified, at most 50 resources will be returned. The maximum value is
 *  200; (higher values will be coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccountSummaries` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListAccountSummaries` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListAccountSummariesResponse.
 *
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountSummariesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  Method: analyticsadmin.accounts.userLinks.audit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksAudit : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksAuditWithObject:parent:]

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksResponse.
 *
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest
 *    to include in the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksAudit
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksBatchCreateWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. This field is required. The parent field in the CreateUserLinkRequest
 *  messages must either be empty or match this field. Example format:
 *  accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksResponse.
 *
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. This field is required. The parent field in the
 *    CreateUserLinkRequest messages must either be empty or match this field.
 *    Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksBatchDeleteWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all values for user link names to delete must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all values for user link names to delete
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksBatchGetWithparent:]

/**
 *  Required. The names of the user links to retrieve. A maximum of 1000 user
 *  links can be retrieved in a batch. Format:
 *  accounts/{accountId}/userLinks/{userLinkId}
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all provided values for the 'names' field must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchGetUserLinksResponse.
 *
 *  Gets information about multiple users' links to an account or property.
 *
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all provided values for the 'names' field
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchGet
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchUpdate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksBatchUpdateWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent field in the UpdateUserLinkRequest messages must either be
 *  empty or match this field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksResponse.
 *
 *  Updates information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent field in the UpdateUserLinkRequest messages
 *    must either be empty or match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  Method: analyticsadmin.accounts.userLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksCreateWithObject:parent:]

/**
 *  Optional. If set, then email the new user notifying them that they've been
 *  granted permissions to the resource.
 */
@property(nonatomic, assign) BOOL notifyNewUser;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a user link on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksDeleteWithname:]

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a user link on an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a user's link to an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksGetWithname:]

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Gets information about a user's link to an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksListWithparent:]

/**
 *  The maximum number of user links to return. The service may return fewer
 *  than this value. If unspecified, at most 200 user links will be returned.
 *  The maximum value is 500; values above 500 will be coerced to 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListUserLinks` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListUserLinks` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListUserLinksResponse.
 *
 *  Lists all user links on an account or property.
 *
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a user link on an account or property.
 *
 *  Method: analyticsadmin.accounts.userLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForAccountsUserLinksPatchWithObject:name:]

/** Example format: properties/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Updates a user link on an account or property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param name Example format: properties/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsUserLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an android app stream with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesAndroidAppDataStreamsCreateWithObject:parent:]

/**
 *  Required. The parent resource where this android app data stream will be
 *  created. Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream.
 *
 *  Creates an android app stream with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream to
 *    include in the query.
 *  @param parent Required. The parent resource where this android app data
 *    stream will be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an android app stream on a property.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesAndroidAppDataStreamsDeleteWithname:]

/**
 *  Required. The name of the android app data stream to delete. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/123/androidAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes an android app stream on a property.
 *
 *  @param name Required. The name of the android app data stream to delete.
 *    Format: properties/{property_id}/androidAppDataStreams/{stream_id}
 *    Example: "properties/123/androidAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single AndroidAppDataStream Throws "Target not found" if no
 *  such android app data stream found, or if the caller does not have
 *  permissions to access it.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesAndroidAppDataStreamsGetWithname:]

/**
 *  Required. The name of the android app data stream to lookup. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/123/androidAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream.
 *
 *  Lookup for a single AndroidAppDataStream Throws "Target not found" if no
 *  such android app data stream found, or if the caller does not have
 *  permissions to access it.
 *
 *  @param name Required. The name of the android app data stream to lookup.
 *    Format: properties/{property_id}/androidAppDataStreams/{stream_id}
 *    Example: "properties/123/androidAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child android app streams under the specified parent property.
 *  Android app streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant android app streams are found.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesAndroidAppDataStreamsListWithparent:]

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `ListAndroidAppDataStreams` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to limit results to
 *  app streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1alphaListAndroidAppDataStreamsResponse.
 *
 *  Returns child android app streams under the specified parent property.
 *  Android app streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant android app streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    limit results to app streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an android app stream on a property.
 *
 *  Method: analyticsadmin.properties.androidAppDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesAndroidAppDataStreamsPatchWithObject:name:]

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *  "properties/1000/androidAppDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream.
 *
 *  Updates an android app stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/androidAppDataStreams/{stream_id} Example:
 *    "properties/1000/androidAppDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAndroidAppDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAndroidAppDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an "GA4" property with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesCreateWithObject:]

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Creates an "GA4" property with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaProperty to include in
 *    the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProperty *)object;

@end

/**
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found, or is not an GA4 Property.
 *
 *  Method: analyticsadmin.properties.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesDeleteWithname:]

/**
 *  Required. The name of the Property to soft-delete. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found, or is not an GA4 Property.
 *
 *  @param name Required. The name of the Property to soft-delete. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesFirebaseLinksCreateWithObject:parent:]

/** Required. Format: properties/{property_id} Example: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink.
 *
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink to include
 *    in the query.
 *  @param parent Required. Format: properties/{property_id} Example:
 *    properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a FirebaseLink on a property
 *
 *  Method: analyticsadmin.properties.firebaseLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesFirebaseLinksDeleteWithname:]

/**
 *  Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}
 *  Example: properties/1234/firebaseLinks/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a FirebaseLink on a property
 *
 *  @param name Required. Format:
 *    properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
 *    properties/1234/firebaseLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesFirebaseLinksListWithparent:]

/** Required. Format: properties/{property_id} Example: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListFirebaseLinksResponse.
 *
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  @param parent Required. Format: properties/{property_id} Example:
 *    properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a FirebaseLink on a property
 *
 *  Method: analyticsadmin.properties.firebaseLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesFirebaseLinksPatchWithObject:name:]

/** Output only. Example format: properties/1234/firebaseLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink.
 *
 *  Updates a FirebaseLink on a property
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink to include
 *    in the query.
 *  @param name Output only. Example format: properties/1234/firebaseLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaFirebaseLink *)object
                           name:(NSString *)name;

@end

/**
 *  Lookup for a single "GA4" Property. Throws "Target not found" if no such
 *  property found, if property is not of the type "GA4", or if caller does not
 *  have permissions to access it.
 *
 *  Method: analyticsadmin.properties.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesGetWithname:]

/**
 *  Required. The name of the property to lookup. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Lookup for a single "GA4" Property. Throws "Target not found" if no such
 *  property found, if property is not of the type "GA4", or if caller does not
 *  have permissions to access it.
 *
 *  @param name Required. The name of the property to lookup. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a GoogleAdsLink.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesGoogleAdsLinksCreateWithObject:parent:]

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink.
 *
 *  Creates a GoogleAdsLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink to
 *    include in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesGoogleAdsLinksDeleteWithname:]

/** Required. Example format: properties/1234/googleAdsLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a GoogleAdsLink on a property
 *
 *  @param name Required. Example format: properties/1234/googleAdsLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists GoogleAdsLinks on a property.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesGoogleAdsLinksListWithparent:]

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListGoogleAdsLinks` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListGoogleAdsLinks` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListGoogleAdsLinksResponse.
 *
 *  Lists GoogleAdsLinks on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesGoogleAdsLinksPatchWithObject:name:]

/**
 *  Output only. Format:
 *  properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *  googleAdsLinkId is not the Google Ads customer ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink.
 *
 *  Updates a GoogleAdsLink on a property
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink to
 *    include in the query.
 *  @param name Output only. Format:
 *    properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *    googleAdsLinkId is not the Google Ads customer ID.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaGoogleAdsLink *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an iOS app data stream with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesIosAppDataStreamsCreateWithObject:parent:]

/**
 *  Required. The parent resource where this ios app data stream will be
 *  created. Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream.
 *
 *  Creates an iOS app data stream with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream to
 *    include in the query.
 *  @param parent Required. The parent resource where this ios app data stream
 *    will be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an iOS app stream on a property.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesIosAppDataStreamsDeleteWithname:]

/**
 *  Required. The name of the iOS app data stream to delete. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/123/iosAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes an iOS app stream on a property.
 *
 *  @param name Required. The name of the iOS app data stream to delete. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/123/iosAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single IosAppDataStream Throws "Target not found" if no such
 *  iOS app data stream found, or if the caller does not have permissions to
 *  access it.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesIosAppDataStreamsGetWithname:]

/**
 *  Required. The name of the iOS app data stream to lookup. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/123/iosAppDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream.
 *
 *  Lookup for a single IosAppDataStream Throws "Target not found" if no such
 *  iOS app data stream found, or if the caller does not have permissions to
 *  access it.
 *
 *  @param name Required. The name of the iOS app data stream to lookup. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/123/iosAppDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child iOS app data streams under the specified parent property. iOS
 *  app data streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant iOS app data streams are found.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesIosAppDataStreamsListWithparent:]

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListIosAppDataStreams` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListIosAppDataStreams` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to list results of
 *  app streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListIosAppDataStreamsResponse.
 *
 *  Returns child iOS app data streams under the specified parent property. iOS
 *  app data streams will be excluded if the caller does not have access.
 *  Returns an empty list if no relevant iOS app data streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    list results of app streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an iOS app stream on a property.
 *
 *  Method: analyticsadmin.properties.iosAppDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesIosAppDataStreamsPatchWithObject:name:]

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *  "properties/1000/iosAppDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream.
 *
 *  Updates an iOS app stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/iosAppDataStreams/{stream_id} Example:
 *    "properties/1000/iosAppDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesIosAppDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaIosAppDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Returns child Properties under the specified parent Account. Only "GA4"
 *  properties will be returned. Properties will be excluded if the caller does
 *  not have access. Soft-deleted (ie: "trashed") properties are excluded by
 *  default. Returns an empty list if no relevant properties are found.
 *
 *  Method: analyticsadmin.properties.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesList]

/**
 *  Required. An expression for filtering the results of the request. Fields
 *  eligible for filtering are: `parent:`(The resource name of the parent
 *  account) or `firebase_project:`(The id or number of the linked firebase
 *  project). Some examples of filters: | Filter | Description |
 *  |-----------------------------|-------------------------------------------|
 *  | parent:accounts/123 | The account with account id: 123. | |
 *  firebase_project:project-id | The firebase project with id: project-id. | |
 *  firebase_project:123 | The firebase project with number: 123. |
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListProperties` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListProperties` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Properties in the results.
 *  Properties can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListPropertiesResponse.
 *
 *  Returns child Properties under the specified parent Account. Only "GA4"
 *  properties will be returned. Properties will be excluded if the caller does
 *  not have access. Soft-deleted (ie: "trashed") properties are excluded by
 *  default. Returns an empty list if no relevant properties are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates a property.
 *
 *  Method: analyticsadmin.properties.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesPatchWithObject:name:]

/**
 *  Output only. Resource name of this property. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaProperty.
 *
 *  Updates a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaProperty to include in
 *    the query.
 *  @param name Output only. Resource name of this property. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaProperty *)object
                           name:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  Method: analyticsadmin.properties.userLinks.audit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksAudit : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksAuditWithObject:parent:]

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksResponse.
 *
 *  Lists all user links on an account or property, including implicit ones that
 *  come from effective permissions granted by groups or organization admin
 *  roles. If a returned user link does not have direct permissions, they cannot
 *  be removed from the account or property directly with the DeleteUserLink
 *  command. They have to be removed from the group/etc that gives them
 *  permissions, which is currently only usable/discoverable in the GA or GMP
 *  UIs.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest
 *    to include in the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksAudit
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaAuditUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  Method: analyticsadmin.properties.userLinks.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksBatchCreateWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. This field is required. The parent field in the CreateUserLinkRequest
 *  messages must either be empty or match this field. Example format:
 *  accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksResponse.
 *
 *  Creates information about multiple users' links to an account or property.
 *  This method is transactional. If any UserLink cannot be created, none of the
 *  UserLinks will be created.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. This field is required. The parent field in the
 *    CreateUserLinkRequest messages must either be empty or match this field.
 *    Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchCreateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksBatchDeleteWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all values for user link names to delete must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all values for user link names to delete
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchDeleteUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchGet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksBatchGetWithparent:]

/**
 *  Required. The names of the user links to retrieve. A maximum of 1000 user
 *  links can be retrieved in a batch. Format:
 *  accounts/{accountId}/userLinks/{userLinkId}
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent of all provided values for the 'names' field must match this
 *  field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchGetUserLinksResponse.
 *
 *  Gets information about multiple users' links to an account or property.
 *
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent of all provided values for the 'names' field
 *    must match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchGet
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates information about multiple users' links to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchUpdate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksBatchUpdateWithObject:parent:]

/**
 *  Required. The account or property that all user links in the request are
 *  for. The parent field in the UpdateUserLinkRequest messages must either be
 *  empty or match this field. Example format: accounts/1234
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksResponse.
 *
 *  Updates information about multiple users' links to an account or property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest to include in
 *    the query.
 *  @param parent Required. The account or property that all user links in the
 *    request are for. The parent field in the UpdateUserLinkRequest messages
 *    must either be empty or match this field. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaBatchUpdateUserLinksRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  Method: analyticsadmin.properties.userLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksCreateWithObject:parent:]

/**
 *  Optional. If set, then email the new user notifying them that they've been
 *  granted permissions to the resource.
 */
@property(nonatomic, assign) BOOL notifyNewUser;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Creates a user link on an account or property. If the user with the
 *  specified email already has permissions on the account or property, then the
 *  user's existing permissions will be unioned with the permissions specified
 *  in the new UserLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a user link on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksDeleteWithname:]

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a user link on an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a user's link to an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksGetWithname:]

/** Required. Example format: accounts/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Gets information about a user's link to an account or property.
 *
 *  @param name Required. Example format: accounts/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all user links on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsersReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksListWithparent:]

/**
 *  The maximum number of user links to return. The service may return fewer
 *  than this value. If unspecified, at most 200 user links will be returned.
 *  The maximum value is 500; values above 500 will be coerced to 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListUserLinks` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListUserLinks` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: accounts/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListUserLinksResponse.
 *
 *  Lists all user links on an account or property.
 *
 *  @param parent Required. Example format: accounts/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a user link on an account or property.
 *
 *  Method: analyticsadmin.properties.userLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsManageUsers
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesUserLinksPatchWithObject:name:]

/** Example format: properties/1234/userLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink.
 *
 *  Updates a user link on an account or property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaUserLink to include in
 *    the query.
 *  @param name Example format: properties/1234/userLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUserLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaUserLink *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a web stream with the specified location and attributes.
 *
 *  Method: analyticsadmin.properties.webDataStreams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsCreate : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsCreateWithObject:parent:]

/**
 *  Required. The parent resource where this web data stream will be created.
 *  Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Creates a web stream with the specified location and attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream to
 *    include in the query.
 *  @param parent Required. The parent resource where this web data stream will
 *    be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a web stream on a property.
 *
 *  Method: analyticsadmin.properties.webDataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsDeleteWithname:]

/**
 *  Required. The name of the web data stream to delete. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/123/webDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a web stream on a property.
 *
 *  @param name Required. The name of the web data stream to delete. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/123/webDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single WebDataStream Throws "Target not found" if no such web
 *  data stream found, or if the caller does not have permissions to access it.
 *
 *  Method: analyticsadmin.properties.webDataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGet : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsGetWithname:]

/**
 *  Required. The name of the web data stream to lookup. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/123/webDataStreams/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Lookup for a single WebDataStream Throws "Target not found" if no such web
 *  data stream found, or if the caller does not have permissions to access it.
 *
 *  @param name Required. The name of the web data stream to lookup. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/123/webDataStreams/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  Method: analyticsadmin.properties.webDataStreams.getEnhancedMeasurementSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetEnhancedMeasurementSettings : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsGetEnhancedMeasurementSettingsWithname:]

/**
 *  Required. The name of the settings to lookup. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *  Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings.
 *
 *  Returns the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *    Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetEnhancedMeasurementSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the Site Tag for the specified web stream. Site Tags are immutable
 *  singletons.
 *
 *  Method: analyticsadmin.properties.webDataStreams.getGlobalSiteTag
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetGlobalSiteTag : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsGetGlobalSiteTagWithname:]

/**
 *  Required. The name of the site tag to lookup. Note that site tags are
 *  singletons and do not have unique IDs. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
 *  "properties/123/webDataStreams/456/globalSiteTag"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaGlobalSiteTag.
 *
 *  Returns the Site Tag for the specified web stream. Site Tags are immutable
 *  singletons.
 *
 *  @param name Required. The name of the site tag to lookup. Note that site
 *    tags are singletons and do not have unique IDs. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
 *    "properties/123/webDataStreams/456/globalSiteTag"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsGetGlobalSiteTag
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child web data streams under the specified parent property. Web data
 *  streams will be excluded if the caller does not have access. Returns an
 *  empty list if no relevant web data streams are found.
 *
 *  Method: analyticsadmin.properties.webDataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsList : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsListWithparent:]

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListWebDataStreams` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListWebDataStreams` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent property. For example, to list results of
 *  web streams under the property with Id 123: "properties/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaListWebDataStreamsResponse.
 *
 *  Returns child web data streams under the specified parent property. Web data
 *  streams will be excluded if the caller does not have access. Returns an
 *  empty list if no relevant web data streams are found.
 *
 *  @param parent Required. The name of the parent property. For example, to
 *    list results of web streams under the property with Id 123:
 *    "properties/123"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a web stream on a property.
 *
 *  Method: analyticsadmin.properties.webDataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsPatchWithObject:name:]

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/webDataStreams/{stream_id} Example:
 *  "properties/1000/webDataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream.
 *
 *  Updates a web stream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream to
 *    include in the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/webDataStreams/{stream_id} Example:
 *    "properties/1000/webDataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaWebDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  Method: analyticsadmin.properties.webDataStreams.updateEnhancedMeasurementSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsUpdateEnhancedMeasurementSettings : GTLRGoogleAnalyticsAdminQuery
// Previous library name was
//   +[GTLQueryGoogleAnalyticsAdmin queryForPropertiesWebDataStreamsUpdateEnhancedMeasurementSettingsWithObject:name:]

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *  Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings.
 *
 *  Updates the singleton enhanced measurement settings for this web stream.
 *  Note that the stream must enable enhanced measurement for these settings to
 *  take effect.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings to include in
 *    the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
 *    Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesWebDataStreamsUpdateEnhancedMeasurementSettings
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1alphaEnhancedMeasurementSettings *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
