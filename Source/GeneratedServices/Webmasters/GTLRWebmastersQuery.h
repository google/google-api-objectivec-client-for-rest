// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Search Console API (webmasters/v3)
// Description:
//   View Google Search Console data for your verified sites.
// Documentation:
//   https://developers.google.com/webmaster-tools/

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRWebmasters_SearchAnalyticsQueryRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Webmasters query classes.
 */
@interface GTLRWebmastersQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Query your data with filters and parameters that you define. Returns zero or
 *  more rows grouped by the row keys that you define. You must define a date
 *  range of one or more days.
 *  When date is one of the group by values, any days without data are omitted
 *  from the result list. If you need to know which days have data, issue a
 *  broad date range query grouped by date for any metric, and see which day
 *  rows are returned.
 *
 *  Method: webmasters.searchanalytics.query
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 *    @c kGTLRAuthScopeWebmastersReadonly
 */
@interface GTLRWebmastersQuery_SearchanalyticsQuery : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSearchanalyticsQueryWithObject:siteUrl:]

/**
 *  The site's URL, including protocol. For example: http://www.example.com/
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Fetches a @c GTLRWebmasters_SearchAnalyticsQueryResponse.
 *
 *  Query your data with filters and parameters that you define. Returns zero or
 *  more rows grouped by the row keys that you define. You must define a date
 *  range of one or more days.
 *  When date is one of the group by values, any days without data are omitted
 *  from the result list. If you need to know which days have data, issue a
 *  broad date range query grouped by date for any metric, and see which day
 *  rows are returned.
 *
 *  @param object The @c GTLRWebmasters_SearchAnalyticsQueryRequest to include
 *    in the query.
 *  @param siteUrl The site's URL, including protocol. For example:
 *    http://www.example.com/
 *
 *  @return GTLRWebmastersQuery_SearchanalyticsQuery
 */
+ (instancetype)queryWithObject:(GTLRWebmasters_SearchAnalyticsQueryRequest *)object
                        siteUrl:(NSString *)siteUrl;

@end

/**
 *  Deletes a sitemap from this site.
 *
 *  Method: webmasters.sitemaps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 */
@interface GTLRWebmastersQuery_SitemapsDelete : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitemapsDeleteWithsiteUrl:feedpath:]

/**
 *  The URL of the actual sitemap. For example:
 *  http://www.example.com/sitemap.xml
 */
@property(nonatomic, copy, nullable) NSString *feedpath;

/**
 *  The site's URL, including protocol. For example: http://www.example.com/
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a sitemap from this site.
 *
 *  @param siteUrl The site's URL, including protocol. For example:
 *    http://www.example.com/
 *  @param feedpath The URL of the actual sitemap. For example:
 *    http://www.example.com/sitemap.xml
 *
 *  @return GTLRWebmastersQuery_SitemapsDelete
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl
                        feedpath:(NSString *)feedpath;

@end

/**
 *  Retrieves information about a specific sitemap.
 *
 *  Method: webmasters.sitemaps.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 *    @c kGTLRAuthScopeWebmastersReadonly
 */
@interface GTLRWebmastersQuery_SitemapsGet : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitemapsGetWithsiteUrl:feedpath:]

/**
 *  The URL of the actual sitemap. For example:
 *  http://www.example.com/sitemap.xml
 */
@property(nonatomic, copy, nullable) NSString *feedpath;

/**
 *  The site's URL, including protocol. For example: http://www.example.com/
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Fetches a @c GTLRWebmasters_WmxSitemap.
 *
 *  Retrieves information about a specific sitemap.
 *
 *  @param siteUrl The site's URL, including protocol. For example:
 *    http://www.example.com/
 *  @param feedpath The URL of the actual sitemap. For example:
 *    http://www.example.com/sitemap.xml
 *
 *  @return GTLRWebmastersQuery_SitemapsGet
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl
                        feedpath:(NSString *)feedpath;

@end

/**
 *  Lists the sitemaps-entries submitted for this site, or included in the
 *  sitemap index file (if sitemapIndex is specified in the request).
 *
 *  Method: webmasters.sitemaps.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 *    @c kGTLRAuthScopeWebmastersReadonly
 */
@interface GTLRWebmastersQuery_SitemapsList : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitemapsListWithsiteUrl:]

/**
 *  A URL of a site's sitemap index. For example:
 *  http://www.example.com/sitemapindex.xml
 */
@property(nonatomic, copy, nullable) NSString *sitemapIndex;

/**
 *  The site's URL, including protocol. For example: http://www.example.com/
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Fetches a @c GTLRWebmasters_SitemapsListResponse.
 *
 *  Lists the sitemaps-entries submitted for this site, or included in the
 *  sitemap index file (if sitemapIndex is specified in the request).
 *
 *  @param siteUrl The site's URL, including protocol. For example:
 *    http://www.example.com/
 *
 *  @return GTLRWebmastersQuery_SitemapsList
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl;

@end

/**
 *  Submits a sitemap for a site.
 *
 *  Method: webmasters.sitemaps.submit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 */
@interface GTLRWebmastersQuery_SitemapsSubmit : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitemapsSubmitWithsiteUrl:feedpath:]

/**
 *  The URL of the sitemap to add. For example:
 *  http://www.example.com/sitemap.xml
 */
@property(nonatomic, copy, nullable) NSString *feedpath;

/**
 *  The site's URL, including protocol. For example: http://www.example.com/
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Submits a sitemap for a site.
 *
 *  @param siteUrl The site's URL, including protocol. For example:
 *    http://www.example.com/
 *  @param feedpath The URL of the sitemap to add. For example:
 *    http://www.example.com/sitemap.xml
 *
 *  @return GTLRWebmastersQuery_SitemapsSubmit
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl
                        feedpath:(NSString *)feedpath;

@end

/**
 *  Adds a site to the set of the user's sites in Search Console.
 *
 *  Method: webmasters.sites.add
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 */
@interface GTLRWebmastersQuery_SitesAdd : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitesAddWithsiteUrl:]

/** The URL of the site to add. */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Adds a site to the set of the user's sites in Search Console.
 *
 *  @param siteUrl The URL of the site to add.
 *
 *  @return GTLRWebmastersQuery_SitesAdd
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl;

@end

/**
 *  Removes a site from the set of the user's Search Console sites.
 *
 *  Method: webmasters.sites.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 */
@interface GTLRWebmastersQuery_SitesDelete : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitesDeleteWithsiteUrl:]

/**
 *  The URI of the property as defined in Search Console. Examples:
 *  http://www.example.com/ or android-app://com.example/ Note: for
 *  property-sets, use the URI that starts with sc-set: which is used in Search
 *  Console URLs.
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Removes a site from the set of the user's Search Console sites.
 *
 *  @param siteUrl The URI of the property as defined in Search Console.
 *    Examples: http://www.example.com/ or android-app://com.example/ Note: for
 *    property-sets, use the URI that starts with sc-set: which is used in
 *    Search Console URLs.
 *
 *  @return GTLRWebmastersQuery_SitesDelete
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl;

@end

/**
 *  Retrieves information about specific site.
 *
 *  Method: webmasters.sites.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 *    @c kGTLRAuthScopeWebmastersReadonly
 */
@interface GTLRWebmastersQuery_SitesGet : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitesGetWithsiteUrl:]

/**
 *  The URI of the property as defined in Search Console. Examples:
 *  http://www.example.com/ or android-app://com.example/ Note: for
 *  property-sets, use the URI that starts with sc-set: which is used in Search
 *  Console URLs.
 */
@property(nonatomic, copy, nullable) NSString *siteUrl;

/**
 *  Fetches a @c GTLRWebmasters_WmxSite.
 *
 *  Retrieves information about specific site.
 *
 *  @param siteUrl The URI of the property as defined in Search Console.
 *    Examples: http://www.example.com/ or android-app://com.example/ Note: for
 *    property-sets, use the URI that starts with sc-set: which is used in
 *    Search Console URLs.
 *
 *  @return GTLRWebmastersQuery_SitesGet
 */
+ (instancetype)queryWithSiteUrl:(NSString *)siteUrl;

@end

/**
 *  Lists the user's Search Console sites.
 *
 *  Method: webmasters.sites.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWebmasters
 *    @c kGTLRAuthScopeWebmastersReadonly
 */
@interface GTLRWebmastersQuery_SitesList : GTLRWebmastersQuery
// Previous library name was
//   +[GTLQueryWebmasters queryForSitesList]

/**
 *  Fetches a @c GTLRWebmasters_SitesListResponse.
 *
 *  Lists the user's Search Console sites.
 *
 *  @return GTLRWebmastersQuery_SitesList
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
