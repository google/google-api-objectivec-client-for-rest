// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Search Console API (webmasters/v3)
// Description:
//   View Google Search Console data for your verified sites.
// Documentation:
//   https://developers.google.com/webmaster-tools/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRWebmasters_ApiDataRow;
@class GTLRWebmasters_ApiDimensionFilter;
@class GTLRWebmasters_ApiDimensionFilterGroup;
@class GTLRWebmasters_UrlCrawlErrorCount;
@class GTLRWebmasters_UrlCrawlErrorCountsPerType;
@class GTLRWebmasters_UrlCrawlErrorsSample;
@class GTLRWebmasters_UrlSampleDetails;
@class GTLRWebmasters_WmxSite;
@class GTLRWebmasters_WmxSitemap;
@class GTLRWebmasters_WmxSitemapContent;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRWebmasters_ApiDataRow
 */
@interface GTLRWebmasters_ApiDataRow : GTLRObject

/**
 *  clicks
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clicks;

/**
 *  ctr
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ctr;

/**
 *  impressions
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressions;

@property(nonatomic, strong, nullable) NSArray<NSString *> *keys;

/**
 *  position
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *position;

@end


/**
 *  GTLRWebmasters_ApiDimensionFilter
 */
@interface GTLRWebmasters_ApiDimensionFilter : GTLRObject

@property(nonatomic, copy, nullable) NSString *dimension;
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  operatorProperty
 *
 *  Remapped to 'operatorProperty' to avoid language reserved word 'operator'.
 */
@property(nonatomic, copy, nullable) NSString *operatorProperty;

@end


/**
 *  GTLRWebmasters_ApiDimensionFilterGroup
 */
@interface GTLRWebmasters_ApiDimensionFilterGroup : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_ApiDimensionFilter *> *filters;
@property(nonatomic, copy, nullable) NSString *groupType;

@end


/**
 *  GTLRWebmasters_SearchAnalyticsQueryRequest
 */
@interface GTLRWebmasters_SearchAnalyticsQueryRequest : GTLRObject

/**
 *  [Optional; Default is "auto"] How data is aggregated. If aggregated by
 *  property, all data for the same property is aggregated; if aggregated by
 *  page, all data is aggregated by canonical URI. If you filter or group by
 *  page, choose AUTO; otherwise you can aggregate either by property or by
 *  page, depending on how you want your data calculated; see the help
 *  documentation to learn how data is calculated differently by site versus by
 *  page.
 *  Note: If you group or filter by page, you cannot aggregate by property.
 *  If you specify any value other than AUTO, the aggregation type in the result
 *  will match the requested type, or if you request an invalid type, you will
 *  get an error. The API will never change your aggregation type if the
 *  requested type is invalid.
 */
@property(nonatomic, copy, nullable) NSString *aggregationType;

/**
 *  [Optional] Zero or more filters to apply to the dimension grouping values;
 *  for example, 'query contains "buy"' to see only data where the query string
 *  contains the substring "buy" (not case-sensitive). You can filter by a
 *  dimension without grouping by it.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_ApiDimensionFilterGroup *> *dimensionFilterGroups;

/**
 *  [Optional] Zero or more dimensions to group results by. Dimensions are the
 *  group-by values in the Search Analytics page. Dimensions are combined to
 *  create a unique row key for each row. Results are grouped in the order that
 *  you supply these dimensions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dimensions;

/**
 *  [Required] End date of the requested date range, in YYYY-MM-DD format, in
 *  PST (UTC - 8:00). Must be greater than or equal to the start date. This
 *  value is included in the range.
 */
@property(nonatomic, copy, nullable) NSString *endDate;

/**
 *  [Optional; Default is 1000] The maximum number of rows to return. Must be a
 *  number from 1 to 5,000 (inclusive).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowLimit;

/** [Optional; Default is "web"] The search type to filter for. */
@property(nonatomic, copy, nullable) NSString *searchType;

/**
 *  [Required] Start date of the requested date range, in YYYY-MM-DD format, in
 *  PST time (UTC - 8:00). Must be less than or equal to the end date. This
 *  value is included in the range.
 */
@property(nonatomic, copy, nullable) NSString *startDate;

/**
 *  [Optional; Default is 0] Zero-based index of the first row in the response.
 *  Must be a non-negative number.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startRow;

@end


/**
 *  A list of rows, one per result, grouped by key. Metrics in each row are
 *  aggregated for all data grouped by that key either by page or property, as
 *  specified by the aggregation type parameter.
 */
@interface GTLRWebmasters_SearchAnalyticsQueryResponse : GTLRObject

/** How the results were aggregated. */
@property(nonatomic, copy, nullable) NSString *responseAggregationType;

/**
 *  A list of rows grouped by the key values in the order given in the query.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_ApiDataRow *> *rows;

@end


/**
 *  List of sitemaps.
 */
@interface GTLRWebmasters_SitemapsListResponse : GTLRObject

/**
 *  Contains detailed information about a specific URL submitted as a sitemap.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_WmxSitemap *> *sitemap;

@end


/**
 *  List of sites with access level information.
 */
@interface GTLRWebmasters_SitesListResponse : GTLRObject

/**
 *  Contains permission level information about a Search Console site. For more
 *  information, see Permissions in Search Console.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_WmxSite *> *siteEntry;

@end


/**
 *  An entry in a URL crawl errors time series.
 */
@interface GTLRWebmasters_UrlCrawlErrorCount : GTLRObject

/**
 *  The error count at the given timestamp.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  The date and time when the crawl attempt took place, in RFC 3339 format.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

@end


/**
 *  Number of errors per day for a specific error type (defined by platform and
 *  category).
 */
@interface GTLRWebmasters_UrlCrawlErrorCountsPerType : GTLRObject

/** The crawl error type. */
@property(nonatomic, copy, nullable) NSString *category;

/** The error count entries time series. */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_UrlCrawlErrorCount *> *entries;

/**
 *  The general type of Googlebot that made the request (see list of Googlebot
 *  user-agents for the user-agents used).
 */
@property(nonatomic, copy, nullable) NSString *platform;

@end


/**
 *  A time series of the number of URL crawl errors per error category and
 *  platform.
 */
@interface GTLRWebmasters_UrlCrawlErrorsCountsQueryResponse : GTLRObject

/**
 *  The time series of the number of URL crawl errors per error category and
 *  platform.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_UrlCrawlErrorCountsPerType *> *countPerTypes;

@end


/**
 *  Contains information about specific crawl errors.
 */
@interface GTLRWebmasters_UrlCrawlErrorsSample : GTLRObject

/** The time the error was first detected, in RFC 3339 format. */
@property(nonatomic, strong, nullable) GTLRDateTime *firstDetected;

/** The time when the URL was last crawled, in RFC 3339 format. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastCrawled;

/** The URL of an error, relative to the site. */
@property(nonatomic, copy, nullable) NSString *pageUrl;

/**
 *  The HTTP response code, if any.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseCode;

/** Additional details about the URL, set only when calling get(). */
@property(nonatomic, strong, nullable) GTLRWebmasters_UrlSampleDetails *urlDetails;

@end


/**
 *  List of crawl error samples.
 */
@interface GTLRWebmasters_UrlCrawlErrorsSamplesListResponse : GTLRObject

/** Information about the sample URL and its crawl error. */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_UrlCrawlErrorsSample *> *urlCrawlErrorSample;

@end


/**
 *  Additional details about the URL, set only when calling get().
 */
@interface GTLRWebmasters_UrlSampleDetails : GTLRObject

/** List of sitemaps pointing at this URL. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *containingSitemaps;

/** A sample set of URLs linking to this URL. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *linkedFromUrls;

@end


/**
 *  Contains permission level information about a Search Console site. For more
 *  information, see Permissions in Search Console.
 */
@interface GTLRWebmasters_WmxSite : GTLRObject

/** The user's permission level for the site. */
@property(nonatomic, copy, nullable) NSString *permissionLevel;

/** The URL of the site. */
@property(nonatomic, copy, nullable) NSString *siteUrl;

@end


/**
 *  Contains detailed information about a specific URL submitted as a sitemap.
 */
@interface GTLRWebmasters_WmxSitemap : GTLRObject

/** The various content types in the sitemap. */
@property(nonatomic, strong, nullable) NSArray<GTLRWebmasters_WmxSitemapContent *> *contents;

/**
 *  Number of errors in the sitemap. These are issues with the sitemap itself
 *  that need to be fixed before it can be processed correctly.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errors;

/**
 *  If true, the sitemap has not been processed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPending;

/**
 *  If true, the sitemap is a collection of sitemaps.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSitemapsIndex;

/**
 *  Date & time in which this sitemap was last downloaded. Date format is in RFC
 *  3339 format (yyyy-mm-dd).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastDownloaded;

/**
 *  Date & time in which this sitemap was submitted. Date format is in RFC 3339
 *  format (yyyy-mm-dd).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastSubmitted;

/** The url of the sitemap. */
@property(nonatomic, copy, nullable) NSString *path;

/** The type of the sitemap. For example: rssFeed. */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Number of warnings for the sitemap. These are generally non-critical issues
 *  with URLs in the sitemaps.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *warnings;

@end


/**
 *  Information about the various content types in the sitemap.
 */
@interface GTLRWebmasters_WmxSitemapContent : GTLRObject

/**
 *  The number of URLs from the sitemap that were indexed (of the content type).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *indexed;

/**
 *  The number of URLs in the sitemap (of the content type).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *submitted;

/** The specific type of content in this sitemap. For example: web. */
@property(nonatomic, copy, nullable) NSString *type;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
