// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Smart Device Management API (smartdevicemanagement/v1)
// Description:
//   Allow select enterprise partners to access, control, and manage Google and
//   Nest devices programmatically.
// Documentation:
//   https://developers.google.com/nest/device-access

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Selecting this option would return the structureId and structure name to
 *  which the device is assigned alongwith other basic details. Currently this
 *  view is supported only for device types -- sdm.devices.types.SPEAKER --
 *  sdm.devices.types.CHROMECAST -- sdm.devices.types.DISPLAY --
 *  sdm.devices.types.CAMERA Any other device type would only return a basic
 *  view during ListDevices invocation.
 *
 *  Value: "DEVICE_CONSOLE_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSmartDeviceManagementViewDeviceConsoleView;
/**
 *  Default option this would return basic details for both Get and Listd
 *  Devices. Currently this view is supported only for device types, SPEAKER,
 *  DISPLAY,
 *
 *  Value: "DEVICE_DETAILS_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSmartDeviceManagementViewDeviceDetailsViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Smart Device Management query classes.
 */
@interface GTLRSmartDeviceManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Executes a command to device managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.devices.executeCommand
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesDevicesExecuteCommand : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesDevicesExecuteCommandWithObject:name:]

/**
 *  The name of the device requested. For example: "enterprises/XYZ/devices/123"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse.
 *
 *  Executes a command to device managed by the enterprise.
 *
 *  @param object The @c
 *    GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest
 *    to include in the query.
 *  @param name The name of the device requested. For example:
 *    "enterprises/XYZ/devices/123"
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesDevicesExecuteCommand
 */
+ (instancetype)queryWithObject:(GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a device managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.devices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesDevicesGet : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesDevicesGetWithname:]

/**
 *  The name of the device requested. For example: "enterprises/XYZ/devices/123"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1Device.
 *
 *  Gets a device managed by the enterprise.
 *
 *  @param name The name of the device requested. For example:
 *    "enterprises/XYZ/devices/123"
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesDevicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists devices managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.devices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesDevicesList : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesDevicesListWithparent:]

/**
 *  Optional filter to list devices. Filters can match the exact assignee (could
 *  be a structure or a room). E.g. 'assignee=enterprises/XYZ/structures/abc'
 *  Also could filter by parent (group): 'parent=enterprises/XYZ/groups/jkl' or
 *  filter by device custom name (substring match): 'customName=wing'
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional requested page size. Server may return fewer devices than
 *  requested. If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The parent enterprise to list devices under. E.g. "enterprises/XYZ". */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Additional details that need to be provided for the device.
 *
 *  Likely values:
 *    @arg @c kGTLRSmartDeviceManagementViewDeviceDetailsViewUnspecified Default
 *        option this would return basic details for both Get and Listd Devices.
 *        Currently this view is supported only for device types, SPEAKER,
 *        DISPLAY, (Value: "DEVICE_DETAILS_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRSmartDeviceManagementViewDeviceConsoleView Selecting this
 *        option would return the structureId and structure name to which the
 *        device is assigned alongwith other basic details. Currently this view
 *        is supported only for device types -- sdm.devices.types.SPEAKER --
 *        sdm.devices.types.CHROMECAST -- sdm.devices.types.DISPLAY --
 *        sdm.devices.types.CAMERA Any other device type would only return a
 *        basic view during ListDevices invocation. (Value:
 *        "DEVICE_CONSOLE_VIEW")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ListDevicesResponse.
 *
 *  Lists devices managed by the enterprise.
 *
 *  @param parent The parent enterprise to list devices under. E.g.
 *    "enterprises/XYZ".
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesDevicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a structure managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.structures.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesStructuresGet : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesStructuresGetWithname:]

/**
 *  The name of the structure requested. For example:
 *  "enterprises/XYZ/structures/ABC".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1Structure.
 *
 *  Gets a structure managed by the enterprise.
 *
 *  @param name The name of the structure requested. For example:
 *    "enterprises/XYZ/structures/ABC".
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesStructuresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists structures managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.structures.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesStructuresList : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesStructuresListWithparent:]

/**
 *  Optional filter to list structures. Filters can match the exact album
 *  assigned to the structure. E.g. 'album=enterprises/XYZ/albums/abc' It also
 *  support filtering by parent (only groups for now): E.g.
 *  'parent=enterprises/XYZ/groups/124'
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. Server may return fewer structures than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The parent enterprise to list structures under. E.g. "enterprises/XYZ". */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ListStructuresResponse.
 *
 *  Lists structures managed by the enterprise.
 *
 *  @param parent The parent enterprise to list structures under. E.g.
 *    "enterprises/XYZ".
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesStructuresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a room managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.structures.rooms.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesStructuresRoomsGet : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesStructuresRoomsGetWithname:]

/**
 *  The name of the room requested. For example:
 *  "enterprises/XYZ/structures/ABC/rooms/123".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1Room.
 *
 *  Gets a room managed by the enterprise.
 *
 *  @param name The name of the room requested. For example:
 *    "enterprises/XYZ/structures/ABC/rooms/123".
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesStructuresRoomsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists rooms managed by the enterprise.
 *
 *  Method: smartdevicemanagement.enterprises.structures.rooms.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSmartDeviceManagementSdmService
 */
@interface GTLRSmartDeviceManagementQuery_EnterprisesStructuresRoomsList : GTLRSmartDeviceManagementQuery
// Previous library name was
//   +[GTLQuerySmartDeviceManagement queryForEnterprisesStructuresRoomsListWithparent:]

/**
 *  Requested page size. Server may return fewer rooms than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The parent resource name of the rooms requested. For example:
 *  "enterprises/XYZ/structures/ABC".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRSmartDeviceManagement_GoogleHomeEnterpriseSdmV1ListRoomsResponse.
 *
 *  Lists rooms managed by the enterprise.
 *
 *  @param parent The parent resource name of the rooms requested. For example:
 *    "enterprises/XYZ/structures/ABC".
 *
 *  @return GTLRSmartDeviceManagementQuery_EnterprisesStructuresRoomsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
