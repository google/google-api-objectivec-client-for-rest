// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dataflow API (dataflow/v1b3)
// Description:
//   Manages Google Cloud Dataflow projects on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/dataflow

#if SWIFT_PACKAGE || GTLR_USE_MODULAR_IMPORT
  @import GoogleAPIClientForRESTCore;
#elif GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDataflow_CommitTemplateVersionRequest;
@class GTLRDataflow_CreateJobFromTemplateRequest;
@class GTLRDataflow_CreateTemplateVersionRequest;
@class GTLRDataflow_GetDebugConfigRequest;
@class GTLRDataflow_Job;
@class GTLRDataflow_LaunchFlexTemplateRequest;
@class GTLRDataflow_LaunchTemplateParameters;
@class GTLRDataflow_LeaseWorkItemRequest;
@class GTLRDataflow_ModifyTemplateVersionLabelRequest;
@class GTLRDataflow_ModifyTemplateVersionTagRequest;
@class GTLRDataflow_ReportWorkItemStatusRequest;
@class GTLRDataflow_SendDebugCaptureRequest;
@class GTLRDataflow_SendWorkerMessagesRequest;
@class GTLRDataflow_SnapshotJobRequest;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// filter

/**
 *  Filters the jobs that are running ordered on the creation timestamp.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowFilterActive;
/**
 *  Returns all running jobs first ordered on creation timestamp, then returns
 *  all terminated jobs ordered on the termination timestamp.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowFilterAll;
/**
 *  Filters the jobs that have a terminated state, ordered on the termination
 *  timestamp. Example terminated states: `JOB_STATE_STOPPED`,
 *  `JOB_STATE_UPDATED`, `JOB_STATE_DRAINED`, etc.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowFilterTerminated;
/**
 *  The filter isn't specified, or is unknown. This returns all jobs ordered on
 *  descending `JobUuid`.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowFilterUnknown;

// ----------------------------------------------------------------------------
// minimumImportance

/**
 *  The message is at the 'basic' level: useful for keeping track of the
 *  execution of a Dataflow pipeline. Typically, Dataflow pipeline runners
 *  display log messages at this level by default, and these messages are
 *  displayed by default in the Dataflow monitoring UI.
 *
 *  Value: "JOB_MESSAGE_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageBasic;
/**
 *  The message is at the 'debug' level: typically only useful for software
 *  engineers working on the code the job is running. Typically, Dataflow
 *  pipeline runners do not display log messages at this level by default.
 *
 *  Value: "JOB_MESSAGE_DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageDebug;
/**
 *  The message is at the 'detailed' level: somewhat verbose, but potentially
 *  useful to users. Typically, Dataflow pipeline runners do not display log
 *  messages at this level by default. These messages are displayed by default
 *  in the Dataflow monitoring UI.
 *
 *  Value: "JOB_MESSAGE_DETAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageDetailed;
/**
 *  The message is at the 'error' level: indicating a condition preventing a job
 *  from succeeding. Typically, Dataflow pipeline runners display log messages
 *  at this level by default, and these messages are displayed by default in the
 *  Dataflow monitoring UI.
 *
 *  Value: "JOB_MESSAGE_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageError;
/**
 *  The message importance isn't specified, or is unknown.
 *
 *  Value: "JOB_MESSAGE_IMPORTANCE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageImportanceUnknown;
/**
 *  The message is at the 'warning' level: indicating a condition pertaining to
 *  a job which may require human intervention. Typically, Dataflow pipeline
 *  runners display log messages at this level by default, and these messages
 *  are displayed by default in the Dataflow monitoring UI.
 *
 *  Value: "JOB_MESSAGE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowMinimumImportanceJobMessageWarning;

// ----------------------------------------------------------------------------
// view

/**
 *  Request all information available for this job.
 *
 *  Value: "JOB_VIEW_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowViewJobViewAll;
/**
 *  Request summary info and limited job description data for steps, labels and
 *  environment.
 *
 *  Value: "JOB_VIEW_DESCRIPTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowViewJobViewDescription;
/**
 *  Request summary information only: Project ID, Job ID, job name, job type,
 *  job status, start/end time, and Cloud SDK version details.
 *
 *  Value: "JOB_VIEW_SUMMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowViewJobViewSummary;
/**
 *  The job view to return isn't specified, or is unknown. Responses will
 *  contain at least the `JOB_VIEW_SUMMARY` information, and may contain
 *  additional information.
 *
 *  Value: "JOB_VIEW_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowViewJobViewUnknown;
/**
 *  Template view that retrieves only the metadata associated with the template.
 *
 *  Value: "METADATA_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataflowViewMetadataOnly;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Dataflow query classes.
 */
@interface GTLRDataflowQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new TemplateVersion (Important: not new Template) entry in the
 *  spanner table. Requires project_id and display_name (template).
 *
 *  Method: dataflow.projects.catalogTemplates.commit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesCommit : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesCommitWithObject:name:]

/**
 *  The location of the template, name includes project_id and display_name.
 *  Commit using project_id(pid1) and display_name(tid1). Format:
 *  projects/{pid1}/catalogTemplates/{tid1}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataflow_TemplateVersion.
 *
 *  Creates a new TemplateVersion (Important: not new Template) entry in the
 *  spanner table. Requires project_id and display_name (template).
 *
 *  @param object The @c GTLRDataflow_CommitTemplateVersionRequest to include in
 *    the query.
 *  @param name The location of the template, name includes project_id and
 *    display_name. Commit using project_id(pid1) and display_name(tid1).
 *    Format: projects/{pid1}/catalogTemplates/{tid1}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesCommit
 */
+ (instancetype)queryWithObject:(GTLRDataflow_CommitTemplateVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes an existing Template. Do nothing if Template does not exist.
 *
 *  Method: dataflow.projects.catalogTemplates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesDelete : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesDeleteWithname:]

/**
 *  name includes project_id and display_name. Delete by project_id(pid1) and
 *  display_name(tid1). Format: projects/{pid1}/catalogTemplates/{tid1}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataflow_Empty.
 *
 *  Deletes an existing Template. Do nothing if Template does not exist.
 *
 *  @param name name includes project_id and display_name. Delete by
 *    project_id(pid1) and display_name(tid1). Format:
 *    projects/{pid1}/catalogTemplates/{tid1}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get TemplateVersion using project_id and display_name with an optional
 *  version_id field. Get latest (has tag "latest") TemplateVersion if
 *  version_id not set.
 *
 *  Method: dataflow.projects.catalogTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesGetWithname:]

/**
 *  Resource name includes project_id and display_name. version_id is optional.
 *  Get the latest TemplateVersion if version_id not set. Get by
 *  project_id(pid1) and display_name(tid1): Format:
 *  projects/{pid1}/catalogTemplates/{tid1} Get by project_id(pid1),
 *  display_name(tid1), and version_id(vid1): Format:
 *  projects/{pid1}/catalogTemplates/{tid1\@vid}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataflow_TemplateVersion.
 *
 *  Get TemplateVersion using project_id and display_name with an optional
 *  version_id field. Get latest (has tag "latest") TemplateVersion if
 *  version_id not set.
 *
 *  @param name Resource name includes project_id and display_name. version_id
 *    is optional. Get the latest TemplateVersion if version_id not set. Get by
 *    project_id(pid1) and display_name(tid1): Format:
 *    projects/{pid1}/catalogTemplates/{tid1} Get by project_id(pid1),
 *    display_name(tid1), and version_id(vid1): Format:
 *    projects/{pid1}/catalogTemplates/{tid1\@vid}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the label of the TemplateVersion. Label can be duplicated in
 *  Template, so either add or remove the label in the TemplateVersion.
 *
 *  Method: dataflow.projects.catalogTemplates.label
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesLabel : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesLabelWithObject:name:]

/**
 *  Resource name includes project_id, display_name, and version_id. Updates by
 *  project_id(pid1), display_name(tid1), and version_id(vid1): Format:
 *  projects/{pid1}/catalogTemplates/{tid1\@vid}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataflow_ModifyTemplateVersionLabelResponse.
 *
 *  Updates the label of the TemplateVersion. Label can be duplicated in
 *  Template, so either add or remove the label in the TemplateVersion.
 *
 *  @param object The @c GTLRDataflow_ModifyTemplateVersionLabelRequest to
 *    include in the query.
 *  @param name Resource name includes project_id, display_name, and version_id.
 *    Updates by project_id(pid1), display_name(tid1), and version_id(vid1):
 *    Format: projects/{pid1}/catalogTemplates/{tid1\@vid}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesLabel
 */
+ (instancetype)queryWithObject:(GTLRDataflow_ModifyTemplateVersionLabelRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the tag of the TemplateVersion, and tag is unique in Template. If
 *  tag exists in another TemplateVersion in the Template, updates the tag to
 *  this TemplateVersion will remove it from the old TemplateVersion and add it
 *  to this TemplateVersion. If request is remove_only (remove_only = true),
 *  remove the tag from this TemplateVersion.
 *
 *  Method: dataflow.projects.catalogTemplates.tag
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesTag : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesTagWithObject:name:]

/**
 *  Resource name includes project_id, display_name, and version_id. Updates by
 *  project_id(pid1), display_name(tid1), and version_id(vid1): Format:
 *  projects/{pid1}/catalogTemplates/{tid1\@vid}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataflow_ModifyTemplateVersionTagResponse.
 *
 *  Updates the tag of the TemplateVersion, and tag is unique in Template. If
 *  tag exists in another TemplateVersion in the Template, updates the tag to
 *  this TemplateVersion will remove it from the old TemplateVersion and add it
 *  to this TemplateVersion. If request is remove_only (remove_only = true),
 *  remove the tag from this TemplateVersion.
 *
 *  @param object The @c GTLRDataflow_ModifyTemplateVersionTagRequest to include
 *    in the query.
 *  @param name Resource name includes project_id, display_name, and version_id.
 *    Updates by project_id(pid1), display_name(tid1), and version_id(vid1):
 *    Format: projects/{pid1}/catalogTemplates/{tid1\@vid}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesTag
 */
+ (instancetype)queryWithObject:(GTLRDataflow_ModifyTemplateVersionTagRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Template with TemplateVersion. Requires project_id(projects)
 *  and template display_name(catalogTemplates). The template display_name is
 *  set by the user.
 *
 *  Method: dataflow.projects.catalogTemplates.templateVersions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsCatalogTemplatesTemplateVersionsCreate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsCatalogTemplatesTemplateVersionsCreateWithObject:parent:]

/**
 *  The parent project and template that the TemplateVersion will be created
 *  under. Create using project_id(pid1) and display_name(tid1). Format:
 *  projects/{pid1}/catalogTemplates/{tid1}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataflow_TemplateVersion.
 *
 *  Creates a new Template with TemplateVersion. Requires project_id(projects)
 *  and template display_name(catalogTemplates). The template display_name is
 *  set by the user.
 *
 *  @param object The @c GTLRDataflow_CreateTemplateVersionRequest to include in
 *    the query.
 *  @param parent The parent project and template that the TemplateVersion will
 *    be created under. Create using project_id(pid1) and display_name(tid1).
 *    Format: projects/{pid1}/catalogTemplates/{tid1}
 *
 *  @return GTLRDataflowQuery_ProjectsCatalogTemplatesTemplateVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_CreateTemplateVersionRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a snapshot.
 *
 *  Method: dataflow.projects.deleteSnapshots
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsDeleteSnapshots : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsDeleteSnapshotsWithprojectId:]

/** The location that contains this snapshot. */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the snapshot belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The ID of the snapshot. */
@property(nonatomic, copy, nullable) NSString *snapshotId;

/**
 *  Fetches a @c GTLRDataflow_DeleteSnapshotResponse.
 *
 *  Deletes a snapshot.
 *
 *  @param projectId The ID of the Cloud Platform project that the snapshot
 *    belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsDeleteSnapshots
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

/**
 *  List the jobs of a project across all regions.
 *
 *  Method: dataflow.projects.jobs.aggregated
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsAggregated : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsAggregatedWithprojectId:]

/**
 *  The kind of filter to use.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowFilterUnknown The filter isn't specified, or is
 *        unknown. This returns all jobs ordered on descending `JobUuid`.
 *        (Value: "UNKNOWN")
 *    @arg @c kGTLRDataflowFilterAll Returns all running jobs first ordered on
 *        creation timestamp, then returns all terminated jobs ordered on the
 *        termination timestamp. (Value: "ALL")
 *    @arg @c kGTLRDataflowFilterTerminated Filters the jobs that have a
 *        terminated state, ordered on the termination timestamp. Example
 *        terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`,
 *        `JOB_STATE_DRAINED`, etc. (Value: "TERMINATED")
 *    @arg @c kGTLRDataflowFilterActive Filters the jobs that are running
 *        ordered on the creation timestamp. (Value: "ACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  If there are many jobs, limit response to at most this many. The actual
 *  number of jobs returned will be the lesser of max_responses and an
 *  unspecified server-defined limit.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Set this to the 'next_page_token' field of a previous response to request
 *  additional results in a long list.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The project which owns the jobs. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_ListJobsResponse.
 *
 *  List the jobs of a project across all regions.
 *
 *  @param projectId The project which owns the jobs.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsAggregated
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

/**
 *  Creates a Cloud Dataflow job. To create a job, we recommend using
 *  `projects.locations.jobs.create` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.create` is not recommended, as your job will always start in
 *  `us-central1`.
 *
 *  Method: dataflow.projects.jobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsCreate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsCreateWithObject:projectId:]

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Deprecated. This field is now in the Job message. */
@property(nonatomic, copy, nullable) NSString *replaceJobId;

/**
 *  The level of information requested in response.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Creates a Cloud Dataflow job. To create a job, we recommend using
 *  `projects.locations.jobs.create` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.create` is not recommended, as your job will always start in
 *  `us-central1`.
 *
 *  @param object The @c GTLRDataflow_Job to include in the query.
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_Job *)object
                      projectId:(NSString *)projectId;

@end

/**
 *  Get encoded debug configuration for component. Not cacheable.
 *
 *  Method: dataflow.projects.jobs.debug.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsDebugGetConfig : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsDebugGetConfigWithObject:projectId:jobId:]

/** The job id. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_GetDebugConfigResponse.
 *
 *  Get encoded debug configuration for component. Not cacheable.
 *
 *  @param object The @c GTLRDataflow_GetDebugConfigRequest to include in the
 *    query.
 *  @param projectId The project id.
 *  @param jobId The job id.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsDebugGetConfig
 */
+ (instancetype)queryWithObject:(GTLRDataflow_GetDebugConfigRequest *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Send encoded debug capture data for component.
 *
 *  Method: dataflow.projects.jobs.debug.sendCapture
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsDebugSendCapture : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsDebugSendCaptureWithObject:projectId:jobId:]

/** The job id. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_SendDebugCaptureResponse.
 *
 *  Send encoded debug capture data for component.
 *
 *  @param object The @c GTLRDataflow_SendDebugCaptureRequest to include in the
 *    query.
 *  @param projectId The project id.
 *  @param jobId The job id.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsDebugSendCapture
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SendDebugCaptureRequest *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Gets the state of the specified Cloud Dataflow job. To get the state of a
 *  job, we recommend using `projects.locations.jobs.get` with a [regional
 *  endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.get` is not recommended, as you can only get the state of
 *  jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.jobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsGetWithprojectId:jobId:]

/** The job ID. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  The level of information requested in response.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Gets the state of the specified Cloud Dataflow job. To get the state of a
 *  job, we recommend using `projects.locations.jobs.get` with a [regional
 *  endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.get` is not recommended, as you can only get the state of
 *  jobs that are running in `us-central1`.
 *
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *  @param jobId The job ID.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                             jobId:(NSString *)jobId;

@end

/**
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.getMetrics` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.getMetrics` is not recommended, as you can only request the
 *  status of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.jobs.getMetrics
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsGetMetrics : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsGetMetricsWithprojectId:jobId:]

/** The job to get metrics for. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Return only metric data that has changed since this time. Default is to
 *  return all information about all metrics for the job.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Fetches a @c GTLRDataflow_JobMetrics.
 *
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.getMetrics` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.getMetrics` is not recommended, as you can only request the
 *  status of jobs that are running in `us-central1`.
 *
 *  @param projectId A project id.
 *  @param jobId The job to get metrics for.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsGetMetrics
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                             jobId:(NSString *)jobId;

@end

/**
 *  List the jobs of a project. To list the jobs of a project in a region, we
 *  recommend using `projects.locations.jobs.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
 *  list the all jobs across all regions, use `projects.jobs.aggregated`. Using
 *  `projects.jobs.list` is not recommended, as you can only get the list of
 *  jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.jobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsListWithprojectId:]

/**
 *  The kind of filter to use.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowFilterUnknown The filter isn't specified, or is
 *        unknown. This returns all jobs ordered on descending `JobUuid`.
 *        (Value: "UNKNOWN")
 *    @arg @c kGTLRDataflowFilterAll Returns all running jobs first ordered on
 *        creation timestamp, then returns all terminated jobs ordered on the
 *        termination timestamp. (Value: "ALL")
 *    @arg @c kGTLRDataflowFilterTerminated Filters the jobs that have a
 *        terminated state, ordered on the termination timestamp. Example
 *        terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`,
 *        `JOB_STATE_DRAINED`, etc. (Value: "TERMINATED")
 *    @arg @c kGTLRDataflowFilterActive Filters the jobs that are running
 *        ordered on the creation timestamp. (Value: "ACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  If there are many jobs, limit response to at most this many. The actual
 *  number of jobs returned will be the lesser of max_responses and an
 *  unspecified server-defined limit.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Set this to the 'next_page_token' field of a previous response to request
 *  additional results in a long list.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The project which owns the jobs. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_ListJobsResponse.
 *
 *  List the jobs of a project. To list the jobs of a project in a region, we
 *  recommend using `projects.locations.jobs.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
 *  list the all jobs across all regions, use `projects.jobs.aggregated`. Using
 *  `projects.jobs.list` is not recommended, as you can only get the list of
 *  jobs that are running in `us-central1`.
 *
 *  @param projectId The project which owns the jobs.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

/**
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.messages.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.messages.list` is not recommended, as you can only request
 *  the status of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.jobs.messages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsMessagesList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsMessagesListWithprojectId:jobId:]

/**
 *  Return only messages with timestamps < end_time. The default is now (i.e.
 *  return up to the latest messages available).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The job to get messages about. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Filter to only get messages with importance >= level
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageImportanceUnknown The
 *        message importance isn't specified, or is unknown. (Value:
 *        "JOB_MESSAGE_IMPORTANCE_UNKNOWN")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageDebug The message is at
 *        the 'debug' level: typically only useful for software engineers
 *        working on the code the job is running. Typically, Dataflow pipeline
 *        runners do not display log messages at this level by default. (Value:
 *        "JOB_MESSAGE_DEBUG")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageDetailed The message is at
 *        the 'detailed' level: somewhat verbose, but potentially useful to
 *        users. Typically, Dataflow pipeline runners do not display log
 *        messages at this level by default. These messages are displayed by
 *        default in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_DETAILED")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageBasic The message is at
 *        the 'basic' level: useful for keeping track of the execution of a
 *        Dataflow pipeline. Typically, Dataflow pipeline runners display log
 *        messages at this level by default, and these messages are displayed by
 *        default in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_BASIC")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageWarning The message is at
 *        the 'warning' level: indicating a condition pertaining to a job which
 *        may require human intervention. Typically, Dataflow pipeline runners
 *        display log messages at this level by default, and these messages are
 *        displayed by default in the Dataflow monitoring UI. (Value:
 *        "JOB_MESSAGE_WARNING")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageError The message is at
 *        the 'error' level: indicating a condition preventing a job from
 *        succeeding. Typically, Dataflow pipeline runners display log messages
 *        at this level by default, and these messages are displayed by default
 *        in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *minimumImportance;

/**
 *  If specified, determines the maximum number of messages to return. If
 *  unspecified, the service may choose an appropriate default, or may return an
 *  arbitrarily large number of results.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  If supplied, this should be the value of next_page_token returned by an
 *  earlier call. This will cause the next page of results to be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  If specified, return only messages with timestamps >= start_time. The
 *  default is the job creation time (i.e. beginning of messages).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Fetches a @c GTLRDataflow_ListJobMessagesResponse.
 *
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.messages.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.messages.list` is not recommended, as you can only request
 *  the status of jobs that are running in `us-central1`.
 *
 *  @param projectId A project id.
 *  @param jobId The job to get messages about.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsMessagesList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                             jobId:(NSString *)jobId;

@end

/**
 *  Snapshot the state of a streaming job.
 *
 *  Method: dataflow.projects.jobs.snapshot
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsSnapshot : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsSnapshotWithObject:projectId:jobId:]

/** The job to be snapshotted. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The project which owns the job to be snapshotted. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Snapshot.
 *
 *  Snapshot the state of a streaming job.
 *
 *  @param object The @c GTLRDataflow_SnapshotJobRequest to include in the
 *    query.
 *  @param projectId The project which owns the job to be snapshotted.
 *  @param jobId The job to be snapshotted.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsSnapshot
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SnapshotJobRequest *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Updates the state of an existing Cloud Dataflow job. To update the state of
 *  an existing job, we recommend using `projects.locations.jobs.update` with a
 *  [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.update` is not recommended, as you can only update the state
 *  of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.jobs.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsUpdate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsUpdateWithObject:projectId:jobId:]

/** The job ID. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Updates the state of an existing Cloud Dataflow job. To update the state of
 *  an existing job, we recommend using `projects.locations.jobs.update` with a
 *  [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.update` is not recommended, as you can only update the state
 *  of jobs that are running in `us-central1`.
 *
 *  @param object The @c GTLRDataflow_Job to include in the query.
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *  @param jobId The job ID.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsUpdate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_Job *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Leases a dataflow WorkItem to run.
 *
 *  Method: dataflow.projects.jobs.workItems.lease
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsWorkItemsLease : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsWorkItemsLeaseWithObject:projectId:jobId:]

/** Identifies the workflow job this worker belongs to. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** Identifies the project this worker belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_LeaseWorkItemResponse.
 *
 *  Leases a dataflow WorkItem to run.
 *
 *  @param object The @c GTLRDataflow_LeaseWorkItemRequest to include in the
 *    query.
 *  @param projectId Identifies the project this worker belongs to.
 *  @param jobId Identifies the workflow job this worker belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsWorkItemsLease
 */
+ (instancetype)queryWithObject:(GTLRDataflow_LeaseWorkItemRequest *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Reports the status of dataflow WorkItems leased by a worker.
 *
 *  Method: dataflow.projects.jobs.workItems.reportStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsJobsWorkItemsReportStatus : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsJobsWorkItemsReportStatusWithObject:projectId:jobId:]

/** The job which the WorkItem is part of. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The project which owns the WorkItem's job. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_ReportWorkItemStatusResponse.
 *
 *  Reports the status of dataflow WorkItems leased by a worker.
 *
 *  @param object The @c GTLRDataflow_ReportWorkItemStatusRequest to include in
 *    the query.
 *  @param projectId The project which owns the WorkItem's job.
 *  @param jobId The job which the WorkItem is part of.
 *
 *  @return GTLRDataflowQuery_ProjectsJobsWorkItemsReportStatus
 */
+ (instancetype)queryWithObject:(GTLRDataflow_ReportWorkItemStatusRequest *)object
                      projectId:(NSString *)projectId
                          jobId:(NSString *)jobId;

@end

/**
 *  Launch a job with a FlexTemplate.
 *
 *  Method: dataflow.projects.locations.flexTemplates.launch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsFlexTemplatesLaunch : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsFlexTemplatesLaunchWithObject:projectId:location:]

/**
 *  Required. The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request. E.g., us-central1, us-west1.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_LaunchFlexTemplateResponse.
 *
 *  Launch a job with a FlexTemplate.
 *
 *  @param object The @c GTLRDataflow_LaunchFlexTemplateRequest to include in
 *    the query.
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *  @param location Required. The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *    which to direct the request. E.g., us-central1, us-west1.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsFlexTemplatesLaunch
 */
+ (instancetype)queryWithObject:(GTLRDataflow_LaunchFlexTemplateRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location;

@end

/**
 *  Creates a Cloud Dataflow job. To create a job, we recommend using
 *  `projects.locations.jobs.create` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.create` is not recommended, as your job will always start in
 *  `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsCreate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsCreateWithObject:projectId:location:]

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Deprecated. This field is now in the Job message. */
@property(nonatomic, copy, nullable) NSString *replaceJobId;

/**
 *  The level of information requested in response.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Creates a Cloud Dataflow job. To create a job, we recommend using
 *  `projects.locations.jobs.create` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.create` is not recommended, as your job will always start in
 *  `us-central1`.
 *
 *  @param object The @c GTLRDataflow_Job to include in the query.
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains this job.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_Job *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location;

@end

/**
 *  Get encoded debug configuration for component. Not cacheable.
 *
 *  Method: dataflow.projects.locations.jobs.debug.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsDebugGetConfig : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsDebugGetConfigWithObject:projectId:location:jobId:]

/** The job id. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_GetDebugConfigResponse.
 *
 *  Get encoded debug configuration for component. Not cacheable.
 *
 *  @param object The @c GTLRDataflow_GetDebugConfigRequest to include in the
 *    query.
 *  @param projectId The project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job id.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsDebugGetConfig
 */
+ (instancetype)queryWithObject:(GTLRDataflow_GetDebugConfigRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Send encoded debug capture data for component.
 *
 *  Method: dataflow.projects.locations.jobs.debug.sendCapture
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsDebugSendCapture : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsDebugSendCaptureWithObject:projectId:location:jobId:]

/** The job id. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_SendDebugCaptureResponse.
 *
 *  Send encoded debug capture data for component.
 *
 *  @param object The @c GTLRDataflow_SendDebugCaptureRequest to include in the
 *    query.
 *  @param projectId The project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job id.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsDebugSendCapture
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SendDebugCaptureRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Gets the state of the specified Cloud Dataflow job. To get the state of a
 *  job, we recommend using `projects.locations.jobs.get` with a [regional
 *  endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.get` is not recommended, as you can only get the state of
 *  jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsGetWithprojectId:location:jobId:]

/** The job ID. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  The level of information requested in response.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Gets the state of the specified Cloud Dataflow job. To get the state of a
 *  job, we recommend using `projects.locations.jobs.get` with a [regional
 *  endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.get` is not recommended, as you can only get the state of
 *  jobs that are running in `us-central1`.
 *
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains this job.
 *  @param jobId The job ID.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId;

@end

/**
 *  Request detailed information about the execution status of the job.
 *  EXPERIMENTAL. This API is subject to change or removal without notice.
 *
 *  Method: dataflow.projects.locations.jobs.getExecutionDetails
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsGetExecutionDetails : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsGetExecutionDetailsWithprojectId:location:jobId:]

/** The job to get execution details for. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  If specified, determines the maximum number of stages to return. If
 *  unspecified, the service may choose an appropriate default, or may return an
 *  arbitrarily large number of results.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  If supplied, this should be the value of next_page_token returned by an
 *  earlier call. This will cause the next page of results to be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_JobExecutionDetails.
 *
 *  Request detailed information about the execution status of the job.
 *  EXPERIMENTAL. This API is subject to change or removal without notice.
 *
 *  @param projectId A project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job to get execution details for.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsGetExecutionDetails
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId;

@end

/**
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.getMetrics` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.getMetrics` is not recommended, as you can only request the
 *  status of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.getMetrics
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsGetMetrics : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsGetMetricsWithprojectId:location:jobId:]

/** The job to get metrics for. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Return only metric data that has changed since this time. Default is to
 *  return all information about all metrics for the job.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Fetches a @c GTLRDataflow_JobMetrics.
 *
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.getMetrics` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.getMetrics` is not recommended, as you can only request the
 *  status of jobs that are running in `us-central1`.
 *
 *  @param projectId A project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job to get metrics for.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsGetMetrics
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId;

@end

/**
 *  List the jobs of a project. To list the jobs of a project in a region, we
 *  recommend using `projects.locations.jobs.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
 *  list the all jobs across all regions, use `projects.jobs.aggregated`. Using
 *  `projects.jobs.list` is not recommended, as you can only get the list of
 *  jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsListWithprojectId:location:]

/**
 *  The kind of filter to use.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowFilterUnknown The filter isn't specified, or is
 *        unknown. This returns all jobs ordered on descending `JobUuid`.
 *        (Value: "UNKNOWN")
 *    @arg @c kGTLRDataflowFilterAll Returns all running jobs first ordered on
 *        creation timestamp, then returns all terminated jobs ordered on the
 *        termination timestamp. (Value: "ALL")
 *    @arg @c kGTLRDataflowFilterTerminated Filters the jobs that have a
 *        terminated state, ordered on the termination timestamp. Example
 *        terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`,
 *        `JOB_STATE_DRAINED`, etc. (Value: "TERMINATED")
 *    @arg @c kGTLRDataflowFilterActive Filters the jobs that are running
 *        ordered on the creation timestamp. (Value: "ACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  If there are many jobs, limit response to at most this many. The actual
 *  number of jobs returned will be the lesser of max_responses and an
 *  unspecified server-defined limit.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Set this to the 'next_page_token' field of a previous response to request
 *  additional results in a long list.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The project which owns the jobs. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewJobViewUnknown The job view to return isn't
 *        specified, or is unknown. Responses will contain at least the
 *        `JOB_VIEW_SUMMARY` information, and may contain additional
 *        information. (Value: "JOB_VIEW_UNKNOWN")
 *    @arg @c kGTLRDataflowViewJobViewSummary Request summary information only:
 *        Project ID, Job ID, job name, job type, job status, start/end time,
 *        and Cloud SDK version details. (Value: "JOB_VIEW_SUMMARY")
 *    @arg @c kGTLRDataflowViewJobViewAll Request all information available for
 *        this job. (Value: "JOB_VIEW_ALL")
 *    @arg @c kGTLRDataflowViewJobViewDescription Request summary info and
 *        limited job description data for steps, labels and environment.
 *        (Value: "JOB_VIEW_DESCRIPTION")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_ListJobsResponse.
 *
 *  List the jobs of a project. To list the jobs of a project in a region, we
 *  recommend using `projects.locations.jobs.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
 *  list the all jobs across all regions, use `projects.jobs.aggregated`. Using
 *  `projects.jobs.list` is not recommended, as you can only get the list of
 *  jobs that are running in `us-central1`.
 *
 *  @param projectId The project which owns the jobs.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains this job.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location;

@end

/**
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.messages.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.messages.list` is not recommended, as you can only request
 *  the status of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.messages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsMessagesList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsMessagesListWithprojectId:location:jobId:]

/**
 *  Return only messages with timestamps < end_time. The default is now (i.e.
 *  return up to the latest messages available).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The job to get messages about. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Filter to only get messages with importance >= level
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageImportanceUnknown The
 *        message importance isn't specified, or is unknown. (Value:
 *        "JOB_MESSAGE_IMPORTANCE_UNKNOWN")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageDebug The message is at
 *        the 'debug' level: typically only useful for software engineers
 *        working on the code the job is running. Typically, Dataflow pipeline
 *        runners do not display log messages at this level by default. (Value:
 *        "JOB_MESSAGE_DEBUG")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageDetailed The message is at
 *        the 'detailed' level: somewhat verbose, but potentially useful to
 *        users. Typically, Dataflow pipeline runners do not display log
 *        messages at this level by default. These messages are displayed by
 *        default in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_DETAILED")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageBasic The message is at
 *        the 'basic' level: useful for keeping track of the execution of a
 *        Dataflow pipeline. Typically, Dataflow pipeline runners display log
 *        messages at this level by default, and these messages are displayed by
 *        default in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_BASIC")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageWarning The message is at
 *        the 'warning' level: indicating a condition pertaining to a job which
 *        may require human intervention. Typically, Dataflow pipeline runners
 *        display log messages at this level by default, and these messages are
 *        displayed by default in the Dataflow monitoring UI. (Value:
 *        "JOB_MESSAGE_WARNING")
 *    @arg @c kGTLRDataflowMinimumImportanceJobMessageError The message is at
 *        the 'error' level: indicating a condition preventing a job from
 *        succeeding. Typically, Dataflow pipeline runners display log messages
 *        at this level by default, and these messages are displayed by default
 *        in the Dataflow monitoring UI. (Value: "JOB_MESSAGE_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *minimumImportance;

/**
 *  If specified, determines the maximum number of messages to return. If
 *  unspecified, the service may choose an appropriate default, or may return an
 *  arbitrarily large number of results.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  If supplied, this should be the value of next_page_token returned by an
 *  earlier call. This will cause the next page of results to be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  If specified, return only messages with timestamps >= start_time. The
 *  default is the job creation time (i.e. beginning of messages).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Fetches a @c GTLRDataflow_ListJobMessagesResponse.
 *
 *  Request the job status. To request the status of a job, we recommend using
 *  `projects.locations.jobs.messages.list` with a [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.messages.list` is not recommended, as you can only request
 *  the status of jobs that are running in `us-central1`.
 *
 *  @param projectId A project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job to get messages about.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsMessagesList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId;

@end

/**
 *  Snapshot the state of a streaming job.
 *
 *  Method: dataflow.projects.locations.jobs.snapshot
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsSnapshot : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsSnapshotWithObject:projectId:location:jobId:]

/** The job to be snapshotted. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The location that contains this job. */
@property(nonatomic, copy, nullable) NSString *location;

/** The project which owns the job to be snapshotted. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Snapshot.
 *
 *  Snapshot the state of a streaming job.
 *
 *  @param object The @c GTLRDataflow_SnapshotJobRequest to include in the
 *    query.
 *  @param projectId The project which owns the job to be snapshotted.
 *  @param location The location that contains this job.
 *  @param jobId The job to be snapshotted.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsSnapshot
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SnapshotJobRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Lists snapshots.
 *
 *  Method: dataflow.projects.locations.jobs.snapshots.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsSnapshotsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsSnapshotsListWithprojectId:location:jobId:]

/** If specified, list snapshots created from this job. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The location to list snapshots in. */
@property(nonatomic, copy, nullable) NSString *location;

/** The project ID to list snapshots for. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_ListSnapshotsResponse.
 *
 *  Lists snapshots.
 *
 *  @param projectId The project ID to list snapshots for.
 *  @param location The location to list snapshots in.
 *  @param jobId If specified, list snapshots created from this job.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsSnapshotsList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId;

@end

/**
 *  Request detailed information about the execution status of a stage of the
 *  job. EXPERIMENTAL. This API is subject to change or removal without notice.
 *
 *  Method: dataflow.projects.locations.jobs.stages.getExecutionDetails
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsStagesGetExecutionDetails : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsStagesGetExecutionDetailsWithprojectId:location:jobId:stageId:]

/** Upper time bound of work items to include, by start time. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The job to get execution details for. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job specified by job_id.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  If specified, determines the maximum number of work items to return. If
 *  unspecified, the service may choose an appropriate default, or may return an
 *  arbitrarily large number of results.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  If supplied, this should be the value of next_page_token returned by an
 *  earlier call. This will cause the next page of results to be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** A project id. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The stage for which to fetch information. */
@property(nonatomic, copy, nullable) NSString *stageId;

/** Lower time bound of work items to include, by start time. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Fetches a @c GTLRDataflow_StageExecutionDetails.
 *
 *  Request detailed information about the execution status of a stage of the
 *  job. EXPERIMENTAL. This API is subject to change or removal without notice.
 *
 *  @param projectId A project id.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job specified by job_id.
 *  @param jobId The job to get execution details for.
 *  @param stageId The stage for which to fetch information.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsStagesGetExecutionDetails
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                             jobId:(NSString *)jobId
                           stageId:(NSString *)stageId;

@end

/**
 *  Updates the state of an existing Cloud Dataflow job. To update the state of
 *  an existing job, we recommend using `projects.locations.jobs.update` with a
 *  [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.update` is not recommended, as you can only update the state
 *  of jobs that are running in `us-central1`.
 *
 *  Method: dataflow.projects.locations.jobs.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsUpdate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsUpdateWithObject:projectId:location:jobId:]

/** The job ID. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains this job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Updates the state of an existing Cloud Dataflow job. To update the state of
 *  an existing job, we recommend using `projects.locations.jobs.update` with a
 *  [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
 *  `projects.jobs.update` is not recommended, as you can only update the state
 *  of jobs that are running in `us-central1`.
 *
 *  @param object The @c GTLRDataflow_Job to include in the query.
 *  @param projectId The ID of the Cloud Platform project that the job belongs
 *    to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains this job.
 *  @param jobId The job ID.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsUpdate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_Job *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Leases a dataflow WorkItem to run.
 *
 *  Method: dataflow.projects.locations.jobs.workItems.lease
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsWorkItemsLease : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsWorkItemsLeaseWithObject:projectId:location:jobId:]

/** Identifies the workflow job this worker belongs to. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the WorkItem's job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Identifies the project this worker belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_LeaseWorkItemResponse.
 *
 *  Leases a dataflow WorkItem to run.
 *
 *  @param object The @c GTLRDataflow_LeaseWorkItemRequest to include in the
 *    query.
 *  @param projectId Identifies the project this worker belongs to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the WorkItem's job.
 *  @param jobId Identifies the workflow job this worker belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsWorkItemsLease
 */
+ (instancetype)queryWithObject:(GTLRDataflow_LeaseWorkItemRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Reports the status of dataflow WorkItems leased by a worker.
 *
 *  Method: dataflow.projects.locations.jobs.workItems.reportStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsJobsWorkItemsReportStatus : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsJobsWorkItemsReportStatusWithObject:projectId:location:jobId:]

/** The job which the WorkItem is part of. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the WorkItem's job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The project which owns the WorkItem's job. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_ReportWorkItemStatusResponse.
 *
 *  Reports the status of dataflow WorkItems leased by a worker.
 *
 *  @param object The @c GTLRDataflow_ReportWorkItemStatusRequest to include in
 *    the query.
 *  @param projectId The project which owns the WorkItem's job.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the WorkItem's job.
 *  @param jobId The job which the WorkItem is part of.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsJobsWorkItemsReportStatus
 */
+ (instancetype)queryWithObject:(GTLRDataflow_ReportWorkItemStatusRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location
                          jobId:(NSString *)jobId;

@end

/**
 *  Deletes a snapshot.
 *
 *  Method: dataflow.projects.locations.snapshots.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsSnapshotsDelete : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsSnapshotsDeleteWithprojectId:location:snapshotId:]

/** The location that contains this snapshot. */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the snapshot belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The ID of the snapshot. */
@property(nonatomic, copy, nullable) NSString *snapshotId;

/**
 *  Fetches a @c GTLRDataflow_DeleteSnapshotResponse.
 *
 *  Deletes a snapshot.
 *
 *  @param projectId The ID of the Cloud Platform project that the snapshot
 *    belongs to.
 *  @param location The location that contains this snapshot.
 *  @param snapshotId The ID of the snapshot.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsSnapshotsDelete
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                        snapshotId:(NSString *)snapshotId;

@end

/**
 *  Gets information about a snapshot.
 *
 *  Method: dataflow.projects.locations.snapshots.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsSnapshotsGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsSnapshotsGetWithprojectId:location:snapshotId:]

/** The location that contains this snapshot. */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the snapshot belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The ID of the snapshot. */
@property(nonatomic, copy, nullable) NSString *snapshotId;

/**
 *  Fetches a @c GTLRDataflow_Snapshot.
 *
 *  Gets information about a snapshot.
 *
 *  @param projectId The ID of the Cloud Platform project that the snapshot
 *    belongs to.
 *  @param location The location that contains this snapshot.
 *  @param snapshotId The ID of the snapshot.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsSnapshotsGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location
                        snapshotId:(NSString *)snapshotId;

@end

/**
 *  Lists snapshots.
 *
 *  Method: dataflow.projects.locations.snapshots.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsSnapshotsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsSnapshotsListWithprojectId:location:]

/** If specified, list snapshots created from this job. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The location to list snapshots in. */
@property(nonatomic, copy, nullable) NSString *location;

/** The project ID to list snapshots for. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_ListSnapshotsResponse.
 *
 *  Lists snapshots.
 *
 *  @param projectId The project ID to list snapshots for.
 *  @param location The location to list snapshots in.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsSnapshotsList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location;

@end

/**
 *  Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm
 *  the given query parses correctly, and if able to look up schema information
 *  from DataCatalog, will validate that the query analyzes properly as well.
 *
 *  Method: dataflow.projects.locations.sql.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsSqlValidate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsSqlValidateWithprojectId:location:]

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The sql query to validate. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRDataflow_ValidateResponse.
 *
 *  Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm
 *  the given query parses correctly, and if able to look up schema information
 *  from DataCatalog, will validate that the query analyzes properly as well.
 *
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *    which to direct the request.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsSqlValidate
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location;

@end

/**
 *  Creates a Cloud Dataflow job from a template.
 *
 *  Method: dataflow.projects.locations.templates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsTemplatesCreate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsTemplatesCreateWithObject:projectId:location:]

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Creates a Cloud Dataflow job from a template.
 *
 *  @param object The @c GTLRDataflow_CreateJobFromTemplateRequest to include in
 *    the query.
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *    which to direct the request.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_CreateJobFromTemplateRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location;

@end

/**
 *  Get the template associated with a template.
 *
 *  Method: dataflow.projects.locations.templates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsTemplatesGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsTemplatesGetWithprojectId:location:]

/**
 *  Required. A Cloud Storage path to the template from which to create the job.
 *  Must be valid Cloud Storage URL, beginning with 'gs://'.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  The view to retrieve. Defaults to METADATA_ONLY.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewMetadataOnly Template view that retrieves only
 *        the metadata associated with the template. (Value: "METADATA_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_GetTemplateResponse.
 *
 *  Get the template associated with a template.
 *
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *    which to direct the request.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsTemplatesGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                          location:(NSString *)location;

@end

/**
 *  Launch a template.
 *
 *  Method: dataflow.projects.locations.templates.launch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsTemplatesLaunch : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsTemplatesLaunchWithObject:projectId:location:]

/**
 *  Path to dynamic template spec file on GCS. The file must be a Json
 *  serialized DynamicTemplateFieSpec object.
 */
@property(nonatomic, copy, nullable) NSString *dynamicTemplateGcsPath;

/**
 *  Cloud Storage path for staging dependencies. Must be a valid Cloud Storage
 *  URL, beginning with `gs://`.
 */
@property(nonatomic, copy, nullable) NSString *dynamicTemplateStagingLocation;

/**
 *  A Cloud Storage path to the template from which to create the job. Must be
 *  valid Cloud Storage URL, beginning with 'gs://'.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  If true, the request is validated but not actually executed. Defaults to
 *  false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDataflow_LaunchTemplateResponse.
 *
 *  Launch a template.
 *
 *  @param object The @c GTLRDataflow_LaunchTemplateParameters to include in the
 *    query.
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *    which to direct the request.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsTemplatesLaunch
 */
+ (instancetype)queryWithObject:(GTLRDataflow_LaunchTemplateParameters *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location;

@end

/**
 *  Send a worker_message to the service.
 *
 *  Method: dataflow.projects.locations.workerMessages
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsLocationsWorkerMessages : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsLocationsWorkerMessagesWithObject:projectId:location:]

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *  contains the job.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The project to send the WorkerMessages to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_SendWorkerMessagesResponse.
 *
 *  Send a worker_message to the service.
 *
 *  @param object The @c GTLRDataflow_SendWorkerMessagesRequest to include in
 *    the query.
 *  @param projectId The project to send the WorkerMessages to.
 *  @param location The [regional endpoint]
 *    (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
 *    contains the job.
 *
 *  @return GTLRDataflowQuery_ProjectsLocationsWorkerMessages
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SendWorkerMessagesRequest *)object
                      projectId:(NSString *)projectId
                       location:(NSString *)location;

@end

/**
 *  Gets information about a snapshot.
 *
 *  Method: dataflow.projects.snapshots.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsSnapshotsGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsSnapshotsGetWithprojectId:snapshotId:]

/** The location that contains this snapshot. */
@property(nonatomic, copy, nullable) NSString *location;

/** The ID of the Cloud Platform project that the snapshot belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/** The ID of the snapshot. */
@property(nonatomic, copy, nullable) NSString *snapshotId;

/**
 *  Fetches a @c GTLRDataflow_Snapshot.
 *
 *  Gets information about a snapshot.
 *
 *  @param projectId The ID of the Cloud Platform project that the snapshot
 *    belongs to.
 *  @param snapshotId The ID of the snapshot.
 *
 *  @return GTLRDataflowQuery_ProjectsSnapshotsGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                        snapshotId:(NSString *)snapshotId;

@end

/**
 *  Lists snapshots.
 *
 *  Method: dataflow.projects.snapshots.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsSnapshotsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsSnapshotsListWithprojectId:]

/** If specified, list snapshots created from this job. */
@property(nonatomic, copy, nullable) NSString *jobId;

/** The location to list snapshots in. */
@property(nonatomic, copy, nullable) NSString *location;

/** The project ID to list snapshots for. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_ListSnapshotsResponse.
 *
 *  Lists snapshots.
 *
 *  @param projectId The project ID to list snapshots for.
 *
 *  @return GTLRDataflowQuery_ProjectsSnapshotsList
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

/**
 *  Creates a Cloud Dataflow job from a template.
 *
 *  Method: dataflow.projects.templates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsTemplatesCreate : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsTemplatesCreateWithObject:projectId:]

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_Job.
 *
 *  Creates a Cloud Dataflow job from a template.
 *
 *  @param object The @c GTLRDataflow_CreateJobFromTemplateRequest to include in
 *    the query.
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataflow_CreateJobFromTemplateRequest *)object
                      projectId:(NSString *)projectId;

@end

/**
 *  Get the template associated with a template.
 *
 *  Method: dataflow.projects.templates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsTemplatesGet : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsTemplatesGetWithprojectId:]

/**
 *  Required. A Cloud Storage path to the template from which to create the job.
 *  Must be valid Cloud Storage URL, beginning with 'gs://'.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  The view to retrieve. Defaults to METADATA_ONLY.
 *
 *  Likely values:
 *    @arg @c kGTLRDataflowViewMetadataOnly Template view that retrieves only
 *        the metadata associated with the template. (Value: "METADATA_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRDataflow_GetTemplateResponse.
 *
 *  Get the template associated with a template.
 *
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsTemplatesGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

/**
 *  Launch a template.
 *
 *  Method: dataflow.projects.templates.launch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsTemplatesLaunch : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsTemplatesLaunchWithObject:projectId:]

/**
 *  Path to dynamic template spec file on GCS. The file must be a Json
 *  serialized DynamicTemplateFieSpec object.
 */
@property(nonatomic, copy, nullable) NSString *dynamicTemplateGcsPath;

/**
 *  Cloud Storage path for staging dependencies. Must be a valid Cloud Storage
 *  URL, beginning with `gs://`.
 */
@property(nonatomic, copy, nullable) NSString *dynamicTemplateStagingLocation;

/**
 *  A Cloud Storage path to the template from which to create the job. Must be
 *  valid Cloud Storage URL, beginning with 'gs://'.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  The [regional endpoint]
 *  (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
 *  which to direct the request.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Required. The ID of the Cloud Platform project that the job belongs to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  If true, the request is validated but not actually executed. Defaults to
 *  false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDataflow_LaunchTemplateResponse.
 *
 *  Launch a template.
 *
 *  @param object The @c GTLRDataflow_LaunchTemplateParameters to include in the
 *    query.
 *  @param projectId Required. The ID of the Cloud Platform project that the job
 *    belongs to.
 *
 *  @return GTLRDataflowQuery_ProjectsTemplatesLaunch
 */
+ (instancetype)queryWithObject:(GTLRDataflow_LaunchTemplateParameters *)object
                      projectId:(NSString *)projectId;

@end

/**
 *  List TemplateVersions using project_id and an optional display_name field.
 *  List all the TemplateVersions in the Template if display set. List all the
 *  TemplateVersions in the Project if display_name not set.
 *
 *  Method: dataflow.projects.templateVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsTemplateVersionsList : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsTemplateVersionsListWithparent:]

/** The maximum number of TemplateVersions to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token, received from a previous ListTemplateVersions call. Provide
 *  this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  parent includes project_id, and display_name is optional. List by
 *  project_id(pid1) and display_name(tid1). Format:
 *  projects/{pid1}/catalogTemplates/{tid1} List by project_id(pid1). Format:
 *  projects/{pid1}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataflow_ListTemplateVersionsResponse.
 *
 *  List TemplateVersions using project_id and an optional display_name field.
 *  List all the TemplateVersions in the Template if display set. List all the
 *  TemplateVersions in the Project if display_name not set.
 *
 *  @param parent parent includes project_id, and display_name is optional. List
 *    by project_id(pid1) and display_name(tid1). Format:
 *    projects/{pid1}/catalogTemplates/{tid1} List by project_id(pid1). Format:
 *    projects/{pid1}
 *
 *  @return GTLRDataflowQuery_ProjectsTemplateVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Send a worker_message to the service.
 *
 *  Method: dataflow.projects.workerMessages
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataflowCloudPlatform
 *    @c kGTLRAuthScopeDataflowCompute
 *    @c kGTLRAuthScopeDataflowComputeReadonly
 *    @c kGTLRAuthScopeDataflowUserinfoEmail
 */
@interface GTLRDataflowQuery_ProjectsWorkerMessages : GTLRDataflowQuery
// Previous library name was
//   +[GTLQueryDataflow queryForProjectsWorkerMessagesWithObject:projectId:]

/** The project to send the WorkerMessages to. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRDataflow_SendWorkerMessagesResponse.
 *
 *  Send a worker_message to the service.
 *
 *  @param object The @c GTLRDataflow_SendWorkerMessagesRequest to include in
 *    the query.
 *  @param projectId The project to send the WorkerMessages to.
 *
 *  @return GTLRDataflowQuery_ProjectsWorkerMessages
 */
+ (instancetype)queryWithObject:(GTLRDataflow_SendWorkerMessagesRequest *)object
                      projectId:(NSString *)projectId;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
