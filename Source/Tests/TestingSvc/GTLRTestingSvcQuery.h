// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Testing Svc (testing_svc/v3)
// Description:
//   Service for the GTLRService tests, based on Drive. Allows us to avoid break
//   when Drive changes.

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRTestingSvc_File;
@class GTLRTestingSvc_Permission;

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// corpus

/**
 *  Files shared to the user's domain.
 *
 *  Value: "domain"
 */
GTLR_EXTERN NSString * const kGTLRTestingSvcCorpusDomain;
/**
 *  Files owned by or shared to the user.
 *
 *  Value: "user"
 */
GTLR_EXTERN NSString * const kGTLRTestingSvcCorpusUser;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other TestingSvc query classes.
 */
@interface GTLRTestingSvcQuery : GTLRQuery

@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  GTLRTestingSvcQuery_FilesCreate
 *
 *  Method: drive.files.create
 */
@interface GTLRTestingSvcQuery_FilesCreate : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForFilesCreateWithObject:]

/**
 *  ignoreDefaultVisibility
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL ignoreDefaultVisibility;

/**
 *  keepRevisionForever
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL keepRevisionForever;

@property(nonatomic, copy, nullable) NSString *ocrLanguage;

/**
 *  useContentAsIndexableText
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL useContentAsIndexableText;

/**
 *  Fetches a @c GTLRTestingSvc_File.
 *
 *  @param object The @c GTLRTestingSvc_File to include in the query.
 *  @param uploadParameters The media to include in this query. Maximum size
 *    5120GB. Accepted MIME type: * / *
 *
 *  @returns GTLRTestingSvcQuery_FilesCreate
 */
+ (instancetype)queryWithObject:(GTLRTestingSvc_File *)object
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  GTLRTestingSvcQuery_FilesDelete
 *
 *  Method: drive.files.delete
 */
@interface GTLRTestingSvcQuery_FilesDelete : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForFilesDeleteWithfileId:]

@property(nonatomic, copy, nullable) NSString *fileId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  @param fileId NSString
 *
 *  @returns GTLRTestingSvcQuery_FilesDelete
 */
+ (instancetype)queryWithFileId:(NSString *)fileId;

@end

/**
 *  GTLRTestingSvcQuery_FilesGet
 *
 *  Method: drive.files.get
 */
@interface GTLRTestingSvcQuery_FilesGet : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForFilesGetWithfileId:]

/**
 *  acknowledgeAbuse
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL acknowledgeAbuse;

@property(nonatomic, copy, nullable) NSString *fileId;

/**
 *  Fetches a @c GTLRTestingSvc_File.
 *
 *  @param fileId NSString
 *
 *  @returns GTLRTestingSvcQuery_FilesGet
 */
+ (instancetype)queryWithFileId:(NSString *)fileId;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  @param fileId NSString
 *
 *  @returns GTLRTestingSvcQuery_FilesGet
 */
+ (instancetype)queryForMediaWithFileId:(NSString *)fileId;

@end

/**
 *  GTLRTestingSvcQuery_FilesList
 *
 *  Method: drive.files.list
 */
@interface GTLRTestingSvcQuery_FilesList : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForFilesList]

/**
 *  corpus
 *
 *  Likely values:
 *    @arg @c kGTLRTestingSvcCorpusDomain Files shared to the user's domain.
 *        (Value: "domain")
 *    @arg @c kGTLRTestingSvcCorpusUser Files owned by or shared to the user.
 *        (Value: "user")
 */
@property(nonatomic, copy, nullable) NSString *corpus;

@property(nonatomic, strong, nullable) NSArray<NSString *> *extras;

@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  pageSize
 *
 *  @note If not set, the documented server-side default will be 100 (from the
 *        range 1..1000).
 */
@property(nonatomic, assign) NSInteger pageSize;

@property(nonatomic, copy, nullable) NSString *pageToken;

@property(nonatomic, copy, nullable) NSString *q;

/**
 *  spaces
 *
 *  @note If not set, the documented server-side default will be drive.
 */
@property(nonatomic, copy, nullable) NSString *spaces;

@property(nonatomic, strong, nullable) GTLRDateTime *timeParamForTesting;

/**
 *  Fetches a @c GTLRTestingSvc_FileList.
 *
 *  @returns GTLRTestingSvcQuery_FilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  GTLRTestingSvcQuery_PermissionsCreate
 *
 *  Method: drive.permissions.create
 */
@interface GTLRTestingSvcQuery_PermissionsCreate : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForPermissionsCreateWithObject:fileId:]

@property(nonatomic, copy, nullable) NSString *emailMessage;

@property(nonatomic, copy, nullable) NSString *fileId;

@property(nonatomic, assign) BOOL sendNotificationEmail;

/**
 *  transferOwnership
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL transferOwnership;

/**
 *  Fetches a @c GTLRTestingSvc_Permission.
 *
 *  @param object The @c GTLRTestingSvc_Permission to include in the query.
 *  @param fileId NSString
 *
 *  @returns GTLRTestingSvcQuery_PermissionsCreate
 */
+ (instancetype)queryWithObject:(GTLRTestingSvc_Permission *)object
                         fileId:(NSString *)fileId;

@end

/**
 *  GTLRTestingSvcQuery_PermissionsList
 *
 *  Method: drive.permissions.list
 */
@interface GTLRTestingSvcQuery_PermissionsList : GTLRTestingSvcQuery
// Previous library name was
//   +[GTLQueryTestingSvc queryForPermissionsListWithfileId:]

@property(nonatomic, copy, nullable) NSString *fileId;

/**
 *  Fetches a @c GTLRTestingSvc_PermissionList.
 *
 *  @param fileId NSString
 *
 *  @returns GTLRTestingSvcQuery_PermissionsList
 */
+ (instancetype)queryWithFileId:(NSString *)fileId;

@end

NS_ASSUME_NONNULL_END
