// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Apigee Registry API (apigeeregistry/v1)
// Documentation:
//   https://cloud.google.com/apigee/docs/api-hub/what-is-api-hub

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRApigeeRegistryObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Apigee Registry query classes.
 */
@interface GTLRApigeeRegistryQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the artifact, which will become the final
 *  component of the artifact's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Creates a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to delete. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified artifact.
 *
 *  @param name Required. The name of the artifact to delete. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Returns a specified artifact.
 *
 *  @param name Required. The name of the artifact to retrieve. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact whose contents should be retrieved.
 *  Format: `{parent}/artifacts/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  @param name Required. The name of the artifact whose contents should be
 *    retrieved. Format: `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching artifacts.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of artifacts to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListArtifacts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListArtifacts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListArtifactsResponse.
 *
 *  Returns matching artifacts.
 *
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to replace a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.replaceArtifact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsReplaceArtifact : GTLRApigeeRegistryQuery

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Used to replace a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsReplaceArtifact
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.artifacts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisArtifactsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified API.
 *
 *  Method: apigeeregistry.projects.locations.apis.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the API, which will become the final component
 *  of the API's resource name. This value should be 4-63 characters, and valid
 *  characters are /a-z-/. Following AIP-162, IDs must not have the form of a
 *  UUID.
 */
@property(nonatomic, copy, nullable) NSString *apiId;

/**
 *  Required. The parent, which owns this collection of APIs. Format: `projects/
 *  * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Api.
 *
 *  Creates a specified API.
 *
 *  @param object The @c GTLRApigeeRegistry_Api to include in the query.
 *  @param parent Required. The parent, which owns this collection of APIs.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Api *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified API and all of the resources that it owns.
 *
 *  Method: apigeeregistry.projects.locations.apis.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDelete : GTLRApigeeRegistryQuery

/**
 *  If set to true, any child resources will also be deleted. (Otherwise, the
 *  request will only work if there are no child resources.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the API to delete. Format: `projects/ * /locations/ *
 *  /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified API and all of the resources that it owns.
 *
 *  @param name Required. The name of the API to delete. Format: `projects/ *
 *    /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the artifact, which will become the final
 *  component of the artifact's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Creates a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to delete. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified artifact.
 *
 *  @param name Required. The name of the artifact to delete. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Returns a specified artifact.
 *
 *  @param name Required. The name of the artifact to retrieve. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact whose contents should be retrieved.
 *  Format: `{parent}/artifacts/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  @param name Required. The name of the artifact whose contents should be
 *    retrieved. Format: `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns matching artifacts.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of artifacts to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListArtifacts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListArtifacts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListArtifactsResponse.
 *
 *  Returns matching artifacts.
 *
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to replace a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.artifacts.replaceArtifact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsReplaceArtifact : GTLRApigeeRegistryQuery

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Used to replace a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsArtifactsReplaceArtifact
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a specified deployment.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the deployment, which will become the final
 *  component of the deployment's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *apiDeploymentId;

/**
 *  Required. The parent, which owns this collection of deployments. Format:
 *  `projects/ * /locations/ * /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Creates a specified deployment.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiDeployment to include in the
 *    query.
 *  @param parent Required. The parent, which owns this collection of
 *    deployments. Format: `projects/ * /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified deployment, all revisions, and all child resources
 *  (e.g., artifacts).
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsDelete : GTLRApigeeRegistryQuery

/**
 *  If set to true, any child resources will also be deleted. (Otherwise, the
 *  request will only work if there are no child resources.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the deployment to delete. Format: `projects/ *
 *  /locations/ * /apis/ * /deployments/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified deployment, all revisions, and all child resources
 *  (e.g., artifacts).
 *
 *  @param name Required. The name of the deployment to delete. Format:
 *    `projects/ * /locations/ * /apis/ * /deployments/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a revision of a deployment.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.deleteRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsDeleteRevision : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the deployment revision to be deleted, with a revision
 *  ID explicitly included. Example:
 *  `projects/sample/locations/global/apis/petstore/deployments/prod\@c7cfa2a8`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Deletes a revision of a deployment.
 *
 *  @param name Required. The name of the deployment revision to be deleted,
 *    with a revision ID explicitly included. Example:
 *    `projects/sample/locations/global/apis/petstore/deployments/prod\@c7cfa2a8`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsDeleteRevision
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified deployment.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the deployment to retrieve. Format: `projects/ *
 *  /locations/ * /apis/ * /deployments/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Returns a specified deployment.
 *
 *  @param name Required. The name of the deployment to retrieve. Format:
 *    `projects/ * /locations/ * /apis/ * /deployments/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching deployments.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of deployments to return. The service may return fewer
 *  than this value. If unspecified, at most 50 values will be returned. The
 *  maximum is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListApiDeployments` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListApiDeployments` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of deployments. Format:
 *  `projects/ * /locations/ * /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApiDeploymentsResponse.
 *
 *  Returns matching deployments.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    deployments. Format: `projects/ * /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all revisions of a deployment. Revisions are returned in descending
 *  order of revision creation time.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.listRevisions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsListRevisions : GTLRApigeeRegistryQuery

/** Required. The name of the deployment to list revisions for. */
@property(nonatomic, copy, nullable) NSString *name;

/** The maximum number of revisions to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token, received from a previous ListApiDeploymentRevisions call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApiDeploymentRevisionsResponse.
 *
 *  Lists all revisions of a deployment. Revisions are returned in descending
 *  order of revision creation time.
 *
 *  @param name Required. The name of the deployment to list revisions for.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsListRevisions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Used to modify a specified deployment.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsPatch : GTLRApigeeRegistryQuery

/**
 *  If set to true, and the deployment is not found, a new deployment will be
 *  created. In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. If omitted, all fields are updated that
 *  are set in the request message (fields set to default values are ignored).
 *  If an asterisk "*" is specified, all fields are updated, including fields
 *  that are unspecified/default in the request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Used to modify a specified deployment.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiDeployment to include in the
 *    query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiDeployment *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the current revision to a specified prior revision. Note that this
 *  creates a new revision with a new revision ID.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.rollback
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsRollback : GTLRApigeeRegistryQuery

/** Required. The deployment being rolled back. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Sets the current revision to a specified prior revision. Note that this
 *  creates a new revision with a new revision ID.
 *
 *  @param object The @c GTLRApigeeRegistry_RollbackApiDeploymentRequest to
 *    include in the query.
 *  @param name Required. The deployment being rolled back.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsRollback
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_RollbackApiDeploymentRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Adds a tag to a specified revision of a deployment.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.tagRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsTagRevision : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the deployment to be tagged, including the revision
 *  ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiDeployment.
 *
 *  Adds a tag to a specified revision of a deployment.
 *
 *  @param object The @c GTLRApigeeRegistry_TagApiDeploymentRevisionRequest to
 *    include in the query.
 *  @param name Required. The name of the deployment to be tagged, including the
 *    revision ID.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsTagRevision
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TagApiDeploymentRevisionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.deployments.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisDeploymentsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns a specified API.
 *
 *  Method: apigeeregistry.projects.locations.apis.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the API to retrieve. Format: `projects/ * /locations/
 *  * /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Api.
 *
 *  Returns a specified API.
 *
 *  @param name Required. The name of the API to retrieve. Format: `projects/ *
 *    /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching APIs.
 *
 *  Method: apigeeregistry.projects.locations.apis.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of APIs to return. The service may return fewer than this
 *  value. If unspecified, at most 50 values will be returned. The maximum is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListApis` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListApis` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of APIs. Format: `projects/
 *  * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApisResponse.
 *
 *  Returns matching APIs.
 *
 *  @param parent Required. The parent, which owns this collection of APIs.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to modify a specified API.
 *
 *  Method: apigeeregistry.projects.locations.apis.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisPatch : GTLRApigeeRegistryQuery

/**
 *  If set to true, and the API is not found, a new API will be created. In this
 *  situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. If omitted, all fields are updated that
 *  are set in the request message (fields set to default values are ignored).
 *  If an asterisk "*" is specified, all fields are updated, including fields
 *  that are unspecified/default in the request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigeeRegistry_Api.
 *
 *  Used to modify a specified API.
 *
 *  @param object The @c GTLRApigeeRegistry_Api to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisPatch
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Api *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the artifact, which will become the final
 *  component of the artifact's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Creates a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to delete. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified artifact.
 *
 *  @param name Required. The name of the artifact to delete. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Returns a specified artifact.
 *
 *  @param name Required. The name of the artifact to retrieve. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact whose contents should be retrieved.
 *  Format: `{parent}/artifacts/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  @param name Required. The name of the artifact whose contents should be
 *    retrieved. Format: `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching artifacts.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of artifacts to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListArtifacts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListArtifacts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListArtifactsResponse.
 *
 *  Returns matching artifacts.
 *
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to replace a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.replaceArtifact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsReplaceArtifact : GTLRApigeeRegistryQuery

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Used to replace a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsReplaceArtifact
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.artifacts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsArtifactsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified version.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the version, which will become the final
 *  component of the version's resource name. This value should be 1-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *apiVersionId;

/**
 *  Required. The parent, which owns this collection of versions. Format:
 *  `projects/ * /locations/ * /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiVersion.
 *
 *  Creates a specified version.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiVersion to include in the query.
 *  @param parent Required. The parent, which owns this collection of versions.
 *    Format: `projects/ * /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified version and all of the resources that it owns.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsDelete : GTLRApigeeRegistryQuery

/**
 *  If set to true, any child resources will also be deleted. (Otherwise, the
 *  request will only work if there are no child resources.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the version to delete. Format: `projects/ *
 *  /locations/ * /apis/ * /versions/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified version and all of the resources that it owns.
 *
 *  @param name Required. The name of the version to delete. Format: `projects/
 *    * /locations/ * /apis/ * /versions/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified version.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the version to retrieve. Format: `projects/ *
 *  /locations/ * /apis/ * /versions/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiVersion.
 *
 *  Returns a specified version.
 *
 *  @param name Required. The name of the version to retrieve. Format:
 *    `projects/ * /locations/ * /apis/ * /versions/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching versions.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of versions to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListApiVersions` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListApiVersions` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of versions. Format:
 *  `projects/ * /locations/ * /apis/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApiVersionsResponse.
 *
 *  Returns matching versions.
 *
 *  @param parent Required. The parent, which owns this collection of versions.
 *    Format: `projects/ * /locations/ * /apis/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to modify a specified version.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsPatch : GTLRApigeeRegistryQuery

/**
 *  If set to true, and the version is not found, a new version will be created.
 *  In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. If omitted, all fields are updated that
 *  are set in the request message (fields set to default values are ignored).
 *  If an asterisk "*" is specified, all fields are updated, including fields
 *  that are unspecified/default in the request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiVersion.
 *
 *  Used to modify a specified version.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiVersion to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiVersion *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the artifact, which will become the final
 *  component of the artifact's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Creates a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to delete. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified artifact.
 *
 *  @param name Required. The name of the artifact to delete. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Returns a specified artifact.
 *
 *  @param name Required. The name of the artifact to retrieve. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact whose contents should be retrieved.
 *  Format: `{parent}/artifacts/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  @param name Required. The name of the artifact whose contents should be
 *    retrieved. Format: `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching artifacts.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of artifacts to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListArtifacts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListArtifacts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListArtifactsResponse.
 *
 *  Returns matching artifacts.
 *
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to replace a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.replaceArtifact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsReplaceArtifact : GTLRApigeeRegistryQuery

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Used to replace a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsReplaceArtifact
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.artifacts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsArtifactsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified spec.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the spec, which will become the final component
 *  of the spec's resource name. This value should be 4-63 characters, and valid
 *  characters are /a-z-/. Following AIP-162, IDs must not have the form of a
 *  UUID.
 */
@property(nonatomic, copy, nullable) NSString *apiSpecId;

/**
 *  Required. The parent, which owns this collection of specs. Format:
 *  `projects/ * /locations/ * /apis/ * /versions/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Creates a specified spec.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiSpec to include in the query.
 *  @param parent Required. The parent, which owns this collection of specs.
 *    Format: `projects/ * /locations/ * /apis/ * /versions/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiSpec *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified spec, all revisions, and all child resources (e.g.,
 *  artifacts).
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsDelete : GTLRApigeeRegistryQuery

/**
 *  If set to true, any child resources will also be deleted. (Otherwise, the
 *  request will only work if there are no child resources.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the spec to delete. Format: `projects/ * /locations/ *
 *  /apis/ * /versions/ * /specs/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified spec, all revisions, and all child resources (e.g.,
 *  artifacts).
 *
 *  @param name Required. The name of the spec to delete. Format: `projects/ *
 *    /locations/ * /apis/ * /versions/ * /specs/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a revision of a spec.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.deleteRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsDeleteRevision : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the spec revision to be deleted, with a revision ID
 *  explicitly included. Example:
 *  `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml\@c7cfa2a8`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Deletes a revision of a spec.
 *
 *  @param name Required. The name of the spec revision to be deleted, with a
 *    revision ID explicitly included. Example:
 *    `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml\@c7cfa2a8`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsDeleteRevision
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified spec.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the spec to retrieve. Format: `projects/ * /locations/
 *  * /apis/ * /versions/ * /specs/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Returns a specified spec.
 *
 *  @param name Required. The name of the spec to retrieve. Format: `projects/ *
 *    /locations/ * /apis/ * /versions/ * /specs/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified spec. If specs are stored with GZip
 *  compression, the default behavior is to return the spec uncompressed (the
 *  mime_type response field indicates the exact format returned).
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the spec whose contents should be retrieved. Format:
 *  `projects/ * /locations/ * /apis/ * /versions/ * /specs/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified spec. If specs are stored with GZip
 *  compression, the default behavior is to return the spec uncompressed (the
 *  mime_type response field indicates the exact format returned).
 *
 *  @param name Required. The name of the spec whose contents should be
 *    retrieved. Format: `projects/ * /locations/ * /apis/ * /versions/ *
 *    /specs/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching specs.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of specs to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListApiSpecs` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListApiSpecs` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of specs. Format:
 *  `projects/ * /locations/ * /apis/ * /versions/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApiSpecsResponse.
 *
 *  Returns matching specs.
 *
 *  @param parent Required. The parent, which owns this collection of specs.
 *    Format: `projects/ * /locations/ * /apis/ * /versions/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all revisions of a spec. Revisions are returned in descending order of
 *  revision creation time.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.listRevisions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsListRevisions : GTLRApigeeRegistryQuery

/** Required. The name of the spec to list revisions for. */
@property(nonatomic, copy, nullable) NSString *name;

/** The maximum number of revisions to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token, received from a previous ListApiSpecRevisions call. Provide
 *  this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListApiSpecRevisionsResponse.
 *
 *  Lists all revisions of a spec. Revisions are returned in descending order of
 *  revision creation time.
 *
 *  @param name Required. The name of the spec to list revisions for.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsListRevisions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Used to modify a specified spec.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsPatch : GTLRApigeeRegistryQuery

/**
 *  If set to true, and the spec is not found, a new spec will be created. In
 *  this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated. If omitted, all fields are updated that
 *  are set in the request message (fields set to default values are ignored).
 *  If an asterisk "*" is specified, all fields are updated, including fields
 *  that are unspecified/default in the request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Used to modify a specified spec.
 *
 *  @param object The @c GTLRApigeeRegistry_ApiSpec to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_ApiSpec *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the current revision to a specified prior revision. Note that this
 *  creates a new revision with a new revision ID.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.rollback
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsRollback : GTLRApigeeRegistryQuery

/** Required. The spec being rolled back. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Sets the current revision to a specified prior revision. Note that this
 *  creates a new revision with a new revision ID.
 *
 *  @param object The @c GTLRApigeeRegistry_RollbackApiSpecRequest to include in
 *    the query.
 *  @param name Required. The spec being rolled back.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsRollback
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_RollbackApiSpecRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Adds a tag to a specified revision of a spec.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.tagRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsTagRevision : GTLRApigeeRegistryQuery

/** Required. The name of the spec to be tagged, including the revision ID. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_ApiSpec.
 *
 *  Adds a tag to a specified revision of a spec.
 *
 *  @param object The @c GTLRApigeeRegistry_TagApiSpecRevisionRequest to include
 *    in the query.
 *  @param name Required. The name of the spec to be tagged, including the
 *    revision ID.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsTagRevision
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TagApiSpecRevisionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.specs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsSpecsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.apis.versions.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsApisVersionsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsCreate : GTLRApigeeRegistryQuery

/**
 *  Required. The ID to use for the artifact, which will become the final
 *  component of the artifact's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-/. Following AIP-162, IDs must not
 *  have the form of a UUID.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Creates a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to delete. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Removes a specified artifact.
 *
 *  @param name Required. The name of the artifact to delete. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Returns a specified artifact.
 *
 *  @param name Required. The name of the artifact to retrieve. Format:
 *    `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  Method: apigeeregistry.projects.locations.artifacts.getContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGetContents : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the artifact whose contents should be retrieved.
 *  Format: `{parent}/artifacts/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_HttpBody.
 *
 *  Returns the contents of a specified artifact. If artifacts are stored with
 *  GZip compression, the default behavior is to return the artifact
 *  uncompressed (the mime_type response field indicates the exact format
 *  returned).
 *
 *  @param name Required. The name of the artifact whose contents should be
 *    retrieved. Format: `{parent}/artifacts/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGetContents
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Returns matching artifacts.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsList : GTLRApigeeRegistryQuery

/**
 *  An expression that can be used to filter the list. Filters use the Common
 *  Expression Language and can refer to all message fields except contents.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
 *  descending order using the "desc" identifier, e.g. "foo desc,bar"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of artifacts to return. The service may return fewer than
 *  this value. If unspecified, at most 50 values will be returned. The maximum
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListArtifacts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListArtifacts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of artifacts. Format:
 *  `{parent}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListArtifactsResponse.
 *
 *  Returns matching artifacts.
 *
 *  @param parent Required. The parent, which owns this collection of artifacts.
 *    Format: `{parent}`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Used to replace a specified artifact.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.replaceArtifact
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsReplaceArtifact : GTLRApigeeRegistryQuery

/** Resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Artifact.
 *
 *  Used to replace a specified artifact.
 *
 *  @param object The @c GTLRApigeeRegistry_Artifact to include in the query.
 *  @param name Resource name.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsReplaceArtifact
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.artifacts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsArtifactsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: apigeeregistry.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsGet : GTLRApigeeRegistryQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Provisions instance resources for the Registry.
 *
 *  Method: apigeeregistry.projects.locations.instances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesCreate : GTLRApigeeRegistryQuery

/**
 *  Required. Identifier to assign to the Instance. Must be unique within scope
 *  of the parent resource.
 */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Required. Parent resource of the Instance, of the form: `projects/ *
 *  /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigeeRegistry_Operation.
 *
 *  Provisions instance resources for the Registry.
 *
 *  @param object The @c GTLRApigeeRegistry_Instance to include in the query.
 *  @param parent Required. Parent resource of the Instance, of the form:
 *    `projects/ * /locations/ *`
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_Instance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the Registry instance.
 *
 *  Method: apigeeregistry.projects.locations.instances.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesDelete : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the Instance to delete. Format: `projects/ *
 *  /locations/ * /instances/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Operation.
 *
 *  Deletes the Registry instance.
 *
 *  @param name Required. The name of the Instance to delete. Format: `projects/
 *    * /locations/ * /instances/ *`.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Instance.
 *
 *  Method: apigeeregistry.projects.locations.instances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesGet : GTLRApigeeRegistryQuery

/**
 *  Required. The name of the Instance to retrieve. Format: `projects/ *
 *  /locations/ * /instances/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Instance.
 *
 *  Gets details of a single Instance.
 *
 *  @param name Required. The name of the Instance to retrieve. Format:
 *    `projects/ * /locations/ * /instances/ *`.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.instances.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.instances.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.instances.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsInstancesTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsInstancesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: apigeeregistry.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsList : GTLRApigeeRegistryQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: apigeeregistry.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsOperationsCancel : GTLRApigeeRegistryQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRApigeeRegistry_CancelOperationRequest to include in
 *    the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: apigeeregistry.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsOperationsDelete : GTLRApigeeRegistryQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: apigeeregistry.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsOperationsGet : GTLRApigeeRegistryQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigeeRegistry_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: apigeeregistry.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsOperationsList : GTLRApigeeRegistryQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRApigeeRegistry_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apigeeregistry.projects.locations.runtime.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeGetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apigeeregistry.projects.locations.runtime.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeSetIamPolicy : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRApigeeRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apigeeregistry.projects.locations.runtime.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeRegistryCloudPlatform
 */
@interface GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeTestIamPermissions : GTLRApigeeRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigeeRegistry_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRApigeeRegistry_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeRegistryQuery_ProjectsLocationsRuntimeTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigeeRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
