// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Essential Contacts API (essentialcontacts/v1)
// Documentation:
//   https://cloud.google.com/essentialcontacts/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLREssentialcontactsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// notificationCategories

/**
 *  All notifications related to the resource, including notifications
 *  pertaining to categories added in the future.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesAll;
/**
 *  Notifications related to billing and payments notifications, price updates,
 *  errors, or credits.
 *
 *  Value: "BILLING"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesBilling;
/**
 *  Notifications related to enforcement actions, regulatory compliance, or
 *  government notices.
 *
 *  Value: "LEGAL"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesLegal;
/**
 *  Notification category is unrecognized or unspecified.
 *
 *  Value: "NOTIFICATION_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesNotificationCategoryUnspecified;
/**
 *  Notifications related to new versions, product terms updates, or
 *  deprecations.
 *
 *  Value: "PRODUCT_UPDATES"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesProductUpdates;
/**
 *  Notifications related to security/privacy incidents, notifications, and
 *  vulnerabilities.
 *
 *  Value: "SECURITY"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesSecurity;
/**
 *  Notifications related to imminent account suspension.
 *
 *  Value: "SUSPENSION"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesSuspension;
/**
 *  Notifications related to technical events and issues such as outages,
 *  errors, or bugs.
 *
 *  Value: "TECHNICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesTechnical;
/**
 *  Child category of TECHNICAL. If assigned, technical incident notifications
 *  will go to these contacts instead of TECHNICAL.
 *
 *  Value: "TECHNICAL_INCIDENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLREssentialcontactsNotificationCategoriesTechnicalIncidents;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Essentialcontacts query classes.
 */
@interface GTLREssentialcontactsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  Method: essentialcontacts.folders.contacts.compute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsCompute : GTLREssentialcontactsQuery

/**
 *  The categories of notifications to compute contacts for. If ALL is included
 *  in this list, contacts subscribed to any notification category will be
 *  returned.
 *
 *  Likely values:
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesNotificationCategoryUnspecified
 *        Notification category is unrecognized or unspecified. (Value:
 *        "NOTIFICATION_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesAll All notifications
 *        related to the resource, including notifications pertaining to
 *        categories added in the future. (Value: "ALL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSuspension
 *        Notifications related to imminent account suspension. (Value:
 *        "SUSPENSION")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSecurity Notifications
 *        related to security/privacy incidents, notifications, and
 *        vulnerabilities. (Value: "SECURITY")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnical
 *        Notifications related to technical events and issues such as outages,
 *        errors, or bugs. (Value: "TECHNICAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesBilling Notifications
 *        related to billing and payments notifications, price updates, errors,
 *        or credits. (Value: "BILLING")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesLegal Notifications
 *        related to enforcement actions, regulatory compliance, or government
 *        notices. (Value: "LEGAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesProductUpdates
 *        Notifications related to new versions, product terms updates, or
 *        deprecations. (Value: "PRODUCT_UPDATES")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnicalIncidents
 *        Child category of TECHNICAL. If assigned, technical incident
 *        notifications will go to these contacts instead of TECHNICAL. (Value:
 *        "TECHNICAL_INCIDENTS")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notificationCategories;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the resource to compute contacts for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ComputeContactsResponse.
 *
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  @param parent Required. The name of the resource to compute contacts for.
 *    Format: organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsCompute
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Adds a new contact for a resource.
 *
 *  Method: essentialcontacts.folders.contacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsCreate : GTLREssentialcontactsQuery

/**
 *  Required. The resource to save this contact for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Adds a new contact for a resource.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param parent Required. The resource to save this contact for. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsCreate
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a contact.
 *
 *  Method: essentialcontacts.folders.contacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsDelete : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to delete. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Deletes a contact.
 *
 *  @param name Required. The name of the contact to delete. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a single contact.
 *
 *  Method: essentialcontacts.folders.contacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsGet : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to retrieve. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Gets a single contact.
 *
 *  @param name Required. The name of the contact to retrieve. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the contacts that have been set on a resource.
 *
 *  Method: essentialcontacts.folders.contacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsList : GTLREssentialcontactsQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name. Format: organizations/{organization_id},
 *  folders/{folder_id} or projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ListContactsResponse.
 *
 *  Lists the contacts that have been set on a resource.
 *
 *  @param parent Required. The parent resource name. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  Method: essentialcontacts.folders.contacts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsPatch : GTLREssentialcontactsQuery

/**
 *  Output only. The identifier for the contact. Format:
 *  {resource_type}/{resource_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The update mask applied to the resource. For the `FieldMask`
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param name Output only. The identifier for the contact. Format:
 *    {resource_type}/{resource_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsPatch
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                           name:(NSString *)name;

@end

/**
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  Method: essentialcontacts.folders.contacts.sendTestMessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_FoldersContactsSendTestMessage : GTLREssentialcontactsQuery

/**
 *  Required. The name of the resource to send the test message for. All
 *  contacts must either be set directly on this resource or inherited from
 *  another resource that is an ancestor of this one. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest
 *    to include in the query.
 *  @param resource Required. The name of the resource to send the test message
 *    for. All contacts must either be set directly on this resource or
 *    inherited from another resource that is an ancestor of this one. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_FoldersContactsSendTestMessage
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  Method: essentialcontacts.organizations.contacts.compute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsCompute : GTLREssentialcontactsQuery

/**
 *  The categories of notifications to compute contacts for. If ALL is included
 *  in this list, contacts subscribed to any notification category will be
 *  returned.
 *
 *  Likely values:
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesNotificationCategoryUnspecified
 *        Notification category is unrecognized or unspecified. (Value:
 *        "NOTIFICATION_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesAll All notifications
 *        related to the resource, including notifications pertaining to
 *        categories added in the future. (Value: "ALL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSuspension
 *        Notifications related to imminent account suspension. (Value:
 *        "SUSPENSION")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSecurity Notifications
 *        related to security/privacy incidents, notifications, and
 *        vulnerabilities. (Value: "SECURITY")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnical
 *        Notifications related to technical events and issues such as outages,
 *        errors, or bugs. (Value: "TECHNICAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesBilling Notifications
 *        related to billing and payments notifications, price updates, errors,
 *        or credits. (Value: "BILLING")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesLegal Notifications
 *        related to enforcement actions, regulatory compliance, or government
 *        notices. (Value: "LEGAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesProductUpdates
 *        Notifications related to new versions, product terms updates, or
 *        deprecations. (Value: "PRODUCT_UPDATES")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnicalIncidents
 *        Child category of TECHNICAL. If assigned, technical incident
 *        notifications will go to these contacts instead of TECHNICAL. (Value:
 *        "TECHNICAL_INCIDENTS")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notificationCategories;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the resource to compute contacts for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ComputeContactsResponse.
 *
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  @param parent Required. The name of the resource to compute contacts for.
 *    Format: organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsCompute
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Adds a new contact for a resource.
 *
 *  Method: essentialcontacts.organizations.contacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsCreate : GTLREssentialcontactsQuery

/**
 *  Required. The resource to save this contact for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Adds a new contact for a resource.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param parent Required. The resource to save this contact for. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsCreate
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a contact.
 *
 *  Method: essentialcontacts.organizations.contacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsDelete : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to delete. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Deletes a contact.
 *
 *  @param name Required. The name of the contact to delete. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a single contact.
 *
 *  Method: essentialcontacts.organizations.contacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsGet : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to retrieve. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Gets a single contact.
 *
 *  @param name Required. The name of the contact to retrieve. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the contacts that have been set on a resource.
 *
 *  Method: essentialcontacts.organizations.contacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsList : GTLREssentialcontactsQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name. Format: organizations/{organization_id},
 *  folders/{folder_id} or projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ListContactsResponse.
 *
 *  Lists the contacts that have been set on a resource.
 *
 *  @param parent Required. The parent resource name. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  Method: essentialcontacts.organizations.contacts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsPatch : GTLREssentialcontactsQuery

/**
 *  Output only. The identifier for the contact. Format:
 *  {resource_type}/{resource_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The update mask applied to the resource. For the `FieldMask`
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param name Output only. The identifier for the contact. Format:
 *    {resource_type}/{resource_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsPatch
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                           name:(NSString *)name;

@end

/**
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  Method: essentialcontacts.organizations.contacts.sendTestMessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_OrganizationsContactsSendTestMessage : GTLREssentialcontactsQuery

/**
 *  Required. The name of the resource to send the test message for. All
 *  contacts must either be set directly on this resource or inherited from
 *  another resource that is an ancestor of this one. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest
 *    to include in the query.
 *  @param resource Required. The name of the resource to send the test message
 *    for. All contacts must either be set directly on this resource or
 *    inherited from another resource that is an ancestor of this one. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_OrganizationsContactsSendTestMessage
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  Method: essentialcontacts.projects.contacts.compute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsCompute : GTLREssentialcontactsQuery

/**
 *  The categories of notifications to compute contacts for. If ALL is included
 *  in this list, contacts subscribed to any notification category will be
 *  returned.
 *
 *  Likely values:
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesNotificationCategoryUnspecified
 *        Notification category is unrecognized or unspecified. (Value:
 *        "NOTIFICATION_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesAll All notifications
 *        related to the resource, including notifications pertaining to
 *        categories added in the future. (Value: "ALL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSuspension
 *        Notifications related to imminent account suspension. (Value:
 *        "SUSPENSION")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesSecurity Notifications
 *        related to security/privacy incidents, notifications, and
 *        vulnerabilities. (Value: "SECURITY")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnical
 *        Notifications related to technical events and issues such as outages,
 *        errors, or bugs. (Value: "TECHNICAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesBilling Notifications
 *        related to billing and payments notifications, price updates, errors,
 *        or credits. (Value: "BILLING")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesLegal Notifications
 *        related to enforcement actions, regulatory compliance, or government
 *        notices. (Value: "LEGAL")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesProductUpdates
 *        Notifications related to new versions, product terms updates, or
 *        deprecations. (Value: "PRODUCT_UPDATES")
 *    @arg @c kGTLREssentialcontactsNotificationCategoriesTechnicalIncidents
 *        Child category of TECHNICAL. If assigned, technical incident
 *        notifications will go to these contacts instead of TECHNICAL. (Value:
 *        "TECHNICAL_INCIDENTS")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notificationCategories;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the resource to compute contacts for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ComputeContactsResponse.
 *
 *  Lists all contacts for the resource that are subscribed to the specified
 *  notification categories, including contacts inherited from any parent
 *  resources.
 *
 *  @param parent Required. The name of the resource to compute contacts for.
 *    Format: organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsCompute
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Adds a new contact for a resource.
 *
 *  Method: essentialcontacts.projects.contacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsCreate : GTLREssentialcontactsQuery

/**
 *  Required. The resource to save this contact for. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Adds a new contact for a resource.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param parent Required. The resource to save this contact for. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsCreate
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a contact.
 *
 *  Method: essentialcontacts.projects.contacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsDelete : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to delete. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Deletes a contact.
 *
 *  @param name Required. The name of the contact to delete. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a single contact.
 *
 *  Method: essentialcontacts.projects.contacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsGet : GTLREssentialcontactsQuery

/**
 *  Required. The name of the contact to retrieve. Format:
 *  organizations/{organization_id}/contacts/{contact_id},
 *  folders/{folder_id}/contacts/{contact_id} or
 *  projects/{project_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Gets a single contact.
 *
 *  @param name Required. The name of the contact to retrieve. Format:
 *    organizations/{organization_id}/contacts/{contact_id},
 *    folders/{folder_id}/contacts/{contact_id} or
 *    projects/{project_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the contacts that have been set on a resource.
 *
 *  Method: essentialcontacts.projects.contacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsList : GTLREssentialcontactsQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of `next_page_token` in the
 *  response indicates that more results might be available. If not specified,
 *  the default page_size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, retrieves the next batch of results from the preceding
 *  call to this method. `page_token` must be the value of `next_page_token`
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name. Format: organizations/{organization_id},
 *  folders/{folder_id} or projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLREssentialcontacts_GoogleCloudEssentialcontactsV1ListContactsResponse.
 *
 *  Lists the contacts that have been set on a resource.
 *
 *  @param parent Required. The parent resource name. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  Method: essentialcontacts.projects.contacts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsPatch : GTLREssentialcontactsQuery

/**
 *  Output only. The identifier for the contact. Format:
 *  {resource_type}/{resource_id}/contacts/{contact_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The update mask applied to the resource. For the `FieldMask`
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact.
 *
 *  Updates a contact. Note: A contact's email address cannot be changed.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact to include in
 *    the query.
 *  @param name Output only. The identifier for the contact. Format:
 *    {resource_type}/{resource_id}/contacts/{contact_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsPatch
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1Contact *)object
                           name:(NSString *)name;

@end

/**
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  Method: essentialcontacts.projects.contacts.sendTestMessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEssentialcontactsCloudPlatform
 */
@interface GTLREssentialcontactsQuery_ProjectsContactsSendTestMessage : GTLREssentialcontactsQuery

/**
 *  Required. The name of the resource to send the test message for. All
 *  contacts must either be set directly on this resource or inherited from
 *  another resource that is an ancestor of this one. Format:
 *  organizations/{organization_id}, folders/{folder_id} or
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLREssentialcontacts_GoogleProtobufEmpty.
 *
 *  Allows a contact admin to send a test message to contact to verify that it
 *  has been configured correctly.
 *
 *  @param object The @c
 *    GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest
 *    to include in the query.
 *  @param resource Required. The name of the resource to send the test message
 *    for. All contacts must either be set directly on this resource or
 *    inherited from another resource that is an ancestor of this one. Format:
 *    organizations/{organization_id}, folders/{folder_id} or
 *    projects/{project_id}
 *
 *  @return GTLREssentialcontactsQuery_ProjectsContactsSendTestMessage
 */
+ (instancetype)queryWithObject:(GTLREssentialcontacts_GoogleCloudEssentialcontactsV1SendTestMessageRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
