// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Chrome Verified Access API (verifiedaccess/v2)
// Description:
//   API for Verified Access chrome extension to provide credential verification
//   for chrome devices connecting to an enterprise network
// Documentation:
//   https://developers.google.com/chrome/verified-access

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRVerifiedaccessObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other verifiedaccess query classes.
 */
@interface GTLRVerifiedaccessQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Generates a new challenge.
 *
 *  Method: verifiedaccess.challenge.generate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVerifiedaccess
 */
@interface GTLRVerifiedaccessQuery_ChallengeGenerate : GTLRVerifiedaccessQuery

/**
 *  Fetches a @c GTLRVerifiedaccess_Challenge.
 *
 *  Generates a new challenge.
 *
 *  @param object The @c GTLRVerifiedaccess_Empty to include in the query.
 *
 *  @return GTLRVerifiedaccessQuery_ChallengeGenerate
 */
+ (instancetype)queryWithObject:(GTLRVerifiedaccess_Empty *)object;

@end

/**
 *  Verifies the challenge response.
 *
 *  Method: verifiedaccess.challenge.verify
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVerifiedaccess
 */
@interface GTLRVerifiedaccessQuery_ChallengeVerify : GTLRVerifiedaccessQuery

/**
 *  Fetches a @c GTLRVerifiedaccess_VerifyChallengeResponseResult.
 *
 *  Verifies the challenge response.
 *
 *  @param object The @c GTLRVerifiedaccess_VerifyChallengeResponseRequest to
 *    include in the query.
 *
 *  @return GTLRVerifiedaccessQuery_ChallengeVerify
 */
+ (instancetype)queryWithObject:(GTLRVerifiedaccess_VerifyChallengeResponseRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
