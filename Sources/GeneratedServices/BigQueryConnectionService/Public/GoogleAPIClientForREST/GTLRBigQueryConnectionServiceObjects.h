// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   BigQuery Connection API (bigqueryconnection/v1)
// Description:
//   Allows users to manage BigQuery connections to external data sources.
// Documentation:
//   https://cloud.google.com/bigquery/docs/connections-api-intro

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRBigQueryConnectionService_AuditConfig;
@class GTLRBigQueryConnectionService_AuditLogConfig;
@class GTLRBigQueryConnectionService_AwsAccessRole;
@class GTLRBigQueryConnectionService_AwsProperties;
@class GTLRBigQueryConnectionService_AzureProperties;
@class GTLRBigQueryConnectionService_Binding;
@class GTLRBigQueryConnectionService_CloudResourceProperties;
@class GTLRBigQueryConnectionService_CloudSpannerProperties;
@class GTLRBigQueryConnectionService_CloudSqlCredential;
@class GTLRBigQueryConnectionService_CloudSqlProperties;
@class GTLRBigQueryConnectionService_Connection;
@class GTLRBigQueryConnectionService_ConnectorConfiguration;
@class GTLRBigQueryConnectionService_ConnectorConfigurationAsset;
@class GTLRBigQueryConnectionService_ConnectorConfigurationAuthentication;
@class GTLRBigQueryConnectionService_ConnectorConfigurationEndpoint;
@class GTLRBigQueryConnectionService_ConnectorConfigurationNetwork;
@class GTLRBigQueryConnectionService_ConnectorConfigurationPrivateServiceConnect;
@class GTLRBigQueryConnectionService_ConnectorConfigurationSecret;
@class GTLRBigQueryConnectionService_ConnectorConfigurationUsernamePassword;
@class GTLRBigQueryConnectionService_Expr;
@class GTLRBigQueryConnectionService_GetPolicyOptions;
@class GTLRBigQueryConnectionService_MetastoreServiceConfig;
@class GTLRBigQueryConnectionService_Policy;
@class GTLRBigQueryConnectionService_SalesforceDataCloudProperties;
@class GTLRBigQueryConnectionService_SparkHistoryServerConfig;
@class GTLRBigQueryConnectionService_SparkProperties;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRBigQueryConnectionService_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRBigQueryConnectionService_CloudSqlProperties.type

/**
 *  Unspecified database type.
 *
 *  Value: "DATABASE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_CloudSqlProperties_Type_DatabaseTypeUnspecified;
/**
 *  Cloud SQL for MySQL.
 *
 *  Value: "MYSQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_CloudSqlProperties_Type_Mysql;
/**
 *  Cloud SQL for PostgreSQL.
 *
 *  Value: "POSTGRES"
 */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_CloudSqlProperties_Type_Postgres;

// ----------------------------------------------------------------------------
// GTLRBigQueryConnectionService_ConnectorConfigurationSecret.secretType

/** Value: "PLAINTEXT" */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_ConnectorConfigurationSecret_SecretType_Plaintext;
/** Value: "SECRET_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRBigQueryConnectionService_ConnectorConfigurationSecret_SecretType_SecretTypeUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRBigQueryConnectionService_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRBigQueryConnectionService_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRBigQueryConnectionService_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRBigQueryConnectionService_AuditLogConfig_LogType_AdminRead
 *        Admin reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRBigQueryConnectionService_AuditLogConfig_LogType_DataRead
 *        Data reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRBigQueryConnectionService_AuditLogConfig_LogType_DataWrite
 *        Data writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRBigQueryConnectionService_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Authentication method for Amazon Web Services (AWS) that uses Google owned
 *  Google service account to assume into customer's AWS IAM Role.
 */
@interface GTLRBigQueryConnectionService_AwsAccessRole : GTLRObject

/**
 *  The userâ€™s AWS IAM Role that trusts the Google-owned AWS IAM user
 *  Connection.
 */
@property(nonatomic, copy, nullable) NSString *iamRoleId;

/**
 *  A unique Google-owned and Google-generated identity for the Connection. This
 *  identity will be used to access the user's AWS IAM Role.
 */
@property(nonatomic, copy, nullable) NSString *identity;

@end


/**
 *  Connection properties specific to Amazon Web Services (AWS).
 */
@interface GTLRBigQueryConnectionService_AwsProperties : GTLRObject

/**
 *  Authentication using Google owned service account to assume into customer's
 *  AWS IAM Role.
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_AwsAccessRole *accessRole;

@end


/**
 *  Container for connection properties specific to Azure.
 */
@interface GTLRBigQueryConnectionService_AzureProperties : GTLRObject

/** Output only. The name of the Azure Active Directory Application. */
@property(nonatomic, copy, nullable) NSString *application;

/** Output only. The client id of the Azure Active Directory Application. */
@property(nonatomic, copy, nullable) NSString *clientId;

/** The id of customer's directory that host the data. */
@property(nonatomic, copy, nullable) NSString *customerTenantId;

/**
 *  The client ID of the user's Azure Active Directory Application used for a
 *  federated connection.
 */
@property(nonatomic, copy, nullable) NSString *federatedApplicationClientId;

/**
 *  Output only. A unique Google-owned and Google-generated identity for the
 *  Connection. This identity will be used to access the user's Azure Active
 *  Directory Application.
 */
@property(nonatomic, copy, nullable) NSString *identity;

/** Output only. The object id of the Azure Active Directory Application. */
@property(nonatomic, copy, nullable) NSString *objectId;

/**
 *  The URL user will be redirected to after granting consent during connection
 *  setup.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRBigQueryConnectionService_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Container for connection properties for delegation of access to GCP
 *  resources.
 */
@interface GTLRBigQueryConnectionService_CloudResourceProperties : GTLRObject

/**
 *  Output only. The account ID of the service created for the purpose of this
 *  connection. The service account does not have any permissions associated
 *  with it when it is created. After creation, customers delegate permissions
 *  to the service account. When the connection is used in the context of an
 *  operation in BigQuery, the service account will be used to connect to the
 *  desired resources in GCP. The account ID is in the form of:
 *  \@gcp-sa-bigquery-cloudresource.iam.gserviceaccount.com
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountId;

@end


/**
 *  Connection properties specific to Cloud Spanner.
 */
@interface GTLRBigQueryConnectionService_CloudSpannerProperties : GTLRObject

/** Cloud Spanner database in the form `project/instance/database' */
@property(nonatomic, copy, nullable) NSString *database;

/**
 *  Optional. Cloud Spanner database role for fine-grained access control. The
 *  Cloud Spanner admin should have provisioned the database role with
 *  appropriate permissions, such as `SELECT` and `INSERT`. Other users should
 *  only use roles provided by their Cloud Spanner admins. For more details, see
 *  [About fine-grained access control]
 *  (https://cloud.google.com/spanner/docs/fgac-about). REQUIRES: The database
 *  role name must start with a letter, and can only contain letters, numbers,
 *  and underscores.
 */
@property(nonatomic, copy, nullable) NSString *databaseRole;

/**
 *  Allows setting max parallelism per query when executing on Spanner
 *  independent compute resources. If unspecified, default values of parallelism
 *  are chosen that are dependent on the Cloud Spanner instance configuration.
 *  REQUIRES: `use_parallelism` must be set. REQUIRES: `use_data_boost` must be
 *  set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxParallelism;

/**
 *  If set, the request will be executed via Spanner independent compute
 *  resources. REQUIRES: `use_parallelism` must be set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useDataBoost;

/**
 *  If parallelism should be used when reading from Cloud Spanner
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useParallelism;

/**
 *  Deprecated: prefer use_data_boost instead. If the serverless analytics
 *  service should be used to read data from Cloud Spanner. Note:
 *  `use_parallelism` must be set when using serverless analytics.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useServerlessAnalytics GTLR_DEPRECATED;

@end


/**
 *  Credential info for the Cloud SQL.
 */
@interface GTLRBigQueryConnectionService_CloudSqlCredential : GTLRObject

/** The password for the credential. */
@property(nonatomic, copy, nullable) NSString *password;

/** The username for the credential. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  Connection properties specific to the Cloud SQL.
 */
@interface GTLRBigQueryConnectionService_CloudSqlProperties : GTLRObject

/** Input only. Cloud SQL credential. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_CloudSqlCredential *credential;

/** Database name. */
@property(nonatomic, copy, nullable) NSString *database;

/** Cloud SQL instance ID in the form `project:location:instance`. */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Output only. The account ID of the service used for the purpose of this
 *  connection. When the connection is used in the context of an operation in
 *  BigQuery, this service account will serve as the identity being used for
 *  connecting to the CloudSQL instance specified in this connection.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountId;

/**
 *  Type of the Cloud SQL database.
 *
 *  Likely values:
 *    @arg @c kGTLRBigQueryConnectionService_CloudSqlProperties_Type_DatabaseTypeUnspecified
 *        Unspecified database type. (Value: "DATABASE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRBigQueryConnectionService_CloudSqlProperties_Type_Mysql Cloud
 *        SQL for MySQL. (Value: "MYSQL")
 *    @arg @c kGTLRBigQueryConnectionService_CloudSqlProperties_Type_Postgres
 *        Cloud SQL for PostgreSQL. (Value: "POSTGRES")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Configuration parameters to establish connection with an external data
 *  source, except the credential attributes.
 */
@interface GTLRBigQueryConnectionService_Connection : GTLRObject

/** Amazon Web Services (AWS) properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_AwsProperties *aws;

/** Azure properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_AzureProperties *azure;

/** Cloud Resource properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_CloudResourceProperties *cloudResource;

/** Cloud Spanner properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_CloudSpannerProperties *cloudSpanner;

/** Cloud SQL properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_CloudSqlProperties *cloudSql;

/** Optional. Connector configuration. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfiguration *configuration;

/**
 *  Output only. The creation timestamp of the connection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creationTime;

/**
 *  User provided description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User provided display name for the connection. */
@property(nonatomic, copy, nullable) NSString *friendlyName;

/**
 *  Output only. True, if credential is configured for this connection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasCredential;

/**
 *  Optional. The Cloud KMS key that is used for encryption. Example:
 *  `projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]`
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  Output only. The last update timestamp of the connection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lastModifiedTime;

/**
 *  Output only. The resource name of the connection in the form of:
 *  `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Salesforce DataCloud properties. This field is intended for use
 *  only by Salesforce partner projects. This field contains properties for your
 *  Salesforce DataCloud connection.
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_SalesforceDataCloudProperties *salesforceDataCloud;

/** Spark properties. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_SparkProperties *spark;

@end


/**
 *  Represents concrete parameter values for Connector Configuration.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfiguration : GTLRObject

/** Optional. Data asset. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationAsset *asset;

/** Client authentication. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationAuthentication *authentication;

/**
 *  Required. Immutable. The ID of the Connector these parameters are configured
 *  for.
 */
@property(nonatomic, copy, nullable) NSString *connectorId;

/**
 *  Specifies how to reach the remote system this connection is pointing to.
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationEndpoint *endpoint;

/** Networking configuration. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationNetwork *network;

@end


/**
 *  Data Asset - a resource within instance of the system, reachable under
 *  specified endpoint. For example a database name in a SQL DB.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationAsset : GTLRObject

/** Optional. Name of the database. */
@property(nonatomic, copy, nullable) NSString *database;

/**
 *  Full Google Cloud resource name -
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name.
 *  Example: `//library.googleapis.com/shelves/shelf1/books/book2`
 */
@property(nonatomic, copy, nullable) NSString *googleCloudResource;

@end


/**
 *  Client authentication.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationAuthentication : GTLRObject

/** Username/password authentication. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationUsernamePassword *usernamePassword;

@end


/**
 *  Remote endpoint specification.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationEndpoint : GTLRObject

/**
 *  Host and port in a format of `hostname:port` as defined in
 *  https://www.ietf.org/rfc/rfc3986.html#section-3.2.2 and
 *  https://www.ietf.org/rfc/rfc3986.html#section-3.2.3.
 */
@property(nonatomic, copy, nullable) NSString *hostPort;

@end


/**
 *  Network related configuration.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationNetwork : GTLRObject

/** Private Service Connect networking configuration. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationPrivateServiceConnect *privateServiceConnect;

@end


/**
 *  Private Service Connect configuration.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationPrivateServiceConnect : GTLRObject

/**
 *  Required. Network Attachment name in the format of
 *  `projects/{project}/regions/{region}/networkAttachments/{networkattachment}`.
 */
@property(nonatomic, copy, nullable) NSString *networkAttachment;

@end


/**
 *  Secret value parameter.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationSecret : GTLRObject

/** Input only. Secret as plaintext. */
@property(nonatomic, copy, nullable) NSString *plaintext;

/**
 *  Output only. Indicates type of secret. Can be used to check type of stored
 *  secret value even if it's `INPUT_ONLY`.
 *
 *  Likely values:
 *    @arg @c kGTLRBigQueryConnectionService_ConnectorConfigurationSecret_SecretType_Plaintext
 *        Value "PLAINTEXT"
 *    @arg @c kGTLRBigQueryConnectionService_ConnectorConfigurationSecret_SecretType_SecretTypeUnspecified
 *        Value "SECRET_TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *secretType;

@end


/**
 *  Username and Password authentication.
 */
@interface GTLRBigQueryConnectionService_ConnectorConfigurationUsernamePassword : GTLRObject

/** Required. Password. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_ConnectorConfigurationSecret *password;

/** Required. Username. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRBigQueryConnectionService_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRBigQueryConnectionService_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRBigQueryConnectionService_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRBigQueryConnectionService_GetPolicyOptions : GTLRObject

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  The response for ConnectionService.ListConnections.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "connections" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRBigQueryConnectionService_ListConnectionsResponse : GTLRCollectionObject

/**
 *  List of connections.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBigQueryConnectionService_Connection *> *connections;

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Configuration of the Dataproc Metastore Service.
 */
@interface GTLRBigQueryConnectionService_MetastoreServiceConfig : GTLRObject

/**
 *  Optional. Resource name of an existing Dataproc Metastore service. Example:
 *  * `projects/[project_id]/locations/[region]/services/[service_id]`
 */
@property(nonatomic, copy, nullable) NSString *metastoreService;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRBigQueryConnectionService_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRBigQueryConnectionService_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRBigQueryConnectionService_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Connection properties specific to Salesforce DataCloud. This is intended for
 *  use only by Salesforce partner projects.
 */
@interface GTLRBigQueryConnectionService_SalesforceDataCloudProperties : GTLRObject

/**
 *  Output only. A unique Google-owned and Google-generated service account
 *  identity for the connection.
 */
@property(nonatomic, copy, nullable) NSString *identity;

/** The URL to the user's Salesforce DataCloud instance. */
@property(nonatomic, copy, nullable) NSString *instanceUri;

/** The ID of the user's Salesforce tenant. */
@property(nonatomic, copy, nullable) NSString *tenantId;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRBigQueryConnectionService_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Configuration of the Spark History Server.
 */
@interface GTLRBigQueryConnectionService_SparkHistoryServerConfig : GTLRObject

/**
 *  Optional. Resource name of an existing Dataproc Cluster to act as a Spark
 *  History Server for the connection. Example: *
 *  `projects/[project_id]/regions/[region]/clusters/[cluster_name]`
 */
@property(nonatomic, copy, nullable) NSString *dataprocCluster;

@end


/**
 *  Container for connection properties to execute stored procedures for Apache
 *  Spark.
 */
@interface GTLRBigQueryConnectionService_SparkProperties : GTLRObject

/** Optional. Dataproc Metastore Service configuration for the connection. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_MetastoreServiceConfig *metastoreServiceConfig;

/**
 *  Output only. The account ID of the service created for the purpose of this
 *  connection. The service account does not have any permissions associated
 *  with it when it is created. After creation, customers delegate permissions
 *  to the service account. When the connection is used in the context of a
 *  stored procedure for Apache Spark in BigQuery, the service account is used
 *  to connect to the desired resources in Google Cloud. The account ID is in
 *  the form of: bqcx--\@gcp-sa-bigquery-consp.iam.gserviceaccount.com
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountId;

/** Optional. Spark History Server configuration for the connection. */
@property(nonatomic, strong, nullable) GTLRBigQueryConnectionService_SparkHistoryServerConfig *sparkHistoryServerConfig;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRBigQueryConnectionService_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRBigQueryConnectionService_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
