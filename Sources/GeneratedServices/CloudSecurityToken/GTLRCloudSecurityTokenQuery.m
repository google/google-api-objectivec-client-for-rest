// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Token Service API (sts/v1)
// Description:
//   The Security Token Service exchanges Google or third-party credentials for
//   a short-lived access token to Google Cloud resources.
// Documentation:
//   http://cloud.google.com/iam/docs/workload-identity-federation

#import <GoogleAPIClientForREST/GTLRCloudSecurityTokenQuery.h>

@implementation GTLRCloudSecurityTokenQuery

@dynamic fields;

@end

@implementation GTLRCloudSecurityTokenQuery_V1Introspect

+ (instancetype)queryWithObject:(GTLRCloudSecurityToken_GoogleIdentityStsV1IntrospectTokenRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/introspect";
  GTLRCloudSecurityTokenQuery_V1Introspect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSecurityToken_GoogleIdentityStsV1IntrospectTokenResponse class];
  query.loggingName = @"sts.introspect";
  return query;
}

@end

@implementation GTLRCloudSecurityTokenQuery_V1Token

+ (instancetype)queryWithObject:(GTLRCloudSecurityToken_GoogleIdentityStsV1ExchangeTokenRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/token";
  GTLRCloudSecurityTokenQuery_V1Token *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRCloudSecurityToken_GoogleIdentityStsV1ExchangeTokenResponse class];
  query.loggingName = @"sts.token";
  return query;
}

@end
