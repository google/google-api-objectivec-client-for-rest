// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Management API (servicemanagement/v1)
// Description:
//   Google Service Management allows service producers to publish their
//   services on Google Cloud Platform so that they can be discovered and used
//   by service consumers.
// Documentation:
//   https://cloud.google.com/service-management/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRServiceManagementObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Server response includes all fields except SourceInfo.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceManagementViewBasic;
/**
 *  Server response includes all fields including SourceInfo. SourceFiles are of
 *  type 'google.api.servicemanagement.v1.ConfigFile' and are only available for
 *  configs created using the SubmitConfigSource method.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceManagementViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Service Management query classes.
 */
@interface GTLRServiceManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: servicemanagement.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_OperationsGet : GTLRServiceManagementQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRServiceManagementQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists service operations that match the specified filter in the request.
 *
 *  Method: servicemanagement.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_OperationsList : GTLRServiceManagementQuery

/**
 *  A string for filtering Operations. The following filter fields are
 *  supported: * serviceName: Required. Only `=` operator is allowed. *
 *  startTime: The time this job was started, in ISO 8601 format. Allowed
 *  operators are `>=`, `>`, `<=`, and `<`. * status: Can be `done`,
 *  `in_progress`, or `failed`. Allowed operators are `=`, and `!=`. Filter
 *  expression supports conjunction (AND) and disjunction (OR) logical
 *  operators. However, the serviceName restriction must be at the top-level and
 *  can only be combined with other restrictions via the AND logical operator.
 *  Examples: * `serviceName={some-service}.googleapis.com` *
 *  `serviceName={some-service}.googleapis.com AND startTime>="2017-02-01"` *
 *  `serviceName={some-service}.googleapis.com AND status=done` *
 *  `serviceName={some-service}.googleapis.com AND (status=done OR
 *  startTime>="2017-02-01")`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Not used. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of operations to return. If unspecified, defaults to 50.
 *  The maximum value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRServiceManagement_ListOperationsResponse.
 *
 *  Lists service operations that match the specified filter in the request.
 *
 *  @return GTLRServiceManagementQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new service configuration (version) for a managed service. This
 *  method only stores the service configuration. To roll out the service
 *  configuration to backend systems please call CreateServiceRollout. Only the
 *  100 most recent service configurations and ones referenced by existing
 *  rollouts are kept for each service. The rest will be deleted eventually.
 *
 *  Method: servicemanagement.services.configs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConfigsCreate : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Creates a new service configuration (version) for a managed service. This
 *  method only stores the service configuration. To roll out the service
 *  configuration to backend systems please call CreateServiceRollout. Only the
 *  100 most recent service configurations and ones referenced by existing
 *  rollouts are kept for each service. The rest will be deleted eventually.
 *
 *  @param object The @c GTLRServiceManagement_Service to include in the query.
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_Service *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration (version) for a managed service.
 *
 *  Method: servicemanagement.services.configs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConfigsGet : GTLRServiceManagementQuery

/**
 *  Required. The id of the service configuration resource. This field must be
 *  specified for the server to return all fields, including `SourceInfo`.
 */
@property(nonatomic, copy, nullable) NSString *configId;

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Specifies which parts of the Service Config should be returned in the
 *  response.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceManagementViewBasic Server response includes all
 *        fields except SourceInfo. (Value: "BASIC")
 *    @arg @c kGTLRServiceManagementViewFull Server response includes all fields
 *        including SourceInfo. SourceFiles are of type
 *        'google.api.servicemanagement.v1.ConfigFile' and are only available
 *        for configs created using the SubmitConfigSource method. (Value:
 *        "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Gets a service configuration (version) for a managed service.
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *  @param configId Required. The id of the service configuration resource. This
 *    field must be specified for the server to return all fields, including
 *    `SourceInfo`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName
                            configId:(NSString *)configId;

@end

/**
 *  Lists the history of the service configuration for a managed service, from
 *  the newest to the oldest.
 *
 *  Method: servicemanagement.services.configs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConfigsList : GTLRServiceManagementQuery

/**
 *  The max number of items to include in the response list. Page size is 50 if
 *  not specified. Maximum value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ListServiceConfigsResponse.
 *
 *  Lists the history of the service configuration for a managed service, from
 *  the newest to the oldest.
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Creates a new service configuration (version) for a managed service based on
 *  user-supplied configuration source files (for example: OpenAPI
 *  Specification). This method stores the source configurations as well as the
 *  generated service configuration. To rollout the service configuration to
 *  other services, please call CreateServiceRollout. Only the 100 most recent
 *  configuration sources and ones referenced by existing service configurtions
 *  are kept for each service. The rest will be deleted eventually. Operation
 *
 *  Method: servicemanagement.services.configs.submit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConfigsSubmit : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new service configuration (version) for a managed service based on
 *  user-supplied configuration source files (for example: OpenAPI
 *  Specification). This method stores the source configurations as well as the
 *  generated service configuration. To rollout the service configuration to
 *  other services, please call CreateServiceRollout. Only the 100 most recent
 *  configuration sources and ones referenced by existing service configurtions
 *  are kept for each service. The rest will be deleted eventually. Operation
 *
 *  @param object The @c GTLRServiceManagement_SubmitConfigSourceRequest to
 *    include in the query.
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesConfigsSubmit
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SubmitConfigSourceRequest *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: servicemanagement.services.consumers.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConsumersGetIamPolicy : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRServiceManagement_GetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: servicemanagement.services.consumers.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesConsumersSetIamPolicy : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRServiceManagement_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: servicemanagement.services.consumers.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesConsumersTestIamPermissions : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRServiceManagement_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesConsumersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new managed service. A managed service is immutable, and is
 *  subject to mandatory 30-day data retention. You cannot move a service or
 *  recreate it within 30 days after deletion. One producer project can own no
 *  more than 500 services. For security and reliability purposes, a production
 *  service should be hosted in a dedicated producer project. Operation
 *
 *  Method: servicemanagement.services.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesCreate : GTLRServiceManagementQuery

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new managed service. A managed service is immutable, and is
 *  subject to mandatory 30-day data retention. You cannot move a service or
 *  recreate it within 30 days after deletion. One producer project can own no
 *  more than 500 services. For security and reliability purposes, a production
 *  service should be hosted in a dedicated producer project. Operation
 *
 *  @param object The @c GTLRServiceManagement_ManagedService to include in the
 *    query.
 *
 *  @return GTLRServiceManagementQuery_ServicesCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_ManagedService *)object;

@end

/**
 *  Deletes a managed service. This method will change the service to the
 *  `Soft-Delete` state for 30 days. Within this period, service producers may
 *  call UndeleteService to restore the service. After 30 days, the service will
 *  be permanently deleted. Operation
 *
 *  Method: servicemanagement.services.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesDelete : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Deletes a managed service. This method will change the service to the
 *  `Soft-Delete` state for 30 days. Within this period, service producers may
 *  call UndeleteService to restore the service. After 30 days, the service will
 *  be permanently deleted. Operation
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesDelete
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Generates and returns a report (errors, warnings and changes from existing
 *  configurations) associated with GenerateConfigReportRequest.new_value If
 *  GenerateConfigReportRequest.old_value is specified,
 *  GenerateConfigReportRequest will contain a single ChangeReport based on the
 *  comparison between GenerateConfigReportRequest.new_value and
 *  GenerateConfigReportRequest.old_value. If
 *  GenerateConfigReportRequest.old_value is not specified, this method will
 *  compare GenerateConfigReportRequest.new_value with the last pushed service
 *  configuration.
 *
 *  Method: servicemanagement.services.generateConfigReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesGenerateConfigReport : GTLRServiceManagementQuery

/**
 *  Fetches a @c GTLRServiceManagement_GenerateConfigReportResponse.
 *
 *  Generates and returns a report (errors, warnings and changes from existing
 *  configurations) associated with GenerateConfigReportRequest.new_value If
 *  GenerateConfigReportRequest.old_value is specified,
 *  GenerateConfigReportRequest will contain a single ChangeReport based on the
 *  comparison between GenerateConfigReportRequest.new_value and
 *  GenerateConfigReportRequest.old_value. If
 *  GenerateConfigReportRequest.old_value is not specified, this method will
 *  compare GenerateConfigReportRequest.new_value with the last pushed service
 *  configuration.
 *
 *  @param object The @c GTLRServiceManagement_GenerateConfigReportRequest to
 *    include in the query.
 *
 *  @return GTLRServiceManagementQuery_ServicesGenerateConfigReport
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GenerateConfigReportRequest *)object;

@end

/**
 *  Gets a managed service. Authentication is required unless the service is
 *  public.
 *
 *  Method: servicemanagement.services.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGet : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the `ServiceManager` overview for
 *  naming requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ManagedService.
 *
 *  Gets a managed service. Authentication is required unless the service is
 *  public.
 *
 *  @param serviceName Required. The name of the service. See the
 *    `ServiceManager` overview for naming requirements. For example:
 *    `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration (version) for a managed service.
 *
 *  Method: servicemanagement.services.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGetConfig : GTLRServiceManagementQuery

/**
 *  Required. The id of the service configuration resource. This field must be
 *  specified for the server to return all fields, including `SourceInfo`.
 */
@property(nonatomic, copy, nullable) NSString *configId;

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Specifies which parts of the Service Config should be returned in the
 *  response.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceManagementViewBasic Server response includes all
 *        fields except SourceInfo. (Value: "BASIC")
 *    @arg @c kGTLRServiceManagementViewFull Server response includes all fields
 *        including SourceInfo. SourceFiles are of type
 *        'google.api.servicemanagement.v1.ConfigFile' and are only available
 *        for configs created using the SubmitConfigSource method. (Value:
 *        "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRServiceManagement_Service.
 *
 *  Gets a service configuration (version) for a managed service.
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesGetConfig
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: servicemanagement.services.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesGetIamPolicy : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRServiceManagement_GetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists managed services. Returns all public services. For authenticated
 *  users, also returns all services the calling user has
 *  "servicemanagement.services.get" permission for.
 *
 *  Method: servicemanagement.services.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesList : GTLRServiceManagementQuery

/**
 *  Include services consumed by the specified consumer. The Google Service
 *  Management implementation accepts the following forms: - project:
 */
@property(nonatomic, copy, nullable) NSString *consumerId;

/**
 *  The max number of items to include in the response list. Page size is 50 if
 *  not specified. Maximum value is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token identifying which result to start with; returned by a previous list
 *  call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Include services produced by the specified project. */
@property(nonatomic, copy, nullable) NSString *producerProjectId;

/**
 *  Fetches a @c GTLRServiceManagement_ListServicesResponse.
 *
 *  Lists managed services. Returns all public services. For authenticated
 *  users, also returns all services the calling user has
 *  "servicemanagement.services.get" permission for.
 *
 *  @return GTLRServiceManagementQuery_ServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new service configuration rollout. Based on rollout, the Google
 *  Service Management will roll out the service configurations to different
 *  backend services. For example, the logging configuration will be pushed to
 *  Google Cloud Logging. Please note that any previous pending and running
 *  Rollouts and associated Operations will be automatically cancelled so that
 *  the latest Rollout will not be blocked by previous Rollouts. Only the 100
 *  most recent (in any state) and the last 10 successful (if not already part
 *  of the set of 100 most recent) rollouts are kept for each service. The rest
 *  will be deleted eventually. Operation
 *
 *  Method: servicemanagement.services.rollouts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsCreate : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Creates a new service configuration rollout. Based on rollout, the Google
 *  Service Management will roll out the service configurations to different
 *  backend services. For example, the logging configuration will be pushed to
 *  Google Cloud Logging. Please note that any previous pending and running
 *  Rollouts and associated Operations will be automatically cancelled so that
 *  the latest Rollout will not be blocked by previous Rollouts. Only the 100
 *  most recent (in any state) and the last 10 successful (if not already part
 *  of the set of 100 most recent) rollouts are kept for each service. The rest
 *  will be deleted eventually. Operation
 *
 *  @param object The @c GTLRServiceManagement_Rollout to include in the query.
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_Rollout *)object
                    serviceName:(NSString *)serviceName;

@end

/**
 *  Gets a service configuration rollout.
 *
 *  Method: servicemanagement.services.rollouts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsGet : GTLRServiceManagementQuery

/** Required. The id of the rollout resource. */
@property(nonatomic, copy, nullable) NSString *rolloutId;

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Rollout.
 *
 *  Gets a service configuration rollout.
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *  @param rolloutId Required. The id of the rollout resource.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsGet
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName
                           rolloutId:(NSString *)rolloutId;

@end

/**
 *  Lists the history of the service configuration rollouts for a managed
 *  service, from the newest to the oldest.
 *
 *  Method: servicemanagement.services.rollouts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesRolloutsList : GTLRServiceManagementQuery

/**
 *  Required. Use `filter` to return subset of rollouts. The following filters
 *  are supported: -- By status. For example, `filter='status=SUCCESS'` -- By
 *  strategy. For example, `filter='strategy=TrafficPercentStrategy'`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The max number of items to include in the response list. Page size is 50 if
 *  not specified. Maximum value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The token of the page to retrieve. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_ListServiceRolloutsResponse.
 *
 *  Lists the history of the service configuration rollouts for a managed
 *  service, from the newest to the oldest.
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesRolloutsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: servicemanagement.services.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesSetIamPolicy : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRServiceManagement_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: servicemanagement.services.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementCloudPlatformReadOnly
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 *    @c kGTLRAuthScopeServiceManagementServiceManagementReadonly
 */
@interface GTLRServiceManagementQuery_ServicesTestIamPermissions : GTLRServiceManagementQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRServiceManagement_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRServiceManagement_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRServiceManagementQuery_ServicesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRServiceManagement_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Revives a previously deleted managed service. The method restores the
 *  service using the configuration at the time the service was deleted. The
 *  target service must exist and must have been deleted within the last 30
 *  days. Operation
 *
 *  Method: servicemanagement.services.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceManagementCloudPlatform
 *    @c kGTLRAuthScopeServiceManagementServiceManagement
 */
@interface GTLRServiceManagementQuery_ServicesUndelete : GTLRServiceManagementQuery

/**
 *  Required. The name of the service. See the
 *  [overview](https://cloud.google.com/service-management/overview) for naming
 *  requirements. For example: `example.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Fetches a @c GTLRServiceManagement_Operation.
 *
 *  Revives a previously deleted managed service. The method restores the
 *  service using the configuration at the time the service was deleted. The
 *  target service must exist and must have been deleted within the last 30
 *  days. Operation
 *
 *  @param serviceName Required. The name of the service. See the
 *    [overview](https://cloud.google.com/service-management/overview) for
 *    naming requirements. For example: `example.googleapis.com`.
 *
 *  @return GTLRServiceManagementQuery_ServicesUndelete
 */
+ (instancetype)queryWithServiceName:(NSString *)serviceName;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
