// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   OS Config API (osconfig/v2)
// Description:
//   OS management tools that can be used for patch management, patch
//   compliance, and configuration management on VM instances.
// Documentation:
//   https://cloud.google.com/compute/docs/osconfig/rest

#import <GoogleAPIClientForREST/GTLROSConfigQuery.h>

@implementation GTLROSConfigQuery

@dynamic fields;

@end

@implementation GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsCreate

@dynamic parent, policyOrchestratorId, requestId;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.folders.locations.global.policyOrchestrators.create";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsDelete

@dynamic ETag, name, requestId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.folders.locations.global.policyOrchestrators.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator class];
  query.loggingName = @"osconfig.folders.locations.global.policyOrchestrators.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2ListPolicyOrchestratorsResponse class];
  query.loggingName = @"osconfig.folders.locations.global.policyOrchestrators.list";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_FoldersLocationsGlobalPolicyOrchestratorsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.folders.locations.global.policyOrchestrators.patch";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLROSConfig_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLROSConfigQuery_FoldersLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.folders.locations.operations.cancel";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_FoldersLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.folders.locations.operations.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_FoldersLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.folders.locations.operations.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_FoldersLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLROSConfigQuery_FoldersLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_ListOperationsResponse class];
  query.loggingName = @"osconfig.folders.locations.operations.list";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsCreate

@dynamic parent, policyOrchestratorId, requestId;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.organizations.locations.global.policyOrchestrators.create";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsDelete

@dynamic ETag, name, requestId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.organizations.locations.global.policyOrchestrators.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator class];
  query.loggingName = @"osconfig.organizations.locations.global.policyOrchestrators.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2ListPolicyOrchestratorsResponse class];
  query.loggingName = @"osconfig.organizations.locations.global.policyOrchestrators.list";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_OrganizationsLocationsGlobalPolicyOrchestratorsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.organizations.locations.global.policyOrchestrators.patch";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLROSConfig_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLROSConfigQuery_OrganizationsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.organizations.locations.operations.cancel";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_OrganizationsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.organizations.locations.operations.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_OrganizationsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.organizations.locations.operations.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_OrganizationsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLROSConfigQuery_OrganizationsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_ListOperationsResponse class];
  query.loggingName = @"osconfig.organizations.locations.operations.list";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsCreate

@dynamic parent, policyOrchestratorId, requestId;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.projects.locations.global.policyOrchestrators.create";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsDelete

@dynamic ETag, name, requestId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.projects.locations.global.policyOrchestrators.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator class];
  query.loggingName = @"osconfig.projects.locations.global.policyOrchestrators.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/policyOrchestrators";
  GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLROSConfig_GoogleCloudOsconfigV2ListPolicyOrchestratorsResponse class];
  query.loggingName = @"osconfig.projects.locations.global.policyOrchestrators.list";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_ProjectsLocationsGlobalPolicyOrchestratorsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.projects.locations.global.policyOrchestrators.patch";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLROSConfig_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLROSConfigQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Empty class];
  query.loggingName = @"osconfig.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLROSConfigQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_Operation class];
  query.loggingName = @"osconfig.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLROSConfigQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLROSConfigQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLROSConfig_ListOperationsResponse class];
  query.loggingName = @"osconfig.projects.locations.operations.list";
  return query;
}

@end
