// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   OS Config API (osconfig/v2)
// Description:
//   OS management tools that can be used for patch management, patch
//   compliance, and configuration management on VM instances.
// Documentation:
//   https://cloud.google.com/compute/docs/osconfig/rest

#import <GoogleAPIClientForREST/GTLROSConfigObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.apiMethod
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_ApiMethod_ApiMethodUnspecified = @"API_METHOD_UNSPECIFIED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_ApiMethod_Create = @"CREATE";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_ApiMethod_Delete = @"DELETE";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_ApiMethod_Update = @"UPDATE";

// GTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.rolloutState
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_RolloutState_Cancelled = @"CANCELLED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_RolloutState_Cancelling = @"CANCELLING";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_RolloutState_InProgress = @"IN_PROGRESS";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_RolloutState_RolloutStateUnspecified = @"ROLLOUT_STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata_RolloutState_Succeeded = @"SUCCEEDED";

// GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState.state
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_Cancelled = @"CANCELLED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_Completed = @"COMPLETED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_Failed = @"FAILED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_Processing = @"PROCESSING";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState_State_Unknown = @"UNKNOWN";

// GTLROSConfig_OSPolicy.mode
NSString * const kGTLROSConfig_OSPolicy_Mode_Enforcement     = @"ENFORCEMENT";
NSString * const kGTLROSConfig_OSPolicy_Mode_ModeUnspecified = @"MODE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicy_Mode_Validation      = @"VALIDATION";

// GTLROSConfig_OSPolicyAssignment.rolloutState
NSString * const kGTLROSConfig_OSPolicyAssignment_RolloutState_Cancelled = @"CANCELLED";
NSString * const kGTLROSConfig_OSPolicyAssignment_RolloutState_Cancelling = @"CANCELLING";
NSString * const kGTLROSConfig_OSPolicyAssignment_RolloutState_InProgress = @"IN_PROGRESS";
NSString * const kGTLROSConfig_OSPolicyAssignment_RolloutState_RolloutStateUnspecified = @"ROLLOUT_STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyAssignment_RolloutState_Succeeded = @"SUCCEEDED";

// GTLROSConfig_OSPolicyAssignmentOperationMetadata.apiMethod
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_ApiMethod_ApiMethodUnspecified = @"API_METHOD_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_ApiMethod_Create = @"CREATE";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_ApiMethod_Delete = @"DELETE";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_ApiMethod_Update = @"UPDATE";

// GTLROSConfig_OSPolicyAssignmentOperationMetadata.rolloutState
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_RolloutState_Cancelled = @"CANCELLED";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_RolloutState_Cancelling = @"CANCELLING";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_RolloutState_InProgress = @"IN_PROGRESS";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_RolloutState_RolloutStateUnspecified = @"ROLLOUT_STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyAssignmentOperationMetadata_RolloutState_Succeeded = @"SUCCEEDED";

// GTLROSConfig_OSPolicyResourceExecResourceExec.interpreter
NSString * const kGTLROSConfig_OSPolicyResourceExecResourceExec_Interpreter_InterpreterUnspecified = @"INTERPRETER_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyResourceExecResourceExec_Interpreter_None = @"NONE";
NSString * const kGTLROSConfig_OSPolicyResourceExecResourceExec_Interpreter_Powershell = @"POWERSHELL";
NSString * const kGTLROSConfig_OSPolicyResourceExecResourceExec_Interpreter_Shell = @"SHELL";

// GTLROSConfig_OSPolicyResourceFileResource.state
NSString * const kGTLROSConfig_OSPolicyResourceFileResource_State_Absent = @"ABSENT";
NSString * const kGTLROSConfig_OSPolicyResourceFileResource_State_ContentsMatch = @"CONTENTS_MATCH";
NSString * const kGTLROSConfig_OSPolicyResourceFileResource_State_DesiredStateUnspecified = @"DESIRED_STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyResourceFileResource_State_Present = @"PRESENT";

// GTLROSConfig_OSPolicyResourcePackageResource.desiredState
NSString * const kGTLROSConfig_OSPolicyResourcePackageResource_DesiredState_DesiredStateUnspecified = @"DESIRED_STATE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyResourcePackageResource_DesiredState_Installed = @"INSTALLED";
NSString * const kGTLROSConfig_OSPolicyResourcePackageResource_DesiredState_Removed = @"REMOVED";

// GTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository.archiveType
NSString * const kGTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository_ArchiveType_ArchiveTypeUnspecified = @"ARCHIVE_TYPE_UNSPECIFIED";
NSString * const kGTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository_ArchiveType_Deb = @"DEB";
NSString * const kGTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository_ArchiveType_DebSrc = @"DEB_SRC";

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

// ----------------------------------------------------------------------------
//
//   GTLROSConfig_CancelOperationRequest
//

@implementation GTLROSConfig_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Empty
//

@implementation GTLROSConfig_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_FixedOrPercent
//

@implementation GTLROSConfig_FixedOrPercent
@dynamic fixed, percent;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata
//

@implementation GTLROSConfig_GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata
@dynamic apiMethod, osPolicyAssignment, rolloutStartTime, rolloutState,
         rolloutUpdateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2betaOperationMetadata
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2betaOperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2ListPolicyOrchestratorsResponse
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2ListPolicyOrchestratorsResponse
@dynamic nextPageToken, policyOrchestrators, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyOrchestrators" : [GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"policyOrchestrators";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OperationMetadata
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OrchestratedResource
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OrchestratedResource
@dynamic identifier, osPolicyAssignmentV1Payload;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScope
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScope
@dynamic selectors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"selectors" : [GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeSelector class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeLocationSelector
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeLocationSelector
@dynamic includedLocations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includedLocations" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeResourceHierarchySelector
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeResourceHierarchySelector
@dynamic includedFolders, includedProjects;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includedFolders" : [NSString class],
    @"includedProjects" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeSelector
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2OrchestrationScopeSelector
@dynamic locationSelector, resourceHierarchySelector;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator
@dynamic action, createTime, descriptionProperty, ETag, labels, name,
         orchestratedResource, orchestrationScope, orchestrationState,
         reconciling, state, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator_Labels
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestrator_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorIterationState
@dynamic error, failedActions, finishTime, iterationId, performedActions,
         progress, startTime, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorOrchestrationState
//

@implementation GTLROSConfig_GoogleCloudOsconfigV2PolicyOrchestratorOrchestrationState
@dynamic currentIterationState, previousIterationState;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_ListOperationsResponse
//

@implementation GTLROSConfig_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLROSConfig_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_MessageSet
//

@implementation GTLROSConfig_MessageSet
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Operation
//

@implementation GTLROSConfig_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Operation_Metadata
//

@implementation GTLROSConfig_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Operation_Response
//

@implementation GTLROSConfig_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicy
//

@implementation GTLROSConfig_OSPolicy
@dynamic allowNoResourceGroupMatch, descriptionProperty, identifier, mode,
         resourceGroups;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceGroups" : [GTLROSConfig_OSPolicyResourceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignment
//

@implementation GTLROSConfig_OSPolicyAssignment
@dynamic baseline, deleted, descriptionProperty, ETag, instanceFilter, name,
         osPolicies, reconciling, revisionCreateTime, revisionId, rollout,
         rolloutState, uid;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"osPolicies" : [GTLROSConfig_OSPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentInstanceFilter
//

@implementation GTLROSConfig_OSPolicyAssignmentInstanceFilter
@dynamic all, exclusionLabels, inclusionLabels, inventories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exclusionLabels" : [GTLROSConfig_OSPolicyAssignmentLabelSet class],
    @"inclusionLabels" : [GTLROSConfig_OSPolicyAssignmentLabelSet class],
    @"inventories" : [GTLROSConfig_OSPolicyAssignmentInstanceFilterInventory class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentInstanceFilterInventory
//

@implementation GTLROSConfig_OSPolicyAssignmentInstanceFilterInventory
@dynamic osShortName, osVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentLabelSet
//

@implementation GTLROSConfig_OSPolicyAssignmentLabelSet
@dynamic labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentLabelSet_Labels
//

@implementation GTLROSConfig_OSPolicyAssignmentLabelSet_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentOperationMetadata
//

@implementation GTLROSConfig_OSPolicyAssignmentOperationMetadata
@dynamic apiMethod, osPolicyAssignment, rolloutStartTime, rolloutState,
         rolloutUpdateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyAssignmentRollout
//

@implementation GTLROSConfig_OSPolicyAssignmentRollout
@dynamic disruptionBudget, minWaitDuration;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyInventoryFilter
//

@implementation GTLROSConfig_OSPolicyInventoryFilter
@dynamic osShortName, osVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResource
//

@implementation GTLROSConfig_OSPolicyResource
@dynamic exec, file, identifier, pkg, repository;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceExecResource
//

@implementation GTLROSConfig_OSPolicyResourceExecResource
@dynamic enforce, validate;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceExecResourceExec
//

@implementation GTLROSConfig_OSPolicyResourceExecResourceExec
@dynamic args, file, interpreter, outputFilePath, script;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceFile
//

@implementation GTLROSConfig_OSPolicyResourceFile
@dynamic allowInsecure, gcs, localPath, remote;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceFileGcs
//

@implementation GTLROSConfig_OSPolicyResourceFileGcs
@dynamic bucket, generation, object;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceFileRemote
//

@implementation GTLROSConfig_OSPolicyResourceFileRemote
@dynamic sha256Checksum, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceFileResource
//

@implementation GTLROSConfig_OSPolicyResourceFileResource
@dynamic content, file, path, permissions, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceGroup
//

@implementation GTLROSConfig_OSPolicyResourceGroup
@dynamic inventoryFilters, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"inventoryFilters" : [GTLROSConfig_OSPolicyInventoryFilter class],
    @"resources" : [GTLROSConfig_OSPolicyResource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResource
//

@implementation GTLROSConfig_OSPolicyResourcePackageResource
@dynamic apt, deb, desiredState, googet, msi, rpm, yum, zypper;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceAPT
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceAPT
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceDeb
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceDeb
@dynamic pullDeps, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceGooGet
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceGooGet
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceMSI
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceMSI
@dynamic properties, source;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"properties" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceRPM
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceRPM
@dynamic pullDeps, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceYUM
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceYUM
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourcePackageResourceZypper
//

@implementation GTLROSConfig_OSPolicyResourcePackageResourceZypper
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceRepositoryResource
//

@implementation GTLROSConfig_OSPolicyResourceRepositoryResource
@dynamic apt, goo, yum, zypper;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository
//

@implementation GTLROSConfig_OSPolicyResourceRepositoryResourceAptRepository
@dynamic archiveType, components, distribution, gpgKey, uri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"components" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceRepositoryResourceGooRepository
//

@implementation GTLROSConfig_OSPolicyResourceRepositoryResourceGooRepository
@dynamic name, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceRepositoryResourceYumRepository
//

@implementation GTLROSConfig_OSPolicyResourceRepositoryResourceYumRepository
@dynamic baseUrl, displayName, gpgKeys, identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"gpgKeys" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_OSPolicyResourceRepositoryResourceZypperRepository
//

@implementation GTLROSConfig_OSPolicyResourceRepositoryResourceZypperRepository
@dynamic baseUrl, displayName, gpgKeys, identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"gpgKeys" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Status
//

@implementation GTLROSConfig_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLROSConfig_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_Status_Details_Item
//

@implementation GTLROSConfig_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROSConfig_StatusProto
//

@implementation GTLROSConfig_StatusProto
@dynamic canonicalCode, code, message, messageSet, space;
@end

#pragma clang diagnostic pop
