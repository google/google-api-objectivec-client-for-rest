// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Resource Settings API (resourcesettings/v1)
// Description:
//   The Resource Settings API allows users to control and modify the behavior
//   of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud
//   Resource Hierarchy.
// Documentation:
//   https://cloud.google.com/resource-manager/docs/resource-settings/overview

#import <GoogleAPIClientForREST/GTLRResourceSettingsQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRResourceSettingsViewSettingViewBasic     = @"SETTING_VIEW_BASIC";
NSString * const kGTLRResourceSettingsViewSettingViewEffectiveValue = @"SETTING_VIEW_EFFECTIVE_VALUE";
NSString * const kGTLRResourceSettingsViewSettingViewLocalValue = @"SETTING_VIEW_LOCAL_VALUE";
NSString * const kGTLRResourceSettingsViewSettingViewUnspecified = @"SETTING_VIEW_UNSPECIFIED";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRResourceSettingsQuery

@dynamic fields;

@end

@implementation GTLRResourceSettingsQuery_FoldersSettingsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_FoldersSettingsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.folders.settings.get";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_FoldersSettingsList

@dynamic pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/settings";
  GTLRResourceSettingsQuery_FoldersSettingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1ListSettingsResponse class];
  query.loggingName = @"resourcesettings.folders.settings.list";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_FoldersSettingsPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_FoldersSettingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.folders.settings.patch";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_OrganizationsSettingsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_OrganizationsSettingsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.organizations.settings.get";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_OrganizationsSettingsList

@dynamic pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/settings";
  GTLRResourceSettingsQuery_OrganizationsSettingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1ListSettingsResponse class];
  query.loggingName = @"resourcesettings.organizations.settings.list";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_OrganizationsSettingsPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_OrganizationsSettingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.organizations.settings.patch";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_ProjectsSettingsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_ProjectsSettingsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.projects.settings.get";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_ProjectsSettingsList

@dynamic pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/settings";
  GTLRResourceSettingsQuery_ProjectsSettingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1ListSettingsResponse class];
  query.loggingName = @"resourcesettings.projects.settings.list";
  return query;
}

@end

@implementation GTLRResourceSettingsQuery_ProjectsSettingsPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRResourceSettingsQuery_ProjectsSettingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting class];
  query.loggingName = @"resourcesettings.projects.settings.patch";
  return query;
}

@end
