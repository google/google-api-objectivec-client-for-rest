// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Resource Settings API (resourcesettings/v1)
// Description:
//   The Resource Settings API allows users to control and modify the behavior
//   of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud
//   Resource Hierarchy.
// Documentation:
//   https://cloud.google.com/resource-manager/docs/resource-settings/overview

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1Value;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueEnumValue;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap_Mappings;
@class GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringSet;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata.dataType

/**
 *  A boolean setting.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_Boolean;
/**
 *  Unspecified data type.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_DataTypeUnspecified;
/**
 *  A Duration setting
 *
 *  Value: "DURATION_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_DurationValue;
/**
 *  A Enum setting
 *
 *  Value: "ENUM_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_EnumValue;
/**
 *  A string setting.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_String;
/**
 *  A string->string map setting
 *
 *  Value: "STRING_MAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_StringMap;
/**
 *  A string set setting.
 *
 *  Value: "STRING_SET"
 */
FOUNDATION_EXTERN NSString * const kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_StringSet;

/**
 *  The response from ListSettings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "settings" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1ListSettingsResponse : GTLRCollectionObject

/** Unused. A page token used to retrieve the next page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of settings that are available at the specified Cloud resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting *> *settings;

@end


/**
 *  The schema for settings.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1Setting : GTLRObject

/**
 *  Output only. The effective value of the setting at the given parent
 *  resource, evaluated based on the resource hierarchy The effective value
 *  evaluates to one of the following options, in this order. If an option is
 *  not valid or doesn't exist, then the next option is used: 1. The local
 *  setting value on the given resource: Setting.local_value 2. If one of the
 *  given resource's ancestors in the resource hierarchy have a local setting
 *  value, the local value at the nearest such ancestor. 3. The setting's
 *  default value: SettingMetadata.default_value 4. An empty value, defined as a
 *  `Value` with all fields unset. The data type of Value must always be
 *  consistent with the data type defined in Setting.metadata.
 */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1Value *effectiveValue;

/**
 *  A fingerprint used for optimistic concurrency. See UpdateSetting for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The configured value of the setting at the given parent resource, ignoring
 *  the resource hierarchy. The data type of Value must always be consistent
 *  with the data type defined in Setting.metadata.
 */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1Value *localValue;

/**
 *  Output only. Metadata about a setting which is not editable by the end user.
 */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata *metadata;

/**
 *  The resource name of the setting. Must be in one of the following forms: *
 *  `projects/{project_number}/settings/{setting_name}` *
 *  `folders/{folder_id}/settings/{setting_name}` *
 *  `organizations/{organization_id}/settings/{setting_name}` For example,
 *  "/projects/123/settings/gcp-enableMyFeature"
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Metadata about a setting which is not editable by the end user.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata : GTLRObject

/**
 *  The data type for this setting.
 *
 *  Likely values:
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_Boolean
 *        A boolean setting. (Value: "BOOLEAN")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_DataTypeUnspecified
 *        Unspecified data type. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_DurationValue
 *        A Duration setting (Value: "DURATION_VALUE")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_EnumValue
 *        A Enum setting (Value: "ENUM_VALUE")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_String
 *        A string setting. (Value: "STRING")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_StringMap
 *        A string->string map setting (Value: "STRING_MAP")
 *    @arg @c kGTLRResourceSettings_GoogleCloudResourcesettingsV1SettingMetadata_DataType_StringSet
 *        A string set setting. (Value: "STRING_SET")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The value provided by Setting.effective_value if no setting value is
 *  explicitly set. Note: not all settings have a default value.
 */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1Value *defaultValue;

/**
 *  A detailed description of what this setting does.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The human readable name for this setting. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  A flag indicating that values of this setting cannot be modified. See
 *  documentation for the specific setting for updates and reasons.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readOnly;

@end


/**
 *  The data in a setting value.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1Value : GTLRObject

/**
 *  Defines this value as being a boolean value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *booleanValue;

/** Defines this value as being a Duration. */
@property(nonatomic, strong, nullable) GTLRDuration *durationValue;

/** Defines this value as being a Enum. */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueEnumValue *enumValue;

/** Defines this value as being a StringMap. */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap *stringMapValue;

/** Defines this value as being a StringSet. */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringSet *stringSetValue;

/** Defines this value as being a string value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  A enum value that can hold any enum type setting values. Each enum type is
 *  represented by a number, this representation is stored in the definitions.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueEnumValue : GTLRObject

/** The value of this enum */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A string->string map value that can hold a map of string keys to string
 *  values. The maximum length of each string is 200 characters and there can be
 *  a maximum of 50 key-value pairs in the map.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap : GTLRObject

/** The key-value pairs in the map */
@property(nonatomic, strong, nullable) GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap_Mappings *mappings;

@end


/**
 *  The key-value pairs in the map
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringMap_Mappings : GTLRObject
@end


/**
 *  A string set value that can hold a set of strings. The maximum length of
 *  each string is 200 characters and there can be a maximum of 50 strings in
 *  the string set.
 */
@interface GTLRResourceSettings_GoogleCloudResourcesettingsV1ValueStringSet : GTLRObject

/** The strings in the set */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
