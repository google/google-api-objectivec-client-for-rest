// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Document AI API (documentai/v1)
// Description:
//   Service to parse structured information from unstructured or
//   semi-structured documents using state-of-the-art Google AI such as natural
//   language, computer vision, translation, and AutoML.
// Documentation:
//   https://cloud.google.com/document-ai/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDocumentObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Document query classes.
 */
@interface GTLRDocumentQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: documentai.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_OperationsDelete : GTLRDocumentQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRDocumentQuery_OperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches processor types. Note that we do not use ListProcessorTypes here
 *  because it is not paginated.
 *
 *  Method: documentai.projects.locations.fetchProcessorTypes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsFetchProcessorTypes : GTLRDocumentQuery

/**
 *  Required. The project of processor type to list. The available processor
 *  types may depend on the allow-listing on projects. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDocument_GoogleCloudDocumentaiV1FetchProcessorTypesResponse.
 *
 *  Fetches processor types. Note that we do not use ListProcessorTypes here
 *  because it is not paginated.
 *
 *  @param parent Required. The project of processor type to list. The available
 *    processor types may depend on the allow-listing on projects. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsFetchProcessorTypes
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about a location.
 *
 *  Method: documentai.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsGet : GTLRDocumentQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: documentai.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsList : GTLRDocumentQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudLocationListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: documentai.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsOperationsCancel : GTLRDocumentQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: documentai.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsOperationsGet : GTLRDocumentQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: documentai.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsOperationsList : GTLRDocumentQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  LRO endpoint to batch process many documents. The output is written to Cloud
 *  Storage as JSON in the [Document] format.
 *
 *  Method: documentai.projects.locations.processors.batchProcess
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsBatchProcess : GTLRDocumentQuery

/**
 *  Required. The resource name of Processor or ProcessorVersion. Format:
 *  `projects/{project}/locations/{location}/processors/{processor}`, or
 *  `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  LRO endpoint to batch process many documents. The output is written to Cloud
 *  Storage as JSON in the [Document] format.
 *
 *  @param object The @c GTLRDocument_GoogleCloudDocumentaiV1BatchProcessRequest
 *    to include in the query.
 *  @param name Required. The resource name of Processor or ProcessorVersion.
 *    Format: `projects/{project}/locations/{location}/processors/{processor}`,
 *    or
 *    `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsBatchProcess
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1BatchProcessRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a processor from the type processor that the user chose. The
 *  processor will be at "ENABLED" state by default after its creation.
 *
 *  Method: documentai.projects.locations.processors.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsCreate : GTLRDocumentQuery

/**
 *  Required. The parent (project and location) under which to create the
 *  processor. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1Processor.
 *
 *  Creates a processor from the type processor that the user chose. The
 *  processor will be at "ENABLED" state by default after its creation.
 *
 *  @param object The @c GTLRDocument_GoogleCloudDocumentaiV1Processor to
 *    include in the query.
 *  @param parent Required. The parent (project and location) under which to
 *    create the processor. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsCreate
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1Processor *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the processor, unloads all deployed model artifacts if it was
 *  enabled and then deletes all artifacts associated with this processor.
 *
 *  Method: documentai.projects.locations.processors.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsDelete : GTLRDocumentQuery

/** Required. The processor resource name to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Deletes the processor, unloads all deployed model artifacts if it was
 *  enabled and then deletes all artifacts associated with this processor.
 *
 *  @param name Required. The processor resource name to be deleted.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disables a processor
 *
 *  Method: documentai.projects.locations.processors.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsDisable : GTLRDocumentQuery

/** Required. The processor resource name to be disabled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Disables a processor
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1DisableProcessorRequest to include in
 *    the query.
 *  @param name Required. The processor resource name to be disabled.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsDisable
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1DisableProcessorRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enables a processor
 *
 *  Method: documentai.projects.locations.processors.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsEnable : GTLRDocumentQuery

/** Required. The processor resource name to be enabled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Enables a processor
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1EnableProcessorRequest to include in
 *    the query.
 *  @param name Required. The processor resource name to be enabled.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsEnable
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1EnableProcessorRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a processor detail.
 *
 *  Method: documentai.projects.locations.processors.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsGet : GTLRDocumentQuery

/** Required. The processor resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1Processor.
 *
 *  Gets a processor detail.
 *
 *  @param name Required. The processor resource name.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Send a document for Human Review. The input document should be processed by
 *  the specified processor.
 *
 *  Method: documentai.projects.locations.processors.humanReviewConfig.reviewDocument
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsHumanReviewConfigReviewDocument : GTLRDocumentQuery

/**
 *  Required. The resource name of the HumanReviewConfig that the document will
 *  be reviewed with.
 */
@property(nonatomic, copy, nullable) NSString *humanReviewConfig;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Send a document for Human Review. The input document should be processed by
 *  the specified processor.
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1ReviewDocumentRequest to include in
 *    the query.
 *  @param humanReviewConfig Required. The resource name of the
 *    HumanReviewConfig that the document will be reviewed with.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsHumanReviewConfigReviewDocument
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1ReviewDocumentRequest *)object
              humanReviewConfig:(NSString *)humanReviewConfig;

@end

/**
 *  Lists all processors which belong to this project.
 *
 *  Method: documentai.projects.locations.processors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsList : GTLRDocumentQuery

/**
 *  The maximum number of processors to return. If unspecified, at most 50
 *  processors will be returned. The maximum value is 100; values above 100 will
 *  be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  We will return the processors sorted by creation time. The page token will
 *  point to the next processor.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent (project and location) which owns this collection of
 *  Processors. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1ListProcessorsResponse.
 *
 *  Lists all processors which belong to this project.
 *
 *  @param parent Required. The parent (project and location) which owns this
 *    collection of Processors. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Processes a single document.
 *
 *  Method: documentai.projects.locations.processors.process
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcess : GTLRDocumentQuery

/**
 *  Required. The resource name of the Processor or ProcessorVersion to use for
 *  processing. If a Processor is specified, the server will use its default
 *  version. Format:
 *  `projects/{project}/locations/{location}/processors/{processor}`, or
 *  `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1ProcessResponse.
 *
 *  Processes a single document.
 *
 *  @param object The @c GTLRDocument_GoogleCloudDocumentaiV1ProcessRequest to
 *    include in the query.
 *  @param name Required. The resource name of the Processor or ProcessorVersion
 *    to use for processing. If a Processor is specified, the server will use
 *    its default version. Format:
 *    `projects/{project}/locations/{location}/processors/{processor}`, or
 *    `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcess
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1ProcessRequest *)object
                           name:(NSString *)name;

@end

/**
 *  LRO endpoint to batch process many documents. The output is written to Cloud
 *  Storage as JSON in the [Document] format.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.batchProcess
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsBatchProcess : GTLRDocumentQuery

/**
 *  Required. The resource name of Processor or ProcessorVersion. Format:
 *  `projects/{project}/locations/{location}/processors/{processor}`, or
 *  `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  LRO endpoint to batch process many documents. The output is written to Cloud
 *  Storage as JSON in the [Document] format.
 *
 *  @param object The @c GTLRDocument_GoogleCloudDocumentaiV1BatchProcessRequest
 *    to include in the query.
 *  @param name Required. The resource name of Processor or ProcessorVersion.
 *    Format: `projects/{project}/locations/{location}/processors/{processor}`,
 *    or
 *    `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsBatchProcess
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1BatchProcessRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes the processor version, all artifacts under the processor version
 *  will be deleted.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsDelete : GTLRDocumentQuery

/** Required. The processor version resource name to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Deletes the processor version, all artifacts under the processor version
 *  will be deleted.
 *
 *  @param name Required. The processor version resource name to be deleted.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deploys the processor version.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.deploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsDeploy : GTLRDocumentQuery

/** Required. The processor version resource name to be deployed. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Deploys the processor version.
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1DeployProcessorVersionRequest to
 *    include in the query.
 *  @param name Required. The processor version resource name to be deployed.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsDeploy
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1DeployProcessorVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a processor version detail.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsGet : GTLRDocumentQuery

/** Required. The processor resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1ProcessorVersion.
 *
 *  Gets a processor version detail.
 *
 *  @param name Required. The processor resource name.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all versions of a processor.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsList : GTLRDocumentQuery

/**
 *  The maximum number of processor versions to return. If unspecified, at most
 *  10 processor versions will be returned. The maximum value is 20; values
 *  above 20 will be coerced to 20.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  We will return the processor versions sorted by creation time. The page
 *  token will point to the next processor version.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent (project, location and processor) to list all versions.
 *  Format: `projects/{project}/locations/{location}/processors/{processor}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDocument_GoogleCloudDocumentaiV1ListProcessorVersionsResponse.
 *
 *  Lists all versions of a processor.
 *
 *  @param parent Required. The parent (project, location and processor) to list
 *    all versions. Format:
 *    `projects/{project}/locations/{location}/processors/{processor}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Processes a single document.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.process
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsProcess : GTLRDocumentQuery

/**
 *  Required. The resource name of the Processor or ProcessorVersion to use for
 *  processing. If a Processor is specified, the server will use its default
 *  version. Format:
 *  `projects/{project}/locations/{location}/processors/{processor}`, or
 *  `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1ProcessResponse.
 *
 *  Processes a single document.
 *
 *  @param object The @c GTLRDocument_GoogleCloudDocumentaiV1ProcessRequest to
 *    include in the query.
 *  @param name Required. The resource name of the Processor or ProcessorVersion
 *    to use for processing. If a Processor is specified, the server will use
 *    its default version. Format:
 *    `projects/{project}/locations/{location}/processors/{processor}`, or
 *    `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsProcess
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1ProcessRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Undeploys the processor version.
 *
 *  Method: documentai.projects.locations.processors.processorVersions.undeploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsUndeploy : GTLRDocumentQuery

/** Required. The processor version resource name to be undeployed. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Undeploys the processor version.
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1UndeployProcessorVersionRequest to
 *    include in the query.
 *  @param name Required. The processor version resource name to be undeployed.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsProcessorVersionsUndeploy
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1UndeployProcessorVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Set the default (active) version of a Processor that will be used in
 *  ProcessDocument and BatchProcessDocuments.
 *
 *  Method: documentai.projects.locations.processors.setDefaultProcessorVersion
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorsSetDefaultProcessorVersion : GTLRDocumentQuery

/** Required. The resource name of the Processor to change default version. */
@property(nonatomic, copy, nullable) NSString *processor;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Set the default (active) version of a Processor that will be used in
 *  ProcessDocument and BatchProcessDocuments.
 *
 *  @param object The @c
 *    GTLRDocument_GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest to
 *    include in the query.
 *  @param processor Required. The resource name of the Processor to change
 *    default version.
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorsSetDefaultProcessorVersion
 */
+ (instancetype)queryWithObject:(GTLRDocument_GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest *)object
                      processor:(NSString *)processor;

@end

/**
 *  Lists the processor types that exist.
 *
 *  Method: documentai.projects.locations.processorTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsLocationsProcessorTypesList : GTLRDocumentQuery

/**
 *  The maximum number of processor types to return. If unspecified, at most 100
 *  processor types will be returned. The maximum value is 500; values above 500
 *  will be coerced to 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Used to retrieve the next page of results, empty if at the end of the list.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location of processor type to list. The available processor
 *  types may depend on the allow-listing on projects. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudDocumentaiV1ListProcessorTypesResponse.
 *
 *  Lists the processor types that exist.
 *
 *  @param parent Required. The location of processor type to list. The
 *    available processor types may depend on the allow-listing on projects.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRDocumentQuery_ProjectsLocationsProcessorTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: documentai.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_ProjectsOperationsGet : GTLRDocumentQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDocumentQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: documentai.uiv1beta3.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_Uiv1beta3ProjectsLocationsGet : GTLRDocumentQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRDocumentQuery_Uiv1beta3ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: documentai.uiv1beta3.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_Uiv1beta3ProjectsLocationsList : GTLRDocumentQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDocument_GoogleCloudLocationListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRDocumentQuery_Uiv1beta3ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: documentai.uiv1beta3.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsCancel : GTLRDocumentQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: documentai.uiv1beta3.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsGet : GTLRDocumentQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: documentai.uiv1beta3.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDocumentCloudPlatform
 */
@interface GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsList : GTLRDocumentQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDocument_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDocumentQuery_Uiv1beta3ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
