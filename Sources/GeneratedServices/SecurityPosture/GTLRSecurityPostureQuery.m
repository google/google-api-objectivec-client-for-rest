// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Posture API (securityposture/v1)
// Description:
//   Defines, assesses, and monitors the overall status of your security in
//   Google Cloud. You can use security postures to evaluate your current cloud
//   security against defined benchmarks and help maintain the level of security
//   that your organization requires.
// Documentation:
//   https://cloud.google.com/security-command-center

#import <GoogleAPIClientForREST/GTLRSecurityPostureQuery.h>

@implementation GTLRSecurityPostureQuery

@dynamic fields;

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRSecurityPostureQuery_OrganizationsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Empty class];
  query.loggingName = @"securityposture.organizations.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Empty class];
  query.loggingName = @"securityposture.organizations.locations.operations.delete";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.operations.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRSecurityPostureQuery_OrganizationsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_ListOperationsResponse class];
  query.loggingName = @"securityposture.organizations.locations.operations.list";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsCreate

@dynamic parent, postureDeploymentId;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_PostureDeployment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postureDeployments";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postureDeployments.create";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postureDeployments.delete";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_PostureDeployment class];
  query.loggingName = @"securityposture.organizations.locations.postureDeployments.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postureDeployments";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_ListPostureDeploymentsResponse class];
  query.loggingName = @"securityposture.organizations.locations.postureDeployments.list";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_PostureDeployment *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postureDeployments.patch";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesCreate

@dynamic parent, postureId;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_Posture *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postures";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postures.create";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postures.delete";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesExtract

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_ExtractPostureRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postures:extract";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesExtract *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postures.extract";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesGet

@dynamic name, revisionId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Posture class];
  query.loggingName = @"securityposture.organizations.locations.postures.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postures";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_ListPosturesResponse class];
  query.loggingName = @"securityposture.organizations.locations.postures.list";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesListRevisions

@dynamic name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:listRevisions";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesListRevisions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_ListPostureRevisionsResponse class];
  query.loggingName = @"securityposture.organizations.locations.postures.listRevisions";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPosturesPatch

@dynamic name, revisionId, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_Posture *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPosturesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.postures.patch";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesGet

@dynamic name, revisionId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_PostureTemplate class];
  query.loggingName = @"securityposture.organizations.locations.postureTemplates.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/postureTemplates";
  GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_ListPostureTemplatesResponse class];
  query.loggingName = @"securityposture.organizations.locations.postureTemplates.list";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsReportsCreateIaCValidationReport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityPosture_CreateIaCValidationReportRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reports:createIaCValidationReport";
  GTLRSecurityPostureQuery_OrganizationsLocationsReportsCreateIaCValidationReport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_Operation class];
  query.loggingName = @"securityposture.organizations.locations.reports.createIaCValidationReport";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsReportsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_OrganizationsLocationsReportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Report class];
  query.loggingName = @"securityposture.organizations.locations.reports.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_OrganizationsLocationsReportsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reports";
  GTLRSecurityPostureQuery_OrganizationsLocationsReportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityPosture_ListReportsResponse class];
  query.loggingName = @"securityposture.organizations.locations.reports.list";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityPostureQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_Location class];
  query.loggingName = @"securityposture.projects.locations.get";
  return query;
}

@end

@implementation GTLRSecurityPostureQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRSecurityPostureQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityPosture_ListLocationsResponse class];
  query.loggingName = @"securityposture.projects.locations.list";
  return query;
}

@end
