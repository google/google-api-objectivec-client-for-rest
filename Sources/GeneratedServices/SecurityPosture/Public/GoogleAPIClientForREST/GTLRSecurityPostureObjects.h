// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Posture API (securityposture/v1)
// Description:
//   Defines, assesses, and monitors the overall status of your security in
//   Google Cloud. You can use security postures to evaluate your current cloud
//   security against defined benchmarks and help maintain the level of security
//   that your organization requires.
// Documentation:
//   https://cloud.google.com/security-command-center

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSecurityPosture_AssetDetails;
@class GTLRSecurityPosture_ComplianceStandard;
@class GTLRSecurityPosture_Constraint;
@class GTLRSecurityPosture_CustomConfig;
@class GTLRSecurityPosture_CustomOutputSpec;
@class GTLRSecurityPosture_Expr;
@class GTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint;
@class GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule;
@class GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule_Parameters;
@class GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRuleStringValues;
@class GTLRSecurityPosture_IaC;
@class GTLRSecurityPosture_IaCValidationReport;
@class GTLRSecurityPosture_Location;
@class GTLRSecurityPosture_Location_Labels;
@class GTLRSecurityPosture_Location_Metadata;
@class GTLRSecurityPosture_Operation;
@class GTLRSecurityPosture_Operation_Metadata;
@class GTLRSecurityPosture_Operation_Response;
@class GTLRSecurityPosture_OrgPolicyConstraint;
@class GTLRSecurityPosture_OrgPolicyConstraintCustom;
@class GTLRSecurityPosture_Policy;
@class GTLRSecurityPosture_PolicyDetails;
@class GTLRSecurityPosture_PolicySet;
@class GTLRSecurityPosture_Posture;
@class GTLRSecurityPosture_Posture_Annotations;
@class GTLRSecurityPosture_PostureDeployment;
@class GTLRSecurityPosture_PostureDeployment_Annotations;
@class GTLRSecurityPosture_PostureDetails;
@class GTLRSecurityPosture_PostureTemplate;
@class GTLRSecurityPosture_Property;
@class GTLRSecurityPosture_Report;
@class GTLRSecurityPosture_ResourceSelector;
@class GTLRSecurityPosture_ResourceTypes;
@class GTLRSecurityPosture_SecurityHealthAnalyticsCustomModule;
@class GTLRSecurityPosture_SecurityHealthAnalyticsModule;
@class GTLRSecurityPosture_Status;
@class GTLRSecurityPosture_Status_Details_Item;
@class GTLRSecurityPosture_Violation;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_CustomConfig.severity

/**
 *  Critical severity.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_CustomConfig_Severity_Critical;
/**
 *  High severity.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_CustomConfig_Severity_High;
/**
 *  Low severity.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_CustomConfig_Severity_Low;
/**
 *  Medium severity.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_CustomConfig_Severity_Medium;
/**
 *  Default value. This value is unused.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_CustomConfig_Severity_SeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint.actionType

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_ActionTypeUnspecified;
/**
 *  Allow the action.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_Allow;
/**
 *  Deny the action.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_Deny;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint.methodTypes

/**
 *  Constraint applied when creating the resource.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_MethodTypes_Create;
/**
 *  Not supported. Constraint applied when deleting the resource.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_MethodTypes_Delete;
/**
 *  Default value. This value is unused.
 *
 *  Value: "METHOD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_MethodTypes_MethodTypeUnspecified;
/**
 *  Constraint applied when updating the resource.
 *
 *  Value: "UPDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_MethodTypes_Update;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_PolicyDetails.constraintType

/**
 *  Default value. This value is unused.
 *
 *  Value: "CONSTRAINT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_ConstraintTypeUnspecified;
/**
 *  A predefined organization policy constraint.
 *
 *  Value: "ORG_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_OrgPolicy;
/**
 *  A custom organization policy constraint.
 *
 *  Value: "ORG_POLICY_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_OrgPolicyCustom;
/**
 *  A custom rego policy constraint.
 *
 *  Value: "REGO_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_RegoPolicy;
/**
 *  A custom module for Security Health Analytics.
 *
 *  Value: "SECURITY_HEALTH_ANALYTICS_CUSTOM_MODULE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_SecurityHealthAnalyticsCustomModule;
/**
 *  A built-in detector for Security Health Analytics.
 *
 *  Value: "SECURITY_HEALTH_ANALYTICS_MODULE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PolicyDetails_ConstraintType_SecurityHealthAnalyticsModule;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_Posture.categories

/**
 *  Artificial intelligence (AI).
 *
 *  Value: "AI"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_Categories_Ai;
/**
 *  Amazon Web Services (AWS) policies.
 *
 *  Value: "AWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_Categories_Aws;
/**
 *  Microsoft Azure policies.
 *
 *  Value: "AZURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_Categories_Azure;
/**
 *  Default value. This value is unused.
 *
 *  Value: "CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_Categories_CategoryUnspecified;
/**
 *  Google Cloud policies.
 *
 *  Value: "GCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_Categories_Gcp;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_Posture.state

/**
 *  The posture is complete and ready to deploy.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_State_Active;
/**
 *  The posture is deprecated and can no longer be deployed.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_State_Deprecated;
/**
 *  The posture is a draft and is not ready to deploy.
 *
 *  Value: "DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_State_Draft;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Posture_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_PostureDeployment.categories

/**
 *  Artificial intelligence (AI).
 *
 *  Value: "AI"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_Categories_Ai;
/**
 *  Amazon Web Services (AWS) policies.
 *
 *  Value: "AWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_Categories_Aws;
/**
 *  Microsoft Azure policies.
 *
 *  Value: "AZURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_Categories_Azure;
/**
 *  Default value. This value is unused.
 *
 *  Value: "CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_Categories_CategoryUnspecified;
/**
 *  Google Cloud policies.
 *
 *  Value: "GCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_Categories_Gcp;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_PostureDeployment.state

/**
 *  The posture deployment is active and in use.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_Active;
/**
 *  The posture deployment could not be created.
 *
 *  Value: "CREATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_CreateFailed;
/**
 *  The posture deployment is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_Creating;
/**
 *  The posture deployment could not be deleted.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_DeleteFailed;
/**
 *  The posture deployment is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_Deleting;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_StateUnspecified;
/**
 *  The posture deployment could not be updated.
 *
 *  Value: "UPDATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_UpdateFailed;
/**
 *  The posture deployment is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureDeployment_State_Updating;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_PostureTemplate.categories

/**
 *  Artificial intelligence (AI).
 *
 *  Value: "AI"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_Categories_Ai;
/**
 *  Amazon Web Services (AWS) policies.
 *
 *  Value: "AWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_Categories_Aws;
/**
 *  Microsoft Azure policies.
 *
 *  Value: "AZURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_Categories_Azure;
/**
 *  Default value. This value is unused.
 *
 *  Value: "CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_Categories_CategoryUnspecified;
/**
 *  Google Cloud policies.
 *
 *  Value: "GCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_Categories_Gcp;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_PostureTemplate.state

/**
 *  The posture template follows the latest controls and standards.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_State_Active;
/**
 *  The posture template uses outdated controls and standards. We recommend that
 *  you use a newer revision of the posture template.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_State_Deprecated;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_PostureTemplate_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_SecurityHealthAnalyticsCustomModule.moduleEnablementState

/**
 *  The detector or custom module is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_Disabled;
/**
 *  The detector or custom module is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_Enabled;
/**
 *  Default value. This value is unused.
 *
 *  Value: "ENABLEMENT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_EnablementStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_SecurityHealthAnalyticsModule.moduleEnablementState

/**
 *  The detector or custom module is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_Disabled;
/**
 *  The detector or custom module is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_Enabled;
/**
 *  Default value. This value is unused.
 *
 *  Value: "ENABLEMENT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_EnablementStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityPosture_Violation.severity

/**
 *  Critical severity.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Violation_Severity_Critical;
/**
 *  High severity.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Violation_Severity_High;
/**
 *  Low severity.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Violation_Severity_Low;
/**
 *  Medium severity.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Violation_Severity_Medium;
/**
 *  Default value. This value is unused.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityPosture_Violation_Severity_SeverityUnspecified;

/**
 *  Details of a Cloud Asset Inventory asset that caused a violation.
 */
@interface GTLRSecurityPosture_AssetDetails : GTLRObject

/**
 *  Information about the Cloud Asset Inventory asset that violated a policy.
 *  The format of this information can change at any time without prior notice.
 *  Your application must not depend on this information in any way.
 */
@property(nonatomic, copy, nullable) NSString *asset;

/**
 *  The type of Cloud Asset Inventory asset. For a list of asset types, see
 *  [Supported asset
 *  types](https://cloud.google.com/asset-inventory/docs/supported-asset-types).
 */
@property(nonatomic, copy, nullable) NSString *assetType;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRSecurityPosture_CancelOperationRequest : GTLRObject
@end


/**
 *  Information about a compliance standard that the policy helps enforce.
 */
@interface GTLRSecurityPosture_ComplianceStandard : GTLRObject

/**
 *  Optional. The control in the compliance standard that the policy helps
 *  enforce. For example, `AC-3`.
 */
@property(nonatomic, copy, nullable) NSString *control;

/**
 *  Optional. The compliance standard that the policy helps enforce. For
 *  example, `NIST SP 800-53`.
 */
@property(nonatomic, copy, nullable) NSString *standard;

@end


/**
 *  Metadata for a constraint in a Policy.
 */
@interface GTLRSecurityPosture_Constraint : GTLRObject

/** Optional. A predefined organization policy constraint. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_OrgPolicyConstraint *orgPolicyConstraint;

/** Optional. A custom organization policy constraint. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_OrgPolicyConstraintCustom *orgPolicyConstraintCustom;

/** Optional. A custom module for Security Health Analytics. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_SecurityHealthAnalyticsCustomModule *securityHealthAnalyticsCustomModule;

/** Optional. A built-in detector for Security Health Analytics. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_SecurityHealthAnalyticsModule *securityHealthAnalyticsModule;

@end


/**
 *  Request message for CreateIaCValidationReport.
 */
@interface GTLRSecurityPosture_CreateIaCValidationReportRequest : GTLRObject

/** Required. The infrastructure-as-code (IaC) configuration to validate. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_IaC *iac;

@end


/**
 *  A custom module configuration for Security Health Analytics. Use
 *  `CustomConfig` to create custom detectors that generate custom findings for
 *  resources that you specify.
 */
@interface GTLRSecurityPosture_CustomConfig : GTLRObject

/**
 *  Optional. Definitions of custom source properties to include in findings.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_CustomOutputSpec *customOutput;

/**
 *  Optional. A description of the vulnerability or misconfiguration that the
 *  custom module detects. The description appears in each finding. Provide
 *  enough information to help an investigator understand the finding. The value
 *  must be enclosed in quotation marks.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The Common Expression Language (CEL) expression to evaluate. When
 *  the expression evaluates to `true` for a resource, a finding is generated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Expr *predicate;

/**
 *  Required. An explanation of the steps that security teams can take to
 *  resolve the detected issue. The explanation appears in each finding.
 */
@property(nonatomic, copy, nullable) NSString *recommendation;

/** Required. The resource types that the custom module operates on. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_ResourceSelector *resourceSelector;

/**
 *  Required. The severity of findings generated by the custom module.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_CustomConfig_Severity_Critical Critical
 *        severity. (Value: "CRITICAL")
 *    @arg @c kGTLRSecurityPosture_CustomConfig_Severity_High High severity.
 *        (Value: "HIGH")
 *    @arg @c kGTLRSecurityPosture_CustomConfig_Severity_Low Low severity.
 *        (Value: "LOW")
 *    @arg @c kGTLRSecurityPosture_CustomConfig_Severity_Medium Medium severity.
 *        (Value: "MEDIUM")
 *    @arg @c kGTLRSecurityPosture_CustomConfig_Severity_SeverityUnspecified
 *        Default value. This value is unused. (Value: "SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

@end


/**
 *  Definitions of custom source properties that can appear in findings.
 */
@interface GTLRSecurityPosture_CustomOutputSpec : GTLRObject

/** Optional. The custom source properties that can appear in findings. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Property *> *properties;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRSecurityPosture_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRSecurityPosture_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for ExtractPosture.
 */
@interface GTLRSecurityPosture_ExtractPostureRequest : GTLRObject

/** Required. An identifier for the posture. */
@property(nonatomic, copy, nullable) NSString *postureId;

/**
 *  Required. The organization, folder, or project from which policies are
 *  extracted. Must be within the organization defined in parent. Use one of the
 *  following formats: * `organization/{organization_number}` *
 *  `folder/{folder_number}` * `project/{project_number}`
 */
@property(nonatomic, copy, nullable) NSString *workload;

@end


/**
 *  A custom, user-defined constraint. You can apply the constraint only to the
 *  resource types specified in the constraint, and only within the organization
 *  where the constraint is defined. _When you create a custom constraint, it is
 *  not enforced automatically._ You must use an organization policy to [enforce
 *  the
 *  constraint](https://cloud.google.com/resource-manager/help/organization-policy/constraints/enforce).
 */
@interface GTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint : GTLRObject

/**
 *  Whether to allow or deny the action.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_ActionTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_Allow
 *        Allow the action. (Value: "ALLOW")
 *    @arg @c kGTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint_ActionType_Deny
 *        Deny the action. (Value: "DENY")
 */
@property(nonatomic, copy, nullable) NSString *actionType;

/**
 *  A Common Expression Language (CEL) condition expression that must evaluate
 *  to `true` for the constraint to be enforced. The maximum length is 1000
 *  characters. For example: +
 *  `resource.instanceName.matches('(production|test)_(.+_)?[\\d]+')`: Evaluates
 *  to `true` if the resource's `instanceName` attribute contains the following:
 *  + The prefix `production` or `test` + An underscore (`_`) + Optional: One or
 *  more characters, followed by an underscore (`_`) + One or more digits +
 *  `resource.management.auto_upgrade == true`: Evaluates to `true` if the
 *  resource's `management.auto_upgrade` attribute is `true`.
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  A description of the constraint. The maximum length is 2000 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A display name for the constraint. The maximum length is 200 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The types of operations that the constraint applies to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *methodTypes;

/**
 *  Immutable. The name of the constraint, in the format
 *  `organizations/{organization_id}/customConstraints/custom.{custom_constraint_id}`.
 *  For example,
 *  `organizations/123456789012/customConstraints/custom.createOnlyE2TypeVms`.
 *  Must contain 1 to 62 characters, excluding the prefix
 *  `organizations/{organization_id}/customConstraints/custom.`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. The resource type that the constraint applies to, in the format
 *  `{canonical_service_name}/{resource_type_name}`. For example,
 *  `compute.googleapis.com/Instance`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceTypes;

/**
 *  Output only. The last time at which the constraint was updated or created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A rule that defines the allowed and denied values for an organization policy
 *  constraint.
 */
@interface GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule : GTLRObject

/**
 *  Whether to allow any value for a list constraint. Valid only for list
 *  constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowAll;

/**
 *  A condition that determines whether this rule is used to evaluate the
 *  policy. When set, the google.type.Expr.expression field must contain 1 to 10
 *  subexpressions, joined by the `||` or `&&` operators. Each subexpression
 *  must use the `resource.matchTag()` or `resource.matchTagId()` Common
 *  Expression Language (CEL) function. The `resource.matchTag()` function takes
 *  the following arguments: * `key_name`: the namespaced name of the tag key,
 *  with the organization ID and a slash (`/`) as a prefix; for example,
 *  `123456789012/environment` * `value_name`: the short name of the tag value
 *  For example: `resource.matchTag('123456789012/environment, 'prod')` The
 *  `resource.matchTagId()` function takes the following arguments: * `key_id`:
 *  the permanent ID of the tag key; for example, `tagKeys/123456789012` *
 *  `value_id`: the permanent ID of the tag value; for example,
 *  `tagValues/567890123456` For example:
 *  `resource.matchTagId('tagKeys/123456789012', 'tagValues/567890123456')`
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Expr *condition;

/**
 *  Whether to deny all values for a list constraint. Valid only for list
 *  constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *denyAll;

/**
 *  Whether to enforce the constraint. Valid only for boolean constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforce;

/**
 *  Optional. Required for managed constraints if parameters are defined. Passes
 *  parameter values when policy enforcement is enabled. Ensure that parameter
 *  value types match those defined in the constraint definition. For example: {
 *  "allowedLocations" : ["us-east1", "us-west1"], "allowAll" : true }
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule_Parameters *parameters;

/**
 *  Optional. The resource types policies can support, only used for managed
 *  constraints. Method type is `GOVERN_TAGS`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_ResourceTypes *resourceTypes;

/**
 *  The allowed and denied values for a list constraint. Valid only for list
 *  constraints.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRuleStringValues *values;

@end


/**
 *  Optional. Required for managed constraints if parameters are defined. Passes
 *  parameter values when policy enforcement is enabled. Ensure that parameter
 *  value types match those defined in the constraint definition. For example: {
 *  "allowedLocations" : ["us-east1", "us-west1"], "allowAll" : true }
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule_Parameters : GTLRObject
@end


/**
 *  The allowed and denied values for a list constraint. For all constraints,
 *  these fields can contain literal values. Optionally, you can add the `is:`
 *  prefix to these values. If the value contains a colon (`:`), then the `is:`
 *  prefix is required. Some constraints allow you to specify a portion of the
 *  resource hierarchy, known as a [_hierarchy
 *  subtree_](https://cloud.google.com/resource-manager/help/organization-policy/hierarchy-subtree),
 *  that the constraint applies to. To specify a hierarchy subtree, use the
 *  `under:` prefix, followed by a value with one of these formats: -
 *  `projects/{project_id}` (for example, `projects/tokyo-rain-123`) -
 *  `folders/{folder_id}` (for example, `folders/1234567890123`) -
 *  `organizations/{organization_id}` (for example,
 *  `organizations/123456789012`) A constraint's `supports_under` field
 *  indicates whether you can specify a hierarchy subtree. To learn which
 *  predefined constraints let you specify a hierarchy subtree, see the
 *  [constraints
 *  reference](https://cloud.google.com/resource-manager/help/organization-policy/constraints/reference).
 */
@interface GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRuleStringValues : GTLRObject

/** The allowed values for the constraint. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedValues;

/** The denied values for the constraint. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deniedValues;

@end


/**
 *  Details of an infrastructure-as-code (IaC) configuration.
 */
@interface GTLRSecurityPosture_IaC : GTLRObject

/**
 *  Optional. A Terraform plan file, formatted as a stringified JSON object. To
 *  learn how to generate a Terraform plan file in JSON format, see [JSON output
 *  format](https://developer.hashicorp.com/terraform/internals/json-format) in
 *  the Terraform documentation.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *tfPlan;

@end


/**
 *  Details of an infrastructure-as-code (IaC) validation report.
 */
@interface GTLRSecurityPosture_IaCValidationReport : GTLRObject

/** Additional information about the report. */
@property(nonatomic, copy, nullable) NSString *note;

/** A list of every Violation found in the IaC configuration. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Violation *> *violations;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityPosture_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityPosture_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Operation *> *operations;

@end


/**
 *  Response message for ListPostureDeployments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "postureDeployments" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityPosture_ListPostureDeploymentsResponse : GTLRCollectionObject

/**
 *  A pagination token. To retrieve the next page of results, call the method
 *  again with this token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of PostureDeployment resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_PostureDeployment *> *postureDeployments;

/** Locations that were temporarily unavailable and could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for ListPostureRevisions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "revisions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityPosture_ListPostureRevisionsResponse : GTLRCollectionObject

/**
 *  A pagination token. To retrieve the next page of results, call the method
 *  again with this token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of revisions for the Posture.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Posture *> *revisions;

@end


/**
 *  Response message for ListPostures.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "postures" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityPosture_ListPosturesResponse : GTLRCollectionObject

/**
 *  A pagination token. To retrieve the next page of results, call the method
 *  again with this token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Posture resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Posture *> *postures;

/** Locations that were temporarily unavailable and could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for ListPostureTemplates.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "postureTemplates" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityPosture_ListPostureTemplatesResponse : GTLRCollectionObject

/**
 *  A pagination token. To retrieve the next page of results, call the method
 *  again with this token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of PostureTemplate resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_PostureTemplate *> *postureTemplates;

@end


/**
 *  Response message for ListReports.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "reports" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityPosture_ListReportsResponse : GTLRCollectionObject

/**
 *  A pagination token. To retrieve the next page of results, call the method
 *  again with this token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Report resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Report *> *reports;

/** Locations that were temporarily unavailable and could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRSecurityPosture_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityPosture_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityPosture_Location_Metadata : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRSecurityPosture_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityPosture_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityPosture_Operation_Response : GTLRObject
@end


/**
 *  Metadata for an Operation.
 */
@interface GTLRSecurityPosture_OperationMetadata : GTLRObject

/** Output only. The API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time at which the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time at which the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. An error message. Returned when a PostureDeployment enters a
 *  failure state like UPDATE_FAILED.
 */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  Output only. Whether a request to cancel the operation has been received.
 *  For operations that have been cancelled successfully, the Operation.error
 *  field contains the error code CANCELLED.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. The status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. The server-defined resource path for the target of the
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. The name of the action executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  A predefined organization policy constraint.
 */
@interface GTLRSecurityPosture_OrgPolicyConstraint : GTLRObject

/** Required. A unique identifier for the constraint. */
@property(nonatomic, copy, nullable) NSString *cannedConstraintId;

/** Required. The rules enforced by the constraint. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule *> *policyRules;

@end


/**
 *  A custom organization policy constraint.
 */
@interface GTLRSecurityPosture_OrgPolicyConstraintCustom : GTLRObject

/** Required. Metadata for the constraint. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_GoogleCloudSecuritypostureV1CustomConstraint *customConstraint;

/** Required. The rules enforced by the constraint. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_GoogleCloudSecuritypostureV1PolicyRule *> *policyRules;

@end


/**
 *  The details of a policy, including the constraints that it includes.
 */
@interface GTLRSecurityPosture_Policy : GTLRObject

/** Optional. The compliance standards that the policy helps enforce. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_ComplianceStandard *> *complianceStandards;

/** Required. The constraints that the policy includes. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Constraint *constraint;

/**
 *  Optional. A description of the policy.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. A user-specified identifier for the policy. In a PolicySet, each
 *  policy must have a unique identifier.
 */
@property(nonatomic, copy, nullable) NSString *policyId;

@end


/**
 *  Details of a policy that was violated.
 */
@interface GTLRSecurityPosture_PolicyDetails : GTLRObject

/**
 *  The compliance standards that the policy maps to. For example, `CIS-2.0
 *  1.15`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *complianceStandards;

/**
 *  Information about the constraint that was violated. The format of this
 *  information can change at any time without prior notice. Your application
 *  must not depend on this information in any way.
 */
@property(nonatomic, copy, nullable) NSString *constraint;

/**
 *  The type of constraint that was violated.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_ConstraintTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "CONSTRAINT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_OrgPolicy A
 *        predefined organization policy constraint. (Value: "ORG_POLICY")
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_OrgPolicyCustom
 *        A custom organization policy constraint. (Value: "ORG_POLICY_CUSTOM")
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_RegoPolicy A
 *        custom rego policy constraint. (Value: "REGO_POLICY")
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_SecurityHealthAnalyticsCustomModule
 *        A custom module for Security Health Analytics. (Value:
 *        "SECURITY_HEALTH_ANALYTICS_CUSTOM_MODULE")
 *    @arg @c kGTLRSecurityPosture_PolicyDetails_ConstraintType_SecurityHealthAnalyticsModule
 *        A built-in detector for Security Health Analytics. (Value:
 *        "SECURITY_HEALTH_ANALYTICS_MODULE")
 */
@property(nonatomic, copy, nullable) NSString *constraintType;

/**
 *  A description of the policy.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@end


/**
 *  A group of one or more Policy resources.
 */
@interface GTLRSecurityPosture_PolicySet : GTLRObject

/**
 *  Optional. A description of the policy set.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The Policy resources in the policy set. Each policy must have a
 *  policy_id that's unique within the policy set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Policy *> *policies;

/** Required. An identifier for the policy set. */
@property(nonatomic, copy, nullable) NSString *policySetId;

@end


/**
 *  The details of a posture.
 */
@interface GTLRSecurityPosture_Posture : GTLRObject

/**
 *  Optional. The user-specified annotations for the posture. For details about
 *  the values you can use in an annotation, see [AIP-148: Standard
 *  fields](https://google.aip.dev/148#annotations).
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Posture_Annotations *annotations;

/**
 *  Output only. The categories that the posture belongs to, as determined by
 *  the Security Posture API.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/** Output only. The time at which the posture was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. A description of the posture.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. An opaque identifier for the current version of the posture at the
 *  specified `revision_id`. To prevent concurrent updates from overwriting each
 *  other, always provide the `etag` when you update a posture. You can also
 *  provide the `etag` when you delete a posture, to help ensure that you're
 *  deleting the intended version of the posture.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Identifier. The name of the posture, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The PolicySet resources that the posture includes. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_PolicySet *> *policySets;

/**
 *  Output only. Whether the posture is in the process of being updated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Immutable. An opaque eight-character string that identifies the
 *  revision of the posture. A posture can have multiple revisions; when you
 *  deploy a posture, you deploy a specific revision of the posture.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/**
 *  Required. The state of the posture at the specified `revision_id`.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_Posture_State_Active The posture is complete
 *        and ready to deploy. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityPosture_Posture_State_Deprecated The posture is
 *        deprecated and can no longer be deployed. (Value: "DEPRECATED")
 *    @arg @c kGTLRSecurityPosture_Posture_State_Draft The posture is a draft
 *        and is not ready to deploy. (Value: "DRAFT")
 *    @arg @c kGTLRSecurityPosture_Posture_State_StateUnspecified Default value.
 *        This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The time at which the posture was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The user-specified annotations for the posture. For details about
 *  the values you can use in an annotation, see [AIP-148: Standard
 *  fields](https://google.aip.dev/148#annotations).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityPosture_Posture_Annotations : GTLRObject
@end


/**
 *  Details for a Posture deployment on an organization, folder, or project. You
 *  can deploy at most one posture to each organization, folder, or project. The
 *  parent resource for a posture deployment is always the organization, even if
 *  the deployment applies to a folder or project.
 */
@interface GTLRSecurityPosture_PostureDeployment : GTLRObject

/**
 *  Optional. The user-specified annotations for the posture deployment. For
 *  details about the values you can use in an annotation, see [AIP-148:
 *  Standard fields](https://google.aip.dev/148#annotations).
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_PostureDeployment_Annotations *annotations;

/**
 *  Output only. The categories that the posture deployment belongs to, as
 *  determined by the Security Posture API.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/** Output only. The time at which the posture deployment was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. A description of the posture deployment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. The posture ID that was specified for the deployment. Present
 *  only if the posture deployment is in a failed state.
 */
@property(nonatomic, copy, nullable) NSString *desiredPostureId;

/**
 *  Output only. The revision ID of the posture that was specified for the
 *  deployment. Present only if the deployment is in a failed state.
 */
@property(nonatomic, copy, nullable) NSString *desiredPostureRevisionId;

/**
 *  Optional. An opaque identifier for the current version of the posture
 *  deployment. To prevent concurrent updates from overwriting each other,
 *  always provide the `etag` when you update a posture deployment. You can also
 *  provide the `etag` when you delete a posture deployment, to help ensure that
 *  you're deleting the intended posture deployment.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. A description of why the posture deployment failed. Present
 *  only if the deployment is in a failed state.
 */
@property(nonatomic, copy, nullable) NSString *failureMessage;

/**
 *  Required. Identifier. The name of the posture deployment, in the format
 *  `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The posture used in the deployment, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *postureId;

/** Required. The revision ID of the posture used in the deployment. */
@property(nonatomic, copy, nullable) NSString *postureRevisionId;

/**
 *  Output only. Whether the posture deployment is in the process of being
 *  updated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. The state of the posture deployment.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_Active The posture
 *        deployment is active and in use. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_CreateFailed The
 *        posture deployment could not be created. (Value: "CREATE_FAILED")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_Creating The posture
 *        deployment is being created. (Value: "CREATING")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_DeleteFailed The
 *        posture deployment could not be deleted. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_Deleting The posture
 *        deployment is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_UpdateFailed The
 *        posture deployment could not be updated. (Value: "UPDATE_FAILED")
 *    @arg @c kGTLRSecurityPosture_PostureDeployment_State_Updating The posture
 *        deployment is being updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Required. The organization, folder, or project where the posture is
 *  deployed. Uses one of the following formats: *
 *  `organizations/{organization_number}` * `folders/{folder_number}` *
 *  `projects/{project_number}`
 */
@property(nonatomic, copy, nullable) NSString *targetResource;

/** Output only. The time at which the posture deployment was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The user-specified annotations for the posture deployment. For
 *  details about the values you can use in an annotation, see [AIP-148:
 *  Standard fields](https://google.aip.dev/148#annotations).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityPosture_PostureDeployment_Annotations : GTLRObject
@end


/**
 *  Details of a posture deployment.
 */
@interface GTLRSecurityPosture_PostureDetails : GTLRObject

/** The identifier for the PolicySet that the relevant policy belongs to. */
@property(nonatomic, copy, nullable) NSString *policySet;

/**
 *  The posture used in the deployment, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *posture;

/**
 *  The name of the posture deployment, in the format
 *  `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
 */
@property(nonatomic, copy, nullable) NSString *postureDeployment;

/**
 *  The organization, folder, or project where the posture is deployed. Uses one
 *  of the following formats: * `organizations/{organization_number}` *
 *  `folders/{folder_number}` * `projects/{project_number}`
 */
@property(nonatomic, copy, nullable) NSString *postureDeploymentTargetResource;

/** The revision ID of the posture used in the deployment. */
@property(nonatomic, copy, nullable) NSString *postureRevisionId;

@end


/**
 *  The details of a posture template.
 */
@interface GTLRSecurityPosture_PostureTemplate : GTLRObject

/**
 *  Output only. The categories that the posture template belongs to, as
 *  determined by the Security Posture API.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/**
 *  Output only. A description of the posture template.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. Identifier. The name of the posture template, in the format
 *  `organizations/{organization}/locations/global/postureTemplates/{posture_template}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The PolicySet resources that the posture template includes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_PolicySet *> *policySets;

/**
 *  Output only. A string that identifies the revision of the posture template.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/**
 *  Output only. The state of the posture template at the specified
 *  `revision_id`.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_PostureTemplate_State_Active The posture
 *        template follows the latest controls and standards. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityPosture_PostureTemplate_State_Deprecated The posture
 *        template uses outdated controls and standards. We recommend that you
 *        use a newer revision of the posture template. (Value: "DEPRECATED")
 *    @arg @c kGTLRSecurityPosture_PostureTemplate_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  A name-value pair used as a custom source property.
 */
@interface GTLRSecurityPosture_Property : GTLRObject

/** Required. The name of the custom source property. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The CEL expression for the value of the custom source property.
 *  For resource properties, you can return the value of the property or a
 *  string enclosed in quotation marks.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_Expr *valueExpression;

@end


/**
 *  Details of a report.
 */
@interface GTLRSecurityPosture_Report : GTLRObject

/** Output only. The time at which the report was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. An infrastructure-as-code (IaC) validation report. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_IaCValidationReport *iacValidationReport;

/**
 *  Required. The name of the report, in the format
 *  `organizations/{organization}/locations/global/reports/{report_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time at which the report was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A selector for the resource types to run the detector on.
 */
@interface GTLRSecurityPosture_ResourceSelector : GTLRObject

/**
 *  Required. The resource types to run the detector on. Each custom module can
 *  specify up to 5 resource types.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceTypes;

@end


/**
 *  Set multiple resource types for one policy, for example: resourceTypes:
 *  included: - compute.googleapis.com/Instance - compute.googleapis.com/Disk
 *  Constraint definition contains an empty resource type in order to support
 *  multiple resource types in the policy. Only supports managed constraints.
 *  Method type is `GOVERN_TAGS`. Refer go/multi-resource-support-force-tags-gmc
 *  to get more details.
 */
@interface GTLRSecurityPosture_ResourceTypes : GTLRObject

/**
 *  Optional. The resource types we currently support.
 *  cloud/orgpolicy/customconstraintconfig/prod/resource_types.prototext
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *included;

@end


/**
 *  A custom module for Security Health Analytics.
 */
@interface GTLRSecurityPosture_SecurityHealthAnalyticsCustomModule : GTLRObject

/** Required. Configuration settings for the custom module. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_CustomConfig *config;

/**
 *  Optional. The display name of the custom module. This value is used as the
 *  finding category for all the asset violation findings that the custom module
 *  returns. The display name must contain between 1 and 128 alphanumeric
 *  characters or underscores, and it must start with a lowercase letter.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Immutable. The unique identifier for the custom module.
 *  Contains 1 to 20 digits.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Whether the custom module is enabled at a specified level of the resource
 *  hierarchy.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_Disabled
 *        The detector or custom module is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_Enabled
 *        The detector or custom module is enabled. (Value: "ENABLED")
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsCustomModule_ModuleEnablementState_EnablementStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "ENABLEMENT_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *moduleEnablementState;

@end


/**
 *  A built-in detector for Security Health Analytics.
 */
@interface GTLRSecurityPosture_SecurityHealthAnalyticsModule : GTLRObject

/**
 *  Whether the detector is enabled at a specified level of the resource
 *  hierarchy.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_Disabled
 *        The detector or custom module is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_Enabled
 *        The detector or custom module is enabled. (Value: "ENABLED")
 *    @arg @c kGTLRSecurityPosture_SecurityHealthAnalyticsModule_ModuleEnablementState_EnablementStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "ENABLEMENT_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *moduleEnablementState;

/**
 *  Required. The name of the detector. For example,
 *  `BIGQUERY_TABLE_CMEK_DISABLED`. This field is also used as the finding
 *  category for all the asset violation findings that the detector returns.
 */
@property(nonatomic, copy, nullable) NSString *moduleName;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRSecurityPosture_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityPosture_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRSecurityPosture_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityPosture_Status_Details_Item : GTLRObject
@end


/**
 *  Details of a violation.
 */
@interface GTLRSecurityPosture_Violation : GTLRObject

/**
 *  The full resource name of the asset that caused the violation. For details
 *  about the format of the full resource name for each asset type, see
 *  [Resource name
 *  format](https://cloud.google.com/asset-inventory/docs/resource-name-format).
 */
@property(nonatomic, copy, nullable) NSString *assetId;

/** A description of the steps that you can take to fix the violation. */
@property(nonatomic, copy, nullable) NSString *nextSteps;

/** The policy that was violated. */
@property(nonatomic, copy, nullable) NSString *policyId;

/**
 *  The severity of the violation.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityPosture_Violation_Severity_Critical Critical
 *        severity. (Value: "CRITICAL")
 *    @arg @c kGTLRSecurityPosture_Violation_Severity_High High severity.
 *        (Value: "HIGH")
 *    @arg @c kGTLRSecurityPosture_Violation_Severity_Low Low severity. (Value:
 *        "LOW")
 *    @arg @c kGTLRSecurityPosture_Violation_Severity_Medium Medium severity.
 *        (Value: "MEDIUM")
 *    @arg @c kGTLRSecurityPosture_Violation_Severity_SeverityUnspecified
 *        Default value. This value is unused. (Value: "SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/** Details of the Cloud Asset Inventory asset that caused the violation. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_AssetDetails *violatedAsset;

/** Details of the policy that was violated. */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_PolicyDetails *violatedPolicy;

/**
 *  Details for the posture that was violated. This field is present only if the
 *  violated policy belongs to a deployed posture.
 */
@property(nonatomic, strong, nullable) GTLRSecurityPosture_PostureDetails *violatedPosture;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
