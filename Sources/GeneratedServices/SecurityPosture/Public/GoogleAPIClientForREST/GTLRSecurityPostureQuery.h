// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Posture API (securityposture/v1)
// Description:
//   Defines, assesses, and monitors the overall status of your security in
//   Google Cloud. You can use security postures to evaluate your current cloud
//   security against defined benchmarks and help maintain the level of security
//   that your organization requires.
// Documentation:
//   https://cloud.google.com/security-command-center

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRSecurityPostureObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Security Posture query classes.
 */
@interface GTLRSecurityPostureQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: securityposture.organizations.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsOperationsCancel : GTLRSecurityPostureQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRSecurityPosture_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: securityposture.organizations.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsOperationsDelete : GTLRSecurityPostureQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: securityposture.organizations.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsOperationsGet : GTLRSecurityPostureQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: securityposture.organizations.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsOperationsList : GTLRSecurityPostureQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSecurityPosture_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new PostureDeployment in a given project and location.
 *
 *  Method: securityposture.organizations.locations.postureDeployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsCreate : GTLRSecurityPostureQuery

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. An identifier for the posture deployment. */
@property(nonatomic, copy, nullable) NSString *postureDeploymentId;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Creates a new PostureDeployment in a given project and location.
 *
 *  @param object The @c GTLRSecurityPosture_PostureDeployment to include in the
 *    query.
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_PostureDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a PostureDeployment.
 *
 *  Method: securityposture.organizations.locations.postureDeployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsDelete : GTLRSecurityPostureQuery

/**
 *  Optional. An opaque identifier for the current version of the posture
 *  deployment. If you provide this value, then it must match the existing
 *  value. If the values don't match, then the request fails with an ABORTED
 *  error. If you omit this value, then the posture deployment is deleted
 *  regardless of its current `etag` value.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the posture deployment, in the format
 *  `organizations/{organization}/locations/global/postureDeployments/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Deletes a PostureDeployment.
 *
 *  @param name Required. The name of the posture deployment, in the format
 *    `organizations/{organization}/locations/global/postureDeployments/{posture_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details for a PostureDeployment.
 *
 *  Method: securityposture.organizations.locations.postureDeployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsGet : GTLRSecurityPostureQuery

/**
 *  Required. The name of the PostureDeployment, in the format
 *  `organizations/{organization}/locations/global/postureDeployments/{posture_deployment_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_PostureDeployment.
 *
 *  Gets details for a PostureDeployment.
 *
 *  @param name Required. The name of the PostureDeployment, in the format
 *    `organizations/{organization}/locations/global/postureDeployments/{posture_deployment_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every PostureDeployment in a project and location.
 *
 *  Method: securityposture.organizations.locations.postureDeployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsList : GTLRSecurityPostureQuery

/**
 *  Optional. A filter to apply to the list of postures, in the format defined
 *  in [AIP-160: Filtering](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of posture deployments to return. The default
 *  value is `500`. If you exceed the maximum value of `1000`, then the service
 *  uses the maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous request to list
 *  posture deployments. Provide this token to retrieve the next page of
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_ListPostureDeploymentsResponse.
 *
 *  Lists every PostureDeployment in a project and location.
 *
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing PostureDeployment. To prevent concurrent updates from
 *  overwriting each other, always follow the read-modify-write pattern when you
 *  update a posture deployment: 1. Call GetPostureDeployment to get the current
 *  version of the deployment. 2. Update the fields in the deployment as needed.
 *  3. Call UpdatePostureDeployment to update the deployment. Ensure that your
 *  request includes the `etag` value from the GetPostureDeployment response.
 *  **Important:** If you omit the `etag` when you call UpdatePostureDeployment,
 *  then the updated deployment unconditionally overwrites the existing
 *  deployment.
 *
 *  Method: securityposture.organizations.locations.postureDeployments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsPatch : GTLRSecurityPostureQuery

/**
 *  Required. Identifier. The name of the posture deployment, in the format
 *  `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The fields in the PostureDeployment to update. You can update only
 *  the following fields: * PostureDeployment.posture_id *
 *  PostureDeployment.posture_revision_id
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Updates an existing PostureDeployment. To prevent concurrent updates from
 *  overwriting each other, always follow the read-modify-write pattern when you
 *  update a posture deployment: 1. Call GetPostureDeployment to get the current
 *  version of the deployment. 2. Update the fields in the deployment as needed.
 *  3. Call UpdatePostureDeployment to update the deployment. Ensure that your
 *  request includes the `etag` value from the GetPostureDeployment response.
 *  **Important:** If you omit the `etag` when you call UpdatePostureDeployment,
 *  then the updated deployment unconditionally overwrites the existing
 *  deployment.
 *
 *  @param object The @c GTLRSecurityPosture_PostureDeployment to include in the
 *    query.
 *  @param name Required. Identifier. The name of the posture deployment, in the
 *    format
 *    `organizations/{organization}/locations/global/postureDeployments/{deployment_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureDeploymentsPatch
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_PostureDeployment *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Posture.
 *
 *  Method: securityposture.organizations.locations.postures.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesCreate : GTLRSecurityPostureQuery

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. An identifier for the posture. */
@property(nonatomic, copy, nullable) NSString *postureId;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Creates a new Posture.
 *
 *  @param object The @c GTLRSecurityPosture_Posture to include in the query.
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesCreate
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_Posture *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes all revisions of a Posture. You can only delete a posture if none of
 *  its revisions are deployed.
 *
 *  Method: securityposture.organizations.locations.postures.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesDelete : GTLRSecurityPostureQuery

/**
 *  Optional. An opaque identifier for the current version of the posture. If
 *  you provide this value, then it must match the existing value. If the values
 *  don't match, then the request fails with an ABORTED error. If you omit this
 *  value, then the posture is deleted regardless of its current `etag` value.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the Posture, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Deletes all revisions of a Posture. You can only delete a posture if none of
 *  its revisions are deployed.
 *
 *  @param name Required. The name of the Posture, in the format
 *    `organizations/{organization}/locations/global/postures/{posture_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Extracts existing policies from an organization, folder, or project, and
 *  applies them to another organization, folder, or project as a Posture. If
 *  the other organization, folder, or project already has a posture, then the
 *  result of the long-running operation is an ALREADY_EXISTS error.
 *
 *  Method: securityposture.organizations.locations.postures.extract
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesExtract : GTLRSecurityPostureQuery

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Extracts existing policies from an organization, folder, or project, and
 *  applies them to another organization, folder, or project as a Posture. If
 *  the other organization, folder, or project already has a posture, then the
 *  result of the long-running operation is an ALREADY_EXISTS error.
 *
 *  @param object The @c GTLRSecurityPosture_ExtractPostureRequest to include in
 *    the query.
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesExtract
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_ExtractPostureRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a single revision of a Posture.
 *
 *  Method: securityposture.organizations.locations.postures.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesGet : GTLRSecurityPostureQuery

/**
 *  Required. The name of the Posture, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The posture revision to retrieve. If not specified, the most
 *  recently updated revision is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/**
 *  Fetches a @c GTLRSecurityPosture_Posture.
 *
 *  Gets a single revision of a Posture.
 *
 *  @param name Required. The name of the Posture, in the format
 *    `organizations/{organization}/locations/global/postures/{posture_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the most recent revisions of all Posture resources in a specified
 *  organization and location.
 *
 *  Method: securityposture.organizations.locations.postures.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesList : GTLRSecurityPostureQuery

/**
 *  Optional. A filter to apply to the list of postures, in the format defined
 *  in [AIP-160: Filtering](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of postures to return. The default value is `500`. If you
 *  exceed the maximum value of `1000`, then the service uses the maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A pagination token returned from a previous request to list postures.
 *  Provide this token to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_ListPosturesResponse.
 *
 *  Lists the most recent revisions of all Posture resources in a specified
 *  organization and location.
 *
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all revisions of a single Posture.
 *
 *  Method: securityposture.organizations.locations.postures.listRevisions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesListRevisions : GTLRSecurityPostureQuery

/**
 *  Required. The name of the Posture, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The maximum number of posture revisions to return. The default
 *  value is `500`. If you exceed the maximum value of `1000`, then the service
 *  uses the maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token from a previous request to list posture
 *  revisions. Provide this token to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSecurityPosture_ListPostureRevisionsResponse.
 *
 *  Lists all revisions of a single Posture.
 *
 *  @param name Required. The name of the Posture, in the format
 *    `organizations/{organization}/locations/global/postures/{posture_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesListRevisions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a revision of an existing Posture. If the posture revision that you
 *  update is currently deployed, then a new revision of the posture is created.
 *  To prevent concurrent updates from overwriting each other, always follow the
 *  read-modify-write pattern when you update a posture: 1. Call GetPosture to
 *  get the current version of the posture. 2. Update the fields in the posture
 *  as needed. 3. Call UpdatePosture to update the posture. Ensure that your
 *  request includes the `etag` value from the GetPosture response.
 *  **Important:** If you omit the `etag` when you call UpdatePosture, then the
 *  updated posture unconditionally overwrites the existing posture.
 *
 *  Method: securityposture.organizations.locations.postures.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPosturesPatch : GTLRSecurityPostureQuery

/**
 *  Required. Identifier. The name of the posture, in the format
 *  `organizations/{organization}/locations/global/postures/{posture_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The revision ID of the posture to update. If the posture revision
 *  that you update is currently deployed, then a new revision of the posture is
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/**
 *  Required. The fields in the Posture to update. You can update only the
 *  following fields: * Posture.description * Posture.policy_sets *
 *  Posture.state
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Updates a revision of an existing Posture. If the posture revision that you
 *  update is currently deployed, then a new revision of the posture is created.
 *  To prevent concurrent updates from overwriting each other, always follow the
 *  read-modify-write pattern when you update a posture: 1. Call GetPosture to
 *  get the current version of the posture. 2. Update the fields in the posture
 *  as needed. 3. Call UpdatePosture to update the posture. Ensure that your
 *  request includes the `etag` value from the GetPosture response.
 *  **Important:** If you omit the `etag` when you call UpdatePosture, then the
 *  updated posture unconditionally overwrites the existing posture.
 *
 *  @param object The @c GTLRSecurityPosture_Posture to include in the query.
 *  @param name Required. Identifier. The name of the posture, in the format
 *    `organizations/{organization}/locations/global/postures/{posture_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPosturesPatch
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_Posture *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a single revision of a PostureTemplate.
 *
 *  Method: securityposture.organizations.locations.postureTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesGet : GTLRSecurityPostureQuery

/**
 *  Required. The name of the PostureTemplate, in the format
 *  `organizations/{organization}/locations/global/postureTemplates/{posture_template}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The posture template revision to retrieve. If not specified, the
 *  most recently updated revision is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *revisionId;

/**
 *  Fetches a @c GTLRSecurityPosture_PostureTemplate.
 *
 *  Gets a single revision of a PostureTemplate.
 *
 *  @param name Required. The name of the PostureTemplate, in the format
 *    `organizations/{organization}/locations/global/postureTemplates/{posture_template}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every PostureTemplate in a given organization and location.
 *
 *  Method: securityposture.organizations.locations.postureTemplates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesList : GTLRSecurityPostureQuery

/**
 *  Optional. A filter to apply to the list of postures, in the format defined
 *  in [AIP-160: Filtering](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of posture templates to return. The default
 *  value is `500`. If you exceed the maximum value of `1000`, then the service
 *  uses the maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous request to list
 *  posture templates. Provide this token to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_ListPostureTemplatesResponse.
 *
 *  Lists every PostureTemplate in a given organization and location.
 *
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsPostureTemplatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Validates a specified infrastructure-as-code (IaC) configuration, and
 *  creates a Report with the validation results. Only Terraform configurations
 *  are supported. Only modified assets are validated.
 *
 *  Method: securityposture.organizations.locations.reports.createIaCValidationReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsReportsCreateIaCValidationReport : GTLRSecurityPostureQuery

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_Operation.
 *
 *  Validates a specified infrastructure-as-code (IaC) configuration, and
 *  creates a Report with the validation results. Only Terraform configurations
 *  are supported. Only modified assets are validated.
 *
 *  @param object The @c GTLRSecurityPosture_CreateIaCValidationReportRequest to
 *    include in the query.
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsReportsCreateIaCValidationReport
 */
+ (instancetype)queryWithObject:(GTLRSecurityPosture_CreateIaCValidationReportRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details for a Report.
 *
 *  Method: securityposture.organizations.locations.reports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsReportsGet : GTLRSecurityPostureQuery

/**
 *  Required. The name of the report, in the format
 *  `organizations/{organization}/locations/global/reports/{report_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Report.
 *
 *  Gets details for a Report.
 *
 *  @param name Required. The name of the report, in the format
 *    `organizations/{organization}/locations/global/reports/{report_id}`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsReportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every Report in a given organization and location.
 *
 *  Method: securityposture.organizations.locations.reports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_OrganizationsLocationsReportsList : GTLRSecurityPostureQuery

/**
 *  Optional. A filter to apply to the list of reports, in the format defined in
 *  [AIP-160: Filtering](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of reports to return. The default value is
 *  `500`. If you exceed the maximum value of `1000`, then the service uses the
 *  maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous request to list
 *  reports. Provide this token to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name, in the format
 *  `organizations/{organization}/locations/global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSecurityPosture_ListReportsResponse.
 *
 *  Lists every Report in a given organization and location.
 *
 *  @param parent Required. The parent resource name, in the format
 *    `organizations/{organization}/locations/global`.
 *
 *  @return GTLRSecurityPostureQuery_OrganizationsLocationsReportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about a location.
 *
 *  Method: securityposture.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_ProjectsLocationsGet : GTLRSecurityPostureQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSecurityPosture_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRSecurityPostureQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: securityposture.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSecurityPostureCloudPlatform
 */
@interface GTLRSecurityPostureQuery_ProjectsLocationsList : GTLRSecurityPostureQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSecurityPosture_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRSecurityPostureQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
