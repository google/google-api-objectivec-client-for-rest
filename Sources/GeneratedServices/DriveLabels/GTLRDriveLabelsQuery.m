// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Drive Labels API (drivelabels/v2)
// Description:
//   An API for managing Drive Labels
// Documentation:
//   https://developers.google.com/drive/labels

#import <GoogleAPIClientForREST/GTLRDriveLabelsQuery.h>

// ----------------------------------------------------------------------------
// Constants

// minimumRole
NSString * const kGTLRDriveLabelsMinimumRoleApplier            = @"APPLIER";
NSString * const kGTLRDriveLabelsMinimumRoleEditor             = @"EDITOR";
NSString * const kGTLRDriveLabelsMinimumRoleLabelRoleUnspecified = @"LABEL_ROLE_UNSPECIFIED";
NSString * const kGTLRDriveLabelsMinimumRoleOrganizer          = @"ORGANIZER";
NSString * const kGTLRDriveLabelsMinimumRoleReader             = @"READER";

// view
NSString * const kGTLRDriveLabelsViewLabelViewBasic = @"LABEL_VIEW_BASIC";
NSString * const kGTLRDriveLabelsViewLabelViewFull  = @"LABEL_VIEW_FULL";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRDriveLabelsQuery

@dynamic fields;

@end

@implementation GTLRDriveLabelsQuery_LabelsCreate

@dynamic languageCode, useAdminAccess;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2Label *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v2/labels";
  GTLRDriveLabelsQuery_LabelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.create";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsDelete

@dynamic name, useAdminAccess, writeControlRequiredRevisionId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"writeControlRequiredRevisionId" : @"writeControl.requiredRevisionId" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDriveLabelsQuery_LabelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleProtobufEmpty class];
  query.loggingName = @"drivelabels.labels.delete";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsDelta

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2DeltaUpdateLabelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:delta";
  GTLRDriveLabelsQuery_LabelsDelta *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2DeltaUpdateLabelResponse class];
  query.loggingName = @"drivelabels.labels.delta";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsDisable

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2DisableLabelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:disable";
  GTLRDriveLabelsQuery_LabelsDisable *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.disable";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsEnable

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2EnableLabelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:enable";
  GTLRDriveLabelsQuery_LabelsEnable *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.enable";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsGet

@dynamic languageCode, name, useAdminAccess, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDriveLabelsQuery_LabelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.get";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsList

@dynamic customer, languageCode, minimumRole, pageSize, pageToken,
         publishedOnly, useAdminAccess, view;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/labels";
  GTLRDriveLabelsQuery_LabelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2ListLabelsResponse class];
  query.loggingName = @"drivelabels.labels.list";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsLocksList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/locks";
  GTLRDriveLabelsQuery_LabelsLocksList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2ListLabelLocksResponse class];
  query.loggingName = @"drivelabels.labels.locks.list";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPermissionsBatchDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions:batchDelete";
  GTLRDriveLabelsQuery_LabelsPermissionsBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleProtobufEmpty class];
  query.loggingName = @"drivelabels.labels.permissions.batchDelete";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPermissionsBatchUpdate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions:batchUpdate";
  GTLRDriveLabelsQuery_LabelsPermissionsBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse class];
  query.loggingName = @"drivelabels.labels.permissions.batchUpdate";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPermissionsCreate

@dynamic parent, useAdminAccess;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsPermissionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission class];
  query.loggingName = @"drivelabels.labels.permissions.create";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPermissionsDelete

@dynamic name, useAdminAccess;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDriveLabelsQuery_LabelsPermissionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleProtobufEmpty class];
  query.loggingName = @"drivelabels.labels.permissions.delete";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPermissionsList

@dynamic pageSize, pageToken, parent, useAdminAccess;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsPermissionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2ListLabelPermissionsResponse class];
  query.loggingName = @"drivelabels.labels.permissions.list";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsPublish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2PublishLabelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:publish";
  GTLRDriveLabelsQuery_LabelsPublish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.publish";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsLocksList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/locks";
  GTLRDriveLabelsQuery_LabelsRevisionsLocksList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2ListLabelLocksResponse class];
  query.loggingName = @"drivelabels.labels.revisions.locks.list";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsPermissionsBatchDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions:batchDelete";
  GTLRDriveLabelsQuery_LabelsRevisionsPermissionsBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleProtobufEmpty class];
  query.loggingName = @"drivelabels.labels.revisions.permissions.batchDelete";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsPermissionsBatchUpdate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions:batchUpdate";
  GTLRDriveLabelsQuery_LabelsRevisionsPermissionsBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse class];
  query.loggingName = @"drivelabels.labels.revisions.permissions.batchUpdate";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsPermissionsCreate

@dynamic parent, useAdminAccess;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsRevisionsPermissionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission class];
  query.loggingName = @"drivelabels.labels.revisions.permissions.create";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsPermissionsDelete

@dynamic name, useAdminAccess;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDriveLabelsQuery_LabelsRevisionsPermissionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleProtobufEmpty class];
  query.loggingName = @"drivelabels.labels.revisions.permissions.delete";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsPermissionsList

@dynamic pageSize, pageToken, parent, useAdminAccess;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsRevisionsPermissionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2ListLabelPermissionsResponse class];
  query.loggingName = @"drivelabels.labels.revisions.permissions.list";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsRevisionsUpdatePermissions

@dynamic parent, useAdminAccess;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsRevisionsUpdatePermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission class];
  query.loggingName = @"drivelabels.labels.revisions.updatePermissions";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsUpdateLabelCopyMode

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2UpdateLabelCopyModeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:updateLabelCopyMode";
  GTLRDriveLabelsQuery_LabelsUpdateLabelCopyMode *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2Label class];
  query.loggingName = @"drivelabels.labels.updateLabelCopyMode";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LabelsUpdatePermissions

@dynamic parent, useAdminAccess;

+ (instancetype)queryWithObject:(GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/permissions";
  GTLRDriveLabelsQuery_LabelsUpdatePermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelPermission class];
  query.loggingName = @"drivelabels.labels.updatePermissions";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_LimitsGetLabel

@dynamic name;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/limits/label";
  GTLRDriveLabelsQuery_LimitsGetLabel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2LabelLimits class];
  query.loggingName = @"drivelabels.limits.getLabel";
  return query;
}

@end

@implementation GTLRDriveLabelsQuery_UsersGetCapabilities

@dynamic customer, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDriveLabelsQuery_UsersGetCapabilities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDriveLabels_GoogleAppsDriveLabelsV2UserCapabilities class];
  query.loggingName = @"drivelabels.users.getCapabilities";
  return query;
}

@end
