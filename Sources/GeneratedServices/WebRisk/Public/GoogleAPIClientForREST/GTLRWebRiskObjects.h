// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Web Risk API (webrisk/v1)
// Documentation:
//   https://cloud.google.com/web-risk/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum;
@class GTLRWebRisk_GoogleCloudWebriskV1RawHashes;
@class GTLRWebRisk_GoogleCloudWebriskV1RawIndices;
@class GTLRWebRisk_GoogleCloudWebriskV1RiceDeltaEncoding;
@class GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash;
@class GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri;
@class GTLRWebRisk_GoogleCloudWebriskV1Submission;
@class GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryAdditions;
@class GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryRemovals;
@class GTLRWebRisk_GoogleLongrunningOperation;
@class GTLRWebRisk_GoogleLongrunningOperation_Metadata;
@class GTLRWebRisk_GoogleLongrunningOperation_Response;
@class GTLRWebRisk_GoogleRpcStatus;
@class GTLRWebRisk_GoogleRpcStatus_Details_Item;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse.responseType

/**
 *  Partial updates are applied to the client's existing local database.
 *
 *  Value: "DIFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_Diff;
/**
 *  Full updates resets the client's entire local database. This means that
 *  either the client had no state, was seriously out-of-date, or the client is
 *  believed to be corrupt.
 *
 *  Value: "RESET"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_Reset;
/**
 *  Unknown.
 *
 *  Value: "RESPONSE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_ResponseTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash.threatTypes

/**
 *  Malware targeting any platform.
 *
 *  Value: "MALWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash_ThreatTypes_Malware;
/**
 *  Social engineering targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash_ThreatTypes_SocialEngineering;
/**
 *  A list of extended coverage social engineering URIs targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash_ThreatTypes_SocialEngineeringExtendedCoverage;
/**
 *  No entries should match this threat type. This threat type is unused.
 *
 *  Value: "THREAT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash_ThreatTypes_ThreatTypeUnspecified;
/**
 *  Unwanted software targeting any platform.
 *
 *  Value: "UNWANTED_SOFTWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash_ThreatTypes_UnwantedSoftware;

// ----------------------------------------------------------------------------
// GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri.threatTypes

/**
 *  Malware targeting any platform.
 *
 *  Value: "MALWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri_ThreatTypes_Malware;
/**
 *  Social engineering targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri_ThreatTypes_SocialEngineering;
/**
 *  A list of extended coverage social engineering URIs targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri_ThreatTypes_SocialEngineeringExtendedCoverage;
/**
 *  No entries should match this threat type. This threat type is unused.
 *
 *  Value: "THREAT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri_ThreatTypes_ThreatTypeUnspecified;
/**
 *  Unwanted software targeting any platform.
 *
 *  Value: "UNWANTED_SOFTWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri_ThreatTypes_UnwantedSoftware;

// ----------------------------------------------------------------------------
// GTLRWebRisk_GoogleCloudWebriskV1Submission.threatTypes

/**
 *  Malware targeting any platform.
 *
 *  Value: "MALWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1Submission_ThreatTypes_Malware;
/**
 *  Social engineering targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1Submission_ThreatTypes_SocialEngineering;
/**
 *  A list of extended coverage social engineering URIs targeting any platform.
 *
 *  Value: "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1Submission_ThreatTypes_SocialEngineeringExtendedCoverage;
/**
 *  No entries should match this threat type. This threat type is unused.
 *
 *  Value: "THREAT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1Submission_ThreatTypes_ThreatTypeUnspecified;
/**
 *  Unwanted software targeting any platform.
 *
 *  Value: "UNWANTED_SOFTWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1Submission_ThreatTypes_UnwantedSoftware;

// ----------------------------------------------------------------------------
// GTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata.state

/**
 *  The operation was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Cancelled;
/**
 *  The operation was closed with no action taken.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Closed;
/**
 *  The operation finished with a failure status.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Failed;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Running;
/**
 *  Default unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_StateUnspecified;
/**
 *  The operation finished with a success status.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Succeeded;

/**
 *  GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse : GTLRObject

/** A set of entries to add to a local threat type's list. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryAdditions *additions;

/**
 *  The expected SHA256 hash of the client state; that is, of the sorted list of
 *  all hashes present in the database after applying the provided diff. If the
 *  client state doesn't match the expected state, the client must discard this
 *  diff and retry later.
 */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum *checksum;

/**
 *  The new opaque client version token. This should be retained by the client
 *  and passed into the next call of ComputeThreatListDiff as 'version_token'. A
 *  separate version token should be stored and used for each threatList.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *newVersionToken NS_RETURNS_NOT_RETAINED;

/**
 *  The soonest the client should wait before issuing any diff request. Querying
 *  sooner is unlikely to produce a meaningful diff. Waiting longer is
 *  acceptable considering the use case. If this field is not set clients may
 *  update as soon as they want.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *recommendedNextDiff;

/**
 *  A set of entries to remove from a local threat type's list. This field may
 *  be empty.
 */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryRemovals *removals;

/**
 *  The type of response. This may indicate that an action must be taken by the
 *  client when the response is received.
 *
 *  Likely values:
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_Diff
 *        Partial updates are applied to the client's existing local database.
 *        (Value: "DIFF")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_Reset
 *        Full updates resets the client's entire local database. This means
 *        that either the client had no state, was seriously out-of-date, or the
 *        client is believed to be corrupt. (Value: "RESET")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponse_ResponseType_ResponseTypeUnspecified
 *        Unknown. (Value: "RESPONSE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *responseType;

@end


/**
 *  The expected state of a client's local database.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum : GTLRObject

/**
 *  The SHA256 hash of the client state; that is, of the sorted list of all
 *  hashes present in the database.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *sha256;

@end


/**
 *  The uncompressed threat entries in hash format. Hashes can be anywhere from
 *  4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are
 *  lengthened if they collide with the hash of a popular URI. Used for sending
 *  ThreatEntryAdditons to clients that do not support compression, or when
 *  sending non-4-byte hashes to clients that do support compression.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1RawHashes : GTLRObject

/**
 *  The number of bytes for each prefix encoded below. This field can be
 *  anywhere from 4 (shortest prefix) to 32 (full SHA256 hash). In practice this
 *  is almost always 4, except in exceptional circumstances.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *prefixSize;

/**
 *  The hashes, in binary format, concatenated into one long string. Hashes are
 *  sorted in lexicographic order. For JSON API users, hashes are
 *  base64-encoded.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *rawHashes;

@end


/**
 *  A set of raw indices to remove from a local list.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1RawIndices : GTLRObject

/**
 *  The indices to remove from a lexicographically-sorted local list.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *indices;

@end


/**
 *  The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or
 *  compressed removal indices.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1RiceDeltaEncoding : GTLRObject

/**
 *  The encoded deltas that are encoded using the Golomb-Rice coder.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *encodedData;

/**
 *  The number of entries that are delta encoded in the encoded data. If only a
 *  single integer was encoded, this will be zero and the single value will be
 *  stored in `first_value`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *entryCount;

/**
 *  The offset of the first entry in the encoded data, or, if only a single
 *  integer was encoded, that single integer's value. If the field is empty or
 *  missing, assume zero.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *firstValue;

/**
 *  The Golomb-Rice parameter, which is a number between 2 and 28. This field is
 *  missing (that is, zero) if `num_entries` is zero.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *riceParameter;

@end


/**
 *  GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponse
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponse : GTLRObject

/**
 *  For requested entities that did not match the threat list, how long to cache
 *  the response until.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *negativeExpireTime;

/**
 *  The full hashes that matched the requested prefixes. The hash will be
 *  populated in the key.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash *> *threats;

@end


/**
 *  Contains threat information on a matching hash.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SearchHashesResponseThreatHash : GTLRObject

/**
 *  The cache lifetime for the returned match. Clients must not cache this
 *  response past this timestamp to avoid false positives.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  A 32 byte SHA256 hash. This field is in binary format. For JSON requests,
 *  hashes are base64-encoded.
 *
 *  Remapped to 'hashProperty' to avoid NSObject's 'hash'.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *hashProperty;

/**
 *  The ThreatList this threat belongs to. This must contain at least one entry.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *threatTypes;

@end


/**
 *  GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponse
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponse : GTLRObject

/** The threat list matches. This might be empty if the URI is on no list. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri *threat;

@end


/**
 *  Contains threat information on a matching uri.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SearchUrisResponseThreatUri : GTLRObject

/**
 *  The cache lifetime for the returned match. Clients must not cache this
 *  response past this timestamp to avoid false positives.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/** The ThreatList this threat belongs to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *threatTypes;

@end


/**
 *  Wraps a URI that might be displaying malicious content.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1Submission : GTLRObject

/**
 *  ThreatTypes found to be associated with the submitted URI after reviewing
 *  it. This might be empty if the URI was not added to any list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *threatTypes;

/**
 *  Required. The URI that is being reported for malicious content to be
 *  analyzed.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Metadata for the Submit URI long-running operation.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata : GTLRObject

/** Creation time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The state of the operation.
 *
 *  Likely values:
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Cancelled
 *        The operation was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Closed
 *        The operation was closed with no action taken. (Value: "CLOSED")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Failed
 *        The operation finished with a failure status. (Value: "FAILED")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_StateUnspecified
 *        Default unspecified state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRWebRisk_GoogleCloudWebriskV1SubmitUriMetadata_State_Succeeded
 *        The operation finished with a success status. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Latest update time of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request to send a potentially malicious URI to WebRisk.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1SubmitUriRequest : GTLRObject

/** Required. The submission that contains the URI to be scanned. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1Submission *submission;

@end


/**
 *  Contains the set of entries to add to a local database. May contain a
 *  combination of compressed and raw data in a single response.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryAdditions : GTLRObject

/**
 *  The raw SHA256-formatted entries. Repeated to allow returning sets of hashes
 *  with different prefix sizes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebRisk_GoogleCloudWebriskV1RawHashes *> *rawHashes;

/**
 *  The encoded 4-byte prefixes of SHA256-formatted entries, using a Golomb-Rice
 *  encoding. The hashes are converted to uint32, sorted in ascending order,
 *  then delta encoded and stored as encoded_data.
 */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1RiceDeltaEncoding *riceHashes;

@end


/**
 *  Contains the set of entries to remove from a local database.
 */
@interface GTLRWebRisk_GoogleCloudWebriskV1ThreatEntryRemovals : GTLRObject

/** The raw removal indices for a local list. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1RawIndices *rawIndices;

/**
 *  The encoded local, lexicographically-sorted list indices, using a
 *  Golomb-Rice encoding. Used for sending compressed removal indices. The
 *  removal indices (uint32) are sorted in ascending order, then delta encoded
 *  and stored as encoded_data.
 */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleCloudWebriskV1RiceDeltaEncoding *riceIndices;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRWebRisk_GoogleLongrunningCancelOperationRequest : GTLRObject
@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWebRisk_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebRisk_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRWebRisk_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleRpcStatus *error;

/** Contains a `SubmitUriMetadata` object. */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleLongrunningOperation_Metadata *metadata;

/** Matches the `/v1/{project-name}/operations/{operation-id}` pattern. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRWebRisk_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Contains a `SubmitUriMetadata` object.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWebRisk_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWebRisk_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRWebRisk_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRWebRisk_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWebRisk_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRWebRisk_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWebRisk_GoogleRpcStatus_Details_Item : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
