// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Location Finder API (cloudlocationfinder/v1alpha)
// Documentation:
//   https://cloud.google.com/location-finder/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Location Finder query classes.
 */
@interface GTLRCloudLocationFinderQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieves a resource containing information about a cloud location.
 *
 *  Method: cloudlocationfinder.projects.locations.cloudLocations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudLocationFinderCloudPlatform
 */
@interface GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsGet : GTLRCloudLocationFinderQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudLocationFinder_CloudLocation.
 *
 *  Retrieves a resource containing information about a cloud location.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists cloud locations under a given project and location.
 *
 *  Method: cloudlocationfinder.projects.locations.cloudLocations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudLocationFinderCloudPlatform
 */
@interface GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsList : GTLRCloudLocationFinderQuery

/**
 *  Optional. A filter expression that filters resources listed in the response.
 *  The expression is in the form of field=value. For example,
 *  'cloud_location_type=CLOUD_LOCATION_TYPE_REGION'. Multiple filter queries
 *  are space-separated. For example,
 *  'cloud_location_type=CLOUD_LOCATION_TYPE_REGION territory_code="US"' By
 *  default, each expression is an AND expression. However, you can include AND
 *  and OR expressions explicitly.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of cloud locations to return per page. The
 *  service might return fewer cloud locations than this value. If unspecified,
 *  server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 *  Provide page token returned by a previous 'ListCloudLocations' call to
 *  retrieve the next page of results. When paginating, all other parameters
 *  provided to 'ListCloudLocations' must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of cloud locations. Format:
 *  projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudLocationFinder_ListCloudLocationsResponse.
 *
 *  Lists cloud locations under a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of cloud
 *    locations. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Searches for cloud locations from a given source location.
 *
 *  Method: cloudlocationfinder.projects.locations.cloudLocations.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudLocationFinderCloudPlatform
 */
@interface GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsSearch : GTLRCloudLocationFinderQuery

/**
 *  Optional. The maximum number of cloud locations to return. The service might
 *  return fewer cloud locations than this value. If unspecified, server will
 *  pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 *  Provide Page token returned by a previous 'ListCloudLocations' call to
 *  retrieve the next page of results. When paginating, all other parameters
 *  provided to 'ListCloudLocations' must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of cloud locations. Format:
 *  projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The query string in search query syntax. While filter is used to
 *  filter the search results by attributes, query is used to specify the search
 *  requirements.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required. The source cloud location to search from. Example search can be
 *  searching nearby cloud locations from the source cloud location by latency.
 */
@property(nonatomic, copy, nullable) NSString *sourceCloudLocation;

/**
 *  Fetches a @c GTLRCloudLocationFinder_SearchCloudLocationsResponse.
 *
 *  Searches for cloud locations from a given source location.
 *
 *  @param parent Required. The parent, which owns this collection of cloud
 *    locations. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRCloudLocationFinderQuery_ProjectsLocationsCloudLocationsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about a location.
 *
 *  Method: cloudlocationfinder.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudLocationFinderCloudPlatform
 */
@interface GTLRCloudLocationFinderQuery_ProjectsLocationsGet : GTLRCloudLocationFinderQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudLocationFinder_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRCloudLocationFinderQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: cloudlocationfinder.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudLocationFinderCloudPlatform
 */
@interface GTLRCloudLocationFinderQuery_ProjectsLocationsList : GTLRCloudLocationFinderQuery

/**
 *  Optional. A list of extra location types that should be used as conditions
 *  for controlling the visibility of the locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *extraLocationTypes;

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudLocationFinder_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRCloudLocationFinderQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
