// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Migrate to Virtual Machines API (vmmigration/v1)
// Description:
//   Use the Migrate to Virtual Machines API to programmatically migrate
//   workloads.
// Documentation:
//   https://cloud.google.com/migrate/virtual-machines

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRVMMigrationServiceObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Get the report metadata, without the list of VMs and their utilization info.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewBasic;
/**
 *  Include everything.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewFull;
/**
 *  Get the migrating VM basic details. The basic details do not include the
 *  recent clone jobs and recent cutover jobs lists.
 *
 *  Value: "MIGRATING_VM_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewMigratingVmViewBasic;
/**
 *  Include everything.
 *
 *  Value: "MIGRATING_VM_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewMigratingVmViewFull;
/**
 *  View is unspecified. The API will fallback to the default value.
 *
 *  Value: "MIGRATING_VM_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewMigratingVmViewUnspecified;
/**
 *  The default / unset value. The API will default to FULL on single report
 *  request and BASIC for multiple reports request.
 *
 *  Value: "UTILIZATION_REPORT_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRVMMigrationServiceViewUtilizationReportViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other VM Migration Service query classes.
 */
@interface GTLRVMMigrationServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: vmmigration.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGet : GTLRVMMigrationServiceQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Adds a MigratingVm to a Group.
 *
 *  Method: vmmigration.projects.locations.groups.addGroupMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsAddGroupMigration : GTLRVMMigrationServiceQuery

/** Required. The full path name of the Group to add to. */
@property(nonatomic, copy, nullable) NSString *group;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Adds a MigratingVm to a Group.
 *
 *  @param object The @c GTLRVMMigrationService_AddGroupMigrationRequest to
 *    include in the query.
 *  @param group Required. The full path name of the Group to add to.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsAddGroupMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_AddGroupMigrationRequest *)object
                          group:(NSString *)group;

@end

/**
 *  Creates a new Group in a given project and location.
 *
 *  Method: vmmigration.projects.locations.groups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsCreate : GTLRVMMigrationServiceQuery

/** Required. The group identifier. */
@property(nonatomic, copy, nullable) NSString *groupId;

/** Required. The Group's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new Group in a given project and location.
 *
 *  @param object The @c GTLRVMMigrationService_Group to include in the query.
 *  @param parent Required. The Group's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_Group *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Group.
 *
 *  Method: vmmigration.projects.locations.groups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsDelete : GTLRVMMigrationServiceQuery

/** Required. The Group name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and t he request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single Group.
 *
 *  @param name Required. The Group name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Group.
 *
 *  Method: vmmigration.projects.locations.groups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsGet : GTLRVMMigrationServiceQuery

/** Required. The group name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Group.
 *
 *  Gets details of a single Group.
 *
 *  @param name Required. The group name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Groups in a given project and location.
 *
 *  Method: vmmigration.projects.locations.groups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of groups to return. The service may return
 *  fewer than this value. If unspecified, at most 500 groups will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListGroups` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListGroups` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of groups. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListGroupsResponse.
 *
 *  Lists Groups in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of groups.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Group.
 *
 *  Method: vmmigration.projects.locations.groups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsPatch : GTLRVMMigrationServiceQuery

/** Output only. The Group name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Group
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields will be
 *  overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Updates the parameters of a single Group.
 *
 *  @param object The @c GTLRVMMigrationService_Group to include in the query.
 *  @param name Output only. The Group name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_Group *)object
                           name:(NSString *)name;

@end

/**
 *  Removes a MigratingVm from a Group.
 *
 *  Method: vmmigration.projects.locations.groups.removeGroupMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsRemoveGroupMigration : GTLRVMMigrationServiceQuery

/** Required. The name of the Group. */
@property(nonatomic, copy, nullable) NSString *group;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Removes a MigratingVm from a Group.
 *
 *  @param object The @c GTLRVMMigrationService_RemoveGroupMigrationRequest to
 *    include in the query.
 *  @param group Required. The name of the Group.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsRemoveGroupMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_RemoveGroupMigrationRequest *)object
                          group:(NSString *)group;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: vmmigration.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsList : GTLRVMMigrationServiceQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRVMMigrationService_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: vmmigration.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsCancel : GTLRVMMigrationServiceQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRVMMigrationService_CancelOperationRequest to
 *    include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: vmmigration.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsDelete : GTLRVMMigrationServiceQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: vmmigration.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsGet : GTLRVMMigrationServiceQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: vmmigration.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsList : GTLRVMMigrationServiceQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRVMMigrationService_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Source in a given project and location.
 *
 *  Method: vmmigration.projects.locations.sources.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesCreate : GTLRVMMigrationServiceQuery

/** Required. The Source's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The source identifier. */
@property(nonatomic, copy, nullable) NSString *sourceId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new Source in a given project and location.
 *
 *  @param object The @c GTLRVMMigrationService_Source to include in the query.
 *  @param parent Required. The Source's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_Source *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new DatacenterConnector in a given Source.
 *
 *  Method: vmmigration.projects.locations.sources.datacenterConnectors.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsCreate : GTLRVMMigrationServiceQuery

/** Required. The datacenterConnector identifier. */
@property(nonatomic, copy, nullable) NSString *datacenterConnectorId;

/**
 *  Required. The DatacenterConnector's parent. Required. The Source in where
 *  the new DatacenterConnector will be created. For example:
 *  `projects/my-project/locations/us-central1/sources/my-source`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new DatacenterConnector in a given Source.
 *
 *  @param object The @c GTLRVMMigrationService_DatacenterConnector to include
 *    in the query.
 *  @param parent Required. The DatacenterConnector's parent. Required. The
 *    Source in where the new DatacenterConnector will be created. For example:
 *    `projects/my-project/locations/us-central1/sources/my-source`
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_DatacenterConnector *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single DatacenterConnector.
 *
 *  Method: vmmigration.projects.locations.sources.datacenterConnectors.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsDelete : GTLRVMMigrationServiceQuery

/** Required. The DatacenterConnector name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes after the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single DatacenterConnector.
 *
 *  @param name Required. The DatacenterConnector name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single DatacenterConnector.
 *
 *  Method: vmmigration.projects.locations.sources.datacenterConnectors.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsGet : GTLRVMMigrationServiceQuery

/** Required. The name of the DatacenterConnector. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_DatacenterConnector.
 *
 *  Gets details of a single DatacenterConnector.
 *
 *  @param name Required. The name of the DatacenterConnector.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DatacenterConnectors in a given Source.
 *
 *  Method: vmmigration.projects.locations.sources.datacenterConnectors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of connectors to return. The service may return
 *  fewer than this value. If unspecified, at most 500 sources will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListDatacenterConnectors`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListDatacenterConnectors` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of connectors. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListDatacenterConnectorsResponse.
 *
 *  Lists DatacenterConnectors in a given Source.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    connectors.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Upgrades the appliance relate to this DatacenterConnector to the in-place
 *  updateable version.
 *
 *  Method: vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsUpgradeAppliance : GTLRVMMigrationServiceQuery

/** Required. The DatacenterConnector name. */
@property(nonatomic, copy, nullable) NSString *datacenterConnector;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Upgrades the appliance relate to this DatacenterConnector to the in-place
 *  updateable version.
 *
 *  @param object The @c GTLRVMMigrationService_UpgradeApplianceRequest to
 *    include in the query.
 *  @param datacenterConnector Required. The DatacenterConnector name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsUpgradeAppliance
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_UpgradeApplianceRequest *)object
            datacenterConnector:(NSString *)datacenterConnector;

@end

/**
 *  Deletes a single Source.
 *
 *  Method: vmmigration.projects.locations.sources.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDelete : GTLRVMMigrationServiceQuery

/** Required. The Source name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and t he request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single Source.
 *
 *  @param name Required. The Source name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List remote source's inventory of VMs. The remote source is the onprem
 *  vCenter (remote in the sense it's not in Compute Engine). The inventory
 *  describes the list of existing VMs in that source. Note that this operation
 *  lists the VMs on the remote source, as opposed to listing the MigratingVms
 *  resources in the vmmigration service.
 *
 *  Method: vmmigration.projects.locations.sources.fetchInventory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesFetchInventory : GTLRVMMigrationServiceQuery

/**
 *  If this flag is set to true, the source will be queried instead of using
 *  cached results. Using this flag will make the call slower.
 */
@property(nonatomic, assign) BOOL forceRefresh;

/**
 *  The maximum number of VMs to return. The service may return fewer than this
 *  value. For AWS source: If unspecified, at most 500 VMs will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000. For VMWare
 *  source: If unspecified, all VMs will be returned. There is no limit for
 *  maximum value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `FetchInventory` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `FetchInventory` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the Source. */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Fetches a @c GTLRVMMigrationService_FetchInventoryResponse.
 *
 *  List remote source's inventory of VMs. The remote source is the onprem
 *  vCenter (remote in the sense it's not in Compute Engine). The inventory
 *  describes the list of existing VMs in that source. Note that this operation
 *  lists the VMs on the remote source, as opposed to listing the MigratingVms
 *  resources in the vmmigration service.
 *
 *  @param source Required. The name of the Source.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesFetchInventory
 */
+ (instancetype)queryWithSource:(NSString *)source;

@end

/**
 *  Gets details of a single Source.
 *
 *  Method: vmmigration.projects.locations.sources.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesGet : GTLRVMMigrationServiceQuery

/** Required. The Source name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Source.
 *
 *  Gets details of a single Source.
 *
 *  @param name Required. The Source name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Sources in a given project and location.
 *
 *  Method: vmmigration.projects.locations.sources.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of sources to return. The service may return
 *  fewer than this value. If unspecified, at most 500 sources will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListSources` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListSources` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of sources. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListSourcesResponse.
 *
 *  Lists Sources in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of sources.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Initiates the cancellation of a running clone job.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCancel : GTLRVMMigrationServiceQuery

/** Required. The clone job id */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Initiates the cancellation of a running clone job.
 *
 *  @param object The @c GTLRVMMigrationService_CancelCloneJobRequest to include
 *    in the query.
 *  @param name Required. The clone job id
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelCloneJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Initiates a Clone of a specific migrating VM.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cloneJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCreate : GTLRVMMigrationServiceQuery

/** Required. The clone job identifier. */
@property(nonatomic, copy, nullable) NSString *cloneJobId;

/** Required. The Clone's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Initiates a Clone of a specific migrating VM.
 *
 *  @param object The @c GTLRVMMigrationService_CloneJob to include in the
 *    query.
 *  @param parent Required. The Clone's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_CloneJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single CloneJob.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cloneJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsGet : GTLRVMMigrationServiceQuery

/** Required. The name of the CloneJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_CloneJob.
 *
 *  Gets details of a single CloneJob.
 *
 *  @param name Required. The name of the CloneJob.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CloneJobs of a given migrating VM.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cloneJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of clone jobs to return. The service may return
 *  fewer than this value. If unspecified, at most 500 clone jobs will be
 *  returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListCloneJobs` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListCloneJobs` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of source VMs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListCloneJobsResponse.
 *
 *  Lists CloneJobs of a given migrating VM.
 *
 *  @param parent Required. The parent, which owns this collection of source
 *    VMs.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new MigratingVm in a given Source.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCreate : GTLRVMMigrationServiceQuery

/** Required. The migratingVm identifier. */
@property(nonatomic, copy, nullable) NSString *migratingVmId;

/** Required. The MigratingVm's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new MigratingVm in a given Source.
 *
 *  @param object The @c GTLRVMMigrationService_MigratingVm to include in the
 *    query.
 *  @param parent Required. The MigratingVm's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_MigratingVm *)object
                         parent:(NSString *)parent;

@end

/**
 *  Initiates the cancellation of a running cutover job.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCancel : GTLRVMMigrationServiceQuery

/** Required. The cutover job id */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Initiates the cancellation of a running cutover job.
 *
 *  @param object The @c GTLRVMMigrationService_CancelCutoverJobRequest to
 *    include in the query.
 *  @param name Required. The cutover job id
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelCutoverJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Initiates a Cutover of a specific migrating VM. The returned LRO is
 *  completed when the cutover job resource is created and the job is initiated.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCreate : GTLRVMMigrationServiceQuery

/** Required. The cutover job identifier. */
@property(nonatomic, copy, nullable) NSString *cutoverJobId;

/** Required. The Cutover's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Initiates a Cutover of a specific migrating VM. The returned LRO is
 *  completed when the cutover job resource is created and the job is initiated.
 *
 *  @param object The @c GTLRVMMigrationService_CutoverJob to include in the
 *    query.
 *  @param parent Required. The Cutover's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_CutoverJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single CutoverJob.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsGet : GTLRVMMigrationServiceQuery

/** Required. The name of the CutoverJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_CutoverJob.
 *
 *  Gets details of a single CutoverJob.
 *
 *  @param name Required. The name of the CutoverJob.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CutoverJobs of a given migrating VM.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of cutover jobs to return. The service may
 *  return fewer than this value. If unspecified, at most 500 cutover jobs will
 *  be returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListCutoverJobs` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListCutoverJobs` must match the call that provided
 *  the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of migrating VMs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListCutoverJobsResponse.
 *
 *  Lists CutoverJobs of a given migrating VM.
 *
 *  @param parent Required. The parent, which owns this collection of migrating
 *    VMs.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a single MigratingVm.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsDelete : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single MigratingVm.
 *
 *  @param name Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Marks a migration as completed, deleting migration resources that are no
 *  longer being used. Only applicable after cutover is done.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.finalizeMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsFinalizeMigration : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *migratingVm;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Marks a migration as completed, deleting migration resources that are no
 *  longer being used. Only applicable after cutover is done.
 *
 *  @param object The @c GTLRVMMigrationService_FinalizeMigrationRequest to
 *    include in the query.
 *  @param migratingVm Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsFinalizeMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_FinalizeMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm;

@end

/**
 *  Gets details of a single MigratingVm.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsGet : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The level of details of the migrating VM.
 *
 *  Likely values:
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewUnspecified View is
 *        unspecified. The API will fallback to the default value. (Value:
 *        "MIGRATING_VM_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewBasic Get the migrating
 *        VM basic details. The basic details do not include the recent clone
 *        jobs and recent cutover jobs lists. (Value: "MIGRATING_VM_VIEW_BASIC")
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewFull Include everything.
 *        (Value: "MIGRATING_VM_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRVMMigrationService_MigratingVm.
 *
 *  Gets details of a single MigratingVm.
 *
 *  @param name Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists MigratingVms in a given Source.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of migrating VMs to return. The service may
 *  return fewer than this value. If unspecified, at most 500 migrating VMs will
 *  be returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListMigratingVms` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListMigratingVms` must match the call that provided
 *  the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of MigratingVms. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The level of details of each migrating VM.
 *
 *  Likely values:
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewUnspecified View is
 *        unspecified. The API will fallback to the default value. (Value:
 *        "MIGRATING_VM_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewBasic Get the migrating
 *        VM basic details. The basic details do not include the recent clone
 *        jobs and recent cutover jobs lists. (Value: "MIGRATING_VM_VIEW_BASIC")
 *    @arg @c kGTLRVMMigrationServiceViewMigratingVmViewFull Include everything.
 *        (Value: "MIGRATING_VM_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRVMMigrationService_ListMigratingVmsResponse.
 *
 *  Lists MigratingVms in a given Source.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    MigratingVms.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single MigratingVm.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPatch : GTLRVMMigrationServiceQuery

/** Output only. The identifier of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  MigratingVm resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Updates the parameters of a single MigratingVm.
 *
 *  @param object The @c GTLRVMMigrationService_MigratingVm to include in the
 *    query.
 *  @param name Output only. The identifier of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_MigratingVm *)object
                           name:(NSString *)name;

@end

/**
 *  Pauses a migration for a VM. If cycle tasks are running they will be
 *  cancelled, preserving source task data. Further replication cycles will not
 *  be triggered while the VM is paused.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.pauseMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPauseMigration : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *migratingVm;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Pauses a migration for a VM. If cycle tasks are running they will be
 *  cancelled, preserving source task data. Further replication cycles will not
 *  be triggered while the VM is paused.
 *
 *  @param object The @c GTLRVMMigrationService_PauseMigrationRequest to include
 *    in the query.
 *  @param migratingVm Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPauseMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_PauseMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm;

@end

/**
 *  Gets details of a single ReplicationCycle.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.replicationCycles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesGet : GTLRVMMigrationServiceQuery

/** Required. The name of the ReplicationCycle. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_ReplicationCycle.
 *
 *  Gets details of a single ReplicationCycle.
 *
 *  @param name Required. The name of the ReplicationCycle.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists ReplicationCycles in a given MigratingVM.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.replicationCycles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of replication cycles to return. The service
 *  may return fewer than this value. If unspecified, at most 100 migrating VMs
 *  will be returned. The maximum value is 100; values above 100 will be coerced
 *  to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListReplicationCycles`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListReplicationCycles` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of ReplicationCycles. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListReplicationCyclesResponse.
 *
 *  Lists ReplicationCycles in a given MigratingVM.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    ReplicationCycles.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Resumes a migration for a VM. When called on a paused migration, will start
 *  the process of uploading data and creating snapshots; when called on a
 *  completed cut-over migration, will update the migration to active state and
 *  start the process of uploading data and creating snapshots.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.resumeMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsResumeMigration : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *migratingVm;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Resumes a migration for a VM. When called on a paused migration, will start
 *  the process of uploading data and creating snapshots; when called on a
 *  completed cut-over migration, will update the migration to active state and
 *  start the process of uploading data and creating snapshots.
 *
 *  @param object The @c GTLRVMMigrationService_ResumeMigrationRequest to
 *    include in the query.
 *  @param migratingVm Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsResumeMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_ResumeMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm;

@end

/**
 *  Starts migration for a VM. Starts the process of uploading data and creating
 *  snapshots, in replication cycles scheduled by the policy.
 *
 *  Method: vmmigration.projects.locations.sources.migratingVms.startMigration
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsStartMigration : GTLRVMMigrationServiceQuery

/** Required. The name of the MigratingVm. */
@property(nonatomic, copy, nullable) NSString *migratingVm;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Starts migration for a VM. Starts the process of uploading data and creating
 *  snapshots, in replication cycles scheduled by the policy.
 *
 *  @param object The @c GTLRVMMigrationService_StartMigrationRequest to include
 *    in the query.
 *  @param migratingVm Required. The name of the MigratingVm.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsStartMigration
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_StartMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm;

@end

/**
 *  Updates the parameters of a single Source.
 *
 *  Method: vmmigration.projects.locations.sources.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesPatch : GTLRVMMigrationServiceQuery

/** Output only. The Source name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Source
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields will be
 *  overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Updates the parameters of a single Source.
 *
 *  @param object The @c GTLRVMMigrationService_Source to include in the query.
 *  @param name Output only. The Source name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesPatch
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_Source *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new UtilizationReport.
 *
 *  Method: vmmigration.projects.locations.sources.utilizationReports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsCreate : GTLRVMMigrationServiceQuery

/** Required. The Utilization Report's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The ID to use for the report, which will become the final
 *  component of the reports's resource name. This value maximum length is 63
 *  characters, and valid characters are /a-z-/. It must start with an english
 *  letter and must not end with a hyphen.
 */
@property(nonatomic, copy, nullable) NSString *utilizationReportId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new UtilizationReport.
 *
 *  @param object The @c GTLRVMMigrationService_UtilizationReport to include in
 *    the query.
 *  @param parent Required. The Utilization Report's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_UtilizationReport *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Utilization Report.
 *
 *  Method: vmmigration.projects.locations.sources.utilizationReports.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsDelete : GTLRVMMigrationServiceQuery

/** Required. The Utilization Report name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and t he request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single Utilization Report.
 *
 *  @param name Required. The Utilization Report name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a single Utilization Report.
 *
 *  Method: vmmigration.projects.locations.sources.utilizationReports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsGet : GTLRVMMigrationServiceQuery

/** Required. The Utilization Report name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The level of details of the report. Defaults to FULL
 *
 *  Likely values:
 *    @arg @c kGTLRVMMigrationServiceViewUtilizationReportViewUnspecified The
 *        default / unset value. The API will default to FULL on single report
 *        request and BASIC for multiple reports request. (Value:
 *        "UTILIZATION_REPORT_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRVMMigrationServiceViewBasic Get the report metadata, without
 *        the list of VMs and their utilization info. (Value: "BASIC")
 *    @arg @c kGTLRVMMigrationServiceViewFull Include everything. (Value:
 *        "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRVMMigrationService_UtilizationReport.
 *
 *  Gets a single Utilization Report.
 *
 *  @param name Required. The Utilization Report name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Utilization Reports of the given Source.
 *
 *  Method: vmmigration.projects.locations.sources.utilizationReports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of reports to return. The service may return
 *  fewer than this value. If unspecified, at most 500 reports will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListUtilizationReports`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListUtilizationReports` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The Utilization Reports parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The level of details of each report. Defaults to BASIC.
 *
 *  Likely values:
 *    @arg @c kGTLRVMMigrationServiceViewUtilizationReportViewUnspecified The
 *        default / unset value. The API will default to FULL on single report
 *        request and BASIC for multiple reports request. (Value:
 *        "UTILIZATION_REPORT_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRVMMigrationServiceViewBasic Get the report metadata, without
 *        the list of VMs and their utilization info. (Value: "BASIC")
 *    @arg @c kGTLRVMMigrationServiceViewFull Include everything. (Value:
 *        "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRVMMigrationService_ListUtilizationReportsResponse.
 *
 *  Lists Utilization Reports of the given Source.
 *
 *  @param parent Required. The Utilization Reports parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new TargetProject in a given project. NOTE: TargetProject is a
 *  global resource; hence the only supported value for location is `global`.
 *
 *  Method: vmmigration.projects.locations.targetProjects.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsCreate : GTLRVMMigrationServiceQuery

/** Required. The TargetProject's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The target_project identifier. */
@property(nonatomic, copy, nullable) NSString *targetProjectId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Creates a new TargetProject in a given project. NOTE: TargetProject is a
 *  global resource; hence the only supported value for location is `global`.
 *
 *  @param object The @c GTLRVMMigrationService_TargetProject to include in the
 *    query.
 *  @param parent Required. The TargetProject's parent.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_TargetProject *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single TargetProject. NOTE: TargetProject is a global resource;
 *  hence the only supported value for location is `global`.
 *
 *  Method: vmmigration.projects.locations.targetProjects.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsDelete : GTLRVMMigrationServiceQuery

/** Required. The TargetProject name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and t he request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Deletes a single TargetProject. NOTE: TargetProject is a global resource;
 *  hence the only supported value for location is `global`.
 *
 *  @param name Required. The TargetProject name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single TargetProject. NOTE: TargetProject is a global
 *  resource; hence the only supported value for location is `global`.
 *
 *  Method: vmmigration.projects.locations.targetProjects.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsGet : GTLRVMMigrationServiceQuery

/** Required. The TargetProject name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMMigrationService_TargetProject.
 *
 *  Gets details of a single TargetProject. NOTE: TargetProject is a global
 *  resource; hence the only supported value for location is `global`.
 *
 *  @param name Required. The TargetProject name.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TargetProjects in a given project. NOTE: TargetProject is a global
 *  resource; hence the only supported value for location is `global`.
 *
 *  Method: vmmigration.projects.locations.targetProjects.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsList : GTLRVMMigrationServiceQuery

/** Optional. The filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. the order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of targets to return. The service may return
 *  fewer than this value. If unspecified, at most 500 targets will be returned.
 *  The maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. A page token, received from a previous `ListTargets` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListTargets` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent, which owns this collection of targets. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMMigrationService_ListTargetProjectsResponse.
 *
 *  Lists TargetProjects in a given project. NOTE: TargetProject is a global
 *  resource; hence the only supported value for location is `global`.
 *
 *  @param parent Required. The parent, which owns this collection of targets.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single TargetProject. NOTE: TargetProject is a
 *  global resource; hence the only supported value for location is `global`.
 *
 *  Method: vmmigration.projects.locations.targetProjects.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMMigrationServiceCloudPlatform
 */
@interface GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsPatch : GTLRVMMigrationServiceQuery

/** Output only. The name of the target project. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  TargetProject resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMMigrationService_Operation.
 *
 *  Updates the parameters of a single TargetProject. NOTE: TargetProject is a
 *  global resource; hence the only supported value for location is `global`.
 *
 *  @param object The @c GTLRVMMigrationService_TargetProject to include in the
 *    query.
 *  @param name Output only. The name of the target project.
 *
 *  @return GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMMigrationService_TargetProject *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
