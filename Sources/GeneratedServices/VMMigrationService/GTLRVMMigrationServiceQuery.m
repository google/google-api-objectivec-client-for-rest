// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Migrate to Virtual Machines API (vmmigration/v1)
// Description:
//   Use the Migrate to Virtual Machines API to programmatically migrate
//   workloads.
// Documentation:
//   https://cloud.google.com/migrate/virtual-machines

#import <GoogleAPIClientForREST/GTLRVMMigrationServiceQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRVMMigrationServiceViewBasic              = @"BASIC";
NSString * const kGTLRVMMigrationServiceViewFull               = @"FULL";
NSString * const kGTLRVMMigrationServiceViewMigratingVmViewBasic = @"MIGRATING_VM_VIEW_BASIC";
NSString * const kGTLRVMMigrationServiceViewMigratingVmViewFull = @"MIGRATING_VM_VIEW_FULL";
NSString * const kGTLRVMMigrationServiceViewMigratingVmViewUnspecified = @"MIGRATING_VM_VIEW_UNSPECIFIED";
NSString * const kGTLRVMMigrationServiceViewUtilizationReportViewUnspecified = @"UTILIZATION_REPORT_VIEW_UNSPECIFIED";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRVMMigrationServiceQuery

@dynamic fields;

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Location class];
  query.loggingName = @"vmmigration.projects.locations.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsAddGroupMigration

@dynamic group;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_AddGroupMigrationRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:addGroupMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsAddGroupMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.groups.addGroupMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsCreate

@dynamic groupId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_Group *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.groups.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.groups.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Group class];
  query.loggingName = @"vmmigration.projects.locations.groups.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListGroupsResponse class];
  query.loggingName = @"vmmigration.projects.locations.groups.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_Group *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.groups.patch";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsRemoveGroupMigration

@dynamic group;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_RemoveGroupMigrationRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:removeGroupMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsGroupsRemoveGroupMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.groups.removeGroupMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRVMMigrationServiceQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_ListLocationsResponse class];
  query.loggingName = @"vmmigration.projects.locations.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Empty class];
  query.loggingName = @"vmmigration.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Empty class];
  query.loggingName = @"vmmigration.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRVMMigrationServiceQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_ListOperationsResponse class];
  query.loggingName = @"vmmigration.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesCreate

@dynamic parent, requestId, sourceId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_Source *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsCreate

@dynamic datacenterConnectorId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_DatacenterConnector *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datacenterConnectors";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.datacenterConnectors.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.datacenterConnectors.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_DatacenterConnector class];
  query.loggingName = @"vmmigration.projects.locations.sources.datacenterConnectors.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datacenterConnectors";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListDatacenterConnectorsResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.datacenterConnectors.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsUpgradeAppliance

@dynamic datacenterConnector;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_UpgradeApplianceRequest *)object
            datacenterConnector:(NSString *)datacenterConnector {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"datacenterConnector" ];
  NSString *pathURITemplate = @"v1/{+datacenterConnector}:upgradeAppliance";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDatacenterConnectorsUpgradeAppliance *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.datacenterConnector = datacenterConnector;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesFetchInventory

@dynamic forceRefresh, pageSize, pageToken, source;

+ (instancetype)queryWithSource:(NSString *)source {
  NSArray *pathParams = @[ @"source" ];
  NSString *pathURITemplate = @"v1/{+source}:fetchInventory";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesFetchInventory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.source = source;
  query.expectedObjectClass = [GTLRVMMigrationService_FetchInventoryResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.fetchInventory";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Source class];
  query.loggingName = @"vmmigration.projects.locations.sources.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListSourcesResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelCloneJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCreate

@dynamic cloneJobId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_CloneJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cloneJobs";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cloneJobs.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_CloneJob class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cloneJobs.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cloneJobs";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCloneJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListCloneJobsResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cloneJobs.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCreate

@dynamic migratingVmId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_MigratingVm *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migratingVms";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_CancelCutoverJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCreate

@dynamic cutoverJobId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_CutoverJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cutoverJobs";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_CutoverJob class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cutoverJobs";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsCutoverJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListCutoverJobsResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsFinalizeMigration

@dynamic migratingVm;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_FinalizeMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"migratingVm" ];
  NSString *pathURITemplate = @"v1/{+migratingVm}:finalizeMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsFinalizeMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.migratingVm = migratingVm;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.finalizeMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_MigratingVm class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migratingVms";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListMigratingVmsResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_MigratingVm *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.patch";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPauseMigration

@dynamic migratingVm;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_PauseMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"migratingVm" ];
  NSString *pathURITemplate = @"v1/{+migratingVm}:pauseMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsPauseMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.migratingVm = migratingVm;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.pauseMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_ReplicationCycle class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.replicationCycles.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/replicationCycles";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsReplicationCyclesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListReplicationCyclesResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.replicationCycles.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsResumeMigration

@dynamic migratingVm;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_ResumeMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"migratingVm" ];
  NSString *pathURITemplate = @"v1/{+migratingVm}:resumeMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsResumeMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.migratingVm = migratingVm;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.resumeMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsStartMigration

@dynamic migratingVm;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_StartMigrationRequest *)object
                    migratingVm:(NSString *)migratingVm {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"migratingVm" ];
  NSString *pathURITemplate = @"v1/{+migratingVm}:startMigration";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesMigratingVmsStartMigration *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.migratingVm = migratingVm;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.migratingVms.startMigration";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_Source *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.patch";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsCreate

@dynamic parent, requestId, utilizationReportId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_UtilizationReport *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/utilizationReports";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.utilizationReports.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.sources.utilizationReports.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_UtilizationReport class];
  query.loggingName = @"vmmigration.projects.locations.sources.utilizationReports.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/utilizationReports";
  GTLRVMMigrationServiceQuery_ProjectsLocationsSourcesUtilizationReportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListUtilizationReportsResponse class];
  query.loggingName = @"vmmigration.projects.locations.sources.utilizationReports.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsCreate

@dynamic parent, requestId, targetProjectId;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_TargetProject *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetProjects";
  GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.targetProjects.create";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.targetProjects.delete";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_TargetProject class];
  query.loggingName = @"vmmigration.projects.locations.targetProjects.get";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetProjects";
  GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRVMMigrationService_ListTargetProjectsResponse class];
  query.loggingName = @"vmmigration.projects.locations.targetProjects.list";
  return query;
}

@end

@implementation GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRVMMigrationService_TargetProject *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRVMMigrationServiceQuery_ProjectsLocationsTargetProjectsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRVMMigrationService_Operation class];
  query.loggingName = @"vmmigration.projects.locations.targetProjects.patch";
  return query;
}

@end
