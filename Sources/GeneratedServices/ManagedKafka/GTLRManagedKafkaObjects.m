// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Managed Service for Apache Kafka API (managedkafka/v1)
// Description:
//   Manage Apache Kafka clusters and resources.
// Documentation:
//   https://cloud.google.com/managed-service-for-apache-kafka/docs

#import <GoogleAPIClientForREST/GTLRManagedKafkaObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRManagedKafka_Cluster.state
NSString * const kGTLRManagedKafka_Cluster_State_Active        = @"ACTIVE";
NSString * const kGTLRManagedKafka_Cluster_State_Creating      = @"CREATING";
NSString * const kGTLRManagedKafka_Cluster_State_Deleting      = @"DELETING";
NSString * const kGTLRManagedKafka_Cluster_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRManagedKafka_RebalanceConfig.mode
NSString * const kGTLRManagedKafka_RebalanceConfig_Mode_AutoRebalanceOnScaleUp = @"AUTO_REBALANCE_ON_SCALE_UP";
NSString * const kGTLRManagedKafka_RebalanceConfig_Mode_ModeUnspecified = @"MODE_UNSPECIFIED";
NSString * const kGTLRManagedKafka_RebalanceConfig_Mode_NoRebalance = @"NO_REBALANCE";

// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_AccessConfig
//

@implementation GTLRManagedKafka_AccessConfig
@dynamic networkConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkConfigs" : [GTLRManagedKafka_NetworkConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_CancelOperationRequest
//

@implementation GTLRManagedKafka_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_CapacityConfig
//

@implementation GTLRManagedKafka_CapacityConfig
@dynamic memoryBytes, vcpuCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Cluster
//

@implementation GTLRManagedKafka_Cluster
@dynamic capacityConfig, createTime, gcpConfig, labels, name, rebalanceConfig,
         satisfiesPzi, satisfiesPzs, state, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Cluster_Labels
//

@implementation GTLRManagedKafka_Cluster_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ConsumerGroup
//

@implementation GTLRManagedKafka_ConsumerGroup
@dynamic name, topics;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ConsumerGroup_Topics
//

@implementation GTLRManagedKafka_ConsumerGroup_Topics

+ (Class)classForAdditionalProperties {
  return [GTLRManagedKafka_ConsumerTopicMetadata class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ConsumerPartitionMetadata
//

@implementation GTLRManagedKafka_ConsumerPartitionMetadata
@dynamic metadata, offset;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ConsumerTopicMetadata
//

@implementation GTLRManagedKafka_ConsumerTopicMetadata
@dynamic partitions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ConsumerTopicMetadata_Partitions
//

@implementation GTLRManagedKafka_ConsumerTopicMetadata_Partitions

+ (Class)classForAdditionalProperties {
  return [GTLRManagedKafka_ConsumerPartitionMetadata class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Empty
//

@implementation GTLRManagedKafka_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_GcpConfig
//

@implementation GTLRManagedKafka_GcpConfig
@dynamic accessConfig, kmsKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ListClustersResponse
//

@implementation GTLRManagedKafka_ListClustersResponse
@dynamic clusters, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"clusters" : [GTLRManagedKafka_Cluster class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"clusters";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ListConsumerGroupsResponse
//

@implementation GTLRManagedKafka_ListConsumerGroupsResponse
@dynamic consumerGroups, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"consumerGroups" : [GTLRManagedKafka_ConsumerGroup class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"consumerGroups";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ListLocationsResponse
//

@implementation GTLRManagedKafka_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRManagedKafka_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ListOperationsResponse
//

@implementation GTLRManagedKafka_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRManagedKafka_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_ListTopicsResponse
//

@implementation GTLRManagedKafka_ListTopicsResponse
@dynamic nextPageToken, topics;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"topics" : [GTLRManagedKafka_Topic class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"topics";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Location
//

@implementation GTLRManagedKafka_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Location_Labels
//

@implementation GTLRManagedKafka_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Location_Metadata
//

@implementation GTLRManagedKafka_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_NetworkConfig
//

@implementation GTLRManagedKafka_NetworkConfig
@dynamic subnet;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Operation
//

@implementation GTLRManagedKafka_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Operation_Metadata
//

@implementation GTLRManagedKafka_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Operation_Response
//

@implementation GTLRManagedKafka_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_OperationMetadata
//

@implementation GTLRManagedKafka_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_RebalanceConfig
//

@implementation GTLRManagedKafka_RebalanceConfig
@dynamic mode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Status
//

@implementation GTLRManagedKafka_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRManagedKafka_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Status_Details_Item
//

@implementation GTLRManagedKafka_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Topic
//

@implementation GTLRManagedKafka_Topic
@dynamic configs, name, partitionCount, replicationFactor;
@end


// ----------------------------------------------------------------------------
//
//   GTLRManagedKafka_Topic_Configs
//

@implementation GTLRManagedKafka_Topic_Configs

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end
