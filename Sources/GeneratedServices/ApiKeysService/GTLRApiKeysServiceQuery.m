// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   API Keys API (apikeys/v2)
// Description:
//   Manages the API keys associated with developer projects.
// Documentation:
//   https://cloud.google.com/api-keys/docs

#import <GoogleAPIClientForREST/GTLRApiKeysServiceQuery.h>

@implementation GTLRApiKeysServiceQuery

@dynamic fields;

@end

@implementation GTLRApiKeysServiceQuery_KeysLookupKey

@dynamic keyString;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/keys:lookupKey";
  GTLRApiKeysServiceQuery_KeysLookupKey *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRApiKeysService_V2LookupKeyResponse class];
  query.loggingName = @"apikeys.keys.lookupKey";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRApiKeysServiceQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_Operation class];
  query.loggingName = @"apikeys.operations.get";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysCreate

@dynamic keyId, parent;

+ (instancetype)queryWithObject:(GTLRApiKeysService_V2Key *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/keys";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRApiKeysService_Operation class];
  query.loggingName = @"apikeys.projects.locations.keys.create";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_Operation class];
  query.loggingName = @"apikeys.projects.locations.keys.delete";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_V2Key class];
  query.loggingName = @"apikeys.projects.locations.keys.get";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysGetKeyString

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/keyString";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysGetKeyString *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_V2GetKeyStringResponse class];
  query.loggingName = @"apikeys.projects.locations.keys.getKeyString";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysList

@dynamic pageSize, pageToken, parent, showDeleted;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/keys";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRApiKeysService_V2ListKeysResponse class];
  query.loggingName = @"apikeys.projects.locations.keys.list";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRApiKeysService_V2Key *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_Operation class];
  query.loggingName = @"apikeys.projects.locations.keys.patch";
  return query;
}

@end

@implementation GTLRApiKeysServiceQuery_ProjectsLocationsKeysUndelete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRApiKeysService_V2UndeleteKeyRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:undelete";
  GTLRApiKeysServiceQuery_ProjectsLocationsKeysUndelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRApiKeysService_Operation class];
  query.loggingName = @"apikeys.projects.locations.keys.undelete";
  return query;
}

@end
