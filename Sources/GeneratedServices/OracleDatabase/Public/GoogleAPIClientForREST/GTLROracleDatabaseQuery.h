// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Oracle Database@Google Cloud API (oracledatabase/v1)
// Description:
//   The Oracle Database@Google Cloud API provides a set of APIs to manage
//   Oracle database services, such as Exadata and Autonomous Databases.
// Documentation:
//   https://cloud.google.com/oracle/database/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLROracleDatabaseObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Oracle Database query classes.
 */
@interface GTLROracleDatabaseQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Lists the long-term and automatic backups of an Autonomous Database.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabaseBackups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabaseBackupsList : GTLROracleDatabaseQuery

/**
 *  Optional. An expression for filtering the results of the request. Only the
 *  **autonomous_database_id** field is supported in the following format:
 *  `autonomous_database_id="{autonomous_database_id}"`. The accepted values
 *  must be a valid Autonomous Database ID, limited to the naming restrictions
 *  of the ID: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$). The ID must start with a
 *  letter, end with a letter or a number, and be a maximum of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  Autonomous DB Backups will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for ListAutonomousDatabaseBackups in the
 *  following format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListAutonomousDatabaseBackupsResponse.
 *
 *  Lists the long-term and automatic backups of an Autonomous Database.
 *
 *  @param parent Required. The parent value for ListAutonomousDatabaseBackups
 *    in the following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabaseBackupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists Autonomous Database Character Sets in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabaseCharacterSets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabaseCharacterSetsList : GTLROracleDatabaseQuery

/**
 *  Optional. An expression for filtering the results of the request. Only the
 *  **character_set_type** field is supported in the following format:
 *  `character_set_type="{characterSetType}"`. Accepted values include
 *  `DATABASE` and `NATIONAL`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  Autonomous DB Character Sets will be returned. The maximum value is 1000;
 *  values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for the Autonomous Database in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListAutonomousDatabaseCharacterSetsResponse.
 *
 *  Lists Autonomous Database Character Sets in a given project and location.
 *
 *  @param parent Required. The parent value for the Autonomous Database in the
 *    following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabaseCharacterSetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new Autonomous Database in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesCreate : GTLROracleDatabaseQuery

/**
 *  Required. The ID of the Autonomous Database to create. This value is
 *  restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of
 *  63 characters in length. The value must start with a letter and end with a
 *  letter or a number.
 */
@property(nonatomic, copy, nullable) NSString *autonomousDatabaseId;

/**
 *  Required. The name of the parent in the following format:
 *  projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Creates a new Autonomous Database in a given project and location.
 *
 *  @param object The @c GTLROracleDatabase_AutonomousDatabase to include in the
 *    query.
 *  @param parent Required. The name of the parent in the following format:
 *    projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesCreate
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_AutonomousDatabase *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Autonomous Database.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesDelete : GTLROracleDatabaseQuery

/**
 *  Required. The name of the resource in the following format:
 *  projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Deletes a single Autonomous Database.
 *
 *  @param name Required. The name of the resource in the following format:
 *    projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a wallet for an Autonomous Database.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.generateWallet
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesGenerateWallet : GTLROracleDatabaseQuery

/**
 *  Required. The name of the Autonomous Database in the following format:
 *  projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_GenerateAutonomousDatabaseWalletResponse.
 *
 *  Generates a wallet for an Autonomous Database.
 *
 *  @param object The @c
 *    GTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest to include in
 *    the query.
 *  @param name Required. The name of the Autonomous Database in the following
 *    format:
 *    projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesGenerateWallet
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the details of a single Autonomous Database.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesGet : GTLROracleDatabaseQuery

/**
 *  Required. The name of the Autonomous Database in the following format:
 *  projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_AutonomousDatabase.
 *
 *  Gets the details of a single Autonomous Database.
 *
 *  @param name Required. The name of the Autonomous Database in the following
 *    format:
 *    projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the Autonomous Databases in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesList : GTLROracleDatabaseQuery

/** Optional. An expression for filtering the results of the request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. An expression for ordering the results of the request. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  Autonomous Database will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for the Autonomous Database in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListAutonomousDatabasesResponse.
 *
 *  Lists the Autonomous Databases in a given project and location.
 *
 *  @param parent Required. The parent value for the Autonomous Database in the
 *    following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Restores a single Autonomous Database.
 *
 *  Method: oracledatabase.projects.locations.autonomousDatabases.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesRestore : GTLROracleDatabaseQuery

/**
 *  Required. The name of the Autonomous Database in the following format:
 *  projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Restores a single Autonomous Database.
 *
 *  @param object The @c GTLROracleDatabase_RestoreAutonomousDatabaseRequest to
 *    include in the query.
 *  @param name Required. The name of the Autonomous Database in the following
 *    format:
 *    projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDatabasesRestore
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_RestoreAutonomousDatabaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists all the available Autonomous Database versions for a project and
 *  location.
 *
 *  Method: oracledatabase.projects.locations.autonomousDbVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDbVersionsList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  Autonomous DB Versions will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for the Autonomous Database in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListAutonomousDbVersionsResponse.
 *
 *  Lists all the available Autonomous Database versions for a project and
 *  location.
 *
 *  @param parent Required. The parent value for the Autonomous Database in the
 *    following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsAutonomousDbVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new Exadata Infrastructure in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.cloudExadataInfrastructures.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresCreate : GTLROracleDatabaseQuery

/**
 *  Required. The ID of the Exadata Infrastructure to create. This value is
 *  restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of
 *  63 characters in length. The value must start with a letter and end with a
 *  letter or a number.
 */
@property(nonatomic, copy, nullable) NSString *cloudExadataInfrastructureId;

/**
 *  Required. The parent value for CloudExadataInfrastructure in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Creates a new Exadata Infrastructure in a given project and location.
 *
 *  @param object The @c GTLROracleDatabase_CloudExadataInfrastructure to
 *    include in the query.
 *  @param parent Required. The parent value for CloudExadataInfrastructure in
 *    the following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresCreate
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_CloudExadataInfrastructure *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the database servers of an Exadata Infrastructure instance.
 *
 *  Method: oracledatabase.projects.locations.cloudExadataInfrastructures.dbServers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresDbServersList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, a maximum
 *  of 50 db servers will be returned. The maximum value is 1000; values above
 *  1000 will be reset to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for database server in the following format:
 *  projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListDbServersResponse.
 *
 *  Lists the database servers of an Exadata Infrastructure instance.
 *
 *  @param parent Required. The parent value for database server in the
 *    following format:
 *    projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresDbServersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a single Exadata Infrastructure.
 *
 *  Method: oracledatabase.projects.locations.cloudExadataInfrastructures.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresDelete : GTLROracleDatabaseQuery

/**
 *  Optional. If set to true, all VM clusters for this Exadata Infrastructure
 *  will be deleted. An Exadata Infrastructure can only be deleted once all its
 *  VM clusters have been deleted.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the Cloud Exadata Infrastructure in the following
 *  format:
 *  projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Deletes a single Exadata Infrastructure.
 *
 *  @param name Required. The name of the Cloud Exadata Infrastructure in the
 *    following format:
 *    projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Exadata Infrastructure.
 *
 *  Method: oracledatabase.projects.locations.cloudExadataInfrastructures.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresGet : GTLROracleDatabaseQuery

/**
 *  Required. The name of the Cloud Exadata Infrastructure in the following
 *  format:
 *  projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_CloudExadataInfrastructure.
 *
 *  Gets details of a single Exadata Infrastructure.
 *
 *  @param name Required. The name of the Cloud Exadata Infrastructure in the
 *    following format:
 *    projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Exadata Infrastructures in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.cloudExadataInfrastructures.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  Exadata infrastructures will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for CloudExadataInfrastructure in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListCloudExadataInfrastructuresResponse.
 *
 *  Lists Exadata Infrastructures in a given project and location.
 *
 *  @param parent Required. The parent value for CloudExadataInfrastructure in
 *    the following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudExadataInfrastructuresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new VM Cluster in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.cloudVmClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersCreate : GTLROracleDatabaseQuery

/**
 *  Required. The ID of the VM Cluster to create. This value is restricted to
 *  (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters
 *  in length. The value must start with a letter and end with a letter or a
 *  number.
 */
@property(nonatomic, copy, nullable) NSString *cloudVmClusterId;

/**
 *  Required. The name of the parent in the following format:
 *  projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Creates a new VM Cluster in a given project and location.
 *
 *  @param object The @c GTLROracleDatabase_CloudVmCluster to include in the
 *    query.
 *  @param parent Required. The name of the parent in the following format:
 *    projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersCreate
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_CloudVmCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the database nodes of a VM Cluster.
 *
 *  Method: oracledatabase.projects.locations.cloudVmClusters.dbNodes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersDbNodesList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  db nodes will be returned. The maximum value is 1000; values above 1000 will
 *  be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token identifying a page of results the node should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for database node in the following format:
 *  projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListDbNodesResponse.
 *
 *  Lists the database nodes of a VM Cluster.
 *
 *  @param parent Required. The parent value for database node in the following
 *    format:
 *    projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersDbNodesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a single VM Cluster.
 *
 *  Method: oracledatabase.projects.locations.cloudVmClusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersDelete : GTLROracleDatabaseQuery

/**
 *  Optional. If set to true, all child resources for the VM Cluster will be
 *  deleted. A VM Cluster can only be deleted once all its child resources have
 *  been deleted.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the Cloud VM Cluster in the following format:
 *  projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Deletes a single VM Cluster.
 *
 *  @param name Required. The name of the Cloud VM Cluster in the following
 *    format:
 *    projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single VM Cluster.
 *
 *  Method: oracledatabase.projects.locations.cloudVmClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersGet : GTLROracleDatabaseQuery

/**
 *  Required. The name of the Cloud VM Cluster in the following format:
 *  projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_CloudVmCluster.
 *
 *  Gets details of a single VM Cluster.
 *
 *  @param name Required. The name of the Cloud VM Cluster in the following
 *    format:
 *    projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the VM Clusters in a given project and location.
 *
 *  Method: oracledatabase.projects.locations.cloudVmClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersList : GTLROracleDatabaseQuery

/** Optional. An expression for filtering the results of the request. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The number of VM clusters to return. If unspecified, at most 50 VM
 *  clusters will be returned. The maximum value is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token identifying the page of results the server returns. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent in the following format:
 *  projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListCloudVmClustersResponse.
 *
 *  Lists the VM Clusters in a given project and location.
 *
 *  @param parent Required. The name of the parent in the following format:
 *    projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsCloudVmClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the database system shapes available for the project and location.
 *
 *  Method: oracledatabase.projects.locations.dbSystemShapes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsDbSystemShapesList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, at most 50
 *  database system shapes will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for Database System Shapes in the following
 *  format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListDbSystemShapesResponse.
 *
 *  Lists the database system shapes available for the project and location.
 *
 *  @param parent Required. The parent value for Database System Shapes in the
 *    following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsDbSystemShapesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the entitlements in a given project.
 *
 *  Method: oracledatabase.projects.locations.entitlements.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsEntitlementsList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, a maximum
 *  of 50 entitlements will be returned. The maximum value is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for the entitlement in the following format:
 *  projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListEntitlementsResponse.
 *
 *  Lists the entitlements in a given project.
 *
 *  @param parent Required. The parent value for the entitlement in the
 *    following format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsEntitlementsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about a location.
 *
 *  Method: oracledatabase.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsGet : GTLROracleDatabaseQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
 *  project and location.
 *
 *  Method: oracledatabase.projects.locations.giVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsGiVersionsList : GTLROracleDatabaseQuery

/**
 *  Optional. The maximum number of items to return. If unspecified, a maximum
 *  of 50 Oracle Grid Infrastructure (GI) versions will be returned. The maximum
 *  value is 1000; values above 1000 will be reset to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent value for Grid Infrastructure Version in the following
 *  format: Format: projects/{project}/locations/{location}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLROracleDatabase_ListGiVersionsResponse.
 *
 *  Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
 *  project and location.
 *
 *  @param parent Required. The parent value for Grid Infrastructure Version in
 *    the following format: Format: projects/{project}/locations/{location}.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsGiVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: oracledatabase.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsList : GTLROracleDatabaseQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLROracleDatabase_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: oracledatabase.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsOperationsCancel : GTLROracleDatabaseQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLROracleDatabase_CancelOperationRequest to include in
 *    the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLROracleDatabase_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: oracledatabase.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsOperationsDelete : GTLROracleDatabaseQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: oracledatabase.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsOperationsGet : GTLROracleDatabaseQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLROracleDatabase_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: oracledatabase.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeOracleDatabaseCloudPlatform
 */
@interface GTLROracleDatabaseQuery_ProjectsLocationsOperationsList : GTLROracleDatabaseQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLROracleDatabase_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLROracleDatabaseQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
