// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Secure Source Manager API (securesourcemanager/v1)
// Description:
//   Regionally deployed, single-tenant managed source code repository hosted on
//   Google Cloud.
// Documentation:
//   https://cloud.google.com/secure-source-manager

#import <GoogleAPIClientForREST/GTLRSecureSourceManagerObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRSecureSourceManager_AuditLogConfig.logType
NSString * const kGTLRSecureSourceManager_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRSecureSourceManager_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRSecureSourceManager_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRSecureSourceManager_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRSecureSourceManager_FileDiff.action
NSString * const kGTLRSecureSourceManager_FileDiff_Action_ActionUnspecified = @"ACTION_UNSPECIFIED";
NSString * const kGTLRSecureSourceManager_FileDiff_Action_Added = @"ADDED";
NSString * const kGTLRSecureSourceManager_FileDiff_Action_Deleted = @"DELETED";
NSString * const kGTLRSecureSourceManager_FileDiff_Action_Modified = @"MODIFIED";

// GTLRSecureSourceManager_Hook.events
NSString * const kGTLRSecureSourceManager_Hook_Events_PullRequest = @"PULL_REQUEST";
NSString * const kGTLRSecureSourceManager_Hook_Events_Push     = @"PUSH";
NSString * const kGTLRSecureSourceManager_Hook_Events_Unspecified = @"UNSPECIFIED";

// GTLRSecureSourceManager_Instance.state
NSString * const kGTLRSecureSourceManager_Instance_State_Active = @"ACTIVE";
NSString * const kGTLRSecureSourceManager_Instance_State_Creating = @"CREATING";
NSString * const kGTLRSecureSourceManager_Instance_State_Deleting = @"DELETING";
NSString * const kGTLRSecureSourceManager_Instance_State_Paused = @"PAUSED";
NSString * const kGTLRSecureSourceManager_Instance_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRSecureSourceManager_Instance_State_Unknown = @"UNKNOWN";

// GTLRSecureSourceManager_Instance.stateNote
NSString * const kGTLRSecureSourceManager_Instance_StateNote_InstanceResuming = @"INSTANCE_RESUMING";
NSString * const kGTLRSecureSourceManager_Instance_StateNote_PausedCmekUnavailable = @"PAUSED_CMEK_UNAVAILABLE";
NSString * const kGTLRSecureSourceManager_Instance_StateNote_StateNoteUnspecified = @"STATE_NOTE_UNSPECIFIED";

// GTLRSecureSourceManager_Issue.state
NSString * const kGTLRSecureSourceManager_Issue_State_Closed   = @"CLOSED";
NSString * const kGTLRSecureSourceManager_Issue_State_Open     = @"OPEN";
NSString * const kGTLRSecureSourceManager_Issue_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRSecureSourceManager_PullRequest.state
NSString * const kGTLRSecureSourceManager_PullRequest_State_Closed = @"CLOSED";
NSString * const kGTLRSecureSourceManager_PullRequest_State_Merged = @"MERGED";
NSString * const kGTLRSecureSourceManager_PullRequest_State_Open = @"OPEN";
NSString * const kGTLRSecureSourceManager_PullRequest_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRSecureSourceManager_Review.actionType
NSString * const kGTLRSecureSourceManager_Review_ActionType_ActionTypeUnspecified = @"ACTION_TYPE_UNSPECIFIED";
NSString * const kGTLRSecureSourceManager_Review_ActionType_Approved = @"APPROVED";
NSString * const kGTLRSecureSourceManager_Review_ActionType_ChangeRequested = @"CHANGE_REQUESTED";
NSString * const kGTLRSecureSourceManager_Review_ActionType_Comment = @"COMMENT";

// GTLRSecureSourceManager_TreeEntry.type
NSString * const kGTLRSecureSourceManager_TreeEntry_Type_Blob  = @"BLOB";
NSString * const kGTLRSecureSourceManager_TreeEntry_Type_Commit = @"COMMIT";
NSString * const kGTLRSecureSourceManager_TreeEntry_Type_ObjectTypeUnspecified = @"OBJECT_TYPE_UNSPECIFIED";
NSString * const kGTLRSecureSourceManager_TreeEntry_Type_Tree  = @"TREE";

// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_AuditConfig
//

@implementation GTLRSecureSourceManager_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRSecureSourceManager_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_AuditLogConfig
//

@implementation GTLRSecureSourceManager_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_BatchCreatePullRequestCommentsRequest
//

@implementation GTLRSecureSourceManager_BatchCreatePullRequestCommentsRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRSecureSourceManager_CreatePullRequestCommentRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Binding
//

@implementation GTLRSecureSourceManager_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Branch
//

@implementation GTLRSecureSourceManager_Branch
@dynamic ref, sha;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_BranchRule
//

@implementation GTLRSecureSourceManager_BranchRule
@dynamic allowStaleReviews, annotations, createTime, disabled, ETag,
         includePattern, minimumApprovalsCount, minimumReviewsCount, name,
         requireCommentsResolved, requiredStatusChecks, requireLinearHistory,
         requirePullRequest, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requiredStatusChecks" : [GTLRSecureSourceManager_Check class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_BranchRule_Annotations
//

@implementation GTLRSecureSourceManager_BranchRule_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_CancelOperationRequest
//

@implementation GTLRSecureSourceManager_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Check
//

@implementation GTLRSecureSourceManager_Check
@dynamic context;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_CloseIssueRequest
//

@implementation GTLRSecureSourceManager_CloseIssueRequest
@dynamic ETag;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ClosePullRequestRequest
//

@implementation GTLRSecureSourceManager_ClosePullRequestRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Code
//

@implementation GTLRSecureSourceManager_Code
@dynamic body, effectiveCommitSha, effectiveRootComment, position, reply,
         resolved;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Comment
//

@implementation GTLRSecureSourceManager_Comment
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_CreatePullRequestCommentRequest
//

@implementation GTLRSecureSourceManager_CreatePullRequestCommentRequest
@dynamic parent, pullRequestComment;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Empty
//

@implementation GTLRSecureSourceManager_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Expr
//

@implementation GTLRSecureSourceManager_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_FetchBlobResponse
//

@implementation GTLRSecureSourceManager_FetchBlobResponse
@dynamic content, sha;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_FetchTreeResponse
//

@implementation GTLRSecureSourceManager_FetchTreeResponse
@dynamic nextPageToken, treeEntries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"treeEntries" : [GTLRSecureSourceManager_TreeEntry class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"treeEntries";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_FileDiff
//

@implementation GTLRSecureSourceManager_FileDiff
@dynamic action, name, patch, sha;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Hook
//

@implementation GTLRSecureSourceManager_Hook
@dynamic createTime, disabled, events, name, pushOption, sensitiveQueryString,
         targetUri, uid, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"events" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_HostConfig
//

@implementation GTLRSecureSourceManager_HostConfig
@dynamic api, gitHttp, gitSsh, html;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_InitialConfig
//

@implementation GTLRSecureSourceManager_InitialConfig
@dynamic defaultBranch, gitignores, license, readme;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"gitignores" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Instance
//

@implementation GTLRSecureSourceManager_Instance
@dynamic createTime, hostConfig, kmsKey, labels, name, privateConfig, state,
         stateNote, updateTime, workforceIdentityFederationConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Instance_Labels
//

@implementation GTLRSecureSourceManager_Instance_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Issue
//

@implementation GTLRSecureSourceManager_Issue
@dynamic body, closeTime, createTime, ETag, name, state, title, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_IssueComment
//

@implementation GTLRSecureSourceManager_IssueComment
@dynamic body, createTime, name, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListBranchRulesResponse
//

@implementation GTLRSecureSourceManager_ListBranchRulesResponse
@dynamic branchRules, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"branchRules" : [GTLRSecureSourceManager_BranchRule class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"branchRules";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListHooksResponse
//

@implementation GTLRSecureSourceManager_ListHooksResponse
@dynamic hooks, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hooks" : [GTLRSecureSourceManager_Hook class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"hooks";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListInstancesResponse
//

@implementation GTLRSecureSourceManager_ListInstancesResponse
@dynamic instances, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRSecureSourceManager_Instance class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"instances";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListIssueCommentsResponse
//

@implementation GTLRSecureSourceManager_ListIssueCommentsResponse
@dynamic issueComments, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"issueComments" : [GTLRSecureSourceManager_IssueComment class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"issueComments";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListIssuesResponse
//

@implementation GTLRSecureSourceManager_ListIssuesResponse
@dynamic issues, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"issues" : [GTLRSecureSourceManager_Issue class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"issues";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListLocationsResponse
//

@implementation GTLRSecureSourceManager_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRSecureSourceManager_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListOperationsResponse
//

@implementation GTLRSecureSourceManager_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRSecureSourceManager_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListPullRequestCommentsResponse
//

@implementation GTLRSecureSourceManager_ListPullRequestCommentsResponse
@dynamic nextPageToken, pullRequestComments;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pullRequestComments" : [GTLRSecureSourceManager_PullRequestComment class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"pullRequestComments";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListPullRequestFileDiffsResponse
//

@implementation GTLRSecureSourceManager_ListPullRequestFileDiffsResponse
@dynamic fileDiffs, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileDiffs" : [GTLRSecureSourceManager_FileDiff class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"fileDiffs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListPullRequestsResponse
//

@implementation GTLRSecureSourceManager_ListPullRequestsResponse
@dynamic nextPageToken, pullRequests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pullRequests" : [GTLRSecureSourceManager_PullRequest class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"pullRequests";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ListRepositoriesResponse
//

@implementation GTLRSecureSourceManager_ListRepositoriesResponse
@dynamic nextPageToken, repositories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"repositories" : [GTLRSecureSourceManager_Repository class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"repositories";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Location
//

@implementation GTLRSecureSourceManager_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Location_Labels
//

@implementation GTLRSecureSourceManager_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Location_Metadata
//

@implementation GTLRSecureSourceManager_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_MergePullRequestRequest
//

@implementation GTLRSecureSourceManager_MergePullRequestRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_OpenIssueRequest
//

@implementation GTLRSecureSourceManager_OpenIssueRequest
@dynamic ETag;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_OpenPullRequestRequest
//

@implementation GTLRSecureSourceManager_OpenPullRequestRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Operation
//

@implementation GTLRSecureSourceManager_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Operation_Metadata
//

@implementation GTLRSecureSourceManager_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Operation_Response
//

@implementation GTLRSecureSourceManager_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_OperationMetadata
//

@implementation GTLRSecureSourceManager_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Policy
//

@implementation GTLRSecureSourceManager_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRSecureSourceManager_AuditConfig class],
    @"bindings" : [GTLRSecureSourceManager_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Position
//

@implementation GTLRSecureSourceManager_Position
@dynamic line, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_PrivateConfig
//

@implementation GTLRSecureSourceManager_PrivateConfig
@dynamic caPool, httpServiceAttachment, isPrivate, pscAllowedProjects,
         sshServiceAttachment;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pscAllowedProjects" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_PullRequest
//

@implementation GTLRSecureSourceManager_PullRequest
@dynamic base, body, closeTime, createTime, head, name, state, title,
         updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_PullRequestComment
//

@implementation GTLRSecureSourceManager_PullRequestComment
@dynamic code, comment, createTime, name, review, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_PushOption
//

@implementation GTLRSecureSourceManager_PushOption
@dynamic branchFilter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Repository
//

@implementation GTLRSecureSourceManager_Repository
@dynamic createTime, descriptionProperty, ETag, initialConfig, instance, name,
         uid, updateTime, uris;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_ResolvePullRequestCommentsRequest
//

@implementation GTLRSecureSourceManager_ResolvePullRequestCommentsRequest
@dynamic autoFill, names;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Review
//

@implementation GTLRSecureSourceManager_Review
@dynamic actionType, body, effectiveCommitSha;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_SetIamPolicyRequest
//

@implementation GTLRSecureSourceManager_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Status
//

@implementation GTLRSecureSourceManager_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRSecureSourceManager_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_Status_Details_Item
//

@implementation GTLRSecureSourceManager_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_TestIamPermissionsRequest
//

@implementation GTLRSecureSourceManager_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_TestIamPermissionsResponse
//

@implementation GTLRSecureSourceManager_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_TreeEntry
//

@implementation GTLRSecureSourceManager_TreeEntry
@dynamic mode, path, sha, size, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_UnresolvePullRequestCommentsRequest
//

@implementation GTLRSecureSourceManager_UnresolvePullRequestCommentsRequest
@dynamic autoFill, names;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_URIs
//

@implementation GTLRSecureSourceManager_URIs
@dynamic api, gitHttps, html;
@end


// ----------------------------------------------------------------------------
//
//   GTLRSecureSourceManager_WorkforceIdentityFederationConfig
//

@implementation GTLRSecureSourceManager_WorkforceIdentityFederationConfig
@dynamic enabled;
@end
