// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Functions API (cloudfunctions/v2)
// Description:
//   Manages lightweight user-provided functions executed in response to events.
// Documentation:
//   https://cloud.google.com/functions

#import <GoogleAPIClientForREST/GTLRCloudFunctionsQuery.h>

@implementation GTLRCloudFunctionsQuery

@dynamic fields;

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v2/{+resource}:getIamPolicy";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_Policy class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v2/{+resource}:setIamPolicy";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_Policy class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudFunctions_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v2/{+resource}:testIamPermissions";
  GTLRCloudFunctionsQuery_ProjectsLocationsFunctionsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudFunctions_TestIamPermissionsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.functions.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/locations";
  GTLRCloudFunctionsQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_ListLocationsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.list";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudFunctionsQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_Operation class];
  query.loggingName = @"cloudfunctions.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRCloudFunctionsQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLRCloudFunctionsQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudFunctions_ListOperationsResponse class];
  query.loggingName = @"cloudfunctions.projects.locations.operations.list";
  return query;
}

@end
