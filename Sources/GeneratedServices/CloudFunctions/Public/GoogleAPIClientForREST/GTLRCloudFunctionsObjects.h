// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Functions API (cloudfunctions/v2)
// Description:
//   Manages lightweight user-provided functions executed in response to events.
// Documentation:
//   https://cloud.google.com/functions

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudFunctions_AuditConfig;
@class GTLRCloudFunctions_AuditLogConfig;
@class GTLRCloudFunctions_Binding;
@class GTLRCloudFunctions_BuildConfig;
@class GTLRCloudFunctions_BuildConfig_EnvironmentVariables;
@class GTLRCloudFunctions_EventFilter;
@class GTLRCloudFunctions_EventTrigger;
@class GTLRCloudFunctions_Expr;
@class GTLRCloudFunctions_Function;
@class GTLRCloudFunctions_Function_Labels;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2alphaOperationMetadata_RequestResource;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2betaOperationMetadata_RequestResource;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2betaStage;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2OperationMetadata_RequestResource;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2Stage;
@class GTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage;
@class GTLRCloudFunctions_Location;
@class GTLRCloudFunctions_Location_Labels;
@class GTLRCloudFunctions_Location_Metadata;
@class GTLRCloudFunctions_Operation;
@class GTLRCloudFunctions_Operation_Metadata;
@class GTLRCloudFunctions_Operation_Response;
@class GTLRCloudFunctions_OperationMetadataV1_Request;
@class GTLRCloudFunctions_Policy;
@class GTLRCloudFunctions_RepoSource;
@class GTLRCloudFunctions_Runtime;
@class GTLRCloudFunctions_SecretEnvVar;
@class GTLRCloudFunctions_SecretVersion;
@class GTLRCloudFunctions_SecretVolume;
@class GTLRCloudFunctions_ServiceConfig;
@class GTLRCloudFunctions_ServiceConfig_EnvironmentVariables;
@class GTLRCloudFunctions_Source;
@class GTLRCloudFunctions_SourceProvenance;
@class GTLRCloudFunctions_Status;
@class GTLRCloudFunctions_Status_Details_Item;
@class GTLRCloudFunctions_StorageSource;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_BuildConfig.dockerRegistry

/**
 *  Docker images will be stored in regional Artifact Registry repositories. By
 *  default, GCF will create and use repositories named `gcf-artifacts` in every
 *  region in which a function is deployed. But the repository to use can also
 *  be specified by the user using the `docker_repository` field.
 *
 *  Value: "ARTIFACT_REGISTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_BuildConfig_DockerRegistry_ArtifactRegistry;
/**
 *  Docker images will be stored in multi-regional Container Registry
 *  repositories named `gcf`.
 *
 *  Value: "CONTAINER_REGISTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_BuildConfig_DockerRegistry_ContainerRegistry;
/**
 *  Unspecified.
 *
 *  Value: "DOCKER_REGISTRY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_BuildConfig_DockerRegistry_DockerRegistryUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_EventTrigger.retryPolicy

/**
 *  Do not retry.
 *
 *  Value: "RETRY_POLICY_DO_NOT_RETRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyDoNotRetry;
/**
 *  Retry on any failure, retry up to 7 days with an exponential backoff (capped
 *  at 10 seconds).
 *
 *  Value: "RETRY_POLICY_RETRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyRetry;
/**
 *  Not specified.
 *
 *  Value: "RETRY_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_Function.environment

/**
 *  Unspecified
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_Environment_EnvironmentUnspecified;
/**
 *  Gen 1
 *
 *  Value: "GEN_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_Environment_Gen1;
/**
 *  Gen 2
 *
 *  Value: "GEN_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_Environment_Gen2;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_Function.state

/**
 *  Function has been successfully deployed and is serving.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_Active;
/**
 *  Function is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_Deleting;
/**
 *  Function is being created or updated.
 *
 *  Value: "DEPLOYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_Deploying;
/**
 *  Function deployment failed and the function is not serving.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_Failed;
/**
 *  Not specified. Invalid state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_StateUnspecified;
/**
 *  Function deployment failed and the function serving state is undefined. The
 *  function should be updated or deleted to move it out of this state.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Function_State_Unknown;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage.name

/**
 *  Artifact Regsitry Stage
 *
 *  Value: "ARTIFACT_REGISTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_ArtifactRegistry;
/**
 *  Build Stage
 *
 *  Value: "BUILD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Build;
/**
 *  Not specified. Invalid name.
 *
 *  Value: "NAME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_NameUnspecified;
/**
 *  Service Stage
 *
 *  Value: "SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Service;
/**
 *  Service Rollback Stage
 *
 *  Value: "SERVICE_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_ServiceRollback;
/**
 *  Trigger Stage
 *
 *  Value: "TRIGGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Trigger;
/**
 *  Trigger Rollback Stage
 *
 *  Value: "TRIGGER_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_TriggerRollback;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage.state

/**
 *  Stage has completed.
 *
 *  Value: "COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_Complete;
/**
 *  Stage is in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_InProgress;
/**
 *  Stage has not started.
 *
 *  Value: "NOT_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_NotStarted;
/**
 *  Not specified. Invalid state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage.severity

/**
 *  ERROR-level severity.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Error;
/**
 *  INFO-level severity.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Info;
/**
 *  Not specified. Invalid severity.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_SeverityUnspecified;
/**
 *  WARNING-level severity.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2betaStage.name

/**
 *  Artifact Regsitry Stage
 *
 *  Value: "ARTIFACT_REGISTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_ArtifactRegistry;
/**
 *  Build Stage
 *
 *  Value: "BUILD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Build;
/**
 *  Not specified. Invalid name.
 *
 *  Value: "NAME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_NameUnspecified;
/**
 *  Service Stage
 *
 *  Value: "SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Service;
/**
 *  Service Rollback Stage
 *
 *  Value: "SERVICE_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_ServiceRollback;
/**
 *  Trigger Stage
 *
 *  Value: "TRIGGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Trigger;
/**
 *  Trigger Rollback Stage
 *
 *  Value: "TRIGGER_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_TriggerRollback;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2betaStage.state

/**
 *  Stage has completed.
 *
 *  Value: "COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_Complete;
/**
 *  Stage is in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_InProgress;
/**
 *  Stage has not started.
 *
 *  Value: "NOT_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_NotStarted;
/**
 *  Not specified. Invalid state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage.severity

/**
 *  ERROR-level severity.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Error;
/**
 *  INFO-level severity.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Info;
/**
 *  Not specified. Invalid severity.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_SeverityUnspecified;
/**
 *  WARNING-level severity.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2Stage.name

/**
 *  Artifact Regsitry Stage
 *
 *  Value: "ARTIFACT_REGISTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_ArtifactRegistry;
/**
 *  Build Stage
 *
 *  Value: "BUILD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Build;
/**
 *  Not specified. Invalid name.
 *
 *  Value: "NAME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_NameUnspecified;
/**
 *  Service Stage
 *
 *  Value: "SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Service;
/**
 *  Service Rollback Stage
 *
 *  Value: "SERVICE_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_ServiceRollback;
/**
 *  Trigger Stage
 *
 *  Value: "TRIGGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Trigger;
/**
 *  Trigger Rollback Stage
 *
 *  Value: "TRIGGER_ROLLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_TriggerRollback;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2Stage.state

/**
 *  Stage has completed.
 *
 *  Value: "COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_Complete;
/**
 *  Stage is in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_InProgress;
/**
 *  Stage has not started.
 *
 *  Value: "NOT_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_NotStarted;
/**
 *  Not specified. Invalid state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage.severity

/**
 *  ERROR-level severity.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Error;
/**
 *  INFO-level severity.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Info;
/**
 *  Not specified. Invalid severity.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_SeverityUnspecified;
/**
 *  WARNING-level severity.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_OperationMetadataV1.type

/**
 *  Triggered by CreateFunction call
 *
 *  Value: "CREATE_FUNCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_OperationMetadataV1_Type_CreateFunction;
/**
 *  Triggered by DeleteFunction call.
 *
 *  Value: "DELETE_FUNCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_OperationMetadataV1_Type_DeleteFunction;
/**
 *  Unknown operation type.
 *
 *  Value: "OPERATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_OperationMetadataV1_Type_OperationUnspecified;
/**
 *  Triggered by UpdateFunction call
 *
 *  Value: "UPDATE_FUNCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_OperationMetadataV1_Type_UpdateFunction;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_Runtime.environment

/**
 *  Unspecified
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Environment_EnvironmentUnspecified;
/**
 *  Gen 1
 *
 *  Value: "GEN_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Environment_Gen1;
/**
 *  Gen 2
 *
 *  Value: "GEN_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Environment_Gen2;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_Runtime.stage

/**
 *  The runtime is in the Alpha stage.
 *
 *  Value: "ALPHA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Alpha;
/**
 *  The runtime is in the Beta stage.
 *
 *  Value: "BETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Beta;
/**
 *  The runtime is no longer supported.
 *
 *  Value: "DECOMMISSIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Decommissioned;
/**
 *  The runtime is deprecated.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Deprecated;
/**
 *  The runtime is in development.
 *
 *  Value: "DEVELOPMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Development;
/**
 *  The runtime is generally available.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_Ga;
/**
 *  Not specified.
 *
 *  Value: "RUNTIME_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_Runtime_Stage_RuntimeStageUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_ServiceConfig.ingressSettings

/**
 *  Allow HTTP traffic from public and private sources.
 *
 *  Value: "ALLOW_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowAll;
/**
 *  Allow HTTP traffic from private VPC sources and through GCLB.
 *
 *  Value: "ALLOW_INTERNAL_AND_GCLB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowInternalAndGclb;
/**
 *  Allow HTTP traffic from only private VPC sources.
 *
 *  Value: "ALLOW_INTERNAL_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowInternalOnly;
/**
 *  Unspecified.
 *
 *  Value: "INGRESS_SETTINGS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_IngressSettings_IngressSettingsUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_ServiceConfig.securityLevel

/**
 *  Requests for a URL that match this handler that do not use HTTPS are
 *  automatically redirected to the HTTPS URL with the same path. Query
 *  parameters are reserved for the redirect.
 *
 *  Value: "SECURE_ALWAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecureAlways;
/**
 *  Both HTTP and HTTPS requests with URLs that match the handler succeed
 *  without redirects. The application can examine the request to determine
 *  which protocol was used and respond accordingly.
 *
 *  Value: "SECURE_OPTIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecureOptional;
/**
 *  Unspecified.
 *
 *  Value: "SECURITY_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecurityLevelUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudFunctions_ServiceConfig.vpcConnectorEgressSettings

/**
 *  Force the use of VPC Access Connector for all egress traffic from the
 *  function.
 *
 *  Value: "ALL_TRAFFIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_AllTraffic;
/**
 *  Use the VPC Access Connector only for private IP space from RFC1918.
 *
 *  Value: "PRIVATE_RANGES_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_PrivateRangesOnly;
/**
 *  Unspecified.
 *
 *  Value: "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_VpcConnectorEgressSettingsUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRCloudFunctions_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCloudFunctions_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_AuditLogConfig_LogType_AdminRead Admin reads.
 *        Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCloudFunctions_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCloudFunctions_AuditLogConfig_LogType_DataWrite Data writes.
 *        Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCloudFunctions_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCloudFunctions_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Describes the Build step of the function that builds a container from the
 *  given source.
 */
@interface GTLRCloudFunctions_BuildConfig : GTLRObject

/**
 *  Output only. The Cloud Build name of the latest successful deployment of the
 *  function.
 */
@property(nonatomic, copy, nullable) NSString *build;

/** Specifies one of the Google provided buildpack stacks. */
@property(nonatomic, copy, nullable) NSString *buildpackStack;

/**
 *  Optional. Docker Registry to use for this deployment. This configuration is
 *  only applicable to 1st Gen functions, 2nd Gen functions can only use
 *  Artifact Registry. If `docker_repository` field is specified, this field
 *  will be automatically set as `ARTIFACT_REGISTRY`. If unspecified, it
 *  currently defaults to `CONTAINER_REGISTRY`. This field may be overridden by
 *  the backend for eligible deployments.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_BuildConfig_DockerRegistry_ArtifactRegistry
 *        Docker images will be stored in regional Artifact Registry
 *        repositories. By default, GCF will create and use repositories named
 *        `gcf-artifacts` in every region in which a function is deployed. But
 *        the repository to use can also be specified by the user using the
 *        `docker_repository` field. (Value: "ARTIFACT_REGISTRY")
 *    @arg @c kGTLRCloudFunctions_BuildConfig_DockerRegistry_ContainerRegistry
 *        Docker images will be stored in multi-regional Container Registry
 *        repositories named `gcf`. (Value: "CONTAINER_REGISTRY")
 *    @arg @c kGTLRCloudFunctions_BuildConfig_DockerRegistry_DockerRegistryUnspecified
 *        Unspecified. (Value: "DOCKER_REGISTRY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dockerRegistry;

/**
 *  User managed repository created in Artifact Registry optionally with a
 *  customer managed encryption key. This is the repository to which the
 *  function docker image will be pushed after it is built by Cloud Build. If
 *  unspecified, GCF will create and use a repository named 'gcf-artifacts' for
 *  every deployed region. It must match the pattern
 *  `projects/{project}/locations/{location}/repositories/{repository}`.
 *  Cross-project repositories are not supported. Cross-location repositories
 *  are not supported. Repository format must be 'DOCKER'.
 */
@property(nonatomic, copy, nullable) NSString *dockerRepository;

/**
 *  The name of the function (as defined in source code) that will be executed.
 *  Defaults to the resource name suffix, if not specified. For backward
 *  compatibility, if function with given name is not found, then the system
 *  will try to use function named "function". For Node.js this is name of a
 *  function exported by the module specified in `source_location`.
 */
@property(nonatomic, copy, nullable) NSString *entryPoint;

/** User-provided build-time environment variables for the function */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_BuildConfig_EnvironmentVariables *environmentVariables;

/**
 *  The runtime in which to run the function. Required when deploying a new
 *  function, optional when updating an existing function. For a complete list
 *  of possible choices, see the [`gcloud` command
 *  reference](https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime).
 */
@property(nonatomic, copy, nullable) NSString *runtime;

/** The location of the function source code. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Source *source;

/** Output only. A permanent fixed identifier for source. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_SourceProvenance *sourceProvenance;

/**
 *  Name of the Cloud Build Custom Worker Pool that should be used to build the
 *  function. The format of this field is
 *  `projects/{project}/locations/{region}/workerPools/{workerPool}` where
 *  {project} and {region} are the project id and region respectively where the
 *  worker pool is defined and {workerPool} is the short name of the worker
 *  pool. If the project id is not the same as the function, then the Cloud
 *  Functions Service Agent (service-\@gcf-admin-robot.iam.gserviceaccount.com)
 *  must be granted the role Cloud Build Custom Workers Builder
 *  (roles/cloudbuild.customworkers.builder) in the project.
 */
@property(nonatomic, copy, nullable) NSString *workerPool;

@end


/**
 *  User-provided build-time environment variables for the function
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFunctions_BuildConfig_EnvironmentVariables : GTLRObject
@end


/**
 *  Filters events based on exact matches on the CloudEvents attributes.
 */
@interface GTLRCloudFunctions_EventFilter : GTLRObject

/** Required. The name of a CloudEvents attribute. */
@property(nonatomic, copy, nullable) NSString *attribute;

/**
 *  Optional. The operator used for matching the events with the value of the
 *  filter. If not specified, only events that have an exact key-value pair
 *  specified in the filter are matched. The only allowed value is
 *  `match-path-pattern`.
 *
 *  Remapped to 'operatorProperty' to avoid language reserved word 'operator'.
 */
@property(nonatomic, copy, nullable) NSString *operatorProperty;

/** Required. The value for the attribute. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Describes EventTrigger, used to request events to be sent from another
 *  service.
 */
@interface GTLRCloudFunctions_EventTrigger : GTLRObject

/**
 *  Optional. The name of the channel associated with the trigger in
 *  `projects/{project}/locations/{location}/channels/{channel}` format. You
 *  must provide a channel to receive events from Eventarc SaaS partners.
 */
@property(nonatomic, copy, nullable) NSString *channel;

/** Criteria used to filter events. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_EventFilter *> *eventFilters;

/**
 *  Required. The type of event to observe. For example:
 *  `google.cloud.audit.log.v1.written` or
 *  `google.cloud.pubsub.topic.v1.messagePublished`.
 */
@property(nonatomic, copy, nullable) NSString *eventType;

/**
 *  Optional. The name of a Pub/Sub topic in the same project that will be used
 *  as the transport topic for the event delivery. Format:
 *  `projects/{project}/topics/{topic}`. This is only valid for events of type
 *  `google.cloud.pubsub.topic.v1.messagePublished`. The topic provided here
 *  will not be deleted at function deletion.
 */
@property(nonatomic, copy, nullable) NSString *pubsubTopic;

/**
 *  Optional. If unset, then defaults to ignoring failures (i.e. not retrying
 *  them).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyDoNotRetry
 *        Do not retry. (Value: "RETRY_POLICY_DO_NOT_RETRY")
 *    @arg @c kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyRetry
 *        Retry on any failure, retry up to 7 days with an exponential backoff
 *        (capped at 10 seconds). (Value: "RETRY_POLICY_RETRY")
 *    @arg @c kGTLRCloudFunctions_EventTrigger_RetryPolicy_RetryPolicyUnspecified
 *        Not specified. (Value: "RETRY_POLICY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *retryPolicy;

/**
 *  Optional. The email of the trigger's service account. The service account
 *  must have permission to invoke Cloud Run services, the permission is
 *  `run.routes.invoke`. If empty, defaults to the Compute Engine default
 *  service account: `{project_number}-compute\@developer.gserviceaccount.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountEmail;

/**
 *  Output only. The resource name of the Eventarc trigger. The format of this
 *  field is `projects/{project}/locations/{region}/triggers/{trigger}`.
 */
@property(nonatomic, copy, nullable) NSString *trigger;

/**
 *  The region that the trigger will be in. The trigger will only receive events
 *  originating in this region. It can be the same region as the function, a
 *  different region or multi-region, or the global region. If not provided,
 *  defaults to the same region as the function.
 */
@property(nonatomic, copy, nullable) NSString *triggerRegion;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCloudFunctions_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Describes a Cloud Function that contains user computation executed in
 *  response to an event. It encapsulates function and trigger configurations.
 */
@interface GTLRCloudFunctions_Function : GTLRObject

/**
 *  Describes the Build step of the function that builds a container from the
 *  given source.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_BuildConfig *buildConfig;

/**
 *  User-provided description of a function.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Describe whether the function is gen1 or gen2.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_Function_Environment_EnvironmentUnspecified
 *        Unspecified (Value: "ENVIRONMENT_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_Function_Environment_Gen1 Gen 1 (Value:
 *        "GEN_1")
 *    @arg @c kGTLRCloudFunctions_Function_Environment_Gen2 Gen 2 (Value:
 *        "GEN_2")
 */
@property(nonatomic, copy, nullable) NSString *environment;

/**
 *  An Eventarc trigger managed by Google Cloud Functions that fires events in
 *  response to a condition in another service.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_EventTrigger *eventTrigger;

/** Labels associated with this Cloud Function. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Function_Labels *labels;

/**
 *  A user-defined name of the function. Function names must be unique globally
 *  and match pattern `projects/ * /locations/ * /functions/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Describes the Service being deployed. Currently deploys services to Cloud
 *  Run (fully managed).
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_ServiceConfig *serviceConfig;

/**
 *  Output only. State of the function.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_Function_State_Active Function has been
 *        successfully deployed and is serving. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudFunctions_Function_State_Deleting Function is being
 *        deleted. (Value: "DELETING")
 *    @arg @c kGTLRCloudFunctions_Function_State_Deploying Function is being
 *        created or updated. (Value: "DEPLOYING")
 *    @arg @c kGTLRCloudFunctions_Function_State_Failed Function deployment
 *        failed and the function is not serving. (Value: "FAILED")
 *    @arg @c kGTLRCloudFunctions_Function_State_StateUnspecified Not specified.
 *        Invalid state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_Function_State_Unknown Function deployment
 *        failed and the function serving state is undefined. The function
 *        should be updated or deleted to move it out of this state. (Value:
 *        "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. State Messages for this Cloud Function. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage *> *stateMessages;

/** Output only. The last update timestamp of a Cloud Function. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Labels associated with this Cloud Function.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFunctions_Function_Labels : GTLRObject
@end


/**
 *  Request of `GenerateDownloadUrl` method.
 */
@interface GTLRCloudFunctions_GenerateDownloadUrlRequest : GTLRObject
@end


/**
 *  Response of `GenerateDownloadUrl` method.
 */
@interface GTLRCloudFunctions_GenerateDownloadUrlResponse : GTLRObject

/**
 *  The generated Google Cloud Storage signed URL that should be used for
 *  function source code download.
 */
@property(nonatomic, copy, nullable) NSString *downloadUrl;

@end


/**
 *  Request of `GenerateSourceUploadUrl` method.
 */
@interface GTLRCloudFunctions_GenerateUploadUrlRequest : GTLRObject
@end


/**
 *  Response of `GenerateSourceUploadUrl` method.
 */
@interface GTLRCloudFunctions_GenerateUploadUrlResponse : GTLRObject

/**
 *  The location of the source code in the upload bucket. Once the archive is
 *  uploaded using the `upload_url` use this field to set the
 *  `function.build_config.source.storage_source` during CreateFunction and
 *  UpdateFunction. Generation defaults to 0, as Cloud Storage provides a new
 *  generation only upon uploading a new object or version of an object.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_StorageSource *storageSource;

/**
 *  The generated Google Cloud Storage signed URL that should be used for a
 *  function source code upload. The uploaded file should be a zip archive which
 *  contains a function.
 */
@property(nonatomic, copy, nullable) NSString *uploadUrl;

@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2alphaOperationMetadata : GTLRObject

/** API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  Identifies whether the user has requested cancellation of the operation.
 *  Operations that have successfully been cancelled have Operation.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The original request that started the operation. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_GoogleCloudFunctionsV2alphaOperationMetadata_RequestResource *requestResource;

/** Mechanism for reporting in-progress stages */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage *> *stages;

/** Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/** Server-defined resource path for the target of the operation. */
@property(nonatomic, copy, nullable) NSString *target;

/** Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The original request that started the operation.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2alphaOperationMetadata_RequestResource : GTLRObject
@end


/**
 *  Each Stage of the deployment process
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage : GTLRObject

/** Message describing the Stage */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Name of the Stage. This will be unique for each Stage.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_ArtifactRegistry
 *        Artifact Regsitry Stage (Value: "ARTIFACT_REGISTRY")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Build
 *        Build Stage (Value: "BUILD")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_NameUnspecified
 *        Not specified. Invalid name. (Value: "NAME_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Service
 *        Service Stage (Value: "SERVICE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_ServiceRollback
 *        Service Rollback Stage (Value: "SERVICE_ROLLBACK")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_Trigger
 *        Trigger Stage (Value: "TRIGGER")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_Name_TriggerRollback
 *        Trigger Rollback Stage (Value: "TRIGGER_ROLLBACK")
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Resource of the Stage */
@property(nonatomic, copy, nullable) NSString *resource;

/** Link to the current Stage resource */
@property(nonatomic, copy, nullable) NSString *resourceUri;

/**
 *  Current state of the Stage
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_Complete
 *        Stage has completed. (Value: "COMPLETE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_InProgress
 *        Stage is in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_NotStarted
 *        Stage has not started. (Value: "NOT_STARTED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStage_State_StateUnspecified
 *        Not specified. Invalid state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** State messages from the current Stage. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage *> *stateMessages;

@end


/**
 *  Informational messages about the state of the Cloud Function or Operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage : GTLRObject

/** The message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Severity of the state message.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Error
 *        ERROR-level severity. (Value: "ERROR")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Info
 *        INFO-level severity. (Value: "INFO")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_SeverityUnspecified
 *        Not specified. Invalid severity. (Value: "SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2alphaStateMessage_Severity_Warning
 *        WARNING-level severity. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/** One-word CamelCase type of the state message. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2betaOperationMetadata : GTLRObject

/** API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  Identifies whether the user has requested cancellation of the operation.
 *  Operations that have successfully been cancelled have Operation.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The original request that started the operation. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_GoogleCloudFunctionsV2betaOperationMetadata_RequestResource *requestResource;

/** Mechanism for reporting in-progress stages */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2betaStage *> *stages;

/** Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/** Server-defined resource path for the target of the operation. */
@property(nonatomic, copy, nullable) NSString *target;

/** Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The original request that started the operation.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2betaOperationMetadata_RequestResource : GTLRObject
@end


/**
 *  Each Stage of the deployment process
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2betaStage : GTLRObject

/** Message describing the Stage */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Name of the Stage. This will be unique for each Stage.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_ArtifactRegistry
 *        Artifact Regsitry Stage (Value: "ARTIFACT_REGISTRY")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Build
 *        Build Stage (Value: "BUILD")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_NameUnspecified
 *        Not specified. Invalid name. (Value: "NAME_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Service
 *        Service Stage (Value: "SERVICE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_ServiceRollback
 *        Service Rollback Stage (Value: "SERVICE_ROLLBACK")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_Trigger
 *        Trigger Stage (Value: "TRIGGER")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_Name_TriggerRollback
 *        Trigger Rollback Stage (Value: "TRIGGER_ROLLBACK")
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Resource of the Stage */
@property(nonatomic, copy, nullable) NSString *resource;

/** Link to the current Stage resource */
@property(nonatomic, copy, nullable) NSString *resourceUri;

/**
 *  Current state of the Stage
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_Complete
 *        Stage has completed. (Value: "COMPLETE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_InProgress
 *        Stage is in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_NotStarted
 *        Stage has not started. (Value: "NOT_STARTED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStage_State_StateUnspecified
 *        Not specified. Invalid state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** State messages from the current Stage. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage *> *stateMessages;

@end


/**
 *  Informational messages about the state of the Cloud Function or Operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage : GTLRObject

/** The message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Severity of the state message.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Error
 *        ERROR-level severity. (Value: "ERROR")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Info
 *        INFO-level severity. (Value: "INFO")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_SeverityUnspecified
 *        Not specified. Invalid severity. (Value: "SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2betaStateMessage_Severity_Warning
 *        WARNING-level severity. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/** One-word CamelCase type of the state message. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2OperationMetadata : GTLRObject

/** API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  Identifies whether the user has requested cancellation of the operation.
 *  Operations that have successfully been cancelled have Operation.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The original request that started the operation. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_GoogleCloudFunctionsV2OperationMetadata_RequestResource *requestResource;

/** Mechanism for reporting in-progress stages */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2Stage *> *stages;

/** Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/** Server-defined resource path for the target of the operation. */
@property(nonatomic, copy, nullable) NSString *target;

/** Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The original request that started the operation.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2OperationMetadata_RequestResource : GTLRObject
@end


/**
 *  Each Stage of the deployment process
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2Stage : GTLRObject

/** Message describing the Stage */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Name of the Stage. This will be unique for each Stage.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_ArtifactRegistry
 *        Artifact Regsitry Stage (Value: "ARTIFACT_REGISTRY")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Build Build
 *        Stage (Value: "BUILD")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_NameUnspecified
 *        Not specified. Invalid name. (Value: "NAME_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Service
 *        Service Stage (Value: "SERVICE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_ServiceRollback
 *        Service Rollback Stage (Value: "SERVICE_ROLLBACK")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_Trigger
 *        Trigger Stage (Value: "TRIGGER")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_Name_TriggerRollback
 *        Trigger Rollback Stage (Value: "TRIGGER_ROLLBACK")
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Resource of the Stage */
@property(nonatomic, copy, nullable) NSString *resource;

/** Link to the current Stage resource */
@property(nonatomic, copy, nullable) NSString *resourceUri;

/**
 *  Current state of the Stage
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_Complete
 *        Stage has completed. (Value: "COMPLETE")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_InProgress
 *        Stage is in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_NotStarted
 *        Stage has not started. (Value: "NOT_STARTED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2Stage_State_StateUnspecified
 *        Not specified. Invalid state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** State messages from the current Stage. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage *> *stateMessages;

@end


/**
 *  Informational messages about the state of the Cloud Function or Operation.
 */
@interface GTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage : GTLRObject

/** The message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Severity of the state message.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Error
 *        ERROR-level severity. (Value: "ERROR")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Info
 *        INFO-level severity. (Value: "INFO")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_SeverityUnspecified
 *        Not specified. Invalid severity. (Value: "SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_GoogleCloudFunctionsV2StateMessage_Severity_Warning
 *        WARNING-level severity. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/** One-word CamelCase type of the state message. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Response for the `ListFunctions` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "functions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFunctions_ListFunctionsResponse : GTLRCollectionObject

/**
 *  The functions that match the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Function *> *functions;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Locations that could not be reached. The response does not include any
 *  functions from these locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFunctions_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudFunctions_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Operation *> *operations;

@end


/**
 *  Response for the `ListRuntimes` method.
 */
@interface GTLRCloudFunctions_ListRuntimesResponse : GTLRObject

/** The runtimes that match the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Runtime *> *runtimes;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRCloudFunctions_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFunctions_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_Location_Metadata : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudFunctions_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_Operation_Response : GTLRObject
@end


/**
 *  Metadata describing an Operation
 */
@interface GTLRCloudFunctions_OperationMetadataV1 : GTLRObject

/**
 *  The Cloud Build ID of the function created or updated by an API call. This
 *  field is only populated for Create and Update operations.
 */
@property(nonatomic, copy, nullable) NSString *buildId;

/**
 *  The Cloud Build Name of the function deployment. This field is only
 *  populated for Create and Update operations. `projects//locations//builds/`.
 */
@property(nonatomic, copy, nullable) NSString *buildName;

/** The original request that started the operation. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_OperationMetadataV1_Request *request;

/**
 *  An identifier for Firebase function sources. Disclaimer: This field is only
 *  supported for Firebase function deployments.
 */
@property(nonatomic, copy, nullable) NSString *sourceToken;

/**
 *  Target of the operation - for example
 *  `projects/project-1/locations/region-1/functions/function-1`
 */
@property(nonatomic, copy, nullable) NSString *target;

/**
 *  Type of operation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_OperationMetadataV1_Type_CreateFunction
 *        Triggered by CreateFunction call (Value: "CREATE_FUNCTION")
 *    @arg @c kGTLRCloudFunctions_OperationMetadataV1_Type_DeleteFunction
 *        Triggered by DeleteFunction call. (Value: "DELETE_FUNCTION")
 *    @arg @c kGTLRCloudFunctions_OperationMetadataV1_Type_OperationUnspecified
 *        Unknown operation type. (Value: "OPERATION_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_OperationMetadataV1_Type_UpdateFunction
 *        Triggered by UpdateFunction call (Value: "UPDATE_FUNCTION")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The last update timestamp of the operation. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Version id of the function created or updated by an API call. This field is
 *  only populated for Create and Update operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *versionId;

@end


/**
 *  The original request that started the operation.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_OperationMetadataV1_Request : GTLRObject
@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCloudFunctions_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Location of the source in a Google Cloud Source Repository.
 */
@interface GTLRCloudFunctions_RepoSource : GTLRObject

/**
 *  Regex matching branches to build. The syntax of the regular expressions
 *  accepted is the syntax accepted by RE2 and described at
 *  https://github.com/google/re2/wiki/Syntax
 */
@property(nonatomic, copy, nullable) NSString *branchName;

/** Explicit commit SHA to build. */
@property(nonatomic, copy, nullable) NSString *commitSha;

/**
 *  Directory, relative to the source root, in which to run the build. This must
 *  be a relative path. If a step's `dir` is specified and is an absolute path,
 *  this value is ignored for that step's execution. eg. helloworld (no leading
 *  slash allowed)
 */
@property(nonatomic, copy, nullable) NSString *dir;

/**
 *  Only trigger a build if the revision regex does NOT match the revision
 *  regex.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invertRegex;

/**
 *  ID of the project that owns the Cloud Source Repository. If omitted, the
 *  project ID requesting the build is assumed.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Name of the Cloud Source Repository. */
@property(nonatomic, copy, nullable) NSString *repoName;

/**
 *  Regex matching tags to build. The syntax of the regular expressions accepted
 *  is the syntax accepted by RE2 and described at
 *  https://github.com/google/re2/wiki/Syntax
 */
@property(nonatomic, copy, nullable) NSString *tagName;

@end


/**
 *  Describes a runtime and any special information (e.g., deprecation status)
 *  related to it.
 */
@interface GTLRCloudFunctions_Runtime : GTLRObject

/** The user facing name, eg 'Go 1.13', 'Node.js 12', etc. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The environment for the runtime.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_Runtime_Environment_EnvironmentUnspecified
 *        Unspecified (Value: "ENVIRONMENT_UNSPECIFIED")
 *    @arg @c kGTLRCloudFunctions_Runtime_Environment_Gen1 Gen 1 (Value:
 *        "GEN_1")
 *    @arg @c kGTLRCloudFunctions_Runtime_Environment_Gen2 Gen 2 (Value:
 *        "GEN_2")
 */
@property(nonatomic, copy, nullable) NSString *environment;

/** The name of the runtime, e.g., 'go113', 'nodejs12', etc. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The stage of life this runtime is in, e.g., BETA, GA, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Alpha The runtime is in the
 *        Alpha stage. (Value: "ALPHA")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Beta The runtime is in the Beta
 *        stage. (Value: "BETA")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Decommissioned The runtime is no
 *        longer supported. (Value: "DECOMMISSIONED")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Deprecated The runtime is
 *        deprecated. (Value: "DEPRECATED")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Development The runtime is in
 *        development. (Value: "DEVELOPMENT")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_Ga The runtime is generally
 *        available. (Value: "GA")
 *    @arg @c kGTLRCloudFunctions_Runtime_Stage_RuntimeStageUnspecified Not
 *        specified. (Value: "RUNTIME_STAGE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *stage;

/** Warning messages, e.g., a deprecation warning. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *warnings;

@end


/**
 *  Configuration for a secret environment variable. It has the information
 *  necessary to fetch the secret value from secret manager and expose it as an
 *  environment variable.
 */
@interface GTLRCloudFunctions_SecretEnvVar : GTLRObject

/** Name of the environment variable. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Project identifier (preferably project number but can also be the project
 *  ID) of the project that contains the secret. If not set, it is assumed that
 *  the secret is in the same project as the function.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Name of the secret in secret manager (not the full resource name). */
@property(nonatomic, copy, nullable) NSString *secret;

/**
 *  Version of the secret (version number or the string 'latest'). It is
 *  recommended to use a numeric version for secret environment variables as any
 *  updates to the secret value is not reflected until new instances start.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a single version.
 */
@interface GTLRCloudFunctions_SecretVersion : GTLRObject

/**
 *  Relative path of the file under the mount path where the secret value for
 *  this version will be fetched and made available. For example, setting the
 *  mount_path as '/etc/secrets' and path as `secret_foo` would mount the secret
 *  value file at `/etc/secrets/secret_foo`.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Version of the secret (version number or the string 'latest'). It is
 *  preferable to use `latest` version with secret volumes as secret value
 *  changes are reflected immediately.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a secret volume. It has the information necessary to fetch
 *  the secret value from secret manager and make it available as files mounted
 *  at the requested paths within the application container.
 */
@interface GTLRCloudFunctions_SecretVolume : GTLRObject

/**
 *  The path within the container to mount the secret volume. For example,
 *  setting the mount_path as `/etc/secrets` would mount the secret value files
 *  under the `/etc/secrets` directory. This directory will also be completely
 *  shadowed and unavailable to mount any other secrets. Recommended mount path:
 *  /etc/secrets
 */
@property(nonatomic, copy, nullable) NSString *mountPath;

/**
 *  Project identifier (preferably project number but can also be the project
 *  ID) of the project that contains the secret. If not set, it is assumed that
 *  the secret is in the same project as the function.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Name of the secret in secret manager (not the full resource name). */
@property(nonatomic, copy, nullable) NSString *secret;

/**
 *  List of secret versions to mount for this secret. If empty, the `latest`
 *  version of the secret will be made available in a file named after the
 *  secret under the mount point.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_SecretVersion *> *versions;

@end


/**
 *  Describes the Service being deployed. Currently Supported : Cloud Run (fully
 *  managed). Next tag: 23
 */
@interface GTLRCloudFunctions_ServiceConfig : GTLRObject

/**
 *  Whether 100% of traffic is routed to the latest revision. On CreateFunction
 *  and UpdateFunction, when set to true, the revision being deployed will serve
 *  100% of traffic, ignoring any traffic split settings, if any. On
 *  GetFunction, true will be returned if the latest revision is serving 100% of
 *  traffic.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allTrafficOnLatestRevision;

/**
 *  The amount of memory available for a function. Defaults to 256M. Supported
 *  units are k, M, G, Mi, Gi. If no unit is supplied the value is interpreted
 *  as bytes. See
 *  https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
 *  a full description.
 */
@property(nonatomic, copy, nullable) NSString *availableMemory;

/**
 *  Environment variables that shall be available during function execution.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_ServiceConfig_EnvironmentVariables *environmentVariables;

/**
 *  The ingress settings for the function, controlling what traffic can reach
 *  it.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowAll Allow
 *        HTTP traffic from public and private sources. (Value: "ALLOW_ALL")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowInternalAndGclb
 *        Allow HTTP traffic from private VPC sources and through GCLB. (Value:
 *        "ALLOW_INTERNAL_AND_GCLB")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_IngressSettings_AllowInternalOnly
 *        Allow HTTP traffic from only private VPC sources. (Value:
 *        "ALLOW_INTERNAL_ONLY")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_IngressSettings_IngressSettingsUnspecified
 *        Unspecified. (Value: "INGRESS_SETTINGS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *ingressSettings;

/**
 *  The limit on the maximum number of function instances that may coexist at a
 *  given time. In some cases, such as rapid traffic surges, Cloud Functions
 *  may, for a short period of time, create more instances than the specified
 *  max instances limit. If your function cannot tolerate this temporary
 *  behavior, you may want to factor in a safety margin and set a lower max
 *  instances value than your function can tolerate. See the [Max
 *  Instances](https://cloud.google.com/functions/docs/max-instances) Guide for
 *  more details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxInstanceCount;

/**
 *  The limit on the minimum number of function instances that may coexist at a
 *  given time. Function instances are kept in idle state for a short period
 *  after they finished executing the request to reduce cold start time for
 *  subsequent requests. Setting a minimum instance count will ensure that the
 *  given number of instances are kept running in idle state always. This can
 *  help with cold start times when jump in incoming request count occurs after
 *  the idle instance would have been stopped in the default case.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minInstanceCount;

/** Output only. The name of service revision. */
@property(nonatomic, copy, nullable) NSString *revision;

/** Secret environment variables configuration. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_SecretEnvVar *> *secretEnvironmentVariables;

/** Secret volumes configuration. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_SecretVolume *> *secretVolumes;

/**
 *  Optional. Security level configure whether the function only accepts https.
 *  This configuration is only applicable to 1st Gen functions with Http
 *  trigger. By default https is optional for 1st Gen functions; 2nd Gen
 *  functions are https ONLY.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecureAlways
 *        Requests for a URL that match this handler that do not use HTTPS are
 *        automatically redirected to the HTTPS URL with the same path. Query
 *        parameters are reserved for the redirect. (Value: "SECURE_ALWAYS")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecureOptional
 *        Both HTTP and HTTPS requests with URLs that match the handler succeed
 *        without redirects. The application can examine the request to
 *        determine which protocol was used and respond accordingly. (Value:
 *        "SECURE_OPTIONAL")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_SecurityLevel_SecurityLevelUnspecified
 *        Unspecified. (Value: "SECURITY_LEVEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *securityLevel;

/**
 *  Output only. Name of the service associated with a Function. The format of
 *  this field is `projects/{project}/locations/{region}/services/{service}`
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  The email of the service's service account. If empty, defaults to
 *  `{project_number}-compute\@developer.gserviceaccount.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountEmail;

/**
 *  The function execution timeout. Execution is considered failed and can be
 *  terminated if the function is not completed at the end of the timeout
 *  period. Defaults to 60 seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSeconds;

/** Output only. URI of the Service deployed. */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  The Serverless VPC Access connector that this cloud function can connect to.
 *  The format of this field is `projects/ * /locations/ * /connectors/ *`.
 */
@property(nonatomic, copy, nullable) NSString *vpcConnector;

/**
 *  The egress settings for the connector, controlling what traffic is diverted
 *  through it.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_AllTraffic
 *        Force the use of VPC Access Connector for all egress traffic from the
 *        function. (Value: "ALL_TRAFFIC")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_PrivateRangesOnly
 *        Use the VPC Access Connector only for private IP space from RFC1918.
 *        (Value: "PRIVATE_RANGES_ONLY")
 *    @arg @c kGTLRCloudFunctions_ServiceConfig_VpcConnectorEgressSettings_VpcConnectorEgressSettingsUnspecified
 *        Unspecified. (Value: "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *vpcConnectorEgressSettings;

@end


/**
 *  Environment variables that shall be available during function execution.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudFunctions_ServiceConfig_EnvironmentVariables : GTLRObject
@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRCloudFunctions_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  The location of the function source code.
 */
@interface GTLRCloudFunctions_Source : GTLRObject

/**
 *  If provided, get the source from this location in a Cloud Source Repository.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_RepoSource *repoSource;

/** If provided, get the source from this location in Google Cloud Storage. */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_StorageSource *storageSource;

@end


/**
 *  Provenance of the source. Ways to find the original source, or verify that
 *  some source was used for this build.
 */
@interface GTLRCloudFunctions_SourceProvenance : GTLRObject

/**
 *  A copy of the build's `source.repo_source`, if exists, with any revisions
 *  resolved.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_RepoSource *resolvedRepoSource;

/**
 *  A copy of the build's `source.storage_source`, if exists, with any
 *  generations resolved.
 */
@property(nonatomic, strong, nullable) GTLRCloudFunctions_StorageSource *resolvedStorageSource;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudFunctions_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudFunctions_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudFunctions_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudFunctions_Status_Details_Item : GTLRObject
@end


/**
 *  Location of the source in an archive file in Google Cloud Storage.
 */
@interface GTLRCloudFunctions_StorageSource : GTLRObject

/**
 *  Google Cloud Storage bucket containing the source (see [Bucket Name
 *  Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
 */
@property(nonatomic, copy, nullable) NSString *bucket;

/**
 *  Google Cloud Storage generation for the object. If the generation is
 *  omitted, the latest generation will be used.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *generation;

/**
 *  Google Cloud Storage object containing the source. This object must be a
 *  gzipped archive file (`.tar.gz`) containing source to build.
 */
@property(nonatomic, copy, nullable) NSString *object;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRCloudFunctions_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRCloudFunctions_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
