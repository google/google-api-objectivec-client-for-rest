// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   BigQuery Data Policy API (bigquerydatapolicy/v1)
// Description:
//   Allows users to manage BigQuery data policies.
// Documentation:
//   https://cloud.google.com/bigquery/docs/column-data-masking

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRBigQueryDataPolicyServiceObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other BigQuery DataPolicy Service query classes.
 */
@interface GTLRBigQueryDataPolicyServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new data policy under a project with the given `dataPolicyId`
 *  (used as the display name), policy tag, and data policy type.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesCreate : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Required. Resource name of the project that the data policy will belong to.
 *  The format is `projects/{project_number}/locations/{location_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_DataPolicy.
 *
 *  Creates a new data policy under a project with the given `dataPolicyId`
 *  (used as the display name), policy tag, and data policy type.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_DataPolicy to include in
 *    the query.
 *  @param parent Required. Resource name of the project that the data policy
 *    will belong to. The format is
 *    `projects/{project_number}/locations/{location_id}`.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_DataPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the data policy specified by its resource name.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesDelete : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Optional. If true, the data policy will be deleted even when it is
 *  referenced by one or more table columns.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Resource name of the data policy to delete. Format is
 *  `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_Empty.
 *
 *  Deletes the data policy specified by its resource name.
 *
 *  @param name Required. Resource name of the data policy to delete. Format is
 *    `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the data policy specified by its resource name.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesGet : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Required. Resource name of the requested data policy. Format is
 *  `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_DataPolicy.
 *
 *  Gets the data policy specified by its resource name.
 *
 *  @param name Required. Resource name of the requested data policy. Format is
 *    `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for the specified data policy.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesGetIamPolicy : GTLRBigQueryDataPolicyServiceQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_Policy.
 *
 *  Gets the IAM policy for the specified data policy.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_GetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  List all of the data policies in the specified parent project.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesList : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Filters the data policies by policy tags that they are associated with.
 *  Currently filter only supports "policy_tag" based filtering and OR based
 *  predicates. Sample filter can be "policy_tag:
 *  projects/1/locations/us/taxonomies/2/policyTags/3". You may also use
 *  wildcard such as "policy_tag: projects/1/locations/us/taxonomies/2*". Please
 *  note that OR predicates cannot be used with wildcard filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of data policies to return. Must be a value between 1 and
 *  1000. If not set, defaults to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The `nextPageToken` value returned from a previous list request, if any. If
 *  not set, defaults to an empty string.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Resource name of the project for which to list data policies.
 *  Format is `projects/{project_number}/locations/{location_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_ListDataPoliciesResponse.
 *
 *  List all of the data policies in the specified parent project.
 *
 *  @param parent Required. Resource name of the project for which to list data
 *    policies. Format is `projects/{project_number}/locations/{location_id}`.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the metadata for an existing data policy. The target data policy can
 *  be specified by the resource name.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesPatch : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Optional. If set to true, and the data policy is not found, a new data
 *  policy will be created. In this situation, update_mask is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. Resource name of this data policy, in the format of
 *  `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. For the `FieldMask` definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *  If not set, defaults to all of the fields that are allowed to update.
 *  Updates to the `name` and `dataPolicyId` fields are not allowed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_DataPolicy.
 *
 *  Updates the metadata for an existing data policy. The target data policy can
 *  be specified by the resource name.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_DataPolicy to include in
 *    the query.
 *  @param name Output only. Resource name of this data policy, in the format of
 *    `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_DataPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Renames the id (display name) of the specified data policy.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.rename
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesRename : GTLRBigQueryDataPolicyServiceQuery

/**
 *  Required. Resource name of the data policy to rename. The format is
 *  `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_DataPolicy.
 *
 *  Renames the id (display name) of the specified data policy.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_RenameDataPolicyRequest
 *    to include in the query.
 *  @param name Required. Resource name of the data policy to rename. The format
 *    is
 *    `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesRename
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_RenameDataPolicyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy for the specified data policy.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesSetIamPolicy : GTLRBigQueryDataPolicyServiceQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_Policy.
 *
 *  Sets the IAM policy for the specified data policy.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns the caller's permission on the specified data policy resource.
 *
 *  Method: bigquerydatapolicy.projects.locations.dataPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceBigquery
 *    @c kGTLRAuthScopeBigQueryDataPolicyServiceCloudPlatform
 */
@interface GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesTestIamPermissions : GTLRBigQueryDataPolicyServiceQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBigQueryDataPolicyService_TestIamPermissionsResponse.
 *
 *  Returns the caller's permission on the specified data policy resource.
 *
 *  @param object The @c GTLRBigQueryDataPolicyService_TestIamPermissionsRequest
 *    to include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBigQueryDataPolicyServiceQuery_ProjectsLocationsDataPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBigQueryDataPolicyService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
