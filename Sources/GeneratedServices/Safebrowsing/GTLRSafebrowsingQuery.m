// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Safe Browsing API (safebrowsing/v5)
// Description:
//   Enables client applications to check web resources (most commonly URLs)
//   against Google-generated lists of unsafe web resources. The Safe Browsing
//   APIs are for non-commercial use only. If you need to use APIs to detect
//   malicious URLs for commercial purposes – meaning “for sale or
//   revenue-generating purposes” – please refer to the Web Risk API.
// Documentation:
//   https://developers.google.com/safe-browsing/

#import <GoogleAPIClientForREST/GTLRSafebrowsingQuery.h>

#import <GoogleAPIClientForREST/GTLRSafebrowsingObjects.h>

@implementation GTLRSafebrowsingQuery

@dynamic fields;

@end

@implementation GTLRSafebrowsingQuery_HashesSearch

@dynamic hashPrefixes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hashPrefixes" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v5/hashes:search";
  GTLRSafebrowsingQuery_HashesSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSafebrowsing_GoogleSecuritySafebrowsingV5SearchHashesResponse class];
  query.loggingName = @"safebrowsing.hashes.search";
  return query;
}

@end

@implementation GTLRSafebrowsingQuery_HashListGet

@dynamic name, sizeConstraintsMaxDatabaseEntries,
         sizeConstraintsMaxUpdateEntries, version;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"sizeConstraintsMaxDatabaseEntries" : @"sizeConstraints.maxDatabaseEntries",
    @"sizeConstraintsMaxUpdateEntries" : @"sizeConstraints.maxUpdateEntries"
  };
  return map;
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v5/hashList/{name}";
  GTLRSafebrowsingQuery_HashListGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSafebrowsing_GoogleSecuritySafebrowsingV5HashList class];
  query.loggingName = @"safebrowsing.hashList.get";
  return query;
}

@end

@implementation GTLRSafebrowsingQuery_HashListsBatchGet

@dynamic names, sizeConstraintsMaxDatabaseEntries,
         sizeConstraintsMaxUpdateEntries, version;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"sizeConstraintsMaxDatabaseEntries" : @"sizeConstraints.maxDatabaseEntries",
    @"sizeConstraintsMaxUpdateEntries" : @"sizeConstraints.maxUpdateEntries"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class],
    @"version" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v5/hashLists:batchGet";
  GTLRSafebrowsingQuery_HashListsBatchGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSafebrowsing_GoogleSecuritySafebrowsingV5BatchGetHashListsResponse class];
  query.loggingName = @"safebrowsing.hashLists.batchGet";
  return query;
}

@end

@implementation GTLRSafebrowsingQuery_HashListsList

@dynamic pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v5/hashLists";
  GTLRSafebrowsingQuery_HashListsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRSafebrowsing_GoogleSecuritySafebrowsingV5ListHashListsResponse class];
  query.loggingName = @"safebrowsing.hashLists.list";
  return query;
}

@end
