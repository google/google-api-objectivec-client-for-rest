// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   GKE On-Prem API (gkeonprem/v1)
// Documentation:
//   https://cloud.google.com/anthos/clusters/docs/on-prem/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRGKEOnPremObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/** Value: "BASIC" */
FOUNDATION_EXTERN NSString * const kGTLRGKEOnPremViewBasic;
/**
 *  If the value is not set, the default `FULL` view is used.
 *
 *  Value: "CLUSTER_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGKEOnPremViewClusterViewUnspecified;
/** Value: "FULL" */
FOUNDATION_EXTERN NSString * const kGTLRGKEOnPremViewFull;
/**
 *  If the value is not set, the default `FULL` view is used.
 *
 *  Value: "NODE_POOL_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGKEOnPremViewNodePoolViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other GKE On-Prem query classes.
 */
@interface GTLRGKEOnPremQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new bare metal admin cluster in a given project and location. The
 *  API needs to be combined with creating a bootstrap cluster to work. See:
 *  https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersCreate : GTLRGKEOnPremQuery

/**
 *  Optional. If set to true, CLM will force CCFE to persist the cluster
 *  resource in RMS when the creation fails during standalone preflight checks.
 *  In that case the subsequent create call will fail with "cluster already
 *  exists" error and hence a update cluster is required to fix the cluster.
 */
@property(nonatomic, assign) BOOL allowPreflightFailure;

/**
 *  Required. User provided identifier that is used as part of the resource
 *  name; must conform to RFC-1034 and additionally restrict to lower-cased
 *  letters. This comes out roughly to: /^a-z+[a-z0-9]$/
 */
@property(nonatomic, copy, nullable) NSString *bareMetalAdminClusterId;

/**
 *  Required. The parent of the project and location where the cluster is
 *  created in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new bare metal admin cluster in a given project and location. The
 *  API needs to be combined with creating a bootstrap cluster to work. See:
 *  https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalAdminCluster to include in the
 *    query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is created in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalAdminCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Enrolls an existing bare metal admin cluster to the Anthos On-Prem API
 *  within a given project and location. Through enrollment, an existing admin
 *  cluster will become Anthos On-Prem API managed. The corresponding GCP
 *  resources will be created and all future modifications to the cluster will
 *  be expected to be performed through the API.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersEnroll : GTLRGKEOnPremQuery

/**
 *  Required. The parent of the project and location where the cluster is
 *  enrolled in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls an existing bare metal admin cluster to the Anthos On-Prem API
 *  within a given project and location. Through enrollment, an existing admin
 *  cluster will become Anthos On-Prem API managed. The corresponding GCP
 *  resources will be created and all future modifications to the cluster will
 *  be expected to be performed through the API.
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollBareMetalAdminClusterRequest to
 *    include in the query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is enrolled in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollBareMetalAdminClusterRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single bare metal admin cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersGet : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return BareMetal Admin Cluster including the one that
 *  only exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Required. Name of the bare metal admin cluster to get. Format:
 *  "projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for bare metal admin cluster. When `BASIC` is specified, only the
 *  cluster resource name and membership are returned. The default/unset value
 *  `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete
 *  cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and membership. (Value:
 *        "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal admin cluster resource. This is the default value for
 *        GetBareMetalAdminClusterRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_BareMetalAdminCluster.
 *
 *  Gets details of a single bare metal admin cluster.
 *
 *  @param name Required. Name of the bare metal admin cluster to get. Format:
 *    "projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists bare metal admin clusters in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersList : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return list of BareMetal Admin Clusters including the
 *  ones that only exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, at most 50 clusters will be returned. The maximum value is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the project and location where the clusters are
 *  listed in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for bare metal admin clusters. When `BASIC` is specified, only the
 *  admin cluster resource name and membership are returned. The default/unset
 *  value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete admin cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a admin
 *        cluster resource including admin cluster resource name and membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal admin cluster resource. This is the default value for
 *        ListBareMetalAdminClustersRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListBareMetalAdminClustersResponse.
 *
 *  Lists bare metal admin clusters in a given project and location.
 *
 *  @param parent Required. The parent of the project and location where the
 *    clusters are listed in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single bare metal admin cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersPatch : GTLRGKEOnPremQuery

/** Immutable. The bare metal admin cluster resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  BareMetalAdminCluster resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the BareMetalAdminCluster message will be
 *  updated. Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single bare metal admin cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalAdminCluster to include in the
 *    query.
 *  @param name Immutable. The bare metal admin cluster resource name.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalAdminCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Queries the bare metal admin cluster version config.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.queryVersionConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersQueryVersionConfig : GTLRGKEOnPremQuery

/**
 *  Required. The parent of the project and location to query for version
 *  config. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The admin cluster resource name. This is the full resource name of the admin
 *  cluster resource. Format:
 *  "projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *upgradeConfigClusterName;

/**
 *  Fetches a @c GTLRGKEOnPrem_QueryBareMetalAdminVersionConfigResponse.
 *
 *  Queries the bare metal admin cluster version config.
 *
 *  @param parent Required. The parent of the project and location to query for
 *    version config. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersQueryVersionConfig
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls an existing bare metal admin cluster from the Anthos On-Prem API
 *  within a given project and location. Unenrollment removes the Cloud
 *  reference to the cluster without modifying the underlying OnPrem Resources.
 *  Clusters will continue to run; however, they will no longer be accessible
 *  through the Anthos On-Prem API or its clients.
 *
 *  Method: gkeonprem.projects.locations.bareMetalAdminClusters.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal admin cluster is not found, the request
 *  will succeed but no action will be taken on the server and return a
 *  completed LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the bare metal admin cluster. If an etag is provided and
 *  does not match the current etag of the cluster, deletion will be blocked and
 *  an ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, the unenrollment of a bare metal admin cluster resource will
 *  succeed even if errors occur during unenrollment. This parameter can be used
 *  when you want to unenroll admin cluster resource and the on-prem admin
 *  cluster is disconnected / unreachable. WARNING: Using this parameter when
 *  your admin cluster still exists may result in a deleted GCP admin cluster
 *  but existing resourcelink in on-prem admin cluster and membership.
 */
@property(nonatomic, assign) BOOL ignoreErrors;

/**
 *  Required. Name of the bare metal admin cluster to be unenrolled. Format:
 *  "projects/{project}/locations/{location}/bareMetalAdminClusters/{cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls an existing bare metal admin cluster from the Anthos On-Prem API
 *  within a given project and location. Unenrollment removes the Cloud
 *  reference to the cluster without modifying the underlying OnPrem Resources.
 *  Clusters will continue to run; however, they will no longer be accessible
 *  through the Anthos On-Prem API or its clients.
 *
 *  @param name Required. Name of the bare metal admin cluster to be unenrolled.
 *    Format:
 *    "projects/{project}/locations/{location}/bareMetalAdminClusters/{cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalAdminClustersUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new bare metal node pool in a given project, location and Bare
 *  Metal cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsCreate : GTLRGKEOnPremQuery

/**
 *  The ID to use for the node pool, which will become the final component of
 *  the node pool's resource name. This value must be up to 63 characters, and
 *  valid characters are /a-z-/. The value must not be permitted to be a UUID
 *  (or UUID-like: anything matching
 *  /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
 */
@property(nonatomic, copy, nullable) NSString *bareMetalNodePoolId;

/**
 *  Required. The parent resource where this node pool will be created.
 *  projects/{project}/locations/{location}/bareMetalClusters/{cluster}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  If set, only validate the request, but do not actually create the node pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new bare metal node pool in a given project, location and Bare
 *  Metal cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalNodePool to include in the
 *    query.
 *  @param parent Required. The parent resource where this node pool will be
 *    created.
 *    projects/{project}/locations/{location}/bareMetalClusters/{cluster}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalNodePool *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single bare metal node pool.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsDelete : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal node pool is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the BareMetalNodePool. If an etag is provided and does
 *  not match the current etag of the node pool, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, the deletion of a bare metal node pool resource will succeed
 *  even if errors occur during deletion. This parameter can be used when you
 *  want to delete GCP's node pool resource and you've already deleted the
 *  on-prem admin cluster that hosted your node pool. WARNING: Using this
 *  parameter when your user cluster still exists may result in a deleted GCP
 *  node pool but an existing on-prem node pool.
 */
@property(nonatomic, assign) BOOL ignoreErrors;

/**
 *  Required. The name of the node pool to delete. Format:
 *  projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If set, only validate the request, but do not actually delete the node pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Deletes a single bare metal node pool.
 *
 *  @param name Required. The name of the node pool to delete. Format:
 *    projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Enrolls an existing bare metal node pool to the Anthos On-Prem API within a
 *  given project and location. Through enrollment, an existing node pool will
 *  become Anthos On-Prem API managed. The corresponding GCP resources will be
 *  created.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsEnroll : GTLRGKEOnPremQuery

/**
 *  Required. The parent resource where this node pool will be created.
 *  projects/{project}/locations/{location}/bareMetalClusters/{cluster}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls an existing bare metal node pool to the Anthos On-Prem API within a
 *  given project and location. Through enrollment, an existing node pool will
 *  become Anthos On-Prem API managed. The corresponding GCP resources will be
 *  created.
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollBareMetalNodePoolRequest to include
 *    in the query.
 *  @param parent Required. The parent resource where this node pool will be
 *    created.
 *    projects/{project}/locations/{location}/bareMetalClusters/{cluster}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollBareMetalNodePoolRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single bare metal node pool.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsGet : GTLRGKEOnPremQuery

/**
 *  Required. The name of the node pool to retrieve.
 *  projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for bare metal node pool. When `BASIC` is specified, only the node pool
 *  resource name is returned. The default/unset value
 *  `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete node pool configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewNodePoolViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "NODE_POOL_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a node pool
 *        resource including node pool resource name. (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal node pool resource. This is the default value for
 *        GetBareMetalNodePoolRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_BareMetalNodePool.
 *
 *  Gets details of a single bare metal node pool.
 *
 *  @param name Required. The name of the node pool to retrieve.
 *    projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists bare metal node pools in a given project, location and bare metal
 *  cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsList : GTLRGKEOnPremQuery

/**
 *  The maximum number of node pools to return. The service may return fewer
 *  than this value. If unspecified, at most 50 node pools will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListBareMetalNodePools` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListBareMetalNodePools` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of node pools. Format:
 *  projects/{project}/locations/{location}/bareMetalClusters/{bareMetalCluster}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for bare metal node pools. When `BASIC` is specified, only the node
 *  pool resource name is returned. The default/unset value
 *  `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete node pool configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewNodePoolViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "NODE_POOL_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a node pool
 *        resource including node pool resource name. (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal node pool resource. This is the default value for
 *        ListBareMetalNodePoolsRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListBareMetalNodePoolsResponse.
 *
 *  Lists bare metal node pools in a given project, location and bare metal
 *  cluster.
 *
 *  @param parent Required. The parent, which owns this collection of node
 *    pools. Format:
 *    projects/{project}/locations/{location}/bareMetalClusters/{bareMetalCluster}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single bare metal node pool.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsPatch : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal node pool is not found, the request will
 *  create a new bare metal node pool with the provided configuration. The user
 *  must have both create and update permission to call Update with
 *  allow_missing set to true.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Immutable. The bare metal node pool resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  BareMetalNodePool resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the BareMetalNodePool message will be updated.
 *  Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single bare metal node pool.
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalNodePool to include in the
 *    query.
 *  @param name Immutable. The bare metal node pool resource name.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalNodePool *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls a bare metal node pool from Anthos On-Prem API.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal node pool is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the bare metal node pool. If an etag is provided and
 *  does not match the current etag of node pool, deletion will be blocked and
 *  an ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the node pool to unenroll. Format:
 *  projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If set, only validate the request, but do not actually unenroll the node
 *  pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls a bare metal node pool from Anthos On-Prem API.
 *
 *  @param name Required. The name of the node pool to unenroll. Format:
 *    projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersBareMetalNodePoolsUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new bare metal cluster in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersCreate : GTLRGKEOnPremQuery

/**
 *  Optional. If set to true, CLM will force CCFE to persist the cluster
 *  resource in RMS when the creation fails during standalone preflight checks.
 *  In that case the subsequent create call will fail with "cluster already
 *  exists" error and hence a update cluster is required to fix the cluster.
 */
@property(nonatomic, assign) BOOL allowPreflightFailure;

/**
 *  Required. User provided identifier that is used as part of the resource
 *  name; must conform to RFC-1034 and additionally restrict to lower-cased
 *  letters. This comes out roughly to: /^a-z+[a-z0-9]$/
 */
@property(nonatomic, copy, nullable) NSString *bareMetalClusterId;

/**
 *  Required. The parent of the project and location where the cluster is
 *  created in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new bare metal cluster in a given project and location.
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalCluster to include in the query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is created in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single bare metal Cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersDelete : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal cluster is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the bare metal Cluster. If an etag is provided and does
 *  not match the current etag of the cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** If set to true, any node pools from the cluster will also be deleted. */
@property(nonatomic, assign) BOOL force;

/**
 *  If set to true, the deletion of a bare metal user cluster resource will
 *  succeed even if errors occur during deletion. This parameter can be used
 *  when you want to delete GCP's cluster resource and the on-prem admin cluster
 *  that hosts your user cluster is disconnected / unreachable or deleted.
 *  WARNING: Using this parameter when your user cluster still exists may result
 *  in a deleted GCP user cluster but an existing on-prem user cluster.
 */
@property(nonatomic, assign) BOOL ignoreErrors;

/**
 *  Required. Name of the bare metal user cluster to be deleted. Format:
 *  "projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Deletes a single bare metal Cluster.
 *
 *  @param name Required. Name of the bare metal user cluster to be deleted.
 *    Format:
 *    "projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Enrolls an existing bare metal user cluster and its node pools to the Anthos
 *  On-Prem API within a given project and location. Through enrollment, an
 *  existing cluster will become Anthos On-Prem API managed. The corresponding
 *  GCP resources will be created and all future modifications to the cluster
 *  and/or its node pools will be expected to be performed through the API.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersEnroll : GTLRGKEOnPremQuery

/**
 *  Required. The parent of the project and location where the cluster is
 *  enrolled in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls an existing bare metal user cluster and its node pools to the Anthos
 *  On-Prem API within a given project and location. Through enrollment, an
 *  existing cluster will become Anthos On-Prem API managed. The corresponding
 *  GCP resources will be created and all future modifications to the cluster
 *  and/or its node pools will be expected to be performed through the API.
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollBareMetalClusterRequest to include
 *    in the query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is enrolled in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollBareMetalClusterRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single bare metal Cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersGet : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return BareMetal Cluster including the one that only
 *  exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Required. Name of the bare metal user cluster to get. Format:
 *  "projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for bare metal user cluster. When `BASIC` is specified, only the
 *  cluster resource name and admin cluster membership are returned. The
 *  default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which
 *  returns the complete cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and admin cluster membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal cluster resource. This is the default value for
 *        GetBareMetalClusterRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_BareMetalCluster.
 *
 *  Gets details of a single bare metal Cluster.
 *
 *  @param name Required. Name of the bare metal user cluster to get. Format:
 *    "projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists bare metal clusters in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersList : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return list of BareMetal Clusters including the ones that
 *  only exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  A resource filtering expression following https://google.aip.dev/160. When
 *  non-empty, only resource's whose attributes field matches the filter are
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, at most 50 clusters will be returned. The maximum value is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the project and location where the clusters are
 *  listed in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for bare metal Clusters. When `BASIC` is specified, only the cluster
 *  resource name and admin cluster membership are returned. The default/unset
 *  value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and admin cluster membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal cluster resource. This is the default value for
 *        ListBareMetalClustersRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListBareMetalClustersResponse.
 *
 *  Lists bare metal clusters in a given project and location.
 *
 *  @param parent Required. The parent of the project and location where the
 *    clusters are listed in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single bare metal Cluster.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersPatch : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal cluster is not found, the request will
 *  create a new bare metal cluster with the provided configuration. The user
 *  must have both create and update permission to call Update with
 *  allow_missing set to true.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Immutable. The bare metal user cluster resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  BareMetalCluster resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the BareMetalCluster message will be updated.
 *  Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single bare metal Cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_BareMetalCluster to include in the query.
 *  @param name Immutable. The bare metal user cluster resource name.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_BareMetalCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Queries the bare metal user cluster version config.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.queryVersionConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersQueryVersionConfig : GTLRGKEOnPremQuery

/**
 *  The admin cluster membership. This is the full resource name of the admin
 *  cluster's fleet membership. Format:
 *  "projects/{project}/locations/{location}/memberships/{membership}"
 */
@property(nonatomic, copy, nullable) NSString *createConfigAdminClusterMembership;

/**
 *  The admin cluster resource name. This is the full resource name of the admin
 *  cluster resource. Format:
 *  "projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *createConfigAdminClusterName;

/**
 *  Required. The parent of the project and location to query for version
 *  config. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The user cluster resource name. This is the full resource name of the user
 *  cluster resource. Format:
 *  "projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *upgradeConfigClusterName;

/**
 *  Fetches a @c GTLRGKEOnPrem_QueryBareMetalVersionConfigResponse.
 *
 *  Queries the bare metal user cluster version config.
 *
 *  @param parent Required. The parent of the project and location to query for
 *    version config. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersQueryVersionConfig
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls an existing bare metal user cluster and its node pools from the
 *  Anthos On-Prem API within a given project and location. Unenrollment removes
 *  the Cloud reference to the cluster without modifying the underlying OnPrem
 *  Resources. Clusters and node pools will continue to run; however, they will
 *  no longer be accessible through the Anthos On-Prem API or its clients.
 *
 *  Method: gkeonprem.projects.locations.bareMetalClusters.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the bare metal cluster is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the bare metal Cluster. If an etag is provided and does
 *  not match the current etag of the cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  This is required if the cluster has any associated node pools. When set, any
 *  child node pools will also be unenrolled.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Name of the bare metal user cluster to be unenrolled. Format:
 *  "projects/{project}/locations/{location}/bareMetalClusters/{cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls an existing bare metal user cluster and its node pools from the
 *  Anthos On-Prem API within a given project and location. Unenrollment removes
 *  the Cloud reference to the cluster without modifying the underlying OnPrem
 *  Resources. Clusters and node pools will continue to run; however, they will
 *  no longer be accessible through the Anthos On-Prem API or its clients.
 *
 *  @param name Required. Name of the bare metal user cluster to be unenrolled.
 *    Format:
 *    "projects/{project}/locations/{location}/bareMetalClusters/{cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsBareMetalClustersUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: gkeonprem.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsGet : GTLRGKEOnPremQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: gkeonprem.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsList : GTLRGKEOnPremQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: gkeonprem.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsOperationsCancel : GTLRGKEOnPremQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRGKEOnPrem_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsOperationsDelete : GTLRGKEOnPremQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new VMware admin cluster in a given project and location. The API
 *  needs to be combined with creating a bootstrap cluster to work.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersCreate : GTLRGKEOnPremQuery

/**
 *  Optional. If set to true, CLM will force CCFE to persist the cluster
 *  resource in RMS when the creation fails during standalone preflight checks.
 *  In that case the subsequent create call will fail with "cluster already
 *  exists" error and hence a update cluster is required to fix the cluster.
 */
@property(nonatomic, assign) BOOL allowPreflightFailure;

/**
 *  Required. The parent of the project and location where the cluster is
 *  created in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Required. User provided identifier that is used as part of the resource
 *  name; must conform to RFC-1034 and additionally restrict to lower-cased
 *  letters. This comes out roughly to: /^a-z+[a-z0-9]$/
 */
@property(nonatomic, copy, nullable) NSString *vmwareAdminClusterId;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new VMware admin cluster in a given project and location. The API
 *  needs to be combined with creating a bootstrap cluster to work.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareAdminCluster to include in the
 *    query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is created in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareAdminCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Enrolls an existing VMware admin cluster to the Anthos On-Prem API within a
 *  given project and location. Through enrollment, an existing admin cluster
 *  will become Anthos On-Prem API managed. The corresponding GCP resources will
 *  be created and all future modifications to the cluster will be expected to
 *  be performed through the API.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersEnroll : GTLRGKEOnPremQuery

/**
 *  Required. The parent of the project and location where the cluster is
 *  enrolled in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls an existing VMware admin cluster to the Anthos On-Prem API within a
 *  given project and location. Through enrollment, an existing admin cluster
 *  will become Anthos On-Prem API managed. The corresponding GCP resources will
 *  be created and all future modifications to the cluster will be expected to
 *  be performed through the API.
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollVmwareAdminClusterRequest to
 *    include in the query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is enrolled in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollVmwareAdminClusterRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single VMware admin cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersGet : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return Vmware Admin Cluster including the one that only
 *  exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Required. Name of the VMware admin cluster to be returned. Format:
 *  "projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for VMware admin cluster. When `BASIC` is specified, only the cluster
 *  resource name and membership are returned. The default/unset value
 *  `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete
 *  cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and membership. (Value:
 *        "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        VMware admin cluster resource. This is the default value for
 *        GetVmwareAdminClusterRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_VmwareAdminCluster.
 *
 *  Gets details of a single VMware admin cluster.
 *
 *  @param name Required. Name of the VMware admin cluster to be returned.
 *    Format:
 *    "projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists VMware admin clusters in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersList : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return list of Vmware Admin Clusters including the ones
 *  that only exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, at most 50 clusters will be returned. The maximum value is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the project and location where the clusters are
 *  listed in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for VMware admin clusters. When `BASIC` is specified, only the admin
 *  cluster resource name and membership are returned. The default/unset value
 *  `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete
 *  admin cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a admin
 *        cluster resource including admin cluster resource name and membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        bare metal admin cluster resource. This is the default value for
 *        ListVmwareAdminClustersRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListVmwareAdminClustersResponse.
 *
 *  Lists VMware admin clusters in a given project and location.
 *
 *  @param parent Required. The parent of the project and location where the
 *    clusters are listed in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single VMware admin cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersPatch : GTLRGKEOnPremQuery

/** Immutable. The VMware admin cluster resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  VMwareAdminCluster resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the VmwareAdminCluster message will be updated.
 *  Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single VMware admin cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareAdminCluster to include in the
 *    query.
 *  @param name Immutable. The VMware admin cluster resource name.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareAdminCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls an existing VMware admin cluster from the Anthos On-Prem API
 *  within a given project and location. Unenrollment removes the Cloud
 *  reference to the cluster without modifying the underlying OnPrem Resources.
 *  Clusters will continue to run; however, they will no longer be accessible
 *  through the Anthos On-Prem API or its clients.
 *
 *  Method: gkeonprem.projects.locations.vmwareAdminClusters.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the VMware admin cluster is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the VMware admin cluster. If an etag is provided and
 *  does not match the current etag of the cluster, deletion will be blocked and
 *  an ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Name of the VMware admin cluster to be unenrolled. Format:
 *  "projects/{project}/locations/{location}/vmwareAdminClusters/{cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls an existing VMware admin cluster from the Anthos On-Prem API
 *  within a given project and location. Unenrollment removes the Cloud
 *  reference to the cluster without modifying the underlying OnPrem Resources.
 *  Clusters will continue to run; however, they will no longer be accessible
 *  through the Anthos On-Prem API or its clients.
 *
 *  @param name Required. Name of the VMware admin cluster to be unenrolled.
 *    Format:
 *    "projects/{project}/locations/{location}/vmwareAdminClusters/{cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareAdminClustersUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new VMware user cluster in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersCreate : GTLRGKEOnPremQuery

/**
 *  Optional. If set to true, CLM will force CCFE to persist the cluster
 *  resource in RMS when the creation fails during standalone preflight checks.
 *  In that case the subsequent create call will fail with "cluster already
 *  exists" error and hence a update cluster is required to fix the cluster.
 */
@property(nonatomic, assign) BOOL allowPreflightFailure;

/**
 *  Required. The parent of the project and location where this cluster is
 *  created in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  User provided identifier that is used as part of the resource name; This
 *  value must be up to 40 characters and follow RFC-1123
 *  (https://tools.ietf.org/html/rfc1123) format.
 */
@property(nonatomic, copy, nullable) NSString *vmwareClusterId;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new VMware user cluster in a given project and location.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareCluster to include in the query.
 *  @param parent Required. The parent of the project and location where this
 *    cluster is created in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareCluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single VMware Cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersDelete : GTLRGKEOnPremQuery

/**
 *  If set to true, and the VMware cluster is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the VMware cluster. If an etag is provided and does not
 *  match the current etag of the cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** If set to true, any node pools from the cluster will also be deleted. */
@property(nonatomic, assign) BOOL force;

/**
 *  If set to true, the deletion of a VMware user cluster resource will succeed
 *  even if errors occur during deletion. This parameter can be used when you
 *  want to delete GCP's cluster resource and the on-prem admin cluster that
 *  hosts your user cluster is disconnected / unreachable or deleted. WARNING:
 *  Using this parameter when your user cluster still exists may result in a
 *  deleted GCP user cluster but an existing on-prem user cluster.
 */
@property(nonatomic, assign) BOOL ignoreErrors;

/**
 *  Required. Name of the VMware user cluster to be deleted. Format:
 *  "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Deletes a single VMware Cluster.
 *
 *  @param name Required. Name of the VMware user cluster to be deleted. Format:
 *    "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Enrolls an existing VMware user cluster and its node pools to the Anthos
 *  On-Prem API within a given project and location. Through enrollment, an
 *  existing cluster will become Anthos On-Prem API managed. The corresponding
 *  GCP resources will be created and all future modifications to the cluster
 *  and/or its node pools will be expected to be performed through the API.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersEnroll : GTLRGKEOnPremQuery

/**
 *  Required. The parent of the project and location where the cluster is
 *  Enrolled in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls an existing VMware user cluster and its node pools to the Anthos
 *  On-Prem API within a given project and location. Through enrollment, an
 *  existing cluster will become Anthos On-Prem API managed. The corresponding
 *  GCP resources will be created and all future modifications to the cluster
 *  and/or its node pools will be expected to be performed through the API.
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollVmwareClusterRequest to include in
 *    the query.
 *  @param parent Required. The parent of the project and location where the
 *    cluster is Enrolled in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollVmwareClusterRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single VMware Cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersGet : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return Vmware Cluster including the one that only exists
 *  in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Required. Name of the VMware user cluster to be returned. Format:
 *  "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for VMware user cluster. When `BASIC` is specified, only the cluster
 *  resource name and admin cluster membership are returned. The default/unset
 *  value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and admin cluster membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        VMware cluster resource. This is the default value for
 *        GetVmwareClusterRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_VmwareCluster.
 *
 *  Gets details of a single VMware Cluster.
 *
 *  @param name Required. Name of the VMware user cluster to be returned.
 *    Format:
 *    "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists VMware Clusters in a given project and location.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersList : GTLRGKEOnPremQuery

/**
 *  Optional. If true, return list of Vmware Clusters including the ones that
 *  only exists in RMS.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  A resource filtering expression following https://google.aip.dev/160. When
 *  non-empty, only resource's whose attributes field matches the filter are
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, at most 50 clusters will be returned. The maximum value is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the project and location where the clusters are
 *  listed in. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for VMware clusters. When `BASIC` is specified, only the cluster
 *  resource name and admin cluster membership are returned. The default/unset
 *  value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete cluster configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewClusterViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a cluster
 *        resource including cluster resource name and admin cluster membership.
 *        (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        VMware cluster resource. This is the default value for
 *        ListVmwareClustersRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListVmwareClustersResponse.
 *
 *  Lists VMware Clusters in a given project and location.
 *
 *  @param parent Required. The parent of the project and location where the
 *    clusters are listed in. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single VMware cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersPatch : GTLRGKEOnPremQuery

/** Immutable. The VMware user cluster resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  VMwareCluster resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the VmwareCluster message will be updated.
 *  Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single VMware cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareCluster to include in the query.
 *  @param name Immutable. The VMware user cluster resource name.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareCluster *)object
                           name:(NSString *)name;

@end

/**
 *  Queries the VMware user cluster version config.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.queryVersionConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersQueryVersionConfig : GTLRGKEOnPremQuery

/**
 *  The admin cluster membership. This is the full resource name of the admin
 *  cluster's fleet membership. Format:
 *  "projects/{project}/locations/{location}/memberships/{membership}"
 */
@property(nonatomic, copy, nullable) NSString *createConfigAdminClusterMembership;

/**
 *  The admin cluster resource name. This is the full resource name of the admin
 *  cluster resource. Format:
 *  "projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *createConfigAdminClusterName;

/**
 *  Required. The parent of the project and location to query for version
 *  config. Format: "projects/{project}/locations/{location}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The user cluster resource name. This is the full resource name of the user
 *  cluster resource. Format:
 *  "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *upgradeConfigClusterName;

/**
 *  Fetches a @c GTLRGKEOnPrem_QueryVmwareVersionConfigResponse.
 *
 *  Queries the VMware user cluster version config.
 *
 *  @param parent Required. The parent of the project and location to query for
 *    version config. Format: "projects/{project}/locations/{location}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersQueryVersionConfig
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls an existing VMware user cluster and its node pools from the Anthos
 *  On-Prem API within a given project and location. Unenrollment removes the
 *  Cloud reference to the cluster without modifying the underlying OnPrem
 *  Resources. Clusters and node pools will continue to run; however, they will
 *  no longer be accessible through the Anthos On-Prem API or UI.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the VMware cluster is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the VMware Cluster. If an etag is provided and does not
 *  match the current etag of the cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  This is required if the cluster has any associated node pools. When set, any
 *  child node pools will also be unenrolled.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Name of the VMware user cluster to be unenrolled. Format:
 *  "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls an existing VMware user cluster and its node pools from the Anthos
 *  On-Prem API within a given project and location. Unenrollment removes the
 *  Cloud reference to the cluster without modifying the underlying OnPrem
 *  Resources. Clusters and node pools will continue to run; however, they will
 *  no longer be accessible through the Anthos On-Prem API or UI.
 *
 *  @param name Required. Name of the VMware user cluster to be unenrolled.
 *    Format:
 *    "projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}"
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new VMware node pool in a given project, location and VMWare
 *  cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsCreate : GTLRGKEOnPremQuery

/**
 *  Required. The parent resource where this node pool will be created.
 *  projects/{project}/locations/{location}/vmwareClusters/{cluster}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  If set, only validate the request, but do not actually create the node pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  The ID to use for the node pool, which will become the final component of
 *  the node pool's resource name. This value must be up to 40 characters and
 *  follow RFC-1123 (https://tools.ietf.org/html/rfc1123) format. The value must
 *  not be permitted to be a UUID (or UUID-like: anything matching
 *  /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
 */
@property(nonatomic, copy, nullable) NSString *vmwareNodePoolId;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Creates a new VMware node pool in a given project, location and VMWare
 *  cluster.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareNodePool to include in the query.
 *  @param parent Required. The parent resource where this node pool will be
 *    created. projects/{project}/locations/{location}/vmwareClusters/{cluster}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareNodePool *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single VMware node pool.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsDelete : GTLRGKEOnPremQuery

/**
 *  If set to true, and the VMware node pool is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the VmwareNodePool. If an etag is provided and does not
 *  match the current etag of the node pool, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, the deletion of a VMware node pool resource will succeed
 *  even if errors occur during deletion. This parameter can be used when you
 *  want to delete GCP's node pool resource and you've already deleted the
 *  on-prem admin cluster that hosted your node pool. WARNING: Using this
 *  parameter when your user cluster still exists may result in a deleted GCP
 *  node pool but an existing on-prem node pool.
 */
@property(nonatomic, assign) BOOL ignoreErrors;

/**
 *  Required. The name of the node pool to delete. Format:
 *  projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If set, only validate the request, but do not actually delete the node pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Deletes a single VMware node pool.
 *
 *  @param name Required. The name of the node pool to delete. Format:
 *    projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Enrolls a VMware node pool to Anthos On-Prem API
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.enroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsEnroll : GTLRGKEOnPremQuery

/** Required. The parent resource where the node pool is enrolled in. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Enrolls a VMware node pool to Anthos On-Prem API
 *
 *  @param object The @c GTLRGKEOnPrem_EnrollVmwareNodePoolRequest to include in
 *    the query.
 *  @param parent Required. The parent resource where the node pool is enrolled
 *    in.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsEnroll
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_EnrollVmwareNodePoolRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single VMware node pool.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsGet : GTLRGKEOnPremQuery

/**
 *  Required. The name of the node pool to retrieve.
 *  projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  View for VMware node pool. When `BASIC` is specified, only the node pool
 *  resource name is returned. The default/unset value
 *  `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete node pool configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewNodePoolViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "NODE_POOL_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a node pool
 *        resource including node pool resource name. (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        VMware node pool resource. This is the default value for
 *        GetVmwareNodePoolRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_VmwareNodePool.
 *
 *  Gets details of a single VMware node pool.
 *
 *  @param name Required. The name of the node pool to retrieve.
 *    projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsGetIamPolicy : GTLRGKEOnPremQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists VMware node pools in a given project, location and VMWare cluster.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsList : GTLRGKEOnPremQuery

/**
 *  The maximum number of node pools to return. The service may return fewer
 *  than this value. If unspecified, at most 50 node pools will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListVmwareNodePools` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListVmwareNodePools` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of node pools. Format:
 *  projects/{project}/locations/{location}/vmwareClusters/{vmwareCluster}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View for VMware node pools. When `BASIC` is specified, only the node pool
 *  resource name is returned. The default/unset value
 *  `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the
 *  complete node pool configuration details.
 *
 *  Likely values:
 *    @arg @c kGTLRGKEOnPremViewNodePoolViewUnspecified If the value is not set,
 *        the default `FULL` view is used. (Value: "NODE_POOL_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRGKEOnPremViewBasic Includes basic information of a node pool
 *        resource including node pool resource name. (Value: "BASIC")
 *    @arg @c kGTLRGKEOnPremViewFull Includes the complete configuration for
 *        VMware node pool resource. This is the default value for
 *        ListVmwareNodePoolsRequest method. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListVmwareNodePoolsResponse.
 *
 *  Lists VMware node pools in a given project, location and VMWare cluster.
 *
 *  @param parent Required. The parent, which owns this collection of node
 *    pools. Format:
 *    projects/{project}/locations/{location}/vmwareClusters/{vmwareCluster}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsOperationsGet : GTLRGKEOnPremQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsOperationsList : GTLRGKEOnPremQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEOnPrem_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single VMware node pool.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsPatch : GTLRGKEOnPremQuery

/** Immutable. The resource name of this node pool. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  VMwareNodePool resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all populated fields in the VMwareNodePool message will be updated.
 *  Empty fields will be ignored unless a field mask is used.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/** Validate the request without actually doing any updates. */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Updates the parameters of a single VMware node pool.
 *
 *  @param object The @c GTLRGKEOnPrem_VmwareNodePool to include in the query.
 *  @param name Immutable. The resource name of this node pool.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_VmwareNodePool *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsSetIamPolicy : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRGKEOnPrem_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsTestIamPermissions : GTLRGKEOnPremQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRGKEOnPrem_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRGKEOnPrem_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRGKEOnPrem_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Unenrolls a VMware node pool to Anthos On-Prem API
 *
 *  Method: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.unenroll
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEOnPremCloudPlatform
 */
@interface GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsUnenroll : GTLRGKEOnPremQuery

/**
 *  If set to true, and the VMware node pool is not found, the request will
 *  succeed but no action will be taken on the server and return a completed
 *  LRO.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  The current etag of the VMware node pool. If an etag is provided and does
 *  not match the current etag of node pool, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the node pool to unenroll. Format:
 *  projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If set, only validate the request, but do not actually unenroll the node
 *  pool.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRGKEOnPrem_Operation.
 *
 *  Unenrolls a VMware node pool to Anthos On-Prem API
 *
 *  @param name Required. The name of the node pool to unenroll. Format:
 *    projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
 *
 *  @return GTLRGKEOnPremQuery_ProjectsLocationsVmwareClustersVmwareNodePoolsUnenroll
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
