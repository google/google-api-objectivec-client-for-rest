// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Controls Partner API (cloudcontrolspartner/v1)
// Description:
//   Provides insights about your customers and their Assured Workloads based on
//   your Sovereign Controls by Partners offering.
// Documentation:
//   https://cloud.google.com/sovereign-controls-by-partners/docs/sovereign-partners/reference/rest

#import <GoogleAPIClientForREST/GTLRCloudControlsPartnerServiceQuery.h>

#import <GoogleAPIClientForREST/GTLRCloudControlsPartnerServiceObjects.h>

@implementation GTLRCloudControlsPartnerServiceQuery

@dynamic fields;

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_Customer class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.get";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customers";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_ListCustomersResponse class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.list";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsAccessApprovalRequestsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/accessApprovalRequests";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsAccessApprovalRequestsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_ListAccessApprovalRequestsResponse class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.accessApprovalRequests.list";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_Workload class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.get";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGetEkmConnections

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGetEkmConnections *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_EkmConnections class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.getEkmConnections";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGetPartnerPermissions

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsGetPartnerPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_PartnerPermissions class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.getPartnerPermissions";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/workloads";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_ListWorkloadsResponse class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.list";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsViolationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsViolationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_Violation class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.violations.get";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsViolationsList

@dynamic filter, intervalEndTime, intervalStartTime, orderBy, pageSize,
         pageToken, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"intervalEndTime" : @"interval.endTime",
    @"intervalStartTime" : @"interval.startTime"
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/violations";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsCustomersWorkloadsViolationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_ListViolationsResponse class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.customers.workloads.violations.list";
  return query;
}

@end

@implementation GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsGetPartner

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudControlsPartnerServiceQuery_OrganizationsLocationsGetPartner *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudControlsPartnerService_Partner class];
  query.loggingName = @"cloudcontrolspartner.organizations.locations.getPartner";
  return query;
}

@end
