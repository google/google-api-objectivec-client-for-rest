// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Real-time Bidding API (realtimebidding/v1)
// Description:
//   Allows external bidders to manage their RTB integration with Google. This
//   includes managing bidder endpoints, QPS quotas, configuring what ad
//   inventory to receive via pretargeting, submitting creatives for
//   verification, and accessing creative metadata such as approval status.
// Documentation:
//   https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRRealTimeBidding_AdTechnologyProviders;
@class GTLRRealTimeBidding_AdvertiserAndBrand;
@class GTLRRealTimeBidding_AppTargeting;
@class GTLRRealTimeBidding_Bidder;
@class GTLRRealTimeBidding_Buyer;
@class GTLRRealTimeBidding_Creative;
@class GTLRRealTimeBidding_CreativeDimensions;
@class GTLRRealTimeBidding_CreativeServingDecision;
@class GTLRRealTimeBidding_Date;
@class GTLRRealTimeBidding_DestinationNotCrawlableEvidence;
@class GTLRRealTimeBidding_DestinationNotWorkingEvidence;
@class GTLRRealTimeBidding_DestinationUrlEvidence;
@class GTLRRealTimeBidding_DomainCallEvidence;
@class GTLRRealTimeBidding_DomainCalls;
@class GTLRRealTimeBidding_DownloadSizeEvidence;
@class GTLRRealTimeBidding_Endpoint;
@class GTLRRealTimeBidding_HtmlContent;
@class GTLRRealTimeBidding_HttpCallEvidence;
@class GTLRRealTimeBidding_HttpCookieEvidence;
@class GTLRRealTimeBidding_Image;
@class GTLRRealTimeBidding_MediaFile;
@class GTLRRealTimeBidding_NativeContent;
@class GTLRRealTimeBidding_NumericTargetingDimension;
@class GTLRRealTimeBidding_PolicyCompliance;
@class GTLRRealTimeBidding_PolicyTopicEntry;
@class GTLRRealTimeBidding_PolicyTopicEvidence;
@class GTLRRealTimeBidding_PretargetingConfig;
@class GTLRRealTimeBidding_PublisherConnection;
@class GTLRRealTimeBidding_StringTargetingDimension;
@class GTLRRealTimeBidding_UrlDownloadSize;
@class GTLRRealTimeBidding_UrlRestriction;
@class GTLRRealTimeBidding_UserList;
@class GTLRRealTimeBidding_VideoContent;
@class GTLRRealTimeBidding_VideoMetadata;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_AddTargetedAppsRequest.targetingMode

/**
 *  The exclusive list type. Inventory must not match any item in this list to
 *  be targeted.
 *
 *  Value: "EXCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_Exclusive;
/**
 *  The inclusive list type. Inventory must match an item in this list to be
 *  targeted.
 *
 *  Value: "INCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_Inclusive;
/**
 *  Placeholder for undefined targeting mode.
 *
 *  Value: "TARGETING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_TargetingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_AddTargetedPublishersRequest.targetingMode

/**
 *  The exclusive list type. Inventory must not match any item in this list to
 *  be targeted.
 *
 *  Value: "EXCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_Exclusive;
/**
 *  The inclusive list type. Inventory must match an item in this list to be
 *  targeted.
 *
 *  Value: "INCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_Inclusive;
/**
 *  Placeholder for undefined targeting mode.
 *
 *  Value: "TARGETING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_TargetingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_AddTargetedSitesRequest.targetingMode

/**
 *  The exclusive list type. Inventory must not match any item in this list to
 *  be targeted.
 *
 *  Value: "EXCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_Exclusive;
/**
 *  The inclusive list type. Inventory must match an item in this list to be
 *  targeted.
 *
 *  Value: "INCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_Inclusive;
/**
 *  Placeholder for undefined targeting mode.
 *
 *  Value: "TARGETING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_TargetingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Creative.creativeFormat

/**
 *  The format is unknown.
 *
 *  Value: "CREATIVE_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_CreativeFormat_CreativeFormatUnspecified;
/**
 *  HTML creative.
 *
 *  Value: "HTML"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_CreativeFormat_Html;
/**
 *  Native creative.
 *
 *  Value: "NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_CreativeFormat_Native;
/**
 *  Video creative.
 *
 *  Value: "VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_CreativeFormat_Video;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Creative.declaredAttributes

/**
 *  The creative is of video type Adobe Flash FLV. For pretargeting.
 *
 *  Value: "ADOBE_FLASH_FLV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_AdobeFlashFlv;
/**
 *  The creative has an interstitial size of any interstitial. For pretargeting.
 *
 *  Value: "ANY_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_AnyInterstitial;
/**
 *  Do not use. This is a placeholder value only.
 *
 *  Value: "ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_AttributeUnspecified;
/**
 *  The creative type is HTML.
 *
 *  Value: "CREATIVE_TYPE_HTML"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_CreativeTypeHtml;
/**
 *  The creative type is VAST video.
 *
 *  Value: "CREATIVE_TYPE_VAST_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_CreativeTypeVastVideo;
/**
 *  The creative expands when rolled over.
 *
 *  Value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingActionRolloverToExpand;
/**
 *  The creative expands on any diagonal.
 *
 *  Value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionAnyDiagonal;
/**
 *  The creative expands down.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionDown;
/**
 *  The creative expands down and left.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionDownLeft;
/**
 *  The creative expands down and right.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionDownRight;
/**
 *  The creative expands left.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionLeft;
/**
 *  The creative expands left or right.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionLeftOrRight;
/**
 *  The creative does not expand.
 *
 *  Value: "EXPANDING_DIRECTION_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionNone;
/**
 *  The creative expands right.
 *
 *  Value: "EXPANDING_DIRECTION_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionRight;
/**
 *  The creative expands up.
 *
 *  Value: "EXPANDING_DIRECTION_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionUp;
/**
 *  The creative expands up and left.
 *
 *  Value: "EXPANDING_DIRECTION_UP_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionUpLeft;
/**
 *  The creative expands up or down.
 *
 *  Value: "EXPANDING_DIRECTION_UP_OR_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionUpOrDown;
/**
 *  The creative expands up and right.
 *
 *  Value: "EXPANDING_DIRECTION_UP_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ExpandingDirectionUpRight;
/**
 *  The creative is of type image/rich media. For pretargeting.
 *
 *  Value: "IMAGE_RICH_MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_ImageRichMedia;
/**
 *  The video type is in-banner video.
 *
 *  Value: "IN_BANNER_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_InBannerVideo;
/**
 *  The instream vast video type is vpaid flash.
 *
 *  Value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_InstreamVastVideoTypeVpaidFlash;
/**
 *  The creative is cookie targeted.
 *
 *  Value: "IS_COOKIE_TARGETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_IsCookieTargeted;
/**
 *  The creative is tagged.
 *
 *  Value: "IS_TAGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_IsTagged;
/**
 *  The creative is user interest targeted.
 *
 *  Value: "IS_USER_INTEREST_TARGETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_IsUserInterestTargeted;
/**
 *  The creative is eligible for native.
 *
 *  Value: "NATIVE_ELIGIBILITY_ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_NativeEligibilityEligible;
/**
 *  The creative is not eligible for native.
 *
 *  Value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_NativeEligibilityNotEligible;
/**
 *  The creative has an interstitial size of non interstitial. For pretargeting.
 *
 *  Value: "NON_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_NonInterstitial;
/**
 *  The creative has an instream VAST video type of non-skippable instream
 *  video. For pretargeting.
 *
 *  Value: "NON_SKIPPABLE_INSTREAM_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_NonSkippableInstreamVideo;
/**
 *  The creative has an instream VAST video type of non-VPAID. For pretargeting.
 *
 *  Value: "NON_VPAID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_NonVpaid;
/**
 *  The open measurement SDK is supported.
 *
 *  Value: "OMSDK_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_Omsdk10;
/**
 *  The creative can dynamically resize to fill a variety of slot sizes.
 *
 *  Value: "RENDERING_SIZELESS_ADX"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RenderingSizelessAdx;
/**
 *  The creative is Flash.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeFlash;
/**
 *  The creative is HTML5.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeHtml5;
/**
 *  The creative is an interstitial.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeInterstitial;
/**
 *  The creative is MRAID.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeMraid;
/**
 *  The creative is non-SSL.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeNonSsl;
/**
 *  The creative is SSL.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_SSL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_RichMediaCapabilityTypeSsl;
/**
 *  The creative has an instream VAST video type of skippable instream video.
 *  For pretargeting.
 *
 *  Value: "SKIPPABLE_INSTREAM_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredAttributes_SkippableInstreamVideo;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Creative.declaredRestrictedCategories

/**
 *  The alcohol restricted category.
 *
 *  Value: "ALCOHOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredRestrictedCategories_Alcohol;
/**
 *  Default value that should never be used.
 *
 *  Value: "RESTRICTED_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_DeclaredRestrictedCategories_RestrictedCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Creative.restrictedCategories

/**
 *  The alcohol restricted category.
 *
 *  Value: "ALCOHOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_RestrictedCategories_Alcohol;
/**
 *  Default value that should never be used.
 *
 *  Value: "RESTRICTED_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Creative_RestrictedCategories_RestrictedCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_CreativeServingDecision.detectedAttributes

/**
 *  The creative is of video type Adobe Flash FLV. For pretargeting.
 *
 *  Value: "ADOBE_FLASH_FLV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_AdobeFlashFlv;
/**
 *  The creative has an interstitial size of any interstitial. For pretargeting.
 *
 *  Value: "ANY_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_AnyInterstitial;
/**
 *  Do not use. This is a placeholder value only.
 *
 *  Value: "ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_AttributeUnspecified;
/**
 *  The creative type is HTML.
 *
 *  Value: "CREATIVE_TYPE_HTML"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_CreativeTypeHtml;
/**
 *  The creative type is VAST video.
 *
 *  Value: "CREATIVE_TYPE_VAST_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_CreativeTypeVastVideo;
/**
 *  The creative expands when rolled over.
 *
 *  Value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingActionRolloverToExpand;
/**
 *  The creative expands on any diagonal.
 *
 *  Value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionAnyDiagonal;
/**
 *  The creative expands down.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionDown;
/**
 *  The creative expands down and left.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionDownLeft;
/**
 *  The creative expands down and right.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionDownRight;
/**
 *  The creative expands left.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionLeft;
/**
 *  The creative expands left or right.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionLeftOrRight;
/**
 *  The creative does not expand.
 *
 *  Value: "EXPANDING_DIRECTION_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionNone;
/**
 *  The creative expands right.
 *
 *  Value: "EXPANDING_DIRECTION_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionRight;
/**
 *  The creative expands up.
 *
 *  Value: "EXPANDING_DIRECTION_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionUp;
/**
 *  The creative expands up and left.
 *
 *  Value: "EXPANDING_DIRECTION_UP_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionUpLeft;
/**
 *  The creative expands up or down.
 *
 *  Value: "EXPANDING_DIRECTION_UP_OR_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionUpOrDown;
/**
 *  The creative expands up and right.
 *
 *  Value: "EXPANDING_DIRECTION_UP_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ExpandingDirectionUpRight;
/**
 *  The creative is of type image/rich media. For pretargeting.
 *
 *  Value: "IMAGE_RICH_MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_ImageRichMedia;
/**
 *  The video type is in-banner video.
 *
 *  Value: "IN_BANNER_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_InBannerVideo;
/**
 *  The instream vast video type is vpaid flash.
 *
 *  Value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_InstreamVastVideoTypeVpaidFlash;
/**
 *  The creative is cookie targeted.
 *
 *  Value: "IS_COOKIE_TARGETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_IsCookieTargeted;
/**
 *  The creative is tagged.
 *
 *  Value: "IS_TAGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_IsTagged;
/**
 *  The creative is user interest targeted.
 *
 *  Value: "IS_USER_INTEREST_TARGETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_IsUserInterestTargeted;
/**
 *  The creative is eligible for native.
 *
 *  Value: "NATIVE_ELIGIBILITY_ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_NativeEligibilityEligible;
/**
 *  The creative is not eligible for native.
 *
 *  Value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_NativeEligibilityNotEligible;
/**
 *  The creative has an interstitial size of non interstitial. For pretargeting.
 *
 *  Value: "NON_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_NonInterstitial;
/**
 *  The creative has an instream VAST video type of non-skippable instream
 *  video. For pretargeting.
 *
 *  Value: "NON_SKIPPABLE_INSTREAM_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_NonSkippableInstreamVideo;
/**
 *  The creative has an instream VAST video type of non-VPAID. For pretargeting.
 *
 *  Value: "NON_VPAID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_NonVpaid;
/**
 *  The open measurement SDK is supported.
 *
 *  Value: "OMSDK_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_Omsdk10;
/**
 *  The creative can dynamically resize to fill a variety of slot sizes.
 *
 *  Value: "RENDERING_SIZELESS_ADX"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RenderingSizelessAdx;
/**
 *  The creative is Flash.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeFlash;
/**
 *  The creative is HTML5.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeHtml5;
/**
 *  The creative is an interstitial.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeInterstitial;
/**
 *  The creative is MRAID.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeMraid;
/**
 *  The creative is non-SSL.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeNonSsl;
/**
 *  The creative is SSL.
 *
 *  Value: "RICH_MEDIA_CAPABILITY_TYPE_SSL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_RichMediaCapabilityTypeSsl;
/**
 *  The creative has an instream VAST video type of skippable instream video.
 *  For pretargeting.
 *
 *  Value: "SKIPPABLE_INSTREAM_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_CreativeServingDecision_DetectedAttributes_SkippableInstreamVideo;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotCrawlableEvidence.reason

/**
 *  Default value that should never be used.
 *
 *  Value: "REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_ReasonUnspecified;
/**
 *  Crawler was disallowed by the site's robots exclusion file (for example,
 *  robots.txt).
 *
 *  Value: "ROBOTED_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_RobotedDenied;
/**
 *  Timed out reading site's robots exclusion file (for example, robots.txt).
 *
 *  Value: "TIMEOUT_ROBOTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_TimeoutRobots;
/**
 *  Unknown reason.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_Unknown;
/**
 *  Site's robots exclusion file (for example, robots.txt) was unreachable.
 *
 *  Value: "UNREACHABLE_ROBOTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_UnreachableRobots;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotWorkingEvidence.dnsError

/**
 *  Default value that should never be used.
 *
 *  Value: "DNS_ERROR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_DnsErrorUnspecified;
/**
 *  DNS name was not found.
 *
 *  Value: "ERROR_DNS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_ErrorDns;
/**
 *  An internal issue occurred when Google's crawler tried to resolve the DNS
 *  entry. This is a Google-internal issue and may not be the result of an issue
 *  with the landing page.
 *
 *  Value: "GOOGLE_CRAWLER_DNS_ISSUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_GoogleCrawlerDnsIssue;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotWorkingEvidence.invalidPage

/**
 *  Page was empty or had an error.
 *
 *  Value: "EMPTY_OR_ERROR_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_InvalidPage_EmptyOrErrorPage;
/**
 *  Default value that should never be used.
 *
 *  Value: "INVALID_PAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_InvalidPage_InvalidPageUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotWorkingEvidence.platform

/**
 *  The Android platform.
 *
 *  Value: "ANDROID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_Android;
/**
 *  The iOS platform.
 *
 *  Value: "IOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_Ios;
/**
 *  The personal computer platform.
 *
 *  Value: "PERSONAL_COMPUTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_PersonalComputer;
/**
 *  Default value that should never be used.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_PlatformUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotWorkingEvidence.redirectionError

/**
 *  Got a redirect but it was empty.
 *
 *  Value: "EMPTY_REDIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_EmptyRedirect;
/**
 *  Got a redirect but it was invalid.
 *
 *  Value: "INVALID_REDIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_InvalidRedirect;
/**
 *  Unknown redirect error.
 *
 *  Value: "REDIRECT_ERROR_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_RedirectErrorUnknown;
/**
 *  Default value that should never be used.
 *
 *  Value: "REDIRECTION_ERROR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_RedirectionErrorUnspecified;
/**
 *  Too many redirect hops.
 *
 *  Value: "TOO_MANY_REDIRECTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_TooManyRedirects;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_DestinationNotWorkingEvidence.urlRejected

/**
 *  URL rejected because of a malformed request.
 *
 *  Value: "BAD_REQUEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_BadRequest;
/**
 *  URL rejected because of a malformed URL.
 *
 *  Value: "MALFORMED_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_MalformedUrl;
/**
 *  URL rejected because of unknown reason.
 *
 *  Value: "URL_REJECTED_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_UrlRejectedUnknown;
/**
 *  Default value that should never be used.
 *
 *  Value: "URL_REJECTED_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_UrlRejectedUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Endpoint.bidProtocol

/**
 *  Placeholder for undefined bid protocol. This value should not be used.
 *
 *  Value: "BID_PROTOCOL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_BidProtocolUnspecified;
/**
 *  Google RTB protocol / Protobuf encoding.
 *
 *  Value: "GOOGLE_RTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_GoogleRtb;
/**
 *  OpenRTB / JSON encoding, specification version 2.2.
 *
 *  Value: "OPENRTB_2_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb22;
/**
 *  OpenRTB / JSON encoding, specification version 2.3.
 *
 *  Value: "OPENRTB_2_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb23;
/**
 *  OpenRTB / JSON encoding, specification version 2.4.
 *
 *  Value: "OPENRTB_2_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb24;
/**
 *  OpenRTB / JSON encoding, specification version 2.5.
 *
 *  Value: "OPENRTB_2_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb25;
/**
 *  OpenRTB / Protobuf encoding, specification version 2.3.
 *
 *  Value: "OPENRTB_PROTOBUF_2_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf23;
/**
 *  OpenRTB / Protobuf encoding, specification version 2.4.
 *
 *  Value: "OPENRTB_PROTOBUF_2_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf24;
/**
 *  OpenRTB / Protobuf encoding, specification version 2.5.
 *
 *  Value: "OPENRTB_PROTOBUF_2_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf25;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_Endpoint.tradingLocation

/**
 *  The Asia trading location.
 *
 *  Value: "ASIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_TradingLocation_Asia;
/**
 *  The European trading location.
 *
 *  Value: "EUROPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_TradingLocation_Europe;
/**
 *  A placeholder for an undefined trading region. This value should not be
 *  used.
 *
 *  Value: "TRADING_LOCATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_TradingLocation_TradingLocationUnspecified;
/**
 *  The Eastern US trading location.
 *
 *  Value: "US_EAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_TradingLocation_UsEast;
/**
 *  The Western US trading location.
 *
 *  Value: "US_WEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_Endpoint_TradingLocation_UsWest;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_MediaFile.mimeType

/**
 *  JavaScript (used for VPAID ads).
 *
 *  Value: "MIME_APPLICATION_JAVASCRIPT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationJavascript;
/**
 *  DASH.
 *
 *  Value: "MIME_APPLICATION_MPEGDASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationMpegdash;
/**
 *  HLS/M3U8.
 *
 *  Value: "MIME_APPLICATION_MPEGURL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationMpegurl;
/**
 *  Silverlight (used for VPAID ads).
 *
 *  Value: "MIME_APPLICATION_SILVERLIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSilverlight;
/**
 *  Properties of VAST served by consumer survey.
 *
 *  Value: "MIME_APPLICATION_SURVEY"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSurvey;
/**
 *  Shockwave Flash (used for VPAID ads).
 *
 *  Value: "MIME_APPLICATION_SWF"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSwf;
/**
 *  MPEG-3 audio format.
 *
 *  Value: "MIME_AUDIO_MP3"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioMp3;
/**
 *  MPEG-4 audio format.
 *
 *  Value: "MIME_AUDIO_MP4A"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioMp4a;
/**
 *  Ogg audio format
 *
 *  Value: "MIME_AUDIO_OGG"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioOgg;
/**
 *  3GPP container format used on 3G phones.
 *
 *  Value: "MIME_VIDEO_3GPP"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideo3gpp;
/**
 *  Quicktime container format.
 *
 *  Value: "MIME_VIDEO_MOV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoMov;
/**
 *  MPEG-4 container typically with H.264 codec.
 *
 *  Value: "MIME_VIDEO_MP4"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoMp4;
/**
 *  Ogg container assuming Theora codec.
 *
 *  Value: "MIME_VIDEO_OGG"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoOgg;
/**
 *  WebM container assuming VP9 codec.
 *
 *  Value: "MIME_VIDEO_WEBM"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoWebm;
/**
 *  Flash container.
 *
 *  Value: "MIME_VIDEO_XFLV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoXflv;
/**
 *  Windows Media Video Codec.
 *
 *  Value: "MIME_VIDEO_X_MS_WMV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoXMsWmv;
/**
 *  Video files hosted on YouTube.
 *
 *  Value: "MIME_VIDEO_YT_HOSTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoYtHosted;
/**
 *  Default value that should never be used.
 *
 *  Value: "VIDEO_MIME_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_MediaFile_MimeType_VideoMimeTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PolicyCompliance.status

/**
 *  Creative is approved.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PolicyCompliance_Status_Approved;
/**
 *  Certificates are required for the creative to be served in some regions. For
 *  more information about creative certification, refer to:
 *  https://support.google.com/authorizedbuyers/answer/7450776
 *
 *  Value: "CERTIFICATE_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PolicyCompliance_Status_CertificateRequired;
/**
 *  Creative cannot serve.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PolicyCompliance_Status_Disapproved;
/**
 *  Creative is pending review.
 *
 *  Value: "PENDING_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PolicyCompliance_Status_PendingReview;
/**
 *  Default value that should never be used.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PolicyCompliance_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.allowedUserTargetingModes

/**
 *  Ads based on user interest category targeting are allowed to serve.
 *
 *  Value: "INTEREST_BASED_TARGETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_AllowedUserTargetingModes_InterestBasedTargeting;
/**
 *  Remarketing ads are allowed to serve.
 *
 *  Value: "REMARKETING_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_AllowedUserTargetingModes_RemarketingAds;
/**
 *  Placeholder for undefined user targeting mode.
 *
 *  Value: "USER_TARGETING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_AllowedUserTargetingModes_UserTargetingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.includedEnvironments

/**
 *  App environment.
 *
 *  Value: "APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedEnvironments_App;
/**
 *  Placeholder for unspecified environment. This value should not be used.
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedEnvironments_EnvironmentUnspecified;
/**
 *  Web environment.
 *
 *  Value: "WEB"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedEnvironments_Web;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.includedFormats

/**
 *  Placeholder for undefined creative format. This value should not be used.
 *
 *  Value: "CREATIVE_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedFormats_CreativeFormatUnspecified;
/**
 *  HTML and AMPHTML creatives.
 *
 *  Value: "HTML"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedFormats_Html;
/**
 *  Native creative, including standard and video native ads.
 *
 *  Value: "NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedFormats_Native;
/**
 *  VAST video or audio creative.
 *
 *  Value: "VAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedFormats_Vast;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.includedPlatforms

/**
 *  The connected TV platform.
 *
 *  Value: "CONNECTED_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedPlatforms_ConnectedTv;
/**
 *  The personal computer platform.
 *
 *  Value: "PERSONAL_COMPUTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedPlatforms_PersonalComputer;
/**
 *  The mobile platform.
 *
 *  Value: "PHONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedPlatforms_Phone;
/**
 *  Placeholder for an undefined platform. This value should not be used.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedPlatforms_PlatformUnspecified;
/**
 *  The tablet platform.
 *
 *  Value: "TABLET"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedPlatforms_Tablet;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.includedUserIdTypes

/**
 *  Mobile device advertising ID.
 *
 *  Value: "DEVICE_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedUserIdTypes_DeviceId;
/**
 *  Google cookie, referring to google_user_id in the bid request.
 *
 *  Value: "GOOGLE_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedUserIdTypes_GoogleCookie;
/**
 *  Hosted match data, referring to hosted_match_data in the bid request.
 *
 *  Value: "HOSTED_MATCH_DATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedUserIdTypes_HostedMatchData;
/**
 *  Placeholder for unspecified user identifier.
 *
 *  Value: "USER_ID_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_IncludedUserIdTypes_UserIdTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.interstitialTargeting

/**
 *  Unspecified interstitial targeting. Represents an interstitial-agnostic
 *  selection.
 *
 *  Value: "INTERSTITIAL_TARGETING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_InterstitialTargetingUnspecified;
/**
 *  Only bid requests for interstitial inventory should be sent.
 *
 *  Value: "ONLY_INTERSTITIAL_REQUESTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_OnlyInterstitialRequests;
/**
 *  Only bid requests for non-interstitial inventory should be sent.
 *
 *  Value: "ONLY_NON_INTERSTITIAL_REQUESTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_OnlyNonInterstitialRequests;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PretargetingConfig.state

/**
 *  This pretargeting configuration is actively being used to filter bid
 *  requests.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_State_Active;
/**
 *  Placeholder for undefined state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_State_StateUnspecified;
/**
 *  This pretargeting configuration is suspended and not used in serving.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PretargetingConfig_State_Suspended;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PublisherConnection.biddingState

/**
 *  Indicates that the publisher was approved.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_BiddingState_Approved;
/**
 *  Indicates a request for connection from the publisher that the bidder needs
 *  to review.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_BiddingState_Pending;
/**
 *  Indicates that the publisher was rejected.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_BiddingState_Rejected;
/**
 *  An unspecified bidding status.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_BiddingState_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_PublisherConnection.publisherPlatform

/**
 *  An AdMob publisher.
 *
 *  Value: "ADMOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_Admob;
/**
 *  A Google Ad Manager publisher.
 *
 *  Value: "GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_GoogleAdManager;
/**
 *  An unspecified publisher platform.
 *
 *  Value: "PUBLISHER_PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_PublisherPlatformUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_StringTargetingDimension.targetingMode

/**
 *  The exclusive list type. Inventory must not match any item in this list to
 *  be targeted.
 *
 *  Value: "EXCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_Exclusive;
/**
 *  The inclusive list type. Inventory must match an item in this list to be
 *  targeted.
 *
 *  Value: "INCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_Inclusive;
/**
 *  Placeholder for undefined targeting mode.
 *
 *  Value: "TARGETING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_TargetingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_UrlRestriction.restrictionType

/**
 *  The tag URL (as recorded by the pixel callback) contains the specified URL.
 *
 *  Value: "CONTAINS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_Contains;
/**
 *  The tag URL (as recorded by the pixel callback) does not contain the
 *  specified URL.
 *
 *  Value: "DOES_NOT_CONTAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotContain;
/**
 *  The tag URL (as recorded by the pixel callback) does not end with the
 *  specified URL.
 *
 *  Value: "DOES_NOT_END_WITH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotEndWith;
/**
 *  The tag URL (as recorded by the pixel callback) does not equal the specified
 *  URL.
 *
 *  Value: "DOES_NOT_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotEqual;
/**
 *  The tag URL (as recorded by the pixel callback) does not start with the
 *  specified URL.
 *
 *  Value: "DOES_NOT_START_WITH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotStartWith;
/**
 *  The tag URL (as recorded by the pixel callback) ends with the specified URL.
 *
 *  Value: "ENDS_WITH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_EndsWith;
/**
 *  The tag URL (as recorded by the pixel callback) exactly matches the
 *  specified URL.
 *
 *  Value: "EQUALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_Equals;
/**
 *  Default value that should never be used.
 *
 *  Value: "RESTRICTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_RestrictionTypeUnspecified;
/**
 *  The tag URL (as recorded by the pixel callback) starts with the specified
 *  URL.
 *
 *  Value: "STARTS_WITH"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UrlRestriction_RestrictionType_StartsWith;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_UserList.status

/**
 *  New users cannot be added to the user list.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UserList_Status_Closed;
/**
 *  New users can be added to the user list.
 *
 *  Value: "OPEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UserList_Status_Open;
/**
 *  Default value that should never be used.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_UserList_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRRealTimeBidding_VideoMetadata.vastVersion

/**
 *  VAST 1.0
 *
 *  Value: "VAST_VERSION_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion10;
/**
 *  VAST 2.0
 *
 *  Value: "VAST_VERSION_2_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion20;
/**
 *  VAST 3.0
 *
 *  Value: "VAST_VERSION_3_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion30;
/**
 *  VAST 4.0
 *
 *  Value: "VAST_VERSION_4_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion40;
/**
 *  Default value that should never be used.
 *
 *  Value: "VAST_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersionUnspecified;

/**
 *  A request to activate a pretargeting configuration. Sets the configuration's
 *  state to ACTIVE.
 */
@interface GTLRRealTimeBidding_ActivatePretargetingConfigRequest : GTLRObject
@end


/**
 *  A request to start targeting the provided app IDs in a specific pretargeting
 *  configuration. The pretargeting configuration itself specifies how these
 *  apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.
 */
@interface GTLRRealTimeBidding_AddTargetedAppsRequest : GTLRObject

/**
 *  A list of app IDs to target in the pretargeting configuration. These values
 *  will be added to the list of targeted app IDs in
 *  PretargetingConfig.appTargeting.mobileAppTargeting.values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *appIds;

/**
 *  Required. The targeting mode that should be applied to the list of app IDs.
 *  If there are existing targeted app IDs, must be equal to the existing
 *  PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400
 *  bad request error will be returned.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_Exclusive
 *        The exclusive list type. Inventory must not match any item in this
 *        list to be targeted. (Value: "EXCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_Inclusive
 *        The inclusive list type. Inventory must match an item in this list to
 *        be targeted. (Value: "INCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedAppsRequest_TargetingMode_TargetingModeUnspecified
 *        Placeholder for undefined targeting mode. (Value:
 *        "TARGETING_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *targetingMode;

@end


/**
 *  A request to start targeting the provided publishers in a specific
 *  pretargeting configuration. The pretargeting configuration itself specifies
 *  how these publishers are targeted in PretargetingConfig.publisherTargeting.
 */
@interface GTLRRealTimeBidding_AddTargetedPublishersRequest : GTLRObject

/**
 *  A list of publisher IDs to target in the pretargeting configuration. These
 *  values will be added to the list of targeted publisher IDs in
 *  PretargetingConfig.publisherTargeting.values. Publishers are identified by
 *  their publisher ID from ads.txt / app-ads.txt. See
 *  https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for
 *  more details.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *publisherIds;

/**
 *  Required. The targeting mode that should be applied to the list of publisher
 *  IDs. If are existing publisher IDs, must be equal to the existing
 *  PretargetingConfig.publisherTargeting.targetingMode or a 400 bad request
 *  error will be returned.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_Exclusive
 *        The exclusive list type. Inventory must not match any item in this
 *        list to be targeted. (Value: "EXCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_Inclusive
 *        The inclusive list type. Inventory must match an item in this list to
 *        be targeted. (Value: "INCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedPublishersRequest_TargetingMode_TargetingModeUnspecified
 *        Placeholder for undefined targeting mode. (Value:
 *        "TARGETING_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *targetingMode;

@end


/**
 *  A request to start targeting the provided sites in a specific pretargeting
 *  configuration. The pretargeting configuration itself specifies how these
 *  sites are targeted in PretargetingConfig.webTargeting.
 */
@interface GTLRRealTimeBidding_AddTargetedSitesRequest : GTLRObject

/**
 *  A list of site URLs to target in the pretargeting configuration. These
 *  values will be added to the list of targeted URLs in
 *  PretargetingConfig.webTargeting.values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sites;

/**
 *  Required. The targeting mode that should be applied to the list of site
 *  URLs. If there are existing targeted sites, must be equal to the existing
 *  PretargetingConfig.webTargeting.targetingMode or a 400 bad request error
 *  will be returned.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_Exclusive
 *        The exclusive list type. Inventory must not match any item in this
 *        list to be targeted. (Value: "EXCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_Inclusive
 *        The inclusive list type. Inventory must match an item in this list to
 *        be targeted. (Value: "INCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_AddTargetedSitesRequest_TargetingMode_TargetingModeUnspecified
 *        Placeholder for undefined targeting mode. (Value:
 *        "TARGETING_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *targetingMode;

@end


/**
 *  The list of detected Ad Technology Providers for this creative. Bids placed
 *  for inventory that will serve to EEA or UK users are expected to comply with
 *  GDPR requirements. You must ensure that the creatives used in such bids
 *  should contain only user consented ad technology providers as indicated in
 *  the bid request. Google reserves the right to filter non-compliant bids.
 *  User consented ad technology providers can be found in the [Google
 *  Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
 *  with the `BidRequest.adslot.consented_providers_settings` field, and can be
 *  found as an [OpenRTB
 *  extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto)
 *  with the `BidRequest.user.ext.consented_providers_settings` and
 *  `BidRequest.user.ext.consent` fields. See
 *  https://support.google.com/authorizedbuyers/answer/9789378 for additional
 *  information about the Google TCF v2 integration.
 */
@interface GTLRRealTimeBidding_AdTechnologyProviders : GTLRObject

/**
 *  The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB
 *  Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json
 *  for details about the vendors.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedGvlIds;

/**
 *  The detected [Google Ad Tech Providers
 *  (ATP)](https://support.google.com/admanager/answer/9012903) for this
 *  creative. See
 *  https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for
 *  mapping of provider ID to provided name, a privacy policy URL, and a list of
 *  domains which can be attributed to the provider.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedProviderIds;

/**
 *  Domains of detected unidentified ad technology providers (if any). You must
 *  ensure that the creatives used in bids placed for inventory that will serve
 *  to EEA or UK users does not contain unidentified ad technology providers.
 *  Google reserves the right to filter non-compliant bids.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unidentifiedProviderDomains;

@end


/**
 *  Detected advertiser and brand information.
 */
@interface GTLRRealTimeBidding_AdvertiserAndBrand : GTLRObject

/**
 *  See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for
 *  the list of possible values. Can be used to filter the response of the
 *  creatives.list method.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Advertiser name. Can be used to filter the response of the creatives.list
 *  method.
 */
@property(nonatomic, copy, nullable) NSString *advertiserName;

/**
 *  Detected brand ID or zero if no brand has been detected. See
 *  https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list
 *  of possible values. Can be used to filter the response of the creatives.list
 *  method.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *brandId;

/**
 *  Brand name. Can be used to filter the response of the creatives.list method.
 */
@property(nonatomic, copy, nullable) NSString *brandName;

@end


/**
 *  A subset of app inventory to target. Bid requests that match criteria in at
 *  least one of the specified dimensions will be sent.
 */
@interface GTLRRealTimeBidding_AppTargeting : GTLRObject

/**
 *  Lists of included and excluded mobile app categories as defined in
 *  https://developers.google.com/adwords/api/docs/appendix/mobileappcategories.csv.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_NumericTargetingDimension *mobileAppCategoryTargeting;

/**
 *  Targeted app IDs. App IDs can refer to those found in an app store or ones
 *  that are not published in an app store. A maximum of 30,000 app IDs can be
 *  targeted.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_StringTargetingDimension *mobileAppTargeting;

@end


/**
 *  A request to approve a batch of publisher connections.
 */
@interface GTLRRealTimeBidding_BatchApprovePublisherConnectionsRequest : GTLRObject

/**
 *  Required. The names of the publishers with which connections will be
 *  approved. In the pattern `bidders/{bidder}/publisherConnections/{publisher}`
 *  where `{bidder}` is the account ID of the bidder, and `{publisher}` is the
 *  ads.txt/app-ads.txt publisher ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  A response for the request to approve a batch of publisher connections.
 */
@interface GTLRRealTimeBidding_BatchApprovePublisherConnectionsResponse : GTLRObject

/** The publisher connections that have been approved. */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PublisherConnection *> *publisherConnections;

@end


/**
 *  A request to reject a batch of publisher connections.
 */
@interface GTLRRealTimeBidding_BatchRejectPublisherConnectionsRequest : GTLRObject

/**
 *  Required. The names of the publishers with whom connection will be rejected.
 *  In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where
 *  `{bidder}` is the account ID of the bidder, and `{publisher}` is the
 *  ads.txt/app-ads.txt publisher ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  A response for the request to reject a batch of publisher connections.
 */
@interface GTLRRealTimeBidding_BatchRejectPublisherConnectionsResponse : GTLRObject

/** The publisher connections that have been rejected. */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PublisherConnection *> *publisherConnections;

@end


/**
 *  Bidder settings.
 */
@interface GTLRRealTimeBidding_Bidder : GTLRObject

/**
 *  Output only. An option to bypass pretargeting for private auctions and
 *  preferred deals. When true, bid requests from these nonguaranteed deals will
 *  always be sent. When false, bid requests will be subject to regular
 *  pretargeting configurations. Programmatic Guaranteed deals will always be
 *  sent to the bidder, regardless of the value for this flag. Auction packages
 *  are not impacted by this value and are subject to the regular pretargeting
 *  configurations.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bypassNonguaranteedDealsPretargeting;

/**
 *  Output only. The buyer's network ID used for cookie matching. This ID
 *  corresponds to the `google_nid` parameter in the URL used in cookie match
 *  requests. Refer to
 *  https://developers.google.com/authorized-buyers/rtb/cookie-guide for further
 *  information.
 */
@property(nonatomic, copy, nullable) NSString *cookieMatchingNetworkId;

/**
 *  Output only. The base URL used in cookie match requests. Refer to
 *  https://developers.google.com/authorized-buyers/rtb/cookie-guide for further
 *  information.
 */
@property(nonatomic, copy, nullable) NSString *cookieMatchingUrl;

/**
 *  Output only. The billing ID for the deals pretargeting config. This billing
 *  ID is sent on the bid request for guaranteed and nonguaranteed deals matched
 *  in pretargeting.
 */
@property(nonatomic, copy, nullable) NSString *dealsBillingId;

/**
 *  Output only. Name of the bidder resource that must follow the pattern
 *  `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of
 *  the bidder whose information is to be received. One can get their account ID
 *  on the Authorized Buyers or Open Bidding UI, or by contacting their Google
 *  account manager.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  RTB Buyer account information.
 */
@interface GTLRRealTimeBidding_Buyer : GTLRObject

/**
 *  Output only. The number of creatives that this buyer submitted through the
 *  API or bid with in the last 30 days. This is counted against the maximum
 *  number of active creatives.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *activeCreativeCount;

/**
 *  Output only. The name of the bidder resource that is responsible for
 *  receiving bidding traffic for this account. The bidder name must follow the
 *  pattern `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the
 *  account ID of the bidder receiving traffic for this buyer.
 */
@property(nonatomic, copy, nullable) NSString *bidder;

/**
 *  Output only. A list of billing IDs associated with this account. These IDs
 *  appear on: 1. A bid request, to signal which buyers are eligible to bid on a
 *  given opportunity, and which pretargeting configurations were matched for
 *  each eligible buyer. 2. The bid response, to attribute a winning impression
 *  to a specific account for billing, reporting, policy and publisher block
 *  enforcement.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *billingIds;

/**
 *  Output only. The diplay name associated with this buyer account, as visible
 *  to sellers.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The maximum number of active creatives that this buyer can
 *  have.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumActiveCreativeCount;

/**
 *  Output only. Name of the buyer resource that must follow the pattern
 *  `buyers/{buyerAccountId}`, where `{buyerAccountId}` is the account ID of the
 *  buyer account whose information is to be received. One can get their account
 *  ID on the Authorized Buyers or Open Bidding UI, or by contacting their
 *  Google account manager.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A request to close a specified user list.
 */
@interface GTLRRealTimeBidding_CloseUserListRequest : GTLRObject
@end


/**
 *  A creative and its classification data.
 */
@interface GTLRRealTimeBidding_Creative : GTLRObject

/**
 *  Output only. ID of the buyer account that this creative is owned by. Can be
 *  used to filter the response of the creatives.list method with equality and
 *  inequality check.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  The link to AdChoices destination page. This is only supported for native
 *  ads.
 */
@property(nonatomic, copy, nullable) NSString *adChoicesDestinationUrl;

/**
 *  The name of the company being advertised in the creative. Can be used to
 *  filter the response of the creatives.list method.
 */
@property(nonatomic, copy, nullable) NSString *advertiserName;

/**
 *  The agency ID for this creative.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agencyId;

/** Output only. The last update timestamp of the creative through the API. */
@property(nonatomic, strong, nullable) GTLRDateTime *apiUpdateTime;

/**
 *  Output only. The format of this creative. Can be used to filter the response
 *  of the creatives.list method.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_Creative_CreativeFormat_CreativeFormatUnspecified
 *        The format is unknown. (Value: "CREATIVE_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_Creative_CreativeFormat_Html HTML creative.
 *        (Value: "HTML")
 *    @arg @c kGTLRRealTimeBidding_Creative_CreativeFormat_Native Native
 *        creative. (Value: "NATIVE")
 *    @arg @c kGTLRRealTimeBidding_Creative_CreativeFormat_Video Video creative.
 *        (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeFormat;

/**
 *  Buyer-specific creative ID that references this creative in bid responses.
 *  This field is Ignored in update operations. Can be used to filter the
 *  response of the creatives.list method. The maximum length of the creative ID
 *  is 128 bytes.
 */
@property(nonatomic, copy, nullable) NSString *creativeId;

/**
 *  Output only. Top level status and detected attributes of a creative (for
 *  example domain, language, advertiser, product category, etc.) that affect
 *  whether (status) and where (context) a creative will be allowed to serve.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_CreativeServingDecision *creativeServingDecision;

/**
 *  Output only. IDs of all of the deals with which this creative has been used
 *  in bidding. Can be used to filter the response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dealIds;

/**
 *  All declared attributes for the ads that may be shown from this creative.
 *  Can be used to filter the response of the creatives.list method. If the
 *  `excluded_attribute` field of a [bid
 *  request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto")
 *  contains one of the attributes that were declared or detected for a given
 *  creative, and a bid is submitted with that creative, the bid will be
 *  filtered before the auction.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *declaredAttributes;

/**
 *  The set of declared destination URLs for the creative. Can be used to filter
 *  the response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *declaredClickThroughUrls;

/**
 *  All declared restricted categories for the ads that may be shown from this
 *  creative. Can be used to filter the response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *declaredRestrictedCategories;

/**
 *  IDs for the declared ad technology vendors that may be used by this
 *  creative. See
 *  https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible
 *  values. Can be used to filter the response of the creatives.list method.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *declaredVendorIds;

/** An HTML creative. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_HtmlContent *html;

/** The set of URLs to be called to record an impression. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *impressionTrackingUrls;

/**
 *  Output only. Name of the creative. Follows the pattern
 *  `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the
 *  account ID of the buyer who owns the creative, and `{creative}` is the
 *  buyer-specific creative ID that references this creative in the bid
 *  response.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** A native creative. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_NativeContent *native;

/**
 *  Experimental field that can be used during the [FLEDGE Origin
 *  Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an
 *  interest group ad used in [TURTLEDOVE on-device
 *  auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups").
 *  This should be unique among all creatives for a given `accountId`.
 */
@property(nonatomic, copy, nullable) NSString *renderUrl;

/**
 *  All restricted categories for the ads that may be shown from this creative.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedCategories;

/**
 *  Output only. The version of the creative. Version for a new creative is 1
 *  and it increments during subsequent creative updates.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

/** A video creative. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_VideoContent *video;

@end


/**
 *  The dimensions of a creative. This applies to only HTML and Native
 *  creatives.
 */
@interface GTLRRealTimeBidding_CreativeDimensions : GTLRObject

/**
 *  The height of the creative in pixels.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  The width of the creative in pixels.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Top level status and detected attributes of a creative.
 */
@interface GTLRRealTimeBidding_CreativeServingDecision : GTLRObject

/** The detected ad technology providers. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_AdTechnologyProviders *adTechnologyProviders;

/**
 *  The policy compliance of this creative in China. When approved or
 *  disapproved, this applies to both deals and open auction in China. When
 *  pending review, this creative is allowed to serve for deals but not for open
 *  auction.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_PolicyCompliance *chinaPolicyCompliance;

/**
 *  Policy compliance of this creative when bidding on Programmatic Guaranteed
 *  and Preferred Deals (outside of Russia and China).
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_PolicyCompliance *dealsPolicyCompliance;

/** Detected advertisers and brands. */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_AdvertiserAndBrand *> *detectedAdvertisers;

/**
 *  Publisher-excludable attributes that were detected for this creative. Can be
 *  used to filter the response of the creatives.list method. If the
 *  `excluded_attribute` field of a [bid
 *  request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
 *  contains one of the attributes that were declared or detected for a given
 *  creative, and a bid is submitted with that creative, the bid will be
 *  filtered before the auction.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedAttributes;

/**
 *  The set of detected destination URLs for the creative. Can be used to filter
 *  the response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedClickThroughUrls;

/** The detected domains for this creative. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedDomains;

/**
 *  The detected languages for this creative. The order is arbitrary. The codes
 *  are 2 or 5 characters and are documented at
 *  https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can
 *  be used to filter the response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *detectedLanguages;

/**
 *  Detected product categories, if any. See the ad-product-categories.txt file
 *  in the technical documentation for a list of IDs. Can be used to filter the
 *  response of the creatives.list method.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedProductCategories;

/**
 *  Detected sensitive categories, if any. Can be used to filter the response of
 *  the creatives.list method. See the ad-sensitive-categories.txt file in the
 *  technical documentation for a list of IDs. You should use these IDs along
 *  with the excluded-sensitive-category field in the bid request to filter your
 *  bids.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedSensitiveCategories;

/**
 *  IDs of the ad technology vendors that were detected to be used by this
 *  creative. See
 *  https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible
 *  values. Can be used to filter the response of the creatives.list method. If
 *  the `allowed_vendor_type` field of a [bid
 *  request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
 *  does not contain one of the vendor type IDs that were declared or detected
 *  for a given creative, and a bid is submitted with that creative, the bid
 *  will be filtered before the auction.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *detectedVendorIds;

/**
 *  The last time the creative status was updated. Can be used to filter the
 *  response of the creatives.list method.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastStatusUpdate;

/**
 *  Policy compliance of this creative when bidding in open auction, private
 *  auction, or auction packages (outside of Russia and China).
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_PolicyCompliance *networkPolicyCompliance;

/**
 *  Policy compliance of this creative when bidding in Open Bidding (outside of
 *  Russia and China). For the list of platform policies, see:
 *  https://support.google.com/platformspolicy/answer/3013851.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_PolicyCompliance *platformPolicyCompliance;

/**
 *  The policy compliance of this creative in Russia. When approved or
 *  disapproved, this applies to both deals and open auction in Russia. When
 *  pending review, this creative is allowed to serve for deals but not for open
 *  auction.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_PolicyCompliance *russiaPolicyCompliance;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRRealTimeBidding_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Evidence that the creative's destination URL was not crawlable by Google.
 */
@interface GTLRRealTimeBidding_DestinationNotCrawlableEvidence : GTLRObject

/** Destination URL that was attempted to be crawled. */
@property(nonatomic, copy, nullable) NSString *crawledUrl;

/** Approximate time of the crawl. */
@property(nonatomic, strong, nullable) GTLRDateTime *crawlTime;

/**
 *  Reason of destination not crawlable.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_ReasonUnspecified
 *        Default value that should never be used. (Value: "REASON_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_RobotedDenied
 *        Crawler was disallowed by the site's robots exclusion file (for
 *        example, robots.txt). (Value: "ROBOTED_DENIED")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_TimeoutRobots
 *        Timed out reading site's robots exclusion file (for example,
 *        robots.txt). (Value: "TIMEOUT_ROBOTS")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_Unknown
 *        Unknown reason. (Value: "UNKNOWN")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotCrawlableEvidence_Reason_UnreachableRobots
 *        Site's robots exclusion file (for example, robots.txt) was
 *        unreachable. (Value: "UNREACHABLE_ROBOTS")
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Evidence of the creative's destination URL not functioning properly or
 *  having been incorrectly set up.
 */
@interface GTLRRealTimeBidding_DestinationNotWorkingEvidence : GTLRObject

/**
 *  DNS lookup errors.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_DnsErrorUnspecified
 *        Default value that should never be used. (Value:
 *        "DNS_ERROR_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_ErrorDns
 *        DNS name was not found. (Value: "ERROR_DNS")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_DnsError_GoogleCrawlerDnsIssue
 *        An internal issue occurred when Google's crawler tried to resolve the
 *        DNS entry. This is a Google-internal issue and may not be the result
 *        of an issue with the landing page. (Value: "GOOGLE_CRAWLER_DNS_ISSUE")
 */
@property(nonatomic, copy, nullable) NSString *dnsError;

/** The full non-working URL. */
@property(nonatomic, copy, nullable) NSString *expandedUrl;

/**
 *  HTTP error code (for example, 404 or 5xx)
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpError;

/**
 *  Page was crawled successfully, but was detected as either a page with no
 *  content or an error page.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_InvalidPage_EmptyOrErrorPage
 *        Page was empty or had an error. (Value: "EMPTY_OR_ERROR_PAGE")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_InvalidPage_InvalidPageUnspecified
 *        Default value that should never be used. (Value:
 *        "INVALID_PAGE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *invalidPage;

/** Approximate time when the ad destination was last checked. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastCheckTime;

/**
 *  Platform of the non-working URL.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_Android
 *        The Android platform. (Value: "ANDROID")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_Ios
 *        The iOS platform. (Value: "IOS")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_PersonalComputer
 *        The personal computer platform. (Value: "PERSONAL_COMPUTER")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_Platform_PlatformUnspecified
 *        Default value that should never be used. (Value:
 *        "PLATFORM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *platform;

/**
 *  HTTP redirect chain error.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_EmptyRedirect
 *        Got a redirect but it was empty. (Value: "EMPTY_REDIRECT")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_InvalidRedirect
 *        Got a redirect but it was invalid. (Value: "INVALID_REDIRECT")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_RedirectErrorUnknown
 *        Unknown redirect error. (Value: "REDIRECT_ERROR_UNKNOWN")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_RedirectionErrorUnspecified
 *        Default value that should never be used. (Value:
 *        "REDIRECTION_ERROR_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_RedirectionError_TooManyRedirects
 *        Too many redirect hops. (Value: "TOO_MANY_REDIRECTS")
 */
@property(nonatomic, copy, nullable) NSString *redirectionError;

/**
 *  Rejected because of malformed URLs or invalid requests.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_BadRequest
 *        URL rejected because of a malformed request. (Value: "BAD_REQUEST")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_MalformedUrl
 *        URL rejected because of a malformed URL. (Value: "MALFORMED_URL")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_UrlRejectedUnknown
 *        URL rejected because of unknown reason. (Value:
 *        "URL_REJECTED_UNKNOWN")
 *    @arg @c kGTLRRealTimeBidding_DestinationNotWorkingEvidence_UrlRejected_UrlRejectedUnspecified
 *        Default value that should never be used. (Value:
 *        "URL_REJECTED_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *urlRejected;

@end


/**
 *  The full landing page URL of the destination.
 */
@interface GTLRRealTimeBidding_DestinationUrlEvidence : GTLRObject

/** The full landing page URL of the destination. */
@property(nonatomic, copy, nullable) NSString *destinationUrl;

@end


/**
 *  Number of HTTP calls made by a creative, broken down by domain.
 */
@interface GTLRRealTimeBidding_DomainCallEvidence : GTLRObject

/**
 *  Breakdown of the most frequent domains called through HTTP by the creative.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_DomainCalls *> *topHttpCallDomains;

/**
 *  The total number of HTTP calls made by the creative, including but not
 *  limited to the number of calls in the top_http_call_domains.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalHttpCallCount;

@end


/**
 *  The number of HTTP calls made to the given domain.
 */
@interface GTLRRealTimeBidding_DomainCalls : GTLRObject

/** The domain name. */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  Number of HTTP calls made to the domain.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpCallCount;

@end


/**
 *  Total download size and URL-level download size breakdown for resources in a
 *  creative.
 */
@interface GTLRRealTimeBidding_DownloadSizeEvidence : GTLRObject

/** Download size broken down by URLs with the top download size. */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_UrlDownloadSize *> *topUrlDownloadSizeBreakdowns;

/**
 *  Total download size (in kilobytes) for all the resources in the creative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalDownloadSizeKb;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRRealTimeBidding_Empty : GTLRObject
@end


/**
 *  Bidder endpoint that receives bid requests.
 */
@interface GTLRRealTimeBidding_Endpoint : GTLRObject

/**
 *  The protocol that the bidder endpoint is using.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_BidProtocolUnspecified
 *        Placeholder for undefined bid protocol. This value should not be used.
 *        (Value: "BID_PROTOCOL_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_GoogleRtb Google RTB
 *        protocol / Protobuf encoding. (Value: "GOOGLE_RTB")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb22 OpenRTB / JSON
 *        encoding, specification version 2.2. (Value: "OPENRTB_2_2")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb23 OpenRTB / JSON
 *        encoding, specification version 2.3. (Value: "OPENRTB_2_3")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb24 OpenRTB / JSON
 *        encoding, specification version 2.4. (Value: "OPENRTB_2_4")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_Openrtb25 OpenRTB / JSON
 *        encoding, specification version 2.5. (Value: "OPENRTB_2_5")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf23
 *        OpenRTB / Protobuf encoding, specification version 2.3. (Value:
 *        "OPENRTB_PROTOBUF_2_3")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf24
 *        OpenRTB / Protobuf encoding, specification version 2.4. (Value:
 *        "OPENRTB_PROTOBUF_2_4")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_BidProtocol_OpenrtbProtobuf25
 *        OpenRTB / Protobuf encoding, specification version 2.5. (Value:
 *        "OPENRTB_PROTOBUF_2_5")
 */
@property(nonatomic, copy, nullable) NSString *bidProtocol;

/**
 *  The maximum number of queries per second allowed to be sent to this server.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumQps;

/**
 *  Output only. Name of the endpoint resource that must follow the pattern
 *  `bidders/{bidderAccountId}/endpoints/{endpointId}`, where {bidderAccountId}
 *  is the account ID of the bidder who operates this endpoint, and {endpointId}
 *  is a unique ID assigned by the server.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The trading location that bid requests should be sent from. See
 *  https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations
 *  for further information.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_Endpoint_TradingLocation_Asia The Asia
 *        trading location. (Value: "ASIA")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_TradingLocation_Europe The European
 *        trading location. (Value: "EUROPE")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_TradingLocation_TradingLocationUnspecified
 *        A placeholder for an undefined trading region. This value should not
 *        be used. (Value: "TRADING_LOCATION_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_TradingLocation_UsEast The Eastern
 *        US trading location. (Value: "US_EAST")
 *    @arg @c kGTLRRealTimeBidding_Endpoint_TradingLocation_UsWest The Western
 *        US trading location. (Value: "US_WEST")
 */
@property(nonatomic, copy, nullable) NSString *tradingLocation;

/** Output only. The URL that bid requests should be sent to. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Response for a request to get remarketing tag.
 */
@interface GTLRRealTimeBidding_GetRemarketingTagResponse : GTLRObject

/**
 *  A HTML tag that can be placed on the advertiser's page to add users to a
 *  user list. For more information and code samples on using snippet on your
 *  website refer to [Tag your site for remarketing](
 *  https://support.google.com/google-ads/answer/2476688).
 */
@property(nonatomic, copy, nullable) NSString *snippet;

@end


/**
 *  HTML content for a creative.
 */
@interface GTLRRealTimeBidding_HtmlContent : GTLRObject

/**
 *  The height of the HTML snippet in pixels. Can be used to filter the response
 *  of the creatives.list method.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** The HTML snippet that displays the ad when inserted in the web page. */
@property(nonatomic, copy, nullable) NSString *snippet;

/**
 *  The width of the HTML snippet in pixels. Can be used to filter the response
 *  of the creatives.list method.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  HTTP calls made by a creative that resulted in policy violations.
 */
@interface GTLRRealTimeBidding_HttpCallEvidence : GTLRObject

/** URLs of HTTP calls made by the creative. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *urls;

@end


/**
 *  Evidence for HTTP cookie-related policy violations.
 */
@interface GTLRRealTimeBidding_HttpCookieEvidence : GTLRObject

/**
 *  Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy,
 *  this will be the cookie names of top domains with the largest number of
 *  cookies. For other policies, this will be all the cookie names that violate
 *  the policy.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *cookieNames;

/**
 *  The largest number of cookies set by a creative. If this field is set,
 *  cookie_names above will be set to the cookie names of top domains with the
 *  largest number of cookies. This field will only be set for TOO_MANY_COOKIES
 *  policy.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxCookieCount;

@end


/**
 *  An image resource. You may provide a larger image than was requested, so
 *  long as the aspect ratio is preserved.
 */
@interface GTLRRealTimeBidding_Image : GTLRObject

/**
 *  Image height in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** The URL of the image. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Image width in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  A response containing bidders.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "bidders" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRealTimeBidding_ListBiddersResponse : GTLRCollectionObject

/**
 *  List of bidders.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_Bidder *> *bidders;

/**
 *  A token which can be passed to a subsequent call to the `ListBidders` method
 *  to retrieve the next page of results in ListBiddersRequest.pageToken.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A response containing buyer account information.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "buyers" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRealTimeBidding_ListBuyersResponse : GTLRCollectionObject

/**
 *  List of buyers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_Buyer *> *buyers;

/**
 *  A token which can be passed to a subsequent call to the `ListBuyers` method
 *  to retrieve the next page of results in ListBuyersRequest.pageToken.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A response for listing creatives.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "creatives" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRealTimeBidding_ListCreativesResponse : GTLRCollectionObject

/**
 *  The list of creatives.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_Creative *> *creatives;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  ListCreativesRequest.pageToken field in the subsequent call to the
 *  `ListCreatives` method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A response containing bidder endpoints.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "endpoints" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRealTimeBidding_ListEndpointsResponse : GTLRCollectionObject

/**
 *  List of bidder endpoints.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_Endpoint *> *endpoints;

/**
 *  A token which can be passed to a subsequent call to the `ListEndpoints`
 *  method to retrieve the next page of results in
 *  ListEndpointsRequest.pageToken.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A response containing pretargeting configurations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "pretargetingConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRRealTimeBidding_ListPretargetingConfigsResponse : GTLRCollectionObject

/**
 *  A token which can be passed to a subsequent call to the
 *  `ListPretargetingConfigs` method to retrieve the next page of results in
 *  ListPretargetingConfigsRequest.pageToken.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of pretargeting configurations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PretargetingConfig *> *pretargetingConfigs;

@end


/**
 *  A response to a request for listing publisher connections.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "publisherConnections" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRRealTimeBidding_ListPublisherConnectionsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  ListPublisherConnectionsRequest.pageToken field in the subsequent call to
 *  the `ListPublisherConnections` method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of publisher connections.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PublisherConnection *> *publisherConnections;

@end


/**
 *  The list user list response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "userLists" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRealTimeBidding_ListUserListsResponse : GTLRCollectionObject

/**
 *  The continuation page token to send back to the server in a subsequent
 *  request. Due to a currently known issue, it is recommended that the caller
 *  keep invoking the list method till the time a next page token is not
 *  returned (even if the result set is empty).
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of user lists from the search.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_UserList *> *userLists;

@end


/**
 *  Information about each media file in the VAST.
 */
@interface GTLRRealTimeBidding_MediaFile : GTLRObject

/**
 *  Bitrate of the video file, in Kbps. Can be used to filter the response of
 *  the creatives.list method.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bitrate;

/**
 *  The MIME type of this media file. Can be used to filter the response of the
 *  creatives.list method.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationJavascript
 *        JavaScript (used for VPAID ads). (Value:
 *        "MIME_APPLICATION_JAVASCRIPT")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationMpegdash
 *        DASH. (Value: "MIME_APPLICATION_MPEGDASH")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationMpegurl
 *        HLS/M3U8. (Value: "MIME_APPLICATION_MPEGURL")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSilverlight
 *        Silverlight (used for VPAID ads). (Value:
 *        "MIME_APPLICATION_SILVERLIGHT")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSurvey
 *        Properties of VAST served by consumer survey. (Value:
 *        "MIME_APPLICATION_SURVEY")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeApplicationSwf
 *        Shockwave Flash (used for VPAID ads). (Value: "MIME_APPLICATION_SWF")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioMp3 MPEG-3 audio
 *        format. (Value: "MIME_AUDIO_MP3")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioMp4a MPEG-4 audio
 *        format. (Value: "MIME_AUDIO_MP4A")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeAudioOgg Ogg audio
 *        format (Value: "MIME_AUDIO_OGG")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideo3gpp 3GPP
 *        container format used on 3G phones. (Value: "MIME_VIDEO_3GPP")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoMov Quicktime
 *        container format. (Value: "MIME_VIDEO_MOV")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoMp4 MPEG-4
 *        container typically with H.264 codec. (Value: "MIME_VIDEO_MP4")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoOgg Ogg container
 *        assuming Theora codec. (Value: "MIME_VIDEO_OGG")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoWebm WebM
 *        container assuming VP9 codec. (Value: "MIME_VIDEO_WEBM")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoXflv Flash
 *        container. (Value: "MIME_VIDEO_XFLV")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoXMsWmv Windows
 *        Media Video Codec. (Value: "MIME_VIDEO_X_MS_WMV")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_MimeVideoYtHosted Video
 *        files hosted on YouTube. (Value: "MIME_VIDEO_YT_HOSTED")
 *    @arg @c kGTLRRealTimeBidding_MediaFile_MimeType_VideoMimeTypeUnspecified
 *        Default value that should never be used. (Value:
 *        "VIDEO_MIME_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Native content for a creative.
 */
@interface GTLRRealTimeBidding_NativeContent : GTLRObject

/**
 *  The name of the advertiser or sponsor, to be displayed in the ad creative.
 */
@property(nonatomic, copy, nullable) NSString *advertiserName;

/** The app icon, for app download ads. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_Image *appIcon;

/** A long description of the ad. */
@property(nonatomic, copy, nullable) NSString *body;

/** A label for the button that the user is supposed to click. */
@property(nonatomic, copy, nullable) NSString *callToAction;

/** The URL that the browser/SDK will load when the user clicks the ad. */
@property(nonatomic, copy, nullable) NSString *clickLinkUrl;

/** The URL to use for click tracking. */
@property(nonatomic, copy, nullable) NSString *clickTrackingUrl;

/** A short title for the ad. */
@property(nonatomic, copy, nullable) NSString *headline;

/** A large image. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_Image *image;

/** A smaller image, for the advertiser's logo. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_Image *logo;

/** The price of the promoted app including currency info. */
@property(nonatomic, copy, nullable) NSString *priceDisplayText;

/**
 *  The app rating in the app store. Must be in the range [0-5].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *starRating;

/** The URL to fetch a native video ad. */
@property(nonatomic, copy, nullable) NSString *videoUrl;

/** The contents of a VAST document for a native video ad. */
@property(nonatomic, copy, nullable) NSString *videoVastXml;

@end


/**
 *  Generic targeting used for targeting dimensions that contain a list of
 *  included and excluded numeric IDs used in app, user list, geo, and vertical
 *  id targeting.
 */
@interface GTLRRealTimeBidding_NumericTargetingDimension : GTLRObject

/**
 *  The IDs excluded in a configuration.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *excludedIds;

/**
 *  The IDs included in a configuration.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *includedIds;

@end


/**
 *  A request to open a specified user list.
 */
@interface GTLRRealTimeBidding_OpenUserListRequest : GTLRObject
@end


/**
 *  Policy compliance of the creative for a transaction type or a region.
 */
@interface GTLRRealTimeBidding_PolicyCompliance : GTLRObject

/**
 *  Serving status for the given transaction type (for example, open auction,
 *  deals) or region (for example, China, Russia). Can be used to filter the
 *  response of the creatives.list method.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_PolicyCompliance_Status_Approved Creative is
 *        approved. (Value: "APPROVED")
 *    @arg @c kGTLRRealTimeBidding_PolicyCompliance_Status_CertificateRequired
 *        Certificates are required for the creative to be served in some
 *        regions. For more information about creative certification, refer to:
 *        https://support.google.com/authorizedbuyers/answer/7450776 (Value:
 *        "CERTIFICATE_REQUIRED")
 *    @arg @c kGTLRRealTimeBidding_PolicyCompliance_Status_Disapproved Creative
 *        cannot serve. (Value: "DISAPPROVED")
 *    @arg @c kGTLRRealTimeBidding_PolicyCompliance_Status_PendingReview
 *        Creative is pending review. (Value: "PENDING_REVIEW")
 *    @arg @c kGTLRRealTimeBidding_PolicyCompliance_Status_StatusUnspecified
 *        Default value that should never be used. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Topics related to the policy compliance for this transaction type (for
 *  example, open auction, deals) or region (for example, China, Russia). Topics
 *  may be present only if status is DISAPPROVED.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PolicyTopicEntry *> *topics;

@end


/**
 *  Each policy topic entry will represent a violation of a policy topic for a
 *  creative, with the policy topic information and optional evidence for the
 *  policy violation.
 */
@interface GTLRRealTimeBidding_PolicyTopicEntry : GTLRObject

/** Pieces of evidence associated with this policy topic entry. */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_PolicyTopicEvidence *> *evidences;

/** URL of the help center article describing this policy topic. */
@property(nonatomic, copy, nullable) NSString *helpCenterUrl;

/**
 *  Policy topic this entry refers to. For example, "ALCOHOL",
 *  "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible
 *  policy topics is not fixed for a particular API version and may change at
 *  any time. Can be used to filter the response of the creatives.list method
 */
@property(nonatomic, copy, nullable) NSString *policyTopic;

@end


/**
 *  Evidence associated with a policy topic entry.
 */
@interface GTLRRealTimeBidding_PolicyTopicEvidence : GTLRObject

/** The creative's destination URL was not crawlable by Google. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_DestinationNotCrawlableEvidence *destinationNotCrawlable;

/**
 *  The creative's destination URL did not function properly or was incorrectly
 *  set up.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_DestinationNotWorkingEvidence *destinationNotWorking;

/** URL of the actual landing page. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_DestinationUrlEvidence *destinationUrl;

/** Number of HTTP calls made by the creative, broken down by domain. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_DomainCallEvidence *domainCall;

/**
 *  Total download size and URL-level download size breakdown for resources in a
 *  creative.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_DownloadSizeEvidence *downloadSize;

/** HTTP calls made by the creative that resulted in policy violations. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_HttpCallEvidence *httpCall;

/** Evidence for HTTP cookie-related policy violations. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_HttpCookieEvidence *httpCookie;

@end


/**
 *  Pretargeting configuration: a set of targeting dimensions applied at the
 *  pretargeting stage of the RTB funnel. These control which inventory a bidder
 *  will receive bid requests for.
 */
@interface GTLRRealTimeBidding_PretargetingConfig : GTLRObject

/**
 *  Targeting modes included by this configuration. A bid request must allow all
 *  the specified targeting modes. An unset value allows all bid requests to be
 *  sent, regardless of which targeting modes they allow.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedUserTargetingModes;

/**
 *  Targeting on a subset of app inventory. If APP is listed in
 *  targeted_environments, the specified targeting is applied. A maximum of
 *  30,000 app IDs can be targeted. An unset value for targeting allows all
 *  app-based bid requests to be sent. Apps can either be targeting positively
 *  (bid requests will be sent only if the destination app is listed in the
 *  targeting dimension) or negatively (bid requests will be sent only if the
 *  destination app is not listed in the targeting dimension).
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_AppTargeting *appTargeting;

/**
 *  Output only. The identifier that corresponds to this pretargeting
 *  configuration that helps buyers track and attribute their spend across their
 *  own arbitrary divisions. If a bid request matches more than one
 *  configuration, the buyer chooses which billing_id to attribute each of their
 *  bids.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *billingId;

/**
 *  The diplay name associated with this configuration. This name must be unique
 *  among all the pretargeting configurations a bidder has.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The sensitive content category label IDs excluded in this configuration. Bid
 *  requests for inventory with any of the specified content label IDs will not
 *  be sent. Refer to this file
 *  https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for
 *  category IDs.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *excludedContentLabelIds;

/**
 *  The geos included or excluded in this configuration defined in
 *  https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_NumericTargetingDimension *geoTargeting;

/**
 *  Creative dimensions included by this configuration. Only bid requests
 *  eligible for at least one of the specified creative dimensions will be sent.
 *  An unset value allows all bid requests to be sent, regardless of creative
 *  dimension.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_CreativeDimensions *> *includedCreativeDimensions;

/**
 *  Environments that are being included. Bid requests will not be sent for a
 *  given environment if it is not included. Further restrictions can be applied
 *  to included environments to target only a subset of its inventory. An unset
 *  value includes all environments.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedEnvironments;

/**
 *  Creative formats included by this configuration. Only bid requests eligible
 *  for at least one of the specified creative formats will be sent. An unset
 *  value will allow all bid requests to be sent, regardless of format.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedFormats;

/**
 *  The languages included in this configuration, represented by their language
 *  code. See
 *  https://developers.google.com/adwords/api/docs/appendix/languagecodes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedLanguages;

/**
 *  The mobile operating systems included in this configuration as defined in
 *  https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *includedMobileOperatingSystemIds;

/**
 *  The platforms included by this configration. Bid requests for devices with
 *  the specified platform types will be sent. An unset value allows all bid
 *  requests to be sent, regardless of platform.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedPlatforms;

/**
 *  User identifier types included in this configuration. At least one of the
 *  user identifier types specified in this list must be available for the bid
 *  request to be sent.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedUserIdTypes;

/**
 *  The interstitial targeting specified for this configuration. The unset value
 *  will allow bid requests to be sent regardless of whether they are for
 *  interstitials or not.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_InterstitialTargetingUnspecified
 *        Unspecified interstitial targeting. Represents an
 *        interstitial-agnostic selection. (Value:
 *        "INTERSTITIAL_TARGETING_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_OnlyInterstitialRequests
 *        Only bid requests for interstitial inventory should be sent. (Value:
 *        "ONLY_INTERSTITIAL_REQUESTS")
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_InterstitialTargeting_OnlyNonInterstitialRequests
 *        Only bid requests for non-interstitial inventory should be sent.
 *        (Value: "ONLY_NON_INTERSTITIAL_REQUESTS")
 */
@property(nonatomic, copy, nullable) NSString *interstitialTargeting;

/**
 *  Output only. Existing included or excluded geos that are invalid. Previously
 *  targeted geos may become invalid due to privacy restrictions.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *invalidGeoIds;

/**
 *  The maximum QPS threshold for this configuration. The bidder should receive
 *  no more than this number of bid requests matching this configuration per
 *  second across all their bidding endpoints among all trading locations.
 *  Further information available at
 *  https://developers.google.com/authorized-buyers/rtb/peer-guide
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumQps;

/**
 *  The targeted minimum viewability decile, ranging in values [0, 10]. A value
 *  of 5 means that the configuration will only match adslots for which we
 *  predict at least 50% viewability. Values > 10 will be rounded down to 10. An
 *  unset value or a value of 0 indicates that bid requests will be sent
 *  regardless of viewability.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimumViewabilityDecile;

/**
 *  Output only. Name of the pretargeting configuration that must follow the
 *  pattern `bidders/{bidder_account_id}/pretargetingConfigs/{config_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Targeting on a subset of publisher inventory. Publishers can either be
 *  targeted positively (bid requests will be sent only if the publisher is
 *  listed in the targeting dimension) or negatively (bid requests will be sent
 *  only if the publisher is not listed in the targeting dimension). A maximum
 *  of 10,000 publisher IDs can be targeted. Publisher IDs are found in
 *  [ads.txt](https://iabtechlab.com/ads-txt/) /
 *  [app-ads.txt](https://iabtechlab.com/app-ads-txt/) and in bid requests in
 *  the `BidRequest.publisher_id` field on the [Google RTB
 *  protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
 *  or the `BidRequest.site.publisher.id` / `BidRequest.app.publisher.id` field
 *  on the [OpenRTB
 *  protocol](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto).
 *  Publisher IDs will be returned in the order that they were entered.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_StringTargetingDimension *publisherTargeting;

/**
 *  Output only. The state of this pretargeting configuration.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_State_Active This
 *        pretargeting configuration is actively being used to filter bid
 *        requests. (Value: "ACTIVE")
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_State_StateUnspecified
 *        Placeholder for undefined state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_PretargetingConfig_State_Suspended This
 *        pretargeting configuration is suspended and not used in serving.
 *        (Value: "SUSPENDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The remarketing lists included or excluded in this configuration as defined
 *  in UserList.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_NumericTargetingDimension *userListTargeting;

/**
 *  The verticals included or excluded in this configuration as defined in
 *  https://developers.google.com/authorized-buyers/rtb/downloads/publisher-verticals
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_NumericTargetingDimension *verticalTargeting;

/**
 *  Targeting on a subset of site inventory. If WEB is listed in
 *  included_environments, the specified targeting is applied. A maximum of
 *  50,000 site URLs can be targeted. An unset value for targeting allows all
 *  web-based bid requests to be sent. Sites can either be targeting positively
 *  (bid requests will be sent only if the destination site is listed in the
 *  targeting dimension) or negatively (bid requests will be sent only if the
 *  destination site is not listed in the pretargeting configuration).
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_StringTargetingDimension *webTargeting;

@end


/**
 *  An Open Bidding exchange's connection to a publisher. This is initiated by
 *  the publisher for the bidder to review. If approved by the bidder, this
 *  means that the bidder agrees to receive bid requests from the publisher.
 */
@interface GTLRRealTimeBidding_PublisherConnection : GTLRObject

/**
 *  Whether the publisher has been approved by the bidder.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_BiddingState_Approved
 *        Indicates that the publisher was approved. (Value: "APPROVED")
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_BiddingState_Pending
 *        Indicates a request for connection from the publisher that the bidder
 *        needs to review. (Value: "PENDING")
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_BiddingState_Rejected
 *        Indicates that the publisher was rejected. (Value: "REJECTED")
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_BiddingState_StateUnspecified
 *        An unspecified bidding status. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *biddingState;

/**
 *  Output only. The time at which the publisher initiated a connection with the
 *  bidder (irrespective of if or when the bidder approves it). This is
 *  subsequently updated if the publisher revokes and re-initiates the
 *  connection.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Publisher display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Name of the publisher connection. This follows the pattern
 *  `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}`
 *  represents the account ID of the bidder, and `{publisher}` is the
 *  ads.txt/app-ads.txt publisher ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Whether the publisher is an Ad Manager or AdMob publisher.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_Admob
 *        An AdMob publisher. (Value: "ADMOB")
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_GoogleAdManager
 *        A Google Ad Manager publisher. (Value: "GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRRealTimeBidding_PublisherConnection_PublisherPlatform_PublisherPlatformUnspecified
 *        An unspecified publisher platform. (Value:
 *        "PUBLISHER_PLATFORM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *publisherPlatform;

@end


/**
 *  A request to stop targeting the provided apps in a specific pretargeting
 *  configuration. The pretargeting configuration itself specifies how these
 *  apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.
 */
@interface GTLRRealTimeBidding_RemoveTargetedAppsRequest : GTLRObject

/**
 *  A list of app IDs to stop targeting in the pretargeting configuration. These
 *  values will be removed from the list of targeted app IDs in
 *  PretargetingConfig.appTargeting.mobileAppTargeting.values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *appIds;

@end


/**
 *  A request to stop targeting publishers in a specific configuration. The
 *  pretargeting configuration itself specifies how these publishers are
 *  targeted in PretargetingConfig.publisherTargeting.
 */
@interface GTLRRealTimeBidding_RemoveTargetedPublishersRequest : GTLRObject

/**
 *  A list of publisher IDs to stop targeting in the pretargeting configuration.
 *  These values will be removed from the list of targeted publisher IDs in
 *  PretargetingConfig.publisherTargeting.values. Publishers are identified by
 *  their publisher ID from ads.txt / app-ads.txt. See
 *  https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for
 *  more details.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *publisherIds;

@end


/**
 *  A request to stop targeting sites in a specific pretargeting configuration.
 *  The pretargeting configuration itself specifies how these sites are targeted
 *  in PretargetingConfig.webTargeting.
 */
@interface GTLRRealTimeBidding_RemoveTargetedSitesRequest : GTLRObject

/**
 *  A list of site URLs to stop targeting in the pretargeting configuration.
 *  These values will be removed from the list of targeted URLs in
 *  PretargetingConfig.webTargeting.values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sites;

@end


/**
 *  Generic targeting with string values used in app, website and publisher
 *  targeting.
 */
@interface GTLRRealTimeBidding_StringTargetingDimension : GTLRObject

/**
 *  How the items in this list should be targeted.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_Exclusive
 *        The exclusive list type. Inventory must not match any item in this
 *        list to be targeted. (Value: "EXCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_Inclusive
 *        The inclusive list type. Inventory must match an item in this list to
 *        be targeted. (Value: "INCLUSIVE")
 *    @arg @c kGTLRRealTimeBidding_StringTargetingDimension_TargetingMode_TargetingModeUnspecified
 *        Placeholder for undefined targeting mode. (Value:
 *        "TARGETING_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *targetingMode;

/** The values specified. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  A request to suspend a pretargeting configuration. Sets the configuration's
 *  state to SUSPENDED.
 */
@interface GTLRRealTimeBidding_SuspendPretargetingConfigRequest : GTLRObject
@end


/**
 *  The URL-level breakdown for the download size.
 */
@interface GTLRRealTimeBidding_UrlDownloadSize : GTLRObject

/**
 *  Download size of the URL in kilobytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *downloadSizeKb;

/** The normalized URL with query parameters and fragment removed. */
@property(nonatomic, copy, nullable) NSString *normalizedUrl;

@end


/**
 *  Represents the URL restriction (for the URL captured by the pixel callback)
 *  for a user list.
 */
@interface GTLRRealTimeBidding_UrlRestriction : GTLRObject

/**
 *  End date (if specified) of the URL restriction. End date should be later
 *  than the start date for the date range to be valid.
 */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_Date *endDate;

/**
 *  The restriction type for the specified URL.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_Contains The
 *        tag URL (as recorded by the pixel callback) contains the specified
 *        URL. (Value: "CONTAINS")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotContain
 *        The tag URL (as recorded by the pixel callback) does not contain the
 *        specified URL. (Value: "DOES_NOT_CONTAIN")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotEndWith
 *        The tag URL (as recorded by the pixel callback) does not end with the
 *        specified URL. (Value: "DOES_NOT_END_WITH")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotEqual
 *        The tag URL (as recorded by the pixel callback) does not equal the
 *        specified URL. (Value: "DOES_NOT_EQUAL")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_DoesNotStartWith
 *        The tag URL (as recorded by the pixel callback) does not start with
 *        the specified URL. (Value: "DOES_NOT_START_WITH")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_EndsWith The
 *        tag URL (as recorded by the pixel callback) ends with the specified
 *        URL. (Value: "ENDS_WITH")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_Equals The tag
 *        URL (as recorded by the pixel callback) exactly matches the specified
 *        URL. (Value: "EQUALS")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_RestrictionTypeUnspecified
 *        Default value that should never be used. (Value:
 *        "RESTRICTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRRealTimeBidding_UrlRestriction_RestrictionType_StartsWith The
 *        tag URL (as recorded by the pixel callback) starts with the specified
 *        URL. (Value: "STARTS_WITH")
 */
@property(nonatomic, copy, nullable) NSString *restrictionType;

/** Start date (if specified) of the URL restriction. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_Date *startDate;

/** Required. The URL to use for applying the restriction on the user list. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Represents an Authorized Buyers user list. Authorized Buyers can
 *  create/update/list user lists. Once a user list is created in the system,
 *  Authorized Buyers can add users to the user list using the bulk uploader
 *  API. Alternatively, users can be added by hosting a tag on the advertiser's
 *  page.
 */
@interface GTLRRealTimeBidding_UserList : GTLRObject

/**
 *  The description for the user list.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Display name of the user list. This must be unique across all user
 *  lists for a given account.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The number of days a user's cookie stays on the user list. The
 *  field must be between 0 and 540 inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *membershipDurationDays;

/**
 *  Output only. Name of the user list that must follow the pattern
 *  `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the
 *  account ID of the buyer who owns the user list. For a bidder accessing user
 *  lists on behalf of a child seat buyer, `{buyer}` represents the account ID
 *  of the child seat buyer. `{user_list}` is an int64 identifier assigned by
 *  Google to uniquely identify a user list.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The status of the user list. A new user list starts out as
 *  open.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_UserList_Status_Closed New users cannot be
 *        added to the user list. (Value: "CLOSED")
 *    @arg @c kGTLRRealTimeBidding_UserList_Status_Open New users can be added
 *        to the user list. (Value: "OPEN")
 *    @arg @c kGTLRRealTimeBidding_UserList_Status_StatusUnspecified Default
 *        value that should never be used. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/** Required. The URL restriction for the user list. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_UrlRestriction *urlRestriction;

@end


/**
 *  Video content for a creative.
 */
@interface GTLRRealTimeBidding_VideoContent : GTLRObject

/** Output only. Video metadata. */
@property(nonatomic, strong, nullable) GTLRRealTimeBidding_VideoMetadata *videoMetadata;

/** The URL to fetch a video ad. */
@property(nonatomic, copy, nullable) NSString *videoUrl;

/**
 *  The contents of a VAST document for a video ad. This document should conform
 *  to the VAST 2.0 or 3.0 standard.
 */
@property(nonatomic, copy, nullable) NSString *videoVastXml;

@end


/**
 *  Video metadata for a creative.
 */
@interface GTLRRealTimeBidding_VideoMetadata : GTLRObject

/**
 *  The duration of the ad. Can be used to filter the response of the
 *  creatives.list method.
 */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  Is this a valid VAST ad? Can be used to filter the response of the
 *  creatives.list method.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isValidVast;

/**
 *  Is this a VPAID ad? Can be used to filter the response of the creatives.list
 *  method.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isVpaid;

/**
 *  The list of all media files declared in the VAST. If there are multiple
 *  VASTs in a wrapper chain, this includes the media files from the deepest one
 *  in the chain.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRealTimeBidding_MediaFile *> *mediaFiles;

/**
 *  The minimum duration that the user has to watch before being able to skip
 *  this ad. If the field is not set, the ad is not skippable. If the field is
 *  set, the ad is skippable. Can be used to filter the response of the
 *  creatives.list method.
 */
@property(nonatomic, strong, nullable) GTLRDuration *skipOffset;

/**
 *  The maximum VAST version across all wrapped VAST documents. Can be used to
 *  filter the response of the creatives.list method.
 *
 *  Likely values:
 *    @arg @c kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion10 VAST
 *        1.0 (Value: "VAST_VERSION_1_0")
 *    @arg @c kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion20 VAST
 *        2.0 (Value: "VAST_VERSION_2_0")
 *    @arg @c kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion30 VAST
 *        3.0 (Value: "VAST_VERSION_3_0")
 *    @arg @c kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersion40 VAST
 *        4.0 (Value: "VAST_VERSION_4_0")
 *    @arg @c kGTLRRealTimeBidding_VideoMetadata_VastVersion_VastVersionUnspecified
 *        Default value that should never be used. (Value:
 *        "VAST_VERSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *vastVersion;

@end


/**
 *  A request to receive push notifications when any of the creatives belonging
 *  to the bidder changes status.
 */
@interface GTLRRealTimeBidding_WatchCreativesRequest : GTLRObject
@end


/**
 *  A response for the request to receive push notification when a bidder's
 *  creatives change status.
 */
@interface GTLRRealTimeBidding_WatchCreativesResponse : GTLRObject

/**
 *  The Pub/Sub subscription that can be used to pull creative status
 *  notifications. This would be of the format
 *  `projects/{project_id}/subscriptions/{subscription_id}`. Subscription is
 *  created with pull delivery. All service accounts belonging to the bidder
 *  will have read access to this subscription. Subscriptions that are inactive
 *  for more than 90 days will be disabled. Use watchCreatives to re-enable the
 *  subscription.
 */
@property(nonatomic, copy, nullable) NSString *subscription;

/**
 *  The Pub/Sub topic that will be used to publish creative serving status
 *  notifications. This would be of the format
 *  `projects/{project_id}/topics/{topic_id}`.
 */
@property(nonatomic, copy, nullable) NSString *topic;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
