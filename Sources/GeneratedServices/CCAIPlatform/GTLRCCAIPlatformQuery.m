// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Contact Center AI Platform API (contactcenteraiplatform/v1alpha1)
// Documentation:
//   https://cloud.google.com/solutions/contact-center-ai-platform

#import <GoogleAPIClientForREST/GTLRCCAIPlatformQuery.h>

@implementation GTLRCCAIPlatformQuery

@dynamic fields;

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersCreate

@dynamic contactCenterId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRCCAIPlatform_ContactCenter *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/contactCenters";
  GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCCAIPlatform_Operation class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.contactCenters.create";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Operation class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.contactCenters.delete";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_ContactCenter class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.contactCenters.get";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}/contactCenters";
  GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCCAIPlatform_ListContactCentersResponse class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.contactCenters.list";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRCCAIPlatform_ContactCenter *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsContactCentersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Operation class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.contactCenters.patch";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Location class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.get";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}/locations";
  GTLRCCAIPlatformQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_ListLocationsResponse class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.list";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCCAIPlatform_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}:cancel";
  GTLRCCAIPlatformQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Empty class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Empty class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}";
  GTLRCCAIPlatformQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_Operation class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha1/{+name}/operations";
  GTLRCCAIPlatformQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCCAIPlatform_ListOperationsResponse class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRCCAIPlatformQuery_ProjectsLocationsQueryContactCenterQuota

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha1/{+parent}:queryContactCenterQuota";
  GTLRCCAIPlatformQuery_ProjectsLocationsQueryContactCenterQuota *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCCAIPlatform_ContactCenterQuota class];
  query.loggingName = @"contactcenteraiplatform.projects.locations.queryContactCenterQuota";
  return query;
}

@end
