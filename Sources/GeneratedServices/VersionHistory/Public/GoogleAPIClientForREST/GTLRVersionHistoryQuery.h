// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   versionhistory.googleapis.com API (versionhistory/v1)
// Description:
//   Version History API - Prod
// Documentation:
//   https://developers.chrome.com/versionhistory

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Version History query classes.
 */
@interface GTLRVersionHistoryQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Returns list of channels that are available for a given platform.
 *
 *  Method: versionhistory.platforms.channels.list
 */
@interface GTLRVersionHistoryQuery_PlatformsChannelsList : GTLRVersionHistoryQuery

/**
 *  Optional. Optional limit on the number of channels to include in the
 *  response. If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListChannels` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The platform, which owns this collection of channels. Format:
 *  {product}/platforms/{platform}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVersionHistory_ListChannelsResponse.
 *
 *  Returns list of channels that are available for a given platform.
 *
 *  @param parent Required. The platform, which owns this collection of
 *    channels. Format: {product}/platforms/{platform}
 *
 *  @return GTLRVersionHistoryQuery_PlatformsChannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns list of version for the given platform/channel.
 *
 *  Method: versionhistory.platforms.channels.versions.list
 */
@interface GTLRVersionHistoryQuery_PlatformsChannelsVersionsList : GTLRVersionHistoryQuery

/**
 *  Optional. Filter string. Format is a comma separated list of All comma
 *  separated filter clauses are conjoined with a logical "and". Valid
 *  field_names are "version", "name", "platform", and "channel". Valid
 *  operators are "<", "<=", "=", ">=", and ">". Channel comparison is done by
 *  distance from stable. Ex) stable < beta, beta < dev, canary < canary_asan.
 *  Version comparison is done numerically. If version is not entirely written,
 *  the version will be appended with 0 in missing fields. Ex) version > 80
 *  becoms version > 80.0.0.0 Name and platform are filtered by string
 *  comparison. Ex) "...?filter=channel<=beta, version >= 80 Ex)
 *  "...?filter=version > 80, version < 81
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Ordering string. Valid order_by strings are "version", "name",
 *  "platform", and "channel". Optionally, you can append " desc" or " asc" to
 *  specify the sorting order. Multiple order_by strings can be used in a comma
 *  separated list. Ordering by channel will sort by distance from the stable
 *  channel (not alphabetically). A list of channels sorted in this order is:
 *  stable, beta, dev, canary, and canary_asan. Sorting by name may cause
 *  unexpected behaviour as it is a naive string sort. For example, 1.0.0.8 will
 *  be before 1.0.0.10 in descending order. If order_by is not specified the
 *  response will be sorted by version in descending order. Ex)
 *  "...?order_by=version asc" Ex) "...?order_by=platform desc, channel,
 *  version"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Optional limit on the number of versions to include in the
 *  response. If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListVersions` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The channel, which owns this collection of versions. Format:
 *  {product}/platforms/{platform}/channels/{channel}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVersionHistory_ListVersionsResponse.
 *
 *  Returns list of version for the given platform/channel.
 *
 *  @param parent Required. The channel, which owns this collection of versions.
 *    Format: {product}/platforms/{platform}/channels/{channel}
 *
 *  @return GTLRVersionHistoryQuery_PlatformsChannelsVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns list of releases of the given version.
 *
 *  Method: versionhistory.platforms.channels.versions.releases.list
 */
@interface GTLRVersionHistoryQuery_PlatformsChannelsVersionsReleasesList : GTLRVersionHistoryQuery

/**
 *  Optional. Filter string. Format is a comma separated list of All comma
 *  separated filter clauses are conjoined with a logical "and". Valid
 *  field_names are "version", "name", "platform", "channel", "fraction"
 *  "starttime", and "endtime". Valid operators are "<", "<=", "=", ">=", and
 *  ">". Channel comparison is done by distance from stable. must be a valid
 *  channel when filtering by channel. Ex) stable < beta, beta < dev, canary <
 *  canary_asan. Version comparison is done numerically. Ex) 1.0.0.8 < 1.0.0.10.
 *  If version is not entirely written, the version will be appended with 0 for
 *  the missing fields. Ex) version > 80 becoms version > 80.0.0.0 When
 *  filtering by starttime or endtime, string must be in RFC 3339 date string
 *  format. Name and platform are filtered by string comparison. Ex)
 *  "...?filter=channel<=beta, version >= 80 Ex) "...?filter=version > 80,
 *  version < 81 Ex) "...?filter=starttime>2020-01-01T00:00:00Z
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Ordering string. Valid order_by strings are "version", "name",
 *  "starttime", "endtime", "platform", "channel", and "fraction". Optionally,
 *  you can append "desc" or "asc" to specify the sorting order. Multiple
 *  order_by strings can be used in a comma separated list. Ordering by channel
 *  will sort by distance from the stable channel (not alphabetically). A list
 *  of channels sorted in this order is: stable, beta, dev, canary, and
 *  canary_asan. Sorting by name may cause unexpected behaviour as it is a naive
 *  string sort. For example, 1.0.0.8 will be before 1.0.0.10 in descending
 *  order. If order_by is not specified the response will be sorted by starttime
 *  in descending order. Ex) "...?order_by=starttime asc" Ex)
 *  "...?order_by=platform desc, channel, startime desc"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Optional limit on the number of releases to include in the
 *  response. If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListReleases` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The version, which owns this collection of releases. Format:
 *  {product}/platforms/{platform}/channels/{channel}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVersionHistory_ListReleasesResponse.
 *
 *  Returns list of releases of the given version.
 *
 *  @param parent Required. The version, which owns this collection of releases.
 *    Format:
 *    {product}/platforms/{platform}/channels/{channel}/versions/{version}
 *
 *  @return GTLRVersionHistoryQuery_PlatformsChannelsVersionsReleasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns list of platforms that are available for a given product. The
 *  resource "product" has no resource name in its name.
 *
 *  Method: versionhistory.platforms.list
 */
@interface GTLRVersionHistoryQuery_PlatformsList : GTLRVersionHistoryQuery

/**
 *  Optional. Optional limit on the number of channels to include in the
 *  response. If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListChannels` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The product, which owns this collection of platforms. Format:
 *  {product}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVersionHistory_ListPlatformsResponse.
 *
 *  Returns list of platforms that are available for a given product. The
 *  resource "product" has no resource name in its name.
 *
 *  @param parent Required. The product, which owns this collection of
 *    platforms. Format: {product}
 *
 *  @return GTLRVersionHistoryQuery_PlatformsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
