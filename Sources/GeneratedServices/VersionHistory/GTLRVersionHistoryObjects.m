// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   versionhistory.googleapis.com API (versionhistory/v1)
// Description:
//   Version History API - Prod
// Documentation:
//   https://developers.chrome.com/versionhistory

#import <GoogleAPIClientForREST/GTLRVersionHistoryObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRVersionHistory_Channel.channelType
NSString * const kGTLRVersionHistory_Channel_ChannelType_All   = @"ALL";
NSString * const kGTLRVersionHistory_Channel_ChannelType_Beta  = @"BETA";
NSString * const kGTLRVersionHistory_Channel_ChannelType_Canary = @"CANARY";
NSString * const kGTLRVersionHistory_Channel_ChannelType_CanaryAsan = @"CANARY_ASAN";
NSString * const kGTLRVersionHistory_Channel_ChannelType_ChannelTypeUnspecified = @"CHANNEL_TYPE_UNSPECIFIED";
NSString * const kGTLRVersionHistory_Channel_ChannelType_Dev   = @"DEV";
NSString * const kGTLRVersionHistory_Channel_ChannelType_Extended = @"EXTENDED";
NSString * const kGTLRVersionHistory_Channel_ChannelType_Stable = @"STABLE";

// GTLRVersionHistory_Platform.platformType
NSString * const kGTLRVersionHistory_Platform_PlatformType_All = @"ALL";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Android = @"ANDROID";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Chromeos = @"CHROMEOS";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Fuchsia = @"FUCHSIA";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Ios = @"IOS";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Lacros = @"LACROS";
NSString * const kGTLRVersionHistory_Platform_PlatformType_LacrosArm32 = @"LACROS_ARM32";
NSString * const kGTLRVersionHistory_Platform_PlatformType_LacrosArm64 = @"LACROS_ARM64";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Linux = @"LINUX";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Mac = @"MAC";
NSString * const kGTLRVersionHistory_Platform_PlatformType_MacArm64 = @"MAC_ARM64";
NSString * const kGTLRVersionHistory_Platform_PlatformType_PlatformTypeUnspecified = @"PLATFORM_TYPE_UNSPECIFIED";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Webview = @"WEBVIEW";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Win = @"WIN";
NSString * const kGTLRVersionHistory_Platform_PlatformType_Win64 = @"WIN64";

// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_Channel
//

@implementation GTLRVersionHistory_Channel
@dynamic channelType, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_Interval
//

@implementation GTLRVersionHistory_Interval
@dynamic endTime, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_ListChannelsResponse
//

@implementation GTLRVersionHistory_ListChannelsResponse
@dynamic channels, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"channels" : [GTLRVersionHistory_Channel class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"channels";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_ListPlatformsResponse
//

@implementation GTLRVersionHistory_ListPlatformsResponse
@dynamic nextPageToken, platforms;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"platforms" : [GTLRVersionHistory_Platform class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"platforms";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_ListReleasesResponse
//

@implementation GTLRVersionHistory_ListReleasesResponse
@dynamic nextPageToken, releases;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"releases" : [GTLRVersionHistory_Release class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"releases";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_ListVersionsResponse
//

@implementation GTLRVersionHistory_ListVersionsResponse
@dynamic nextPageToken, versions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"versions" : [GTLRVersionHistory_Version class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"versions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_Platform
//

@implementation GTLRVersionHistory_Platform
@dynamic name, platformType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_Release
//

@implementation GTLRVersionHistory_Release
@dynamic fraction, fractionGroup, name, serving, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRVersionHistory_Version
//

@implementation GTLRVersionHistory_Version
@dynamic name, version;
@end
