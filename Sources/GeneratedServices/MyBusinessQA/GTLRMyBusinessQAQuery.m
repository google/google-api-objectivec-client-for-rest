// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   My Business Q&A API (mybusinessqanda/v1)
// Description:
//   The My Business Q&A API allows questions and answers to be posted for
//   specific listings.
// Documentation:
//   https://developers.google.com/my-business/

#import <GoogleAPIClientForREST/GTLRMyBusinessQAQuery.h>

@implementation GTLRMyBusinessQAQuery

@dynamic fields;

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsAnswersDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/answers:delete";
  GTLRMyBusinessQAQuery_LocationsQuestionsAnswersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMyBusinessQA_Empty class];
  query.loggingName = @"mybusinessqanda.locations.questions.answers.delete";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsAnswersList

@dynamic orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/answers";
  GTLRMyBusinessQAQuery_LocationsQuestionsAnswersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMyBusinessQA_ListAnswersResponse class];
  query.loggingName = @"mybusinessqanda.locations.questions.answers.list";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsAnswersUpsert

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRMyBusinessQA_UpsertAnswerRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/answers:upsert";
  GTLRMyBusinessQAQuery_LocationsQuestionsAnswersUpsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMyBusinessQA_Answer class];
  query.loggingName = @"mybusinessqanda.locations.questions.answers.upsert";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRMyBusinessQA_Question *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}";
  GTLRMyBusinessQAQuery_LocationsQuestionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMyBusinessQA_Question class];
  query.loggingName = @"mybusinessqanda.locations.questions.create";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMyBusinessQAQuery_LocationsQuestionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMyBusinessQA_Empty class];
  query.loggingName = @"mybusinessqanda.locations.questions.delete";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsList

@dynamic answersPerQuestion, filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}";
  GTLRMyBusinessQAQuery_LocationsQuestionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMyBusinessQA_ListQuestionsResponse class];
  query.loggingName = @"mybusinessqanda.locations.questions.list";
  return query;
}

@end

@implementation GTLRMyBusinessQAQuery_LocationsQuestionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRMyBusinessQA_Question *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMyBusinessQAQuery_LocationsQuestionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMyBusinessQA_Question class];
  query.loggingName = @"mybusinessqanda.locations.questions.patch";
  return query;
}

@end
