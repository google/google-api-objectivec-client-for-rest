// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   My Business Q&A API (mybusinessqanda/v1)
// Description:
//   The My Business Q&A API allows questions and answers to be posted for
//   specific listings.
// Documentation:
//   https://developers.google.com/my-business/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRMyBusinessQAObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other My Business Q&A query classes.
 */
@interface GTLRMyBusinessQAQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Deletes the answer written by the current user to a question.
 *
 *  Method: mybusinessqanda.locations.questions.answers.delete
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsAnswersDelete : GTLRMyBusinessQAQuery

/** Required. The name of the question to delete an answer for. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessQA_Empty.
 *
 *  Deletes the answer written by the current user to a question.
 *
 *  @param name Required. The name of the question to delete an answer for.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsAnswersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the paginated list of answers for a specified question.
 *
 *  Method: mybusinessqanda.locations.questions.answers.list
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsAnswersList : GTLRMyBusinessQAQuery

/**
 *  Optional. The order to return the answers. Valid options include
 *  'update_time desc' and 'upvote_count desc', which will return the answers
 *  sorted descendingly by the requested field. The default sort order is
 *  'update_time desc'.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. How many answers to fetch per page. The default and maximum
 *  `page_size` values are 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. If specified, the next page of answers is retrieved. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the question to fetch answers for. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessQA_ListAnswersResponse.
 *
 *  Returns the paginated list of answers for a specified question.
 *
 *  @param parent Required. The name of the question to fetch answers for.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsAnswersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an answer or updates the existing answer written by the user for the
 *  specified question. A user can only create one answer per question.
 *
 *  Method: mybusinessqanda.locations.questions.answers.upsert
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsAnswersUpsert : GTLRMyBusinessQAQuery

/** Required. The name of the question to write an answer for. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessQA_Answer.
 *
 *  Creates an answer or updates the existing answer written by the user for the
 *  specified question. A user can only create one answer per question.
 *
 *  @param object The @c GTLRMyBusinessQA_UpsertAnswerRequest to include in the
 *    query.
 *  @param parent Required. The name of the question to write an answer for.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsAnswersUpsert
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessQA_UpsertAnswerRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Adds a question for the specified location.
 *
 *  Method: mybusinessqanda.locations.questions.create
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsCreate : GTLRMyBusinessQAQuery

/** Required. The name of the location to write a question for. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessQA_Question.
 *
 *  Adds a question for the specified location.
 *
 *  @param object The @c GTLRMyBusinessQA_Question to include in the query.
 *  @param parent Required. The name of the location to write a question for.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsCreate
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessQA_Question *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a specific question written by the current user.
 *
 *  Method: mybusinessqanda.locations.questions.delete
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsDelete : GTLRMyBusinessQAQuery

/** Required. The name of the question to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessQA_Empty.
 *
 *  Deletes a specific question written by the current user.
 *
 *  @param name Required. The name of the question to delete.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the paginated list of questions and some of its answers for a
 *  specified location. This operation is only valid if the specified location
 *  is verified.
 *
 *  Method: mybusinessqanda.locations.questions.list
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsList : GTLRMyBusinessQAQuery

/**
 *  Optional. How many answers to fetch per question. The default and maximum
 *  `answers_per_question` values are 10.
 */
@property(nonatomic, assign) NSInteger answersPerQuestion;

/**
 *  Optional. A filter constraining the questions to return. The only filter
 *  currently supported is "ignore_answered=true"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The order to return the questions. Valid options include
 *  'update_time desc' and 'upvote_count desc', which will return the questions
 *  sorted descendingly by the requested field. The default sort order is
 *  'update_time desc'.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. How many questions to fetch per page. The default and maximum
 *  `page_size` values are 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. If specified, the next page of questions is retrieved. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the location to fetch questions for. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessQA_ListQuestionsResponse.
 *
 *  Returns the paginated list of questions and some of its answers for a
 *  specified location. This operation is only valid if the specified location
 *  is verified.
 *
 *  @param parent Required. The name of the location to fetch questions for.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a specific question written by the current user.
 *
 *  Method: mybusinessqanda.locations.questions.patch
 */
@interface GTLRMyBusinessQAQuery_LocationsQuestionsPatch : GTLRMyBusinessQAQuery

/**
 *  Immutable. The unique name for the question. locations/ * /questions/ * This
 *  field will be ignored if set during question creation.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The specific fields to update. Only question text can be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRMyBusinessQA_Question.
 *
 *  Updates a specific question written by the current user.
 *
 *  @param object The @c GTLRMyBusinessQA_Question to include in the query.
 *  @param name Immutable. The unique name for the question. locations/ *
 *    /questions/ * This field will be ignored if set during question creation.
 *
 *  @return GTLRMyBusinessQAQuery_LocationsQuestionsPatch
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessQA_Question *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
