// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AI Platform Training & Prediction API (ml/v1)
// Description:
//   An API to enable creating and using machine learning models.
// Documentation:
//   https://cloud.google.com/ml/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudMachineLearningEngine_GoogleApiHttpBody;
@class GTLRCloudMachineLearningEngine_GoogleApiHttpBody_Extensions_Item;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigDecayCurveAutomatedStoppingConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigMedianAutomatedStoppingConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutoScaling;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1BuiltInAlgorithmOutput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Config;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerPort;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1DiskConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1EncryptionConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1EnvVar;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ExplanationConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_Hyperparameters;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_WebAccessUris;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutputHyperparameterMetric;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1IntegratedGradientsAttribution;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_Labels;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Location;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ManualScaling;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1MeasurementMetric;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model_Labels;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_Labels;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionOutput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1RequestLoggingConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1RouteMap;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1SampledShapleyAttribution;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Scheduling;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Study;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput_WebAccessUris;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrialParameter;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Labels;
@class GTLRCloudMachineLearningEngine_GoogleCloudMlV1XraiAttribution;
@class GTLRCloudMachineLearningEngine_GoogleIamV1AuditConfig;
@class GTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig;
@class GTLRCloudMachineLearningEngine_GoogleIamV1Binding;
@class GTLRCloudMachineLearningEngine_GoogleIamV1Policy;
@class GTLRCloudMachineLearningEngine_GoogleLongrunningOperation;
@class GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Metadata;
@class GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Response;
@class GTLRCloudMachineLearningEngine_GoogleRpcStatus;
@class GTLRCloudMachineLearningEngine_GoogleRpcStatus_Details_Item;
@class GTLRCloudMachineLearningEngine_GoogleTypeExpr;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig.type

/**
 *  Unspecified accelerator type. Default to no GPU.
 *
 *  Value: "ACCELERATOR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_AcceleratorTypeUnspecified;
/**
 *  Nvidia A100 GPU.
 *
 *  Value: "NVIDIA_TESLA_A100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaA100;
/**
 *  Nvidia Tesla K80 GPU.
 *
 *  Value: "NVIDIA_TESLA_K80"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaK80;
/**
 *  Nvidia Tesla P100 GPU.
 *
 *  Value: "NVIDIA_TESLA_P100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaP100;
/**
 *  Nvidia Tesla P4 GPU.
 *
 *  Value: "NVIDIA_TESLA_P4"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaP4;
/**
 *  Nvidia T4 GPU.
 *
 *  Value: "NVIDIA_TESLA_T4"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaT4;
/**
 *  Nvidia V100 GPU.
 *
 *  Value: "NVIDIA_TESLA_V100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaV100;
/**
 *  TPU v2.
 *
 *  Value: "TPU_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV2;
/**
 *  TPU v2 POD.
 *
 *  Value: "TPU_V2_POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV2Pod;
/**
 *  TPU v3.
 *
 *  Value: "TPU_V3"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV3;
/**
 *  TPU v3 POD.
 *
 *  Value: "TPU_V3_POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV3Pod;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability.availableAccelerators

/**
 *  Unspecified accelerator type. Default to no GPU.
 *
 *  Value: "ACCELERATOR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_AcceleratorTypeUnspecified;
/**
 *  Nvidia A100 GPU.
 *
 *  Value: "NVIDIA_TESLA_A100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaA100;
/**
 *  Nvidia Tesla K80 GPU.
 *
 *  Value: "NVIDIA_TESLA_K80"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaK80;
/**
 *  Nvidia Tesla P100 GPU.
 *
 *  Value: "NVIDIA_TESLA_P100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaP100;
/**
 *  Nvidia Tesla P4 GPU.
 *
 *  Value: "NVIDIA_TESLA_P4"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaP4;
/**
 *  Nvidia T4 GPU.
 *
 *  Value: "NVIDIA_TESLA_T4"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaT4;
/**
 *  Nvidia V100 GPU.
 *
 *  Value: "NVIDIA_TESLA_V100"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_NvidiaTeslaV100;
/**
 *  TPU v2.
 *
 *  Value: "TPU_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_TpuV2;
/**
 *  TPU v2 POD.
 *
 *  Value: "TPU_V2_POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_TpuV2Pod;
/**
 *  TPU v3.
 *
 *  Value: "TPU_V3"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_TpuV3;
/**
 *  TPU v3 POD.
 *
 *  Value: "TPU_V3_POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_AvailableAccelerators_TpuV3Pod;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability.type

/** Value: "BATCH_PREDICTION" */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_BatchPrediction;
/** Value: "ONLINE_PREDICTION" */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_OnlinePrediction;
/** Value: "TRAINING" */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_Training;
/** Value: "TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput.state

/**
 *  The job has been cancelled. `error_message` should describe the reason for
 *  the cancellation.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Cancelled;
/**
 *  The job is being cancelled. `error_message` should describe the reason for
 *  the cancellation.
 *
 *  Value: "CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Cancelling;
/**
 *  The job failed. `error_message` should contain the details of the failure.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Failed;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "PREPARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Preparing;
/**
 *  The job has been just created and processing has not yet begun.
 *
 *  Value: "QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Queued;
/**
 *  The job is in progress.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Running;
/**
 *  The job state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_StateUnspecified;
/**
 *  The job completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec.algorithm

/**
 *  The default algorithm used by the hyperparameter tuning service. This is a
 *  Bayesian optimization algorithm.
 *
 *  Value: "ALGORITHM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_AlgorithmUnspecified;
/**
 *  Simple grid search within the feasible space. To use grid search, all
 *  parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.
 *
 *  Value: "GRID_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_GridSearch;
/**
 *  Simple random search within the feasible space.
 *
 *  Value: "RANDOM_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_RandomSearch;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec.goal

/**
 *  Goal Type will default to maximize.
 *
 *  Value: "GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_GoalTypeUnspecified;
/**
 *  Maximize the goal metric.
 *
 *  Value: "MAXIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_Maximize;
/**
 *  Minimize the goal metric.
 *
 *  Value: "MINIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_Minimize;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job.state

/**
 *  The job has been cancelled. `error_message` should describe the reason for
 *  the cancellation.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Cancelled;
/**
 *  The job is being cancelled. `error_message` should describe the reason for
 *  the cancellation.
 *
 *  Value: "CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Cancelling;
/**
 *  The job failed. `error_message` should contain the details of the failure.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Failed;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "PREPARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Preparing;
/**
 *  The job has been just created and processing has not yet begun.
 *
 *  Value: "QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Queued;
/**
 *  The job is in progress.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Running;
/**
 *  The job state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_StateUnspecified;
/**
 *  The job completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec.name

/**
 *  CPU usage.
 *
 *  Value: "CPU_USAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_CpuUsage;
/**
 *  GPU duty cycle.
 *
 *  Value: "GPU_DUTY_CYCLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_GpuDutyCycle;
/**
 *  Unspecified MetricName.
 *
 *  Value: "METRIC_NAME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_MetricNameUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata.operationType

/**
 *  An operation to create a new version.
 *
 *  Value: "CREATE_VERSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_CreateVersion;
/**
 *  An operation to delete an existing model.
 *
 *  Value: "DELETE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_DeleteModel;
/**
 *  An operation to delete an existing version.
 *
 *  Value: "DELETE_VERSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_DeleteVersion;
/**
 *  Unspecified operation type.
 *
 *  Value: "OPERATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_OperationTypeUnspecified;
/**
 *  An operation to update project configuration.
 *
 *  Value: "UPDATE_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateConfig;
/**
 *  An operation to update an existing model.
 *
 *  Value: "UPDATE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateModel;
/**
 *  An operation to update an existing version.
 *
 *  Value: "UPDATE_VERSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateVersion;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec.scaleType

/**
 *  By default, no scaling is applied.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_None;
/**
 *  Scales the feasible space to (0, 1) linearly.
 *
 *  Value: "UNIT_LINEAR_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitLinearScale;
/**
 *  Scales the feasible space logarithmically to (0, 1). The entire feasible
 *  space must be strictly positive.
 *
 *  Value: "UNIT_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitLogScale;
/**
 *  Scales the feasible space "reverse" logarithmically to (0, 1). The result is
 *  that values close to the top of the feasible space are spread out more than
 *  points near the bottom. The entire feasible space must be strictly positive.
 *
 *  Value: "UNIT_REVERSE_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitReverseLogScale;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec.type

/**
 *  The parameter is categorical, with a value chosen from the categories field.
 *
 *  Value: "CATEGORICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Categorical;
/**
 *  The parameter is real valued, with a fixed set of feasible points. If
 *  `type==DISCRETE`, feasible_points must be provided, and {`min_value`,
 *  `max_value`} will be ignored.
 *
 *  Value: "DISCRETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Discrete;
/**
 *  Type for real-valued parameters.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Double;
/**
 *  Type for integral parameters.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Integer;
/**
 *  You must specify a valid type. Using this unspecified type will result in an
 *  error.
 *
 *  Value: "PARAMETER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_ParameterTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput.dataFormat

/**
 *  Values are comma-separated rows, with keys in a separate file. Currently
 *  available only for output data.
 *
 *  Value: "CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Csv;
/**
 *  Unspecified format.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_DataFormatUnspecified;
/**
 *  Each line of the file is a JSON dictionary representing one record.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Json;
/**
 *  Deprecated. Use JSON instead.
 *
 *  Value: "TEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Text;
/**
 *  The source file is a TFRecord file. Currently available only for input data.
 *
 *  Value: "TF_RECORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_TfRecord;
/**
 *  The source file is a GZIP-compressed TFRecord file. Currently available only
 *  for input data.
 *
 *  Value: "TF_RECORD_GZIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_TfRecordGzip;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput.outputDataFormat

/**
 *  Values are comma-separated rows, with keys in a separate file. Currently
 *  available only for output data.
 *
 *  Value: "CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Csv;
/**
 *  Unspecified format.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_DataFormatUnspecified;
/**
 *  Each line of the file is a JSON dictionary representing one record.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Json;
/**
 *  Deprecated. Use JSON instead.
 *
 *  Value: "TEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Text;
/**
 *  The source file is a TFRecord file. Currently available only for input data.
 *
 *  Value: "TF_RECORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_TfRecord;
/**
 *  The source file is a GZIP-compressed TFRecord file. Currently available only
 *  for input data.
 *
 *  Value: "TF_RECORD_GZIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_TfRecordGzip;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Study.state

/**
 *  The study is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Active;
/**
 *  The study is done when the service exhausts the parameter search space or
 *  max_trial_count is reached.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Completed;
/**
 *  The study is stopped due to an internal error.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Inactive;
/**
 *  The study state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig.algorithm

/**
 *  The default algorithm used by the Cloud AI Platform Vizier service.
 *
 *  Value: "ALGORITHM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_AlgorithmUnspecified;
/**
 *  Gaussian Process Bandit.
 *
 *  Value: "GAUSSIAN_PROCESS_BANDIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_GaussianProcessBandit;
/**
 *  Simple grid search within the feasible space. To use grid search, all
 *  parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.
 *
 *  Value: "GRID_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_GridSearch;
/**
 *  Simple random search within the feasible space.
 *
 *  Value: "RANDOM_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_RandomSearch;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec.goal

/**
 *  Goal Type will default to maximize.
 *
 *  Value: "GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_GoalTypeUnspecified;
/**
 *  Maximize the goal metric.
 *
 *  Value: "MAXIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_Maximize;
/**
 *  Minimize the goal metric.
 *
 *  Value: "MINIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_Minimize;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec.scaleType

/**
 *  By default, no scaling is applied.
 *
 *  Value: "SCALE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_ScaleTypeUnspecified;
/**
 *  Scales the feasible space to (0, 1) linearly.
 *
 *  Value: "UNIT_LINEAR_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitLinearScale;
/**
 *  Scales the feasible space logarithmically to (0, 1). The entire feasible
 *  space must be strictly positive.
 *
 *  Value: "UNIT_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitLogScale;
/**
 *  Scales the feasible space "reverse" logarithmically to (0, 1). The result is
 *  that values close to the top of the feasible space are spread out more than
 *  points near the bottom. The entire feasible space must be strictly positive.
 *
 *  Value: "UNIT_REVERSE_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitReverseLogScale;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec.type

/**
 *  The parameter is categorical, with a value chosen from the categories field.
 *
 *  Value: "CATEGORICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Categorical;
/**
 *  The parameter is real valued, with a fixed set of feasible points. If
 *  `type==DISCRETE`, feasible_points must be provided, and {`min_value`,
 *  `max_value`} will be ignored.
 *
 *  Value: "DISCRETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Discrete;
/**
 *  Type for real-valued parameters.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Double;
/**
 *  Type for integral parameters.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Integer;
/**
 *  You must specify a valid type. Using this unspecified type will result in an
 *  error.
 *
 *  Value: "PARAMETER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_ParameterTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse.studyState

/**
 *  The study is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Active;
/**
 *  The study is done when the service exhausts the parameter search space or
 *  max_trial_count is reached.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Completed;
/**
 *  The study is stopped due to an internal error.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Inactive;
/**
 *  The study state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput.scaleTier

/**
 *  A single worker instance. This tier is suitable for learning how to use
 *  Cloud ML, and for experimenting with new models using small datasets.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Basic;
/**
 *  A single worker instance [with a
 *  GPU](/ai-platform/training/docs/using-gpus).
 *
 *  Value: "BASIC_GPU"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_BasicGpu;
/**
 *  A single worker instance with a [Cloud
 *  TPU](/ml-engine/docs/tensorflow/using-tpus).
 *
 *  Value: "BASIC_TPU"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_BasicTpu;
/**
 *  The CUSTOM tier is not a set tier, but rather enables you to use your own
 *  cluster specification. When you use this tier, set values to configure your
 *  processing cluster according to these guidelines: * You _must_ set
 *  `TrainingInput.masterType` to specify the type of machine to use for your
 *  master node. This is the only required setting. * You _may_ set
 *  `TrainingInput.workerCount` to specify the number of workers to use. If you
 *  specify one or more workers, you _must_ also set `TrainingInput.workerType`
 *  to specify the type of machine to use for your worker nodes. * You _may_ set
 *  `TrainingInput.parameterServerCount` to specify the number of parameter
 *  servers to use. If you specify one or more parameter servers, you _must_
 *  also set `TrainingInput.parameterServerType` to specify the type of machine
 *  to use for your parameter servers. Note that all of your workers must use
 *  the same machine type, which can be different from your parameter server
 *  type and master type. Your parameter servers must likewise use the same
 *  machine type, which can be different from your worker type and master type.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Custom;
/**
 *  A large number of workers with many parameter servers.
 *
 *  Value: "PREMIUM_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Premium1;
/**
 *  Many workers and a few parameter servers.
 *
 *  Value: "STANDARD_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Standard1;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial.state

/**
 *  Indicates that the trial has been suggested.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Active;
/**
 *  Indicates that the trial is done, and either has a final_measurement set, or
 *  is marked as trial_infeasible.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Completed;
/**
 *  Indicates that a specific trial has been requested, but it has not yet been
 *  suggested by the service.
 *
 *  Value: "REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Requested;
/**
 *  The trial state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_StateUnspecified;
/**
 *  Indicates that the trial should stop according to the service.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Stopping;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version.framework

/**
 *  Unspecified framework. Assigns a value based on the file suffix.
 *
 *  Value: "FRAMEWORK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_FrameworkUnspecified;
/**
 *  Scikit-learn framework.
 *
 *  Value: "SCIKIT_LEARN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_ScikitLearn;
/**
 *  Tensorflow framework.
 *
 *  Value: "TENSORFLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_Tensorflow;
/**
 *  XGBoost framework.
 *
 *  Value: "XGBOOST"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_Xgboost;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version.state

/**
 *  The version is being created. New UpdateVersion and DeleteVersion requests
 *  will fail if a version is in the CREATING state.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Creating;
/**
 *  The version is being deleted. New UpdateVersion and DeleteVersion requests
 *  will fail if a version is in the DELETING state.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Deleting;
/**
 *  The version failed to be created, possibly cancelled. `error_message` should
 *  contain the details of the failure.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Failed;
/**
 *  The version is ready for prediction.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Ready;
/**
 *  The version state is unspecified.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Unknown;
/**
 *  The version is being updated. New UpdateVersion and DeleteVersion requests
 *  will fail if a version is in the UPDATING state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Updating;

// ----------------------------------------------------------------------------
// GTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified;

/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRCloudMachineLearningEngine_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  Represents a hardware accelerator request config. Note that the
 *  AcceleratorConfig can be used in both Jobs and Versions. Learn more about
 *  [accelerators for training](/ml-engine/docs/using-gpus) and [accelerators
 *  for online
 *  prediction](/ml-engine/docs/machine-types-online-prediction#gpus).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig : GTLRObject

/**
 *  The number of accelerators to attach to each machine running the job.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  The type of accelerator to use.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_AcceleratorTypeUnspecified
 *        Unspecified accelerator type. Default to no GPU. (Value:
 *        "ACCELERATOR_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaA100
 *        Nvidia A100 GPU. (Value: "NVIDIA_TESLA_A100")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaK80
 *        Nvidia Tesla K80 GPU. (Value: "NVIDIA_TESLA_K80")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaP100
 *        Nvidia Tesla P100 GPU. (Value: "NVIDIA_TESLA_P100")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaP4
 *        Nvidia Tesla P4 GPU. (Value: "NVIDIA_TESLA_P4")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaT4
 *        Nvidia T4 GPU. (Value: "NVIDIA_TESLA_T4")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_NvidiaTeslaV100
 *        Nvidia V100 GPU. (Value: "NVIDIA_TESLA_V100")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV2
 *        TPU v2. (Value: "TPU_V2")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV2Pod
 *        TPU v2 POD. (Value: "TPU_V2_POD")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV3
 *        TPU v3. (Value: "TPU_V3")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig_Type_TpuV3Pod
 *        TPU v3 POD. (Value: "TPU_V3_POD")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The request message for the AddTrialMeasurement service method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AddTrialMeasurementRequest : GTLRObject

/** Required. The measurement to be added to a trial. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement *measurement;

@end


/**
 *  Configuration for Automated Early Stopping of Trials. If no
 *  implementation_config is set, automated early stopping will not be run.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfig : GTLRObject

@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigDecayCurveAutomatedStoppingConfig *decayCurveStoppingConfig;
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigMedianAutomatedStoppingConfig *medianAutomatedStoppingConfig;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigDecayCurveAutomatedStoppingConfig
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigDecayCurveAutomatedStoppingConfig : GTLRObject

/**
 *  If true, measurement.elapsed_time is used as the x-axis of each Trials Decay
 *  Curve. Otherwise, Measurement.steps will be used as the x-axis.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useElapsedTime;

@end


/**
 *  The median automated stopping rule stops a pending trial if the trial's best
 *  objective_value is strictly below the median 'performance' of all completed
 *  trials reported up to the trial's last measurement. Currently, 'performance'
 *  refers to the running average of the objective values reported by the trial
 *  in each measurement.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfigMedianAutomatedStoppingConfig : GTLRObject

/**
 *  If true, the median automated stopping rule applies to
 *  measurement.use_elapsed_time, which means the elapsed_time field of the
 *  current trial's latest measurement is used to compute the median objective
 *  value for each completed trial.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useElapsedTime;

@end


/**
 *  Options for automatically scaling a model.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutoScaling : GTLRObject

/**
 *  The maximum number of nodes to scale this model under load. The actual value
 *  will depend on resource quota and availability.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNodes;

/**
 *  MetricSpec contains the specifications to use to calculate the desired nodes
 *  count.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec *> *metrics;

/**
 *  Optional. The minimum number of nodes to allocate for this model. These
 *  nodes are always up, starting from the time the model is deployed.
 *  Therefore, the cost of operating this model will be at least `rate` *
 *  `min_nodes` * number of hours since last billing cycle, where `rate` is the
 *  cost per node-hour as documented in the [pricing
 *  guide](/ml-engine/docs/pricing), even if no predictions are performed. There
 *  is additional cost for each prediction performed. Unlike manual scaling, if
 *  the load gets too heavy for the nodes that are up, the service will
 *  automatically add nodes to handle the increased load as well as scale back
 *  as traffic drops, always maintaining at least `min_nodes`. You will be
 *  charged for the time in which additional nodes are used. If `min_nodes` is
 *  not specified and AutoScaling is used with a [legacy (MLS1) machine
 *  type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults
 *  to 0, in which case, when traffic to a model stops (and after a cool-down
 *  period), nodes will be shut down and no charges will be incurred until
 *  traffic to the model resumes. If `min_nodes` is not specified and
 *  AutoScaling is used with a [Compute Engine (N1) machine
 *  type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults
 *  to 1. `min_nodes` must be at least 1 for use with a Compute Engine machine
 *  type. You can set `min_nodes` when creating the model version, and you can
 *  also update `min_nodes` for an existing version: update_body.json: {
 *  'autoScaling': { 'minNodes': 5 } } HTTP request: PATCH
 *  https://ml.googleapis.com/v1/{name=projects/ * /models/ * /versions/
 *  *}?update_mask=autoScaling.minNodes -d \@./update_body.json
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodes;

@end


/**
 *  Represents output related to a built-in algorithm Job.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1BuiltInAlgorithmOutput : GTLRObject

/** Framework on which the built-in algorithm was trained. */
@property(nonatomic, copy, nullable) NSString *framework;

/**
 *  The Cloud Storage path to the `model/` directory where the training job
 *  saves the trained model. Only set for successful jobs that don't use
 *  hyperparameter tuning.
 */
@property(nonatomic, copy, nullable) NSString *modelPath;

/** Python version on which the built-in algorithm was trained. */
@property(nonatomic, copy, nullable) NSString *pythonVersion;

/**
 *  AI Platform runtime version on which the built-in algorithm was trained.
 */
@property(nonatomic, copy, nullable) NSString *runtimeVersion;

@end


/**
 *  Request message for the CancelJob method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1CancelJobRequest : GTLRObject
@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability : GTLRObject

/** Available accelerators for the capability. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableAccelerators;

/**
 *  type
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_BatchPrediction
 *        Value "BATCH_PREDICTION"
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_OnlinePrediction
 *        Value "ONLINE_PREDICTION"
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_Training
 *        Value "TRAINING"
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability_Type_TypeUnspecified
 *        Value "TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  This message will be placed in the metadata field of a
 *  google.longrunning.Operation associated with a CheckTrialEarlyStoppingState
 *  request.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1CheckTrialEarlyStoppingStateMetatdata : GTLRObject

/** The time at which the operation was submitted. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The name of the study that the trial belongs to. */
@property(nonatomic, copy, nullable) NSString *study;

/** The trial name. */
@property(nonatomic, copy, nullable) NSString *trial;

@end


/**
 *  The request message for the CheckTrialEarlyStoppingState service method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1CheckTrialEarlyStoppingStateRequest : GTLRObject
@end


/**
 *  The message will be placed in the response field of a completed
 *  google.longrunning.Operation associated with a CheckTrialEarlyStoppingState
 *  request.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1CheckTrialEarlyStoppingStateResponse : GTLRObject

/** The time at which operation processing completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  True if the Trial should stop.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shouldStop;

/** The time at which the operation was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  The request message for the CompleteTrial service method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1CompleteTrialRequest : GTLRObject

/**
 *  Optional. If provided, it will be used as the completed trial's
 *  final_measurement; Otherwise, the service will auto-select a previously
 *  reported measurement as the final-measurement
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement *finalMeasurement;

/**
 *  Optional. A human readable reason why the trial was infeasible. This should
 *  only be provided if `trial_infeasible` is true.
 */
@property(nonatomic, copy, nullable) NSString *infeasibleReason;

/**
 *  Optional. True if the trial cannot be run with the given Parameter, and
 *  final_measurement will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trialInfeasible;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1Config
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Config : GTLRObject

/** The service account Cloud ML uses to run on TPU node. */
@property(nonatomic, copy, nullable) NSString *tpuServiceAccount;

@end


/**
 *  Represents a network port in a single container. This message is a subset of
 *  the [Kubernetes ContainerPort v1 core
 *  specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#containerport-v1-core).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerPort : GTLRObject

/**
 *  Number of the port to expose on the container. This must be a valid port
 *  number: 0 < PORT_NUMBER < 65536.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containerPort;

@end


/**
 *  Specification of a custom container for serving predictions. This message is
 *  a subset of the [Kubernetes Container v1 core
 *  specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerSpec : GTLRObject

/**
 *  Immutable. Specifies arguments for the command that runs when the container
 *  starts. This overrides the container's
 *  [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this
 *  field as an array of executable and arguments, similar to a Docker `CMD`'s
 *  "default parameters" form. If you don't specify this field but do specify
 *  the command field, then the command from the `command` field runs without
 *  any additional arguments. See the [Kubernetes documentation about how the
 *  `command` and `args` fields interact with a container's `ENTRYPOINT` and
 *  `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
 *  If you don't specify this field and don't specify the `commmand` field, then
 *  the container's
 *  [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and
 *  `CMD` determine what runs based on their default behavior. See the [Docker
 *  documentation about how `CMD` and `ENTRYPOINT`
 *  interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
 *  In this field, you can reference [environment variables set by AI Platform
 *  Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables)
 *  and environment variables set in the env field. You cannot reference
 *  environment variables set in the Docker image. In order for environment
 *  variables to be expanded, reference them by using the following syntax: $(
 *  VARIABLE_NAME) Note that this differs from Bash variable expansion, which
 *  does not use parentheses. If a variable cannot be resolved, the reference in
 *  the input string is used unchanged. To avoid variable expansion, you can
 *  escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field
 *  corresponds to the `args` field of the [Kubernetes Containers v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  Immutable. Specifies the command that runs when the container starts. This
 *  overrides the container's
 *  [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#entrypoint).
 *  Specify this field as an array of executable and arguments, similar to a
 *  Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not
 *  specify this field, then the container's `ENTRYPOINT` runs, in conjunction
 *  with the args field or the container's
 *  [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either
 *  exists. If this field is not specified and the container does not have an
 *  `ENTRYPOINT`, then refer to the [Docker documentation about how `CMD` and
 *  `ENTRYPOINT`
 *  interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
 *  If you specify this field, then you can also specify the `args` field to
 *  provide additional arguments for this command. However, if you specify this
 *  field, then the container's `CMD` is ignored. See the [Kubernetes
 *  documentation about how the `command` and `args` fields interact with a
 *  container's `ENTRYPOINT` and
 *  `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
 *  In this field, you can reference [environment variables set by AI Platform
 *  Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables)
 *  and environment variables set in the env field. You cannot reference
 *  environment variables set in the Docker image. In order for environment
 *  variables to be expanded, reference them by using the following syntax: $(
 *  VARIABLE_NAME) Note that this differs from Bash variable expansion, which
 *  does not use parentheses. If a variable cannot be resolved, the reference in
 *  the input string is used unchanged. To avoid variable expansion, you can
 *  escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field
 *  corresponds to the `command` field of the [Kubernetes Containers v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

/**
 *  Immutable. List of environment variables to set in the container. After the
 *  container starts running, code running in the container can read these
 *  environment variables. Additionally, the command and args fields can
 *  reference these variables. Later entries in this list can also reference
 *  earlier entries. For example, the following example sets the variable
 *  `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value":
 *  "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch
 *  the order of the variables in the example, then the expansion does not
 *  occur. This field corresponds to the `env` field of the [Kubernetes
 *  Containers v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1EnvVar *> *env;

/**
 *  URI of the Docker image to be used as the custom container for serving
 *  predictions. This URI must identify [an image in Artifact
 *  Registry](/artifact-registry/docs/overview) and begin with the hostname
 *  `{REGION}-docker.pkg.dev`, where `{REGION}` is replaced by the region that
 *  matches AI Platform Prediction [regional
 *  endpoint](/ai-platform/prediction/docs/regional-endpoints) that you are
 *  using. For example, if you are using the `us-central1-ml.googleapis.com`
 *  endpoint, then this URI must begin with `us-central1-docker.pkg.dev`. To use
 *  a custom container, the [AI Platform Google-managed service
 *  account](/ai-platform/prediction/docs/custom-service-account#default) must
 *  have permission to pull (read) the Docker image at this URI. The AI Platform
 *  Google-managed service account has the following format:
 *  `service-{PROJECT_NUMBER}\@cloud-ml.google.com.iam.gserviceaccount.com`
 *  {PROJECT_NUMBER} is replaced by your Google Cloud project number. By
 *  default, this service account has necessary permissions to pull an Artifact
 *  Registry image in the same Google Cloud project where you are using AI
 *  Platform Prediction. In this case, no configuration is necessary. If you
 *  want to use an image from a different Google Cloud project, learn how to
 *  [grant the Artifact Registry Reader (roles/artifactregistry.reader) role for
 *  a repository](/artifact-registry/docs/access-control#grant-repo) to your
 *  projet's AI Platform Google-managed service account. To learn about the
 *  requirements for the Docker image itself, read [Custom container
 *  requirements](/ai-platform/prediction/docs/custom-container-requirements).
 */
@property(nonatomic, copy, nullable) NSString *image;

/**
 *  Immutable. List of ports to expose from the container. AI Platform
 *  Prediction sends any prediction requests that it receives to the first port
 *  on this list. AI Platform Prediction also sends [liveness and health
 *  checks](/ai-platform/prediction/docs/custom-container-requirements#health)
 *  to this port. If you do not specify this field, it defaults to following
 *  value: ```json [ { "containerPort": 8080 } ] ``` AI Platform Prediction does
 *  not use ports other than the first one listed. This field corresponds to the
 *  `ports` field of the [Kubernetes Containers v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerPort *> *ports;

@end


/**
 *  Represents the config of disk options.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1DiskConfig : GTLRObject

/**
 *  Size in GB of the boot disk (default is 100GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bootDiskSizeGb;

/**
 *  Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd"
 *  (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard
 *  Disk Drive).
 */
@property(nonatomic, copy, nullable) NSString *bootDiskType;

@end


/**
 *  Represents a custom encryption key configuration that can be applied to a
 *  resource.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1EncryptionConfig : GTLRObject

/**
 *  The Cloud KMS resource identifier of the customer-managed encryption key
 *  used to protect a resource, such as a training job. It has the following
 *  format:
 *  `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

@end


/**
 *  Represents an environment variable to be made available in a container. This
 *  message is a subset of the [Kubernetes EnvVar v1 core
 *  specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#envvar-v1-core).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1EnvVar : GTLRObject

/**
 *  Name of the environment variable. Must be a [valid C
 *  identifier](https://github.com/kubernetes/kubernetes/blob/v1.18.8/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L258)
 *  and must not begin with the prefix `AIP_`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Value of the environment variable. Defaults to an empty string. In this
 *  field, you can reference [environment variables set by AI Platform
 *  Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables)
 *  and environment variables set earlier in the same env field as where this
 *  message occurs. You cannot reference environment variables set in the Docker
 *  image. In order for environment variables to be expanded, reference them by
 *  using the following syntax: $(VARIABLE_NAME) Note that this differs from
 *  Bash variable expansion, which does not use parentheses. If a variable
 *  cannot be resolved, the reference in the input string is used unchanged. To
 *  avoid variable expansion, you can escape this syntax with `$$`; for example:
 *  $$(VARIABLE_NAME)
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Request for explanations to be issued against a trained model.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ExplainRequest : GTLRObject

/** Required. The explanation request body. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleApiHttpBody *httpBody;

@end


/**
 *  Message holding configuration options for explaining model predictions.
 *  There are three feature attribution methods supported for TensorFlow models:
 *  integrated gradients, sampled Shapley, and XRAI. [Learn more about feature
 *  attributions.](/ai-platform/prediction/docs/ai-explanations/overview)
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ExplanationConfig : GTLRObject

/**
 *  Attributes credit by computing the Aumann-Shapley value taking advantage of
 *  the model's fully differentiable structure. Refer to this paper for more
 *  details: https://arxiv.org/abs/1703.01365
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1IntegratedGradientsAttribution *integratedGradientsAttribution;

/**
 *  An attribution method that approximates Shapley values for features that
 *  contribute to the label being predicted. A sampling strategy is used to
 *  approximate the value rather than considering all subsets of features.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1SampledShapleyAttribution *sampledShapleyAttribution;

/**
 *  Attributes credit by computing the XRAI taking advantage of the model's
 *  fully differentiable structure. Refer to this paper for more details:
 *  https://arxiv.org/abs/1906.02825 Currently only implemented for models with
 *  natural image inputs.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1XraiAttribution *xraiAttribution;

@end


/**
 *  Returns service account information associated with a project.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1GetConfigResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Config *config;

/** The service account Cloud ML uses to access resources in the project. */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  The project number for `service_account`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *serviceAccountProject;

@end


/**
 *  Represents the result of a single hyperparameter tuning trial from a
 *  training job. The TrainingOutput object that is returned on successful
 *  completion of a training job with hyperparameter tuning includes a list of
 *  HyperparameterOutput objects, one for each successful trial.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput : GTLRObject

/**
 *  All recorded object metrics for this trial. This field is not currently
 *  populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutputHyperparameterMetric *> *allMetrics;

/**
 *  Details related to built-in algorithms jobs. Only set for trials of built-in
 *  algorithms jobs that have succeeded.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1BuiltInAlgorithmOutput *builtInAlgorithmOutput;

/** Output only. End time for the trial. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The final objective metric seen for this trial. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutputHyperparameterMetric *finalMetric;

/** The hyperparameters given to this trial. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_Hyperparameters *hyperparameters;

/**
 *  True if the trial is stopped early.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isTrialStoppedEarly;

/** Output only. Start time for the trial. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the trial.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Cancelled
 *        The job has been cancelled. `error_message` should describe the reason
 *        for the cancellation. (Value: "CANCELLED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Cancelling
 *        The job is being cancelled. `error_message` should describe the reason
 *        for the cancellation. (Value: "CANCELLING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Failed
 *        The job failed. `error_message` should contain the details of the
 *        failure. (Value: "FAILED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Preparing
 *        The service is preparing to run the job. (Value: "PREPARING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Queued
 *        The job has been just created and processing has not yet begun.
 *        (Value: "QUEUED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Running
 *        The job is in progress. (Value: "RUNNING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_StateUnspecified
 *        The job state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_State_Succeeded
 *        The job completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The trial id for these results. */
@property(nonatomic, copy, nullable) NSString *trialId;

/**
 *  URIs for accessing [interactive
 *  shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if this trial is part of a
 *  hyperparameter tuning job and the job's training_input.enable_web_access is
 *  `true`. The keys are names of each node in the training job; for example,
 *  `master-replica-0` for the master node, `worker-replica-0` for the first
 *  worker, and `ps-replica-0` for the first parameter server. The values are
 *  the URIs for each node's interactive shell.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_WebAccessUris *webAccessUris;

@end


/**
 *  The hyperparameters given to this trial.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_Hyperparameters : GTLRObject
@end


/**
 *  URIs for accessing [interactive
 *  shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if this trial is part of a
 *  hyperparameter tuning job and the job's training_input.enable_web_access is
 *  `true`. The keys are names of each node in the training job; for example,
 *  `master-replica-0` for the master node, `worker-replica-0` for the first
 *  worker, and `ps-replica-0` for the first parameter server. The values are
 *  the URIs for each node's interactive shell.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput_WebAccessUris : GTLRObject
@end


/**
 *  An observed value of a metric.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutputHyperparameterMetric : GTLRObject

/**
 *  The objective value at this training step.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *objectiveValue;

/**
 *  The global training step for this metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingStep;

@end


/**
 *  Represents a set of hyperparameters to optimize.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec : GTLRObject

/**
 *  Optional. The search algorithm specified for the hyperparameter tuning job.
 *  Uses the default AI Platform hyperparameter tuning algorithm if unspecified.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_AlgorithmUnspecified
 *        The default algorithm used by the hyperparameter tuning service. This
 *        is a Bayesian optimization algorithm. (Value: "ALGORITHM_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_GridSearch
 *        Simple grid search within the feasible space. To use grid search, all
 *        parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`. (Value:
 *        "GRID_SEARCH")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Algorithm_RandomSearch
 *        Simple random search within the feasible space. (Value:
 *        "RANDOM_SEARCH")
 */
@property(nonatomic, copy, nullable) NSString *algorithm;

/**
 *  Optional. Indicates if the hyperparameter tuning job enables auto trial
 *  early stopping.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableTrialEarlyStopping;

/**
 *  Required. The type of goal to use for tuning. Available types are `MAXIMIZE`
 *  and `MINIMIZE`. Defaults to `MAXIMIZE`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_GoalTypeUnspecified
 *        Goal Type will default to maximize. (Value: "GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_Maximize
 *        Maximize the goal metric. (Value: "MAXIMIZE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec_Goal_Minimize
 *        Minimize the goal metric. (Value: "MINIMIZE")
 */
@property(nonatomic, copy, nullable) NSString *goal;

/**
 *  Optional. The TensorFlow summary tag name to use for optimizing trials. For
 *  current versions of TensorFlow, this tag name should exactly match what is
 *  shown in TensorBoard, including all scopes. For versions of TensorFlow prior
 *  to 0.12, this should be only the tag passed to tf.Summary. By default,
 *  "training/hptuning/metric" will be used.
 */
@property(nonatomic, copy, nullable) NSString *hyperparameterMetricTag;

/**
 *  Optional. The number of failed trials that need to be seen before failing
 *  the hyperparameter tuning job. You can specify this field to override the
 *  default failing criteria for AI Platform hyperparameter tuning jobs.
 *  Defaults to zero, which means the service decides when a hyperparameter job
 *  should fail.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxFailedTrials;

/**
 *  Optional. The number of training trials to run concurrently. You can reduce
 *  the time it takes to perform hyperparameter tuning by adding trials in
 *  parallel. However, each trail only benefits from the information gained in
 *  completed trials. That means that a trial does not get access to the results
 *  of trials running at the same time, which could reduce the quality of the
 *  overall optimization. Each trial will use the same scale tier and machine
 *  types. Defaults to one.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxParallelTrials;

/**
 *  Optional. How many training trials should be attempted to optimize the
 *  specified hyperparameters. Defaults to one.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTrials;

/** Required. The set of parameters to tune. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec *> *params;

/**
 *  Optional. The prior hyperparameter tuning job id that users hope to continue
 *  with. The job id will be used to find the corresponding vizier study guid
 *  and resume the study.
 */
@property(nonatomic, copy, nullable) NSString *resumePreviousJobId;

@end


/**
 *  Attributes credit by computing the Aumann-Shapley value taking advantage of
 *  the model's fully differentiable structure. Refer to this paper for more
 *  details: https://arxiv.org/abs/1703.01365
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1IntegratedGradientsAttribution : GTLRObject

/**
 *  Number of steps for approximating the path integral. A good value to start
 *  is 50 and gradually increase until the sum to diff property is met within
 *  the desired error range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numIntegralSteps;

@end


/**
 *  Represents a training or prediction job.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job : GTLRObject

/** Output only. When the job was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. When the job processing was completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. The details of a failure or a cancellation. */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a job from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform job updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `GetJob`, and systems are expected to put that
 *  etag in the request to `UpdateJob` to ensure that their change will be
 *  applied to the same version of the job.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The user-specified id of the job. */
@property(nonatomic, copy, nullable) NSString *jobId;

/**
 *  Output only. It's only effect when the job is in QUEUED state. If it's
 *  positive, it indicates the job's position in the job scheduler. It's 0 when
 *  the job is already scheduled.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *jobPosition;

/**
 *  Optional. One or more labels that you can add, to organize your jobs. Each
 *  label is a key-value pair, where both the key and the value are arbitrary
 *  strings that you supply. For more information, see the documentation on
 *  using labels.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_Labels *labels;

/** Input parameters to create a prediction job. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput *predictionInput;

/** The current prediction job result. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionOutput *predictionOutput;

/** Output only. When the job processing was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of a job.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Cancelled
 *        The job has been cancelled. `error_message` should describe the reason
 *        for the cancellation. (Value: "CANCELLED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Cancelling
 *        The job is being cancelled. `error_message` should describe the reason
 *        for the cancellation. (Value: "CANCELLING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Failed
 *        The job failed. `error_message` should contain the details of the
 *        failure. (Value: "FAILED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Preparing
 *        The service is preparing to run the job. (Value: "PREPARING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Queued
 *        The job has been just created and processing has not yet begun.
 *        (Value: "QUEUED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Running
 *        The job is in progress. (Value: "RUNNING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_StateUnspecified
 *        The job state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_State_Succeeded
 *        The job completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Input parameters to create a training job. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput *trainingInput;

/** The current training job result. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput *trainingOutput;

@end


/**
 *  Optional. One or more labels that you can add, to organize your jobs. Each
 *  label is a key-value pair, where both the key and the value are arbitrary
 *  strings that you supply. For more information, see the documentation on
 *  using labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job_Labels : GTLRObject
@end


/**
 *  Response message for the ListJobs method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "jobs" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListJobsResponse : GTLRCollectionObject

/**
 *  The list of jobs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Job *> *jobs;

/**
 *  Optional. Pass this token as the `page_token` field of the request for a
 *  subsequent call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListLocationsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListLocationsResponse : GTLRCollectionObject

/**
 *  Locations where at least one type of CMLE capability is available.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Location *> *locations;

/**
 *  Optional. Pass this token as the `page_token` field of the request for a
 *  subsequent call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the ListModels method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "models" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListModelsResponse : GTLRCollectionObject

/**
 *  The list of models.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model *> *models;

/**
 *  Optional. Pass this token as the `page_token` field of the request for a
 *  subsequent call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The request message for the ListTrials service method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListOptimalTrialsRequest : GTLRObject
@end


/**
 *  The response message for the ListOptimalTrials method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListOptimalTrialsResponse : GTLRObject

/**
 *  The pareto-optimal trials for multiple objective study or the optimal trial
 *  for single objective study. The definition of pareto-optimal can be checked
 *  in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial *> *trials;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListStudiesResponse
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListStudiesResponse : GTLRObject

/** The studies associated with the project. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Study *> *studies;

@end


/**
 *  The response message for the ListTrials method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListTrialsResponse : GTLRObject

/** The trials associated with the study. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial *> *trials;

@end


/**
 *  Response message for the ListVersions method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "versions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ListVersionsResponse : GTLRCollectionObject

/**
 *  Optional. Pass this token as the `page_token` field of the request for a
 *  subsequent call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of versions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version *> *versions;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1Location
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Location : GTLRObject

/** Capabilities available in the location. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Capability *> *capabilities;

@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Options for manually scaling a model.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ManualScaling : GTLRObject

/**
 *  The number of nodes to allocate for this model. These nodes are always up,
 *  starting from the time the model is deployed, so the cost of operating this
 *  model will be proportional to `nodes` * number of hours since last billing
 *  cycle plus the cost for each prediction performed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodes;

@end


/**
 *  A message representing a measurement.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement : GTLRObject

/**
 *  Output only. Time that the trial has been running at the point of this
 *  measurement.
 */
@property(nonatomic, strong, nullable) GTLRDuration *elapsedTime;

/**
 *  Provides a list of metrics that act as inputs into the objective function.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1MeasurementMetric *> *metrics;

/**
 *  The number of steps a machine learning model has been trained for. Must be
 *  non-negative.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepCount;

@end


/**
 *  A message representing a metric in the measurement.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1MeasurementMetric : GTLRObject

/** Required. Metric name. */
@property(nonatomic, copy, nullable) NSString *metric;

/**
 *  Required. The value for this metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  MetricSpec contains the specifications to use to calculate the desired nodes
 *  count when autoscaling is enabled.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec : GTLRObject

/**
 *  metric name.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_CpuUsage
 *        CPU usage. (Value: "CPU_USAGE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_GpuDutyCycle
 *        GPU duty cycle. (Value: "GPU_DUTY_CYCLE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1MetricSpec_Name_MetricNameUnspecified
 *        Unspecified MetricName. (Value: "METRIC_NAME_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Target specifies the target value for the given metric; once real metric
 *  deviates from the threshold by a certain percentage, the node count changes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *target;

@end


/**
 *  Represents a machine learning solution. A model can have multiple versions,
 *  each of which is a deployed, trained model ready to receive prediction
 *  requests. The model itself is just a container.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model : GTLRObject

/**
 *  Output only. The default version of the model. This version will be used to
 *  handle prediction requests that do not specify a version. You can change the
 *  default version by calling projects.models.versions.setDefault.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version *defaultVersion;

/**
 *  Optional. The description specified for the model when it was created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a model from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform model updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `GetModel`, and systems are expected to put that
 *  etag in the request to `UpdateModel` to ensure that their change will be
 *  applied to the model as intended.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. One or more labels that you can add, to organize your models. Each
 *  label is a key-value pair, where both the key and the value are arbitrary
 *  strings that you supply. For more information, see the documentation on
 *  using labels. Note that this field is not updatable for mls1* models.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model_Labels *labels;

/**
 *  Required. The name specified for the model when it was created. The model
 *  name must be unique within the project it is created in.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. If true, online prediction nodes send `stderr` and `stdout`
 *  streams to Cloud Logging. These can be more verbose than the standard access
 *  logs (see `onlinePredictionLogging`) and can incur higher cost. However,
 *  they are helpful for debugging. Note that [logs may incur a
 *  cost](/stackdriver/pricing), especially if your project receives prediction
 *  requests at a high QPS. Estimate your costs before enabling this option.
 *  Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlinePredictionConsoleLogging;

/**
 *  Optional. If true, online prediction access logs are sent to Cloud Logging.
 *  These logs are like standard server access logs, containing information like
 *  timestamp and latency for each request. Note that [logs may incur a
 *  cost](/stackdriver/pricing), especially if your project receives prediction
 *  requests at a high queries per second rate (QPS). Estimate your costs before
 *  enabling this option. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlinePredictionLogging;

/**
 *  Optional. The list of regions where the model is going to be deployed. Only
 *  one region per model is supported. Defaults to 'us-central1' if nothing is
 *  set. See the available regions for AI Platform services. Note: * No matter
 *  where a model is deployed, it can always be accessed by users from anywhere,
 *  both for online and batch prediction. * The region for a batch prediction
 *  job is set by the region field when submitting the batch prediction job and
 *  does not take its value from this field.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *regions;

@end


/**
 *  Optional. One or more labels that you can add, to organize your models. Each
 *  label is a key-value pair, where both the key and the value are arbitrary
 *  strings that you supply. For more information, see the documentation on
 *  using labels. Note that this field is not updatable for mls1* models.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Model_Labels : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata : GTLRObject

/** The time the operation was submitted. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The time operation processing completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Indicates whether a request to cancel this operation has been made.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isCancellationRequested;

/**
 *  The user labels, inherited from the model or the model version being
 *  operated on.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_Labels *labels;

/** Contains the name of the model associated with the operation. */
@property(nonatomic, copy, nullable) NSString *modelName;

/**
 *  The operation type.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_CreateVersion
 *        An operation to create a new version. (Value: "CREATE_VERSION")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_DeleteModel
 *        An operation to delete an existing model. (Value: "DELETE_MODEL")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_DeleteVersion
 *        An operation to delete an existing version. (Value: "DELETE_VERSION")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_OperationTypeUnspecified
 *        Unspecified operation type. (Value: "OPERATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateConfig
 *        An operation to update project configuration. (Value: "UPDATE_CONFIG")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateModel
 *        An operation to update an existing model. (Value: "UPDATE_MODEL")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_OperationType_UpdateVersion
 *        An operation to update an existing version. (Value: "UPDATE_VERSION")
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  Contains the project number associated with the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *projectNumber;

/** The time operation processing started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** Contains the version associated with the operation. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version *version;

@end


/**
 *  The user labels, inherited from the model or the model version being
 *  operated on.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1OperationMetadata_Labels : GTLRObject
@end


/**
 *  Represents a single hyperparameter to optimize.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec : GTLRObject

/** Required if type is `CATEGORICAL`. The list of possible categories. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categoricalValues;

/**
 *  Required if type is `DISCRETE`. A list of feasible points. The list should
 *  be in strictly increasing order. For instance, this parameter might have
 *  possible settings of 1.5, 2.5, and 4.0. This list should not contain more
 *  than 1,000 values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *discreteValues;

/**
 *  Required if type is `DOUBLE` or `INTEGER`. This field should be unset if
 *  type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Required if type is `DOUBLE` or `INTEGER`. This field should be unset if
 *  type is `CATEGORICAL`. This value should be integers if type is INTEGER.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

/**
 *  Required. The parameter name must be unique amongst all ParameterConfigs in
 *  a HyperparameterSpec message. E.g., "learning_rate".
 */
@property(nonatomic, copy, nullable) NSString *parameterName;

/**
 *  Optional. How the parameter should be scaled to the hypercube. Leave unset
 *  for categorical parameters. Some kind of scaling is strongly recommended for
 *  real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_None
 *        By default, no scaling is applied. (Value: "NONE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitLinearScale
 *        Scales the feasible space to (0, 1) linearly. (Value:
 *        "UNIT_LINEAR_SCALE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitLogScale
 *        Scales the feasible space logarithmically to (0, 1). The entire
 *        feasible space must be strictly positive. (Value: "UNIT_LOG_SCALE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_ScaleType_UnitReverseLogScale
 *        Scales the feasible space "reverse" logarithmically to (0, 1). The
 *        result is that values close to the top of the feasible space are
 *        spread out more than points near the bottom. The entire feasible space
 *        must be strictly positive. (Value: "UNIT_REVERSE_LOG_SCALE")
 */
@property(nonatomic, copy, nullable) NSString *scaleType;

/**
 *  Required. The type of the parameter.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Categorical
 *        The parameter is categorical, with a value chosen from the categories
 *        field. (Value: "CATEGORICAL")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Discrete
 *        The parameter is real valued, with a fixed set of feasible points. If
 *        `type==DISCRETE`, feasible_points must be provided, and {`min_value`,
 *        `max_value`} will be ignored. (Value: "DISCRETE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Double
 *        Type for real-valued parameters. (Value: "DOUBLE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_Integer
 *        Type for integral parameters. (Value: "INTEGER")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1ParameterSpec_Type_ParameterTypeUnspecified
 *        You must specify a valid type. Using this unspecified type will result
 *        in an error. (Value: "PARAMETER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents input parameters for a prediction job.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput : GTLRObject

/**
 *  Optional. Number of records per batch, defaults to 64. The service will
 *  buffer batch_size number of records in memory before invoking one Tensorflow
 *  prediction call internally. So take the record size and memory available
 *  into consideration when setting this parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchSize;

/**
 *  Required. The format of the input data files.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Csv
 *        Values are comma-separated rows, with keys in a separate file.
 *        Currently available only for output data. (Value: "CSV")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_DataFormatUnspecified
 *        Unspecified format. (Value: "DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Json
 *        Each line of the file is a JSON dictionary representing one record.
 *        (Value: "JSON")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_Text
 *        Deprecated. Use JSON instead. (Value: "TEXT")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_TfRecord
 *        The source file is a TFRecord file. Currently available only for input
 *        data. (Value: "TF_RECORD")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_DataFormat_TfRecordGzip
 *        The source file is a GZIP-compressed TFRecord file. Currently
 *        available only for input data. (Value: "TF_RECORD_GZIP")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/**
 *  Required. The Cloud Storage location of the input data files. May contain
 *  wildcards.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputPaths;

/**
 *  Optional. The maximum number of workers to be used for parallel processing.
 *  Defaults to 10 if not specified.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxWorkerCount;

/**
 *  Use this field if you want to use the default version for the specified
 *  model. The string must use the following format:
 *  `"projects/YOUR_PROJECT/models/YOUR_MODEL"`
 */
@property(nonatomic, copy, nullable) NSString *modelName;

/**
 *  Optional. Format of the output data files, defaults to JSON.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Csv
 *        Values are comma-separated rows, with keys in a separate file.
 *        Currently available only for output data. (Value: "CSV")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_DataFormatUnspecified
 *        Unspecified format. (Value: "DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Json
 *        Each line of the file is a JSON dictionary representing one record.
 *        (Value: "JSON")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_Text
 *        Deprecated. Use JSON instead. (Value: "TEXT")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_TfRecord
 *        The source file is a TFRecord file. Currently available only for input
 *        data. (Value: "TF_RECORD")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionInput_OutputDataFormat_TfRecordGzip
 *        The source file is a GZIP-compressed TFRecord file. Currently
 *        available only for input data. (Value: "TF_RECORD_GZIP")
 */
@property(nonatomic, copy, nullable) NSString *outputDataFormat;

/** Required. The output Google Cloud Storage location. */
@property(nonatomic, copy, nullable) NSString *outputPath;

/**
 *  Required. The Google Compute Engine region to run the prediction job in. See
 *  the available regions for AI Platform services.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  Optional. The AI Platform runtime version to use for this batch prediction.
 *  If not set, AI Platform will pick the runtime version used during the
 *  CreateVersion request for this model version, or choose the latest stable
 *  version when model version information is not available such as when the
 *  model is specified by uri.
 */
@property(nonatomic, copy, nullable) NSString *runtimeVersion;

/**
 *  Optional. The name of the signature defined in the SavedModel to use for
 *  this job. Please refer to
 *  [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for
 *  information about how to use signatures. Defaults to
 *  [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants)
 *  , which is "serving_default".
 */
@property(nonatomic, copy, nullable) NSString *signatureName;

/**
 *  Use this field if you want to specify a Google Cloud Storage path for the
 *  model to use.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Use this field if you want to specify a version of the model to use. The
 *  string is formatted the same way as `model_version`, with the addition of
 *  the version information:
 *  `"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION"`
 */
@property(nonatomic, copy, nullable) NSString *versionName;

@end


/**
 *  Represents results of a prediction job.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictionOutput : GTLRObject

/**
 *  The number of data instances which resulted in errors.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errorCount;

/**
 *  Node hours used by the batch prediction job.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeHours;

/**
 *  The output Google Cloud Storage location provided at the job creation time.
 */
@property(nonatomic, copy, nullable) NSString *outputPath;

/**
 *  The number of generated predictions.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *predictionCount;

@end


/**
 *  Request for predictions to be issued against a trained model.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1PredictRequest : GTLRObject

/**
 *  Required. The prediction request body. Refer to the [request body details
 *  section](#request-body-details) for more information on how to structure
 *  your request.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleApiHttpBody *httpBody;

@end


/**
 *  Represents the configuration for a replica in a cluster.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig : GTLRObject

/**
 *  Represents the type and number of accelerators used by the replica. [Learn
 *  about restrictions on accelerator configurations for
 *  training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig *acceleratorConfig;

/**
 *  Arguments to the entrypoint command. The following rules apply for
 *  container_command and container_args: - If you do not supply command or
 *  args: The defaults defined in the Docker image are used. - If you supply a
 *  command but no args: The default EntryPoint and the default Cmd defined in
 *  the Docker image are ignored. Your command is run without any arguments. -
 *  If you supply only args: The default Entrypoint defined in the Docker image
 *  is run with the args that you supplied. - If you supply a command and args:
 *  The default Entrypoint and the default Cmd defined in the Docker image are
 *  ignored. Your command is run with your args. It cannot be set if custom
 *  container image is not provided. Note that this field and
 *  [TrainingInput.args] are mutually exclusive, i.e., both cannot be set at the
 *  same time.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *containerArgs;

/**
 *  The command with which the replica's custom container is run. If provided,
 *  it will override default ENTRYPOINT of the docker image. If not provided,
 *  the docker image's ENTRYPOINT is used. It cannot be set if custom container
 *  image is not provided. Note that this field and [TrainingInput.args] are
 *  mutually exclusive, i.e., both cannot be set at the same time.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *containerCommand;

/** Represents the configuration of disk options. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1DiskConfig *diskConfig;

/**
 *  The Docker image to run on the replica. This image must be in Container
 *  Registry. Learn more about [configuring custom
 *  containers](/ai-platform/training/docs/distributed-training-containers).
 */
@property(nonatomic, copy, nullable) NSString *imageUri;

/**
 *  The AI Platform runtime version that includes a TensorFlow version matching
 *  the one used in the custom container. This field is required if the replica
 *  is a TPU worker that uses a custom container. Otherwise, do not specify this
 *  field. This must be a [runtime version that currently supports training with
 *  TPUs](/ml-engine/docs/tensorflow/runtime-version-list#tpu-support). Note
 *  that the version of TensorFlow included in a runtime version may differ from
 *  the numbering of the runtime version itself, because it may have a different
 *  [patch
 *  version](https://www.tensorflow.org/guide/version_compat#semantic_versioning_20).
 *  In this field, you must specify the runtime version (TensorFlow minor
 *  version). For example, if your custom container runs TensorFlow `1.x.y`,
 *  specify `1.x`.
 */
@property(nonatomic, copy, nullable) NSString *tpuTfVersion;

@end


/**
 *  Configuration for logging request-response pairs to a BigQuery table. Online
 *  prediction requests to a model version and the responses to these requests
 *  are converted to raw strings and saved to the specified BigQuery table.
 *  Logging is constrained by [BigQuery quotas and limits](/bigquery/quotas). If
 *  your project exceeds BigQuery quotas or limits, AI Platform Prediction does
 *  not log request-response pairs, but it continues to serve predictions. If
 *  you are using [continuous
 *  evaluation](/ml-engine/docs/continuous-evaluation/), you do not need to
 *  specify this configuration manually. Setting up continuous evaluation
 *  automatically enables logging of request-response pairs.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1RequestLoggingConfig : GTLRObject

/**
 *  Required. Fully qualified BigQuery table name in the following format: "
 *  project_id.dataset_name.table_name" The specified table must already exist,
 *  and the "Cloud ML Service Agent" for your project must have permission to
 *  write to it. The table must have the following
 *  [schema](/bigquery/docs/schemas): Field nameType Mode model STRING REQUIRED
 *  model_version STRING REQUIRED time TIMESTAMP REQUIRED raw_data STRING
 *  REQUIRED raw_prediction STRING NULLABLE groundtruth STRING NULLABLE
 */
@property(nonatomic, copy, nullable) NSString *bigqueryTableName;

/**
 *  Percentage of requests to be logged, expressed as a fraction from 0 to 1.
 *  For example, if you want to log 10% of requests, enter `0.1`. The sampling
 *  window is the lifetime of the model version. Defaults to 0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *samplingPercentage;

@end


/**
 *  Specifies HTTP paths served by a custom container. AI Platform Prediction
 *  sends requests to these paths on the container; the custom container must
 *  run an HTTP server that responds to these requests with appropriate
 *  responses. Read [Custom container
 *  requirements](/ai-platform/prediction/docs/custom-container-requirements)
 *  for details on how to create your container image to meet these
 *  requirements.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1RouteMap : GTLRObject

/**
 *  HTTP path on the container to send health checkss to. AI Platform Prediction
 *  intermittently sends GET requests to this path on the container's IP address
 *  and port to check that the container is healthy. Read more about [health
 *  checks](/ai-platform/prediction/docs/custom-container-requirements#checks).
 *  For example, if you set this field to `/bar`, then AI Platform Prediction
 *  intermittently sends a GET request to the `/bar` path on the port of your
 *  container specified by the first value of Version.container.ports. If you
 *  don't specify this field, it defaults to the following value: /v1/models/
 *  MODEL/versions/VERSION The placeholders in this value are replaced as
 *  follows: * MODEL: The name of the parent Model. This does not include the
 *  "projects/PROJECT_ID/models/" prefix that the API returns in output; it is
 *  the bare model name, as provided to projects.models.create. * VERSION: The
 *  name of the model version. This does not include the "projects/PROJECT_ID
 *  /models/MODEL/versions/" prefix that the API returns in output; it is the
 *  bare version name, as provided to projects.models.versions.create.
 */
@property(nonatomic, copy, nullable) NSString *health;

/**
 *  HTTP path on the container to send prediction requests to. AI Platform
 *  Prediction forwards requests sent using projects.predict to this path on the
 *  container's IP address and port. AI Platform Prediction then returns the
 *  container's response in the API response. For example, if you set this field
 *  to `/foo`, then when AI Platform Prediction receives a prediction request,
 *  it forwards the request body in a POST request to the `/foo` path on the
 *  port of your container specified by the first value of
 *  Version.container.ports. If you don't specify this field, it defaults to the
 *  following value: /v1/models/MODEL/versions/VERSION:predict The placeholders
 *  in this value are replaced as follows: * MODEL: The name of the parent
 *  Model. This does not include the "projects/PROJECT_ID/models/" prefix that
 *  the API returns in output; it is the bare model name, as provided to
 *  projects.models.create. * VERSION: The name of the model version. This does
 *  not include the "projects/PROJECT_ID/models/MODEL/versions/" prefix that the
 *  API returns in output; it is the bare version name, as provided to
 *  projects.models.versions.create.
 */
@property(nonatomic, copy, nullable) NSString *predict;

@end


/**
 *  An attribution method that approximates Shapley values for features that
 *  contribute to the label being predicted. A sampling strategy is used to
 *  approximate the value rather than considering all subsets of features.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1SampledShapleyAttribution : GTLRObject

/**
 *  The number of feature permutations to consider when approximating the
 *  Shapley values.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPaths;

@end


/**
 *  All parameters related to scheduling of training jobs.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Scheduling : GTLRObject

/**
 *  Optional. The maximum job running time, expressed in seconds. The field can
 *  contain up to nine fractional digits, terminated by `s`. If not specified,
 *  this field defaults to `604800s` (seven days). If the training job is still
 *  running after this duration, AI Platform Training cancels it. The duration
 *  is measured from when the job enters the `RUNNING` state; therefore it does
 *  not overlap with the duration limited by Scheduling.max_wait_time. For
 *  example, if you want to ensure your job runs for no more than 2 hours, set
 *  this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute).
 *  If you submit your training job using the `gcloud` tool, you can [specify
 *  this field in a `config.yaml`
 *  file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters).
 *  For example: ```yaml trainingInput: scheduling: maxRunningTime: 7200s ```
 */
@property(nonatomic, strong, nullable) GTLRDuration *maxRunningTime;

/**
 *  Optional. The maximum job wait time, expressed in seconds. The field can
 *  contain up to nine fractional digits, terminated by `s`. If not specified,
 *  there is no limit to the wait time. The minimum for this field is `1800s`
 *  (30 minutes). If the training job has not entered the `RUNNING` state after
 *  this duration, AI Platform Training cancels it. After the job begins
 *  running, it can no longer be cancelled due to the maximum wait time.
 *  Therefore the duration limited by this field does not overlap with the
 *  duration limited by Scheduling.max_running_time. For example, if the job
 *  temporarily stops running and retries due to a [VM
 *  restart](/ai-platform/training/docs/overview#restarts), this cannot lead to
 *  a maximum wait time cancellation. However, independently of this constraint,
 *  AI Platform Training might stop a job if there are too many retries due to
 *  exhausted resources in a region. The following example describes how you
 *  might use this field: To cancel your job if it doesn't start running within
 *  1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds /
 *  minute). If the job is still in the `QUEUED` or `PREPARING` state after an
 *  hour of waiting, AI Platform Training cancels the job. If you submit your
 *  training job using the `gcloud` tool, you can [specify this field in a
 *  `config.yaml`
 *  file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters).
 *  For example: ```yaml trainingInput: scheduling: maxWaitTime: 3600s ```
 */
@property(nonatomic, strong, nullable) GTLRDuration *maxWaitTime;

/**
 *  Optional. Job scheduling will be based on this priority, which in the range
 *  [0, 1000]. The bigger the number, the higher the priority. Default to 0 if
 *  not set. If there are multiple jobs requesting same type of accelerators,
 *  the high priority job will be scheduled prior to ones with low priority.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

@end


/**
 *  Request message for the SetDefaultVersion request.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1SetDefaultVersionRequest : GTLRObject
@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1StopTrialRequest
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StopTrialRequest : GTLRObject
@end


/**
 *  A message representing a Study.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Study : GTLRObject

/** Output only. Time at which the study was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. A human readable reason why the Study is inactive. This should
 *  be empty if a study is ACTIVE or COMPLETED.
 */
@property(nonatomic, copy, nullable) NSString *inactiveReason;

/** Output only. The name of a study. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The detailed state of a study.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Active
 *        The study is active. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Completed
 *        The study is done when the service exhausts the parameter search space
 *        or max_trial_count is reached. (Value: "COMPLETED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_Inactive
 *        The study is stopped due to an internal error. (Value: "INACTIVE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Study_State_StateUnspecified
 *        The study state is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Required. Configuration of the study. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig *studyConfig;

@end


/**
 *  Represents configuration of a study.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig : GTLRObject

/**
 *  The search algorithm specified for the study.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_AlgorithmUnspecified
 *        The default algorithm used by the Cloud AI Platform Vizier service.
 *        (Value: "ALGORITHM_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_GaussianProcessBandit
 *        Gaussian Process Bandit. (Value: "GAUSSIAN_PROCESS_BANDIT")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_GridSearch
 *        Simple grid search within the feasible space. To use grid search, all
 *        parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`. (Value:
 *        "GRID_SEARCH")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfig_Algorithm_RandomSearch
 *        Simple random search within the feasible space. (Value:
 *        "RANDOM_SEARCH")
 */
@property(nonatomic, copy, nullable) NSString *algorithm;

/** Configuration for automated stopping of unpromising Trials. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutomatedStoppingConfig *automatedStoppingConfig;

/** Metric specs for the study. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec *> *metrics;

/** Required. The set of parameters to tune. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec *> *parameters;

@end


/**
 *  Represents a metric to optimize.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec : GTLRObject

/**
 *  Required. The optimization goal of the metric.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_GoalTypeUnspecified
 *        Goal Type will default to maximize. (Value: "GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_Maximize
 *        Maximize the goal metric. (Value: "MAXIMIZE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigMetricSpec_Goal_Minimize
 *        Minimize the goal metric. (Value: "MINIMIZE")
 */
@property(nonatomic, copy, nullable) NSString *goal;

/** Required. The name of the metric. */
@property(nonatomic, copy, nullable) NSString *metric;

@end


/**
 *  Represents a single parameter to optimize.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec : GTLRObject

/** The value spec for a 'CATEGORICAL' parameter. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec *categoricalValueSpec;

/**
 *  A child node is active if the parameter's value matches the child node's
 *  matching_parent_values. If two items in child_parameter_specs have the same
 *  name, they must have disjoint matching_parent_values.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec *> *childParameterSpecs;

/** The value spec for a 'DISCRETE' parameter. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec *discreteValueSpec;

/** The value spec for a 'DOUBLE' parameter. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec *doubleValueSpec;

/** The value spec for an 'INTEGER' parameter. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec *integerValueSpec;

/** Required. The parameter name must be unique amongst all ParameterSpecs. */
@property(nonatomic, copy, nullable) NSString *parameter;

@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec *parentCategoricalValues;
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec *parentDiscreteValues;
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec *parentIntValues;

/**
 *  How the parameter should be scaled. Leave unset for categorical parameters.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_ScaleTypeUnspecified
 *        By default, no scaling is applied. (Value: "SCALE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitLinearScale
 *        Scales the feasible space to (0, 1) linearly. (Value:
 *        "UNIT_LINEAR_SCALE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitLogScale
 *        Scales the feasible space logarithmically to (0, 1). The entire
 *        feasible space must be strictly positive. (Value: "UNIT_LOG_SCALE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_ScaleType_UnitReverseLogScale
 *        Scales the feasible space "reverse" logarithmically to (0, 1). The
 *        result is that values close to the top of the feasible space are
 *        spread out more than points near the bottom. The entire feasible space
 *        must be strictly positive. (Value: "UNIT_REVERSE_LOG_SCALE")
 */
@property(nonatomic, copy, nullable) NSString *scaleType;

/**
 *  Required. The type of the parameter.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Categorical
 *        The parameter is categorical, with a value chosen from the categories
 *        field. (Value: "CATEGORICAL")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Discrete
 *        The parameter is real valued, with a fixed set of feasible points. If
 *        `type==DISCRETE`, feasible_points must be provided, and {`min_value`,
 *        `max_value`} will be ignored. (Value: "DISCRETE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Double
 *        Type for real-valued parameters. (Value: "DOUBLE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_Integer
 *        Type for integral parameters. (Value: "INTEGER")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpec_Type_ParameterTypeUnspecified
 *        You must specify a valid type. Using this unspecified type will result
 *        in an error. (Value: "PARAMETER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec : GTLRObject

/**
 *  Must be specified if type is `CATEGORICAL`. The list of possible categories.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec : GTLRObject

/**
 *  Must be specified if type is `DISCRETE`. A list of feasible points. The list
 *  should be in strictly increasing order. For instance, this parameter might
 *  have possible settings of 1.5, 2.5, and 4.0. This list should not contain
 *  more than 1,000 values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec : GTLRObject

/**
 *  Must be specified if type is `DOUBLE`. Maximum value of the parameter.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Must be specified if type is `DOUBLE`. Minimum value of the parameter.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec : GTLRObject

/**
 *  Must be specified if type is `INTEGER`. Maximum value of the parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Must be specified if type is `INTEGER`. Minimum value of the parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  Represents the spec to match categorical values from parent parameter.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec : GTLRObject

/**
 *  Matches values of the parent parameter with type 'CATEGORICAL'. All values
 *  must exist in `categorical_value_spec` of parent parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Represents the spec to match discrete values from parent parameter.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec : GTLRObject

/**
 *  Matches values of the parent parameter with type 'DISCRETE'. All values must
 *  exist in `discrete_value_spec` of parent parameter.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Represents the spec to match integer values from parent parameter.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec : GTLRObject

/**
 *  Matches values of the parent parameter with type 'INTEGER'. All values must
 *  lie in `integer_value_spec` of parent parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Metadata field of a google.longrunning.Operation associated with a
 *  SuggestTrialsRequest.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsMetadata : GTLRObject

/** The identifier of the client that is requesting the suggestion. */
@property(nonatomic, copy, nullable) NSString *clientId;

/** The time operation was submitted. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The name of the study that the trial belongs to. */
@property(nonatomic, copy, nullable) NSString *study;

/**
 *  The number of suggestions requested.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suggestionCount;

@end


/**
 *  The request message for the SuggestTrial service method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsRequest : GTLRObject

/**
 *  Required. The identifier of the client that is requesting the suggestion. If
 *  multiple SuggestTrialsRequests have the same `client_id`, the service will
 *  return the identical suggested trial if the trial is pending, and provide a
 *  new trial if the last suggested trial was completed.
 */
@property(nonatomic, copy, nullable) NSString *clientId;

/**
 *  Required. The number of suggestions requested.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suggestionCount;

@end


/**
 *  This message will be placed in the response field of a completed
 *  google.longrunning.Operation associated with a SuggestTrials request.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse : GTLRObject

/** The time at which operation processing completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The time at which the operation was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The state of the study.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Active
 *        The study is active. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Completed
 *        The study is done when the service exhausts the parameter search space
 *        or max_trial_count is reached. (Value: "COMPLETED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_Inactive
 *        The study is stopped due to an internal error. (Value: "INACTIVE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1SuggestTrialsResponse_StudyState_StateUnspecified
 *        The study state is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *studyState;

/** A list of trials. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial *> *trials;

@end


/**
 *  Represents input parameters for a training job. When using the gcloud
 *  command to submit your training job, you can specify the input parameters as
 *  command-line arguments and/or in a YAML configuration file referenced from
 *  the --config command-line argument. For details, see the guide to
 *  [submitting a training job](/ai-platform/training/docs/training-jobs).
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput : GTLRObject

/**
 *  Optional. Command-line arguments passed to the training application when it
 *  starts. If your job uses a custom container, then the arguments are passed
 *  to the container's `ENTRYPOINT` command.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  Optional. Whether you want AI Platform Training to enable [interactive shell
 *  access](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell)
 *  to training containers. If set to `true`, you can access interactive shells
 *  at the URIs given by TrainingOutput.web_access_uris or
 *  HyperparameterOutput.web_access_uris (within TrainingOutput.trials).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableWebAccess;

/**
 *  Optional. Options for using customer-managed encryption keys (CMEK) to
 *  protect resources created by a training job, instead of using Google's
 *  default encryption. If this is set, then all resources created by the
 *  training job will be encrypted with the customer-managed encryption key that
 *  you specify. [Learn how and when to use CMEK with AI Platform
 *  Training](/ai-platform/training/docs/cmek).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1EncryptionConfig *encryptionConfig;

/**
 *  Optional. The configuration for evaluators. You should only set
 *  `evaluatorConfig.acceleratorConfig` if `evaluatorType` is set to a Compute
 *  Engine machine type. [Learn about restrictions on accelerator configurations
 *  for
 *  training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
 *  Set `evaluatorConfig.imageUri` only if you build a custom image for your
 *  evaluator. If `evaluatorConfig.imageUri` has not been set, AI Platform uses
 *  the value of `masterConfig.imageUri`. Learn more about [configuring custom
 *  containers](/ai-platform/training/docs/distributed-training-containers).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig *evaluatorConfig;

/**
 *  Optional. The number of evaluator replicas to use for the training job. Each
 *  replica in the cluster will be of the type specified in `evaluator_type`.
 *  This value can only be used when `scale_tier` is set to `CUSTOM`. If you set
 *  this value, you must also set `evaluator_type`. The default value is zero.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatorCount;

/**
 *  Optional. Specifies the type of virtual machine to use for your training
 *  job's evaluator nodes. The supported values are the same as those described
 *  in the entry for `masterType`. This value must be consistent with the
 *  category of machine type that `masterType` uses. In other words, both must
 *  be Compute Engine machine types or both must be legacy machine types. This
 *  value must be present when `scaleTier` is set to `CUSTOM` and
 *  `evaluatorCount` is greater than zero.
 */
@property(nonatomic, copy, nullable) NSString *evaluatorType;

/** Optional. The set of Hyperparameters to tune. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterSpec *hyperparameters;

/**
 *  Optional. A Google Cloud Storage path in which to store training outputs and
 *  other data needed for training. This path is passed to your TensorFlow
 *  program as the '--job-dir' command-line argument. The benefit of specifying
 *  this field is that Cloud ML validates the path for use in training.
 */
@property(nonatomic, copy, nullable) NSString *jobDir;

/**
 *  Optional. The configuration for your master worker. You should only set
 *  `masterConfig.acceleratorConfig` if `masterType` is set to a Compute Engine
 *  machine type. Learn about [restrictions on accelerator configurations for
 *  training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
 *  Set `masterConfig.imageUri` only if you build a custom image. Only one of
 *  `masterConfig.imageUri` and `runtimeVersion` should be set. Learn more about
 *  [configuring custom
 *  containers](/ai-platform/training/docs/distributed-training-containers).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig *masterConfig;

/**
 *  Optional. Specifies the type of virtual machine to use for your training
 *  job's master worker. You must specify this field when `scaleTier` is set to
 *  `CUSTOM`. You can use certain Compute Engine machine types directly in this
 *  field. See the [list of compatible Compute Engine machine
 *  types](/ai-platform/training/docs/machine-types#compute-engine-machine-types).
 *  Alternatively, you can use the certain legacy machine types in this field.
 *  See the [list of legacy machine
 *  types](/ai-platform/training/docs/machine-types#legacy-machine-types).
 *  Finally, if you want to use a TPU for training, specify `cloud_tpu` in this
 *  field. Learn more about the [special configuration options for training with
 *  TPUs](/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
 */
@property(nonatomic, copy, nullable) NSString *masterType;

/**
 *  Optional. The full name of the [Compute Engine network](/vpc/docs/vpc) to
 *  which the Job is peered. For example,
 *  `projects/12345/global/networks/myVPC`. The format of this field is
 *  `projects/{project}/global/networks/{network}`, where {project} is a project
 *  number (like `12345`) and {network} is network name. Private services access
 *  must already be configured for the network. If left unspecified, the Job is
 *  not peered with any network. [Learn about using VPC Network
 *  Peering.](/ai-platform/training/docs/vpc-peering).
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Required. The Google Cloud Storage location of the packages with the
 *  training program and any additional dependencies. The maximum number of
 *  package URIs is 100.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *packageUris;

/**
 *  Optional. The configuration for parameter servers. You should only set
 *  `parameterServerConfig.acceleratorConfig` if `parameterServerType` is set to
 *  a Compute Engine machine type. [Learn about restrictions on accelerator
 *  configurations for
 *  training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
 *  Set `parameterServerConfig.imageUri` only if you build a custom image for
 *  your parameter server. If `parameterServerConfig.imageUri` has not been set,
 *  AI Platform uses the value of `masterConfig.imageUri`. Learn more about
 *  [configuring custom
 *  containers](/ai-platform/training/docs/distributed-training-containers).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig *parameterServerConfig;

/**
 *  Optional. The number of parameter server replicas to use for the training
 *  job. Each replica in the cluster will be of the type specified in
 *  `parameter_server_type`. This value can only be used when `scale_tier` is
 *  set to `CUSTOM`. If you set this value, you must also set
 *  `parameter_server_type`. The default value is zero.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *parameterServerCount;

/**
 *  Optional. Specifies the type of virtual machine to use for your training
 *  job's parameter server. The supported values are the same as those described
 *  in the entry for `master_type`. This value must be consistent with the
 *  category of machine type that `masterType` uses. In other words, both must
 *  be Compute Engine machine types or both must be legacy machine types. This
 *  value must be present when `scaleTier` is set to `CUSTOM` and
 *  `parameter_server_count` is greater than zero.
 */
@property(nonatomic, copy, nullable) NSString *parameterServerType;

/** Required. The Python module name to run after installing the packages. */
@property(nonatomic, copy, nullable) NSString *pythonModule;

/**
 *  Optional. The version of Python used in training. You must either specify
 *  this field or specify `masterConfig.imageUri`. The following Python versions
 *  are available: * Python '3.7' is available when `runtime_version` is set to
 *  '1.15' or later. * Python '3.5' is available when `runtime_version` is set
 *  to a version from '1.4' to '1.14'. * Python '2.7' is available when
 *  `runtime_version` is set to '1.15' or earlier. Read more about the Python
 *  versions available for [each runtime
 *  version](/ml-engine/docs/runtime-version-list).
 */
@property(nonatomic, copy, nullable) NSString *pythonVersion;

/**
 *  Required. The region to run the training job in. See the [available
 *  regions](/ai-platform/training/docs/regions) for AI Platform Training.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  Optional. The AI Platform runtime version to use for training. You must
 *  either specify this field or specify `masterConfig.imageUri`. For more
 *  information, see the [runtime version
 *  list](/ai-platform/training/docs/runtime-version-list) and learn [how to
 *  manage runtime versions](/ai-platform/training/docs/versioning).
 */
@property(nonatomic, copy, nullable) NSString *runtimeVersion;

/**
 *  Required. Specifies the machine types, the number of replicas for workers
 *  and parameter servers.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Basic
 *        A single worker instance. This tier is suitable for learning how to
 *        use Cloud ML, and for experimenting with new models using small
 *        datasets. (Value: "BASIC")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_BasicGpu
 *        A single worker instance [with a
 *        GPU](/ai-platform/training/docs/using-gpus). (Value: "BASIC_GPU")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_BasicTpu
 *        A single worker instance with a [Cloud
 *        TPU](/ml-engine/docs/tensorflow/using-tpus). (Value: "BASIC_TPU")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Custom
 *        The CUSTOM tier is not a set tier, but rather enables you to use your
 *        own cluster specification. When you use this tier, set values to
 *        configure your processing cluster according to these guidelines: * You
 *        _must_ set `TrainingInput.masterType` to specify the type of machine
 *        to use for your master node. This is the only required setting. * You
 *        _may_ set `TrainingInput.workerCount` to specify the number of workers
 *        to use. If you specify one or more workers, you _must_ also set
 *        `TrainingInput.workerType` to specify the type of machine to use for
 *        your worker nodes. * You _may_ set
 *        `TrainingInput.parameterServerCount` to specify the number of
 *        parameter servers to use. If you specify one or more parameter
 *        servers, you _must_ also set `TrainingInput.parameterServerType` to
 *        specify the type of machine to use for your parameter servers. Note
 *        that all of your workers must use the same machine type, which can be
 *        different from your parameter server type and master type. Your
 *        parameter servers must likewise use the same machine type, which can
 *        be different from your worker type and master type. (Value: "CUSTOM")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Premium1
 *        A large number of workers with many parameter servers. (Value:
 *        "PREMIUM_1")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingInput_ScaleTier_Standard1
 *        Many workers and a few parameter servers. (Value: "STANDARD_1")
 */
@property(nonatomic, copy, nullable) NSString *scaleTier;

/** Optional. Scheduling options for a training job. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Scheduling *scheduling;

/**
 *  Optional. The email address of a service account to use when running the
 *  training appplication. You must have the `iam.serviceAccounts.actAs`
 *  permission for the specified service account. In addition, the AI Platform
 *  Training Google-managed service account must have the
 *  `roles/iam.serviceAccountAdmin` role for the specified service account.
 *  [Learn more about configuring a service
 *  account.](/ai-platform/training/docs/custom-service-account) If not
 *  specified, the AI Platform Training Google-managed service account is used
 *  by default.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Optional. Use `chief` instead of `master` in the `TF_CONFIG` environment
 *  variable when training with a custom container. Defaults to `false`. [Learn
 *  more about this
 *  field.](/ai-platform/training/docs/distributed-training-details#chief-versus-master)
 *  This field has no effect for training jobs that don't use a custom
 *  container.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useChiefInTfConfig;

/**
 *  Optional. The configuration for workers. You should only set
 *  `workerConfig.acceleratorConfig` if `workerType` is set to a Compute Engine
 *  machine type. [Learn about restrictions on accelerator configurations for
 *  training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
 *  Set `workerConfig.imageUri` only if you build a custom image for your
 *  worker. If `workerConfig.imageUri` has not been set, AI Platform uses the
 *  value of `masterConfig.imageUri`. Learn more about [configuring custom
 *  containers](/ai-platform/training/docs/distributed-training-containers).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ReplicaConfig *workerConfig;

/**
 *  Optional. The number of worker replicas to use for the training job. Each
 *  replica in the cluster will be of the type specified in `worker_type`. This
 *  value can only be used when `scale_tier` is set to `CUSTOM`. If you set this
 *  value, you must also set `worker_type`. The default value is zero.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *workerCount;

/**
 *  Optional. Specifies the type of virtual machine to use for your training
 *  job's worker nodes. The supported values are the same as those described in
 *  the entry for `masterType`. This value must be consistent with the category
 *  of machine type that `masterType` uses. In other words, both must be Compute
 *  Engine machine types or both must be legacy machine types. If you use
 *  `cloud_tpu` for this value, see special instructions for [configuring a
 *  custom TPU
 *  machine](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine).
 *  This value must be present when `scaleTier` is set to `CUSTOM` and
 *  `workerCount` is greater than zero.
 */
@property(nonatomic, copy, nullable) NSString *workerType;

@end


/**
 *  Represents results of a training job. Output only.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput : GTLRObject

/**
 *  Details related to built-in algorithms jobs. Only set for built-in
 *  algorithms jobs.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1BuiltInAlgorithmOutput *builtInAlgorithmOutput;

/**
 *  The number of hyperparameter tuning trials that completed successfully. Only
 *  set for hyperparameter tuning jobs.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *completedTrialCount;

/**
 *  The amount of ML units consumed by the job.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *consumedMLUnits;

/**
 *  The TensorFlow summary tag name used for optimizing hyperparameter tuning
 *  trials. See
 *  [`HyperparameterSpec.hyperparameterMetricTag`](#HyperparameterSpec.FIELDS.hyperparameter_metric_tag)
 *  for more information. Only set for hyperparameter tuning jobs.
 */
@property(nonatomic, copy, nullable) NSString *hyperparameterMetricTag;

/**
 *  Whether this job is a built-in Algorithm job.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isBuiltInAlgorithmJob;

/**
 *  Whether this job is a hyperparameter tuning job.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isHyperparameterTuningJob;

/**
 *  Results for individual Hyperparameter trials. Only set for hyperparameter
 *  tuning jobs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1HyperparameterOutput *> *trials;

/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if
 *  training_input.enable_web_access is `true`. The keys are names of each node
 *  in the training job; for example, `master-replica-0` for the master node,
 *  `worker-replica-0` for the first worker, and `ps-replica-0` for the first
 *  parameter server. The values are the URIs for each node's interactive shell.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput_WebAccessUris *webAccessUris;

@end


/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if
 *  training_input.enable_web_access is `true`. The keys are names of each node
 *  in the training job; for example, `master-replica-0` for the master node,
 *  `worker-replica-0` for the first worker, and `ps-replica-0` for the first
 *  parameter server. The values are the URIs for each node's interactive shell.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrainingOutput_WebAccessUris : GTLRObject
@end


/**
 *  A message representing a trial.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial : GTLRObject

/**
 *  Output only. The identifier of the client that originally requested this
 *  trial.
 */
@property(nonatomic, copy, nullable) NSString *clientId;

/** Output only. Time at which the trial's status changed to COMPLETED. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The final measurement containing the objective value. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement *finalMeasurement;

/**
 *  Output only. A human readable string describing why the trial is infeasible.
 *  This should only be set if trial_infeasible is true.
 */
@property(nonatomic, copy, nullable) NSString *infeasibleReason;

/**
 *  A list of measurements that are strictly lexicographically ordered by their
 *  induced tuples (steps, elapsed_time). These are used for early stopping
 *  computations.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1Measurement *> *measurements;

/** Output only. Name of the trial assigned by the service. */
@property(nonatomic, copy, nullable) NSString *name;

/** The parameters of the trial. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrialParameter *> *parameters;

/** Output only. Time at which the trial was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The detailed state of a trial.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Active
 *        Indicates that the trial has been suggested. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Completed
 *        Indicates that the trial is done, and either has a final_measurement
 *        set, or is marked as trial_infeasible. (Value: "COMPLETED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Requested
 *        Indicates that a specific trial has been requested, but it has not yet
 *        been suggested by the service. (Value: "REQUESTED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_StateUnspecified
 *        The trial state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Trial_State_Stopping
 *        Indicates that the trial should stop according to the service. (Value:
 *        "STOPPING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. If true, the parameters in this trial are not attempted again.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trialInfeasible;

@end


/**
 *  A message representing a parameter to be tuned. Contains the name of the
 *  parameter and the suggested value to use for this trial.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1TrialParameter : GTLRObject

/**
 *  Must be set if ParameterType is DOUBLE or DISCRETE.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *floatValue;

/**
 *  Must be set if ParameterType is INTEGER
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intValue;

/** The name of the parameter. */
@property(nonatomic, copy, nullable) NSString *parameter;

/** Must be set if ParameterTypeis CATEGORICAL */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  Represents a version of the model. Each version is a trained model deployed
 *  in the cloud, ready to handle prediction requests. A model can have multiple
 *  versions. You can get information about all of the versions of a given model
 *  by calling projects.models.versions.list.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version : GTLRObject

/**
 *  Optional. Accelerator config for using GPUs for online prediction (beta).
 *  Only specify this field if you have specified a Compute Engine (N1) machine
 *  type in the `machineType` field. Learn more about [using GPUs for online
 *  prediction](/ml-engine/docs/machine-types-online-prediction#gpus).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AcceleratorConfig *acceleratorConfig;

/**
 *  Automatically scale the number of nodes used to serve the model in response
 *  to increases and decreases in traffic. Care should be taken to ramp up
 *  traffic according to the model's ability to scale or you will start seeing
 *  increases in latency and 429 response codes.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1AutoScaling *autoScaling;

/**
 *  Optional. Specifies a custom container to use for serving predictions. If
 *  you specify this field, then `machineType` is required. If you specify this
 *  field, then `deploymentUri` is optional. If you specify this field, then you
 *  must not specify `runtimeVersion`, `packageUris`, `framework`,
 *  `pythonVersion`, or `predictionClass`.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ContainerSpec *container;

/** Output only. The time the version was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The Cloud Storage URI of a directory containing trained model artifacts to
 *  be used to create the model version. See the [guide to deploying
 *  models](/ai-platform/prediction/docs/deploying-models) for more information.
 *  The total number of files under this directory must not exceed 1000. During
 *  projects.models.versions.create, AI Platform Prediction copies all files
 *  from the specified directory to a location managed by the service. From then
 *  on, AI Platform Prediction uses these copies of the model artifacts to serve
 *  predictions, not the original files in Cloud Storage, so this location is
 *  useful only as a historical record. If you specify container, then this
 *  field is optional. Otherwise, it is required. Learn [how to use this field
 *  with a custom
 *  container](/ai-platform/prediction/docs/custom-container-requirements#artifacts).
 */
@property(nonatomic, copy, nullable) NSString *deploymentUri;

/**
 *  Optional. The description specified for the version when it was created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. The details of a failure or a cancellation. */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a model from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform model updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `GetVersion`, and systems are expected to put
 *  that etag in the request to `UpdateVersion` to ensure that their change will
 *  be applied to the model as intended.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. Configures explainability features on the model's version. Some
 *  explanation features require additional metadata to be loaded as part of the
 *  model payload.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ExplanationConfig *explanationConfig;

/**
 *  Optional. The machine learning framework AI Platform uses to train this
 *  version of the model. Valid values are `TENSORFLOW`, `SCIKIT_LEARN`,
 *  `XGBOOST`. If you do not specify a framework, AI Platform will analyze files
 *  in the deployment_uri to determine a framework. If you choose `SCIKIT_LEARN`
 *  or `XGBOOST`, you must also set the runtime version of the model to 1.4 or
 *  greater. Do **not** specify a framework if you're deploying a [custom
 *  prediction routine](/ai-platform/prediction/docs/custom-prediction-routines)
 *  or if you're using a [custom
 *  container](/ai-platform/prediction/docs/use-custom-container).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_FrameworkUnspecified
 *        Unspecified framework. Assigns a value based on the file suffix.
 *        (Value: "FRAMEWORK_UNSPECIFIED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_ScikitLearn
 *        Scikit-learn framework. (Value: "SCIKIT_LEARN")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_Tensorflow
 *        Tensorflow framework. (Value: "TENSORFLOW")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Framework_Xgboost
 *        XGBoost framework. (Value: "XGBOOST")
 */
@property(nonatomic, copy, nullable) NSString *framework;

/**
 *  Output only. If true, this version will be used to handle prediction
 *  requests that do not specify a version. You can change the default version
 *  by calling projects.methods.versions.setDefault.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  Optional. One or more labels that you can add, to organize your model
 *  versions. Each label is a key-value pair, where both the key and the value
 *  are arbitrary strings that you supply. For more information, see the
 *  documentation on using labels. Note that this field is not updatable for
 *  mls1* models.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Labels *labels;

/**
 *  Output only. The [AI Platform (Unified)
 *  `Model`](https://cloud.google.com/ai-platform-unified/docs/reference/rest/v1beta1/projects.locations.models)
 *  ID for the last [model
 *  migration](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).
 */
@property(nonatomic, copy, nullable) NSString *lastMigrationModelId;

/**
 *  Output only. The last time this version was successfully [migrated to AI
 *  Platform
 *  (Unified)](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastMigrationTime;

/** Output only. The time the version was last used for prediction. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUseTime;

/**
 *  Optional. The type of machine on which to serve the model. Currently only
 *  applies to online prediction service. To learn about valid values for this
 *  field, read [Choosing a machine type for online
 *  prediction](/ai-platform/prediction/docs/machine-types-online-prediction).
 *  If this field is not specified and you are using a [regional
 *  endpoint](/ai-platform/prediction/docs/regional-endpoints), then the machine
 *  type defaults to `n1-standard-2`. If this field is not specified and you are
 *  using the global endpoint (`ml.googleapis.com`), then the machine type
 *  defaults to `mls1-c1-m2`.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Manually select the number of nodes to use for serving the model. You should
 *  generally use `auto_scaling` with an appropriate `min_nodes` instead, but
 *  this option is available if you want more predictable billing. Beware that
 *  latency and error rates will increase if the traffic exceeds that capability
 *  of the system to serve it based on the selected number of nodes.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1ManualScaling *manualScaling;

/**
 *  Required. The name specified for the version when it was created. The
 *  version name must be unique within the model it is created in.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Cloud Storage paths (`gs://…`) of packages for [custom prediction
 *  routines](/ml-engine/docs/tensorflow/custom-prediction-routines) or
 *  [scikit-learn pipelines with custom
 *  code](/ml-engine/docs/scikit/exporting-for-prediction#custom-pipeline-code).
 *  For a custom prediction routine, one of these packages must contain your
 *  Predictor class (see [`predictionClass`](#Version.FIELDS.prediction_class)).
 *  Additionally, include any dependencies used by your Predictor or
 *  scikit-learn pipeline uses that are not already included in your selected
 *  [runtime version](/ml-engine/docs/tensorflow/runtime-version-list). If you
 *  specify this field, you must also set
 *  [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *packageUris;

/**
 *  Optional. The fully qualified name (module_name.class_name) of a class that
 *  implements the Predictor interface described in this reference field. The
 *  module containing this class should be included in a package provided to the
 *  [`packageUris` field](#Version.FIELDS.package_uris). Specify this field if
 *  and only if you are deploying a [custom prediction routine
 *  (beta)](/ml-engine/docs/tensorflow/custom-prediction-routines). If you
 *  specify this field, you must set
 *  [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater and
 *  you must set `machineType` to a [legacy (MLS1) machine
 *  type](/ml-engine/docs/machine-types-online-prediction). The following code
 *  sample provides the Predictor interface: class Predictor(object):
 *  """Interface for constructing custom predictors.""" def predict(self,
 *  instances, **kwargs): """Performs custom prediction. Instances are the
 *  decoded values from the request. They have already been deserialized from
 *  JSON. Args: instances: A list of prediction input instances. **kwargs: A
 *  dictionary of keyword args provided as additional fields on the predict
 *  request body. Returns: A list of outputs containing the prediction results.
 *  This list must be JSON serializable. """ raise NotImplementedError()
 *  \@classmethod def from_path(cls, model_dir): """Creates an instance of
 *  Predictor using the given path. Loading of the predictor should be done in
 *  this method. Args: model_dir: The local directory that contains the exported
 *  model file along with any additional files uploaded when creating the
 *  version resource. Returns: An instance implementing this Predictor class.
 *  """ raise NotImplementedError() Learn more about [the Predictor interface
 *  and custom prediction
 *  routines](/ml-engine/docs/tensorflow/custom-prediction-routines).
 */
@property(nonatomic, copy, nullable) NSString *predictionClass;

/**
 *  Required. The version of Python used in prediction. The following Python
 *  versions are available: * Python '3.7' is available when `runtime_version`
 *  is set to '1.15' or later. * Python '3.5' is available when
 *  `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7'
 *  is available when `runtime_version` is set to '1.15' or earlier. Read more
 *  about the Python versions available for [each runtime
 *  version](/ml-engine/docs/runtime-version-list).
 */
@property(nonatomic, copy, nullable) NSString *pythonVersion;

/**
 *  Optional. *Only* specify this field in a projects.models.versions.patch
 *  request. Specifying it in a projects.models.versions.create request has no
 *  effect. Configures the request-response pair logging on predictions from
 *  this Version.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1RequestLoggingConfig *requestLoggingConfig;

/**
 *  Optional. Specifies paths on a custom container's HTTP server where AI
 *  Platform Prediction sends certain requests. If you specify this field, then
 *  you must also specify the `container` field. If you specify the `container`
 *  field and do not specify this field, it defaults to the following: ```json {
 *  "predict": "/v1/models/MODEL/versions/VERSION:predict", "health":
 *  "/v1/models/MODEL/versions/VERSION" } ``` See RouteMap for more details
 *  about these default values.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleCloudMlV1RouteMap *routes;

/**
 *  Required. The AI Platform runtime version to use for this deployment. For
 *  more information, see the [runtime version
 *  list](/ml-engine/docs/runtime-version-list) and [how to manage runtime
 *  versions](/ml-engine/docs/versioning).
 */
@property(nonatomic, copy, nullable) NSString *runtimeVersion;

/**
 *  Optional. Specifies the service account for resource access control. If you
 *  specify this field, then you must also specify either the `containerSpec` or
 *  the `predictionClass` field. Learn more about [using a custom service
 *  account](/ai-platform/prediction/docs/custom-service-account).
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only. The state of a version.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Creating
 *        The version is being created. New UpdateVersion and DeleteVersion
 *        requests will fail if a version is in the CREATING state. (Value:
 *        "CREATING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Deleting
 *        The version is being deleted. New UpdateVersion and DeleteVersion
 *        requests will fail if a version is in the DELETING state. (Value:
 *        "DELETING")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Failed
 *        The version failed to be created, possibly cancelled. `error_message`
 *        should contain the details of the failure. (Value: "FAILED")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Ready
 *        The version is ready for prediction. (Value: "READY")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Unknown
 *        The version state is unspecified. (Value: "UNKNOWN")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_State_Updating
 *        The version is being updated. New UpdateVersion and DeleteVersion
 *        requests will fail if a version is in the UPDATING state. (Value:
 *        "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Optional. One or more labels that you can add, to organize your model
 *  versions. Each label is a key-value pair, where both the key and the value
 *  are arbitrary strings that you supply. For more information, see the
 *  documentation on using labels. Note that this field is not updatable for
 *  mls1* models.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1Version_Labels : GTLRObject
@end


/**
 *  Attributes credit by computing the XRAI taking advantage of the model's
 *  fully differentiable structure. Refer to this paper for more details:
 *  https://arxiv.org/abs/1906.02825 Currently only implemented for models with
 *  natural image inputs.
 */
@interface GTLRCloudMachineLearningEngine_GoogleCloudMlV1XraiAttribution : GTLRObject

/**
 *  Number of steps for approximating the path integral. A good value to start
 *  is 50 and gradually increase until the sum to diff property is met within
 *  the desired error range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numIntegralSteps;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_AdminRead
 *        Admin reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_DataRead
 *        Data reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_DataWrite
 *        Data writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCloudMachineLearningEngine_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleTypeExpr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleIamV1AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleIamV1Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleIamV1Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRCloudMachineLearningEngine_GoogleIamV1TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudMachineLearningEngine_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudMachineLearningEngine_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudMachineLearningEngine_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudMachineLearningEngine_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudMachineLearningEngine_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudMachineLearningEngine_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudMachineLearningEngine_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCloudMachineLearningEngine_GoogleTypeExpr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
