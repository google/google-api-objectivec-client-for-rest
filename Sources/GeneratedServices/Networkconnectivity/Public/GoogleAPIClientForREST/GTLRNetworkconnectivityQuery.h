// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1)
// Description:
//   This API enables connectivity with and between Google Cloud resources.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRNetworkconnectivityObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// autoSubnetworkConfigIpStack

/**
 *  Will use IPv4 and IPv6 (dual stack).
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv4Ipv6;
/**
 *  Will create an IPV4_ONLY subnetwork.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv4Only;
/**
 *  Will create an IPV6_ONLY subnetwork.
 *
 *  Value: "IPV6_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv6Only;
/**
 *  Default value. Will create an IPV4_ONLY subnetwork by default.
 *
 *  Value: "SUBNET_IP_STACK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackSubnetIpStackUnspecified;

// ----------------------------------------------------------------------------
// subnetworkMode

/**
 *  Subnetwork list is empty from the user input. A subnetwork will be created
 *  automatically.
 *
 *  Value: "AUTO_CREATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivitySubnetworkModeAutoCreated;
/**
 *  The default value if the enum is unset. Note user is not allowed to set the
 *  subnetwork mode to this value.
 *
 *  Value: "SUBNETWORK_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivitySubnetworkModeSubnetworkModeUnspecified;
/**
 *  Subnetworks are provided from the user input.
 *
 *  Value: "USER_PROVIDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivitySubnetworkModeUserProvided;

// ----------------------------------------------------------------------------
// view

/**
 *  Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`, and
 *  `spoke_type`. This is the default value.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityViewBasic;
/**
 *  Includes all spoke fields except `labels`. You can use the `DETAILED` view
 *  only when you set the `spoke_locations` field to `[global]`.
 *
 *  Value: "DETAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityViewDetailed;
/**
 *  The spoke view is unspecified. When the spoke view is unspecified, the API
 *  returns the same fields as the `BASIC` view.
 *
 *  Value: "SPOKE_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkconnectivityViewSpokeViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other networkconnectivity query classes.
 */
@interface GTLRNetworkconnectivityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: networkconnectivity.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGet : GTLRNetworkconnectivityQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.acceptSpoke
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsAcceptSpoke : GTLRNetworkconnectivityQuery

/** Required. The name of the hub into which to accept the spoke. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_AcceptHubSpokeRequest to
 *    include in the query.
 *  @param name Required. The name of the hub into which to accept the spoke.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsAcceptSpoke
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_AcceptHubSpokeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Accepts a proposal to update a Network Connectivity Center spoke in a hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.acceptSpokeUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsAcceptSpokeUpdate : GTLRNetworkconnectivityQuery

/** Required. The name of the hub to accept spoke update. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Accepts a proposal to update a Network Connectivity Center spoke in a hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_AcceptSpokeUpdateRequest to
 *    include in the query.
 *  @param name Required. The name of the hub to accept spoke update.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsAcceptSpokeUpdate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_AcceptSpokeUpdateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Network Connectivity Center hub in the specified project.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate : GTLRNetworkconnectivityQuery

/** Required. A unique identifier for the hub. */
@property(nonatomic, copy, nullable) NSString *hubId;

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new Network Connectivity Center hub in the specified project.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the hub to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a Network Connectivity Center hub.
 *
 *  @param name Required. The name of the hub to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet : GTLRNetworkconnectivityQuery

/** Required. The name of the hub resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Hub.
 *
 *  Gets details about a Network Connectivity Center hub.
 *
 *  @param name Required. The name of the hub resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Gets details about a Network Connectivity Center group.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsGet : GTLRNetworkconnectivityQuery

/** Required. The name of the route table resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Group.
 *
 *  Gets details about a Network Connectivity Center group.
 *
 *  @param name Required. The name of the route table resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists groups in a given hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsList : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListGroupsResponse.
 *
 *  Lists groups in a given hub.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a Network Connectivity Center group.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of the group. Group names must be unique. They use the
 *  following form:
 *  `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. In the case of an update to an existing group, field mask is used
 *  to specify the fields to be overwritten. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it is in the mask. If the user does not provide a mask, then
 *  all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a Network Connectivity Center group.
 *
 *  @param object The @c GTLRNetworkconnectivity_Group to include in the query.
 *  @param name Immutable. The name of the group. Group names must be unique.
 *    They use the following form:
 *    `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Group *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGroupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists the Network Connectivity Center hubs associated with a given project.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page to return. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListHubsResponse.
 *
 *  Lists the Network Connectivity Center hubs associated with a given project.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the Network Connectivity Center spokes associated with a specified hub
 *  and location. The list includes both spokes that are attached to the hub and
 *  spokes that have been proposed but not yet accepted.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.listSpokes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsListSpokes : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. The name of the hub. */
@property(nonatomic, copy, nullable) NSString *name;

/** Sort the results by name or create_time. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  A list of locations. Specify one of the following: `[global]`, a single
 *  region (for example, `[us-central1]`), or a combination of values (for
 *  example, `[global, us-central1, us-west1]`). If the spoke_locations field is
 *  populated, the list of results includes only spokes in the specified
 *  location. If the spoke_locations field is not populated, the list of results
 *  includes spokes in all locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *spokeLocations;

/**
 *  The view of the spoke to return. The view that you use determines which
 *  spoke fields are included in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivityViewSpokeViewUnspecified The spoke view is
 *        unspecified. When the spoke view is unspecified, the API returns the
 *        same fields as the `BASIC` view. (Value: "SPOKE_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRNetworkconnectivityViewBasic Includes `name`, `create_time`,
 *        `hub`, `unique_id`, `state`, `reasons`, and `spoke_type`. This is the
 *        default value. (Value: "BASIC")
 *    @arg @c kGTLRNetworkconnectivityViewDetailed Includes all spoke fields
 *        except `labels`. You can use the `DETAILED` view only when you set the
 *        `spoke_locations` field to `[global]`. (Value: "DETAILED")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListHubSpokesResponse.
 *
 *  Lists the Network Connectivity Center spokes associated with a specified hub
 *  and location. The list includes both spokes that are attached to the hub and
 *  spokes that have been proposed but not yet accepted.
 *
 *  @param name Required. The name of the hub.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsListSpokes
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the description and/or labels of a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of the hub. Hub names must be unique. They use the
 *  following form: `projects/{project_number}/locations/global/hubs/{hub_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. In the case of an update to an existing hub, field mask is used to
 *  specify the fields to be overwritten. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it is in the mask. If the user does not provide a mask, then
 *  all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the description and/or labels of a Network Connectivity Center hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param name Immutable. The name of the hub. Hub names must be unique. They
 *    use the following form:
 *    `projects/{project_number}/locations/global/hubs/{hub_id}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                           name:(NSString *)name;

@end

/**
 *  Query the Private Service Connect propagation status of a Network
 *  Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.queryStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsQueryStatus : GTLRNetworkconnectivityQuery

/**
 *  Optional. An expression that filters the list of results. The filter can be
 *  used to filter the results by the following fields: *
 *  `psc_propagation_status.source_spoke` *
 *  `psc_propagation_status.source_group` *
 *  `psc_propagation_status.source_forwarding_rule` *
 *  `psc_propagation_status.target_spoke` *
 *  `psc_propagation_status.target_group` * `psc_propagation_status.code` *
 *  `psc_propagation_status.message`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Aggregate the results by the specified fields. A comma-separated
 *  list of any of these fields: * `psc_propagation_status.source_spoke` *
 *  `psc_propagation_status.source_group` *
 *  `psc_propagation_status.source_forwarding_rule` *
 *  `psc_propagation_status.target_spoke` *
 *  `psc_propagation_status.target_group` * `psc_propagation_status.code`
 */
@property(nonatomic, copy, nullable) NSString *groupBy;

/** Required. The name of the hub. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Sort the results in ascending order by the specified fields. A
 *  comma-separated list of any of these fields: *
 *  `psc_propagation_status.source_spoke` *
 *  `psc_propagation_status.source_group` *
 *  `psc_propagation_status.source_forwarding_rule` *
 *  `psc_propagation_status.target_spoke` *
 *  `psc_propagation_status.target_group` * `psc_propagation_status.code` If
 *  `group_by` is set, the value of the `order_by` field must be the same as or
 *  a subset of the `group_by` field.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkconnectivity_QueryHubStatusResponse.
 *
 *  Query the Private Service Connect propagation status of a Network
 *  Connectivity Center hub.
 *
 *  @param name Required. The name of the hub.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsQueryStatus
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Rejects a Network Connectivity Center spoke from being attached to a hub. If
 *  the spoke was previously in the `ACTIVE` state, it transitions to the
 *  `INACTIVE` state and is no longer able to connect to other spokes that are
 *  attached to the hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.rejectSpoke
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRejectSpoke : GTLRNetworkconnectivityQuery

/** Required. The name of the hub from which to reject the spoke. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Rejects a Network Connectivity Center spoke from being attached to a hub. If
 *  the spoke was previously in the `ACTIVE` state, it transitions to the
 *  `INACTIVE` state and is no longer able to connect to other spokes that are
 *  attached to the hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_RejectHubSpokeRequest to
 *    include in the query.
 *  @param name Required. The name of the hub from which to reject the spoke.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRejectSpoke
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_RejectHubSpokeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Rejects a proposal to update a Network Connectivity Center spoke in a hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.rejectSpokeUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRejectSpokeUpdate : GTLRNetworkconnectivityQuery

/** Required. The name of the hub to reject spoke update. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Rejects a proposal to update a Network Connectivity Center spoke in a hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_RejectSpokeUpdateRequest to
 *    include in the query.
 *  @param name Required. The name of the hub to reject spoke update.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRejectSpokeUpdate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_RejectSpokeUpdateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details about a Network Connectivity Center route table.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.routeTables.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesGet : GTLRNetworkconnectivityQuery

/** Required. The name of the route table resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_RouteTable.
 *
 *  Gets details about a Network Connectivity Center route table.
 *
 *  @param name Required. The name of the route table resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists route tables in a given hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.routeTables.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesList : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListRouteTablesResponse.
 *
 *  Lists route tables in a given hub.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets details about the specified route.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.routeTables.routes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesRoutesGet : GTLRNetworkconnectivityQuery

/** Required. The name of the route resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Route.
 *
 *  Gets details about the specified route.
 *
 *  @param name Required. The name of the route resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesRoutesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists routes in a given route table.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.routeTables.routes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesRoutesList : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListRoutesResponse.
 *
 *  Lists routes in a given route table.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsRouteTablesRoutesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new policy-based route in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesCreate : GTLRNetworkconnectivityQuery

/** Required. The parent resource's name of the PolicyBasedRoute. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Unique id for the policy-based route to create. Provided by the
 *  client when the resource is created. The name must comply with
 *  https://google.aip.dev/122#resource-id-segments. Specifically, the name must
 *  be 1-63 characters long and match the regular expression
 *  [a-z]([a-z0-9-]*[a-z0-9])?. The first character must be a lowercase letter,
 *  and all following characters (except for the last character) must be a dash,
 *  lowercase letter, or digit. The last character must be a lowercase letter or
 *  digit.
 */
@property(nonatomic, copy, nullable) NSString *policyBasedRouteId;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server knows to
 *  ignore the request if it has already been completed. The server guarantees
 *  that for at least 60 minutes since the first request. For example, consider
 *  a situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, ignores
 *  the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new policy-based route in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_PolicyBasedRoute to include in
 *    the query.
 *  @param parent Required. The parent resource's name of the PolicyBasedRoute.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_PolicyBasedRoute *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single policy-based route.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesDelete : GTLRNetworkconnectivityQuery

/** Required. Name of the policy-based route resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server knows to
 *  ignore the request if it has already been completed. The server guarantees
 *  that for at least 60 minutes after the first request. For example, consider
 *  a situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, ignores
 *  the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single policy-based route.
 *
 *  @param name Required. Name of the policy-based route resource to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single policy-based route.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the PolicyBasedRoute resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_PolicyBasedRoute.
 *
 *  Gets details of a single policy-based route.
 *
 *  @param name Required. Name of the PolicyBasedRoute resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists policy-based routes in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListPolicyBasedRoutesResponse.
 *
 *  Lists policy-based routes in a given project and location.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new internal range in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesCreate : GTLRNetworkconnectivityQuery

/**
 *  Optional. Resource ID (i.e. 'foo' in
 *  '[...]/projects/p/locations/l/internalRanges/foo') See
 *  https://google.aip.dev/122#resource-id-segments Unique per location.
 */
@property(nonatomic, copy, nullable) NSString *internalRangeId;

/** Required. The parent resource's name of the internal range. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new internal range in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_InternalRange to include in the
 *    query.
 *  @param parent Required. The parent resource's name of the internal range.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_InternalRange *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single internal range.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the internal range to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single internal range.
 *
 *  @param name Required. The name of the internal range to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single internal range.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the InternalRange to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_InternalRange.
 *
 *  Gets details of a single internal range.
 *
 *  @param name Required. Name of the InternalRange to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists internal ranges in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListInternalRangesResponse.
 *
 *  Lists internal ranges in a given project and location.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single internal range.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesPatch : GTLRNetworkconnectivityQuery

/**
 *  Identifier. The name of an internal range. Format:
 *  projects/{project}/locations/{location}/internalRanges/{internal_range} See:
 *  https://google.aip.dev/122#fields-representing-resource-names
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  InternalRange resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single internal range.
 *
 *  @param object The @c GTLRNetworkconnectivity_InternalRange to include in the
 *    query.
 *  @param name Identifier. The name of an internal range. Format:
 *    projects/{project}/locations/{location}/internalRanges/{internal_range}
 *    See: https://google.aip.dev/122#fields-representing-resource-names
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_InternalRange *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: networkconnectivity.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsList : GTLRNetworkconnectivityQuery

/**
 *  Optional. Do not use this field. It is unsupported and is ignored unless
 *  explicitly documented otherwise. This is primarily for internal usage.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *extraLocationTypes;

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a `MulticloudDataTransferConfig` resource in a specified project and
 *  location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsCreate : GTLRNetworkconnectivityQuery

/**
 *  Required. The ID to use for the `MulticloudDataTransferConfig` resource,
 *  which becomes the final component of the `MulticloudDataTransferConfig`
 *  resource name.
 */
@property(nonatomic, copy, nullable) NSString *multicloudDataTransferConfigId;

/** Required. The name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  This prevents clients from accidentally creating duplicate
 *  `MulticloudDataTransferConfig` resources. The request ID must be a valid
 *  UUID with the exception that zero UUID
 *  (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a `MulticloudDataTransferConfig` resource in a specified project and
 *  location.
 *
 *  @param object The @c GTLRNetworkconnectivity_MulticloudDataTransferConfig to
 *    include in the query.
 *  @param parent Required. The name of the parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_MulticloudDataTransferConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `MulticloudDataTransferConfig` resource.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and might be sent with update
 *  and delete requests so that the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the `MulticloudDataTransferConfig` resource to delete.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  This prevents clients from accidentally creating duplicate
 *  `MulticloudDataTransferConfig` resources. The request ID must be a valid
 *  UUID with the exception that zero UUID
 *  (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a `MulticloudDataTransferConfig` resource.
 *
 *  @param name Required. The name of the `MulticloudDataTransferConfig`
 *    resource to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a `Destination` resource in a specified project and location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsCreate : GTLRNetworkconnectivityQuery

/**
 *  Required. The ID to use for the `Destination` resource, which becomes the
 *  final component of the `Destination` resource name.
 */
@property(nonatomic, copy, nullable) NSString *destinationId;

/** Required. The name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  This prevents clients from accidentally creating duplicate `Destination`
 *  resources. The request ID must be a valid UUID with the exception that zero
 *  UUID (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a `Destination` resource in a specified project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_Destination to include in the
 *    query.
 *  @param parent Required. The name of the parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Destination *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `Destination` resource.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and might be sent with update
 *  and delete requests so that the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The name of the `Destination` resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  The request ID must be a valid UUID with the exception that zero UUID
 *  (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a `Destination` resource.
 *
 *  @param name Required. The name of the `Destination` resource to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of a `Destination` resource.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsGet : GTLRNetworkconnectivityQuery

/** Required. The name of the `Destination` resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Destination.
 *
 *  Gets the details of a `Destination` resource.
 *
 *  @param name Required. The name of the `Destination` resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the `Destination` resources in a specified project and location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsList : GTLRNetworkconnectivityQuery

/**
 *  Optional. An expression that filters the results listed in the response.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. The sort order of the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The maximum number of results listed per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. If `true`, allow partial responses for multi-regional aggregated
 *  list requests.
 */
@property(nonatomic, assign) BOOL returnPartialSuccess;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListDestinationsResponse.
 *
 *  Lists the `Destination` resources in a specified project and location.
 *
 *  @param parent Required. The name of the parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a `Destination` resource in a specified project and location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsPatch : GTLRNetworkconnectivityQuery

/**
 *  Identifier. The name of the `Destination` resource. Format:
 *  `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  The request ID must be a valid UUID with the exception that zero UUID
 *  (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. `FieldMask is used to specify the fields to be overwritten in the
 *  `Destination` resource by the update. The fields specified in `update_mask`
 *  are relative to the resource, not the full request. A field is overwritten
 *  if it is in the mask. If you don't specify a mask, all fields are
 *  overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates a `Destination` resource in a specified project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_Destination to include in the
 *    query.
 *  @param name Identifier. The name of the `Destination` resource. Format:
 *    `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination}`.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsDestinationsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Destination *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the details of a `MulticloudDataTransferConfig` resource.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsGet : GTLRNetworkconnectivityQuery

/**
 *  Required. The name of the `MulticloudDataTransferConfig` resource to get.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_MulticloudDataTransferConfig.
 *
 *  Gets the details of a `MulticloudDataTransferConfig` resource.
 *
 *  @param name Required. The name of the `MulticloudDataTransferConfig`
 *    resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the `MulticloudDataTransferConfig` resources in a specified project
 *  and location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsList : GTLRNetworkconnectivityQuery

/**
 *  Optional. An expression that filters the results listed in the response.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. The sort order of the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The maximum number of results listed per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. If `true`, allows partial responses for multi-regional aggregated
 *  list requests.
 */
@property(nonatomic, assign) BOOL returnPartialSuccess;

/**
 *  Fetches a @c
 *  GTLRNetworkconnectivity_ListMulticloudDataTransferConfigsResponse.
 *
 *  Lists the `MulticloudDataTransferConfig` resources in a specified project
 *  and location.
 *
 *  @param parent Required. The name of the parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a `MulticloudDataTransferConfig` resource in a specified project and
 *  location.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsPatch : GTLRNetworkconnectivityQuery

/**
 *  Identifier. The name of the `MulticloudDataTransferConfig` resource. Format:
 *  `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server can ignore the request if it
 *  has already been completed. The server waits for at least 60 minutes since
 *  the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check if original operation with
 *  the same request ID was received, and if so, can ignore the second request.
 *  This prevents clients from accidentally creating duplicate
 *  `MulticloudDataTransferConfig` resources. The request ID must be a valid
 *  UUID with the exception that zero UUID
 *  (00000000-0000-0000-0000-000000000000) isn't supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. `FieldMask` is used to specify the fields in the
 *  `MulticloudDataTransferConfig` resource to be overwritten by the update. The
 *  fields specified in `update_mask` are relative to the resource, not the full
 *  request. A field is overwritten if it is in the mask. If you don't specify a
 *  mask, all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates a `MulticloudDataTransferConfig` resource in a specified project and
 *  location.
 *
 *  @param object The @c GTLRNetworkconnectivity_MulticloudDataTransferConfig to
 *    include in the query.
 *  @param name Identifier. The name of the `MulticloudDataTransferConfig`
 *    resource. Format:
 *    `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_MulticloudDataTransferConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the details of a service that is supported for Data Transfer
 *  Essentials.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferSupportedServices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferSupportedServicesGet : GTLRNetworkconnectivityQuery

/** Required. The name of the service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_MulticloudDataTransferSupportedService.
 *
 *  Gets the details of a service that is supported for Data Transfer
 *  Essentials.
 *
 *  @param name Required. The name of the service.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferSupportedServicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the services in the project for a region that are supported for Data
 *  Transfer Essentials.
 *
 *  Method: networkconnectivity.projects.locations.multicloudDataTransferSupportedServices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferSupportedServicesList : GTLRNetworkconnectivityQuery

/** Optional. The maximum number of results listed per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRNetworkconnectivity_ListMulticloudDataTransferSupportedServicesResponse.
 *
 *  Lists the services in the project for a region that are supported for Data
 *  Transfer Essentials.
 *
 *  @param parent Required. The name of the parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsMulticloudDataTransferSupportedServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel : GTLRNetworkconnectivityQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete : GTLRNetworkconnectivityQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networkconnectivity.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet : GTLRNetworkconnectivityQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList : GTLRNetworkconnectivityQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new RegionalEndpoint in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.regionalEndpoints.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsCreate : GTLRNetworkconnectivityQuery

/** Required. The parent resource's name of the RegionalEndpoint. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Unique id of the Regional Endpoint to be created. \@pattern:
 *  ^[-a-z0-9](?:[-a-z0-9]{0,44})[a-z0-9]$
 */
@property(nonatomic, copy, nullable) NSString *regionalEndpointId;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server knows to
 *  ignore the request if it has already been completed. The server guarantees
 *  that for at least 60 minutes since the first request. For example, consider
 *  a situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  the original operation with the same request ID was received, and if so,
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new RegionalEndpoint in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_RegionalEndpoint to include in
 *    the query.
 *  @param parent Required. The parent resource's name of the RegionalEndpoint.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_RegionalEndpoint *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single RegionalEndpoint.
 *
 *  Method: networkconnectivity.projects.locations.regionalEndpoints.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the RegionalEndpoint to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server knows to
 *  ignore the request if it has already been completed. The server guarantees
 *  that for at least 60 minutes since the first request. For example, consider
 *  a situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  the original operation with the same request ID was received, and if so,
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single RegionalEndpoint.
 *
 *  @param name Required. The name of the RegionalEndpoint to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single RegionalEndpoint.
 *
 *  Method: networkconnectivity.projects.locations.regionalEndpoints.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsGet : GTLRNetworkconnectivityQuery

/**
 *  Required. Name of the RegionalEndpoint resource to get. Format:
 *  `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_RegionalEndpoint.
 *
 *  Gets details of a single RegionalEndpoint.
 *
 *  @param name Required. Name of the RegionalEndpoint resource to get. Format:
 *    `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists RegionalEndpoints in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.regionalEndpoints.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name of the RegionalEndpoint. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListRegionalEndpointsResponse.
 *
 *  Lists RegionalEndpoints in a given project and location.
 *
 *  @param parent Required. The parent resource's name of the RegionalEndpoint.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRegionalEndpointsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets details of a single RemoteTransportProfile.
 *
 *  Method: networkconnectivity.projects.locations.remoteTransportProfiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRemoteTransportProfilesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_RemoteTransportProfile.
 *
 *  Gets details of a single RemoteTransportProfile.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRemoteTransportProfilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists RemoteTransportProfiles in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.remoteTransportProfiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsRemoteTransportProfilesList : GTLRNetworkconnectivityQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListRemoteTransportProfilesRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListRemoteTransportProfilesResponse.
 *
 *  Lists RemoteTransportProfiles in a given project and location.
 *
 *  @param parent Required. Parent value for ListRemoteTransportProfilesRequest
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsRemoteTransportProfilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a single ServiceClass.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and may be sent on update and
 *  delete requests to ensure the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The name of the ServiceClass to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single ServiceClass.
 *
 *  @param name Required. The name of the ServiceClass to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServiceClass.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the ServiceClass to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ServiceClass.
 *
 *  Gets details of a single ServiceClass.
 *
 *  @param name Required. Name of the ServiceClass to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ServiceClasses in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource's name. ex. projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListServiceClassesResponse.
 *
 *  Lists ServiceClasses in a given project and location.
 *
 *  @param parent Required. The parent resource's name. ex.
 *    projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ServiceClass.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of a ServiceClass resource. Format:
 *  projects/{project}/locations/{location}/serviceClasses/{service_class} See:
 *  https://google.aip.dev/122#fields-representing-resource-names
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ServiceClass resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single ServiceClass.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceClass to include in the
 *    query.
 *  @param name Immutable. The name of a ServiceClass resource. Format:
 *    projects/{project}/locations/{location}/serviceClasses/{service_class}
 *    See: https://google.aip.dev/122#fields-representing-resource-names
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceClass *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new ServiceConnectionMap in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsCreate : GTLRNetworkconnectivityQuery

/**
 *  Required. The parent resource's name of the ServiceConnectionMap. ex.
 *  projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Resource ID (i.e. 'foo' in
 *  '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See
 *  https://google.aip.dev/122#resource-id-segments Unique per location. If one
 *  is not provided, one will be generated.
 */
@property(nonatomic, copy, nullable) NSString *serviceConnectionMapId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new ServiceConnectionMap in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceConnectionMap to include
 *    in the query.
 *  @param parent Required. The parent resource's name of the
 *    ServiceConnectionMap. ex. projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceConnectionMap *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ServiceConnectionMap.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and may be sent on update and
 *  delete requests to ensure the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The name of the ServiceConnectionMap to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single ServiceConnectionMap.
 *
 *  @param name Required. The name of the ServiceConnectionMap to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServiceConnectionMap.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGet : GTLRNetworkconnectivityQuery

/** Required. Name of the ServiceConnectionMap to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ServiceConnectionMap.
 *
 *  Gets details of a single ServiceConnectionMap.
 *
 *  @param name Required. Name of the ServiceConnectionMap to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ServiceConnectionMaps in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource's name. ex. projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListServiceConnectionMapsResponse.
 *
 *  Lists ServiceConnectionMaps in a given project and location.
 *
 *  @param parent Required. The parent resource's name. ex.
 *    projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ServiceConnectionMap.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of a ServiceConnectionMap. Format:
 *  projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
 *  See: https://google.aip.dev/122#fields-representing-resource-names
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ServiceConnectionMap resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single ServiceConnectionMap.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceConnectionMap to include
 *    in the query.
 *  @param name Immutable. The name of a ServiceConnectionMap. Format:
 *    projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
 *    See: https://google.aip.dev/122#fields-representing-resource-names
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceConnectionMap *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new ServiceConnectionPolicy in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesCreate : GTLRNetworkconnectivityQuery

/**
 *  Optional. The space where we search for a free range to create a subnetwork.
 *  It can be narrow down or pick a different space. This is in standard CIDR
 *  format. If not specified, “10.0.0.0/8” is used. Only eligible for IPV4_ONLY
 *  and IPV4_IPV6 subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *autoSubnetworkConfigAllocRangeSpace;

/**
 *  Optional. The requested IP stack for the subnetwork. If not specified, IPv4
 *  is used.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackSubnetIpStackUnspecified
 *        Default value. Will create an IPV4_ONLY subnetwork by default. (Value:
 *        "SUBNET_IP_STACK_UNSPECIFIED")
 *    @arg @c kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv4Only Will
 *        create an IPV4_ONLY subnetwork. (Value: "IPV4_ONLY")
 *    @arg @c kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv6Only Will
 *        create an IPV6_ONLY subnetwork. (Value: "IPV6_ONLY")
 *    @arg @c kGTLRNetworkconnectivityAutoSubnetworkConfigIpStackIpv4Ipv6 Will
 *        use IPv4 and IPv6 (dual stack). (Value: "IPV4_IPV6")
 */
@property(nonatomic, copy, nullable) NSString *autoSubnetworkConfigIpStack;

/**
 *  Optional. The desired prefix length for the subnet's IP address range. E.g.,
 *  24 for a /24. The actual range is allocated from available space. If not
 *  specified, 24 is used. Only eligible for IPV4_ONLY and IPV4_IPV6 subnetwork.
 */
@property(nonatomic, assign) NSInteger autoSubnetworkConfigPrefixLength;

/**
 *  Required. The parent resource's name of the ServiceConnectionPolicy. ex.
 *  projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Resource ID (i.e. 'foo' in
 *  '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See
 *  https://google.aip.dev/122#resource-id-segments Unique per location.
 */
@property(nonatomic, copy, nullable) NSString *serviceConnectionPolicyId;

/**
 *  Optional. If this field is not set, USER_PROVIDED is the inferred value to
 *  use.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkconnectivitySubnetworkModeSubnetworkModeUnspecified
 *        The default value if the enum is unset. Note user is not allowed to
 *        set the subnetwork mode to this value. (Value:
 *        "SUBNETWORK_MODE_UNSPECIFIED")
 *    @arg @c kGTLRNetworkconnectivitySubnetworkModeUserProvided Subnetworks are
 *        provided from the user input. (Value: "USER_PROVIDED")
 *    @arg @c kGTLRNetworkconnectivitySubnetworkModeAutoCreated Subnetwork list
 *        is empty from the user input. A subnetwork will be created
 *        automatically. (Value: "AUTO_CREATED")
 */
@property(nonatomic, copy, nullable) NSString *subnetworkMode;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new ServiceConnectionPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceConnectionPolicy to
 *    include in the query.
 *  @param parent Required. The parent resource's name of the
 *    ServiceConnectionPolicy. ex. projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceConnectionPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ServiceConnectionPolicy.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and may be sent on update and
 *  delete requests to ensure the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The name of the ServiceConnectionPolicy to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single ServiceConnectionPolicy.
 *
 *  @param name Required. The name of the ServiceConnectionPolicy to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServiceConnectionPolicy.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the ServiceConnectionPolicy to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ServiceConnectionPolicy.
 *
 *  Gets details of a single ServiceConnectionPolicy.
 *
 *  @param name Required. Name of the ServiceConnectionPolicy to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ServiceConnectionPolicies in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource's name. ex. projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListServiceConnectionPoliciesResponse.
 *
 *  Lists ServiceConnectionPolicies in a given project and location.
 *
 *  @param parent Required. The parent resource's name. ex.
 *    projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ServiceConnectionPolicy.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of a ServiceConnectionPolicy. Format:
 *  projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy}
 *  See: https://google.aip.dev/122#fields-representing-resource-names
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ServiceConnectionPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single ServiceConnectionPolicy.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceConnectionPolicy to
 *    include in the query.
 *  @param name Immutable. The name of a ServiceConnectionPolicy. Format:
 *    projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy}
 *    See: https://google.aip.dev/122#fields-representing-resource-names
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceConnectionPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new ServiceConnectionToken in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionTokens.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensCreate : GTLRNetworkconnectivityQuery

/**
 *  Required. The parent resource's name of the ServiceConnectionToken. ex.
 *  projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Resource ID (i.e. 'foo' in
 *  '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See
 *  https://google.aip.dev/122#resource-id-segments Unique per location. If one
 *  is not provided, one will be generated.
 */
@property(nonatomic, copy, nullable) NSString *serviceConnectionTokenId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new ServiceConnectionToken in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_ServiceConnectionToken to
 *    include in the query.
 *  @param parent Required. The parent resource's name of the
 *    ServiceConnectionToken. ex. projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_ServiceConnectionToken *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ServiceConnectionToken.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionTokens.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensDelete : GTLRNetworkconnectivityQuery

/**
 *  Optional. The etag is computed by the server, and may be sent on update and
 *  delete requests to ensure the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The name of the ServiceConnectionToken to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single ServiceConnectionToken.
 *
 *  @param name Required. The name of the ServiceConnectionToken to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServiceConnectionToken.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionTokens.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensGet : GTLRNetworkconnectivityQuery

/** Required. Name of the ServiceConnectionToken to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ServiceConnectionToken.
 *
 *  Gets details of a single ServiceConnectionToken.
 *
 *  @param name Required. Name of the ServiceConnectionToken to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists ServiceConnectionTokens in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionTokens.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource's name. ex. projects/123/locations/us-east1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListServiceConnectionTokensResponse.
 *
 *  Lists ServiceConnectionTokens in a given project and location.
 *
 *  @param parent Required. The parent resource's name. ex.
 *    projects/123/locations/us-east1
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionTokensList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate : GTLRNetworkconnectivityQuery

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. Unique id for the spoke to create. */
@property(nonatomic, copy, nullable) NSString *spokeId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a Network Connectivity Center spoke.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the spoke to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a Network Connectivity Center spoke.
 *
 *  @param name Required. The name of the spoke to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet : GTLRNetworkconnectivityQuery

/** Required. The name of the spoke resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Spoke.
 *
 *  Gets details about a Network Connectivity Center spoke.
 *
 *  @param name Required. The name of the spoke resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.spokes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the Network Connectivity Center spokes in a specified project and
 *  location.
 *
 *  Method: networkconnectivity.projects.locations.spokes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList : GTLRNetworkconnectivityQuery

/** An expression that filters the list of results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results to return per page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListSpokesResponse.
 *
 *  Lists the Network Connectivity Center spokes in a specified project and
 *  location.
 *
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of the spoke. Spoke names must be unique. They use the
 *  following form:
 *  `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server knows to ignore the request
 *  if it has already been completed. The server guarantees that a request
 *  doesn't result in creation of duplicate commitments for at least 60 minutes.
 *  For example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check to see whether the original operation was received. If
 *  it was, the server ignores the second request. This behavior prevents
 *  clients from mistakenly creating duplicate commitments. The request ID must
 *  be a valid UUID, with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. In the case of an update to an existing spoke, field mask is used
 *  to specify the fields to be overwritten. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it is in the mask. If the user does not provide a mask, then
 *  all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a Network Connectivity Center spoke.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param name Immutable. The name of the spoke. Spoke names must be unique.
 *    They use the following form:
 *    `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.spokes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.spokes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new Transport in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.transports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsCreate : GTLRNetworkconnectivityQuery

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. Id of the requesting object */
@property(nonatomic, copy, nullable) NSString *transportId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new Transport in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_Transport to include in the
 *    query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Transport *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Transport.
 *
 *  Method: networkconnectivity.projects.locations.transports.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsDelete : GTLRNetworkconnectivityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single Transport.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Transport.
 *
 *  Method: networkconnectivity.projects.locations.transports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsGet : GTLRNetworkconnectivityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Transport.
 *
 *  Gets details of a single Transport.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Transports in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.transports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsList : GTLRNetworkconnectivityQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListTransportsRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListTransportsResponse.
 *
 *  Lists Transports in a given project and location.
 *
 *  @param parent Required. Parent value for ListTransportsRequest
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Transport.
 *
 *  Method: networkconnectivity.projects.locations.transports.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsPatch : GTLRNetworkconnectivityQuery

/** Identifier. name of resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Transport resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields present in the request will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single Transport.
 *
 *  @param object The @c GTLRNetworkconnectivity_Transport to include in the
 *    query.
 *  @param name Identifier. name of resource
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsTransportsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Transport *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
