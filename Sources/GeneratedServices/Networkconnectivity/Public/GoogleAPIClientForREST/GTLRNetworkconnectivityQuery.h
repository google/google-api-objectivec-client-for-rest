// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1)
// Description:
//   This API enables connectivity with and between Google Cloud resources.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRNetworkconnectivityObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other networkconnectivity query classes.
 */
@interface GTLRNetworkconnectivityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: networkconnectivity.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGet : GTLRNetworkconnectivityQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Network Connectivity Center hub in the specified project.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate : GTLRNetworkconnectivityQuery

/** Required. A unique identifier for the hub. */
@property(nonatomic, copy, nullable) NSString *hubId;

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new Network Connectivity Center hub in the specified project.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the hub to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a Network Connectivity Center hub.
 *
 *  @param name Required. The name of the hub to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet : GTLRNetworkconnectivityQuery

/** Required. The name of the hub resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Hub.
 *
 *  Gets details about a Network Connectivity Center hub.
 *
 *  @param name Required. The name of the hub resource to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the Network Connectivity Center hubs associated with a given project.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList : GTLRNetworkconnectivityQuery

/** An expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListHubsResponse.
 *
 *  Lists the Network Connectivity Center hubs associated with a given project.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the description and/or labels of a Network Connectivity Center hub.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of the hub. Hub names must be unique. They use the
 *  following form: `projects/{project_number}/locations/global/hubs/{hub_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. In the case of an update to an existing hub, field mask is used to
 *  specify the fields to be overwritten. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it is in the mask. If the user does not provide a mask, then
 *  all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the description and/or labels of a Network Connectivity Center hub.
 *
 *  @param object The @c GTLRNetworkconnectivity_Hub to include in the query.
 *  @param name Immutable. The name of the hub. Hub names must be unique. They
 *    use the following form:
 *    `projects/{project_number}/locations/global/hubs/{hub_id}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Hub *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.hubs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalHubsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsGlobalPolicyBasedRoutesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new InternalRange in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesCreate : GTLRNetworkconnectivityQuery

/**
 *  Optional. Resource ID (i.e. 'foo' in
 *  '[...]/projects/p/locations/l/internalRanges/foo') See
 *  https://google.aip.dev/122#resource-id-segments Unique per location.
 */
@property(nonatomic, copy, nullable) NSString *internalRangeId;

/** Required. The parent resource's name of the InternalRange. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a new InternalRange in a given project and location.
 *
 *  @param object The @c GTLRNetworkconnectivity_InternalRange to include in the
 *    query.
 *  @param parent Required. The parent resource's name of the InternalRange.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_InternalRange *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single InternalRange.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the InternalRange to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a single InternalRange.
 *
 *  @param name Required. The name of the InternalRange to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single InternalRange.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGet : GTLRNetworkconnectivityQuery

/** Required. Name of the InternalRange to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_InternalRange.
 *
 *  Gets details of a single InternalRange.
 *
 *  @param name Required. Name of the InternalRange to get.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists InternalRanges in a given project and location.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesList : GTLRNetworkconnectivityQuery

/** A filter expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource's name. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListInternalRangesResponse.
 *
 *  Lists InternalRanges in a given project and location.
 *
 *  @param parent Required. The parent resource's name.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single InternalRange.
 *
 *  Method: networkconnectivity.projects.locations.internalRanges.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of a InternalRange. Format:
 *  projects/{project}/locations/{location}/internalRanges/{internal_range} See:
 *  https://google.aip.dev/122#fields-representing-resource-names
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and t he request
 *  times out. If you make the request again with the same request ID, the
 *  server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  InternalRange resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single InternalRange.
 *
 *  @param object The @c GTLRNetworkconnectivity_InternalRange to include in the
 *    query.
 *  @param name Immutable. The name of a InternalRange. Format:
 *    projects/{project}/locations/{location}/internalRanges/{internal_range}
 *    See: https://google.aip.dev/122#fields-representing-resource-names
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsInternalRangesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_InternalRange *)object
                           name:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: networkconnectivity.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsList : GTLRNetworkconnectivityQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel : GTLRNetworkconnectivityQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networkconnectivity.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete : GTLRNetworkconnectivityQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networkconnectivity.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet : GTLRNetworkconnectivityQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: networkconnectivity.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList : GTLRNetworkconnectivityQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceClasses.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceClassesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionMapsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsServiceConnectionPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate : GTLRNetworkconnectivityQuery

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. Unique id for the spoke to create. */
@property(nonatomic, copy, nullable) NSString *spokeId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Creates a Network Connectivity Center spoke.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete : GTLRNetworkconnectivityQuery

/** Required. The name of the spoke to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Deletes a Network Connectivity Center spoke.
 *
 *  @param name Required. The name of the spoke to delete.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details about a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet : GTLRNetworkconnectivityQuery

/** Required. The name of the spoke resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Spoke.
 *
 *  Gets details about a Network Connectivity Center spoke.
 *
 *  @param name Required. The name of the spoke resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networkconnectivity.projects.locations.spokes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the Network Connectivity Center spokes in a specified project and
 *  location.
 *
 *  Method: networkconnectivity.projects.locations.spokes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList : GTLRNetworkconnectivityQuery

/** An expression that filters the results listed in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Sort the results by a certain order. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of results per page that should be returned. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkconnectivity_ListSpokesResponse.
 *
 *  Lists the Network Connectivity Center spokes in a specified project and
 *  location.
 *
 *  @param parent Required. The parent resource.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a Network Connectivity Center spoke.
 *
 *  Method: networkconnectivity.projects.locations.spokes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch : GTLRNetworkconnectivityQuery

/**
 *  Immutable. The name of the spoke. Spoke names must be unique. They use the
 *  following form:
 *  `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique request ID (optional). If you specify this ID, you can
 *  use it in cases when you need to retry your request. When you need to retry,
 *  this ID lets the server know that it can ignore the request if it has
 *  already been completed. The server guarantees that for at least 60 minutes
 *  after the first request. For example, consider a situation where you make an
 *  initial request and the request times out. If you make the request again
 *  with the same request ID, the server can check to see whether the original
 *  operation was received. If it was, the server ignores the second request.
 *  This behavior prevents clients from mistakenly creating duplicate
 *  commitments. The request ID must be a valid UUID, with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. In the case of an update to an existing spoke, field mask is used
 *  to specify the fields to be overwritten. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it is in the mask. If the user does not provide a mask, then
 *  all fields are overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkconnectivity_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a Network Connectivity Center spoke.
 *
 *  @param object The @c GTLRNetworkconnectivity_Spoke to include in the query.
 *  @param name Immutable. The name of the spoke. Spoke names must be unique.
 *    They use the following form:
 *    `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_Spoke *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networkconnectivity.projects.locations.spokes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkconnectivity_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networkconnectivity.projects.locations.spokes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkconnectivityCloudPlatform
 */
@interface GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions : GTLRNetworkconnectivityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkconnectivity_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRNetworkconnectivity_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkconnectivityQuery_ProjectsLocationsSpokesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkconnectivity_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
