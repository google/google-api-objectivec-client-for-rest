// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1)
// Description:
//   This API enables connectivity with and between Google Cloud resources.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest

#import <GoogleAPIClientForREST/GTLRNetworkconnectivityObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRNetworkconnectivity_AuditLogConfig.logType
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRNetworkconnectivity_ConsumerPscConfig.state
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_ConnectionPolicyMissing = @"CONNECTION_POLICY_MISSING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_Valid = @"VALID";

// GTLRNetworkconnectivity_ConsumerPscConnection.errorType
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ConnectionErrorTypeUnspecified = @"CONNECTION_ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorConsumerSide = @"ERROR_CONSUMER_SIDE";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorInternal = @"ERROR_INTERNAL";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorProducerSide = @"ERROR_PRODUCER_SIDE";

// GTLRNetworkconnectivity_ConsumerPscConnection.state
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRNetworkconnectivity_Hub.state
NSString * const kGTLRNetworkconnectivity_Hub_State_Active     = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Hub_State_Creating   = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Hub_State_Deleting   = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Hub_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Hub_State_Updating   = @"UPDATING";

// GTLRNetworkconnectivity_InternalRange.overlaps
NSString * const kGTLRNetworkconnectivity_InternalRange_Overlaps_OverlapRouteRange = @"OVERLAP_ROUTE_RANGE";
NSString * const kGTLRNetworkconnectivity_InternalRange_Overlaps_OverlapUnspecified = @"OVERLAP_UNSPECIFIED";

// GTLRNetworkconnectivity_InternalRange.peering
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_ForPeer = @"FOR_PEER";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_ForSelf = @"FOR_SELF";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_NotShared = @"NOT_SHARED";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_PeeringUnspecified = @"PEERING_UNSPECIFIED";

// GTLRNetworkconnectivity_InternalRange.usage
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_ExternalToVpc = @"EXTERNAL_TO_VPC";
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_ForVpc = @"FOR_VPC";
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_UsageUnspecified = @"USAGE_UNSPECIFIED";

// GTLRNetworkconnectivity_LocationMetadata.locationFeatures
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_LocationFeatureUnspecified = @"LOCATION_FEATURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_SiteToCloudSpokes = @"SITE_TO_CLOUD_SPOKES";
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_SiteToSiteSpokes = @"SITE_TO_SITE_SPOKES";

// GTLRNetworkconnectivity_PscConnection.errorType
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ConnectionErrorTypeUnspecified = @"CONNECTION_ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorConsumerSide = @"ERROR_CONSUMER_SIDE";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorInternal = @"ERROR_INTERNAL";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorProducerSide = @"ERROR_PRODUCER_SIDE";

// GTLRNetworkconnectivity_PscConnection.state
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRNetworkconnectivity_ServiceConnectionMap.infrastructure
NSString * const kGTLRNetworkconnectivity_ServiceConnectionMap_Infrastructure_InfrastructureUnspecified = @"INFRASTRUCTURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ServiceConnectionMap_Infrastructure_Psc = @"PSC";

// GTLRNetworkconnectivity_ServiceConnectionPolicy.infrastructure
NSString * const kGTLRNetworkconnectivity_ServiceConnectionPolicy_Infrastructure_InfrastructureUnspecified = @"INFRASTRUCTURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ServiceConnectionPolicy_Infrastructure_Psc = @"PSC";

// GTLRNetworkconnectivity_Spoke.state
NSString * const kGTLRNetworkconnectivity_Spoke_State_Active   = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Updating = @"UPDATING";

// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AuditConfig
//

@implementation GTLRNetworkconnectivity_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRNetworkconnectivity_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AuditLogConfig
//

@implementation GTLRNetworkconnectivity_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Binding
//

@implementation GTLRNetworkconnectivity_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConfig
//

@implementation GTLRNetworkconnectivity_ConsumerPscConfig
@dynamic disableGlobalAccess, network, project, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConnection
//

@implementation GTLRNetworkconnectivity_ConsumerPscConnection
@dynamic error, errorType, forwardingRule, gceOperation, ip, network, project,
         pscConnectionId, serviceAttachmentUri, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Empty
//

@implementation GTLRNetworkconnectivity_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Expr
//

@implementation GTLRNetworkconnectivity_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRNetworkconnectivity_GoogleLongrunningOperation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation_Response
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcStatus
//

@implementation GTLRNetworkconnectivity_GoogleRpcStatus
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item
//

@implementation GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Hub
//

@implementation GTLRNetworkconnectivity_Hub
@dynamic createTime, descriptionProperty, labels, name, routingVpcs, state,
         uniqueId, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routingVpcs" : [GTLRNetworkconnectivity_RoutingVPC class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Hub_Labels
//

@implementation GTLRNetworkconnectivity_Hub_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_InternalRange
//

@implementation GTLRNetworkconnectivity_InternalRange
@dynamic createTime, descriptionProperty, ipCidrRange, labels, name, network,
         overlaps, peering, prefixLength, targetCidrRange, updateTime, usage,
         users;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overlaps" : [NSString class],
    @"targetCidrRange" : [NSString class],
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_InternalRange_Labels
//

@implementation GTLRNetworkconnectivity_InternalRange_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedInterconnectAttachments
//

@implementation GTLRNetworkconnectivity_LinkedInterconnectAttachments
@dynamic siteToSiteDataTransfer, uris, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"uris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedRouterApplianceInstances
//

@implementation GTLRNetworkconnectivity_LinkedRouterApplianceInstances
@dynamic instances, siteToSiteDataTransfer, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRNetworkconnectivity_RouterApplianceInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedVpnTunnels
//

@implementation GTLRNetworkconnectivity_LinkedVpnTunnels
@dynamic siteToSiteDataTransfer, uris, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"uris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListHubsResponse
//

@implementation GTLRNetworkconnectivity_ListHubsResponse
@dynamic hubs, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hubs" : [GTLRNetworkconnectivity_Hub class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"hubs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListInternalRangesResponse
//

@implementation GTLRNetworkconnectivity_ListInternalRangesResponse
@dynamic internalRanges, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"internalRanges" : [GTLRNetworkconnectivity_InternalRange class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"internalRanges";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListLocationsResponse
//

@implementation GTLRNetworkconnectivity_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRNetworkconnectivity_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceClassesResponse
//

@implementation GTLRNetworkconnectivity_ListServiceClassesResponse
@dynamic nextPageToken, serviceClasses, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceClasses" : [GTLRNetworkconnectivity_ServiceClass class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceClasses";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionMapsResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionMapsResponse
@dynamic nextPageToken, serviceConnectionMaps, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionMaps" : [GTLRNetworkconnectivity_ServiceConnectionMap class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionMaps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionPoliciesResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionPoliciesResponse
@dynamic nextPageToken, serviceConnectionPolicies, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionPolicies" : [GTLRNetworkconnectivity_ServiceConnectionPolicy class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionTokensResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionTokensResponse
@dynamic nextPageToken, serviceConnectionTokens, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionTokens" : [GTLRNetworkconnectivity_ServiceConnectionToken class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionTokens";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListSpokesResponse
//

@implementation GTLRNetworkconnectivity_ListSpokesResponse
@dynamic nextPageToken, spokes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"spokes" : [GTLRNetworkconnectivity_Spoke class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"spokes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location
//

@implementation GTLRNetworkconnectivity_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location_Labels
//

@implementation GTLRNetworkconnectivity_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location_Metadata
//

@implementation GTLRNetworkconnectivity_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LocationMetadata
//

@implementation GTLRNetworkconnectivity_LocationMetadata
@dynamic locationFeatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locationFeatures" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_OperationMetadata
//

@implementation GTLRNetworkconnectivity_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Policy
//

@implementation GTLRNetworkconnectivity_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRNetworkconnectivity_AuditConfig class],
    @"bindings" : [GTLRNetworkconnectivity_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ProducerPscConfig
//

@implementation GTLRNetworkconnectivity_ProducerPscConfig
@dynamic serviceAttachmentUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PscConfig
//

@implementation GTLRNetworkconnectivity_PscConfig
@dynamic limit, subnetworks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subnetworks" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PscConnection
//

@implementation GTLRNetworkconnectivity_PscConnection
@dynamic consumerAddress, consumerForwardingRule, consumerTargetProject, error,
         errorType, gceOperation, pscConnectionId, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RouterApplianceInstance
//

@implementation GTLRNetworkconnectivity_RouterApplianceInstance
@dynamic ipAddress, virtualMachine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RoutingVPC
//

@implementation GTLRNetworkconnectivity_RoutingVPC
@dynamic requiredForNewSiteToSiteDataTransferSpokes, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceClass
//

@implementation GTLRNetworkconnectivity_ServiceClass
@dynamic createTime, descriptionProperty, labels, name, serviceClass,
         serviceConnectionMaps, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionMaps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceClass_Labels
//

@implementation GTLRNetworkconnectivity_ServiceClass_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionMap
//

@implementation GTLRNetworkconnectivity_ServiceConnectionMap
@dynamic consumerPscConfigs, consumerPscConnections, createTime,
         descriptionProperty, infrastructure, labels, name, producerPscConfigs,
         serviceClass, serviceClassUri, token, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"consumerPscConfigs" : [GTLRNetworkconnectivity_ConsumerPscConfig class],
    @"consumerPscConnections" : [GTLRNetworkconnectivity_ConsumerPscConnection class],
    @"producerPscConfigs" : [GTLRNetworkconnectivity_ProducerPscConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionMap_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionMap_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionPolicy
//

@implementation GTLRNetworkconnectivity_ServiceConnectionPolicy
@dynamic createTime, descriptionProperty, infrastructure, labels, name, network,
         pscConfig, pscConnections, serviceClass, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pscConnections" : [GTLRNetworkconnectivity_PscConnection class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionPolicy_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionPolicy_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionToken
//

@implementation GTLRNetworkconnectivity_ServiceConnectionToken
@dynamic createTime, descriptionProperty, expireTime, labels, name, network,
         token, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionToken_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionToken_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SetIamPolicyRequest
//

@implementation GTLRNetworkconnectivity_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Spoke
//

@implementation GTLRNetworkconnectivity_Spoke
@dynamic createTime, descriptionProperty, hub, labels,
         linkedInterconnectAttachments, linkedRouterApplianceInstances,
         linkedVpnTunnels, name, state, uniqueId, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Spoke_Labels
//

@implementation GTLRNetworkconnectivity_Spoke_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_TestIamPermissionsRequest
//

@implementation GTLRNetworkconnectivity_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_TestIamPermissionsResponse
//

@implementation GTLRNetworkconnectivity_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end
