// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Connectivity API (networkconnectivity/v1)
// Description:
//   This API enables connectivity with and between Google Cloud resources.
// Documentation:
//   https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest

#import <GoogleAPIClientForREST/GTLRNetworkconnectivityObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRNetworkconnectivity_AuditLogConfig.logType
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRNetworkconnectivity_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRNetworkconnectivity_ConsumerPscConfig.state
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_ConnectionPolicyMissing = @"CONNECTION_POLICY_MISSING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_ConsumerInstanceProjectNotAllowlisted = @"CONSUMER_INSTANCE_PROJECT_NOT_ALLOWLISTED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_PolicyLimitReached = @"POLICY_LIMIT_REACHED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConfig_State_Valid = @"VALID";

// GTLRNetworkconnectivity_ConsumerPscConnection.errorType
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ConnectionErrorTypeUnspecified = @"CONNECTION_ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorConsumerSide = @"ERROR_CONSUMER_SIDE";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorInternal = @"ERROR_INTERNAL";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_ErrorType_ErrorProducerSide = @"ERROR_PRODUCER_SIDE";

// GTLRNetworkconnectivity_ConsumerPscConnection.state
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_ConsumerPscConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRNetworkconnectivity_Filter.protocolVersion
NSString * const kGTLRNetworkconnectivity_Filter_ProtocolVersion_Ipv4 = @"IPV4";
NSString * const kGTLRNetworkconnectivity_Filter_ProtocolVersion_ProtocolVersionUnspecified = @"PROTOCOL_VERSION_UNSPECIFIED";

// GTLRNetworkconnectivity_Group.state
NSString * const kGTLRNetworkconnectivity_Group_State_Accepting = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_Group_State_Active   = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Group_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Group_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Group_State_Inactive = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_Group_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_Group_State_Rejecting = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_Group_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Group_State_Updating = @"UPDATING";

// GTLRNetworkconnectivity_Hub.policyMode
NSString * const kGTLRNetworkconnectivity_Hub_PolicyMode_PolicyModeUnspecified = @"POLICY_MODE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Hub_PolicyMode_Preset = @"PRESET";

// GTLRNetworkconnectivity_Hub.presetTopology
NSString * const kGTLRNetworkconnectivity_Hub_PresetTopology_Mesh = @"MESH";
NSString * const kGTLRNetworkconnectivity_Hub_PresetTopology_PresetTopologyUnspecified = @"PRESET_TOPOLOGY_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Hub_PresetTopology_Star = @"STAR";

// GTLRNetworkconnectivity_Hub.state
NSString * const kGTLRNetworkconnectivity_Hub_State_Accepting  = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_Hub_State_Active     = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Hub_State_Creating   = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Hub_State_Deleting   = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Hub_State_Inactive   = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_Hub_State_Obsolete   = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_Hub_State_Rejecting  = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_Hub_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Hub_State_Updating   = @"UPDATING";

// GTLRNetworkconnectivity_InternalRange.overlaps
NSString * const kGTLRNetworkconnectivity_InternalRange_Overlaps_OverlapExistingSubnetRange = @"OVERLAP_EXISTING_SUBNET_RANGE";
NSString * const kGTLRNetworkconnectivity_InternalRange_Overlaps_OverlapRouteRange = @"OVERLAP_ROUTE_RANGE";
NSString * const kGTLRNetworkconnectivity_InternalRange_Overlaps_OverlapUnspecified = @"OVERLAP_UNSPECIFIED";

// GTLRNetworkconnectivity_InternalRange.peering
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_ForPeer = @"FOR_PEER";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_ForSelf = @"FOR_SELF";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_NotShared = @"NOT_SHARED";
NSString * const kGTLRNetworkconnectivity_InternalRange_Peering_PeeringUnspecified = @"PEERING_UNSPECIFIED";

// GTLRNetworkconnectivity_InternalRange.usage
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_ExternalToVpc = @"EXTERNAL_TO_VPC";
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_ForMigration = @"FOR_MIGRATION";
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_ForVpc = @"FOR_VPC";
NSString * const kGTLRNetworkconnectivity_InternalRange_Usage_UsageUnspecified = @"USAGE_UNSPECIFIED";

// GTLRNetworkconnectivity_LocationMetadata.locationFeatures
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_LocationFeatureUnspecified = @"LOCATION_FEATURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_SiteToCloudSpokes = @"SITE_TO_CLOUD_SPOKES";
NSString * const kGTLRNetworkconnectivity_LocationMetadata_LocationFeatures_SiteToSiteSpokes = @"SITE_TO_SITE_SPOKES";

// GTLRNetworkconnectivity_PolicyBasedRoute.nextHopOtherRoutes
NSString * const kGTLRNetworkconnectivity_PolicyBasedRoute_NextHopOtherRoutes_DefaultRouting = @"DEFAULT_ROUTING";
NSString * const kGTLRNetworkconnectivity_PolicyBasedRoute_NextHopOtherRoutes_OtherRoutesUnspecified = @"OTHER_ROUTES_UNSPECIFIED";

// GTLRNetworkconnectivity_PscConfig.producerInstanceLocation
NSString * const kGTLRNetworkconnectivity_PscConfig_ProducerInstanceLocation_CustomResourceHierarchyLevels = @"CUSTOM_RESOURCE_HIERARCHY_LEVELS";
NSString * const kGTLRNetworkconnectivity_PscConfig_ProducerInstanceLocation_ProducerInstanceLocationUnspecified = @"PRODUCER_INSTANCE_LOCATION_UNSPECIFIED";

// GTLRNetworkconnectivity_PscConnection.errorType
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ConnectionErrorTypeUnspecified = @"CONNECTION_ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorConsumerSide = @"ERROR_CONSUMER_SIDE";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorInternal = @"ERROR_INTERNAL";
NSString * const kGTLRNetworkconnectivity_PscConnection_ErrorType_ErrorProducerSide = @"ERROR_PRODUCER_SIDE";

// GTLRNetworkconnectivity_PscConnection.state
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_PscConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRNetworkconnectivity_RegionalEndpoint.accessType
NSString * const kGTLRNetworkconnectivity_RegionalEndpoint_AccessType_AccessTypeUnspecified = @"ACCESS_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_RegionalEndpoint_AccessType_Global = @"GLOBAL";
NSString * const kGTLRNetworkconnectivity_RegionalEndpoint_AccessType_Regional = @"REGIONAL";

// GTLRNetworkconnectivity_Route.state
NSString * const kGTLRNetworkconnectivity_Route_State_Accepting = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_Route_State_Active   = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Route_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Route_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Route_State_Inactive = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_Route_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_Route_State_Rejecting = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_Route_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Route_State_Updating = @"UPDATING";

// GTLRNetworkconnectivity_Route.type
NSString * const kGTLRNetworkconnectivity_Route_Type_DynamicRoute = @"DYNAMIC_ROUTE";
NSString * const kGTLRNetworkconnectivity_Route_Type_RouteTypeUnspecified = @"ROUTE_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Route_Type_VpcPrimarySubnet = @"VPC_PRIMARY_SUBNET";
NSString * const kGTLRNetworkconnectivity_Route_Type_VpcSecondarySubnet = @"VPC_SECONDARY_SUBNET";

// GTLRNetworkconnectivity_RouteTable.state
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Accepting = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Inactive = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Rejecting = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_RouteTable_State_Updating = @"UPDATING";

// GTLRNetworkconnectivity_ServiceConnectionMap.infrastructure
NSString * const kGTLRNetworkconnectivity_ServiceConnectionMap_Infrastructure_InfrastructureUnspecified = @"INFRASTRUCTURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ServiceConnectionMap_Infrastructure_Psc = @"PSC";

// GTLRNetworkconnectivity_ServiceConnectionPolicy.infrastructure
NSString * const kGTLRNetworkconnectivity_ServiceConnectionPolicy_Infrastructure_InfrastructureUnspecified = @"INFRASTRUCTURE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_ServiceConnectionPolicy_Infrastructure_Psc = @"PSC";

// GTLRNetworkconnectivity_Spoke.spokeType
NSString * const kGTLRNetworkconnectivity_Spoke_SpokeType_InterconnectAttachment = @"INTERCONNECT_ATTACHMENT";
NSString * const kGTLRNetworkconnectivity_Spoke_SpokeType_RouterAppliance = @"ROUTER_APPLIANCE";
NSString * const kGTLRNetworkconnectivity_Spoke_SpokeType_SpokeTypeUnspecified = @"SPOKE_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Spoke_SpokeType_VpcNetwork = @"VPC_NETWORK";
NSString * const kGTLRNetworkconnectivity_Spoke_SpokeType_VpnTunnel = @"VPN_TUNNEL";

// GTLRNetworkconnectivity_Spoke.state
NSString * const kGTLRNetworkconnectivity_Spoke_State_Accepting = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Active   = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Inactive = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Rejecting = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_Spoke_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_Spoke_State_Updating = @"UPDATING";

// GTLRNetworkconnectivity_SpokeStateCount.state
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Accepting = @"ACCEPTING";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Active = @"ACTIVE";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Creating = @"CREATING";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Deleting = @"DELETING";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Inactive = @"INACTIVE";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Rejecting = @"REJECTING";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_SpokeStateCount_State_Updating = @"UPDATING";

// GTLRNetworkconnectivity_SpokeStateReasonCount.stateReasonCode
NSString * const kGTLRNetworkconnectivity_SpokeStateReasonCount_StateReasonCode_CodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_SpokeStateReasonCount_StateReasonCode_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_SpokeStateReasonCount_StateReasonCode_Paused = @"PAUSED";
NSString * const kGTLRNetworkconnectivity_SpokeStateReasonCount_StateReasonCode_PendingReview = @"PENDING_REVIEW";
NSString * const kGTLRNetworkconnectivity_SpokeStateReasonCount_StateReasonCode_Rejected = @"REJECTED";

// GTLRNetworkconnectivity_SpokeTypeCount.spokeType
NSString * const kGTLRNetworkconnectivity_SpokeTypeCount_SpokeType_InterconnectAttachment = @"INTERCONNECT_ATTACHMENT";
NSString * const kGTLRNetworkconnectivity_SpokeTypeCount_SpokeType_RouterAppliance = @"ROUTER_APPLIANCE";
NSString * const kGTLRNetworkconnectivity_SpokeTypeCount_SpokeType_SpokeTypeUnspecified = @"SPOKE_TYPE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_SpokeTypeCount_SpokeType_VpcNetwork = @"VPC_NETWORK";
NSString * const kGTLRNetworkconnectivity_SpokeTypeCount_SpokeType_VpnTunnel = @"VPN_TUNNEL";

// GTLRNetworkconnectivity_StateReason.code
NSString * const kGTLRNetworkconnectivity_StateReason_Code_CodeUnspecified = @"CODE_UNSPECIFIED";
NSString * const kGTLRNetworkconnectivity_StateReason_Code_Failed = @"FAILED";
NSString * const kGTLRNetworkconnectivity_StateReason_Code_Paused = @"PAUSED";
NSString * const kGTLRNetworkconnectivity_StateReason_Code_PendingReview = @"PENDING_REVIEW";
NSString * const kGTLRNetworkconnectivity_StateReason_Code_Rejected = @"REJECTED";

// GTLRNetworkconnectivity_Warnings.code
NSString * const kGTLRNetworkconnectivity_Warnings_Code_ResourceBeingModified = @"RESOURCE_BEING_MODIFIED";
NSString * const kGTLRNetworkconnectivity_Warnings_Code_ResourceNotActive = @"RESOURCE_NOT_ACTIVE";
NSString * const kGTLRNetworkconnectivity_Warnings_Code_WarningUnspecified = @"WARNING_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AcceptHubSpokeRequest
//

@implementation GTLRNetworkconnectivity_AcceptHubSpokeRequest
@dynamic requestId, spokeUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AcceptHubSpokeResponse
//

@implementation GTLRNetworkconnectivity_AcceptHubSpokeResponse
@dynamic spoke;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AuditConfig
//

@implementation GTLRNetworkconnectivity_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRNetworkconnectivity_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AuditLogConfig
//

@implementation GTLRNetworkconnectivity_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_AutoAccept
//

@implementation GTLRNetworkconnectivity_AutoAccept
@dynamic autoAcceptProjects;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoAcceptProjects" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Binding
//

@implementation GTLRNetworkconnectivity_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConfig
//

@implementation GTLRNetworkconnectivity_ConsumerPscConfig
@dynamic consumerInstanceProject, disableGlobalAccess, network,
         producerInstanceId, producerInstanceMetadata, project,
         serviceAttachmentIpAddressMap, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConfig_ProducerInstanceMetadata
//

@implementation GTLRNetworkconnectivity_ConsumerPscConfig_ProducerInstanceMetadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConfig_ServiceAttachmentIpAddressMap
//

@implementation GTLRNetworkconnectivity_ConsumerPscConfig_ServiceAttachmentIpAddressMap

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConnection
//

@implementation GTLRNetworkconnectivity_ConsumerPscConnection
@dynamic error, errorInfo, errorType, forwardingRule, gceOperation, ip, network,
         producerInstanceId, producerInstanceMetadata, project, pscConnectionId,
         selectedSubnetwork, serviceAttachmentUri, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ConsumerPscConnection_ProducerInstanceMetadata
//

@implementation GTLRNetworkconnectivity_ConsumerPscConnection_ProducerInstanceMetadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Empty
//

@implementation GTLRNetworkconnectivity_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Expr
//

@implementation GTLRNetworkconnectivity_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Filter
//

@implementation GTLRNetworkconnectivity_Filter
@dynamic destRange, ipProtocol, protocolVersion, srcRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningCancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRNetworkconnectivity_GoogleLongrunningOperation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleLongrunningOperation_Response
//

@implementation GTLRNetworkconnectivity_GoogleLongrunningOperation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcErrorInfo
//

@implementation GTLRNetworkconnectivity_GoogleRpcErrorInfo
@dynamic domain, metadata, reason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcErrorInfo_Metadata
//

@implementation GTLRNetworkconnectivity_GoogleRpcErrorInfo_Metadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcStatus
//

@implementation GTLRNetworkconnectivity_GoogleRpcStatus
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item
//

@implementation GTLRNetworkconnectivity_GoogleRpcStatus_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Group
//

@implementation GTLRNetworkconnectivity_Group
@dynamic autoAccept, createTime, descriptionProperty, labels, name, routeTable,
         state, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Group_Labels
//

@implementation GTLRNetworkconnectivity_Group_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Hub
//

@implementation GTLRNetworkconnectivity_Hub
@dynamic createTime, descriptionProperty, exportPsc, labels, name, policyMode,
         presetTopology, routeTables, routingVpcs, spokeSummary, state,
         uniqueId, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routeTables" : [NSString class],
    @"routingVpcs" : [GTLRNetworkconnectivity_RoutingVPC class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Hub_Labels
//

@implementation GTLRNetworkconnectivity_Hub_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_InterconnectAttachment
//

@implementation GTLRNetworkconnectivity_InterconnectAttachment
@dynamic region;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_InternalRange
//

@implementation GTLRNetworkconnectivity_InternalRange
@dynamic createTime, descriptionProperty, ipCidrRange, labels, migration, name,
         network, overlaps, peering, prefixLength, targetCidrRange, updateTime,
         usage, users;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overlaps" : [NSString class],
    @"targetCidrRange" : [NSString class],
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_InternalRange_Labels
//

@implementation GTLRNetworkconnectivity_InternalRange_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedInterconnectAttachments
//

@implementation GTLRNetworkconnectivity_LinkedInterconnectAttachments
@dynamic includeImportRanges, siteToSiteDataTransfer, uris, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeImportRanges" : [NSString class],
    @"uris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedRouterApplianceInstances
//

@implementation GTLRNetworkconnectivity_LinkedRouterApplianceInstances
@dynamic includeImportRanges, instances, siteToSiteDataTransfer, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeImportRanges" : [NSString class],
    @"instances" : [GTLRNetworkconnectivity_RouterApplianceInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedVpcNetwork
//

@implementation GTLRNetworkconnectivity_LinkedVpcNetwork
@dynamic excludeExportRanges, includeExportRanges, producerVpcSpokes, uri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"excludeExportRanges" : [NSString class],
    @"includeExportRanges" : [NSString class],
    @"producerVpcSpokes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LinkedVpnTunnels
//

@implementation GTLRNetworkconnectivity_LinkedVpnTunnels
@dynamic includeImportRanges, siteToSiteDataTransfer, uris, vpcNetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeImportRanges" : [NSString class],
    @"uris" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListGroupsResponse
//

@implementation GTLRNetworkconnectivity_ListGroupsResponse
@dynamic groups, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"groups" : [GTLRNetworkconnectivity_Group class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"groups";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListHubSpokesResponse
//

@implementation GTLRNetworkconnectivity_ListHubSpokesResponse
@dynamic nextPageToken, spokes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"spokes" : [GTLRNetworkconnectivity_Spoke class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"spokes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListHubsResponse
//

@implementation GTLRNetworkconnectivity_ListHubsResponse
@dynamic hubs, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hubs" : [GTLRNetworkconnectivity_Hub class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"hubs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListInternalRangesResponse
//

@implementation GTLRNetworkconnectivity_ListInternalRangesResponse
@dynamic internalRanges, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"internalRanges" : [GTLRNetworkconnectivity_InternalRange class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"internalRanges";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListLocationsResponse
//

@implementation GTLRNetworkconnectivity_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRNetworkconnectivity_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListPolicyBasedRoutesResponse
//

@implementation GTLRNetworkconnectivity_ListPolicyBasedRoutesResponse
@dynamic nextPageToken, policyBasedRoutes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyBasedRoutes" : [GTLRNetworkconnectivity_PolicyBasedRoute class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"policyBasedRoutes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListRegionalEndpointsResponse
//

@implementation GTLRNetworkconnectivity_ListRegionalEndpointsResponse
@dynamic nextPageToken, regionalEndpoints, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"regionalEndpoints" : [GTLRNetworkconnectivity_RegionalEndpoint class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"regionalEndpoints";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListRoutesResponse
//

@implementation GTLRNetworkconnectivity_ListRoutesResponse
@dynamic nextPageToken, routes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routes" : [GTLRNetworkconnectivity_Route class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"routes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListRouteTablesResponse
//

@implementation GTLRNetworkconnectivity_ListRouteTablesResponse
@dynamic nextPageToken, routeTables, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routeTables" : [GTLRNetworkconnectivity_RouteTable class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"routeTables";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceClassesResponse
//

@implementation GTLRNetworkconnectivity_ListServiceClassesResponse
@dynamic nextPageToken, serviceClasses, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceClasses" : [GTLRNetworkconnectivity_ServiceClass class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceClasses";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionMapsResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionMapsResponse
@dynamic nextPageToken, serviceConnectionMaps, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionMaps" : [GTLRNetworkconnectivity_ServiceConnectionMap class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionMaps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionPoliciesResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionPoliciesResponse
@dynamic nextPageToken, serviceConnectionPolicies, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionPolicies" : [GTLRNetworkconnectivity_ServiceConnectionPolicy class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListServiceConnectionTokensResponse
//

@implementation GTLRNetworkconnectivity_ListServiceConnectionTokensResponse
@dynamic nextPageToken, serviceConnectionTokens, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceConnectionTokens" : [GTLRNetworkconnectivity_ServiceConnectionToken class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"serviceConnectionTokens";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ListSpokesResponse
//

@implementation GTLRNetworkconnectivity_ListSpokesResponse
@dynamic nextPageToken, spokes, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"spokes" : [GTLRNetworkconnectivity_Spoke class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"spokes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location
//

@implementation GTLRNetworkconnectivity_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location_Labels
//

@implementation GTLRNetworkconnectivity_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Location_Metadata
//

@implementation GTLRNetworkconnectivity_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_LocationMetadata
//

@implementation GTLRNetworkconnectivity_LocationMetadata
@dynamic locationFeatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locationFeatures" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Migration
//

@implementation GTLRNetworkconnectivity_Migration
@dynamic source, target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_NextHopInterconnectAttachment
//

@implementation GTLRNetworkconnectivity_NextHopInterconnectAttachment
@dynamic siteToSiteDataTransfer, uri, vpcNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_NextHopRouterApplianceInstance
//

@implementation GTLRNetworkconnectivity_NextHopRouterApplianceInstance
@dynamic siteToSiteDataTransfer, uri, vpcNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_NextHopVpcNetwork
//

@implementation GTLRNetworkconnectivity_NextHopVpcNetwork
@dynamic uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_NextHopVPNTunnel
//

@implementation GTLRNetworkconnectivity_NextHopVPNTunnel
@dynamic siteToSiteDataTransfer, uri, vpcNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_OperationMetadata
//

@implementation GTLRNetworkconnectivity_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Policy
//

@implementation GTLRNetworkconnectivity_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRNetworkconnectivity_AuditConfig class],
    @"bindings" : [GTLRNetworkconnectivity_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PolicyBasedRoute
//

@implementation GTLRNetworkconnectivity_PolicyBasedRoute
@dynamic createTime, descriptionProperty, filter, interconnectAttachment, kind,
         labels, name, network, nextHopIlbIp, nextHopOtherRoutes, priority,
         selfLink, updateTime, virtualMachine, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"warnings" : [GTLRNetworkconnectivity_Warnings class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PolicyBasedRoute_Labels
//

@implementation GTLRNetworkconnectivity_PolicyBasedRoute_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ProducerPscConfig
//

@implementation GTLRNetworkconnectivity_ProducerPscConfig
@dynamic serviceAttachmentUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PscConfig
//

@implementation GTLRNetworkconnectivity_PscConfig
@dynamic allowedGoogleProducersResourceHierarchyLevel, limit,
         producerInstanceLocation, subnetworks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedGoogleProducersResourceHierarchyLevel" : [NSString class],
    @"subnetworks" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PscConnection
//

@implementation GTLRNetworkconnectivity_PscConnection
@dynamic consumerAddress, consumerForwardingRule, consumerTargetProject, error,
         errorInfo, errorType, gceOperation, producerInstanceId,
         producerInstanceMetadata, pscConnectionId, selectedSubnetwork,
         serviceClass, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_PscConnection_ProducerInstanceMetadata
//

@implementation GTLRNetworkconnectivity_PscConnection_ProducerInstanceMetadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RegionalEndpoint
//

@implementation GTLRNetworkconnectivity_RegionalEndpoint
@dynamic accessType, address, createTime, descriptionProperty, ipAddress,
         labels, name, network, pscForwardingRule, subnetwork, targetGoogleApi,
         updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RegionalEndpoint_Labels
//

@implementation GTLRNetworkconnectivity_RegionalEndpoint_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RejectHubSpokeRequest
//

@implementation GTLRNetworkconnectivity_RejectHubSpokeRequest
@dynamic details, requestId, spokeUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RejectHubSpokeResponse
//

@implementation GTLRNetworkconnectivity_RejectHubSpokeResponse
@dynamic spoke;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Route
//

@implementation GTLRNetworkconnectivity_Route
@dynamic createTime, descriptionProperty, ipCidrRange, labels, location, name,
         nextHopInterconnectAttachment, nextHopRouterApplianceInstance,
         nextHopVpcNetwork, nextHopVpnTunnel, priority, spoke, state, type, uid,
         updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Route_Labels
//

@implementation GTLRNetworkconnectivity_Route_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RouterApplianceInstance
//

@implementation GTLRNetworkconnectivity_RouterApplianceInstance
@dynamic ipAddress, virtualMachine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RouteTable
//

@implementation GTLRNetworkconnectivity_RouteTable
@dynamic createTime, descriptionProperty, labels, name, state, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RouteTable_Labels
//

@implementation GTLRNetworkconnectivity_RouteTable_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_RoutingVPC
//

@implementation GTLRNetworkconnectivity_RoutingVPC
@dynamic requiredForNewSiteToSiteDataTransferSpokes, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceClass
//

@implementation GTLRNetworkconnectivity_ServiceClass
@dynamic createTime, descriptionProperty, ETag, labels, name, serviceClass,
         updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceClass_Labels
//

@implementation GTLRNetworkconnectivity_ServiceClass_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionMap
//

@implementation GTLRNetworkconnectivity_ServiceConnectionMap
@dynamic consumerPscConfigs, consumerPscConnections, createTime,
         descriptionProperty, ETag, infrastructure, labels, name,
         producerPscConfigs, serviceClass, serviceClassUri, token, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"consumerPscConfigs" : [GTLRNetworkconnectivity_ConsumerPscConfig class],
    @"consumerPscConnections" : [GTLRNetworkconnectivity_ConsumerPscConnection class],
    @"producerPscConfigs" : [GTLRNetworkconnectivity_ProducerPscConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionMap_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionMap_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionPolicy
//

@implementation GTLRNetworkconnectivity_ServiceConnectionPolicy
@dynamic createTime, descriptionProperty, ETag, infrastructure, labels, name,
         network, pscConfig, pscConnections, serviceClass, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pscConnections" : [GTLRNetworkconnectivity_PscConnection class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionPolicy_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionPolicy_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionToken
//

@implementation GTLRNetworkconnectivity_ServiceConnectionToken
@dynamic createTime, descriptionProperty, ETag, expireTime, labels, name,
         network, token, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_ServiceConnectionToken_Labels
//

@implementation GTLRNetworkconnectivity_ServiceConnectionToken_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SetIamPolicyRequest
//

@implementation GTLRNetworkconnectivity_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Spoke
//

@implementation GTLRNetworkconnectivity_Spoke
@dynamic createTime, descriptionProperty, group, hub, labels,
         linkedInterconnectAttachments, linkedRouterApplianceInstances,
         linkedVpcNetwork, linkedVpnTunnels, name, reasons, spokeType, state,
         uniqueId, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"reasons" : [GTLRNetworkconnectivity_StateReason class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Spoke_Labels
//

@implementation GTLRNetworkconnectivity_Spoke_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SpokeStateCount
//

@implementation GTLRNetworkconnectivity_SpokeStateCount
@dynamic count, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SpokeStateReasonCount
//

@implementation GTLRNetworkconnectivity_SpokeStateReasonCount
@dynamic count, stateReasonCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SpokeSummary
//

@implementation GTLRNetworkconnectivity_SpokeSummary
@dynamic spokeStateCounts, spokeStateReasonCounts, spokeTypeCounts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"spokeStateCounts" : [GTLRNetworkconnectivity_SpokeStateCount class],
    @"spokeStateReasonCounts" : [GTLRNetworkconnectivity_SpokeStateReasonCount class],
    @"spokeTypeCounts" : [GTLRNetworkconnectivity_SpokeTypeCount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_SpokeTypeCount
//

@implementation GTLRNetworkconnectivity_SpokeTypeCount
@dynamic count, spokeType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_StateReason
//

@implementation GTLRNetworkconnectivity_StateReason
@dynamic code, message, userDetails;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_TestIamPermissionsRequest
//

@implementation GTLRNetworkconnectivity_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_TestIamPermissionsResponse
//

@implementation GTLRNetworkconnectivity_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_VirtualMachine
//

@implementation GTLRNetworkconnectivity_VirtualMachine
@dynamic tags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Warnings
//

@implementation GTLRNetworkconnectivity_Warnings
@dynamic code, data, warningMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetworkconnectivity_Warnings_Data
//

@implementation GTLRNetworkconnectivity_Warnings_Data

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end
