// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Forms API (forms/v1)
// Description:
//   Reads and writes Google Forms and responses.
// Documentation:
//   https://developers.google.com/forms/api

#import <GoogleAPIClientForREST/GTLRFormsObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRForms_ChoiceQuestion.type
NSString * const kGTLRForms_ChoiceQuestion_Type_Checkbox       = @"CHECKBOX";
NSString * const kGTLRForms_ChoiceQuestion_Type_ChoiceTypeUnspecified = @"CHOICE_TYPE_UNSPECIFIED";
NSString * const kGTLRForms_ChoiceQuestion_Type_DropDown       = @"DROP_DOWN";
NSString * const kGTLRForms_ChoiceQuestion_Type_Radio          = @"RADIO";

// GTLRForms_FileUploadQuestion.types
NSString * const kGTLRForms_FileUploadQuestion_Types_Any       = @"ANY";
NSString * const kGTLRForms_FileUploadQuestion_Types_Audio     = @"AUDIO";
NSString * const kGTLRForms_FileUploadQuestion_Types_Document  = @"DOCUMENT";
NSString * const kGTLRForms_FileUploadQuestion_Types_Drawing   = @"DRAWING";
NSString * const kGTLRForms_FileUploadQuestion_Types_FileTypeUnspecified = @"FILE_TYPE_UNSPECIFIED";
NSString * const kGTLRForms_FileUploadQuestion_Types_Image     = @"IMAGE";
NSString * const kGTLRForms_FileUploadQuestion_Types_Pdf       = @"PDF";
NSString * const kGTLRForms_FileUploadQuestion_Types_Presentation = @"PRESENTATION";
NSString * const kGTLRForms_FileUploadQuestion_Types_Spreadsheet = @"SPREADSHEET";
NSString * const kGTLRForms_FileUploadQuestion_Types_Video     = @"VIDEO";

// GTLRForms_MediaProperties.alignment
NSString * const kGTLRForms_MediaProperties_Alignment_AlignmentUnspecified = @"ALIGNMENT_UNSPECIFIED";
NSString * const kGTLRForms_MediaProperties_Alignment_Center   = @"CENTER";
NSString * const kGTLRForms_MediaProperties_Alignment_Left     = @"LEFT";
NSString * const kGTLRForms_MediaProperties_Alignment_Right    = @"RIGHT";

// GTLRForms_Option.goToAction
NSString * const kGTLRForms_Option_GoToAction_GoToActionUnspecified = @"GO_TO_ACTION_UNSPECIFIED";
NSString * const kGTLRForms_Option_GoToAction_NextSection      = @"NEXT_SECTION";
NSString * const kGTLRForms_Option_GoToAction_RestartForm      = @"RESTART_FORM";
NSString * const kGTLRForms_Option_GoToAction_SubmitForm       = @"SUBMIT_FORM";

// GTLRForms_Watch.errorType
NSString * const kGTLRForms_Watch_ErrorType_ErrorTypeUnspecified = @"ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRForms_Watch_ErrorType_NoUserAccess       = @"NO_USER_ACCESS";
NSString * const kGTLRForms_Watch_ErrorType_OtherErrors        = @"OTHER_ERRORS";
NSString * const kGTLRForms_Watch_ErrorType_ProjectNotAuthorized = @"PROJECT_NOT_AUTHORIZED";

// GTLRForms_Watch.eventType
NSString * const kGTLRForms_Watch_EventType_EventTypeUnspecified = @"EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRForms_Watch_EventType_Responses          = @"RESPONSES";
NSString * const kGTLRForms_Watch_EventType_Schema             = @"SCHEMA";

// GTLRForms_Watch.state
NSString * const kGTLRForms_Watch_State_Active           = @"ACTIVE";
NSString * const kGTLRForms_Watch_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRForms_Watch_State_Suspended        = @"SUSPENDED";

// ----------------------------------------------------------------------------
//
//   GTLRForms_Answer
//

@implementation GTLRForms_Answer
@dynamic fileUploadAnswers, grade, questionId, textAnswers;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_BatchUpdateFormRequest
//

@implementation GTLRForms_BatchUpdateFormRequest
@dynamic includeFormInResponse, requests, writeControl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRForms_Request class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_BatchUpdateFormResponse
//

@implementation GTLRForms_BatchUpdateFormResponse
@dynamic form, replies, writeControl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"replies" : [GTLRForms_Response class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ChoiceQuestion
//

@implementation GTLRForms_ChoiceQuestion
@dynamic options, shuffle, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"options" : [GTLRForms_Option class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CloudPubsubTopic
//

@implementation GTLRForms_CloudPubsubTopic
@dynamic topicName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CorrectAnswer
//

@implementation GTLRForms_CorrectAnswer
@dynamic value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CorrectAnswers
//

@implementation GTLRForms_CorrectAnswers
@dynamic answers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"answers" : [GTLRForms_CorrectAnswer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CreateItemRequest
//

@implementation GTLRForms_CreateItemRequest
@dynamic item, location;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CreateItemResponse
//

@implementation GTLRForms_CreateItemResponse
@dynamic itemId, questionId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"questionId" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_CreateWatchRequest
//

@implementation GTLRForms_CreateWatchRequest
@dynamic watch, watchId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_DateQuestion
//

@implementation GTLRForms_DateQuestion
@dynamic includeTime, includeYear;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_DeleteItemRequest
//

@implementation GTLRForms_DeleteItemRequest
@dynamic location;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Empty
//

@implementation GTLRForms_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Ettings
//

@implementation GTLRForms_Ettings
@dynamic quizSettings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ExtraMaterial
//

@implementation GTLRForms_ExtraMaterial
@dynamic link, video;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Feedback
//

@implementation GTLRForms_Feedback
@dynamic material, text;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"material" : [GTLRForms_ExtraMaterial class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_FileUploadAnswer
//

@implementation GTLRForms_FileUploadAnswer
@dynamic fileId, fileName, mimeType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_FileUploadAnswers
//

@implementation GTLRForms_FileUploadAnswers
@dynamic answers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"answers" : [GTLRForms_FileUploadAnswer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_FileUploadQuestion
//

@implementation GTLRForms_FileUploadQuestion
@dynamic folderId, maxFiles, maxFileSize, types;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"types" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Form
//

@implementation GTLRForms_Form
@dynamic formId, info, items, linkedSheetId, responderUri, revisionId, settings;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRForms_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_FormResponse
//

@implementation GTLRForms_FormResponse
@dynamic answers, createTime, formId, lastSubmittedTime, respondentEmail,
         responseId, totalScore;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_FormResponse_Answers
//

@implementation GTLRForms_FormResponse_Answers

+ (Class)classForAdditionalProperties {
  return [GTLRForms_Answer class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Grade
//

@implementation GTLRForms_Grade
@dynamic correct, feedback, score;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Grading
//

@implementation GTLRForms_Grading
@dynamic correctAnswers, generalFeedback, pointValue, whenRight, whenWrong;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Grid
//

@implementation GTLRForms_Grid
@dynamic columns, shuffleQuestions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Image
//

@implementation GTLRForms_Image
@dynamic altText, contentUri, properties, sourceUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ImageItem
//

@implementation GTLRForms_ImageItem
@dynamic image;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Info
//

@implementation GTLRForms_Info
@dynamic descriptionProperty, documentTitle, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Item
//

@implementation GTLRForms_Item
@dynamic descriptionProperty, imageItem, itemId, pageBreakItem,
         questionGroupItem, questionItem, textItem, title, videoItem;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ListFormResponsesResponse
//

@implementation GTLRForms_ListFormResponsesResponse
@dynamic nextPageToken, responses;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"responses" : [GTLRForms_FormResponse class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"responses";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ListWatchesResponse
//

@implementation GTLRForms_ListWatchesResponse
@dynamic watches;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"watches" : [GTLRForms_Watch class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Location
//

@implementation GTLRForms_Location
@dynamic index;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_MediaProperties
//

@implementation GTLRForms_MediaProperties
@dynamic alignment, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_MoveItemRequest
//

@implementation GTLRForms_MoveItemRequest
@dynamic newLocation, originalLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Option
//

@implementation GTLRForms_Option
@dynamic goToAction, goToSectionId, image, isOther, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_PageBreakItem
//

@implementation GTLRForms_PageBreakItem
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Question
//

@implementation GTLRForms_Question
@dynamic choiceQuestion, dateQuestion, fileUploadQuestion, grading, questionId,
         required, rowQuestion, scaleQuestion, textQuestion, timeQuestion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_QuestionGroupItem
//

@implementation GTLRForms_QuestionGroupItem
@dynamic grid, image, questions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"questions" : [GTLRForms_Question class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_QuestionItem
//

@implementation GTLRForms_QuestionItem
@dynamic image, question;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_QuizSettings
//

@implementation GTLRForms_QuizSettings
@dynamic isQuiz;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_RenewWatchRequest
//

@implementation GTLRForms_RenewWatchRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Request
//

@implementation GTLRForms_Request
@dynamic createItem, deleteItem, moveItem, updateFormInfo, updateItem,
         updateSettings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Response
//

@implementation GTLRForms_Response
@dynamic createItem;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_RowQuestion
//

@implementation GTLRForms_RowQuestion
@dynamic title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_ScaleQuestion
//

@implementation GTLRForms_ScaleQuestion
@dynamic high, highLabel, low, lowLabel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TextAnswer
//

@implementation GTLRForms_TextAnswer
@dynamic value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TextAnswers
//

@implementation GTLRForms_TextAnswers
@dynamic answers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"answers" : [GTLRForms_TextAnswer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TextItem
//

@implementation GTLRForms_TextItem
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TextLink
//

@implementation GTLRForms_TextLink
@dynamic displayText, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TextQuestion
//

@implementation GTLRForms_TextQuestion
@dynamic paragraph;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_TimeQuestion
//

@implementation GTLRForms_TimeQuestion
@dynamic duration;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_UpdateFormInfoRequest
//

@implementation GTLRForms_UpdateFormInfoRequest
@dynamic info, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_UpdateItemRequest
//

@implementation GTLRForms_UpdateItemRequest
@dynamic item, location, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_UpdateSettingsRequest
//

@implementation GTLRForms_UpdateSettingsRequest
@dynamic settings, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Video
//

@implementation GTLRForms_Video
@dynamic properties, youtubeUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_VideoItem
//

@implementation GTLRForms_VideoItem
@dynamic caption, video;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_VideoLink
//

@implementation GTLRForms_VideoLink
@dynamic displayText, youtubeUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_Watch
//

@implementation GTLRForms_Watch
@dynamic createTime, errorType, eventType, expireTime, identifier, state,
         target;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_WatchTarget
//

@implementation GTLRForms_WatchTarget
@dynamic topic;
@end


// ----------------------------------------------------------------------------
//
//   GTLRForms_WriteControl
//

@implementation GTLRForms_WriteControl
@dynamic requiredRevisionId, targetRevisionId;
@end
