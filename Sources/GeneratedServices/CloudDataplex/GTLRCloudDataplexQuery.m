// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Dataplex API (dataplex/v1)
// Description:
//   Dataplex API is used to manage the lifecycle of data lakes.
// Documentation:
//   https://cloud.google.com/dataplex/docs

#import <GoogleAPIClientForREST/GTLRCloudDataplexQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRCloudDataplexViewBasic                  = @"BASIC";
NSString * const kGTLRCloudDataplexViewContentViewUnspecified = @"CONTENT_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudDataplexViewEntityViewUnspecified  = @"ENTITY_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudDataplexViewFilesets               = @"FILESETS";
NSString * const kGTLRCloudDataplexViewFull                   = @"FULL";
NSString * const kGTLRCloudDataplexViewSchema                 = @"SCHEMA";
NSString * const kGTLRCloudDataplexViewTables                 = @"TABLES";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudDataplexQuery

@dynamic fields;

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudLocationLocation class];
  query.loggingName = @"dataplex.projects.locations.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesActionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/actions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesActionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListActionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.actions.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentCreate

@dynamic parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Content *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/content";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsCreate

@dynamic parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Content *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/contentitems";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/contentitems";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListContentResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Content *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentitemsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.contentitems.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/content";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListContentResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Content *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Content class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesContentTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesContentTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.content.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesCreate

@dynamic lakeId, parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Lake *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/lakes";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsCreate

@dynamic environmentId, parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Environment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/environments";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Environment class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/environments";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListEnvironmentsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Environment *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsSessionsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsSessionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListSessionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.sessions.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesEnvironmentsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.environments.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Lake class];
  query.loggingName = @"dataplex.projects.locations.lakes.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/lakes";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListLakesResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Lake *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksCreate

@dynamic parent, taskId, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Task *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tasks";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Task class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1CancelJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.jobs.cancel";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Job class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.jobs.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobs";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListJobsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.jobs.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tasks";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListTasksResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Task *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTasksTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.tasks.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesActionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/actions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesActionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListActionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.actions.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsActionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/actions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsActionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListActionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.actions.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsCreate

@dynamic assetId, parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Asset *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Asset class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListAssetsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Asset *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesAssetsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.assets.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesCreate

@dynamic parent, validateOnly, zoneId;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Zone *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/zones";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesCreate

@dynamic parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Entity *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/entities";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Entity class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Entity class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesList

@dynamic filter, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/entities";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListEntitiesResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsCreate

@dynamic parent, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Partition *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/partitions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Partition class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.partitions.create";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.partitions.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Partition class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.partitions.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/partitions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesPartitionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListPartitionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.partitions.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesUpdate

@dynamic name, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Entity *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesEntitiesUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Entity class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.entities.update";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1Zone class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/zones";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudDataplexV1ListZonesResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesPatch

@dynamic name, updateMask, validateOnly;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleCloudDataplexV1Zone *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.patch";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1Policy class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudDataplexQuery_ProjectsLocationsLakesZonesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"dataplex.projects.locations.lakes.zones.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRCloudDataplexQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleCloudLocationListLocationsResponse class];
  query.loggingName = @"dataplex.projects.locations.list";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudDataplex_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRCloudDataplexQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_Empty class];
  query.loggingName = @"dataplex.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudDataplexQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningOperation class];
  query.loggingName = @"dataplex.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRCloudDataplexQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRCloudDataplexQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudDataplex_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"dataplex.projects.locations.operations.list";
  return query;
}

@end
