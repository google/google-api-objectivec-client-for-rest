// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   CSS API (css/v1)
// Description:
//   Programmatically manage your Comparison Shopping Service (CSS) account data
//   at scale.
// Documentation:
//   https://developers.google.com/comparison-shopping-services/api/overview

#import <GoogleAPIClientForREST/GTLRCssQuery.h>

@implementation GTLRCssQuery

@dynamic fields;

@end

@implementation GTLRCssQuery_AccountsCssProductInputsDelete

@dynamic name, supplementalFeedId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCssQuery_AccountsCssProductInputsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCss_Empty class];
  query.loggingName = @"css.accounts.cssProductInputs.delete";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsCssProductInputsInsert

@dynamic feedId, parent;

+ (instancetype)queryWithObject:(GTLRCss_ProductInput *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cssProductInputs:insert";
  GTLRCssQuery_AccountsCssProductInputsInsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCss_ProductInput class];
  query.loggingName = @"css.accounts.cssProductInputs.insert";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsCssProductsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCssQuery_AccountsCssProductsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCss_Product class];
  query.loggingName = @"css.accounts.cssProducts.get";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsCssProductsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cssProducts";
  GTLRCssQuery_AccountsCssProductsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCss_ListCssProductsResponse class];
  query.loggingName = @"css.accounts.cssProducts.list";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsGet

@dynamic name, parent;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCssQuery_AccountsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCss_Account class];
  query.loggingName = @"css.accounts.get";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsLabelsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCss_AccountLabel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/labels";
  GTLRCssQuery_AccountsLabelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCss_AccountLabel class];
  query.loggingName = @"css.accounts.labels.create";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsLabelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCssQuery_AccountsLabelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCss_Empty class];
  query.loggingName = @"css.accounts.labels.delete";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsLabelsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/labels";
  GTLRCssQuery_AccountsLabelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCss_ListAccountLabelsResponse class];
  query.loggingName = @"css.accounts.labels.list";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsLabelsPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCss_AccountLabel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCssQuery_AccountsLabelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCss_AccountLabel class];
  query.loggingName = @"css.accounts.labels.patch";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsListChildAccounts

@dynamic fullName, labelId, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:listChildAccounts";
  GTLRCssQuery_AccountsListChildAccounts *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCss_ListChildAccountsResponse class];
  query.loggingName = @"css.accounts.listChildAccounts";
  return query;
}

@end

@implementation GTLRCssQuery_AccountsUpdateLabels

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCss_UpdateAccountLabelsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:updateLabels";
  GTLRCssQuery_AccountsUpdateLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCss_Account class];
  query.loggingName = @"css.accounts.updateLabels";
  return query;
}

@end
