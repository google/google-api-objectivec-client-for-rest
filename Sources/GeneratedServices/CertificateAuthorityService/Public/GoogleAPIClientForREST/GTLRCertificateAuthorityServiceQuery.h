// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Certificate Authority API (privateca/v1)
// Description:
//   The Certificate Authority Service API is a highly-available, scalable
//   service that enables you to simplify and automate the management of private
//   certificate authorities (CAs) while staying in control of your private
//   keys.
// Documentation:
//   https://cloud.google.com/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCertificateAuthorityServiceObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Certificate Authority Service query classes.
 */
@interface GTLRCertificateAuthorityServiceQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Activate a CertificateAuthority that is in state AWAITING_USER_ACTIVATION
 *  and is of type SUBORDINATE. After the parent Certificate Authority signs a
 *  certificate signing request from FetchCertificateAuthorityCsr, this method
 *  can complete the activation process.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.activate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesActivate : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Activate a CertificateAuthority that is in state AWAITING_USER_ACTIVATION
 *  and is of type SUBORDINATE. After the parent Certificate Authority signs a
 *  certificate signing request from FetchCertificateAuthorityCsr, this method
 *  can complete the activation process.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_ActivateCertificateAuthorityRequest to
 *    include in the query.
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesActivate
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_ActivateCertificateAuthorityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns a CertificateRevocationList.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsGet : GTLRCertificateAuthorityServiceQuery

/** Required. The name of the CertificateRevocationList to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_CertificateRevocationList.
 *
 *  Returns a CertificateRevocationList.
 *
 *  @param name Required. The name of the CertificateRevocationList to get.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsGetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists CertificateRevocationLists.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList : GTLRCertificateAuthorityServiceQuery

/** Optional. Only include resources that match the filter in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Specify how the results should be sorted. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Limit on the number of CertificateRevocationLists to include in
 *  the response. Further CertificateRevocationLists can subsequently be
 *  obtained by including the
 *  ListCertificateRevocationListsResponse.next_page_token in a subsequent
 *  request. If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token, returned earlier via
 *  ListCertificateRevocationListsResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location associated with the
 *  CertificateRevocationLists, in the format `projects/ * /locations/ *
 *  /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCertificateAuthorityService_ListCertificateRevocationListsResponse.
 *
 *  Lists CertificateRevocationLists.
 *
 *  @param parent Required. The resource name of the location associated with
 *    the CertificateRevocationLists, in the format `projects/ * /locations/ *
 *    /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a CertificateRevocationList.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsPatch : GTLRCertificateAuthorityServiceQuery

/**
 *  Output only. The resource name for this CertificateRevocationList in the
 *  format `projects/ * /locations/ * /caPools/ *certificateAuthorities/ * /
 *  certificateRevocationLists/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A list of fields to be updated in this request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Update a CertificateRevocationList.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_CertificateRevocationList to include in
 *    the query.
 *  @param name Output only. The resource name for this
 *    CertificateRevocationList in the format `projects/ * /locations/ *
 *    /caPools/ *certificateAuthorities/ * / certificateRevocationLists/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsPatch
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CertificateRevocationList *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsSetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCertificateAuthorityService_SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsTestIamPermissions : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Create a new CertificateAuthority in a given Project and Location.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCreate : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. It must be unique within a location and match the regular
 *  expression `[a-zA-Z0-9_-]{1,63}`
 */
@property(nonatomic, copy, nullable) NSString *certificateAuthorityId;

/**
 *  Required. The resource name of the CaPool associated with the
 *  CertificateAuthorities, in the format `projects/ * /locations/ * /caPools/
 *  *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Create a new CertificateAuthority in a given Project and Location.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CertificateAuthority to
 *    include in the query.
 *  @param parent Required. The resource name of the CaPool associated with the
 *    CertificateAuthorities, in the format `projects/ * /locations/ * /caPools/
 *    *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesCreate
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CertificateAuthority *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a CertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesDelete : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. This field allows the CA to be deleted even if the CA has active
 *  certs. Active certs include both unrevoked and unexpired certs.
 */
@property(nonatomic, assign) BOOL ignoreActiveCertificates;

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If this flag is set, the Certificate Authority will be deleted as
 *  soon as possible without a 30-day grace period where undeletion would have
 *  been allowed. If you proceed, there will be no way to recover this CA.
 */
@property(nonatomic, assign) BOOL skipGracePeriod;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Delete a CertificateAuthority.
 *
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disable a CertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesDisable : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Disable a CertificateAuthority.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_DisableCertificateAuthorityRequest to
 *    include in the query.
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesDisable
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_DisableCertificateAuthorityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enable a CertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesEnable : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Enable a CertificateAuthority.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_EnableCertificateAuthorityRequest to
 *    include in the query.
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesEnable
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_EnableCertificateAuthorityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Fetch a certificate signing request (CSR) from a CertificateAuthority that
 *  is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. The CSR
 *  must then be signed by the desired parent Certificate Authority, which could
 *  be another CertificateAuthority resource, or could be an on-prem certificate
 *  authority. See also ActivateCertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.fetch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesFetch : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCertificateAuthorityService_FetchCertificateAuthorityCsrResponse.
 *
 *  Fetch a certificate signing request (CSR) from a CertificateAuthority that
 *  is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. The CSR
 *  must then be signed by the desired parent Certificate Authority, which could
 *  be another CertificateAuthority resource, or could be an on-prem certificate
 *  authority. See also ActivateCertificateAuthority.
 *
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesFetch
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a CertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesGet : GTLRCertificateAuthorityServiceQuery

/** Required. The name of the CertificateAuthority to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_CertificateAuthority.
 *
 *  Returns a CertificateAuthority.
 *
 *  @param name Required. The name of the CertificateAuthority to get.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CertificateAuthorities.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesList : GTLRCertificateAuthorityServiceQuery

/** Optional. Only include resources that match the filter in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Specify how the results should be sorted. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Limit on the number of CertificateAuthorities to include in the
 *  response. Further CertificateAuthorities can subsequently be obtained by
 *  including the ListCertificateAuthoritiesResponse.next_page_token in a
 *  subsequent request. If unspecified, the server will pick an appropriate
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token, returned earlier via
 *  ListCertificateAuthoritiesResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the CaPool associated with the
 *  CertificateAuthorities, in the format `projects/ * /locations/ * /caPools/
 *  *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCertificateAuthorityService_ListCertificateAuthoritiesResponse.
 *
 *  Lists CertificateAuthorities.
 *
 *  @param parent Required. The resource name of the CaPool associated with the
 *    CertificateAuthorities, in the format `projects/ * /locations/ * /caPools/
 *    *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a CertificateAuthority.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesPatch : GTLRCertificateAuthorityServiceQuery

/**
 *  Output only. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A list of fields to be updated in this request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Update a CertificateAuthority.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CertificateAuthority to
 *    include in the query.
 *  @param name Output only. The resource name for this CertificateAuthority in
 *    the format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/
 *    *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesPatch
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CertificateAuthority *)object
                           name:(NSString *)name;

@end

/**
 *  Undelete a CertificateAuthority that has been deleted.
 *
 *  Method: privateca.projects.locations.caPools.certificateAuthorities.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesUndelete : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateAuthority in the format
 *  `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Undelete a CertificateAuthority that has been deleted.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_UndeleteCertificateAuthorityRequest to
 *    include in the query.
 *  @param name Required. The resource name for this CertificateAuthority in the
 *    format `projects/ * /locations/ * /caPools/ * /certificateAuthorities/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificateAuthoritiesUndelete
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_UndeleteCertificateAuthorityRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new Certificate in a given Project, Location from a particular
 *  CaPool.
 *
 *  Method: privateca.projects.locations.caPools.certificates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesCreate : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. It must be unique within a location and match the regular
 *  expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a
 *  CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is
 *  optional and its value is ignored otherwise.
 */
@property(nonatomic, copy, nullable) NSString *certificateId;

/**
 *  Optional. The resource ID of the CertificateAuthority that should issue the
 *  certificate. This optional field will ignore the load-balancing scheme of
 *  the Pool and directly issue the certificate from the CA with the specified
 *  ID, contained in the same CaPool referenced by `parent`. Per-CA quota rules
 *  apply. If left empty, a CertificateAuthority will be chosen from the CaPool
 *  by the service. For example, to issue a Certificate from a Certificate
 *  Authority with resource name
 *  "projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca",
 *  you can set the parent to
 *  "projects/my-project/locations/us-central1/caPools/my-pool" and the
 *  issuing_certificate_authority_id to "my-ca".
 */
@property(nonatomic, copy, nullable) NSString *issuingCertificateAuthorityId;

/**
 *  Required. The resource name of the CaPool associated with the Certificate,
 *  in the format `projects/ * /locations/ * /caPools/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and the request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If this is true, no Certificate resource will be persisted
 *  regardless of the CaPool's tier, and the returned Certificate will not
 *  contain the pem_certificate field.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Certificate.
 *
 *  Create a new Certificate in a given Project, Location from a particular
 *  CaPool.
 *
 *  @param object The @c GTLRCertificateAuthorityService_Certificate to include
 *    in the query.
 *  @param parent Required. The resource name of the CaPool associated with the
 *    Certificate, in the format `projects/ * /locations/ * /caPools/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesCreate
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_Certificate *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns a Certificate.
 *
 *  Method: privateca.projects.locations.caPools.certificates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesGet : GTLRCertificateAuthorityServiceQuery

/** Required. The name of the Certificate to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Certificate.
 *
 *  Returns a Certificate.
 *
 *  @param name Required. The name of the Certificate to get.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Certificates.
 *
 *  Method: privateca.projects.locations.caPools.certificates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesList : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. Only include resources that match the filter in the response. For
 *  details on supported filters and syntax, see [Certificates Filtering
 *  documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specify how the results should be sorted. For details on supported
 *  fields and syntax, see [Certificates Sorting
 *  documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Limit on the number of Certificates to include in the response.
 *  Further Certificates can subsequently be obtained by including the
 *  ListCertificatesResponse.next_page_token in a subsequent request. If
 *  unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token, returned earlier via
 *  ListCertificatesResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location associated with the
 *  Certificates, in the format `projects/ * /locations/ * /caPools/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_ListCertificatesResponse.
 *
 *  Lists Certificates.
 *
 *  @param parent Required. The resource name of the location associated with
 *    the Certificates, in the format `projects/ * /locations/ * /caPools/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a Certificate. Currently, the only field you can update is the labels
 *  field.
 *
 *  Method: privateca.projects.locations.caPools.certificates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesPatch : GTLRCertificateAuthorityServiceQuery

/**
 *  Output only. The resource name for this Certificate in the format `projects/
 *  * /locations/ * /caPools/ * /certificates/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A list of fields to be updated in this request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Certificate.
 *
 *  Update a Certificate. Currently, the only field you can update is the labels
 *  field.
 *
 *  @param object The @c GTLRCertificateAuthorityService_Certificate to include
 *    in the query.
 *  @param name Output only. The resource name for this Certificate in the
 *    format `projects/ * /locations/ * /caPools/ * /certificates/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesPatch
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_Certificate *)object
                           name:(NSString *)name;

@end

/**
 *  Revoke a Certificate.
 *
 *  Method: privateca.projects.locations.caPools.certificates.revoke
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesRevoke : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this Certificate in the format `projects/ *
 *  /locations/ * /caPools/ * /certificates/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Certificate.
 *
 *  Revoke a Certificate.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_RevokeCertificateRequest to include in the
 *    query.
 *  @param name Required. The resource name for this Certificate in the format
 *    `projects/ * /locations/ * /caPools/ * /certificates/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCertificatesRevoke
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_RevokeCertificateRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Create a CaPool.
 *
 *  Method: privateca.projects.locations.caPools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCreate : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. It must be unique within a location and match the regular
 *  expression `[a-zA-Z0-9_-]{1,63}`
 */
@property(nonatomic, copy, nullable) NSString *caPoolId;

/**
 *  Required. The resource name of the location associated with the CaPool, in
 *  the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Create a CaPool.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CaPool to include in
 *    the query.
 *  @param parent Required. The resource name of the location associated with
 *    the CaPool, in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CaPool *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a CaPool.
 *
 *  Method: privateca.projects.locations.caPools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsDelete : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CaPool in the format `projects/ *
 *  /locations/ * /caPools/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Delete a CaPool.
 *
 *  @param name Required. The resource name for this CaPool in the format
 *    `projects/ * /locations/ * /caPools/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  FetchCaCerts returns the current trust anchor for the CaPool. This will
 *  include CA certificate chains for all ACTIVE CertificateAuthority resources
 *  in the CaPool.
 *
 *  Method: privateca.projects.locations.caPools.fetchCaCerts
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsFetchCaCerts : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for the CaPool in the format `projects/ *
 *  /locations/ * /caPools/ *`.
 */
@property(nonatomic, copy, nullable) NSString *caPool;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_FetchCaCertsResponse.
 *
 *  FetchCaCerts returns the current trust anchor for the CaPool. This will
 *  include CA certificate chains for all ACTIVE CertificateAuthority resources
 *  in the CaPool.
 *
 *  @param object The @c GTLRCertificateAuthorityService_FetchCaCertsRequest to
 *    include in the query.
 *  @param caPool Required. The resource name for the CaPool in the format
 *    `projects/ * /locations/ * /caPools/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsFetchCaCerts
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_FetchCaCertsRequest *)object
                         caPool:(NSString *)caPool;

@end

/**
 *  Returns a CaPool.
 *
 *  Method: privateca.projects.locations.caPools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsGet : GTLRCertificateAuthorityServiceQuery

/** Required. The name of the CaPool to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_CaPool.
 *
 *  Returns a CaPool.
 *
 *  @param name Required. The name of the CaPool to get.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: privateca.projects.locations.caPools.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsGetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists CaPools.
 *
 *  Method: privateca.projects.locations.caPools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsList : GTLRCertificateAuthorityServiceQuery

/** Optional. Only include resources that match the filter in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Specify how the results should be sorted. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Limit on the number of CaPools to include in the response. Further
 *  CaPools can subsequently be obtained by including the
 *  ListCaPoolsResponse.next_page_token in a subsequent request. If unspecified,
 *  the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token, returned earlier via
 *  ListCaPoolsResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location associated with the CaPools, in
 *  the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_ListCaPoolsResponse.
 *
 *  Lists CaPools.
 *
 *  @param parent Required. The resource name of the location associated with
 *    the CaPools, in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a CaPool.
 *
 *  Method: privateca.projects.locations.caPools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsPatch : GTLRCertificateAuthorityServiceQuery

/**
 *  Output only. The resource name for this CaPool in the format `projects/ *
 *  /locations/ * /caPools/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A list of fields to be updated in this request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Update a CaPool.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CaPool to include in
 *    the query.
 *  @param name Output only. The resource name for this CaPool in the format
 *    `projects/ * /locations/ * /caPools/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CaPool *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: privateca.projects.locations.caPools.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsSetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCertificateAuthorityService_SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: privateca.projects.locations.caPools.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsTestIamPermissions : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCaPoolsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Create a new CertificateTemplate in a given Project and Location.
 *
 *  Method: privateca.projects.locations.certificateTemplates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesCreate : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. It must be unique within a location and match the regular
 *  expression `[a-zA-Z0-9_-]{1,63}`
 */
@property(nonatomic, copy, nullable) NSString *certificateTemplateId;

/**
 *  Required. The resource name of the location associated with the
 *  CertificateTemplate, in the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Create a new CertificateTemplate in a given Project and Location.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CertificateTemplate to
 *    include in the query.
 *  @param parent Required. The resource name of the location associated with
 *    the CertificateTemplate, in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CertificateTemplate *)object
                         parent:(NSString *)parent;

@end

/**
 *  DeleteCertificateTemplate deletes a CertificateTemplate.
 *
 *  Method: privateca.projects.locations.certificateTemplates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesDelete : GTLRCertificateAuthorityServiceQuery

/**
 *  Required. The resource name for this CertificateTemplate in the format
 *  `projects/ * /locations/ * /certificateTemplates/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  DeleteCertificateTemplate deletes a CertificateTemplate.
 *
 *  @param name Required. The resource name for this CertificateTemplate in the
 *    format `projects/ * /locations/ * /certificateTemplates/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a CertificateTemplate.
 *
 *  Method: privateca.projects.locations.certificateTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesGet : GTLRCertificateAuthorityServiceQuery

/** Required. The name of the CertificateTemplate to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_CertificateTemplate.
 *
 *  Returns a CertificateTemplate.
 *
 *  @param name Required. The name of the CertificateTemplate to get.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: privateca.projects.locations.certificateTemplates.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesGetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists CertificateTemplates.
 *
 *  Method: privateca.projects.locations.certificateTemplates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesList : GTLRCertificateAuthorityServiceQuery

/** Optional. Only include resources that match the filter in the response. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Specify how the results should be sorted. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Limit on the number of CertificateTemplates to include in the
 *  response. Further CertificateTemplates can subsequently be obtained by
 *  including the ListCertificateTemplatesResponse.next_page_token in a
 *  subsequent request. If unspecified, the server will pick an appropriate
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token, returned earlier via
 *  ListCertificateTemplatesResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location associated with the
 *  CertificateTemplates, in the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCertificateAuthorityService_ListCertificateTemplatesResponse.
 *
 *  Lists CertificateTemplates.
 *
 *  @param parent Required. The resource name of the location associated with
 *    the CertificateTemplates, in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a CertificateTemplate.
 *
 *  Method: privateca.projects.locations.certificateTemplates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesPatch : GTLRCertificateAuthorityServiceQuery

/**
 *  Output only. The resource name for this CertificateTemplate in the format
 *  `projects/ * /locations/ * /certificateTemplates/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server will guarantee that for at least
 *  60 minutes since the first request. For example, consider a situation where
 *  you make an initial request and t he request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, will ignore the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A list of fields to be updated in this request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Update a CertificateTemplate.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CertificateTemplate to
 *    include in the query.
 *  @param name Output only. The resource name for this CertificateTemplate in
 *    the format `projects/ * /locations/ * /certificateTemplates/ *`.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesPatch
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CertificateTemplate *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: privateca.projects.locations.certificateTemplates.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesSetIamPolicy : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCertificateAuthorityService_SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: privateca.projects.locations.certificateTemplates.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesTestIamPermissions : GTLRCertificateAuthorityServiceQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRCertificateAuthorityService_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsCertificateTemplatesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: privateca.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsGet : GTLRCertificateAuthorityServiceQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: privateca.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsList : GTLRCertificateAuthorityServiceQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: privateca.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsCancel : GTLRCertificateAuthorityServiceQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRCertificateAuthorityService_CancelOperationRequest
 *    to include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCertificateAuthorityService_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: privateca.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsDelete : GTLRCertificateAuthorityServiceQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: privateca.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsGet : GTLRCertificateAuthorityServiceQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: privateca.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCertificateAuthorityServiceCloudPlatform
 */
@interface GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsList : GTLRCertificateAuthorityServiceQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCertificateAuthorityService_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCertificateAuthorityServiceQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
