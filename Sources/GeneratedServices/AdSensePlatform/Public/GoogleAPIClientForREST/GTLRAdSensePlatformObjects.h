// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AdSense Platform API (adsenseplatform/v1)
// Documentation:
//   https://developers.google.com/adsense/platforms/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAdSensePlatform_Account;
@class GTLRAdSensePlatform_Address;
@class GTLRAdSensePlatform_EventInfo;
@class GTLRAdSensePlatform_Site;
@class GTLRAdSensePlatform_TimeZone;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAdSensePlatform_Account.state

/**
 *  The account is ready to serve ads.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Account_State_Approved;
/**
 *  The account has been blocked from serving ads.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Account_State_Disapproved;
/**
 *  Unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Account_State_StateUnspecified;
/**
 *  Unchecked.
 *
 *  Value: "UNCHECKED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Account_State_Unchecked;

// ----------------------------------------------------------------------------
// GTLRAdSensePlatform_Event.eventType

/**
 *  Do not use. You must set an event type explicitly.
 *
 *  Value: "EVENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Event_EventType_EventTypeUnspecified;
/**
 *  Log in via platform.
 *
 *  Value: "LOG_IN_VIA_PLATFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Event_EventType_LogInViaPlatform;
/**
 *  Sign up via platform.
 *
 *  Value: "SIGN_UP_VIA_PLATFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Event_EventType_SignUpViaPlatform;

// ----------------------------------------------------------------------------
// GTLRAdSensePlatform_Site.state

/**
 *  Google is running some checks on the site. This usually takes a few days,
 *  but in some cases it can take two to four weeks.
 *
 *  Value: "GETTING_READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Site_State_GettingReady;
/**
 *  Publisher needs to fix some issues before the site is ready to show ads.
 *  Learn what to do [if a new site isn't
 *  ready](https://support.google.com/adsense/answer/9061852).
 *
 *  Value: "NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Site_State_NeedsAttention;
/**
 *  The site is ready to show ads. Learn how to [set up ads on the
 *  site](https://support.google.com/adsense/answer/7037624).
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Site_State_Ready;
/**
 *  Either: - The site hasn't been checked yet. - The site is inactive and needs
 *  another review before it can show ads again. Learn how to [request a review
 *  for an inactive site](https://support.google.com/adsense/answer/9393996).
 *
 *  Value: "REQUIRES_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Site_State_RequiresReview;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdSensePlatform_Site_State_StateUnspecified;

/**
 *  Representation of an Account.
 */
@interface GTLRAdSensePlatform_Account : GTLRObject

/** Output only. Creation time of the account. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. An opaque token that uniquely identifies the account among all the
 *  platform's accounts. This string may contain at most 64 non-whitespace ASCII
 *  characters, but otherwise has no predefined structure. However, it is
 *  expected to be a platform-specific identifier for the user creating the
 *  account, so that only a single account can be created for any given user.
 *  This field must not contain any information that is recognizable as
 *  personally identifiable information. e.g. it should not be an email address
 *  or login name. Once an account has been created, a second attempt to create
 *  an account using the same creation_request_id will result in an
 *  ALREADY_EXISTS error.
 */
@property(nonatomic, copy, nullable) NSString *creationRequestId;

/** Display name of this account. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Resource name of the account. Format:
 *  platforms/pub-[0-9]+/accounts/pub-[0-9]+
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Input only. CLDR region code of the country/region of the address.
 *  Set this to country code of the child account if known, otherwise to your
 *  own country code.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Output only. Approval state of the account.
 *
 *  Likely values:
 *    @arg @c kGTLRAdSensePlatform_Account_State_Approved The account is ready
 *        to serve ads. (Value: "APPROVED")
 *    @arg @c kGTLRAdSensePlatform_Account_State_Disapproved The account has
 *        been blocked from serving ads. (Value: "DISAPPROVED")
 *    @arg @c kGTLRAdSensePlatform_Account_State_StateUnspecified Unspecified.
 *        (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAdSensePlatform_Account_State_Unchecked Unchecked. (Value:
 *        "UNCHECKED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Required. The IANA TZ timezone code of this account. For more information,
 *  see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. This field
 *  is used for reporting. It is recommended to set it to the same value for all
 *  child accounts.
 */
@property(nonatomic, strong, nullable) GTLRAdSensePlatform_TimeZone *timeZone;

@end


/**
 *  Address data.
 */
@interface GTLRAdSensePlatform_Address : GTLRObject

/** First line of address. Max length 64 bytes or 30 characters. */
@property(nonatomic, copy, nullable) NSString *address1;

/** Second line of address. Max length 64 bytes or 30 characters. */
@property(nonatomic, copy, nullable) NSString *address2;

/** City. Max length 60 bytes or 30 characters. */
@property(nonatomic, copy, nullable) NSString *city;

/** Name of the company. Max length 255 bytes or 34 characters. */
@property(nonatomic, copy, nullable) NSString *company;

/** Contact name of the company. Max length 128 bytes or 34 characters. */
@property(nonatomic, copy, nullable) NSString *contact;

/** Fax number with international code (i.e. +441234567890). */
@property(nonatomic, copy, nullable) NSString *fax;

/** Phone number with international code (i.e. +441234567890). */
@property(nonatomic, copy, nullable) NSString *phone;

/**
 *  Country/Region code. The region is specified as a CLDR region code (e.g.
 *  "US", "FR").
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

/** State. Max length 60 bytes or 30 characters. */
@property(nonatomic, copy, nullable) NSString *state;

/** Zip/post code. Max length 10 bytes or 10 characters. */
@property(nonatomic, copy, nullable) NSString *zip;

@end


/**
 *  Request definition for the account close rpc.
 */
@interface GTLRAdSensePlatform_CloseAccountRequest : GTLRObject
@end


/**
 *  Response definition for the account close rpc.
 */
@interface GTLRAdSensePlatform_CloseAccountResponse : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRAdSensePlatform_Empty : GTLRObject
@end


/**
 *  A platform sub-account event to record spam signals.
 */
@interface GTLRAdSensePlatform_Event : GTLRObject

/** Required. Information associated with the event. */
@property(nonatomic, strong, nullable) GTLRAdSensePlatform_EventInfo *eventInfo;

/** Required. Event timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  Required. Event type.
 *
 *  Likely values:
 *    @arg @c kGTLRAdSensePlatform_Event_EventType_EventTypeUnspecified Do not
 *        use. You must set an event type explicitly. (Value:
 *        "EVENT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAdSensePlatform_Event_EventType_LogInViaPlatform Log in via
 *        platform. (Value: "LOG_IN_VIA_PLATFORM")
 *    @arg @c kGTLRAdSensePlatform_Event_EventType_SignUpViaPlatform Sign up via
 *        platform. (Value: "SIGN_UP_VIA_PLATFORM")
 */
@property(nonatomic, copy, nullable) NSString *eventType;

@end


/**
 *  Private information for partner recorded events (PII).
 */
@interface GTLRAdSensePlatform_EventInfo : GTLRObject

/**
 *  The billing address of the publisher associated with this event, if
 *  available.
 */
@property(nonatomic, strong, nullable) GTLRAdSensePlatform_Address *billingAddress;

/**
 *  Required. The email address that is associated with the publisher when
 *  performing the event.
 */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  Response definition for the list accounts rpc.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "accounts" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSensePlatform_ListAccountsResponse : GTLRCollectionObject

/**
 *  The Accounts returned in the list response. Represented by a partial view of
 *  the Account resource, populating `name` and `creation_request_id`.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdSensePlatform_Account *> *accounts;

/**
 *  Continuation token used to page through accounts. To retrieve the next page
 *  of the results, set the next request's "page_token" value to this.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response definition for the site list rpc.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sites" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSensePlatform_ListSitesResponse : GTLRCollectionObject

/**
 *  Continuation token used to page through sites. To retrieve the next page of
 *  the results, set the next request's "page_token" value to this.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The sites returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdSensePlatform_Site *> *sites;

@end


/**
 *  Response definition for the lookup account rpc.
 */
@interface GTLRAdSensePlatform_LookupAccountResponse : GTLRObject

/**
 *  The name of the Account Format: platforms/{platform}/accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Response definition for the site request review rpc.
 */
@interface GTLRAdSensePlatform_RequestSiteReviewResponse : GTLRObject
@end


/**
 *  Representation of a Site.
 */
@interface GTLRAdSensePlatform_Site : GTLRObject

/**
 *  Domain/sub-domain of the site. Must be a valid domain complying with [RFC
 *  1035](https://www.ietf.org/rfc/rfc1035.txt) and formatted as punycode [RFC
 *  3492](https://www.ietf.org/rfc/rfc3492.txt) in case the domain contains
 *  unicode characters.
 */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  Output only. Resource name of a site. Format:
 *  platforms/{platform}/accounts/{account}/sites/{site}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. State of a site.
 *
 *  Likely values:
 *    @arg @c kGTLRAdSensePlatform_Site_State_GettingReady Google is running
 *        some checks on the site. This usually takes a few days, but in some
 *        cases it can take two to four weeks. (Value: "GETTING_READY")
 *    @arg @c kGTLRAdSensePlatform_Site_State_NeedsAttention Publisher needs to
 *        fix some issues before the site is ready to show ads. Learn what to do
 *        [if a new site isn't
 *        ready](https://support.google.com/adsense/answer/9061852). (Value:
 *        "NEEDS_ATTENTION")
 *    @arg @c kGTLRAdSensePlatform_Site_State_Ready The site is ready to show
 *        ads. Learn how to [set up ads on the
 *        site](https://support.google.com/adsense/answer/7037624). (Value:
 *        "READY")
 *    @arg @c kGTLRAdSensePlatform_Site_State_RequiresReview Either: - The site
 *        hasn't been checked yet. - The site is inactive and needs another
 *        review before it can show ads again. Learn how to [request a review
 *        for an inactive
 *        site](https://support.google.com/adsense/answer/9393996). (Value:
 *        "REQUIRES_REVIEW")
 *    @arg @c kGTLRAdSensePlatform_Site_State_StateUnspecified State
 *        unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a time zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones).
 */
@interface GTLRAdSensePlatform_TimeZone : GTLRObject

/**
 *  IANA Time Zone Database time zone. For example "America/New_York".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. IANA Time Zone Database version number. For example "2019a". */
@property(nonatomic, copy, nullable) NSString *version;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
