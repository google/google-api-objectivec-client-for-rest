// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Resource Manager API (cloudresourcemanager/v3)
// Description:
//   Creates, reads, and updates metadata for Google Cloud Platform resource
//   containers.
// Documentation:
//   https://cloud.google.com/resource-manager

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudResourceManagerObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Resource Manager query classes.
 */
@interface GTLRCloudResourceManagerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Return a list of effective tags for the given Google Cloud resource, as
 *  specified in `parent`.
 *
 *  Method: cloudresourcemanager.effectiveTags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_EffectiveTagsList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of effective tags to return in the response.
 *  The server allows a maximum of 300 effective tags to return in a single
 *  page. If unspecified, the server will use 100 as the default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `ListEffectiveTags` that indicates from where this listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The full resource name of a resource for which you want to list
 *  the effective tags. E.g.
 *  "//cloudresourcemanager.googleapis.com/projects/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListEffectiveTagsResponse.
 *
 *  Return a list of effective tags for the given Google Cloud resource, as
 *  specified in `parent`.
 *
 *  @return GTLRCloudResourceManagerQuery_EffectiveTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a folder in the resource hierarchy. Returns an `Operation` which can
 *  be used to track the progress of the folder creation workflow. Upon success,
 *  the `Operation.response` field will be populated with the created Folder. In
 *  order to succeed, the addition of this new folder must not violate the
 *  folder naming, height, or fanout constraints. + The folder's `display_name`
 *  must be distinct from all other folders that share its parent. + The
 *  addition of the folder must not cause the active folder hierarchy to exceed
 *  a height of 10. Note, the full active + deleted folder hierarchy is allowed
 *  to reach a height of 20; this provides additional headroom when moving
 *  folders that contain deleted folders. + The addition of the folder must not
 *  cause the total number of folders under its parent to exceed 300. If the
 *  operation fails due to a folder constraint violation, some errors may be
 *  returned by the `CreateFolder` request, with status code
 *  `FAILED_PRECONDITION` and an error description. Other folder constraint
 *  violations will be communicated in the `Operation`, with the specific
 *  `PreconditionFailure` returned in the details list in the `Operation.error`
 *  field. The caller must have `resourcemanager.folders.create` permission on
 *  the identified parent.
 *
 *  Method: cloudresourcemanager.folders.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersCreate : GTLRCloudResourceManagerQuery

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a folder in the resource hierarchy. Returns an `Operation` which can
 *  be used to track the progress of the folder creation workflow. Upon success,
 *  the `Operation.response` field will be populated with the created Folder. In
 *  order to succeed, the addition of this new folder must not violate the
 *  folder naming, height, or fanout constraints. + The folder's `display_name`
 *  must be distinct from all other folders that share its parent. + The
 *  addition of the folder must not cause the active folder hierarchy to exceed
 *  a height of 10. Note, the full active + deleted folder hierarchy is allowed
 *  to reach a height of 20; this provides additional headroom when moving
 *  folders that contain deleted folders. + The addition of the folder must not
 *  cause the total number of folders under its parent to exceed 300. If the
 *  operation fails due to a folder constraint violation, some errors may be
 *  returned by the `CreateFolder` request, with status code
 *  `FAILED_PRECONDITION` and an error description. Other folder constraint
 *  violations will be communicated in the `Operation`, with the specific
 *  `PreconditionFailure` returned in the details list in the `Operation.error`
 *  field. The caller must have `resourcemanager.folders.create` permission on
 *  the identified parent.
 *
 *  @param object The @c GTLRCloudResourceManager_Folder to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Folder *)object;

@end

/**
 *  Requests deletion of a folder. The folder is moved into the DELETE_REQUESTED
 *  state immediately, and is deleted approximately 30 days later. This method
 *  may only be called on an empty folder, where a folder is empty if it doesn't
 *  contain any folders or projects in the ACTIVE state. If called on a folder
 *  in DELETE_REQUESTED state the operation will result in a no-op success. The
 *  caller must have `resourcemanager.folders.delete` permission on the
 *  identified folder.
 *
 *  Method: cloudresourcemanager.folders.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersDelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the folder to be deleted. Must be of the form
 *  `folders/{folder_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Requests deletion of a folder. The folder is moved into the DELETE_REQUESTED
 *  state immediately, and is deleted approximately 30 days later. This method
 *  may only be called on an empty folder, where a folder is empty if it doesn't
 *  contain any folders or projects in the ACTIVE state. If called on a folder
 *  in DELETE_REQUESTED state the operation will result in a no-op success. The
 *  caller must have `resourcemanager.folders.delete` permission on the
 *  identified folder.
 *
 *  @param name Required. The resource name of the folder to be deleted. Must be
 *    of the form `folders/{folder_id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a folder identified by the supplied resource name. Valid folder
 *  resource names have the format `folders/{folder_id}` (for example,
 *  `folders/1234`). The caller must have `resourcemanager.folders.get`
 *  permission on the identified folder.
 *
 *  Method: cloudresourcemanager.folders.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_FoldersGet : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the folder to retrieve. Must be of the form
 *  `folders/{folder_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Folder.
 *
 *  Retrieves a folder identified by the supplied resource name. Valid folder
 *  resource names have the format `folders/{folder_id}` (for example,
 *  `folders/1234`). The caller must have `resourcemanager.folders.get`
 *  permission on the identified folder.
 *
 *  @param name Required. The resource name of the folder to retrieve. Must be
 *    of the form `folders/{folder_id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a folder. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the folder's resource name, for example: "folders/1234". The caller must
 *  have `resourcemanager.folders.getIamPolicy` permission on the identified
 *  folder.
 *
 *  Method: cloudresourcemanager.folders.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_FoldersGetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for a folder. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the folder's resource name, for example: "folders/1234". The caller must
 *  have `resourcemanager.folders.getIamPolicy` permission on the identified
 *  folder.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists the folders that are direct descendants of supplied parent resource.
 *  `list()` provides a strongly consistent view of the folders underneath the
 *  specified parent resource. `list()` returns folders sorted based upon the
 *  (ascending) lexical ordering of their display_name. The caller must have
 *  `resourcemanager.folders.list` permission on the identified parent.
 *
 *  Method: cloudresourcemanager.folders.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_FoldersList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of folders to return in the response. The
 *  server can return fewer folders than requested. If unspecified, server picks
 *  an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to `ListFolders`
 *  that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the organization or folder whose folders are
 *  being listed. Must be of the form `folders/{folder_id}` or
 *  `organizations/{org_id}`. Access to this method is controlled by checking
 *  the `resourcemanager.folders.list` permission on the `parent`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Controls whether folders in the DELETE_REQUESTED state should be
 *  returned. Defaults to false.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListFoldersResponse.
 *
 *  Lists the folders that are direct descendants of supplied parent resource.
 *  `list()` provides a strongly consistent view of the folders underneath the
 *  specified parent resource. `list()` returns folders sorted based upon the
 *  (ascending) lexical ordering of their display_name. The caller must have
 *  `resourcemanager.folders.list` permission on the identified parent.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Moves a folder under a new resource parent. Returns an `Operation` which can
 *  be used to track the progress of the folder move workflow. Upon success, the
 *  `Operation.response` field will be populated with the moved folder. Upon
 *  failure, a `FolderOperationError` categorizing the failure cause will be
 *  returned - if the failure occurs synchronously then the
 *  `FolderOperationError` will be returned in the `Status.details` field. If it
 *  occurs asynchronously, then the FolderOperation will be returned in the
 *  `Operation.error` field. In addition, the `Operation.metadata` field will be
 *  populated with a `FolderOperation` message as an aid to stateless clients.
 *  Folder moves will be rejected if they violate either the naming, height, or
 *  fanout constraints described in the CreateFolder documentation. The caller
 *  must have `resourcemanager.folders.move` permission on the folder's current
 *  and proposed new parent.
 *
 *  Method: cloudresourcemanager.folders.move
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersMove : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the Folder to move. Must be of the form
 *  folders/{folder_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Moves a folder under a new resource parent. Returns an `Operation` which can
 *  be used to track the progress of the folder move workflow. Upon success, the
 *  `Operation.response` field will be populated with the moved folder. Upon
 *  failure, a `FolderOperationError` categorizing the failure cause will be
 *  returned - if the failure occurs synchronously then the
 *  `FolderOperationError` will be returned in the `Status.details` field. If it
 *  occurs asynchronously, then the FolderOperation will be returned in the
 *  `Operation.error` field. In addition, the `Operation.metadata` field will be
 *  populated with a `FolderOperation` message as an aid to stateless clients.
 *  Folder moves will be rejected if they violate either the naming, height, or
 *  fanout constraints described in the CreateFolder documentation. The caller
 *  must have `resourcemanager.folders.move` permission on the folder's current
 *  and proposed new parent.
 *
 *  @param object The @c GTLRCloudResourceManager_MoveFolderRequest to include
 *    in the query.
 *  @param name Required. The resource name of the Folder to move. Must be of
 *    the form folders/{folder_id}
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersMove
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_MoveFolderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a folder, changing its `display_name`. Changes to the folder
 *  `display_name` will be rejected if they violate either the `display_name`
 *  formatting rules or the naming constraints described in the CreateFolder
 *  documentation. The folder's `display_name` must start and end with a letter
 *  or digit, may contain letters, digits, spaces, hyphens and underscores and
 *  can be between 3 and 30 characters. This is captured by the regular
 *  expression: `\\p{L}\\p{N}{1,28}[\\p{L}\\p{N}]`. The caller must have
 *  `resourcemanager.folders.update` permission on the identified folder. If the
 *  update fails due to the unique name constraint then a `PreconditionFailure`
 *  explaining this violation will be returned in the Status.details field.
 *
 *  Method: cloudresourcemanager.folders.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersPatch : GTLRCloudResourceManagerQuery

/**
 *  Output only. The resource name of the folder. Its format is
 *  `folders/{folder_id}`, for example: "folders/1234".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Fields to be updated. Only the `display_name` can be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates a folder, changing its `display_name`. Changes to the folder
 *  `display_name` will be rejected if they violate either the `display_name`
 *  formatting rules or the naming constraints described in the CreateFolder
 *  documentation. The folder's `display_name` must start and end with a letter
 *  or digit, may contain letters, digits, spaces, hyphens and underscores and
 *  can be between 3 and 30 characters. This is captured by the regular
 *  expression: `\\p{L}\\p{N}{1,28}[\\p{L}\\p{N}]`. The caller must have
 *  `resourcemanager.folders.update` permission on the identified folder. If the
 *  update fails due to the unique name constraint then a `PreconditionFailure`
 *  explaining this violation will be returned in the Status.details field.
 *
 *  @param object The @c GTLRCloudResourceManager_Folder to include in the
 *    query.
 *  @param name Output only. The resource name of the folder. Its format is
 *    `folders/{folder_id}`, for example: "folders/1234".
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Folder *)object
                           name:(NSString *)name;

@end

/**
 *  Search for folders that match specific filter criteria. `search()` provides
 *  an eventually consistent view of the folders a user has access to which meet
 *  the specified filter criteria. This will only return folders on which the
 *  caller has the permission `resourcemanager.folders.get`.
 *
 *  Method: cloudresourcemanager.folders.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_FoldersSearch : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of folders to return in the response. The
 *  server can return fewer folders than requested. If unspecified, server picks
 *  an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `SearchFolders` that indicates from where search should continue.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. Search criteria used to select the folders to return. If no search
 *  criteria is specified then all accessible folders will be returned. Query
 *  expressions can be used to restrict results based upon displayName, state
 *  and parent, where the operators `=` (`:`) `NOT`, `AND` and `OR` can be used
 *  along with the suffix wildcard symbol `*`. The `displayName` field in a
 *  query expression should use escaped quotes for values that include
 *  whitespace to prevent unexpected behavior. ``` | Field | Description |
 *  |-------------------------|----------------------------------------| |
 *  displayName | Filters by displayName. | | parent | Filters by parent (for
 *  example: folders/123). | | state, lifecycleState | Filters by state. | ```
 *  Some example queries are: * Query `displayName=Test*` returns Folder
 *  resources whose display name starts with "Test". * Query `state=ACTIVE`
 *  returns Folder resources with `state` set to `ACTIVE`. * Query
 *  `parent=folders/123` returns Folder resources that have `folders/123` as a
 *  parent resource. * Query `parent=folders/123 AND state=ACTIVE` returns
 *  active Folder resources that have `folders/123` as a parent resource. *
 *  Query `displayName=\\\\"Test String\\\\"` returns Folder resources with
 *  display names that include both "Test" and "String".
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudResourceManager_SearchFoldersResponse.
 *
 *  Search for folders that match specific filter criteria. `search()` provides
 *  an eventually consistent view of the folders a user has access to which meet
 *  the specified filter criteria. This will only return folders on which the
 *  caller has the permission `resourcemanager.folders.get`.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Sets the access control policy on a folder, replacing any existing policy.
 *  The `resource` field should be the folder's resource name, for example:
 *  "folders/1234". The caller must have `resourcemanager.folders.setIamPolicy`
 *  permission on the identified folder.
 *
 *  Method: cloudresourcemanager.folders.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersSetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on a folder, replacing any existing policy.
 *  The `resource` field should be the folder's resource name, for example:
 *  "folders/1234". The caller must have `resourcemanager.folders.setIamPolicy`
 *  permission on the identified folder.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified folder. The
 *  `resource` field should be the folder's resource name, for example:
 *  "folders/1234". There are no permissions required for making this API call.
 *
 *  Method: cloudresourcemanager.folders.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersTestIamPermissions : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified folder. The
 *  `resource` field should be the folder's resource name, for example:
 *  "folders/1234". There are no permissions required for making this API call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Cancels the deletion request for a folder. This method may be called on a
 *  folder in any state. If the folder is in the ACTIVE state the result will be
 *  a no-op success. In order to succeed, the folder's parent must be in the
 *  ACTIVE state. In addition, reintroducing the folder into the tree must not
 *  violate folder naming, height, and fanout constraints described in the
 *  CreateFolder documentation. The caller must have
 *  `resourcemanager.folders.undelete` permission on the identified folder.
 *
 *  Method: cloudresourcemanager.folders.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_FoldersUndelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the folder to undelete. Must be of the form
 *  `folders/{folder_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Cancels the deletion request for a folder. This method may be called on a
 *  folder in any state. If the folder is in the ACTIVE state the result will be
 *  a no-op success. In order to succeed, the folder's parent must be in the
 *  ACTIVE state. In addition, reintroducing the folder into the tree must not
 *  violate folder naming, height, and fanout constraints described in the
 *  CreateFolder documentation. The caller must have
 *  `resourcemanager.folders.undelete` permission on the identified folder.
 *
 *  @param object The @c GTLRCloudResourceManager_UndeleteFolderRequest to
 *    include in the query.
 *  @param name Required. The resource name of the folder to undelete. Must be
 *    of the form `folders/{folder_id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_FoldersUndelete
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_UndeleteFolderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Create a Lien which applies to the resource denoted by the `parent` field.
 *  Callers of this method will require permission on the `parent` resource. For
 *  example, applying to `projects/1234` requires permission
 *  `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the
 *  number of Liens which may be applied.
 *
 *  Method: cloudresourcemanager.liens.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensCreate : GTLRCloudResourceManagerQuery

/**
 *  Fetches a @c GTLRCloudResourceManager_Lien.
 *
 *  Create a Lien which applies to the resource denoted by the `parent` field.
 *  Callers of this method will require permission on the `parent` resource. For
 *  example, applying to `projects/1234` requires permission
 *  `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the
 *  number of Liens which may be applied.
 *
 *  @param object The @c GTLRCloudResourceManager_Lien to include in the query.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Lien *)object;

@end

/**
 *  Delete a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.updateLiens`.
 *
 *  Method: cloudresourcemanager.liens.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensDelete : GTLRCloudResourceManagerQuery

/** Required. The name/identifier of the Lien to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Empty.
 *
 *  Delete a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.updateLiens`.
 *
 *  @param name Required. The name/identifier of the Lien to delete.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.get`
 *
 *  Method: cloudresourcemanager.liens.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensGet : GTLRCloudResourceManagerQuery

/** Required. The name/identifier of the Lien. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Lien.
 *
 *  Retrieve a Lien by `name`. Callers of this method will require permission on
 *  the `parent` resource. For example, a Lien with a `parent` of
 *  `projects/1234` requires permission `resourcemanager.projects.get`
 *
 *  @param name Required. The name/identifier of the Lien.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List all Liens applied to the `parent` resource. Callers of this method will
 *  require permission on the `parent` resource. For example, a Lien with a
 *  `parent` of `projects/1234` requires permission
 *  `resourcemanager.projects.get`.
 *
 *  Method: cloudresourcemanager.liens.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_LiensList : GTLRCloudResourceManagerQuery

/**
 *  The maximum number of items to return. This is a suggestion for the server.
 *  The server can return fewer liens than requested. If unspecified, server
 *  picks an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The `next_page_token` value returned from a previous List request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the resource to list all attached Liens. For example,
 *  `projects/1234`. (google.api.field_policy).resource_type annotation is not
 *  set since the parent depends on the meta api implementation. This field
 *  could be a project or other sub project resources.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListLiensResponse.
 *
 *  List all Liens applied to the `parent` resource. Callers of this method will
 *  require permission on the `parent` resource. For example, a Lien with a
 *  `parent` of `projects/1234` requires permission
 *  `resourcemanager.projects.get`.
 *
 *  @return GTLRCloudResourceManagerQuery_LiensList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudresourcemanager.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OperationsGet : GTLRCloudResourceManagerQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudResourceManagerQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches an organization resource identified by the specified resource name.
 *
 *  Method: cloudresourcemanager.organizations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OrganizationsGet : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the Organization to fetch. This is the
 *  organization's relative path in the API, formatted as
 *  "organizations/[organizationId]". For example, "organizations/1234".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Organization.
 *
 *  Fetches an organization resource identified by the specified resource name.
 *
 *  @param name Required. The resource name of the Organization to fetch. This
 *    is the organization's relative path in the API, formatted as
 *    "organizations/[organizationId]". For example, "organizations/1234".
 *
 *  @return GTLRCloudResourceManagerQuery_OrganizationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for an organization resource. The policy may
 *  be empty if no such policy or resource exists. The `resource` field should
 *  be the organization's resource name, for example: "organizations/123".
 *  Authorization requires the IAM permission
 *  `resourcemanager.organizations.getIamPolicy` on the specified organization.
 *
 *  Method: cloudresourcemanager.organizations.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OrganizationsGetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for an organization resource. The policy may
 *  be empty if no such policy or resource exists. The `resource` field should
 *  be the organization's resource name, for example: "organizations/123".
 *  Authorization requires the IAM permission
 *  `resourcemanager.organizations.getIamPolicy` on the specified organization.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_OrganizationsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Searches organization resources that are visible to the user and satisfy the
 *  specified filter. This method returns organizations in an unspecified order.
 *  New organizations do not necessarily appear at the end of the results, and
 *  may take a small amount of time to appear. Search will only return
 *  organizations on which the user has the permission
 *  `resourcemanager.organizations.get`
 *
 *  Method: cloudresourcemanager.organizations.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OrganizationsSearch : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of organizations to return in the response. The
 *  server can return fewer organizations than requested. If unspecified, server
 *  picks an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `SearchOrganizations` that indicates from where listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. An optional query string used to filter the Organizations to
 *  return in the response. Query rules are case-insensitive. ``` | Field |
 *  Description |
 *  |------------------|--------------------------------------------| |
 *  directoryCustomerId, owner.directoryCustomerId | Filters by directory
 *  customer id. | | domain | Filters by domain. | ``` Organizations may be
 *  queried by `directoryCustomerId` or by `domain`, where the domain is a G
 *  Suite domain, for example: * Query `directorycustomerid:123456789` returns
 *  Organization resources with `owner.directory_customer_id` equal to
 *  `123456789`. * Query `domain:google.com` returns Organization resources
 *  corresponding to the domain `google.com`.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudResourceManager_SearchOrganizationsResponse.
 *
 *  Searches organization resources that are visible to the user and satisfy the
 *  specified filter. This method returns organizations in an unspecified order.
 *  New organizations do not necessarily appear at the end of the results, and
 *  may take a small amount of time to appear. Search will only return
 *  organizations on which the user has the permission
 *  `resourcemanager.organizations.get`
 *
 *  @return GTLRCloudResourceManagerQuery_OrganizationsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Sets the access control policy on an organization resource. Replaces any
 *  existing policy. The `resource` field should be the organization's resource
 *  name, for example: "organizations/123". Authorization requires the IAM
 *  permission `resourcemanager.organizations.setIamPolicy` on the specified
 *  organization.
 *
 *  Method: cloudresourcemanager.organizations.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_OrganizationsSetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on an organization resource. Replaces any
 *  existing policy. The `resource` field should be the organization's resource
 *  name, for example: "organizations/123". Authorization requires the IAM
 *  permission `resourcemanager.organizations.setIamPolicy` on the specified
 *  organization.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_OrganizationsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns the permissions that a caller has on the specified organization. The
 *  `resource` field should be the organization's resource name, for example:
 *  "organizations/123". There are no permissions required for making this API
 *  call.
 *
 *  Method: cloudresourcemanager.organizations.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_OrganizationsTestIamPermissions : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns the permissions that a caller has on the specified organization. The
 *  `resource` field should be the organization's resource name, for example:
 *  "organizations/123". There are no permissions required for making this API
 *  call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_OrganizationsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Request that a new project be created. The result is an `Operation` which
 *  can be used to track the creation process. This process usually takes a few
 *  seconds, but can sometimes take much longer. The tracking `Operation` is
 *  automatically deleted after a few hours, so there is no need to call
 *  `DeleteOperation`.
 *
 *  Method: cloudresourcemanager.projects.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsCreate : GTLRCloudResourceManagerQuery

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Request that a new project be created. The result is an `Operation` which
 *  can be used to track the creation process. This process usually takes a few
 *  seconds, but can sometimes take much longer. The tracking `Operation` is
 *  automatically deleted after a few hours, so there is no need to call
 *  `DeleteOperation`.
 *
 *  @param object The @c GTLRCloudResourceManager_Project to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Project *)object;

@end

/**
 *  Marks the project identified by the specified `name` (for example,
 *  `projects/415104041262`) for deletion. This method will only affect the
 *  project if it has a lifecycle state of ACTIVE. This method changes the
 *  Project's lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion
 *  starts at an unspecified time, at which point the Project is no longer
 *  accessible. Until the deletion completes, you can check the lifecycle state
 *  checked by retrieving the project with GetProject, and the project remains
 *  visible to ListProjects. However, you cannot update the project. After the
 *  deletion completes, the project is not retrievable by the GetProject,
 *  ListProjects, and SearchProjects methods. This method behaves idempotently,
 *  such that deleting a `DELETE_REQUESTED` project will not cause an error, but
 *  also won't do anything. The caller must have
 *  `resourcemanager.projects.delete` permissions for this project.
 *
 *  Method: cloudresourcemanager.projects.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsDelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The name of the Project (for example, `projects/415104041262`).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Marks the project identified by the specified `name` (for example,
 *  `projects/415104041262`) for deletion. This method will only affect the
 *  project if it has a lifecycle state of ACTIVE. This method changes the
 *  Project's lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion
 *  starts at an unspecified time, at which point the Project is no longer
 *  accessible. Until the deletion completes, you can check the lifecycle state
 *  checked by retrieving the project with GetProject, and the project remains
 *  visible to ListProjects. However, you cannot update the project. After the
 *  deletion completes, the project is not retrievable by the GetProject,
 *  ListProjects, and SearchProjects methods. This method behaves idempotently,
 *  such that deleting a `DELETE_REQUESTED` project will not cause an error, but
 *  also won't do anything. The caller must have
 *  `resourcemanager.projects.delete` permissions for this project.
 *
 *  @param name Required. The name of the Project (for example,
 *    `projects/415104041262`).
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the project identified by the specified `name` (for example,
 *  `projects/415104041262`). The caller must have
 *  `resourcemanager.projects.get` permission for this project.
 *
 *  Method: cloudresourcemanager.projects.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_ProjectsGet : GTLRCloudResourceManagerQuery

/**
 *  Required. The name of the project (for example, `projects/415104041262`).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Project.
 *
 *  Retrieves the project identified by the specified `name` (for example,
 *  `projects/415104041262`). The caller must have
 *  `resourcemanager.projects.get` permission for this project.
 *
 *  @param name Required. The name of the project (for example,
 *    `projects/415104041262`).
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the IAM access control policy for the specified project, in the
 *  format `projects/{ProjectIdOrNumber}` e.g. projects/123. Permission is
 *  denied if the policy or the resource do not exist.
 *
 *  Method: cloudresourcemanager.projects.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_ProjectsGetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Returns the IAM access control policy for the specified project, in the
 *  format `projects/{ProjectIdOrNumber}` e.g. projects/123. Permission is
 *  denied if the policy or the resource do not exist.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists projects that are direct children of the specified folder or
 *  organization resource. `list()` provides a strongly consistent view of the
 *  projects underneath the specified parent resource. `list()` returns projects
 *  sorted based upon the (ascending) lexical ordering of their `display_name`.
 *  The caller must have `resourcemanager.projects.list` permission on the
 *  identified parent.
 *
 *  Method: cloudresourcemanager.projects.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_ProjectsList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of projects to return in the response. The
 *  server can return fewer projects than requested. If unspecified, server
 *  picks an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to ListProjects
 *  that indicates from where listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource to list projects under. For
 *  example, setting this field to 'folders/1234' would list all projects
 *  directly under that folder.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Indicate that projects in the `DELETE_REQUESTED` state should also
 *  be returned. Normally only `ACTIVE` projects are returned.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListProjectsResponse.
 *
 *  Lists projects that are direct children of the specified folder or
 *  organization resource. `list()` provides a strongly consistent view of the
 *  projects underneath the specified parent resource. `list()` returns projects
 *  sorted based upon the (ascending) lexical ordering of their `display_name`.
 *  The caller must have `resourcemanager.projects.list` permission on the
 *  identified parent.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Move a project to another place in your resource hierarchy, under a new
 *  resource parent. Returns an operation which can be used to track the process
 *  of the project move workflow. Upon success, the `Operation.response` field
 *  will be populated with the moved project. The caller must have
 *  `resourcemanager.projects.move` permission on the project, on the project's
 *  current and proposed new parent. If project has no current parent, or it
 *  currently does not have an associated organization resource, you will also
 *  need the `resourcemanager.projects.setIamPolicy` permission in the project.
 *
 *  Method: cloudresourcemanager.projects.move
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsMove : GTLRCloudResourceManagerQuery

/** Required. The name of the project to move. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Move a project to another place in your resource hierarchy, under a new
 *  resource parent. Returns an operation which can be used to track the process
 *  of the project move workflow. Upon success, the `Operation.response` field
 *  will be populated with the moved project. The caller must have
 *  `resourcemanager.projects.move` permission on the project, on the project's
 *  current and proposed new parent. If project has no current parent, or it
 *  currently does not have an associated organization resource, you will also
 *  need the `resourcemanager.projects.setIamPolicy` permission in the project.
 *
 *  @param object The @c GTLRCloudResourceManager_MoveProjectRequest to include
 *    in the query.
 *  @param name Required. The name of the project to move.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsMove
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_MoveProjectRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the `display_name` and labels of the project identified by the
 *  specified `name` (for example, `projects/415104041262`). Deleting all labels
 *  requires an update mask for labels field. The caller must have
 *  `resourcemanager.projects.update` permission for this project.
 *
 *  Method: cloudresourcemanager.projects.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsPatch : GTLRCloudResourceManagerQuery

/**
 *  Output only. The unique resource name of the project. It is an int64
 *  generated number prefixed by "projects/". Example: `projects/415104041262`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An update mask to selectively update fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates the `display_name` and labels of the project identified by the
 *  specified `name` (for example, `projects/415104041262`). Deleting all labels
 *  requires an update mask for labels field. The caller must have
 *  `resourcemanager.projects.update` permission for this project.
 *
 *  @param object The @c GTLRCloudResourceManager_Project to include in the
 *    query.
 *  @param name Output only. The unique resource name of the project. It is an
 *    int64 generated number prefixed by "projects/". Example:
 *    `projects/415104041262`
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_Project *)object
                           name:(NSString *)name;

@end

/**
 *  Search for projects that the caller has both `resourcemanager.projects.get`
 *  permission on, and also satisfy the specified query. This method returns
 *  projects in an unspecified order. This method is eventually consistent with
 *  project mutations; this means that a newly created project may not appear in
 *  the results or recent updates to an existing project may not be reflected in
 *  the results. To retrieve the latest state of a project, use the GetProject
 *  method.
 *
 *  Method: cloudresourcemanager.projects.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsSearch : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of projects to return in the response. The
 *  server can return fewer projects than requested. If unspecified, server
 *  picks an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to ListProjects
 *  that indicates from where listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. A query string for searching for projects that the caller has
 *  `resourcemanager.projects.get` permission to. If multiple fields are
 *  included in the query, then it will return results that match any of the
 *  fields. Some eligible fields are: ``` | Field | Description |
 *  |-------------------------|----------------------------------------------| |
 *  displayName, name | Filters by displayName. | | parent | Project's parent
 *  (for example: folders/123, organizations/ *). Prefer parent field over
 *  parent.type and parent.id.| | parent.type | Parent's type: `folder` or
 *  `organization`. | | parent.id | Parent's id number (for example: 123) | |
 *  id, projectId | Filters by projectId. | | state, lifecycleState | Filters by
 *  state. | | labels | Filters by label name or value. | | labels.\\ (where
 *  *key* is the name of a label) | Filters by label name.| ``` Search
 *  expressions are case insensitive. Some examples queries: ``` | Query |
 *  Description |
 *  |------------------|-----------------------------------------------------| |
 *  name:how* | The project's name starts with "how". | | name:Howl | The
 *  project's name is `Howl` or `howl`. | | name:HOWL | Equivalent to above. | |
 *  NAME:howl | Equivalent to above. | | labels.color:* | The project has the
 *  label `color`. | | labels.color:red | The project's label `color` has the
 *  value `red`. | | labels.color:red labels.size:big | The project's label
 *  `color` has the value `red` or its label `size` has the value `big`. | ```
 *  If no query is specified, the call will return projects for which the user
 *  has the `resourcemanager.projects.get` permission.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudResourceManager_SearchProjectsResponse.
 *
 *  Search for projects that the caller has both `resourcemanager.projects.get`
 *  permission on, and also satisfy the specified query. This method returns
 *  projects in an unspecified order. This method is eventually consistent with
 *  project mutations; this means that a newly created project may not appear in
 *  the results or recent updates to an existing project may not be reflected in
 *  the results. To retrieve the latest state of a project, use the GetProject
 *  method.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Sets the IAM access control policy for the specified project, in the format
 *  `projects/{ProjectIdOrNumber}` e.g. projects/123. CAUTION: This method will
 *  replace the existing policy, and cannot be used to append additional IAM
 *  settings. Note: Removing service accounts from policies or changing their
 *  roles can render services completely inoperable. It is important to
 *  understand how the service account is being used before removing or updating
 *  its roles. The following constraints apply when using `setIamPolicy()`: +
 *  Project does not support `allUsers` and `allAuthenticatedUsers` as `members`
 *  in a `Binding` of a `Policy`. + The owner role can be granted to a `user`,
 *  `serviceAccount`, or a group that is part of an organization. For example,
 *  group\@myownpersonaldomain.com could be added as an owner to a project in
 *  the myownpersonaldomain.com organization, but not the examplepetstore.com
 *  organization. + Service accounts can be made owners of a project directly
 *  without any restrictions. However, to be added as an owner, a user must be
 *  invited using the Cloud Platform console and must accept the invitation. + A
 *  user cannot be granted the owner role using `setIamPolicy()`. The user must
 *  be granted the owner role using the Cloud Platform Console and must
 *  explicitly accept the invitation. + Invitations to grant the owner role
 *  cannot be sent using `setIamPolicy()`; they must be sent only using the
 *  Cloud Platform Console. + If the project is not part of an organization,
 *  there must be at least one owner who has accepted the Terms of Service (ToS)
 *  agreement in the policy. Calling `setIamPolicy()` to remove the last
 *  ToS-accepted owner from the policy will fail. This restriction also applies
 *  to legacy projects that no longer have owners who have accepted the ToS.
 *  Edits to IAM policies will be rejected until the lack of a ToS-accepting
 *  owner is rectified. If the project is part of an organization, you can
 *  remove all owners, potentially making the organization inaccessible.
 *
 *  Method: cloudresourcemanager.projects.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsSetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the IAM access control policy for the specified project, in the format
 *  `projects/{ProjectIdOrNumber}` e.g. projects/123. CAUTION: This method will
 *  replace the existing policy, and cannot be used to append additional IAM
 *  settings. Note: Removing service accounts from policies or changing their
 *  roles can render services completely inoperable. It is important to
 *  understand how the service account is being used before removing or updating
 *  its roles. The following constraints apply when using `setIamPolicy()`: +
 *  Project does not support `allUsers` and `allAuthenticatedUsers` as `members`
 *  in a `Binding` of a `Policy`. + The owner role can be granted to a `user`,
 *  `serviceAccount`, or a group that is part of an organization. For example,
 *  group\@myownpersonaldomain.com could be added as an owner to a project in
 *  the myownpersonaldomain.com organization, but not the examplepetstore.com
 *  organization. + Service accounts can be made owners of a project directly
 *  without any restrictions. However, to be added as an owner, a user must be
 *  invited using the Cloud Platform console and must accept the invitation. + A
 *  user cannot be granted the owner role using `setIamPolicy()`. The user must
 *  be granted the owner role using the Cloud Platform Console and must
 *  explicitly accept the invitation. + Invitations to grant the owner role
 *  cannot be sent using `setIamPolicy()`; they must be sent only using the
 *  Cloud Platform Console. + If the project is not part of an organization,
 *  there must be at least one owner who has accepted the Terms of Service (ToS)
 *  agreement in the policy. Calling `setIamPolicy()` to remove the last
 *  ToS-accepted owner from the policy will fail. This restriction also applies
 *  to legacy projects that no longer have owners who have accepted the ToS.
 *  Edits to IAM policies will be rejected until the lack of a ToS-accepting
 *  owner is rectified. If the project is part of an organization, you can
 *  remove all owners, potentially making the organization inaccessible.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified project, in the
 *  format `projects/{ProjectIdOrNumber}` e.g. projects/123..
 *
 *  Method: cloudresourcemanager.projects.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_ProjectsTestIamPermissions : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified project, in the
 *  format `projects/{ProjectIdOrNumber}` e.g. projects/123..
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Restores the project identified by the specified `name` (for example,
 *  `projects/415104041262`). You can only use this method for a project that
 *  has a lifecycle state of DELETE_REQUESTED. After deletion starts, the
 *  project cannot be restored. The caller must have
 *  `resourcemanager.projects.undelete` permission for this project.
 *
 *  Method: cloudresourcemanager.projects.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_ProjectsUndelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The name of the project (for example, `projects/415104041262`).
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Restores the project identified by the specified `name` (for example,
 *  `projects/415104041262`). You can only use this method for a project that
 *  has a lifecycle state of DELETE_REQUESTED. After deletion starts, the
 *  project cannot be restored. The caller must have
 *  `resourcemanager.projects.undelete` permission for this project.
 *
 *  @param object The @c GTLRCloudResourceManager_UndeleteProjectRequest to
 *    include in the query.
 *  @param name Required. The name of the project (for example,
 *    `projects/415104041262`). Required.
 *
 *  @return GTLRCloudResourceManagerQuery_ProjectsUndelete
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_UndeleteProjectRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a TagBinding between a TagValue and a Google Cloud resource.
 *
 *  Method: cloudresourcemanager.tagBindings.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsCreate : GTLRCloudResourceManagerQuery

/**
 *  Optional. Set to true to perform the validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a TagBinding between a TagValue and a Google Cloud resource.
 *
 *  @param object The @c GTLRCloudResourceManager_TagBinding to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagBinding *)object;

@end

/**
 *  Deletes a TagBinding.
 *
 *  Method: cloudresourcemanager.tagBindings.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsDelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The name of the TagBinding. This is a String of the form:
 *  `tagBindings/{id}` (e.g.
 *  `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagBinding.
 *
 *  @param name Required. The name of the TagBinding. This is a String of the
 *    form: `tagBindings/{id}` (e.g.
 *    `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the TagBindings for the given Google Cloud resource, as specified with
 *  `parent`. NOTE: The `parent` field is expected to be a full resource name:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *
 *  Method: cloudresourcemanager.tagBindings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagBindingsList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of TagBindings to return in the response. The
 *  server allows a maximum of 300 TagBindings to return. If unspecified, the
 *  server will use 100 as the default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `ListTagBindings` that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The full resource name of a resource for which you want to list
 *  existing TagBindings. E.g.
 *  "//cloudresourcemanager.googleapis.com/projects/123"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagBindingsResponse.
 *
 *  Lists the TagBindings for the given Google Cloud resource, as specified with
 *  `parent`. NOTE: The `parent` field is expected to be a full resource name:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 *
 *  @return GTLRCloudResourceManagerQuery_TagBindingsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new TagKey. If another request with the same parameters is sent
 *  while the original request is in process, the second request will receive an
 *  error. A maximum of 1000 TagKeys can exist under a parent at any given time.
 *
 *  Method: cloudresourcemanager.tagKeys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysCreate : GTLRCloudResourceManagerQuery

/**
 *  Optional. Set to true to perform validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a new TagKey. If another request with the same parameters is sent
 *  while the original request is in process, the second request will receive an
 *  error. A maximum of 1000 TagKeys can exist under a parent at any given time.
 *
 *  @param object The @c GTLRCloudResourceManager_TagKey to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object;

@end

/**
 *  Deletes a TagKey. The TagKey cannot be deleted if it has any child
 *  TagValues.
 *
 *  Method: cloudresourcemanager.tagKeys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysDelete : GTLRCloudResourceManagerQuery

/**
 *  Optional. The etag known to the client for the expected state of the TagKey.
 *  This is to be used for optimistic concurrency.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The resource name of a TagKey to be deleted in the format
 *  `tagKeys/123`. The TagKey cannot be a parent of any existing TagValues or it
 *  will not be deleted successfully.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Set as true to perform validations necessary for deletion, but not
 *  actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagKey. The TagKey cannot be deleted if it has any child
 *  TagValues.
 *
 *  @param name Required. The resource name of a TagKey to be deleted in the
 *    format `tagKeys/123`. The TagKey cannot be a parent of any existing
 *    TagValues or it will not be deleted successfully.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key
 *  does not exist or the user does not have permission to view it.
 *
 *  Method: cloudresourcemanager.tagKeys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysGet : GTLRCloudResourceManagerQuery

/**
 *  Required. A resource name in the format `tagKeys/{id}`, such as
 *  `tagKeys/123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_TagKey.
 *
 *  Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key
 *  does not exist or the user does not have permission to view it.
 *
 *  @param name Required. A resource name in the format `tagKeys/{id}`, such as
 *    `tagKeys/123`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a TagKey. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagKey's resource name. For example, "tagKeys/1234". The caller must
 *  have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission
 *  on the specified TagKey.
 *
 *  Method: cloudresourcemanager.tagKeys.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for a TagKey. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagKey's resource name. For example, "tagKeys/1234". The caller must
 *  have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission
 *  on the specified TagKey.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all TagKeys for a parent resource.
 *
 *  Method: cloudresourcemanager.tagKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagKeysList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of TagKeys to return in the response. The
 *  server allows a maximum of 300 TagKeys to return. If unspecified, the server
 *  will use 100 as the default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to `ListTagKey`
 *  that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the new TagKey's parent. Must be of the form
 *  `folders/{folder_id}` or `organizations/{org_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagKeysResponse.
 *
 *  Lists all TagKeys for a parent resource.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the attributes of the TagKey resource.
 *
 *  Method: cloudresourcemanager.tagKeys.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysPatch : GTLRCloudResourceManagerQuery

/**
 *  Immutable. The resource name for a TagKey. Must be in the format
 *  `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
 *  the TagKey.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fields to be updated. The mask may only contain `description` or `etag`. If
 *  omitted entirely, both `description` and `etag` are assumed to be
 *  significant.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Set as true to perform validations necessary for updating the resource, but
 *  not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates the attributes of the TagKey resource.
 *
 *  @param object The @c GTLRCloudResourceManager_TagKey to include in the
 *    query.
 *  @param name Immutable. The resource name for a TagKey. Must be in the format
 *    `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
 *    the TagKey.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagKey *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on a TagKey, replacing any existing policy.
 *  The `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy`
 *  permission on the identified tagValue.
 *
 *  Method: cloudresourcemanager.tagKeys.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on a TagKey, replacing any existing policy.
 *  The `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy`
 *  permission on the identified tagValue.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified TagKey. The
 *  `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". There are no permissions required for making this API call.
 *
 *  Method: cloudresourcemanager.tagKeys.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified TagKey. The
 *  `resource` field should be the TagKey's resource name. For example,
 *  "tagKeys/1234". There are no permissions required for making this API call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagKeysTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a TagValue as a child of the specified TagKey. If a another request
 *  with the same parameters is sent while the original request is in process
 *  the second request will receive an error. A maximum of 1000 TagValues can
 *  exist under a TagKey at any given time.
 *
 *  Method: cloudresourcemanager.tagValues.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesCreate : GTLRCloudResourceManagerQuery

/**
 *  Optional. Set as true to perform the validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a TagValue as a child of the specified TagKey. If a another request
 *  with the same parameters is sent while the original request is in process
 *  the second request will receive an error. A maximum of 1000 TagValues can
 *  exist under a TagKey at any given time.
 *
 *  @param object The @c GTLRCloudResourceManager_TagValue to include in the
 *    query.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object;

@end

/**
 *  Deletes a TagValue. The TagValue cannot have any bindings when it is
 *  deleted.
 *
 *  Method: cloudresourcemanager.tagValues.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesDelete : GTLRCloudResourceManagerQuery

/**
 *  Optional. The etag known to the client for the expected state of the
 *  TagValue. This is to be used for optimistic concurrency.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Resource name for TagValue to be deleted in the format
 *  tagValues/456.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Set as true to perform the validations necessary for deletion, but
 *  not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagValue. The TagValue cannot have any bindings when it is
 *  deleted.
 *
 *  @param name Required. Resource name for TagValue to be deleted in the format
 *    tagValues/456.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a TagValue. This method will return `PERMISSION_DENIED` if the
 *  value does not exist or the user does not have permission to view it.
 *
 *  Method: cloudresourcemanager.tagValues.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesGet : GTLRCloudResourceManagerQuery

/**
 *  Required. Resource name for TagValue to be fetched in the format
 *  `tagValues/456`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudResourceManager_TagValue.
 *
 *  Retrieves a TagValue. This method will return `PERMISSION_DENIED` if the
 *  value does not exist or the user does not have permission to view it.
 *
 *  @param name Required. Resource name for TagValue to be fetched in the format
 *    `tagValues/456`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a TagValue. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagValue's resource name. For example: `tagValues/1234`. The caller must
 *  have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy`
 *  permission on the identified TagValue to get the access control policy.
 *
 *  Method: cloudresourcemanager.tagValues.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Gets the access control policy for a TagValue. The returned policy may be
 *  empty if no such policy or resource exists. The `resource` field should be
 *  the TagValue's resource name. For example: `tagValues/1234`. The caller must
 *  have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy`
 *  permission on the identified TagValue to get the access control policy.
 *
 *  @param object The @c GTLRCloudResourceManager_GetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all TagValues for a specific TagKey.
 *
 *  Method: cloudresourcemanager.tagValues.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesList : GTLRCloudResourceManagerQuery

/**
 *  Optional. The maximum number of TagValues to return in the response. The
 *  server allows a maximum of 300 TagValues to return. If unspecified, the
 *  server will use 100 as the default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to
 *  `ListTagValues` that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Resource name for TagKey, parent of the TagValues to be listed, in
 *  the format `tagKeys/123`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagValuesResponse.
 *
 *  Lists all TagValues for a specific TagKey.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates the attributes of the TagValue resource.
 *
 *  Method: cloudresourcemanager.tagValues.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesPatch : GTLRCloudResourceManagerQuery

/** Immutable. Resource name for TagValue in the format `tagValues/456`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. True to perform validations necessary for updating the resource,
 *  but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Updates the attributes of the TagValue resource.
 *
 *  @param object The @c GTLRCloudResourceManager_TagValue to include in the
 *    query.
 *  @param name Immutable. Resource name for TagValue in the format
 *    `tagValues/456`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagValue *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on a TagValue, replacing any existing policy.
 *  The `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. The caller must have
 *  `resourcemanager.tagValues.setIamPolicy` permission on the identified
 *  tagValue.
 *
 *  Method: cloudresourcemanager.tagValues.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_Policy.
 *
 *  Sets the access control policy on a TagValue, replacing any existing policy.
 *  The `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. The caller must have
 *  `resourcemanager.tagValues.setIamPolicy` permission on the identified
 *  tagValue.
 *
 *  @param object The @c GTLRCloudResourceManager_SetIamPolicyRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a TagHold. Returns ALREADY_EXISTS if a TagHold with the same
 *  resource and origin exists under the same TagValue.
 *
 *  Method: cloudresourcemanager.tagValues.tagHolds.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesTagHoldsCreate : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the TagHold's parent TagValue. Must be of the
 *  form: `tagValues/{tag-value-id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Set to true to perform the validations necessary for creating the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Creates a TagHold. Returns ALREADY_EXISTS if a TagHold with the same
 *  resource and origin exists under the same TagValue.
 *
 *  @param object The @c GTLRCloudResourceManager_TagHold to include in the
 *    query.
 *  @param parent Required. The resource name of the TagHold's parent TagValue.
 *    Must be of the form: `tagValues/{tag-value-id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesTagHoldsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TagHold *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TagHold.
 *
 *  Method: cloudresourcemanager.tagValues.tagHolds.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesTagHoldsDelete : GTLRCloudResourceManagerQuery

/**
 *  Required. The resource name of the TagHold to delete. Must be of the form:
 *  `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Set to true to perform the validations necessary for deleting the
 *  resource, but not actually perform the action.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudResourceManager_Operation.
 *
 *  Deletes a TagHold.
 *
 *  @param name Required. The resource name of the TagHold to delete. Must be of
 *    the form: `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesTagHoldsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TagHolds under a TagValue.
 *
 *  Method: cloudresourcemanager.tagValues.tagHolds.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatformReadOnly
 */
@interface GTLRCloudResourceManagerQuery_TagValuesTagHoldsList : GTLRCloudResourceManagerQuery

/**
 *  Optional. Criteria used to select a subset of TagHolds parented by the
 *  TagValue to return. This field follows the syntax defined by aip.dev/160;
 *  the `holder` and `origin` fields are supported for filtering. Currently only
 *  `AND` syntax is supported. Some example queries are: * `holder =
 *  //compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`
 *  * `origin = 35678234` * `holder =
 *  //compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group
 *  AND origin = 35678234`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of TagHolds to return in the response. The
 *  server allows a maximum of 300 TagHolds to return. If unspecified, the
 *  server will use 100 as the default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A pagination token returned from a previous call to `ListTagHolds`
 *  that indicates where this listing should continue from.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent TagValue. Must be of the form:
 *  `tagValues/{tag-value-id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudResourceManager_ListTagHoldsResponse.
 *
 *  Lists TagHolds under a TagValue.
 *
 *  @param parent Required. The resource name of the parent TagValue. Must be of
 *    the form: `tagValues/{tag-value-id}`.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesTagHoldsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns permissions that a caller has on the specified TagValue. The
 *  `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. There are no permissions required for making this API
 *  call.
 *
 *  Method: cloudresourcemanager.tagValues.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudResourceManagerCloudPlatform
 */
@interface GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions : GTLRCloudResourceManagerQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudResourceManager_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified TagValue. The
 *  `resource` field should be the TagValue's resource name. For example:
 *  `tagValues/1234`. There are no permissions required for making this API
 *  call.
 *
 *  @param object The @c GTLRCloudResourceManager_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudResourceManagerQuery_TagValuesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudResourceManager_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
