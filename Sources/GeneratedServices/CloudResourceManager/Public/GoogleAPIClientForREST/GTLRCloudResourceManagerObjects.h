// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Resource Manager API (cloudresourcemanager/v3)
// Description:
//   Creates, reads, and updates metadata for Google Cloud Platform resource
//   containers.
// Documentation:
//   https://cloud.google.com/resource-manager

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudResourceManager_AuditConfig;
@class GTLRCloudResourceManager_AuditLogConfig;
@class GTLRCloudResourceManager_Binding;
@class GTLRCloudResourceManager_EffectiveTag;
@class GTLRCloudResourceManager_Expr;
@class GTLRCloudResourceManager_Folder;
@class GTLRCloudResourceManager_GetPolicyOptions;
@class GTLRCloudResourceManager_Lien;
@class GTLRCloudResourceManager_Operation_Metadata;
@class GTLRCloudResourceManager_Operation_Response;
@class GTLRCloudResourceManager_Organization;
@class GTLRCloudResourceManager_Policy;
@class GTLRCloudResourceManager_Project;
@class GTLRCloudResourceManager_Project_Labels;
@class GTLRCloudResourceManager_Status;
@class GTLRCloudResourceManager_Status_Details_Item;
@class GTLRCloudResourceManager_TagBinding;
@class GTLRCloudResourceManager_TagHold;
@class GTLRCloudResourceManager_TagKey;
@class GTLRCloudResourceManager_TagKey_PurposeData;
@class GTLRCloudResourceManager_TagValue;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_Folder.state

/**
 *  The normal and active state.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Folder_State_Active;
/**
 *  The folder has been marked for deletion by the user.
 *
 *  Value: "DELETE_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Folder_State_DeleteRequested;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Folder_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_FolderOperation.operationType

/**
 *  A create folder operation.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperation_OperationType_Create;
/**
 *  A move folder operation.
 *
 *  Value: "MOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperation_OperationType_Move;
/**
 *  Operation type not specified.
 *
 *  Value: "OPERATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperation_OperationType_OperationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_FolderOperationError.errorMessageId

/**
 *  The attempted action would violate the max folder depth constraint.
 *
 *  Value: "ACTIVE_FOLDER_HEIGHT_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ActiveFolderHeightViolation;
/**
 *  The attempted action would introduce cycle in resource path.
 *
 *  Value: "CYCLE_INTRODUCED_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_CycleIntroducedViolation;
/**
 *  The attempted action would violate the max deleted folder depth constraint.
 *
 *  Value: "DELETED_FOLDER_HEIGHT_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_DeletedFolderHeightViolation;
/**
 *  The error type was unrecognized or unspecified.
 *
 *  Value: "ERROR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ErrorTypeUnspecified;
/**
 *  The attempted action would move a folder that is already being moved.
 *
 *  Value: "FOLDER_BEING_MOVED_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderBeingMovedViolation;
/**
 *  The attempted action would violate the locally-unique folder display_name
 *  constraint.
 *
 *  Value: "FOLDER_NAME_UNIQUENESS_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderNameUniquenessViolation;
/**
 *  The folder the caller is trying to delete contains active resources.
 *
 *  Value: "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderToDeleteNonEmptyViolation;
/**
 *  The attempted action would violate the max child folders constraint.
 *
 *  Value: "MAX_CHILD_FOLDERS_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_MaxChildFoldersViolation;
/**
 *  The resource a folder was being added to has been deleted.
 *
 *  Value: "PARENT_DELETED_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ParentDeletedViolation;
/**
 *  The resource being moved has been deleted.
 *
 *  Value: "RESOURCE_DELETED_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ResourceDeletedViolation;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation.operationType

/**
 *  A create folder operation.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_Create;
/**
 *  A move folder operation.
 *
 *  Value: "MOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_Move;
/**
 *  Operation type not specified.
 *
 *  Value: "OPERATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_OperationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation.operationType

/**
 *  A create folder operation.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_Create;
/**
 *  A move folder operation.
 *
 *  Value: "MOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_Move;
/**
 *  Operation type not specified.
 *
 *  Value: "OPERATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_OperationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_Organization.state

/**
 *  The normal and active state.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Organization_State_Active;
/**
 *  The organization has been marked for deletion by the user.
 *
 *  Value: "DELETE_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Organization_State_DeleteRequested;
/**
 *  Unspecified state. This is only useful for distinguishing unset values.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Organization_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_Project.state

/**
 *  The normal and active state.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Project_State_Active;
/**
 *  The project has been marked for deletion by the user (by invoking
 *  DeleteProject) or by the system (Google Cloud Platform). This can generally
 *  be reversed by invoking UndeleteProject.
 *
 *  Value: "DELETE_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Project_State_DeleteRequested;
/**
 *  Unspecified state. This is only used/useful for distinguishing unset values.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_Project_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudResourceManager_TagKey.purpose

/**
 *  Purpose for Compute Engine firewalls. A corresponding purpose_data should be
 *  set for the network the tag is intended for. The key should be 'network' and
 *  the value should be in either of these two formats:
 *  -https://www.googleapis.com/compute/{compute_version}/projects/{project_id}/global/networks/{network_id}
 *  -{project_id}/{network_name} Examples:
 *  -https://www.googleapis.com/compute/staging_v1/projects/fail-closed-load-testing/global/networks/6992953698831725600
 *  -fail-closed-load-testing/load-testing-network
 *
 *  Value: "GCE_FIREWALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_TagKey_Purpose_GceFirewall;
/**
 *  Unspecified purpose.
 *
 *  Value: "PURPOSE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudResourceManager_TagKey_Purpose_PurposeUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRCloudResourceManager_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCloudResourceManager_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCloudResourceManager_AuditLogConfig_LogType_DataRead Data
 *        reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCloudResourceManager_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCloudResourceManager_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCloudResourceManager_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Metadata pertaining to the Folder creation process.
 */
@interface GTLRCloudResourceManager_CreateFolderMetadata : GTLRObject

/** The display name of the folder. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The resource name of the folder or organization we are creating the folder
 *  under.
 */
@property(nonatomic, copy, nullable) NSString *parent;

@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by CreateProject. It provides insight for when significant phases
 *  of Project creation have completed.
 */
@interface GTLRCloudResourceManager_CreateProjectMetadata : GTLRObject

/** Creation time of the project creation workflow. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  True if the project can be retrieved using `GetProject`. No other operations
 *  on the project are guaranteed to work until the project creation is
 *  complete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gettable;

/**
 *  True if the project creation process is complete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ready;

@end


/**
 *  Runtime operation information for creating a TagValue.
 */
@interface GTLRCloudResourceManager_CreateTagBindingMetadata : GTLRObject
@end


/**
 *  Runtime operation information for creating a TagKey.
 */
@interface GTLRCloudResourceManager_CreateTagKeyMetadata : GTLRObject
@end


/**
 *  Runtime operation information for creating a TagValue.
 */
@interface GTLRCloudResourceManager_CreateTagValueMetadata : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the `Operation`
 *  returned by `DeleteFolder`.
 */
@interface GTLRCloudResourceManager_DeleteFolderMetadata : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the operation
 *  returned by DeleteOrganization.
 */
@interface GTLRCloudResourceManager_DeleteOrganizationMetadata : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by `DeleteProject`.
 */
@interface GTLRCloudResourceManager_DeleteProjectMetadata : GTLRObject
@end


/**
 *  Runtime operation information for deleting a TagBinding.
 */
@interface GTLRCloudResourceManager_DeleteTagBindingMetadata : GTLRObject
@end


/**
 *  Runtime operation information for deleting a TagKey.
 */
@interface GTLRCloudResourceManager_DeleteTagKeyMetadata : GTLRObject
@end


/**
 *  Runtime operation information for deleting a TagValue.
 */
@interface GTLRCloudResourceManager_DeleteTagValueMetadata : GTLRObject
@end


/**
 *  An EffectiveTag represents a tag that applies to a resource during policy
 *  evaluation. Tags can be either directly bound to a resource or inherited
 *  from its ancestor. EffectiveTag contains the name and namespaced_name of the
 *  tag value and tag key, with additional fields of `inherited` to indicate the
 *  inheritance status of the effective tag.
 */
@interface GTLRCloudResourceManager_EffectiveTag : GTLRObject

/**
 *  Indicates the inheritance status of a tag value attached to the given
 *  resource. If the tag value is inherited from one of the resource's
 *  ancestors, inherited will be true. If false, then the tag value is directly
 *  attached to the resource, inherited will be false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inherited;

/**
 *  The namespaced_name of the TagKey. Now only supported in the format of
 *  `{organization_id}/{tag_key_short_name}`. Other formats will be supported
 *  when we add non-org parented tags.
 */
@property(nonatomic, copy, nullable) NSString *namespacedTagKey;

/**
 *  Namespaced name of the TagValue. Now only supported in the format
 *  `{organization_id}/{tag_key_short_name}/{tag_value_short_name}`. Other
 *  formats will be supported when we add non-org parented tags.
 */
@property(nonatomic, copy, nullable) NSString *namespacedTagValue;

/**
 *  The name of the TagKey, in the format `tagKeys/{id}`, such as `tagKeys/123`.
 */
@property(nonatomic, copy, nullable) NSString *tagKey;

/** Resource name for TagValue in the format `tagValues/456`. */
@property(nonatomic, copy, nullable) NSString *tagValue;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudResourceManager_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCloudResourceManager_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A folder in an organization's resource hierarchy, used to organize that
 *  organization's resources.
 */
@interface GTLRCloudResourceManager_Folder : GTLRObject

/** Output only. Timestamp when the folder was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Timestamp when the folder was requested to be deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/**
 *  The folder's display name. A folder's display name must be unique amongst
 *  its siblings. For example, no two folders with the same parent can share the
 *  same display name. The display name must start and end with a letter or
 *  digit, may contain letters, digits, spaces, hyphens and underscores and can
 *  be no longer than 30 characters. This is captured by the regular expression:
 *  `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. A checksum computed by the server based on the current value of
 *  the folder resource. This may be sent on update and delete requests to
 *  ensure the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. The resource name of the folder. Its format is
 *  `folders/{folder_id}`, for example: "folders/1234".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The folder's parent's resource name. Updates to the folder's
 *  parent must be performed using MoveFolder.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Output only. The lifecycle state of the folder. Updates to the state must be
 *  performed using DeleteFolder and UndeleteFolder.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_Folder_State_Active The normal and
 *        active state. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudResourceManager_Folder_State_DeleteRequested The folder
 *        has been marked for deletion by the user. (Value: "DELETE_REQUESTED")
 *    @arg @c kGTLRCloudResourceManager_Folder_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when the folder was last modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata describing a long running folder operation
 */
@interface GTLRCloudResourceManager_FolderOperation : GTLRObject

/**
 *  The resource name of the folder or organization we are either creating the
 *  folder under or moving the folder to.
 */
@property(nonatomic, copy, nullable) NSString *destinationParent;

/** The display name of the folder. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The type of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_FolderOperation_OperationType_Create A
 *        create folder operation. (Value: "CREATE")
 *    @arg @c kGTLRCloudResourceManager_FolderOperation_OperationType_Move A
 *        move folder operation. (Value: "MOVE")
 *    @arg @c kGTLRCloudResourceManager_FolderOperation_OperationType_OperationTypeUnspecified
 *        Operation type not specified. (Value: "OPERATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  The resource name of the folder's parent. Only applicable when the
 *  operation_type is MOVE.
 */
@property(nonatomic, copy, nullable) NSString *sourceParent;

@end


/**
 *  A classification of the Folder Operation error.
 */
@interface GTLRCloudResourceManager_FolderOperationError : GTLRObject

/**
 *  The type of operation error experienced.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ActiveFolderHeightViolation
 *        The attempted action would violate the max folder depth constraint.
 *        (Value: "ACTIVE_FOLDER_HEIGHT_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_CycleIntroducedViolation
 *        The attempted action would introduce cycle in resource path. (Value:
 *        "CYCLE_INTRODUCED_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_DeletedFolderHeightViolation
 *        The attempted action would violate the max deleted folder depth
 *        constraint. (Value: "DELETED_FOLDER_HEIGHT_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ErrorTypeUnspecified
 *        The error type was unrecognized or unspecified. (Value:
 *        "ERROR_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderBeingMovedViolation
 *        The attempted action would move a folder that is already being moved.
 *        (Value: "FOLDER_BEING_MOVED_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderNameUniquenessViolation
 *        The attempted action would violate the locally-unique folder
 *        display_name constraint. (Value: "FOLDER_NAME_UNIQUENESS_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_FolderToDeleteNonEmptyViolation
 *        The folder the caller is trying to delete contains active resources.
 *        (Value: "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_MaxChildFoldersViolation
 *        The attempted action would violate the max child folders constraint.
 *        (Value: "MAX_CHILD_FOLDERS_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ParentDeletedViolation
 *        The resource a folder was being added to has been deleted. (Value:
 *        "PARENT_DELETED_VIOLATION")
 *    @arg @c kGTLRCloudResourceManager_FolderOperationError_ErrorMessageId_ResourceDeletedViolation
 *        The resource being moved has been deleted. (Value:
 *        "RESOURCE_DELETED_VIOLATION")
 */
@property(nonatomic, copy, nullable) NSString *errorMessageId;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRCloudResourceManager_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRCloudResourceManager_GetPolicyOptions : GTLRObject

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  Metadata describing a long running folder operation
 */
@interface GTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation : GTLRObject

/**
 *  The resource name of the folder or organization we are either creating the
 *  folder under or moving the folder to.
 */
@property(nonatomic, copy, nullable) NSString *destinationParent;

/** The display name of the folder. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The type of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_Create
 *        A create folder operation. (Value: "CREATE")
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_Move
 *        A move folder operation. (Value: "MOVE")
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2alpha1FolderOperation_OperationType_OperationTypeUnspecified
 *        Operation type not specified. (Value: "OPERATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  The resource name of the folder's parent. Only applicable when the
 *  operation_type is MOVE.
 */
@property(nonatomic, copy, nullable) NSString *sourceParent;

@end


/**
 *  Metadata describing a long running folder operation
 */
@interface GTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation : GTLRObject

/**
 *  The resource name of the folder or organization we are either creating the
 *  folder under or moving the folder to.
 */
@property(nonatomic, copy, nullable) NSString *destinationParent;

/** The display name of the folder. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The type of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_Create
 *        A create folder operation. (Value: "CREATE")
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_Move
 *        A move folder operation. (Value: "MOVE")
 *    @arg @c kGTLRCloudResourceManager_GoogleCloudResourcemanagerV2beta1FolderOperation_OperationType_OperationTypeUnspecified
 *        Operation type not specified. (Value: "OPERATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  The resource name of the folder's parent. Only applicable when the
 *  operation_type is MOVE.
 */
@property(nonatomic, copy, nullable) NSString *sourceParent;

@end


/**
 *  A Lien represents an encumbrance on the actions that can be performed on a
 *  resource.
 */
@interface GTLRCloudResourceManager_Lien : GTLRObject

/** The creation time of this Lien. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A system-generated unique identifier for this Lien. Example:
 *  `liens/1234abcd`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A stable, user-visible/meaningful string identifying the origin of the Lien,
 *  intended to be inspected programmatically. Maximum length of 200 characters.
 *  Example: 'compute.googleapis.com'
 */
@property(nonatomic, copy, nullable) NSString *origin;

/**
 *  A reference to the resource this Lien is attached to. The server will
 *  validate the parent against those for which Liens are supported. Example:
 *  `projects/1234`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Concise user-visible strings indicating why an action cannot be performed on
 *  a resource. Maximum length of 200 characters. Example: 'Holds production API
 *  key'
 */
@property(nonatomic, copy, nullable) NSString *reason;

/**
 *  The types of operations which should be blocked as a result of this Lien.
 *  Each value should correspond to an IAM permission. The server will validate
 *  the permissions against those for which Liens are supported. An empty list
 *  is meaningless and will be rejected. Example:
 *  ['resourcemanager.projects.delete']
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictions;

@end


/**
 *  The response of ListEffectiveTags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "effectiveTags" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListEffectiveTagsResponse : GTLRCollectionObject

/**
 *  A possibly paginated list of effective tags for the specified resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_EffectiveTag *> *effectiveTags;

/**
 *  Pagination token. If the result set is too large to fit in a single
 *  response, this token is returned. It encodes the position of the current
 *  result cursor. Feeding this value into a new list request with the
 *  `page_token` parameter gives the next page of the results. When
 *  `next_page_token` is not filled in, there is no next page and the list
 *  returned is the last page in the result set. Pagination tokens have a
 *  limited lifetime.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The ListFolders response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "folders" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListFoldersResponse : GTLRCollectionObject

/**
 *  A possibly paginated list of folders that are direct descendants of the
 *  specified parent resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Folder *> *folders;

/**
 *  A pagination token returned from a previous call to `ListFolders` that
 *  indicates from where listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Liens.ListLiens.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "liens" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListLiensResponse : GTLRCollectionObject

/**
 *  A list of Liens.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Lien *> *liens;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A page of the response received from the ListProjects method. A paginated
 *  response where more pages are available has `next_page_token` set. This
 *  token can be used in a subsequent request to retrieve the next request page.
 *  NOTE: A response may contain fewer elements than the request `page_size` and
 *  still have a `next_page_token`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "projects" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListProjectsResponse : GTLRCollectionObject

/**
 *  Pagination token. If the result set is too large to fit in a single
 *  response, this token is returned. It encodes the position of the current
 *  result cursor. Feeding this value into a new list request with the
 *  `page_token` parameter gives the next page of the results. When
 *  `next_page_token` is not filled in, there is no next page and the list
 *  returned is the last page in the result set. Pagination tokens have a
 *  limited lifetime.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Projects under the parent. This list can be paginated.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Project *> *projects;

@end


/**
 *  The ListTagBindings response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tagBindings" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListTagBindingsResponse : GTLRCollectionObject

/**
 *  Pagination token. If the result set is too large to fit in a single
 *  response, this token is returned. It encodes the position of the current
 *  result cursor. Feeding this value into a new list request with the
 *  `page_token` parameter gives the next page of the results. When
 *  `next_page_token` is not filled in, there is no next page and the list
 *  returned is the last page in the result set. Pagination tokens have a
 *  limited lifetime.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A possibly paginated list of TagBindings for the specified resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_TagBinding *> *tagBindings;

@end


/**
 *  The ListTagHolds response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tagHolds" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListTagHoldsResponse : GTLRCollectionObject

/**
 *  Pagination token. If the result set is too large to fit in a single
 *  response, this token is returned. It encodes the position of the current
 *  result cursor. Feeding this value into a new list request with the
 *  `page_token` parameter gives the next page of the results. When
 *  `next_page_token` is not filled in, there is no next page and the list
 *  returned is the last page in the result set. Pagination tokens have a
 *  limited lifetime.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A possibly paginated list of TagHolds.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_TagHold *> *tagHolds;

@end


/**
 *  The ListTagKeys response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tagKeys" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListTagKeysResponse : GTLRCollectionObject

/**
 *  A pagination token returned from a previous call to `ListTagKeys` that
 *  indicates from where listing should continue.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TagKeys that live under the specified parent in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_TagKey *> *tagKeys;

@end


/**
 *  The ListTagValues response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tagValues" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_ListTagValuesResponse : GTLRCollectionObject

/**
 *  A pagination token returned from a previous call to `ListTagValues` that
 *  indicates from where listing should continue. This is currently not used,
 *  but the server may at any point start supplying a valid token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A possibly paginated list of TagValues that are direct descendants of the
 *  specified parent TagKey.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_TagValue *> *tagValues;

@end


/**
 *  Metadata pertaining to the folder move process.
 */
@interface GTLRCloudResourceManager_MoveFolderMetadata : GTLRObject

/** The resource name of the folder or organization to move the folder to. */
@property(nonatomic, copy, nullable) NSString *destinationParent;

/** The display name of the folder. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The resource name of the folder's parent. */
@property(nonatomic, copy, nullable) NSString *sourceParent;

@end


/**
 *  The MoveFolder request message.
 */
@interface GTLRCloudResourceManager_MoveFolderRequest : GTLRObject

/**
 *  Required. The resource name of the folder or organization which should be
 *  the folder's new parent. Must be of the form `folders/{folder_id}` or
 *  `organizations/{org_id}`.
 */
@property(nonatomic, copy, nullable) NSString *destinationParent;

@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by MoveProject.
 */
@interface GTLRCloudResourceManager_MoveProjectMetadata : GTLRObject
@end


/**
 *  The request sent to MoveProject method.
 */
@interface GTLRCloudResourceManager_MoveProjectRequest : GTLRObject

/** Required. The new parent to move the Project under. */
@property(nonatomic, copy, nullable) NSString *destinationParent;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudResourceManager_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudResourceManager_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudResourceManager_Operation_Response : GTLRObject
@end


/**
 *  The root node in the resource hierarchy to which a particular entity's (a
 *  company, for example) resources belong.
 */
@interface GTLRCloudResourceManager_Organization : GTLRObject

/** Output only. Timestamp when the Organization was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Timestamp when the Organization was requested for deletion.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/**
 *  Immutable. The G Suite / Workspace customer id used in the Directory API.
 */
@property(nonatomic, copy, nullable) NSString *directoryCustomerId;

/**
 *  Output only. A human-readable string that refers to the organization in the
 *  Google Cloud Console. This string is set by the server and cannot be
 *  changed. The string will be set to the primary domain (for example,
 *  "google.com") of the Google Workspace customer that owns the organization.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. A checksum computed by the server based on the current value of
 *  the Organization resource. This may be sent on update and delete requests to
 *  ensure the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. The resource name of the organization. This is the
 *  organization's relative path in the API. Its format is
 *  "organizations/[organization_id]". For example, "organizations/1234".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The organization's current lifecycle state.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_Organization_State_Active The normal and
 *        active state. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudResourceManager_Organization_State_DeleteRequested The
 *        organization has been marked for deletion by the user. (Value:
 *        "DELETE_REQUESTED")
 *    @arg @c kGTLRCloudResourceManager_Organization_State_StateUnspecified
 *        Unspecified state. This is only useful for distinguishing unset
 *        values. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when the Organization was last modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCloudResourceManager_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  A project is a high-level Google Cloud entity. It is a container for ACLs,
 *  APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.
 */
@interface GTLRCloudResourceManager_Project : GTLRObject

/** Output only. Creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The time at which this resource was requested for deletion.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/**
 *  Optional. A user-assigned display name of the project. When present it must
 *  be between 4 to 30 characters. Allowed characters are: lowercase and
 *  uppercase letters, numbers, hyphen, single-quote, double-quote, space, and
 *  exclamation point. Example: `My Project`
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. A checksum computed by the server based on the current value of
 *  the Project resource. This may be sent on update and delete requests to
 *  ensure the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels associated with this project. Label keys must be
 *  between 1 and 63 characters long and must conform to the following regular
 *  expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be
 *  between 0 and 63 characters long and must conform to the regular expression
 *  (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be
 *  associated with a given resource. Clients should store labels in a
 *  representation such as JSON that does not depend on specific characters
 *  being disallowed. Example: `"myBusinessDimension" : "businessValue"`
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Project_Labels *labels;

/**
 *  Output only. The unique resource name of the project. It is an int64
 *  generated number prefixed by "projects/". Example: `projects/415104041262`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A reference to a parent Resource. eg., `organizations/123` or
 *  `folders/876`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Immutable. The unique, user-assigned id of the project. It must be 6 to 30
 *  lowercase ASCII letters, digits, or hyphens. It must start with a letter.
 *  Trailing hyphens are prohibited. Example: `tokyo-rain-123`
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Output only. The project lifecycle state.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_Project_State_Active The normal and
 *        active state. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudResourceManager_Project_State_DeleteRequested The
 *        project has been marked for deletion by the user (by invoking
 *        DeleteProject) or by the system (Google Cloud Platform). This can
 *        generally be reversed by invoking UndeleteProject. (Value:
 *        "DELETE_REQUESTED")
 *    @arg @c kGTLRCloudResourceManager_Project_State_StateUnspecified
 *        Unspecified state. This is only used/useful for distinguishing unset
 *        values. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The most recent time this resource was modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels associated with this project. Label keys must be
 *  between 1 and 63 characters long and must conform to the following regular
 *  expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be
 *  between 0 and 63 characters long and must conform to the regular expression
 *  (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be
 *  associated with a given resource. Clients should store labels in a
 *  representation such as JSON that does not depend on specific characters
 *  being disallowed. Example: `"myBusinessDimension" : "businessValue"`
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudResourceManager_Project_Labels : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by CreateProject. It provides insight for when significant phases
 *  of Project creation have completed.
 */
@interface GTLRCloudResourceManager_ProjectCreationStatus : GTLRObject

/** Creation time of the project creation workflow. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  True if the project can be retrieved using GetProject. No other operations
 *  on the project are guaranteed to work until the project creation is
 *  complete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gettable;

/**
 *  True if the project creation process is complete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ready;

@end


/**
 *  The response message for searching folders.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "folders" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_SearchFoldersResponse : GTLRCollectionObject

/**
 *  A possibly paginated folder search results. the specified parent resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Folder *> *folders;

/**
 *  A pagination token returned from a previous call to `SearchFolders` that
 *  indicates from where searching should continue.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response returned from the `SearchOrganizations` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "organizations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_SearchOrganizationsResponse : GTLRCollectionObject

/**
 *  A pagination token to be used to retrieve the next page of results. If the
 *  result is too large to fit within the page size specified in the request,
 *  this field will be set with a token that can be used to fetch the next page
 *  of results. If this field is empty, it indicates that this response contains
 *  the last page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Organizations that matched the search query, possibly paginated.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Organization *> *organizations;

@end


/**
 *  A page of the response received from the SearchProjects method. A paginated
 *  response where more pages are available has `next_page_token` set. This
 *  token can be used in a subsequent request to retrieve the next request page.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "projects" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudResourceManager_SearchProjectsResponse : GTLRCollectionObject

/**
 *  Pagination token. If the result set is too large to fit in a single
 *  response, this token is returned. It encodes the position of the current
 *  result cursor. Feeding this value into a new list request with the
 *  `page_token` parameter gives the next page of the results. When
 *  `next_page_token` is not filled in, there is no next page and the list
 *  returned is the last page in the result set. Pagination tokens have a
 *  limited lifetime.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Projects that matched the list filter query. This list can be
 *  paginated.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Project *> *projects;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRCloudResourceManager_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudResourceManager_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudResourceManager_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudResourceManager_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudResourceManager_Status_Details_Item : GTLRObject
@end


/**
 *  A TagBinding represents a connection between a TagValue and a cloud resource
 *  Once a TagBinding is created, the TagValue is applied to all the descendants
 *  of the Google Cloud resource.
 */
@interface GTLRCloudResourceManager_TagBinding : GTLRObject

/**
 *  Output only. The name of the TagBinding. This is a String of the form:
 *  `tagBindings/{full-resource-name}/{tag-value-name}` (e.g.
 *  `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The full resource name of the resource the TagValue is bound to. E.g.
 *  `//cloudresourcemanager.googleapis.com/projects/123`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** The TagValue of the TagBinding. Must be of the form `tagValues/456`. */
@property(nonatomic, copy, nullable) NSString *tagValue;

@end


/**
 *  A TagHold represents the use of a TagValue that is not captured by
 *  TagBindings. If a TagValue has any TagHolds, deletion will be blocked. This
 *  resource is intended to be created in the same cloud location as the
 *  `holder`.
 */
@interface GTLRCloudResourceManager_TagHold : GTLRObject

/** Output only. The time this TagHold was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. A URL where an end user can learn more about removing this hold.
 *  E.g.
 *  `https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing`
 */
@property(nonatomic, copy, nullable) NSString *helpLink;

/**
 *  Required. The name of the resource where the TagValue is being used. Must be
 *  less than 200 characters. E.g.
 *  `//compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`
 */
@property(nonatomic, copy, nullable) NSString *holder;

/**
 *  Output only. The resource name of a TagHold. This is a String of the form:
 *  `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}` (e.g.
 *  `tagValues/123/tagHolds/456`). This resource name is generated by the
 *  server.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional string representing the origin of this request. This
 *  field should include human-understandable information to distinguish origins
 *  from each other. Must be less than 200 characters. E.g. `migs-35678234`
 */
@property(nonatomic, copy, nullable) NSString *origin;

@end


/**
 *  A TagKey, used to group a set of TagValues.
 */
@interface GTLRCloudResourceManager_TagKey : GTLRObject

/** Output only. Creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. User-assigned description of the TagKey. Must not exceed 256
 *  characters. Read-write.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Entity tag which users can pass to prevent race conditions. This
 *  field is always set in server responses. See UpdateTagKeyRequest for
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Immutable. The resource name for a TagKey. Must be in the format
 *  `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
 *  the TagKey.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Immutable. Namespaced name of the TagKey. */
@property(nonatomic, copy, nullable) NSString *namespacedName;

/**
 *  Immutable. The resource name of the new TagKey's parent. Must be of the form
 *  `organizations/{org_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A purpose denotes that this Tag is intended for use in policies of
 *  a specific policy engine, and will involve that policy engine in management
 *  operations involving this Tag. A purpose does not grant a policy engine
 *  exclusive rights to the Tag, and it may be referenced by other policy
 *  engines. A purpose cannot be changed once set.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudResourceManager_TagKey_Purpose_GceFirewall Purpose for
 *        Compute Engine firewalls. A corresponding purpose_data should be set
 *        for the network the tag is intended for. The key should be 'network'
 *        and the value should be in either of these two formats:
 *        -https://www.googleapis.com/compute/{compute_version}/projects/{project_id}/global/networks/{network_id}
 *        -{project_id}/{network_name} Examples:
 *        -https://www.googleapis.com/compute/staging_v1/projects/fail-closed-load-testing/global/networks/6992953698831725600
 *        -fail-closed-load-testing/load-testing-network (Value: "GCE_FIREWALL")
 *    @arg @c kGTLRCloudResourceManager_TagKey_Purpose_PurposeUnspecified
 *        Unspecified purpose. (Value: "PURPOSE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

/**
 *  Optional. Purpose data corresponds to the policy system that the tag is
 *  intended for. See documentation for `Purpose` for formatting of this field.
 *  Purpose data cannot be changed once set.
 */
@property(nonatomic, strong, nullable) GTLRCloudResourceManager_TagKey_PurposeData *purposeData;

/**
 *  Required. Immutable. The user friendly name for a TagKey. The short name
 *  should be unique for TagKeys within the same tag namespace. The short name
 *  must be 1-63 characters, beginning and ending with an alphanumeric character
 *  ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics
 *  between.
 */
@property(nonatomic, copy, nullable) NSString *shortName;

/** Output only. Update time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Purpose data corresponds to the policy system that the tag is
 *  intended for. See documentation for `Purpose` for formatting of this field.
 *  Purpose data cannot be changed once set.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudResourceManager_TagKey_PurposeData : GTLRObject
@end


/**
 *  A TagValue is a child of a particular TagKey. This is used to group cloud
 *  resources for the purpose of controlling them using policies.
 */
@interface GTLRCloudResourceManager_TagValue : GTLRObject

/** Output only. Creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. User-assigned description of the TagValue. Must not exceed 256
 *  characters. Read-write.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Entity tag which users can pass to prevent race conditions. This
 *  field is always set in server responses. See UpdateTagValueRequest for
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Immutable. Resource name for TagValue in the format `tagValues/456`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Namespaced name of the TagValue. Now only supported in the
 *  format `{organization_id}/{tag_key_short_name}/{short_name}`. Other formats
 *  will be supported when we add non-org parented tags.
 */
@property(nonatomic, copy, nullable) NSString *namespacedName;

/**
 *  Immutable. The resource name of the new TagValue's parent TagKey. Must be of
 *  the form `tagKeys/{tag_key_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Immutable. User-assigned short name for TagValue. The short name
 *  should be unique for TagValues within the same parent TagKey. The short name
 *  must be 63 characters or less, beginning and ending with an alphanumeric
 *  character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and
 *  alphanumerics between.
 */
@property(nonatomic, copy, nullable) NSString *shortName;

/** Output only. Update time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRCloudResourceManager_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRCloudResourceManager_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A status object which is used as the `metadata` field for the `Operation`
 *  returned by `UndeleteFolder`.
 */
@interface GTLRCloudResourceManager_UndeleteFolderMetadata : GTLRObject
@end


/**
 *  The UndeleteFolder request message.
 */
@interface GTLRCloudResourceManager_UndeleteFolderRequest : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by UndeleteOrganization.
 */
@interface GTLRCloudResourceManager_UndeleteOrganizationMetadata : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by `UndeleteProject`.
 */
@interface GTLRCloudResourceManager_UndeleteProjectMetadata : GTLRObject
@end


/**
 *  The request sent to the UndeleteProject method.
 */
@interface GTLRCloudResourceManager_UndeleteProjectRequest : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by UpdateFolder.
 */
@interface GTLRCloudResourceManager_UpdateFolderMetadata : GTLRObject
@end


/**
 *  A status object which is used as the `metadata` field for the Operation
 *  returned by UpdateProject.
 */
@interface GTLRCloudResourceManager_UpdateProjectMetadata : GTLRObject
@end


/**
 *  Runtime operation information for updating a TagKey.
 */
@interface GTLRCloudResourceManager_UpdateTagKeyMetadata : GTLRObject
@end


/**
 *  Runtime operation information for updating a TagValue.
 */
@interface GTLRCloudResourceManager_UpdateTagValueMetadata : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
