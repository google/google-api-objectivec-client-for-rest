// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Game Services API (gameservices/v1)
// Description:
//   Deploy and manage infrastructure for global multiplayer gaming experiences.
// Documentation:
//   https://cloud.google.com/solutions/gaming/

#import <GoogleAPIClientForREST/GTLRGameServicesObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRGameServices_AuditLogConfig.logType
NSString * const kGTLRGameServices_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRGameServices_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRGameServices_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRGameServices_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRGameServices_AuthorizationLoggingOptions.permissionType
NSString * const kGTLRGameServices_AuthorizationLoggingOptions_PermissionType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRGameServices_AuthorizationLoggingOptions_PermissionType_AdminWrite = @"ADMIN_WRITE";
NSString * const kGTLRGameServices_AuthorizationLoggingOptions_PermissionType_DataRead = @"DATA_READ";
NSString * const kGTLRGameServices_AuthorizationLoggingOptions_PermissionType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRGameServices_AuthorizationLoggingOptions_PermissionType_PermissionTypeUnspecified = @"PERMISSION_TYPE_UNSPECIFIED";

// GTLRGameServices_CloudAuditOptions.logName
NSString * const kGTLRGameServices_CloudAuditOptions_LogName_AdminActivity = @"ADMIN_ACTIVITY";
NSString * const kGTLRGameServices_CloudAuditOptions_LogName_DataAccess = @"DATA_ACCESS";
NSString * const kGTLRGameServices_CloudAuditOptions_LogName_UnspecifiedLogName = @"UNSPECIFIED_LOG_NAME";

// GTLRGameServices_Condition.iam
NSString * const kGTLRGameServices_Condition_Iam_Approver      = @"APPROVER";
NSString * const kGTLRGameServices_Condition_Iam_Attribution   = @"ATTRIBUTION";
NSString * const kGTLRGameServices_Condition_Iam_Authority     = @"AUTHORITY";
NSString * const kGTLRGameServices_Condition_Iam_CredentialsType = @"CREDENTIALS_TYPE";
NSString * const kGTLRGameServices_Condition_Iam_CredsAssertion = @"CREDS_ASSERTION";
NSString * const kGTLRGameServices_Condition_Iam_JustificationType = @"JUSTIFICATION_TYPE";
NSString * const kGTLRGameServices_Condition_Iam_NoAttr        = @"NO_ATTR";
NSString * const kGTLRGameServices_Condition_Iam_SecurityRealm = @"SECURITY_REALM";

// GTLRGameServices_Condition.op
NSString * const kGTLRGameServices_Condition_Op_Discharged = @"DISCHARGED";
NSString * const kGTLRGameServices_Condition_Op_Equals     = @"EQUALS";
NSString * const kGTLRGameServices_Condition_Op_In         = @"IN";
NSString * const kGTLRGameServices_Condition_Op_NoOp       = @"NO_OP";
NSString * const kGTLRGameServices_Condition_Op_NotEquals  = @"NOT_EQUALS";
NSString * const kGTLRGameServices_Condition_Op_NotIn      = @"NOT_IN";

// GTLRGameServices_Condition.sys
NSString * const kGTLRGameServices_Condition_Sys_Ip      = @"IP";
NSString * const kGTLRGameServices_Condition_Sys_Name    = @"NAME";
NSString * const kGTLRGameServices_Condition_Sys_NoAttr  = @"NO_ATTR";
NSString * const kGTLRGameServices_Condition_Sys_Region  = @"REGION";
NSString * const kGTLRGameServices_Condition_Sys_Service = @"SERVICE";

// GTLRGameServices_DataAccessOptions.logMode
NSString * const kGTLRGameServices_DataAccessOptions_LogMode_LogFailClosed = @"LOG_FAIL_CLOSED";
NSString * const kGTLRGameServices_DataAccessOptions_LogMode_LogModeUnspecified = @"LOG_MODE_UNSPECIFIED";

// GTLRGameServices_Rule.action
NSString * const kGTLRGameServices_Rule_Action_Allow        = @"ALLOW";
NSString * const kGTLRGameServices_Rule_Action_AllowWithLog = @"ALLOW_WITH_LOG";
NSString * const kGTLRGameServices_Rule_Action_Deny         = @"DENY";
NSString * const kGTLRGameServices_Rule_Action_DenyWithLog  = @"DENY_WITH_LOG";
NSString * const kGTLRGameServices_Rule_Action_Log          = @"LOG";
NSString * const kGTLRGameServices_Rule_Action_NoAction     = @"NO_ACTION";

// ----------------------------------------------------------------------------
//
//   GTLRGameServices_AuditConfig
//

@implementation GTLRGameServices_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRGameServices_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_AuditLogConfig
//

@implementation GTLRGameServices_AuditLogConfig
@dynamic exemptedMembers, ignoreChildExemptions, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_AuthorizationLoggingOptions
//

@implementation GTLRGameServices_AuthorizationLoggingOptions
@dynamic permissionType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Binding
//

@implementation GTLRGameServices_Binding
@dynamic bindingId, condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_CancelOperationRequest
//

@implementation GTLRGameServices_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_CloudAuditOptions
//

@implementation GTLRGameServices_CloudAuditOptions
@dynamic authorizationLoggingOptions, logName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Condition
//

@implementation GTLRGameServices_Condition
@dynamic iam, op, svc, sys, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_CounterOptions
//

@implementation GTLRGameServices_CounterOptions
@dynamic customFields, field, metric;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customFields" : [GTLRGameServices_CustomField class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_CustomField
//

@implementation GTLRGameServices_CustomField
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_DataAccessOptions
//

@implementation GTLRGameServices_DataAccessOptions
@dynamic logMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Empty
//

@implementation GTLRGameServices_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Expr
//

@implementation GTLRGameServices_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_ListLocationsResponse
//

@implementation GTLRGameServices_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRGameServices_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_ListOperationsResponse
//

@implementation GTLRGameServices_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRGameServices_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Location
//

@implementation GTLRGameServices_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Location_Labels
//

@implementation GTLRGameServices_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Location_Metadata
//

@implementation GTLRGameServices_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_LogConfig
//

@implementation GTLRGameServices_LogConfig
@dynamic cloudAudit, counter, dataAccess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Operation
//

@implementation GTLRGameServices_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Operation_Metadata
//

@implementation GTLRGameServices_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Operation_Response
//

@implementation GTLRGameServices_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Policy
//

@implementation GTLRGameServices_Policy
@dynamic auditConfigs, bindings, ETag, rules, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRGameServices_AuditConfig class],
    @"bindings" : [GTLRGameServices_Binding class],
    @"rules" : [GTLRGameServices_Rule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Rule
//

@implementation GTLRGameServices_Rule
@dynamic action, conditions, descriptionProperty, inProperty, logConfig, notIn,
         permissions;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"inProperty" : @"in"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRGameServices_Condition class],
    @"in" : [NSString class],
    @"logConfig" : [GTLRGameServices_LogConfig class],
    @"notIn" : [NSString class],
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_SetIamPolicyRequest
//

@implementation GTLRGameServices_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Status
//

@implementation GTLRGameServices_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRGameServices_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_Status_Details_Item
//

@implementation GTLRGameServices_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_TestIamPermissionsRequest
//

@implementation GTLRGameServices_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGameServices_TestIamPermissionsResponse
//

@implementation GTLRGameServices_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end
