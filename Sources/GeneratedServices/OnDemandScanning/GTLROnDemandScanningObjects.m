// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   On-Demand Scanning API (ondemandscanning/v1)
// Description:
//   A service to scan container images for vulnerabilities.
// Documentation:
//   https://cloud.google.com/container-analysis/docs/on-demand-scanning/

#import <GoogleAPIClientForREST/GTLROnDemandScanningObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLROnDemandScanning_AliasContext.kind
NSString * const kGTLROnDemandScanning_AliasContext_Kind_Fixed = @"FIXED";
NSString * const kGTLROnDemandScanning_AliasContext_Kind_KindUnspecified = @"KIND_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_AliasContext_Kind_Movable = @"MOVABLE";
NSString * const kGTLROnDemandScanning_AliasContext_Kind_Other = @"OTHER";

// GTLROnDemandScanning_CVSS.attackComplexity
NSString * const kGTLROnDemandScanning_CVSS_AttackComplexity_AttackComplexityHigh = @"ATTACK_COMPLEXITY_HIGH";
NSString * const kGTLROnDemandScanning_CVSS_AttackComplexity_AttackComplexityLow = @"ATTACK_COMPLEXITY_LOW";
NSString * const kGTLROnDemandScanning_CVSS_AttackComplexity_AttackComplexityMedium = @"ATTACK_COMPLEXITY_MEDIUM";
NSString * const kGTLROnDemandScanning_CVSS_AttackComplexity_AttackComplexityUnspecified = @"ATTACK_COMPLEXITY_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.attackVector
NSString * const kGTLROnDemandScanning_CVSS_AttackVector_AttackVectorAdjacent = @"ATTACK_VECTOR_ADJACENT";
NSString * const kGTLROnDemandScanning_CVSS_AttackVector_AttackVectorLocal = @"ATTACK_VECTOR_LOCAL";
NSString * const kGTLROnDemandScanning_CVSS_AttackVector_AttackVectorNetwork = @"ATTACK_VECTOR_NETWORK";
NSString * const kGTLROnDemandScanning_CVSS_AttackVector_AttackVectorPhysical = @"ATTACK_VECTOR_PHYSICAL";
NSString * const kGTLROnDemandScanning_CVSS_AttackVector_AttackVectorUnspecified = @"ATTACK_VECTOR_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.authentication
NSString * const kGTLROnDemandScanning_CVSS_Authentication_AuthenticationMultiple = @"AUTHENTICATION_MULTIPLE";
NSString * const kGTLROnDemandScanning_CVSS_Authentication_AuthenticationNone = @"AUTHENTICATION_NONE";
NSString * const kGTLROnDemandScanning_CVSS_Authentication_AuthenticationSingle = @"AUTHENTICATION_SINGLE";
NSString * const kGTLROnDemandScanning_CVSS_Authentication_AuthenticationUnspecified = @"AUTHENTICATION_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.availabilityImpact
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactComplete = @"IMPACT_COMPLETE";
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactPartial = @"IMPACT_PARTIAL";
NSString * const kGTLROnDemandScanning_CVSS_AvailabilityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.confidentialityImpact
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactComplete = @"IMPACT_COMPLETE";
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactPartial = @"IMPACT_PARTIAL";
NSString * const kGTLROnDemandScanning_CVSS_ConfidentialityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.integrityImpact
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactComplete = @"IMPACT_COMPLETE";
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactHigh = @"IMPACT_HIGH";
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactLow = @"IMPACT_LOW";
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactNone = @"IMPACT_NONE";
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactPartial = @"IMPACT_PARTIAL";
NSString * const kGTLROnDemandScanning_CVSS_IntegrityImpact_ImpactUnspecified = @"IMPACT_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.privilegesRequired
NSString * const kGTLROnDemandScanning_CVSS_PrivilegesRequired_PrivilegesRequiredHigh = @"PRIVILEGES_REQUIRED_HIGH";
NSString * const kGTLROnDemandScanning_CVSS_PrivilegesRequired_PrivilegesRequiredLow = @"PRIVILEGES_REQUIRED_LOW";
NSString * const kGTLROnDemandScanning_CVSS_PrivilegesRequired_PrivilegesRequiredNone = @"PRIVILEGES_REQUIRED_NONE";
NSString * const kGTLROnDemandScanning_CVSS_PrivilegesRequired_PrivilegesRequiredUnspecified = @"PRIVILEGES_REQUIRED_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.scope
NSString * const kGTLROnDemandScanning_CVSS_Scope_ScopeChanged = @"SCOPE_CHANGED";
NSString * const kGTLROnDemandScanning_CVSS_Scope_ScopeUnchanged = @"SCOPE_UNCHANGED";
NSString * const kGTLROnDemandScanning_CVSS_Scope_ScopeUnspecified = @"SCOPE_UNSPECIFIED";

// GTLROnDemandScanning_CVSS.userInteraction
NSString * const kGTLROnDemandScanning_CVSS_UserInteraction_UserInteractionNone = @"USER_INTERACTION_NONE";
NSString * const kGTLROnDemandScanning_CVSS_UserInteraction_UserInteractionRequired = @"USER_INTERACTION_REQUIRED";
NSString * const kGTLROnDemandScanning_CVSS_UserInteraction_UserInteractionUnspecified = @"USER_INTERACTION_UNSPECIFIED";

// GTLROnDemandScanning_DeploymentOccurrence.platform
NSString * const kGTLROnDemandScanning_DeploymentOccurrence_Platform_Custom = @"CUSTOM";
NSString * const kGTLROnDemandScanning_DeploymentOccurrence_Platform_Flex = @"FLEX";
NSString * const kGTLROnDemandScanning_DeploymentOccurrence_Platform_Gke = @"GKE";
NSString * const kGTLROnDemandScanning_DeploymentOccurrence_Platform_PlatformUnspecified = @"PLATFORM_UNSPECIFIED";

// GTLROnDemandScanning_DiscoveryOccurrence.analysisStatus
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_AnalysisStatusUnspecified = @"ANALYSIS_STATUS_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_Complete = @"COMPLETE";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_FinishedFailed = @"FINISHED_FAILED";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_FinishedSuccess = @"FINISHED_SUCCESS";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_FinishedUnsupported = @"FINISHED_UNSUPPORTED";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_Pending = @"PENDING";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_AnalysisStatus_Scanning = @"SCANNING";

// GTLROnDemandScanning_DiscoveryOccurrence.continuousAnalysis
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_ContinuousAnalysis_Active = @"ACTIVE";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_ContinuousAnalysis_ContinuousAnalysisUnspecified = @"CONTINUOUS_ANALYSIS_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_DiscoveryOccurrence_ContinuousAnalysis_Inactive = @"INACTIVE";

// GTLROnDemandScanning_Justification.justificationType
NSString * const kGTLROnDemandScanning_Justification_JustificationType_ComponentNotPresent = @"COMPONENT_NOT_PRESENT";
NSString * const kGTLROnDemandScanning_Justification_JustificationType_InlineMitigationsAlreadyExist = @"INLINE_MITIGATIONS_ALREADY_EXIST";
NSString * const kGTLROnDemandScanning_Justification_JustificationType_JustificationTypeUnspecified = @"JUSTIFICATION_TYPE_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_Justification_JustificationType_VulnerableCodeCannotBeControlledByAdversary = @"VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY";
NSString * const kGTLROnDemandScanning_Justification_JustificationType_VulnerableCodeNotInExecutePath = @"VULNERABLE_CODE_NOT_IN_EXECUTE_PATH";
NSString * const kGTLROnDemandScanning_Justification_JustificationType_VulnerableCodeNotPresent = @"VULNERABLE_CODE_NOT_PRESENT";

// GTLROnDemandScanning_Occurrence.kind
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Attestation = @"ATTESTATION";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Build   = @"BUILD";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Compliance = @"COMPLIANCE";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Deployment = @"DEPLOYMENT";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Discovery = @"DISCOVERY";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_DsseAttestation = @"DSSE_ATTESTATION";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Image   = @"IMAGE";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_NoteKindUnspecified = @"NOTE_KIND_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Package = @"PACKAGE";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_SbomReference = @"SBOM_REFERENCE";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Upgrade = @"UPGRADE";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_Vulnerability = @"VULNERABILITY";
NSString * const kGTLROnDemandScanning_Occurrence_Kind_VulnerabilityAssessment = @"VULNERABILITY_ASSESSMENT";

// GTLROnDemandScanning_PackageData.packageType
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Composer = @"COMPOSER";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Go = @"GO";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_GoStdlib = @"GO_STDLIB";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Maven = @"MAVEN";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Npm = @"NPM";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Nuget = @"NUGET";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Os = @"OS";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_PackageTypeUnspecified = @"PACKAGE_TYPE_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Pypi = @"PYPI";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Rubygems = @"RUBYGEMS";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Rust = @"RUST";
NSString * const kGTLROnDemandScanning_PackageData_PackageType_Swift = @"SWIFT";

// GTLROnDemandScanning_PackageIssue.effectiveSeverity
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_Critical = @"CRITICAL";
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_High = @"HIGH";
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_Low = @"LOW";
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_Medium = @"MEDIUM";
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_Minimal = @"MINIMAL";
NSString * const kGTLROnDemandScanning_PackageIssue_EffectiveSeverity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLROnDemandScanning_PackageOccurrence.architecture
NSString * const kGTLROnDemandScanning_PackageOccurrence_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_PackageOccurrence_Architecture_X64 = @"X64";
NSString * const kGTLROnDemandScanning_PackageOccurrence_Architecture_X86 = @"X86";

// GTLROnDemandScanning_Remediation.remediationType
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_Mitigation = @"MITIGATION";
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_NoFixPlanned = @"NO_FIX_PLANNED";
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_NoneAvailable = @"NONE_AVAILABLE";
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_RemediationTypeUnspecified = @"REMEDIATION_TYPE_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_VendorFix = @"VENDOR_FIX";
NSString * const kGTLROnDemandScanning_Remediation_RemediationType_Workaround = @"WORKAROUND";

// GTLROnDemandScanning_SBOMStatus.sbomState
NSString * const kGTLROnDemandScanning_SBOMStatus_SbomState_Complete = @"COMPLETE";
NSString * const kGTLROnDemandScanning_SBOMStatus_SbomState_Pending = @"PENDING";
NSString * const kGTLROnDemandScanning_SBOMStatus_SbomState_SbomStateUnspecified = @"SBOM_STATE_UNSPECIFIED";

// GTLROnDemandScanning_Version.kind
NSString * const kGTLROnDemandScanning_Version_Kind_Maximum    = @"MAXIMUM";
NSString * const kGTLROnDemandScanning_Version_Kind_Minimum    = @"MINIMUM";
NSString * const kGTLROnDemandScanning_Version_Kind_Normal     = @"NORMAL";
NSString * const kGTLROnDemandScanning_Version_Kind_VersionKindUnspecified = @"VERSION_KIND_UNSPECIFIED";

// GTLROnDemandScanning_VexAssessment.state
NSString * const kGTLROnDemandScanning_VexAssessment_State_Affected = @"AFFECTED";
NSString * const kGTLROnDemandScanning_VexAssessment_State_Fixed = @"FIXED";
NSString * const kGTLROnDemandScanning_VexAssessment_State_NotAffected = @"NOT_AFFECTED";
NSString * const kGTLROnDemandScanning_VexAssessment_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLROnDemandScanning_VexAssessment_State_UnderInvestigation = @"UNDER_INVESTIGATION";

// GTLROnDemandScanning_VulnerabilityOccurrence.cvssVersion
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_CvssVersion_CvssVersion2 = @"CVSS_VERSION_2";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_CvssVersion_CvssVersion3 = @"CVSS_VERSION_3";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_CvssVersion_CvssVersionUnspecified = @"CVSS_VERSION_UNSPECIFIED";

// GTLROnDemandScanning_VulnerabilityOccurrence.effectiveSeverity
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_Critical = @"CRITICAL";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_High = @"HIGH";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_Low = @"LOW";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_Medium = @"MEDIUM";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_Minimal = @"MINIMAL";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_EffectiveSeverity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLROnDemandScanning_VulnerabilityOccurrence.severity
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_Critical = @"CRITICAL";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_High = @"HIGH";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_Low = @"LOW";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_Medium = @"MEDIUM";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_Minimal = @"MINIMAL";
NSString * const kGTLROnDemandScanning_VulnerabilityOccurrence_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AliasContext
//

@implementation GTLROnDemandScanning_AliasContext
@dynamic kind, name;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalysisCompleted
//

@implementation GTLROnDemandScanning_AnalysisCompleted
@dynamic analysisType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"analysisType" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalyzePackagesMetadata
//

@implementation GTLROnDemandScanning_AnalyzePackagesMetadata
@dynamic createTime, resourceUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalyzePackagesMetadataV1
//

@implementation GTLROnDemandScanning_AnalyzePackagesMetadataV1
@dynamic createTime, resourceUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalyzePackagesRequestV1
//

@implementation GTLROnDemandScanning_AnalyzePackagesRequestV1
@dynamic includeOsvData, packages, resourceUri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packages" : [GTLROnDemandScanning_PackageData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalyzePackagesResponse
//

@implementation GTLROnDemandScanning_AnalyzePackagesResponse
@dynamic scan;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AnalyzePackagesResponseV1
//

@implementation GTLROnDemandScanning_AnalyzePackagesResponseV1
@dynamic scan;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Artifact
//

@implementation GTLROnDemandScanning_Artifact
@dynamic checksum, identifier, names;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_AttestationOccurrence
//

@implementation GTLROnDemandScanning_AttestationOccurrence
@dynamic jwts, serializedPayload, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jwts" : [GTLROnDemandScanning_Jwt class],
    @"signatures" : [GTLROnDemandScanning_Signature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BinarySourceInfo
//

@implementation GTLROnDemandScanning_BinarySourceInfo
@dynamic binaryVersion, sourceVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildDefinition
//

@implementation GTLROnDemandScanning_BuildDefinition
@dynamic buildType, externalParameters, internalParameters,
         resolvedDependencies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resolvedDependencies" : [GTLROnDemandScanning_ResourceDescriptor class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildDefinition_ExternalParameters
//

@implementation GTLROnDemandScanning_BuildDefinition_ExternalParameters

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildDefinition_InternalParameters
//

@implementation GTLROnDemandScanning_BuildDefinition_InternalParameters

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuilderConfig
//

@implementation GTLROnDemandScanning_BuilderConfig
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildMetadata
//

@implementation GTLROnDemandScanning_BuildMetadata
@dynamic finishedOn, invocationId, startedOn;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildOccurrence
//

@implementation GTLROnDemandScanning_BuildOccurrence
@dynamic intotoProvenance, inTotoSlsaProvenanceV1, intotoStatement, provenance,
         provenanceBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildProvenance
//

@implementation GTLROnDemandScanning_BuildProvenance
@dynamic builderVersion, buildOptions, builtArtifacts, commands, createTime,
         creator, endTime, identifier, logsUri, projectId, sourceProvenance,
         startTime, triggerId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"builtArtifacts" : [GTLROnDemandScanning_Artifact class],
    @"commands" : [GTLROnDemandScanning_Command class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_BuildProvenance_BuildOptions
//

@implementation GTLROnDemandScanning_BuildProvenance_BuildOptions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Category
//

@implementation GTLROnDemandScanning_Category
@dynamic categoryId, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_CloudRepoSourceContext
//

@implementation GTLROnDemandScanning_CloudRepoSourceContext
@dynamic aliasContext, repoId, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Command
//

@implementation GTLROnDemandScanning_Command
@dynamic args, dir, env, identifier, name, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Completeness
//

@implementation GTLROnDemandScanning_Completeness
@dynamic arguments, environment, materials;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ComplianceOccurrence
//

@implementation GTLROnDemandScanning_ComplianceOccurrence
@dynamic nonComplianceReason, nonCompliantFiles, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nonCompliantFiles" : [GTLROnDemandScanning_NonCompliantFile class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ComplianceVersion
//

@implementation GTLROnDemandScanning_ComplianceVersion
@dynamic benchmarkDocument, cpeUri, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_CVSS
//

@implementation GTLROnDemandScanning_CVSS
@dynamic attackComplexity, attackVector, authentication, availabilityImpact,
         baseScore, confidentialityImpact, exploitabilityScore, impactScore,
         integrityImpact, privilegesRequired, scope, userInteraction;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_DeploymentOccurrence
//

@implementation GTLROnDemandScanning_DeploymentOccurrence
@dynamic address, config, deployTime, platform, resourceUri, undeployTime,
         userEmail;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourceUri" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_DiscoveryOccurrence
//

@implementation GTLROnDemandScanning_DiscoveryOccurrence
@dynamic analysisCompleted, analysisError, analysisStatus, analysisStatusError,
         archiveTime, continuousAnalysis, cpe, lastScanTime, sbomStatus;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"analysisError" : [GTLROnDemandScanning_Status class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_DSSEAttestationOccurrence
//

@implementation GTLROnDemandScanning_DSSEAttestationOccurrence
@dynamic envelope, statement;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Empty
//

@implementation GTLROnDemandScanning_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Envelope
//

@implementation GTLROnDemandScanning_Envelope
@dynamic payload, payloadType, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signatures" : [GTLROnDemandScanning_EnvelopeSignature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_EnvelopeSignature
//

@implementation GTLROnDemandScanning_EnvelopeSignature
@dynamic keyid, sig;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_FileHashes
//

@implementation GTLROnDemandScanning_FileHashes
@dynamic fileHash;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileHash" : [GTLROnDemandScanning_Hash class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_FileLocation
//

@implementation GTLROnDemandScanning_FileLocation
@dynamic filePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Fingerprint
//

@implementation GTLROnDemandScanning_Fingerprint
@dynamic v1Name, v2Blob, v2Name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"v2Blob" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GerritSourceContext
//

@implementation GTLROnDemandScanning_GerritSourceContext
@dynamic aliasContext, gerritProject, hostUri, revisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GitSourceContext
//

@implementation GTLROnDemandScanning_GitSourceContext
@dynamic revisionId, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1FileLocation
//

@implementation GTLROnDemandScanning_GrafeasV1FileLocation
@dynamic filePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness
@dynamic environment, materials, parameters;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource
@dynamic digest, entryPoint, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource_Digest
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation
@dynamic configSource, environment, parameters;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_Environment
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_Environment

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_Parameters
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_Parameters

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial
@dynamic digest, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial_Digest
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata
//

@implementation GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata
@dynamic buildFinishedOn, buildInvocationId, buildStartedOn, completeness,
         reproducible;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Hash
//

@implementation GTLROnDemandScanning_Hash
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Identity
//

@implementation GTLROnDemandScanning_Identity
@dynamic revision, updateId;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ImageOccurrence
//

@implementation GTLROnDemandScanning_ImageOccurrence
@dynamic baseResourceUrl, distance, fingerprint, layerInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layerInfo" : [GTLROnDemandScanning_Layer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_InTotoProvenance
//

@implementation GTLROnDemandScanning_InTotoProvenance
@dynamic builderConfig, materials, metadata, recipe;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"materials" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_InTotoSlsaProvenanceV1
//

@implementation GTLROnDemandScanning_InTotoSlsaProvenanceV1
@dynamic xType, predicate, predicateType, subject;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"xType" : @"_type" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subject" : [GTLROnDemandScanning_Subject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_InTotoStatement
//

@implementation GTLROnDemandScanning_InTotoStatement
@dynamic xType, predicateType, provenance, slsaProvenance,
         slsaProvenanceZeroTwo, subject;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"xType" : @"_type" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subject" : [GTLROnDemandScanning_Subject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Justification
//

@implementation GTLROnDemandScanning_Justification
@dynamic details, justificationType;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Jwt
//

@implementation GTLROnDemandScanning_Jwt
@dynamic compactJwt;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_LanguagePackageDependency
//

@implementation GTLROnDemandScanning_LanguagePackageDependency
@dynamic package, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Layer
//

@implementation GTLROnDemandScanning_Layer
@dynamic arguments, directive;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_License
//

@implementation GTLROnDemandScanning_License
@dynamic comments, expression;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ListOperationsResponse
//

@implementation GTLROnDemandScanning_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLROnDemandScanning_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ListVulnerabilitiesResponseV1
//

@implementation GTLROnDemandScanning_ListVulnerabilitiesResponseV1
@dynamic nextPageToken, occurrences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"occurrences" : [GTLROnDemandScanning_Occurrence class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"occurrences";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Location
//

@implementation GTLROnDemandScanning_Location
@dynamic cpeUri, path, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Maintainer
//

@implementation GTLROnDemandScanning_Maintainer
@dynamic email, kind, name, url;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Material
//

@implementation GTLROnDemandScanning_Material
@dynamic digest, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Material_Digest
//

@implementation GTLROnDemandScanning_Material_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Metadata
//

@implementation GTLROnDemandScanning_Metadata
@dynamic buildFinishedOn, buildInvocationId, buildStartedOn, completeness,
         reproducible;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_NonCompliantFile
//

@implementation GTLROnDemandScanning_NonCompliantFile
@dynamic displayCommand, path, reason;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Occurrence
//

@implementation GTLROnDemandScanning_Occurrence
@dynamic attestation, build, compliance, createTime, deployment, discovery,
         dsseAttestation, envelope, image, kind, name, noteName, package,
         remediation, resourceUri, sbomReference, updateTime, upgrade,
         vulnerability;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Operation
//

@implementation GTLROnDemandScanning_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Operation_Metadata
//

@implementation GTLROnDemandScanning_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Operation_Response
//

@implementation GTLROnDemandScanning_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_PackageData
//

@implementation GTLROnDemandScanning_PackageData
@dynamic architecture, binarySourceInfo, binaryVersion, cpeUri, dependencyChain,
         fileLocation, hashDigest, licenses, maintainer, os, osVersion, package,
         packageType, patchedCve, sourceVersion, unused, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"binarySourceInfo" : [GTLROnDemandScanning_BinarySourceInfo class],
    @"dependencyChain" : [GTLROnDemandScanning_LanguagePackageDependency class],
    @"fileLocation" : [GTLROnDemandScanning_FileLocation class],
    @"licenses" : [NSString class],
    @"patchedCve" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_PackageIssue
//

@implementation GTLROnDemandScanning_PackageIssue
@dynamic affectedCpeUri, affectedPackage, affectedVersion, effectiveSeverity,
         fileLocation, fixAvailable, fixedCpeUri, fixedPackage, fixedVersion,
         packageType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileLocation" : [GTLROnDemandScanning_GrafeasV1FileLocation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_PackageOccurrence
//

@implementation GTLROnDemandScanning_PackageOccurrence
@dynamic architecture, cpeUri, license, location, name, packageType, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"location" : [GTLROnDemandScanning_Location class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_PackageVersion
//

@implementation GTLROnDemandScanning_PackageVersion
@dynamic licenses, name, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ProjectRepoId
//

@implementation GTLROnDemandScanning_ProjectRepoId
@dynamic projectId, repoName;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ProvenanceBuilder
//

@implementation GTLROnDemandScanning_ProvenanceBuilder
@dynamic builderDependencies, identifier, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"builderDependencies" : [GTLROnDemandScanning_ResourceDescriptor class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ProvenanceBuilder_Version
//

@implementation GTLROnDemandScanning_ProvenanceBuilder_Version

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Recipe
//

@implementation GTLROnDemandScanning_Recipe
@dynamic arguments, definedInMaterial, entryPoint, environment, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arguments" : [GTLROnDemandScanning_Recipe_Arguments_Item class],
    @"environment" : [GTLROnDemandScanning_Recipe_Environment_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Recipe_Arguments_Item
//

@implementation GTLROnDemandScanning_Recipe_Arguments_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Recipe_Environment_Item
//

@implementation GTLROnDemandScanning_Recipe_Environment_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_RelatedUrl
//

@implementation GTLROnDemandScanning_RelatedUrl
@dynamic label, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Remediation
//

@implementation GTLROnDemandScanning_Remediation
@dynamic details, remediationType, remediationUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_RepoId
//

@implementation GTLROnDemandScanning_RepoId
@dynamic projectRepoId, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ResourceDescriptor
//

@implementation GTLROnDemandScanning_ResourceDescriptor
@dynamic annotations, content, digest, downloadLocation, mediaType, name, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ResourceDescriptor_Annotations
//

@implementation GTLROnDemandScanning_ResourceDescriptor_Annotations

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_ResourceDescriptor_Digest
//

@implementation GTLROnDemandScanning_ResourceDescriptor_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_RunDetails
//

@implementation GTLROnDemandScanning_RunDetails
@dynamic builder, byproducts, metadata;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"byproducts" : [GTLROnDemandScanning_ResourceDescriptor class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SbomReferenceIntotoPayload
//

@implementation GTLROnDemandScanning_SbomReferenceIntotoPayload
@dynamic xType, predicate, predicateType, subject;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"xType" : @"_type" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subject" : [GTLROnDemandScanning_Subject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SbomReferenceIntotoPredicate
//

@implementation GTLROnDemandScanning_SbomReferenceIntotoPredicate
@dynamic digest, location, mimeType, referrerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SbomReferenceIntotoPredicate_Digest
//

@implementation GTLROnDemandScanning_SbomReferenceIntotoPredicate_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SBOMReferenceOccurrence
//

@implementation GTLROnDemandScanning_SBOMReferenceOccurrence
@dynamic payload, payloadType, signatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signatures" : [GTLROnDemandScanning_EnvelopeSignature class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SBOMStatus
//

@implementation GTLROnDemandScanning_SBOMStatus
@dynamic error, sbomState;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Signature
//

@implementation GTLROnDemandScanning_Signature
@dynamic publicKeyId, signature;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaBuilder
//

@implementation GTLROnDemandScanning_SlsaBuilder
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaCompleteness
//

@implementation GTLROnDemandScanning_SlsaCompleteness
@dynamic arguments, environment, materials;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaMetadata
//

@implementation GTLROnDemandScanning_SlsaMetadata
@dynamic buildFinishedOn, buildInvocationId, buildStartedOn, completeness,
         reproducible;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaProvenance
//

@implementation GTLROnDemandScanning_SlsaProvenance
@dynamic builder, materials, metadata, recipe;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"materials" : [GTLROnDemandScanning_Material class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaProvenanceV1
//

@implementation GTLROnDemandScanning_SlsaProvenanceV1
@dynamic buildDefinition, runDetails;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaProvenanceZeroTwo
//

@implementation GTLROnDemandScanning_SlsaProvenanceZeroTwo
@dynamic buildConfig, builder, buildType, invocation, materials, metadata;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"materials" : [GTLROnDemandScanning_GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaProvenanceZeroTwo_BuildConfig
//

@implementation GTLROnDemandScanning_SlsaProvenanceZeroTwo_BuildConfig

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaRecipe
//

@implementation GTLROnDemandScanning_SlsaRecipe
@dynamic arguments, definedInMaterial, entryPoint, environment, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaRecipe_Arguments
//

@implementation GTLROnDemandScanning_SlsaRecipe_Arguments

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SlsaRecipe_Environment
//

@implementation GTLROnDemandScanning_SlsaRecipe_Environment

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Source
//

@implementation GTLROnDemandScanning_Source
@dynamic additionalContexts, artifactStorageSourceUri, context, fileHashes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"additionalContexts" : [GTLROnDemandScanning_SourceContext class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Source_FileHashes
//

@implementation GTLROnDemandScanning_Source_FileHashes

+ (Class)classForAdditionalProperties {
  return [GTLROnDemandScanning_FileHashes class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SourceContext
//

@implementation GTLROnDemandScanning_SourceContext
@dynamic cloudRepo, gerrit, git, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_SourceContext_Labels
//

@implementation GTLROnDemandScanning_SourceContext_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Status
//

@implementation GTLROnDemandScanning_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLROnDemandScanning_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Status_Details_Item
//

@implementation GTLROnDemandScanning_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Subject
//

@implementation GTLROnDemandScanning_Subject
@dynamic digest, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Subject_Digest
//

@implementation GTLROnDemandScanning_Subject_Digest

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_UpgradeDistribution
//

@implementation GTLROnDemandScanning_UpgradeDistribution
@dynamic classification, cpeUri, cve, severity;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cve" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_UpgradeOccurrence
//

@implementation GTLROnDemandScanning_UpgradeOccurrence
@dynamic distribution, package, parsedVersion, windowsUpdate;
@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_Version
//

@implementation GTLROnDemandScanning_Version
@dynamic epoch, fullName, inclusive, kind, name, revision;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_VexAssessment
//

@implementation GTLROnDemandScanning_VexAssessment
@dynamic cve, impacts, justification, noteName, relatedUris, remediations,
         state, vulnerabilityId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"impacts" : [NSString class],
    @"relatedUris" : [GTLROnDemandScanning_RelatedUrl class],
    @"remediations" : [GTLROnDemandScanning_Remediation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_VulnerabilityOccurrence
//

@implementation GTLROnDemandScanning_VulnerabilityOccurrence
@dynamic cvssScore, cvssV2, cvssv3, cvssVersion, effectiveSeverity,
         extraDetails, fixAvailable, longDescription, packageIssue, relatedUrls,
         severity, shortDescription, type, vexAssessment;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageIssue" : [GTLROnDemandScanning_PackageIssue class],
    @"relatedUrls" : [GTLROnDemandScanning_RelatedUrl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLROnDemandScanning_WindowsUpdate
//

@implementation GTLROnDemandScanning_WindowsUpdate
@dynamic categories, descriptionProperty, identity, kbArticleIds,
         lastPublishedTimestamp, supportUrl, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [GTLROnDemandScanning_Category class],
    @"kbArticleIds" : [NSString class]
  };
  return map;
}

@end
