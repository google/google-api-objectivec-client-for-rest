// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Firebase App Hosting API (firebaseapphosting/v1)
// Description:
//   Firebase App Hosting streamlines the development and deployment of dynamic
//   Next.js and Angular applications, offering built-in framework support,
//   GitHub integration, and integration with other Firebase products. You can
//   use this API to intervene in the Firebase App Hosting build process and add
//   custom functionality not supported in our default Console & CLI flows,
//   including triggering builds from external CI/CD workflows or deploying from
//   pre-built container images.
// Documentation:
//   https://firebase.google.com/docs/app-hosting

#import <GoogleAPIClientForREST/GTLRService.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Authorization scope

/**
 *  Authorization scope: See, edit, configure, and delete your Google Cloud data
 *  and see the email address for your Google Account.
 *
 *  Value "https://www.googleapis.com/auth/cloud-platform"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeFirebaseAppHostingCloudPlatform;

// ----------------------------------------------------------------------------
//   GTLRFirebaseAppHostingService
//

/**
 *  Service for executing Firebase App Hosting API queries.
 *
 *  Firebase App Hosting streamlines the development and deployment of dynamic
 *  Next.js and Angular applications, offering built-in framework support,
 *  GitHub integration, and integration with other Firebase products. You can
 *  use this API to intervene in the Firebase App Hosting build process and add
 *  custom functionality not supported in our default Console & CLI flows,
 *  including triggering builds from external CI/CD workflows or deploying from
 *  pre-built container images.
 */
@interface GTLRFirebaseAppHostingService : GTLRService

// No new methods

// Clients should create a standard query with any of the class methods in
// GTLRFirebaseAppHostingQuery.h. The query can the be sent with GTLRService's
// execute methods,
//
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                     completionHandler:(void (^)(GTLRServiceTicket *ticket,
//                                                 id object, NSError *error))handler;
// or
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                              delegate:(id)delegate
//                     didFinishSelector:(SEL)finishedSelector;
//
// where finishedSelector has a signature of:
//
//   - (void)serviceTicket:(GTLRServiceTicket *)ticket
//      finishedWithObject:(id)object
//                   error:(NSError *)error;
//
// The object passed to the completion handler or delegate method
// is a subclass of GTLRObject, determined by the query method executed.

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
