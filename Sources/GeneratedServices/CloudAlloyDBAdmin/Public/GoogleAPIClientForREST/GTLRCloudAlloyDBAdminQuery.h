// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AlloyDB API (alloydb/v1)
// Description:
//   AlloyDB for PostgreSQL is an open source-compatible database service that
//   provides a powerful option for migrating, modernizing, or building
//   commercial-grade applications. It offers full compatibility with standard
//   PostgreSQL, and is more than 4x faster for transactional workloads and up
//   to 100x faster for analytical queries than standard PostgreSQL in our
//   performance tests. AlloyDB for PostgreSQL offers a 99.99 percent
//   availability SLA inclusive of maintenance. AlloyDB is optimized for the
//   most demanding use cases, allowing you to build new applications that
//   require high transaction throughput, large database sizes, or multiple read
//   resources; scale existing PostgreSQL workloads with no application changes;
//   and modernize legacy proprietary databases.
// Documentation:
//   https://cloud.google.com/alloydb/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudAlloyDBAdminObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  BASIC server responses include all the relevant cluster details, excluding
 *  Cluster.ContinuousBackupInfo.EarliestRestorableTime and other view-specific
 *  fields. The default value.
 *
 *  Value: "CLUSTER_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewClusterViewBasic;
/**
 *  CONTINUOUS_BACKUP response returns all the fields from BASIC plus the
 *  earliest restorable time if continuous backups are enabled. May increase
 *  latency.
 *
 *  Value: "CLUSTER_VIEW_CONTINUOUS_BACKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewClusterViewContinuousBackup;
/**
 *  CLUSTER_VIEW_UNSPECIFIED Not specified, equivalent to BASIC.
 *
 *  Value: "CLUSTER_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewClusterViewUnspecified;
/**
 *  BASIC server responses for a primary or read instance include all the
 *  relevant instance details, excluding the details of each node in the
 *  instance. The default value.
 *
 *  Value: "INSTANCE_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewInstanceViewBasic;
/**
 *  FULL response is equivalent to BASIC for primary instance (for now). For
 *  read pool instance, this includes details of each node in the pool.
 *
 *  Value: "INSTANCE_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewInstanceViewFull;
/**
 *  INSTANCE_VIEW_UNSPECIFIED Not specified, equivalent to BASIC.
 *
 *  Value: "INSTANCE_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdminViewInstanceViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloud AlloyDB Admin query classes.
 */
@interface GTLRCloudAlloyDBAdminQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new Backup in a given project and location.
 *
 *  Method: alloydb.projects.locations.backups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsCreate : GTLRCloudAlloyDBAdminQuery

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *backupId;

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a new Backup in a given project and location.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Backup to include in the query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Backup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Backup.
 *
 *  Method: alloydb.projects.locations.backups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsDelete : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. The current etag of the Backup. If an etag is provided and does
 *  not match the current etag of the Backup, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Name of the resource. For the required format, see the comment on
 *  the Backup.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Deletes a single Backup.
 *
 *  @param name Required. Name of the resource. For the required format, see the
 *    comment on the Backup.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Backup.
 *
 *  Method: alloydb.projects.locations.backups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsGet : GTLRCloudAlloyDBAdminQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Backup.
 *
 *  Gets details of a single Backup.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Backups in a given project and location.
 *
 *  Method: alloydb.projects.locations.backups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsList : GTLRCloudAlloyDBAdminQuery

/** Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListBackupsRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListBackupsResponse.
 *
 *  Lists Backups in a given project and location.
 *
 *  @param parent Required. Parent value for ListBackupsRequest
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Backup.
 *
 *  Method: alloydb.projects.locations.backups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsPatch : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. If set to true, update succeeds even if instance is not found. In
 *  that case, a new backup is created and `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. The name of the backup resource with the format: *
 *  projects/{project}/locations/{region}/backups/{backup_id} where the cluster
 *  and backup ID segments should satisfy the regex expression
 *  `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase
 *  letters, numbers, and dashes, starting with a letter, and ending with a
 *  letter or number. For more details see https://google.aip.dev/122. The
 *  prefix of the backup resource name is the name of the parent resource: *
 *  projects/{project}/locations/{region}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Backup resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Updates the parameters of a single Backup.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Backup to include in the query.
 *  @param name Output only. The name of the backup resource with the format: *
 *    projects/{project}/locations/{region}/backups/{backup_id} where the
 *    cluster and backup ID segments should satisfy the regex expression
 *    `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase
 *    letters, numbers, and dashes, starting with a letter, and ending with a
 *    letter or number. For more details see https://google.aip.dev/122. The
 *    prefix of the backup resource name is the name of the parent resource: *
 *    projects/{project}/locations/{region}
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsBackupsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Backup *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Cluster in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersCreate : GTLRCloudAlloyDBAdminQuery

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *clusterId;

/**
 *  Required. The location of the new cluster. For the required format, see the
 *  comment on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the create
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a new Cluster in a given project and location.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Cluster to include in the query.
 *  @param parent Required. The location of the new cluster. For the required
 *    format, see the comment on the Cluster.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Cluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a cluster of type SECONDARY in the given location using the primary
 *  cluster as the source.
 *
 *  Method: alloydb.projects.locations.clusters.createsecondary
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersCreatesecondary : GTLRCloudAlloyDBAdminQuery

/** Required. ID of the requesting object (the secondary cluster). */
@property(nonatomic, copy, nullable) NSString *clusterId;

/**
 *  Required. The location of the new cluster. For the required format, see the
 *  comment on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the create
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a cluster of type SECONDARY in the given location using the primary
 *  cluster as the source.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Cluster to include in the query.
 *  @param parent Required. The location of the new cluster. For the required
 *    format, see the comment on the Cluster.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersCreatesecondary
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Cluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Cluster.
 *
 *  Method: alloydb.projects.locations.clusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersDelete : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. The current etag of the Cluster. If an etag is provided and does
 *  not match the current etag of the Cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Optional. Whether to cascade delete child instances for given cluster. */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the delete.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Deletes a single Cluster.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Cluster.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Cluster.
 *
 *  Method: alloydb.projects.locations.clusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersGet : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The view of the cluster to return. Returns all default fields if
 *  not set.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdminViewClusterViewUnspecified
 *        CLUSTER_VIEW_UNSPECIFIED Not specified, equivalent to BASIC. (Value:
 *        "CLUSTER_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdminViewClusterViewBasic BASIC server responses
 *        include all the relevant cluster details, excluding
 *        Cluster.ContinuousBackupInfo.EarliestRestorableTime and other
 *        view-specific fields. The default value. (Value: "CLUSTER_VIEW_BASIC")
 *    @arg @c kGTLRCloudAlloyDBAdminViewClusterViewContinuousBackup
 *        CONTINUOUS_BACKUP response returns all the fields from BASIC plus the
 *        earliest restorable time if continuous backups are enabled. May
 *        increase latency. (Value: "CLUSTER_VIEW_CONTINUOUS_BACKUP")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Cluster.
 *
 *  Gets details of a single Cluster.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Cluster.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Instance in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.instances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesCreate : GTLRCloudAlloyDBAdminQuery

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Required. The name of the parent resource. For the required format, see the
 *  comment on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the create
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a new Instance in a given project and location.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Instance to include in the query.
 *  @param parent Required. The name of the parent resource. For the required
 *    format, see the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Instance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new SECONDARY Instance in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.instances.createsecondary
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesCreatesecondary : GTLRCloudAlloyDBAdminQuery

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Required. The name of the parent resource. For the required format, see the
 *  comment on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the create
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a new SECONDARY Instance in a given project and location.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Instance to include in the query.
 *  @param parent Required. The name of the parent resource. For the required
 *    format, see the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesCreatesecondary
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Instance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Instance.
 *
 *  Method: alloydb.projects.locations.clusters.instances.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesDelete : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. The current etag of the Instance. If an etag is provided and does
 *  not match the current etag of the Instance, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the delete.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Deletes a single Instance.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Forces a Failover for a highly available instance. Failover promotes the HA
 *  standby instance as the new primary. Imperative only.
 *
 *  Method: alloydb.projects.locations.clusters.instances.failover
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesFailover : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Forces a Failover for a highly available instance. Failover promotes the HA
 *  standby instance as the new primary. Imperative only.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_FailoverInstanceRequest to
 *    include in the query.
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesFailover
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_FailoverInstanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single Instance.
 *
 *  Method: alloydb.projects.locations.clusters.instances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesGet : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The view of the instance to return.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdminViewInstanceViewUnspecified
 *        INSTANCE_VIEW_UNSPECIFIED Not specified, equivalent to BASIC. (Value:
 *        "INSTANCE_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdminViewInstanceViewBasic BASIC server responses
 *        for a primary or read instance include all the relevant instance
 *        details, excluding the details of each node in the instance. The
 *        default value. (Value: "INSTANCE_VIEW_BASIC")
 *    @arg @c kGTLRCloudAlloyDBAdminViewInstanceViewFull FULL response is
 *        equivalent to BASIC for primary instance (for now). For read pool
 *        instance, this includes details of each node in the pool. (Value:
 *        "INSTANCE_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Instance.
 *
 *  Gets details of a single Instance.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get instance metadata used for a connection.
 *
 *  Method: alloydb.projects.locations.clusters.instances.getConnectionInfo
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesGetConnectionInfo : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the parent resource. The required format is:
 *  projects/{project}/locations/{location}/clusters/{cluster}/instances/{instance}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ConnectionInfo.
 *
 *  Get instance metadata used for a connection.
 *
 *  @param parent Required. The name of the parent resource. The required format
 *    is:
 *    projects/{project}/locations/{location}/clusters/{cluster}/instances/{instance}
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesGetConnectionInfo
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Injects fault in an instance. Imperative only.
 *
 *  Method: alloydb.projects.locations.clusters.instances.injectFault
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesInjectFault : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Injects fault in an instance. Imperative only.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_InjectFaultRequest to include in
 *    the query.
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesInjectFault
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_InjectFaultRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists Instances in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.instances.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesList : GTLRCloudAlloyDBAdminQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource. For the required format, see the
 *  comment on the Instance.name field. Additionally, you can perform an
 *  aggregated list operation by specifying a value with one of the following
 *  formats: * projects/{project}/locations/-/clusters/- *
 *  projects/{project}/locations/{region}/clusters/-
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListInstancesResponse.
 *
 *  Lists Instances in a given project and location.
 *
 *  @param parent Required. The name of the parent resource. For the required
 *    format, see the comment on the Instance.name field. Additionally, you can
 *    perform an aggregated list operation by specifying a value with one of the
 *    following formats: * projects/{project}/locations/-/clusters/- *
 *    projects/{project}/locations/{region}/clusters/-
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Instance.
 *
 *  Method: alloydb.projects.locations.clusters.instances.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesPatch : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. If set to true, update succeeds even if instance is not found. In
 *  that case, a new instance is created and `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. The name of the instance resource with the format: *
 *  projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id}
 *  where the cluster and instance ID segments should satisfy the regex
 *  expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of
 *  lowercase letters, numbers, and dashes, starting with a letter, and ending
 *  with a letter or number. For more details see https://google.aip.dev/122.
 *  The prefix of the instance resource name is the name of the parent resource:
 *  * projects/{project}/locations/{region}/clusters/{cluster_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Instance resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the update
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Updates the parameters of a single Instance.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Instance to include in the query.
 *  @param name Output only. The name of the instance resource with the format:
 *    *
 *    projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id}
 *    where the cluster and instance ID segments should satisfy the regex
 *    expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of
 *    lowercase letters, numbers, and dashes, starting with a letter, and ending
 *    with a letter or number. For more details see https://google.aip.dev/122.
 *    The prefix of the instance resource name is the name of the parent
 *    resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Instance *)object
                           name:(NSString *)name;

@end

/**
 *  Restart an Instance in a cluster. Imperative only.
 *
 *  Method: alloydb.projects.locations.clusters.instances.restart
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesRestart : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Instance.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Restart an Instance in a cluster. Imperative only.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_RestartInstanceRequest to include
 *    in the query.
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Instance.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersInstancesRestart
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_RestartInstanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists Clusters in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersList : GTLRCloudAlloyDBAdminQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource. For the required format, see the
 *  comment on the Cluster.name field. Additionally, you can perform an
 *  aggregated list operation by specifying a value with the following format: *
 *  projects/{project}/locations/-
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListClustersResponse.
 *
 *  Lists Clusters in a given project and location.
 *
 *  @param parent Required. The name of the parent resource. For the required
 *    format, see the comment on the Cluster.name field. Additionally, you can
 *    perform an aggregated list operation by specifying a value with the
 *    following format: * projects/{project}/locations/-
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Cluster.
 *
 *  Method: alloydb.projects.locations.clusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersPatch : GTLRCloudAlloyDBAdminQuery

/**
 *  Optional. If set to true, update succeeds even if cluster is not found. In
 *  that case, a new cluster is created and `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. The name of the cluster resource with the format: *
 *  projects/{project}/locations/{region}/clusters/{cluster_id} where the
 *  cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For
 *  more details see https://google.aip.dev/122. The prefix of the cluster
 *  resource name is the name of the parent resource: *
 *  projects/{project}/locations/{region}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  Cluster resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the update
 *  request.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Updates the parameters of a single Cluster.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_Cluster to include in the query.
 *  @param name Output only. The name of the cluster resource with the format: *
 *    projects/{project}/locations/{region}/clusters/{cluster_id} where the
 *    cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For
 *    more details see https://google.aip.dev/122. The prefix of the cluster
 *    resource name is the name of the parent resource: *
 *    projects/{project}/locations/{region}
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_Cluster *)object
                           name:(NSString *)name;

@end

/**
 *  Promotes a SECONDARY cluster. This turns down replication from the PRIMARY
 *  cluster and promotes a secondary cluster into its own standalone cluster.
 *  Imperative only.
 *
 *  Method: alloydb.projects.locations.clusters.promote
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersPromote : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Cluster.name field
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Promotes a SECONDARY cluster. This turns down replication from the PRIMARY
 *  cluster and promotes a secondary cluster into its own standalone cluster.
 *  Imperative only.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_PromoteClusterRequest to include
 *    in the query.
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Cluster.name field
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersPromote
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_PromoteClusterRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Cluster in a given project and location, with a volume
 *  restored from the provided source, either a backup ID or a point-in-time and
 *  a source cluster.
 *
 *  Method: alloydb.projects.locations.clusters.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersRestore : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the parent resource. For the required format, see the
 *  comment on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Creates a new Cluster in a given project and location, with a volume
 *  restored from the provided source, either a backup ID or a point-in-time and
 *  a source cluster.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_RestoreClusterRequest to include
 *    in the query.
 *  @param parent Required. The name of the parent resource. For the required
 *    format, see the comment on the Cluster.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersRestore
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_RestoreClusterRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Switches the role of PRIMARY and SECONDARY cluster without any data loss.
 *  This promotes the SECONDARY cluster to PRIMARY and sets up original PRIMARY
 *  cluster to replicate from this newly promoted cluster.
 *
 *  Method: alloydb.projects.locations.clusters.switchover
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersSwitchover : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the Cluster.name field
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Switches the role of PRIMARY and SECONDARY cluster without any data loss.
 *  This promotes the SECONDARY cluster to PRIMARY and sets up original PRIMARY
 *  cluster to replicate from this newly promoted cluster.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_SwitchoverClusterRequest to
 *    include in the query.
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the Cluster.name field
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersSwitchover
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_SwitchoverClusterRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Upgrades a single Cluster. Imperative only.
 *
 *  Method: alloydb.projects.locations.clusters.upgrade
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUpgrade : GTLRCloudAlloyDBAdminQuery

/** Required. The resource name of the cluster. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Upgrades a single Cluster. Imperative only.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_UpgradeClusterRequest to include
 *    in the query.
 *  @param name Required. The resource name of the cluster.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUpgrade
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_UpgradeClusterRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new User in a given project, location, and cluster.
 *
 *  Method: alloydb.projects.locations.clusters.users.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersCreate : GTLRCloudAlloyDBAdminQuery

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *userId;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_User.
 *
 *  Creates a new User in a given project, location, and cluster.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_User to include in the query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_User *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single User.
 *
 *  Method: alloydb.projects.locations.clusters.users.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersDelete : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the User.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Empty.
 *
 *  Deletes a single User.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the User.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single User.
 *
 *  Method: alloydb.projects.locations.clusters.users.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersGet : GTLRCloudAlloyDBAdminQuery

/**
 *  Required. The name of the resource. For the required format, see the comment
 *  on the User.name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_User.
 *
 *  Gets details of a single User.
 *
 *  @param name Required. The name of the resource. For the required format, see
 *    the comment on the User.name field.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Users in a given project and location.
 *
 *  Method: alloydb.projects.locations.clusters.users.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersList : GTLRCloudAlloyDBAdminQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListUsersRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListUsersResponse.
 *
 *  Lists Users in a given project and location.
 *
 *  @param parent Required. Parent value for ListUsersRequest
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single User.
 *
 *  Method: alloydb.projects.locations.clusters.users.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersPatch : GTLRCloudAlloyDBAdminQuery

/** Optional. Allow missing fields in the update mask. */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. Name of the resource in the form of
 *  projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  User resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, the backend validates the request, but doesn't actually
 *  execute it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_User.
 *
 *  Updates the parameters of a single User.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_User to include in the query.
 *  @param name Output only. Name of the resource in the form of
 *    projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsClustersUsersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_User *)object
                           name:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: alloydb.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsGet : GTLRCloudAlloyDBAdminQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: alloydb.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsList : GTLRCloudAlloyDBAdminQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_GoogleCloudLocationListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: alloydb.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsCancel : GTLRCloudAlloyDBAdminQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRCloudAlloyDBAdmin_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudAlloyDBAdmin_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: alloydb.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsDelete : GTLRCloudAlloyDBAdminQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: alloydb.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsGet : GTLRCloudAlloyDBAdminQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: alloydb.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsList : GTLRCloudAlloyDBAdminQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists SupportedDatabaseFlags for a given project and location.
 *
 *  Method: alloydb.projects.locations.supportedDatabaseFlags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudAlloyDBAdminCloudPlatform
 */
@interface GTLRCloudAlloyDBAdminQuery_ProjectsLocationsSupportedDatabaseFlagsList : GTLRCloudAlloyDBAdminQuery

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource. The required format is: *
 *  projects/{project}/locations/{location} Regardless of the parent specified
 *  here, as long it is contains a valid project and location, the service will
 *  return a static list of supported flags resources. Note that we do not yet
 *  support region-specific flags.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudAlloyDBAdmin_ListSupportedDatabaseFlagsResponse.
 *
 *  Lists SupportedDatabaseFlags for a given project and location.
 *
 *  @param parent Required. The name of the parent resource. The required format
 *    is: * projects/{project}/locations/{location} Regardless of the parent
 *    specified here, as long it is contains a valid project and location, the
 *    service will return a static list of supported flags resources. Note that
 *    we do not yet support region-specific flags.
 *
 *  @return GTLRCloudAlloyDBAdminQuery_ProjectsLocationsSupportedDatabaseFlagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
