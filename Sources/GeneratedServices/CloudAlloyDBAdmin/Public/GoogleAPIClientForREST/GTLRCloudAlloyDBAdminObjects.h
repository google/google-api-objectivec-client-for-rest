// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AlloyDB API (alloydb/v1)
// Description:
//   AlloyDB for PostgreSQL is an open source-compatible database service that
//   provides a powerful option for migrating, modernizing, or building
//   commercial-grade applications. It offers full compatibility with standard
//   PostgreSQL, and is more than 4x faster for transactional workloads and up
//   to 100x faster for analytical queries than standard PostgreSQL in our
//   performance tests. AlloyDB for PostgreSQL offers a 99.99 percent
//   availability SLA inclusive of maintenance. AlloyDB is optimized for the
//   most demanding use cases, allowing you to build new applications that
//   require high transaction throughput, large database sizes, or multiple read
//   resources; scale existing PostgreSQL workloads with no application changes;
//   and modernize legacy proprietary databases.
// Documentation:
//   https://cloud.google.com/alloydb/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy;
@class GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy_Labels;
@class GTLRCloudAlloyDBAdmin_Backup;
@class GTLRCloudAlloyDBAdmin_Backup_Annotations;
@class GTLRCloudAlloyDBAdmin_Backup_Labels;
@class GTLRCloudAlloyDBAdmin_BackupSource;
@class GTLRCloudAlloyDBAdmin_ClientConnectionConfig;
@class GTLRCloudAlloyDBAdmin_Cluster;
@class GTLRCloudAlloyDBAdmin_Cluster_Annotations;
@class GTLRCloudAlloyDBAdmin_Cluster_Labels;
@class GTLRCloudAlloyDBAdmin_ContinuousBackupConfig;
@class GTLRCloudAlloyDBAdmin_ContinuousBackupInfo;
@class GTLRCloudAlloyDBAdmin_ContinuousBackupSource;
@class GTLRCloudAlloyDBAdmin_EncryptionConfig;
@class GTLRCloudAlloyDBAdmin_EncryptionInfo;
@class GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation;
@class GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Labels;
@class GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Metadata;
@class GTLRCloudAlloyDBAdmin_GoogleTypeTimeOfDay;
@class GTLRCloudAlloyDBAdmin_Instance;
@class GTLRCloudAlloyDBAdmin_Instance_Annotations;
@class GTLRCloudAlloyDBAdmin_Instance_DatabaseFlags;
@class GTLRCloudAlloyDBAdmin_Instance_Labels;
@class GTLRCloudAlloyDBAdmin_IntegerRestrictions;
@class GTLRCloudAlloyDBAdmin_MachineConfig;
@class GTLRCloudAlloyDBAdmin_MigrationSource;
@class GTLRCloudAlloyDBAdmin_NetworkConfig;
@class GTLRCloudAlloyDBAdmin_Node;
@class GTLRCloudAlloyDBAdmin_Operation;
@class GTLRCloudAlloyDBAdmin_Operation_Metadata;
@class GTLRCloudAlloyDBAdmin_Operation_Response;
@class GTLRCloudAlloyDBAdmin_PrimaryConfig;
@class GTLRCloudAlloyDBAdmin_QuantityBasedExpiry;
@class GTLRCloudAlloyDBAdmin_QuantityBasedRetention;
@class GTLRCloudAlloyDBAdmin_QueryInsightsInstanceConfig;
@class GTLRCloudAlloyDBAdmin_ReadPoolConfig;
@class GTLRCloudAlloyDBAdmin_SecondaryConfig;
@class GTLRCloudAlloyDBAdmin_SslConfig;
@class GTLRCloudAlloyDBAdmin_Status;
@class GTLRCloudAlloyDBAdmin_Status_Details_Item;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupConfiguration;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainCompliance;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_AdditionalMetadata;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CustomMetadata;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_UserLabels;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainOperationError;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings;
@class GTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct;
@class GTLRCloudAlloyDBAdmin_StringRestrictions;
@class GTLRCloudAlloyDBAdmin_SupportedDatabaseFlag;
@class GTLRCloudAlloyDBAdmin_TimeBasedRetention;
@class GTLRCloudAlloyDBAdmin_User;
@class GTLRCloudAlloyDBAdmin_UserPassword;
@class GTLRCloudAlloyDBAdmin_WeeklySchedule;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Backup.databaseVersion

/**
 *  This is an unknown database version.
 *
 *  Value: "DATABASE_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_DatabaseVersionUnspecified;
/**
 *  DEPRECATED - The database version is Postgres 13.
 *
 *  Value: "POSTGRES_13"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres13 GTLR_DEPRECATED;
/**
 *  The database version is Postgres 14.
 *
 *  Value: "POSTGRES_14"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres14;
/**
 *  The database version is Postgres 15.
 *
 *  Value: "POSTGRES_15"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres15;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Backup.state

/**
 *  The backup is creating.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_State_Creating;
/**
 *  The backup is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_State_Deleting;
/**
 *  The backup failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_State_Failed;
/**
 *  The backup is ready.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_State_Ready;
/**
 *  The state of the backup is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Backup.type

/**
 *  AUTOMATED backups triggered by the automated backups scheduler pursuant to
 *  an automated backup policy.
 *
 *  Value: "AUTOMATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_Type_Automated;
/**
 *  CONTINUOUS backups triggered by the automated backups scheduler due to a
 *  continuous backup policy.
 *
 *  Value: "CONTINUOUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_Type_Continuous;
/**
 *  ON_DEMAND backups that were triggered by the customer (e.g., not AUTOMATED).
 *
 *  Value: "ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_Type_OnDemand;
/**
 *  Backup Type is unknown.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Backup_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata.exclusiveAction

/**
 *  The resource has to be deleted. When using this bit, the CLH should fail the
 *  operation. DEPRECATED. Instead use DELETE_RESOURCE OperationSignal in
 *  SideChannel.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_Delete GTLR_DEPRECATED;
/**
 *  This resource could not be repaired but the repair should be tried again at
 *  a later time. This can happen if there is a dependency that needs to be
 *  resolved first- e.g. if a parent resource must be repaired before a child
 *  resource.
 *
 *  Value: "RETRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_Retry;
/**
 *  Unknown repair action.
 *
 *  Value: "UNKNOWN_REPAIR_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_UnknownRepairAction;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Cluster.clusterType

/**
 *  The type of the cluster is unknown.
 *
 *  Value: "CLUSTER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_ClusterTypeUnspecified;
/**
 *  Primary cluster that support read and write operations.
 *
 *  Value: "PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_Primary;
/**
 *  Secondary cluster that is replicating from another region. This only
 *  supports read.
 *
 *  Value: "SECONDARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_Secondary;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Cluster.databaseVersion

/**
 *  This is an unknown database version.
 *
 *  Value: "DATABASE_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_DatabaseVersionUnspecified;
/**
 *  DEPRECATED - The database version is Postgres 13.
 *
 *  Value: "POSTGRES_13"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres13 GTLR_DEPRECATED;
/**
 *  The database version is Postgres 14.
 *
 *  Value: "POSTGRES_14"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres14;
/**
 *  The database version is Postgres 15.
 *
 *  Value: "POSTGRES_15"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres15;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Cluster.state

/**
 *  The cluster is bootstrapping with data from some other source. Direct
 *  mutations to the cluster (e.g. adding read pool) are not allowed.
 *
 *  Value: "BOOTSTRAPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Bootstrapping;
/**
 *  The cluster is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Creating;
/**
 *  The cluster is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Deleting;
/**
 *  The cluster is empty and has no associated resources. All instances,
 *  associated storage and backups have been deleted.
 *
 *  Value: "EMPTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Empty;
/**
 *  The creation of the cluster failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Failed;
/**
 *  The cluster is under maintenance. AlloyDB regularly performs maintenance and
 *  upgrades on customer clusters. Updates on the cluster are not allowed while
 *  the cluster is in this state.
 *
 *  Value: "MAINTENANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Maintenance;
/**
 *  The cluster is being promoted.
 *
 *  Value: "PROMOTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Promoting;
/**
 *  The cluster is active and running.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Ready;
/**
 *  The state of the cluster is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_StateUnspecified;
/**
 *  The cluster is stopped. All instances in the cluster are stopped. Customers
 *  can start a stopped cluster at any point and all their instances will come
 *  back to life with same names and IP resources. In this state, customer pays
 *  for storage. Associated backups could also be present in a stopped cluster.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Cluster_State_Stopped;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_ContinuousBackupInfo.schedule

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_ContinuousBackupInfo_Schedule_Wednesday;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_EncryptionInfo.encryptionType

/**
 *  The data is encrypted at rest with a key that is managed by the customer.
 *  KMS key versions will be populated.
 *
 *  Value: "CUSTOMER_MANAGED_ENCRYPTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_CustomerManagedEncryption;
/**
 *  The data is encrypted at rest with a key that is fully managed by Google. No
 *  key version will be populated. This is the default state.
 *
 *  Value: "GOOGLE_DEFAULT_ENCRYPTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_GoogleDefaultEncryption;
/**
 *  Encryption type not specified. Defaults to GOOGLE_DEFAULT_ENCRYPTION.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_InjectFaultRequest.faultType

/**
 *  The fault type is unknown.
 *
 *  Value: "FAULT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_InjectFaultRequest_FaultType_FaultTypeUnspecified;
/**
 *  Stop the VM
 *
 *  Value: "STOP_VM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_InjectFaultRequest_FaultType_StopVm;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Instance.availabilityType

/**
 *  This is an unknown Availability type.
 *
 *  Value: "AVAILABILITY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_AvailabilityTypeUnspecified;
/**
 *  Regional (or Highly) available instance.
 *
 *  Value: "REGIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_Regional;
/**
 *  Zonal available instance.
 *
 *  Value: "ZONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_Zonal;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Instance.instanceType

/**
 *  The type of the instance is unknown.
 *
 *  Value: "INSTANCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_InstanceType_InstanceTypeUnspecified;
/**
 *  PRIMARY instances support read and write operations.
 *
 *  Value: "PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_InstanceType_Primary;
/**
 *  READ POOL instances support read operations only. Each read pool instance
 *  consists of one or more homogeneous nodes. * Read pool of size 1 can only
 *  have zonal availability. * Read pools with node count of 2 or more can have
 *  regional availability (nodes are present in 2 or more zones in a region).
 *
 *  Value: "READ_POOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_InstanceType_ReadPool;
/**
 *  SECONDARY instances support read operations only. SECONDARY instance is a
 *  cross-region read replica
 *
 *  Value: "SECONDARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_InstanceType_Secondary;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_Instance.state

/**
 *  Index 7 is used in the producer apis for ROLLED_BACK state. Keeping that
 *  index unused in case that state also needs to exposed via consumer apis in
 *  future. The instance has been configured to sync data from some other
 *  source.
 *
 *  Value: "BOOTSTRAPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Bootstrapping;
/**
 *  The instance is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Creating;
/**
 *  The instance is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Deleting;
/**
 *  The creation of the instance failed or a fatal error occurred during an
 *  operation on the instance. Note: Instances in this state would tried to be
 *  auto-repaired. And Customers should be able to restart, update or delete
 *  these instances.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Failed;
/**
 *  The instance is down for maintenance.
 *
 *  Value: "MAINTENANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Maintenance;
/**
 *  The instance is being promoted.
 *
 *  Value: "PROMOTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Promoting;
/**
 *  The instance is active and running.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Ready;
/**
 *  The state of the instance is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_StateUnspecified;
/**
 *  The instance is stopped. Instance name and IP resources are preserved.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_Instance_State_Stopped;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_MigrationSource.sourceType

/**
 *  DMS source means the cluster was created via DMS migration job.
 *
 *  Value: "DMS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_MigrationSource_SourceType_Dms;
/**
 *  Migration source is unknown.
 *
 *  Value: "MIGRATION_SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_MigrationSource_SourceType_MigrationSourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_SslConfig.caSource

/**
 *  Certificate Authority (CA) managed by the AlloyDB Cluster.
 *
 *  Value: "CA_SOURCE_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_CaSource_CaSourceManaged;
/**
 *  Certificate Authority (CA) source not specified. Defaults to
 *  CA_SOURCE_MANAGED.
 *
 *  Value: "CA_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_CaSource_CaSourceUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_SslConfig.sslMode

/**
 *  SSL connections are optional. CA verification not enforced.
 *
 *  Value: "ALLOW_UNENCRYPTED_AND_ENCRYPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_AllowUnencryptedAndEncrypted;
/**
 *  SSL connections are required. CA verification not enforced.
 *
 *  Value: "ENCRYPTED_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_EncryptedOnly;
/**
 *  SSL connections are optional. CA verification not enforced.
 *
 *  Value: "SSL_MODE_ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeAllow GTLR_DEPRECATED;
/**
 *  SSL connections are required. CA verification not enforced. Clients may use
 *  locally self-signed certificates (default psql client behavior).
 *
 *  Value: "SSL_MODE_REQUIRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeRequire GTLR_DEPRECATED;
/**
 *  SSL mode not specified. Defaults to ENCRYPTED_ONLY.
 *
 *  Value: "SSL_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeUnspecified;
/**
 *  SSL connections are required. CA verification enforced. Clients must have
 *  certificates signed by a Cluster CA, e.g. via GenerateClientCertificate.
 *
 *  Value: "SSL_MODE_VERIFY_CA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeVerifyCa GTLR_DEPRECATED;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration.availabilityType

/**
 *  For rest of the other category
 *
 *  Value: "AVAILABILITY_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_AvailabilityTypeOther;
/** Value: "AVAILABILITY_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_AvailabilityTypeUnspecified;
/**
 *  Multi regional instance
 *
 *  Value: "MULTI_REGIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_MultiRegional;
/**
 *  Regional available instance.
 *
 *  Value: "REGIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_Regional;
/**
 *  Zonal available instance.
 *
 *  Value: "ZONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_Zonal;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun.status

/**
 *  The backup was unsuccessful.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_Failed;
/** Value: "STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_StatusUnspecified;
/**
 *  The backup was successful.
 *
 *  Value: "SUCCESSFUL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_Successful;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.feedType

/** Value: "FEEDTYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_FeedtypeUnspecified;
/**
 *  Database resource monitoring data
 *
 *  Value: "OBSERVABILITY_DATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_ObservabilityData;
/**
 *  Database resource metadata feed from control plane
 *
 *  Value: "RESOURCE_METADATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_ResourceMetadata;
/**
 *  Database resource security health signal data
 *
 *  Value: "SECURITY_FINDING_DATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_SecurityFindingData;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.provider

/**
 *  Amazon web service
 *
 *  Value: "AWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Aws;
/**
 *  Azure web service
 *
 *  Value: "AZURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Azure;
/**
 *  Google cloud platform provider
 *
 *  Value: "GCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Gcp;
/**
 *  On-prem database resources.
 *
 *  Value: "ONPREM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Onprem;
/**
 *  For the rest of the other categories. Other refers to the rest of other
 *  database service providers, this could be smaller cloud provider. This needs
 *  to be provided when the provider is known, but it is not present in the
 *  existing set of enum values.
 *
 *  Value: "PROVIDER_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_ProviderOther;
/** Value: "PROVIDER_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_ProviderUnspecified;
/**
 *  Self-managed database provider. These are resources on a cloud platform,
 *  e.g., database resource installed in a GCE VM, but not a managed database
 *  service.
 *
 *  Value: "SELFMANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Selfmanaged;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.signalClass

/**
 *  Unspecified signal class.
 *
 *  Value: "CLASS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_ClassUnspecified;
/**
 *  Describes an error that prevents some SCC functionality.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Error;
/**
 *  Describes a potential weakness in cloud resource/asset configuration that
 *  increases risk.
 *
 *  Value: "MISCONFIGURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Misconfiguration;
/**
 *  Describes a security observation that is for informational purposes.
 *
 *  Value: "OBSERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Observation;
/**
 *  Describes unwanted or malicious activity.
 *
 *  Value: "THREAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Threat;
/**
 *  Describes a potential weakness in software that increases risk to
 *  Confidentiality & Integrity & Availability.
 *
 *  Value: "VULNERABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Vulnerability;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.signalType

/**
 *  Represents if the log_connections database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeConnectionAttemptsNotLogged;
/**
 *  Represents if the user connections database flag for a Cloud SQL for SQL
 *  Server instance is configured.
 *
 *  Value: "SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeConnectionMaxNotConfigured;
/**
 *  Represents if the skip_show_database database flag for a Cloud SQL for MySQL
 *  instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_DATABASE_NAMES_EXPOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeDatabaseNamesExposed;
/**
 *  Represents if the log_disconnections database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeDisconnectionsNotLogged;
/**
 *  Represents if a SQL database instance is not encrypted with customer-managed
 *  encryption keys (CMEK).
 *
 *  Value: "SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeEncryptionKeyNotCustomerManaged;
/**
 *  Represents if the log_hostname database flag for a Cloud SQL for PostgreSQL
 *  instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfClientHostname;
/**
 *  Represents if the log_parser_stats database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfParserStatistics;
/**
 *  Represents if the log_planner_stats database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfPlannerStatistics;
/**
 *  Represents if the cross_db_ownership_chaining database flag for a Cloud SQL
 *  for SQL Server instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedByOwnershipChaining;
/**
 *  Represents if he external scripts enabled database flag for a Cloud SQL for
 *  SQL Server instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToExternalScripts;
/**
 *  Represents if the local_infile database flag for a Cloud SQL for MySQL
 *  instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToLocalDataLoads;
/**
 *  Represents if a resource is exposed to public access.
 *
 *  Value: "SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToPublicAccess;
/**
 *  Represents if the remote access database flag for a Cloud SQL for SQL Server
 *  instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToRemoteAccess;
/**
 *  Represents if a group is replicating across regions. Checks for resources
 *  that are configured to have redundancy, and ongoing replication, across
 *  regions.
 *
 *  Value: "SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeGroupNotReplicatingAcrossRegions;
/**
 *  Represents if the last backup of a resource failed.
 *
 *  Value: "SIGNAL_TYPE_LAST_BACKUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLastBackupFailed;
/**
 *  Represents if the last backup of a resource is older than some threshold
 *  value.
 *
 *  Value: "SIGNAL_TYPE_LAST_BACKUP_OLD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLastBackupOld;
/**
 *  Represents if the log_min_duration_statement database flag for a Cloud SQL
 *  for PostgreSQL instance is not set to -1.
 *
 *  Value: "SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingExcessiveStatementInfo;
/**
 *  Represents if the log_min_error_statement database flag for a Cloud SQL for
 *  PostgreSQL instance is not set appropriately.
 *
 *  Value: "SIGNAL_TYPE_LOGGING_MOST_ERRORS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingMostErrors;
/**
 *  Represents if the log_min_error_statement database flag for a Cloud SQL for
 *  PostgreSQL instance does not have an appropriate severity level.
 *
 *  Value: "SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingOnlyCriticalErrors;
/**
 *  Represents if the log_statement_stats database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_LOGGING_QUERY_STATISTICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingQueryStatistics;
/**
 *  LINT.IfChange(scc_signals) Represents if log_checkpoints database flag for a
 *  Cloud SQL for PostgreSQL instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLogsNotOptimizedForTroubleshooting;
/**
 *  Represents if the log_min_messages database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to warning or another recommended value.
 *
 *  Value: "SIGNAL_TYPE_MINIMAL_ERROR_LOGGING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeMinimalErrorLogging;
/**
 *  Represents if a resource has an automated backup policy.
 *
 *  Value: "SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoAutomatedBackupPolicy;
/**
 *  Represents if a resource has a promotable replica.
 *
 *  Value: "SIGNAL_TYPE_NO_PROMOTABLE_REPLICA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoPromotableReplica;
/**
 *  Represents if a Cloud SQL database has a password configured for the root
 *  account or not.
 *
 *  Value: "SIGNAL_TYPE_NO_ROOT_PASSWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoRootPassword;
/**
 *  Represents if a resource is available in multiple regions.
 *
 *  Value: "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotAvailableInMultipleRegions GTLR_DEPRECATED;
/**
 *  Represents if the resource is available in multiple zones or not.
 *
 *  Value: "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotAvailableInMultipleZones GTLR_DEPRECATED;
/**
 *  Represents if the log_statement database flag for a Cloud SQL for PostgreSQL
 *  instance is not set to DDL (all data definition statements).
 *
 *  Value: "SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotLoggingOnlyDdlStatements;
/**
 *  Represents if the log_temp_files database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to "0". (NOTE: 0 = ON)
 *
 *  Value: "SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotLoggingTemporaryFiles;
/**
 *  Represents if a resource is protected by automatic failover. Checks for
 *  resources that are configured to have redundancy within a region that
 *  enables automatic failover.
 *
 *  Value: "SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotProtectedByAutomaticFailover;
/**
 *  Represents if public IP is enabled.
 *  LINT.ThenChange(//depot/google3/storage/databasecenter/ingestion/borgjob/message_adapter/health_signal_feed/health_signal_mapping.h)
 *
 *  Value: "SIGNAL_TYPE_PUBLIC_IP_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypePublicIpEnabled;
/**
 *  Represents if the log_duration database flag for a Cloud SQL for PostgreSQL
 *  instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryDurationsNotLogged;
/**
 *  Represents if the log_lock_waits database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryLockWaitsNotLogged;
/**
 *  Represents if the databaseFlags property of instance metadata for the
 *  log_executor_status field is set to on.
 *
 *  Value: "SIGNAL_TYPE_QUERY_STATISTICS_LOGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryStatisticsLogged;
/**
 *  Represents if the 3625 (trace flag) database flag for a Cloud SQL for SQL
 *  Server instance is not set to on.
 *
 *  Value: "SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeSensitiveTraceInfoNotMasked;
/**
 *  Represents if The contained database authentication database flag for a
 *  Cloud SQL for SQL Server instance is not set to off.
 *
 *  Value: "SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeServerAuthenticationNotRequired;
/**
 *  Represents if a resources has a short backup retention period.
 *
 *  Value: "SIGNAL_TYPE_SHORT_BACKUP_RETENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeShortBackupRetention;
/**
 *  Represents if a resources requires all incoming connections to use SSL or
 *  not.
 *
 *  Value: "SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUnencryptedConnections;
/**
 *  Unspecified.
 *
 *  Value: "SIGNAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUnspecified;
/**
 *  Represents if the user options database flag for Cloud SQL SQL Server
 *  instance is configured or not.
 *
 *  Value: "SIGNAL_TYPE_USER_OPTIONS_CONFIGURED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUserOptionsConfigured;
/**
 *  Represents if the log_error_verbosity database flag for a Cloud SQL for
 *  PostgreSQL instance is not set to default or stricter (default or terse).
 *
 *  Value: "SIGNAL_TYPE_VERBOSE_ERROR_LOGGING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeVerboseErrorLogging;
/**
 *  Represents if a resource violates CIS GCP Foundation 1.0.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation10;
/**
 *  Represents if a resource violates CIS GCP Foundation 1.1.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation11;
/**
 *  Represents if a resource violates CIS GCP Foundation 1.2.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation12;
/**
 *  Represents if a resource violates CIS GCP Foundation 1.3.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation13;
/**
 *  Represents if a resource violates CIS GCP Foundation 2.0.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation20;
/**
 *  Represents if a resource violates ISO-27001.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_ISO_27001"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesIso27001;
/**
 *  Represents if a resource violates NIST 800-53.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_NIST_800_53"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesNist80053;
/**
 *  Represents if a resource violates PCI-DSS v3.2.1.
 *
 *  Value: "SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesPciDssV321;
/**
 *  Represents if a Cloud SQL database has a weak password configured for the
 *  root account.
 *
 *  Value: "SIGNAL_TYPE_WEAK_ROOT_PASSWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeWeakRootPassword;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.state

/**
 *  The signal requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Active;
/**
 *  The signal has been muted.
 *
 *  Value: "MUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Muted;
/**
 *  The signal has been fixed, triaged as a non-issue or otherwise addressed and
 *  is no longer active.
 *
 *  Value: "RESOLVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Resolved;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId.provider

/**
 *  Amazon web service
 *
 *  Value: "AWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Aws;
/**
 *  Azure web service
 *
 *  Value: "AZURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Azure;
/**
 *  Google cloud platform provider
 *
 *  Value: "GCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Gcp;
/**
 *  On-prem database resources.
 *
 *  Value: "ONPREM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Onprem;
/**
 *  For the rest of the other categories. Other refers to the rest of other
 *  database service providers, this could be smaller cloud provider. This needs
 *  to be provided when the provider is known, but it is not present in the
 *  existing set of enum values.
 *
 *  Value: "PROVIDER_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_ProviderOther;
/** Value: "PROVIDER_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_ProviderUnspecified;
/**
 *  Self-managed database provider. These are resources on a cloud platform,
 *  e.g., database resource installed in a GCE VM, but not a managed database
 *  service.
 *
 *  Value: "SELFMANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Selfmanaged;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.currentState

/**
 *  Instance is deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Deleted;
/**
 *  The instance is running.
 *
 *  Value: "HEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Healthy;
/**
 *  For rest of the other category
 *
 *  Value: "STATE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_StateOther;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_StateUnspecified;
/**
 *  When instance is suspended
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Suspended;
/**
 *  Instance being created, updated, deleted or under maintenance
 *
 *  Value: "UNHEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Unhealthy;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.expectedState

/**
 *  Instance is deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Deleted;
/**
 *  The instance is running.
 *
 *  Value: "HEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Healthy;
/**
 *  For rest of the other category
 *
 *  Value: "STATE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_StateOther;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_StateUnspecified;
/**
 *  When instance is suspended
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Suspended;
/**
 *  Instance being created, updated, deleted or under maintenance
 *
 *  Value: "UNHEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Unhealthy;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.instanceType

/** Value: "INSTANCE_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_InstanceTypeUnspecified GTLR_DEPRECATED;
/**
 *  For rest of the other categories.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Other GTLR_DEPRECATED;
/**
 *  A regular primary database instance.
 *
 *  Value: "PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Primary GTLR_DEPRECATED;
/**
 *  An instance acting as a read-replica.
 *
 *  Value: "READ_REPLICA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_ReadReplica GTLR_DEPRECATED;
/**
 *  A cluster or an instance acting as a secondary.
 *
 *  Value: "SECONDARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Secondary GTLR_DEPRECATED;
/**
 *  For rest of the other categories.
 *
 *  Value: "SUB_RESOURCE_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeOther;
/**
 *  A regular primary database instance.
 *
 *  Value: "SUB_RESOURCE_TYPE_PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypePrimary;
/**
 *  An instance acting as a read-replica.
 *
 *  Value: "SUB_RESOURCE_TYPE_READ_REPLICA"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeReadReplica;
/**
 *  A cluster or an instance acting as a secondary.
 *
 *  Value: "SUB_RESOURCE_TYPE_SECONDARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeSecondary;
/**
 *  For rest of the other categories.
 *
 *  Value: "SUB_RESOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings.retentionUnit

/**
 *  Retention will be by count, eg. "retain the most recent 7 backups".
 *
 *  Value: "COUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_Count;
/**
 *  For rest of the other category
 *
 *  Value: "RETENTION_UNIT_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_RetentionUnitOther;
/**
 *  Backup retention unit is unspecified, will be treated as COUNT.
 *
 *  Value: "RETENTION_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_RetentionUnitUnspecified;
/**
 *  Retention will be by Time, eg. "retain the last 7 days backups".
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_Time;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct.engine

/**
 *  Cloud Spanner with Postgres dialect.
 *
 *  Value: "ENGINE_CLOUD_SPANNER_WITH_POSTGRES_DIALECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineCloudSpannerWithPostgresDialect;
/**
 *  MySQL binary running as an engine in the database instance.
 *
 *  Value: "ENGINE_MYSQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineMysql;
/**
 *  Native database binary running as engine in instance.
 *
 *  Value: "ENGINE_NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineNative;
/**
 *  Other refers to rest of other database engine. This is to be when engine is
 *  known, but it is not present in this enum.
 *
 *  Value: "ENGINE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineOther;
/**
 *  Postgres binary running as engine in database instance.
 *
 *  Value: "ENGINE_POSTGRES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EnginePostgres;
/**
 *  SQLServer binary running as engine in database instance.
 *
 *  Value: "ENGINE_SQL_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineSqlServer;
/**
 *  UNSPECIFIED means engine type is not known or available.
 *
 *  Value: "ENGINE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineUnspecified;
/**
 *  MySQL binary running as engine in database instance.
 *
 *  Value: "MYSQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Mysql GTLR_DEPRECATED;
/**
 *  Native database binary running as engine in instance.
 *
 *  Value: "NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Native GTLR_DEPRECATED;
/**
 *  Postgres binary running as engine in database instance.
 *
 *  Value: "POSTGRES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Postgres GTLR_DEPRECATED;
/**
 *  Cloud Spanner with Postgres dialect.
 *
 *  Value: "SPANGRES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Spangres GTLR_DEPRECATED;
/**
 *  SQLServer binary running as engine in database instance.
 *
 *  Value: "SQL_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_SqlServer GTLR_DEPRECATED;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct.type

/**
 *  AlloyDB product area in GCP
 *
 *  Value: "ALLOYDB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_Alloydb GTLR_DEPRECATED;
/**
 *  Cloud SQL product area in GCP
 *
 *  Value: "CLOUD_SQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_CloudSql GTLR_DEPRECATED;
/**
 *  On premises database product.
 *
 *  Value: "ON_PREM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_OnPrem GTLR_DEPRECATED;
/**
 *  AlloyDB product area in GCP
 *
 *  Value: "PRODUCT_TYPE_ALLOYDB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeAlloydb;
/**
 *  Cloud SQL product area in GCP
 *
 *  Value: "PRODUCT_TYPE_CLOUD_SQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeCloudSql;
/**
 *  On premises database product.
 *
 *  Value: "PRODUCT_TYPE_ON_PREM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeOnPrem;
/**
 *  Other refers to rest of other product type. This is to be when product type
 *  is known, but it is not present in this enum.
 *
 *  Value: "PRODUCT_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeOther;
/**
 *  Spanner product area in GCP
 *
 *  Value: "PRODUCT_TYPE_SPANNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeSpanner;
/**
 *  UNSPECIFIED means product type is not known or available.
 *
 *  Value: "PRODUCT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeUnspecified;
/**
 *  Spanner product area in GCP
 *
 *  Value: "SPANNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_Spanner GTLR_DEPRECATED;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_SupportedDatabaseFlag.supportedDbVersions

/**
 *  This is an unknown database version.
 *
 *  Value: "DATABASE_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_SupportedDbVersions_DatabaseVersionUnspecified;
/**
 *  DEPRECATED - The database version is Postgres 13.
 *
 *  Value: "POSTGRES_13"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_SupportedDbVersions_Postgres13 GTLR_DEPRECATED;
/**
 *  The database version is Postgres 14.
 *
 *  Value: "POSTGRES_14"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_SupportedDbVersions_Postgres14;
/**
 *  The database version is Postgres 15.
 *
 *  Value: "POSTGRES_15"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_SupportedDbVersions_Postgres15;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_SupportedDatabaseFlag.valueType

/**
 *  Float type flag.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_Float;
/**
 *  Integer type flag.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_Integer;
/**
 *  Denotes that the flag does not accept any values.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_None;
/**
 *  String type flag.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_String;
/**
 *  This is an unknown flag type.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_ValueTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_User.userType

/**
 *  The default user type that authenticates via password-based authentication.
 *
 *  Value: "ALLOYDB_BUILT_IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_User_UserType_AlloydbBuiltIn;
/**
 *  Database user that can authenticate via IAM-Based authentication.
 *
 *  Value: "ALLOYDB_IAM_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_User_UserType_AlloydbIamUser;
/**
 *  Unspecified user type.
 *
 *  Value: "USER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_User_UserType_UserTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudAlloyDBAdmin_WeeklySchedule.daysOfWeek

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudAlloyDBAdmin_WeeklySchedule_DaysOfWeek_Wednesday;

/**
 *  Message describing the user-specified automated backup policy. All fields in
 *  the automated backup policy are optional. Defaults for each field are
 *  provided if they are not set.
 */
@interface GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy : GTLRObject

/**
 *  The length of the time window during which a backup can be taken. If a
 *  backup does not succeed within this time window, it will be canceled and
 *  considered failed. The backup window must be at least 5 minutes long. There
 *  is no upper bound on the window. If not set, it defaults to 1 hour.
 */
@property(nonatomic, strong, nullable) GTLRDuration *backupWindow;

/**
 *  Whether automated automated backups are enabled. If not set, defaults to
 *  true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Optional. The encryption config can be specified to encrypt the backups with
 *  a customer-managed encryption key (CMEK). When this field is not specified,
 *  the backup will then use default encryption scheme to protect the user data.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionConfig *encryptionConfig;

/** Labels to apply to backups created using this configuration. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy_Labels *labels;

/**
 *  The location where the backup will be stored. Currently, the only supported
 *  option is to store the backup in the same region as the cluster. If empty,
 *  defaults to the region of the cluster.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** Quantity-based Backup retention policy to retain recent backups. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_QuantityBasedRetention *quantityBasedRetention;

/** Time-based Backup retention policy. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_TimeBasedRetention *timeBasedRetention;

/** Weekly schedule for the Backup. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_WeeklySchedule *weeklySchedule;

@end


/**
 *  Labels to apply to backups created using this configuration.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy_Labels : GTLRObject
@end


/**
 *  Message describing Backup object
 */
@interface GTLRCloudAlloyDBAdmin_Backup : GTLRObject

/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Backup_Annotations *annotations;

/**
 *  Required. The full resource name of the backup source cluster (e.g.,
 *  projects/{project}/locations/{region}/clusters/{cluster_id}).
 */
@property(nonatomic, copy, nullable) NSString *clusterName;

/**
 *  Output only. The system-generated UID of the cluster which was used to
 *  create this resource.
 */
@property(nonatomic, copy, nullable) NSString *clusterUid;

/** Output only. Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The database engine major version of the cluster this backup
 *  was created from. Any restored cluster created from this backup will have
 *  the same database version.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_DatabaseVersionUnspecified
 *        This is an unknown database version. (Value:
 *        "DATABASE_VERSION_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres13
 *        DEPRECATED - The database version is Postgres 13. (Value:
 *        "POSTGRES_13")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres14 The
 *        database version is Postgres 14. (Value: "POSTGRES_14")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_DatabaseVersion_Postgres15 The
 *        database version is Postgres 15. (Value: "POSTGRES_15")
 */
@property(nonatomic, copy, nullable) NSString *databaseVersion;

/** Output only. Delete time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/**
 *  User-provided description of the backup.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-settable and human-readable display name for the Backup. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. The encryption config can be specified to encrypt the backup with
 *  a customer-managed encryption key (CMEK). When this field is not specified,
 *  the backup will then use default encryption scheme to protect the user data.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionConfig *encryptionConfig;

/** Output only. The encryption information for the backup. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionInfo *encryptionInfo;

/** For Resource freshness validation (https://google.aip.dev/154) */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. The QuantityBasedExpiry of the backup, specified by the
 *  backup's retention policy. Once the expiry quantity is over retention, the
 *  backup is eligible to be garbage collected.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_QuantityBasedExpiry *expiryQuantity;

/**
 *  Output only. The time at which after the backup is eligible to be garbage
 *  collected. It is the duration specified by the backup's retention policy,
 *  added to the backup's create_time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expiryTime;

/** Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Backup_Labels *labels;

/**
 *  Output only. The name of the backup resource with the format: *
 *  projects/{project}/locations/{region}/backups/{backup_id} where the cluster
 *  and backup ID segments should satisfy the regex expression
 *  `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase
 *  letters, numbers, and dashes, starting with a letter, and ending with a
 *  letter or number. For more details see https://google.aip.dev/122. The
 *  prefix of the backup resource name is the name of the parent resource: *
 *  projects/{project}/locations/{region}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reconciling (https://google.aip.dev/128#reconciliation), if
 *  true, indicates that the service is actively updating the resource. This can
 *  happen due to user-triggered updates or system actions like failover or
 *  maintenance.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. The size of the backup in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

/**
 *  Output only. The current state of the backup.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_State_Creating The backup is
 *        creating. (Value: "CREATING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_State_Deleting The backup is being
 *        deleted. (Value: "DELETING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_State_Failed The backup failed.
 *        (Value: "FAILED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_State_Ready The backup is ready.
 *        (Value: "READY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_State_StateUnspecified The state of
 *        the backup is unknown. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The backup type, which suggests the trigger for the backup.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_Type_Automated AUTOMATED backups
 *        triggered by the automated backups scheduler pursuant to an automated
 *        backup policy. (Value: "AUTOMATED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_Type_Continuous CONTINUOUS backups
 *        triggered by the automated backups scheduler due to a continuous
 *        backup policy. (Value: "CONTINUOUS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_Type_OnDemand ON_DEMAND backups that
 *        were triggered by the customer (e.g., not AUTOMATED). (Value:
 *        "ON_DEMAND")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Backup_Type_TypeUnspecified Backup Type is
 *        unknown. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Output only. The system-generated UID of the resource. The UID is assigned
 *  when the resource is created, and it is retained until it is deleted.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Backup_Annotations : GTLRObject
@end


/**
 *  Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Backup_Labels : GTLRObject
@end


/**
 *  Message describing a BackupSource.
 */
@interface GTLRCloudAlloyDBAdmin_BackupSource : GTLRObject

/**
 *  Required. The name of the backup resource with the format: *
 *  projects/{project}/locations/{region}/backups/{backup_id}
 */
@property(nonatomic, copy, nullable) NSString *backupName;

/**
 *  Output only. The system-generated UID of the backup which was used to create
 *  this resource. The UID is generated when the backup is created, and it is
 *  retained until the backup is deleted.
 */
@property(nonatomic, copy, nullable) NSString *backupUid;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRCloudAlloyDBAdmin_CancelOperationRequest : GTLRObject
@end


/**
 *  Client connection configuration
 */
@interface GTLRCloudAlloyDBAdmin_ClientConnectionConfig : GTLRObject

/**
 *  Optional. Configuration to enforce connectors only (ex: AuthProxy)
 *  connections to the database.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requireConnectors;

/** Optional. SSL config option for this instance. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_SslConfig *sslConfig;

@end


/**
 *  Operation metadata returned by the CLH during resource state reconciliation.
 */
@interface GTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata : GTLRObject

/**
 *  DEPRECATED. Use exclusive_action instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleteResource GTLR_DEPRECATED;

/**
 *  Excluisive action returned by the CLH.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_Delete
 *        The resource has to be deleted. When using this bit, the CLH should
 *        fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
 *        OperationSignal in SideChannel. (Value: "DELETE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_Retry
 *        This resource could not be repaired but the repair should be tried
 *        again at a later time. This can happen if there is a dependency that
 *        needs to be resolved first- e.g. if a parent resource must be repaired
 *        before a child resource. (Value: "RETRY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_CloudControl2SharedOperationsReconciliationOperationMetadata_ExclusiveAction_UnknownRepairAction
 *        Unknown repair action. (Value: "UNKNOWN_REPAIR_ACTION")
 */
@property(nonatomic, copy, nullable) NSString *exclusiveAction;

@end


/**
 *  A cluster is a collection of regional AlloyDB resources. It can include a
 *  primary instance and one or more read pool instances. All cluster resources
 *  share a storage layer, which scales as needed.
 */
@interface GTLRCloudAlloyDBAdmin_Cluster : GTLRObject

/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Cluster_Annotations *annotations;

/**
 *  The automated backup policy for this cluster. If no policy is provided then
 *  the default policy will be used. If backups are supported for the cluster,
 *  the default policy takes one backup a day, has a backup window of 1 hour,
 *  and retains backups for 14 days. For more information on the defaults,
 *  consult the documentation for the message type.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_AutomatedBackupPolicy *automatedBackupPolicy;

/** Output only. Cluster created from backup. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_BackupSource *backupSource;

/**
 *  Output only. The type of the cluster. This is an output-only field and it's
 *  populated at the Cluster creation time or the Cluster promotion time. The
 *  cluster type is determined by which RPC was used to create the cluster (i.e.
 *  `CreateCluster` vs. `CreateSecondaryCluster`
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_ClusterTypeUnspecified
 *        The type of the cluster is unknown. (Value:
 *        "CLUSTER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_Primary Primary cluster
 *        that support read and write operations. (Value: "PRIMARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_ClusterType_Secondary Secondary
 *        cluster that is replicating from another region. This only supports
 *        read. (Value: "SECONDARY")
 */
@property(nonatomic, copy, nullable) NSString *clusterType;

/** Optional. Continuous backup configuration for this cluster. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_ContinuousBackupConfig *continuousBackupConfig;

/** Output only. Continuous backup properties for this cluster. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_ContinuousBackupInfo *continuousBackupInfo;

/** Output only. Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The database engine major version. This is an optional field and
 *  it is populated at the Cluster creation time. If a database version is not
 *  supplied at cluster creation time, then a default database version will be
 *  used.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_DatabaseVersionUnspecified
 *        This is an unknown database version. (Value:
 *        "DATABASE_VERSION_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres13
 *        DEPRECATED - The database version is Postgres 13. (Value:
 *        "POSTGRES_13")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres14 The
 *        database version is Postgres 14. (Value: "POSTGRES_14")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_DatabaseVersion_Postgres15 The
 *        database version is Postgres 15. (Value: "POSTGRES_15")
 */
@property(nonatomic, copy, nullable) NSString *databaseVersion;

/** Output only. Delete time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** User-settable and human-readable display name for the Cluster. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. The encryption config can be specified to encrypt the data disks
 *  and other persistent data resources of a cluster with a customer-managed
 *  encryption key (CMEK). When this field is not specified, the cluster will
 *  then use default encryption scheme to protect the user data.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionConfig *encryptionConfig;

/** Output only. The encryption information for the cluster. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionInfo *encryptionInfo;

/** For Resource freshness validation (https://google.aip.dev/154) */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Input only. Initial user to setup during cluster creation. Required. If used
 *  in `RestoreCluster` this is ignored.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_UserPassword *initialUser;

/** Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Cluster_Labels *labels;

/** Output only. Cluster created via DMS migration. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_MigrationSource *migrationSource;

/**
 *  Output only. The name of the cluster resource with the format: *
 *  projects/{project}/locations/{region}/clusters/{cluster_id} where the
 *  cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For
 *  more details see https://google.aip.dev/122. The prefix of the cluster
 *  resource name is the name of the parent resource: *
 *  projects/{project}/locations/{region}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The resource link for the VPC network in which cluster resources
 *  are created and from which they are accessible via Private IP. The network
 *  must belong to the same project as the cluster. It is specified in the form:
 *  "projects/{project}/global/networks/{network_id}". This is required to
 *  create a cluster. Deprecated, use network_config.network instead.
 */
@property(nonatomic, copy, nullable) NSString *network GTLR_DEPRECATED;

@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_NetworkConfig *networkConfig;

/**
 *  Output only. Cross Region replication config specific to PRIMARY cluster.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_PrimaryConfig *primaryConfig;

/**
 *  Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to
 *  true if the current state of Cluster does not match the user's intended
 *  state, and the service is actively updating the resource to reconcile them.
 *  This can happen due to user-triggered updates or system actions like
 *  failover or maintenance.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Cross Region replication config specific to SECONDARY cluster. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_SecondaryConfig *secondaryConfig;

/** SSL configuration for this AlloyDB cluster. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_SslConfig *sslConfig GTLR_DEPRECATED;

/**
 *  Output only. The current serving state of the cluster.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Bootstrapping The cluster is
 *        bootstrapping with data from some other source. Direct mutations to
 *        the cluster (e.g. adding read pool) are not allowed. (Value:
 *        "BOOTSTRAPPING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Creating The cluster is being
 *        created. (Value: "CREATING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Deleting The cluster is being
 *        deleted. (Value: "DELETING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Empty The cluster is empty
 *        and has no associated resources. All instances, associated storage and
 *        backups have been deleted. (Value: "EMPTY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Failed The creation of the
 *        cluster failed. (Value: "FAILED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Maintenance The cluster is
 *        under maintenance. AlloyDB regularly performs maintenance and upgrades
 *        on customer clusters. Updates on the cluster are not allowed while the
 *        cluster is in this state. (Value: "MAINTENANCE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Promoting The cluster is
 *        being promoted. (Value: "PROMOTING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Ready The cluster is active
 *        and running. (Value: "READY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_StateUnspecified The state of
 *        the cluster is unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Cluster_State_Stopped The cluster is
 *        stopped. All instances in the cluster are stopped. Customers can start
 *        a stopped cluster at any point and all their instances will come back
 *        to life with same names and IP resources. In this state, customer pays
 *        for storage. Associated backups could also be present in a stopped
 *        cluster. (Value: "STOPPED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The system-generated UID of the resource. The UID is assigned
 *  when the resource is created, and it is retained until it is deleted.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Cluster_Annotations : GTLRObject
@end


/**
 *  Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Cluster_Labels : GTLRObject
@end


/**
 *  ConnectionInfo singleton resource. https://google.aip.dev/156
 */
@interface GTLRCloudAlloyDBAdmin_ConnectionInfo : GTLRObject

/** Output only. The unique ID of the Instance. */
@property(nonatomic, copy, nullable) NSString *instanceUid;

/**
 *  Output only. The private network IP address for the Instance. This is the
 *  default IP for the instance and is always created (even if enable_public_ip
 *  is set). This is the connection endpoint for an end-user application.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  The name of the ConnectionInfo singleton resource, e.g.:
 *  projects/{project}/locations/{location}/clusters/ * /instances/ *
 *  /connectionInfo This field currently has no semantic meaning.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  ContinuousBackupConfig describes the continuous backups recovery
 *  configurations of a cluster.
 */
@interface GTLRCloudAlloyDBAdmin_ContinuousBackupConfig : GTLRObject

/**
 *  Whether ContinuousBackup is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  The encryption config can be specified to encrypt the backups with a
 *  customer-managed encryption key (CMEK). When this field is not specified,
 *  the backup will then use default encryption scheme to protect the user data.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionConfig *encryptionConfig;

/**
 *  The number of days that are eligible to restore from using PITR. To support
 *  the entire recovery window, backups and logs are retained for one day more
 *  than the recovery window. If not set, defaults to 14 days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recoveryWindowDays;

@end


/**
 *  ContinuousBackupInfo describes the continuous backup properties of a
 *  cluster.
 */
@interface GTLRCloudAlloyDBAdmin_ContinuousBackupInfo : GTLRObject

/**
 *  Output only. The earliest restorable time that can be restored to. Output
 *  only field.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *earliestRestorableTime;

/**
 *  Output only. When ContinuousBackup was most recently enabled. Set to null if
 *  ContinuousBackup is not enabled.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *enabledTime;

/**
 *  Output only. The encryption information for the WALs and backups required
 *  for ContinuousBackup.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_EncryptionInfo *encryptionInfo;

/**
 *  Output only. Days of the week on which a continuous backup is taken. Output
 *  only field. Ignored if passed into the request.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *schedule;

@end


/**
 *  Message describing a ContinuousBackupSource.
 */
@interface GTLRCloudAlloyDBAdmin_ContinuousBackupSource : GTLRObject

/**
 *  Required. The source cluster from which to restore. This cluster must have
 *  continuous backup enabled for this operation to succeed. For the required
 *  format, see the comment on the Cluster.name field.
 */
@property(nonatomic, copy, nullable) NSString *cluster;

/** Required. The point in time to restore to. */
@property(nonatomic, strong, nullable) GTLRDateTime *pointInTime;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudAlloyDBAdmin_Empty : GTLRObject
@end


/**
 *  EncryptionConfig describes the encryption config of a cluster or a backup
 *  that is encrypted with a CMEK (customer-managed encryption key).
 */
@interface GTLRCloudAlloyDBAdmin_EncryptionConfig : GTLRObject

/**
 *  The fully-qualified resource name of the KMS key. Each Cloud KMS key is
 *  regionalized and has the following format:
 *  projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

@end


/**
 *  EncryptionInfo describes the encryption information of a cluster or a
 *  backup.
 */
@interface GTLRCloudAlloyDBAdmin_EncryptionInfo : GTLRObject

/**
 *  Output only. Type of encryption.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_CustomerManagedEncryption
 *        The data is encrypted at rest with a key that is managed by the
 *        customer. KMS key versions will be populated. (Value:
 *        "CUSTOMER_MANAGED_ENCRYPTION")
 *    @arg @c kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_GoogleDefaultEncryption
 *        The data is encrypted at rest with a key that is fully managed by
 *        Google. No key version will be populated. This is the default state.
 *        (Value: "GOOGLE_DEFAULT_ENCRYPTION")
 *    @arg @c kGTLRCloudAlloyDBAdmin_EncryptionInfo_EncryptionType_TypeUnspecified
 *        Encryption type not specified. Defaults to GOOGLE_DEFAULT_ENCRYPTION.
 *        (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *encryptionType;

/**
 *  Output only. Cloud KMS key versions that are being used to protect the
 *  database or the backup.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *kmsKeyVersions;

@end


/**
 *  Message for triggering failover on an Instance
 */
@interface GTLRCloudAlloyDBAdmin_FailoverInstanceRequest : GTLRObject

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the failover.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Message for requests to generate a client certificate signed by the Cluster
 *  CA.
 */
@interface GTLRCloudAlloyDBAdmin_GenerateClientCertificateRequest : GTLRObject

/**
 *  Optional. An optional hint to the endpoint to generate the client
 *  certificate with the requested duration. The duration can be from 1 hour to
 *  24 hours. The endpoint may or may not honor the hint. If the hint is left
 *  unspecified or is not honored, then the endpoint will pick an appropriate
 *  default duration.
 */
@property(nonatomic, strong, nullable) GTLRDuration *certDuration;

/** Optional. The public key from the client. */
@property(nonatomic, copy, nullable) NSString *publicKey;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. An optional hint to the endpoint to generate a client ceritificate
 *  that can be used by AlloyDB connectors to exchange additional metadata with
 *  the server after TLS handshake.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useMetadataExchange;

@end


/**
 *  Message returned by a GenerateClientCertificate operation.
 */
@interface GTLRCloudAlloyDBAdmin_GenerateClientCertificateResponse : GTLRObject

/** Optional. The pem-encoded cluster ca X.509 certificate. */
@property(nonatomic, copy, nullable) NSString *caCert;

/**
 *  Output only. The pem-encoded chain that may be used to verify the X.509
 *  certificate. Expected to be in issuer-to-root order according to RFC 5246.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pemCertificateChain;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_GoogleCloudLocationListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_GoogleCloudLocationLocation_Metadata : GTLRObject
@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLRCloudAlloyDBAdmin_GoogleTypeTimeOfDay : GTLRObject

/**
 *  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to
 *  allow the value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of hour of day. Must be from 0 to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 *  allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Message for triggering fault injection on an instance
 */
@interface GTLRCloudAlloyDBAdmin_InjectFaultRequest : GTLRObject

/**
 *  Required. The type of fault to be injected in an instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_InjectFaultRequest_FaultType_FaultTypeUnspecified
 *        The fault type is unknown. (Value: "FAULT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_InjectFaultRequest_FaultType_StopVm Stop
 *        the VM (Value: "STOP_VM")
 */
@property(nonatomic, copy, nullable) NSString *faultType;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the fault
 *  injection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  An Instance is a computing unit that an end customer can connect to. It's
 *  the main unit of computing resources in AlloyDB.
 */
@interface GTLRCloudAlloyDBAdmin_Instance : GTLRObject

/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Instance_Annotations *annotations;

/**
 *  Availability type of an Instance. If empty, defaults to REGIONAL for primary
 *  instances. For read pools, availability_type is always UNSPECIFIED.
 *  Instances in the read pools are evenly distributed across available zones
 *  within the region (i.e. read pools with more than one node will have a node
 *  in at least two zones).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_AvailabilityTypeUnspecified
 *        This is an unknown Availability type. (Value:
 *        "AVAILABILITY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_Regional Regional
 *        (or Highly) available instance. (Value: "REGIONAL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_AvailabilityType_Zonal Zonal
 *        available instance. (Value: "ZONAL")
 */
@property(nonatomic, copy, nullable) NSString *availabilityType;

/** Optional. Client connection specific configurations */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_ClientConnectionConfig *clientConnectionConfig;

/** Output only. Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Database flags. Set at instance level. * They are copied from primary
 *  instance on read instance creation. * Read instances can set new or override
 *  existing flags that are relevant for reads, e.g. for enabling columnar cache
 *  on a read instance. Flags set on read instance may or may not be present on
 *  primary. This is a list of "key": "value" pairs. "key": The name of the
 *  flag. These flags are passed at instance setup time, so include both server
 *  options and system variables for Postgres. Flags are specified with
 *  underscores, not hyphens. "value": The value of the flag. Booleans are set
 *  to **on** for true and **off** for false. This field must be omitted if the
 *  flag doesn't take a value.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Instance_DatabaseFlags *databaseFlags;

/** Output only. Delete time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** User-settable and human-readable display name for the Instance. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** For Resource freshness validation (https://google.aip.dev/154) */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The Compute Engine zone that the instance should serve from, per
 *  https://cloud.google.com/compute/docs/regions-zones This can ONLY be
 *  specified for ZONAL instances. If present for a REGIONAL instance, an error
 *  will be thrown. If this is absent for a ZONAL instance, instance is created
 *  in a random zone with available capacity.
 */
@property(nonatomic, copy, nullable) NSString *gceZone;

/**
 *  Required. The type of the instance. Specified at creation time.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_InstanceType_InstanceTypeUnspecified
 *        The type of the instance is unknown. (Value:
 *        "INSTANCE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_InstanceType_Primary PRIMARY
 *        instances support read and write operations. (Value: "PRIMARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_InstanceType_ReadPool READ POOL
 *        instances support read operations only. Each read pool instance
 *        consists of one or more homogeneous nodes. * Read pool of size 1 can
 *        only have zonal availability. * Read pools with node count of 2 or
 *        more can have regional availability (nodes are present in 2 or more
 *        zones in a region). (Value: "READ_POOL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_InstanceType_Secondary SECONDARY
 *        instances support read operations only. SECONDARY instance is a
 *        cross-region read replica (Value: "SECONDARY")
 */
@property(nonatomic, copy, nullable) NSString *instanceType;

/**
 *  Output only. The IP address for the Instance. This is the connection
 *  endpoint for an end-user application.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Instance_Labels *labels;

/**
 *  Configurations for the machines that host the underlying database engine.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_MachineConfig *machineConfig;

/**
 *  Output only. The name of the instance resource with the format: *
 *  projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id}
 *  where the cluster and instance ID segments should satisfy the regex
 *  expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of
 *  lowercase letters, numbers, and dashes, starting with a letter, and ending
 *  with a letter or number. For more details see https://google.aip.dev/122.
 *  The prefix of the instance resource name is the name of the parent resource:
 *  * projects/{project}/locations/{region}/clusters/{cluster_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. List of available read-only VMs in this instance, including the
 *  standby for a PRIMARY instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Node *> *nodes;

/** Configuration for query insights. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_QueryInsightsInstanceConfig *queryInsightsConfig;

/**
 *  Read pool instance configuration. This is required if the value of
 *  instanceType is READ_POOL.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_ReadPoolConfig *readPoolConfig;

/**
 *  Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to
 *  true if the current state of Instance does not match the user's intended
 *  state, and the service is actively updating the resource to reconcile them.
 *  This can happen due to user-triggered updates or system actions like
 *  failover or maintenance.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. The current serving state of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Bootstrapping Index 7 is
 *        used in the producer apis for ROLLED_BACK state. Keeping that index
 *        unused in case that state also needs to exposed via consumer apis in
 *        future. The instance has been configured to sync data from some other
 *        source. (Value: "BOOTSTRAPPING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Creating The instance is
 *        being created. (Value: "CREATING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Deleting The instance is
 *        being deleted. (Value: "DELETING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Failed The creation of the
 *        instance failed or a fatal error occurred during an operation on the
 *        instance. Note: Instances in this state would tried to be
 *        auto-repaired. And Customers should be able to restart, update or
 *        delete these instances. (Value: "FAILED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Maintenance The instance is
 *        down for maintenance. (Value: "MAINTENANCE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Promoting The instance is
 *        being promoted. (Value: "PROMOTING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Ready The instance is active
 *        and running. (Value: "READY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_StateUnspecified The state
 *        of the instance is unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_Instance_State_Stopped The instance is
 *        stopped. Instance name and IP resources are preserved. (Value:
 *        "STOPPED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The system-generated UID of the resource. The UID is assigned
 *  when the resource is created, and it is retained until it is deleted.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Output only. This is set for the read-write VM of the PRIMARY instance only.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Node *writableNode;

@end


/**
 *  Annotations to allow client tools to store small amount of arbitrary data.
 *  This is distinct from labels. https://google.aip.dev/128
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Instance_Annotations : GTLRObject
@end


/**
 *  Database flags. Set at instance level. * They are copied from primary
 *  instance on read instance creation. * Read instances can set new or override
 *  existing flags that are relevant for reads, e.g. for enabling columnar cache
 *  on a read instance. Flags set on read instance may or may not be present on
 *  primary. This is a list of "key": "value" pairs. "key": The name of the
 *  flag. These flags are passed at instance setup time, so include both server
 *  options and system variables for Postgres. Flags are specified with
 *  underscores, not hyphens. "value": The value of the flag. Booleans are set
 *  to **on** for true and **off** for false. This field must be omitted if the
 *  flag doesn't take a value.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Instance_DatabaseFlags : GTLRObject
@end


/**
 *  Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Instance_Labels : GTLRObject
@end


/**
 *  Restrictions on INTEGER type values.
 */
@interface GTLRCloudAlloyDBAdmin_IntegerRestrictions : GTLRObject

/**
 *  The maximum value that can be specified, if applicable.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  The minimum value that can be specified, if applicable.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  Message for response to listing Backups
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "backups" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListBackupsResponse : GTLRCollectionObject

/**
 *  The list of Backup
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Backup *> *backups;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Message for response to listing Clusters
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clusters" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListClustersResponse : GTLRCollectionObject

/**
 *  The list of Cluster
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Cluster *> *clusters;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Message for response to listing Instances
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "instances" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListInstancesResponse : GTLRCollectionObject

/**
 *  The list of Instance
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Instance *> *instances;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Operation *> *operations;

@end


/**
 *  Message for response to listing SupportedDatabaseFlags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "supportedDatabaseFlags" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListSupportedDatabaseFlagsResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of SupportedDatabaseFlags.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_SupportedDatabaseFlag *> *supportedDatabaseFlags;

@end


/**
 *  Message for response to listing Users
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "users" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudAlloyDBAdmin_ListUsersResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The list of User
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_User *> *users;

@end


/**
 *  MachineConfig describes the configuration of a machine.
 */
@interface GTLRCloudAlloyDBAdmin_MachineConfig : GTLRObject

/**
 *  The number of CPU's in the VM instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuCount;

@end


/**
 *  Subset of the source instance configuration that is available when reading
 *  the cluster resource.
 */
@interface GTLRCloudAlloyDBAdmin_MigrationSource : GTLRObject

/**
 *  Output only. The host and port of the on-premises instance in host:port
 *  format
 */
@property(nonatomic, copy, nullable) NSString *hostPort;

/**
 *  Output only. Place holder for the external source identifier(e.g DMS job
 *  name) that created the cluster.
 */
@property(nonatomic, copy, nullable) NSString *referenceId;

/**
 *  Output only. Type of migration source.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_MigrationSource_SourceType_Dms DMS source
 *        means the cluster was created via DMS migration job. (Value: "DMS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_MigrationSource_SourceType_MigrationSourceTypeUnspecified
 *        Migration source is unknown. (Value:
 *        "MIGRATION_SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sourceType;

@end


/**
 *  Metadata related to network configuration.
 */
@interface GTLRCloudAlloyDBAdmin_NetworkConfig : GTLRObject

/**
 *  Optional. Name of the allocated IP range for the private IP AlloyDB cluster,
 *  for example: "google-managed-services-default". If set, the instance IPs for
 *  this cluster will be created in the allocated range. The range name must
 *  comply with RFC 1035. Specifically, the name must be 1-63 characters long
 *  and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. Field name is
 *  intended to be consistent with Cloud SQL.
 */
@property(nonatomic, copy, nullable) NSString *allocatedIpRange;

/**
 *  Optional. The resource link for the VPC network in which cluster resources
 *  are created and from which they are accessible via Private IP. The network
 *  must belong to the same project as the cluster. It is specified in the form:
 *  "projects/{project_number}/global/networks/{network_id}". This is required
 *  to create a cluster.
 */
@property(nonatomic, copy, nullable) NSString *network;

@end


/**
 *  Details of a single node in the instance. Nodes in an AlloyDB instance are
 *  ephemereal, they can change during update, failover, autohealing and resize
 *  operations.
 */
@interface GTLRCloudAlloyDBAdmin_Node : GTLRObject

/**
 *  The identifier of the VM e.g. "test-read-0601-407e52be-ms3l".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The private IP address of the VM e.g. "10.57.0.34". */
@property(nonatomic, copy, nullable) NSString *ip;

/**
 *  Determined by state of the compute VM and postgres-service health. Compute
 *  VM state can have values listed in
 *  https://cloud.google.com/compute/docs/instances/instance-life-cycle and
 *  postgres-service health can have values: HEALTHY and UNHEALTHY.
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The Compute Engine zone of the VM e.g. "us-central1-b". */
@property(nonatomic, copy, nullable) NSString *zoneId;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudAlloyDBAdmin_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudAlloyDBAdmin_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have successfully been cancelled have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Configuration for the primary cluster. It has the list of clusters that are
 *  replicating from this cluster. This should be set if and only if the cluster
 *  is of type PRIMARY.
 */
@interface GTLRCloudAlloyDBAdmin_PrimaryConfig : GTLRObject

/**
 *  Output only. Names of the clusters that are replicating from this cluster.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *secondaryClusterNames;

@end


/**
 *  Message for promoting a Cluster
 */
@interface GTLRCloudAlloyDBAdmin_PromoteClusterRequest : GTLRObject

/**
 *  Optional. The current etag of the Cluster. If an etag is provided and does
 *  not match the current etag of the Cluster, deletion will be blocked and an
 *  ABORTED error will be returned.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the delete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  A backup's position in a quantity-based retention queue, of backups with the
 *  same source cluster and type, with length, retention, specified by the
 *  backup's retention policy. Once the position is greater than the retention,
 *  the backup is eligible to be garbage collected. Example: 5 backups from the
 *  same source cluster and type with a quantity-based retention of 3 and
 *  denoted by backup_id (position, retention). Safe: backup_5 (1, 3), backup_4,
 *  (2, 3), backup_3 (3, 3). Awaiting garbage collection: backup_2 (4, 3),
 *  backup_1 (5, 3)
 */
@interface GTLRCloudAlloyDBAdmin_QuantityBasedExpiry : GTLRObject

/**
 *  Output only. The backup's position among its backups with the same source
 *  cluster and type, by descending chronological order create time(i.e. newest
 *  first).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retentionCount;

/**
 *  Output only. The length of the quantity-based queue, specified by the
 *  backup's retention policy.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRetentionCount;

@end


/**
 *  A quantity based policy specifies that a certain number of the most recent
 *  successful backups should be retained.
 */
@interface GTLRCloudAlloyDBAdmin_QuantityBasedRetention : GTLRObject

/**
 *  The number of backups to retain.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

@end


/**
 *  QueryInsights Instance specific configuration.
 */
@interface GTLRCloudAlloyDBAdmin_QueryInsightsInstanceConfig : GTLRObject

/**
 *  Number of query execution plans captured by Insights per minute for all
 *  queries combined. The default value is 5. Any integer between 0 and 20 is
 *  considered valid.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *queryPlansPerMinute;

/**
 *  Query string length. The default value is 1024. Any integer between 256 and
 *  4500 is considered valid.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *queryStringLength;

/**
 *  Record application tags for an instance. This flag is turned "on" by
 *  default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recordApplicationTags;

/**
 *  Record client address for an instance. Client address is PII information.
 *  This flag is turned "on" by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recordClientAddress;

@end


/**
 *  Configuration for a read pool instance.
 */
@interface GTLRCloudAlloyDBAdmin_ReadPoolConfig : GTLRObject

/**
 *  Read capacity, i.e. number of nodes in a read pool instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

@end


/**
 *  GTLRCloudAlloyDBAdmin_RestartInstanceRequest
 */
@interface GTLRCloudAlloyDBAdmin_RestartInstanceRequest : GTLRObject

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the restart.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Message for restoring a Cluster from a backup or another cluster at a given
 *  point in time.
 */
@interface GTLRCloudAlloyDBAdmin_RestoreClusterRequest : GTLRObject

/** Backup source. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_BackupSource *backupSource;

/** Required. The resource being created */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_Cluster *cluster;

/** Required. ID of the requesting object. */
@property(nonatomic, copy, nullable) NSString *clusterId;

/**
 *  ContinuousBackup source. Continuous backup needs to be enabled in the source
 *  cluster for this operation to succeed.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_ContinuousBackupSource *continuousBackupSource;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, performs request validation (e.g. permission checks and
 *  any other type of validation), but do not actually execute the import
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Configuration information for the secondary cluster. This should be set if
 *  and only if the cluster is of type SECONDARY.
 */
@interface GTLRCloudAlloyDBAdmin_SecondaryConfig : GTLRObject

/**
 *  The name of the primary cluster name with the format: *
 *  projects/{project}/locations/{region}/clusters/{cluster_id}
 */
@property(nonatomic, copy, nullable) NSString *primaryClusterName;

@end


/**
 *  SSL configuration.
 */
@interface GTLRCloudAlloyDBAdmin_SslConfig : GTLRObject

/**
 *  Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED is
 *  supported currently, and is the default value.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_CaSource_CaSourceManaged
 *        Certificate Authority (CA) managed by the AlloyDB Cluster. (Value:
 *        "CA_SOURCE_MANAGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_CaSource_CaSourceUnspecified
 *        Certificate Authority (CA) source not specified. Defaults to
 *        CA_SOURCE_MANAGED. (Value: "CA_SOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *caSource;

/**
 *  Optional. SSL mode. Specifies client-server SSL/TLS connection behavior.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_AllowUnencryptedAndEncrypted
 *        SSL connections are optional. CA verification not enforced. (Value:
 *        "ALLOW_UNENCRYPTED_AND_ENCRYPTED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_EncryptedOnly SSL
 *        connections are required. CA verification not enforced. (Value:
 *        "ENCRYPTED_ONLY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeAllow SSL
 *        connections are optional. CA verification not enforced. (Value:
 *        "SSL_MODE_ALLOW")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeRequire SSL
 *        connections are required. CA verification not enforced. Clients may
 *        use locally self-signed certificates (default psql client behavior).
 *        (Value: "SSL_MODE_REQUIRE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeUnspecified SSL
 *        mode not specified. Defaults to ENCRYPTED_ONLY. (Value:
 *        "SSL_MODE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SslConfig_SslMode_SslModeVerifyCa SSL
 *        connections are required. CA verification enforced. Clients must have
 *        certificates signed by a Cluster CA, e.g. via
 *        GenerateClientCertificate. (Value: "SSL_MODE_VERIFY_CA")
 */
@property(nonatomic, copy, nullable) NSString *sslMode;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudAlloyDBAdmin_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudAlloyDBAdmin_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_Status_Details_Item : GTLRObject
@end


/**
 *  Configuration for availability of database instance
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration : GTLRObject

/**
 *  Availability type. Potential values: * `ZONAL`: The instance serves data
 *  from only one zone. Outages in that zone affect data accessibility. *
 *  `REGIONAL`: The instance can serve data from more than one zone in a region
 *  (it is highly available).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_AvailabilityTypeOther
 *        For rest of the other category (Value: "AVAILABILITY_TYPE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_AvailabilityTypeUnspecified
 *        Value "AVAILABILITY_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_MultiRegional
 *        Multi regional instance (Value: "MULTI_REGIONAL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_Regional
 *        Regional available instance. (Value: "REGIONAL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration_AvailabilityType_Zonal
 *        Zonal available instance. (Value: "ZONAL")
 */
@property(nonatomic, copy, nullable) NSString *availabilityType;

/**
 *  externalReplicaConfigured
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *externalReplicaConfigured;

/**
 *  promotableReplicaConfigured
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *promotableReplicaConfigured;

@end


/**
 *  Configuration for automatic backups
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupConfiguration : GTLRObject

/**
 *  Whether customer visible automated backups are enabled on the instance.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *automatedBackupEnabled;

/** Backup retention settings. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings *backupRetentionSettings;

/**
 *  Whether point-in-time recovery is enabled. This is optional field, if the
 *  database service does not have this feature or metadata is not available in
 *  control plane, this can be omitted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pointInTimeRecoveryEnabled;

@end


/**
 *  A backup run.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun : GTLRObject

/** The time the backup operation completed. REQUIRED */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Information about why the backup operation failed. This is only present if
 *  the run has the FAILED status. OPTIONAL
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainOperationError *error;

/** The time the backup operation started. REQUIRED */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The status of this run. REQUIRED
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_Failed
 *        The backup was unsuccessful. (Value: "FAILED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_StatusUnspecified
 *        Value "STATUS_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun_Status_Successful
 *        The backup was successful. (Value: "SUCCESSFUL")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Contains compliance information about a security standard indicating unmet
 *  recommendations.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainCompliance : GTLRObject

/**
 *  Industry-wide compliance standards or benchmarks, such as CIS, PCI, and
 *  OWASP.
 */
@property(nonatomic, copy, nullable) NSString *standard;

/** Version of the standard or benchmark, for example, 1.1 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  DatabaseResourceFeed is the top level proto to be used to ingest different
 *  database resource level events into Condor platform.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed : GTLRObject

/** Required. Timestamp when feed is generated. */
@property(nonatomic, strong, nullable) GTLRDateTime *feedTimestamp;

/**
 *  Required. Type feed to be ingested into condor
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_FeedtypeUnspecified
 *        Value "FEEDTYPE_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_ObservabilityData
 *        Database resource monitoring data (Value: "OBSERVABILITY_DATA")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_ResourceMetadata
 *        Database resource metadata feed from control plane (Value:
 *        "RESOURCE_METADATA")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_FeedType_SecurityFindingData
 *        Database resource security health signal data (Value:
 *        "SECURITY_FINDING_DATA")
 */
@property(nonatomic, copy, nullable) NSString *feedType;

/** More feed data would be added in subsequent CLs */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData *resourceHealthSignalData;

/**
 *  Primary key associated with the Resource. resource_id is available in
 *  individual feed level as well.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId *resourceId GTLR_DEPRECATED;

@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata *resourceMetadata;

@end


/**
 *  Common model for database resource health signal data.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData : GTLRObject

/** Any other additional metadata */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_AdditionalMetadata *additionalMetadata;

/**
 *  Industry standards associated with this signal; if this signal is an issue,
 *  that could be a violation of the associated industry standard(s). For
 *  example, AUTO_BACKUP_DISABLED signal is associated with CIS GCP 1.1, CIS GCP
 *  1.2, CIS GCP 1.3, NIST 800-53 and ISO-27001 compliance standards. If a
 *  database resource does not have automated backup enable, it will violate
 *  these following industry standards.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainCompliance *> *compliance;

/**
 *  Description associated with signal
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The last time at which the event described by this signal took
 *  place
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  The external-uri of the signal, using which more information about this
 *  signal can be obtained. In GCP, this will take user to SCC page to get more
 *  details about signals.
 */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  Required. The name of the signal, ex: PUBLIC_SQL_INSTANCE,
 *  SQL_LOG_ERROR_VERBOSITY etc.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Aws
 *        Amazon web service (Value: "AWS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Azure
 *        Azure web service (Value: "AZURE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Gcp
 *        Google cloud platform provider (Value: "GCP")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Onprem
 *        On-prem database resources. (Value: "ONPREM")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_ProviderOther
 *        For the rest of the other categories. Other refers to the rest of
 *        other database service providers, this could be smaller cloud
 *        provider. This needs to be provided when the provider is known, but it
 *        is not present in the existing set of enum values. (Value:
 *        "PROVIDER_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_ProviderUnspecified
 *        Value "PROVIDER_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_Provider_Selfmanaged
 *        Self-managed database provider. These are resources on a cloud
 *        platform, e.g., database resource installed in a GCE VM, but not a
 *        managed database service. (Value: "SELFMANAGED")
 */
@property(nonatomic, copy, nullable) NSString *provider;

/**
 *  Closest parent container of this resource. In GCP, 'container' refers to a
 *  Cloud Resource Manager project. It must be resource name of a Cloud Resource
 *  Manager project with the format of "provider//", such as "projects/123". For
 *  GCP provided resources, number should be project number.
 */
@property(nonatomic, copy, nullable) NSString *resourceContainer;

/**
 *  Required. Database resource name associated with the signal. Resource name
 *  to follow CAIS resource_name format as noted here go/condor-common-datamodel
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Required. The class of the signal, such as if it's a THREAT or
 *  VULNERABILITY.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_ClassUnspecified
 *        Unspecified signal class. (Value: "CLASS_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Error
 *        Describes an error that prevents some SCC functionality. (Value:
 *        "ERROR")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Misconfiguration
 *        Describes a potential weakness in cloud resource/asset configuration
 *        that increases risk. (Value: "MISCONFIGURATION")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Observation
 *        Describes a security observation that is for informational purposes.
 *        (Value: "OBSERVATION")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Threat
 *        Describes unwanted or malicious activity. (Value: "THREAT")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalClass_Vulnerability
 *        Describes a potential weakness in software that increases risk to
 *        Confidentiality & Integrity & Availability. (Value: "VULNERABILITY")
 */
@property(nonatomic, copy, nullable) NSString *signalClass;

/**
 *  Required. Unique identifier for the signal. This is an unique id which would
 *  be mainatined by partner to identify a signal.
 */
@property(nonatomic, copy, nullable) NSString *signalId;

/**
 *  Required. Type of signal, for example, `AVAILABLE_IN_MULTIPLE_ZONES`,
 *  `LOGGING_MOST_ERRORS`, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeConnectionAttemptsNotLogged
 *        Represents if the log_connections database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeConnectionMaxNotConfigured
 *        Represents if the user connections database flag for a Cloud SQL for
 *        SQL Server instance is configured. (Value:
 *        "SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeDatabaseNamesExposed
 *        Represents if the skip_show_database database flag for a Cloud SQL for
 *        MySQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_DATABASE_NAMES_EXPOSED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeDisconnectionsNotLogged
 *        Represents if the log_disconnections database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeEncryptionKeyNotCustomerManaged
 *        Represents if a SQL database instance is not encrypted with
 *        customer-managed encryption keys (CMEK). (Value:
 *        "SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfClientHostname
 *        Represents if the log_hostname database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfParserStatistics
 *        Represents if the log_parser_stats database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExcessiveLoggingOfPlannerStatistics
 *        Represents if the log_planner_stats database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedByOwnershipChaining
 *        Represents if the cross_db_ownership_chaining database flag for a
 *        Cloud SQL for SQL Server instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToExternalScripts
 *        Represents if he external scripts enabled database flag for a Cloud
 *        SQL for SQL Server instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToLocalDataLoads
 *        Represents if the local_infile database flag for a Cloud SQL for MySQL
 *        instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToPublicAccess
 *        Represents if a resource is exposed to public access. (Value:
 *        "SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeExposedToRemoteAccess
 *        Represents if the remote access database flag for a Cloud SQL for SQL
 *        Server instance is not set to off. (Value:
 *        "SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeGroupNotReplicatingAcrossRegions
 *        Represents if a group is replicating across regions. Checks for
 *        resources that are configured to have redundancy, and ongoing
 *        replication, across regions. (Value:
 *        "SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLastBackupFailed
 *        Represents if the last backup of a resource failed. (Value:
 *        "SIGNAL_TYPE_LAST_BACKUP_FAILED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLastBackupOld
 *        Represents if the last backup of a resource is older than some
 *        threshold value. (Value: "SIGNAL_TYPE_LAST_BACKUP_OLD")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingExcessiveStatementInfo
 *        Represents if the log_min_duration_statement database flag for a Cloud
 *        SQL for PostgreSQL instance is not set to -1. (Value:
 *        "SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingMostErrors
 *        Represents if the log_min_error_statement database flag for a Cloud
 *        SQL for PostgreSQL instance is not set appropriately. (Value:
 *        "SIGNAL_TYPE_LOGGING_MOST_ERRORS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingOnlyCriticalErrors
 *        Represents if the log_min_error_statement database flag for a Cloud
 *        SQL for PostgreSQL instance does not have an appropriate severity
 *        level. (Value: "SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLoggingQueryStatistics
 *        Represents if the log_statement_stats database flag for a Cloud SQL
 *        for PostgreSQL instance is not set to off. (Value:
 *        "SIGNAL_TYPE_LOGGING_QUERY_STATISTICS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeLogsNotOptimizedForTroubleshooting
 *        LINT.IfChange(scc_signals) Represents if log_checkpoints database flag
 *        for a Cloud SQL for PostgreSQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeMinimalErrorLogging
 *        Represents if the log_min_messages database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to warning or another recommended
 *        value. (Value: "SIGNAL_TYPE_MINIMAL_ERROR_LOGGING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoAutomatedBackupPolicy
 *        Represents if a resource has an automated backup policy. (Value:
 *        "SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoPromotableReplica
 *        Represents if a resource has a promotable replica. (Value:
 *        "SIGNAL_TYPE_NO_PROMOTABLE_REPLICA")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNoRootPassword
 *        Represents if a Cloud SQL database has a password configured for the
 *        root account or not. (Value: "SIGNAL_TYPE_NO_ROOT_PASSWORD")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotAvailableInMultipleRegions
 *        Represents if a resource is available in multiple regions. (Value:
 *        "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotAvailableInMultipleZones
 *        Represents if the resource is available in multiple zones or not.
 *        (Value: "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotLoggingOnlyDdlStatements
 *        Represents if the log_statement database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to DDL (all data definition
 *        statements). (Value: "SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotLoggingTemporaryFiles
 *        Represents if the log_temp_files database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to "0". (NOTE: 0 = ON) (Value:
 *        "SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeNotProtectedByAutomaticFailover
 *        Represents if a resource is protected by automatic failover. Checks
 *        for resources that are configured to have redundancy within a region
 *        that enables automatic failover. (Value:
 *        "SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypePublicIpEnabled
 *        Represents if public IP is enabled.
 *        LINT.ThenChange(//depot/google3/storage/databasecenter/ingestion/borgjob/message_adapter/health_signal_feed/health_signal_mapping.h)
 *        (Value: "SIGNAL_TYPE_PUBLIC_IP_ENABLED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryDurationsNotLogged
 *        Represents if the log_duration database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryLockWaitsNotLogged
 *        Represents if the log_lock_waits database flag for a Cloud SQL for
 *        PostgreSQL instance is not set to on. (Value:
 *        "SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeQueryStatisticsLogged
 *        Represents if the databaseFlags property of instance metadata for the
 *        log_executor_status field is set to on. (Value:
 *        "SIGNAL_TYPE_QUERY_STATISTICS_LOGGED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeSensitiveTraceInfoNotMasked
 *        Represents if the 3625 (trace flag) database flag for a Cloud SQL for
 *        SQL Server instance is not set to on. (Value:
 *        "SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeServerAuthenticationNotRequired
 *        Represents if The contained database authentication database flag for
 *        a Cloud SQL for SQL Server instance is not set to off. (Value:
 *        "SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeShortBackupRetention
 *        Represents if a resources has a short backup retention period. (Value:
 *        "SIGNAL_TYPE_SHORT_BACKUP_RETENTION")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUnencryptedConnections
 *        Represents if a resources requires all incoming connections to use SSL
 *        or not. (Value: "SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUnspecified
 *        Unspecified. (Value: "SIGNAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeUserOptionsConfigured
 *        Represents if the user options database flag for Cloud SQL SQL Server
 *        instance is configured or not. (Value:
 *        "SIGNAL_TYPE_USER_OPTIONS_CONFIGURED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeVerboseErrorLogging
 *        Represents if the log_error_verbosity database flag for a Cloud SQL
 *        for PostgreSQL instance is not set to default or stricter (default or
 *        terse). (Value: "SIGNAL_TYPE_VERBOSE_ERROR_LOGGING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation10
 *        Represents if a resource violates CIS GCP Foundation 1.0. (Value:
 *        "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation11
 *        Represents if a resource violates CIS GCP Foundation 1.1. (Value:
 *        "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation12
 *        Represents if a resource violates CIS GCP Foundation 1.2. (Value:
 *        "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation13
 *        Represents if a resource violates CIS GCP Foundation 1.3. (Value:
 *        "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesCisGcpFoundation20
 *        Represents if a resource violates CIS GCP Foundation 2.0. (Value:
 *        "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesIso27001
 *        Represents if a resource violates ISO-27001. (Value:
 *        "SIGNAL_TYPE_VIOLATES_ISO_27001")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesNist80053
 *        Represents if a resource violates NIST 800-53. (Value:
 *        "SIGNAL_TYPE_VIOLATES_NIST_800_53")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeViolatesPciDssV321
 *        Represents if a resource violates PCI-DSS v3.2.1. (Value:
 *        "SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_SignalType_SignalTypeWeakRootPassword
 *        Represents if a Cloud SQL database has a weak password configured for
 *        the root account. (Value: "SIGNAL_TYPE_WEAK_ROOT_PASSWORD")
 */
@property(nonatomic, copy, nullable) NSString *signalType;

/**
 *  state
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Active
 *        The signal requires attention and has not been addressed yet. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Muted
 *        The signal has been muted. (Value: "MUTED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_Resolved
 *        The signal has been fixed, triaged as a non-issue or otherwise
 *        addressed and is no longer active. (Value: "RESOLVED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Any other additional metadata
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_AdditionalMetadata : GTLRObject
@end


/**
 *  DatabaseResourceId will serve as primary key for any resource ingestion
 *  event.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId : GTLRObject

/**
 *  Required. Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Aws
 *        Amazon web service (Value: "AWS")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Azure
 *        Azure web service (Value: "AZURE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Gcp
 *        Google cloud platform provider (Value: "GCP")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Onprem
 *        On-prem database resources. (Value: "ONPREM")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_ProviderOther
 *        For the rest of the other categories. Other refers to the rest of
 *        other database service providers, this could be smaller cloud
 *        provider. This needs to be provided when the provider is known, but it
 *        is not present in the existing set of enum values. (Value:
 *        "PROVIDER_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_ProviderUnspecified
 *        Value "PROVIDER_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId_Provider_Selfmanaged
 *        Self-managed database provider. These are resources on a cloud
 *        platform, e.g., database resource installed in a GCE VM, but not a
 *        managed database service. (Value: "SELFMANAGED")
 */
@property(nonatomic, copy, nullable) NSString *provider;

/** Optional. Needs to be used only when the provider is PROVIDER_OTHER. */
@property(nonatomic, copy, nullable) NSString *providerDescription;

/**
 *  Required. The type of resource this ID is identifying. Ex
 *  alloydb.googleapis.com/Cluster, alloydb.googleapis.com/Instance,
 *  spanner.googleapis.com/Instance REQUIRED Please refer
 *  go/condor-common-datamodel
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Required. A service-local token that distinguishes this resource from other
 *  resources within the same service.
 */
@property(nonatomic, copy, nullable) NSString *uniqueId;

@end


/**
 *  Common model for database resource instance metadata.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata : GTLRObject

/** Availability configuration for this instance */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration *availabilityConfiguration;

/** Backup configuration for this instance */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupConfiguration *backupConfiguration;

/** Latest backup run information for this instance */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainBackupRun *backupRun;

/**
 *  The creation time of the resource, i.e. the time when resource is created
 *  and recorded in partner service.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Current state of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Deleted
 *        Instance is deleted. (Value: "DELETED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Healthy
 *        The instance is running. (Value: "HEALTHY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_StateOther
 *        For rest of the other category (Value: "STATE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_StateUnspecified
 *        Value "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Suspended
 *        When instance is suspended (Value: "SUSPENDED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CurrentState_Unhealthy
 *        Instance being created, updated, deleted or under maintenance (Value:
 *        "UNHEALTHY")
 */
@property(nonatomic, copy, nullable) NSString *currentState;

/** Any custom metadata associated with the resource (a JSON field) */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CustomMetadata *customMetadata;

/**
 *  The state that the instance is expected to be in. For example, an instance
 *  state can transition to UNHEALTHY due to wrong patch update, while the
 *  expected state will remain at the HEALTHY.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Deleted
 *        Instance is deleted. (Value: "DELETED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Healthy
 *        The instance is running. (Value: "HEALTHY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_StateOther
 *        For rest of the other category (Value: "STATE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_StateUnspecified
 *        Value "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Suspended
 *        When instance is suspended (Value: "SUSPENDED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_ExpectedState_Unhealthy
 *        Instance being created, updated, deleted or under maintenance (Value:
 *        "UNHEALTHY")
 */
@property(nonatomic, copy, nullable) NSString *expectedState;

/**
 *  Required. Unique identifier for a Database resource
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId *identifier;

/**
 *  The type of the instance. Specified at creation time.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_InstanceTypeUnspecified
 *        Value "INSTANCE_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Other
 *        For rest of the other categories. (Value: "OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Primary
 *        A regular primary database instance. (Value: "PRIMARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_ReadReplica
 *        An instance acting as a read-replica. (Value: "READ_REPLICA")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_Secondary
 *        A cluster or an instance acting as a secondary. (Value: "SECONDARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeOther
 *        For rest of the other categories. (Value: "SUB_RESOURCE_TYPE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypePrimary
 *        A regular primary database instance. (Value:
 *        "SUB_RESOURCE_TYPE_PRIMARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeReadReplica
 *        An instance acting as a read-replica. (Value:
 *        "SUB_RESOURCE_TYPE_READ_REPLICA")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeSecondary
 *        A cluster or an instance acting as a secondary. (Value:
 *        "SUB_RESOURCE_TYPE_SECONDARY")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_InstanceType_SubResourceTypeUnspecified
 *        For rest of the other categories. (Value:
 *        "SUB_RESOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *instanceType;

/** The resource location. REQUIRED */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Identifier for this resource's immediate parent/primary resource if the
 *  current resource is a replica or derived form of another Database resource.
 *  Else it would be NULL. REQUIRED if the immediate parent exists when first
 *  time resource is getting ingested
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceId *primaryResourceId;

/** The product this resource represents. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct *product;

/**
 *  Closest parent Cloud Resource Manager container of this resource. It must be
 *  resource name of a Cloud Resource Manager project with the format of "/",
 *  such as "projects/123". For GCP provided resources, number should be project
 *  number.
 */
@property(nonatomic, copy, nullable) NSString *resourceContainer;

/**
 *  Required. Different from DatabaseResourceId.unique_id, a resource name can
 *  be reused over time. That is, after a resource named "ABC" is deleted, the
 *  name "ABC" can be used to to create a new resource within the same source.
 *  Resource name to follow CAIS resource_name format as noted here
 *  go/condor-common-datamodel
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  The time at which the resource was updated and recorded at partner service.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updationTime;

/**
 *  User-provided labels, represented as a dictionary where each label is a
 *  single key value pair.
 */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_UserLabels *userLabels;

@end


/**
 *  Any custom metadata associated with the resource (a JSON field)
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_CustomMetadata : GTLRObject
@end


/**
 *  User-provided labels, represented as a dictionary where each label is a
 *  single key value pair.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_UserLabels : GTLRObject
@end


/**
 *  An error that occurred during a backup creation operation.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainOperationError : GTLRObject

/** Identifies the specific error that occurred. REQUIRED */
@property(nonatomic, copy, nullable) NSString *code;

/** Additional information about the error encountered. REQUIRED */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings : GTLRObject

/**
 *  quantityBasedRetention
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityBasedRetention;

/**
 *  The unit that 'retained_backups' represents.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_Count
 *        Retention will be by count, eg. "retain the most recent 7 backups".
 *        (Value: "COUNT")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_RetentionUnitOther
 *        For rest of the other category (Value: "RETENTION_UNIT_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_RetentionUnitUnspecified
 *        Backup retention unit is unspecified, will be treated as COUNT.
 *        (Value: "RETENTION_UNIT_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterPartnerapiV1mainRetentionSettings_RetentionUnit_Time
 *        Retention will be by Time, eg. "retain the last 7 days backups".
 *        (Value: "TIME")
 */
@property(nonatomic, copy, nullable) NSString *retentionUnit;

@property(nonatomic, strong, nullable) GTLRDuration *timeBasedRetention;

@end


/**
 *  Product specification for Condor resources.
 */
@interface GTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct : GTLRObject

/**
 *  The specific engine that the underlying database is running.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineCloudSpannerWithPostgresDialect
 *        Cloud Spanner with Postgres dialect. (Value:
 *        "ENGINE_CLOUD_SPANNER_WITH_POSTGRES_DIALECT")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineMysql
 *        MySQL binary running as an engine in the database instance. (Value:
 *        "ENGINE_MYSQL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineNative
 *        Native database binary running as engine in instance. (Value:
 *        "ENGINE_NATIVE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineOther
 *        Other refers to rest of other database engine. This is to be when
 *        engine is known, but it is not present in this enum. (Value:
 *        "ENGINE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EnginePostgres
 *        Postgres binary running as engine in database instance. (Value:
 *        "ENGINE_POSTGRES")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineSqlServer
 *        SQLServer binary running as engine in database instance. (Value:
 *        "ENGINE_SQL_SERVER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_EngineUnspecified
 *        UNSPECIFIED means engine type is not known or available. (Value:
 *        "ENGINE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Mysql
 *        MySQL binary running as engine in database instance. (Value: "MYSQL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Native
 *        Native database binary running as engine in instance. (Value:
 *        "NATIVE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Postgres
 *        Postgres binary running as engine in database instance. (Value:
 *        "POSTGRES")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_Spangres
 *        Cloud Spanner with Postgres dialect. (Value: "SPANGRES")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Engine_SqlServer
 *        SQLServer binary running as engine in database instance. (Value:
 *        "SQL_SERVER")
 */
@property(nonatomic, copy, nullable) NSString *engine;

/**
 *  Type of specific database product. It could be CloudSQL, AlloyDB etc..
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_Alloydb
 *        AlloyDB product area in GCP (Value: "ALLOYDB")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_CloudSql
 *        Cloud SQL product area in GCP (Value: "CLOUD_SQL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_OnPrem
 *        On premises database product. (Value: "ON_PREM")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeAlloydb
 *        AlloyDB product area in GCP (Value: "PRODUCT_TYPE_ALLOYDB")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeCloudSql
 *        Cloud SQL product area in GCP (Value: "PRODUCT_TYPE_CLOUD_SQL")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeOnPrem
 *        On premises database product. (Value: "PRODUCT_TYPE_ON_PREM")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeOther
 *        Other refers to rest of other product type. This is to be when product
 *        type is known, but it is not present in this enum. (Value:
 *        "PRODUCT_TYPE_OTHER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeSpanner
 *        Spanner product area in GCP (Value: "PRODUCT_TYPE_SPANNER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_ProductTypeUnspecified
 *        UNSPECIFIED means product type is not known or available. (Value:
 *        "PRODUCT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudAlloyDBAdmin_StorageDatabasecenterProtoCommonProduct_Type_Spanner
 *        Spanner product area in GCP (Value: "SPANNER")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Version of the underlying database engine. Example values: For MySQL, it
 *  could be "8.0", "5.7" etc.. For Postgres, it could be "14", "15" etc..
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Restrictions on STRING type values
 */
@interface GTLRCloudAlloyDBAdmin_StringRestrictions : GTLRObject

/**
 *  The list of allowed values, if bounded. This field will be empty if there is
 *  a unbounded number of allowed values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedValues;

@end


/**
 *  SupportedDatabaseFlag gives general information about a database flag, like
 *  type and allowed values. This is a static value that is defined on the
 *  server side, and it cannot be modified by callers. To set the Database flags
 *  on a particular Instance, a caller should modify the Instance.database_flags
 *  field.
 */
@interface GTLRCloudAlloyDBAdmin_SupportedDatabaseFlag : GTLRObject

/**
 *  Whether the database flag accepts multiple values. If true, a
 *  comma-separated list of stringified values may be specified.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acceptsMultipleValues;

/**
 *  The name of the database flag, e.g. "max_allowed_packets". The is a possibly
 *  key for the Instance.database_flags map field.
 */
@property(nonatomic, copy, nullable) NSString *flagName;

/** Restriction on INTEGER type value. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_IntegerRestrictions *integerRestrictions;

/**
 *  The name of the flag resource, following Google Cloud conventions, e.g.: *
 *  projects/{project}/locations/{location}/flags/{flag} This field currently
 *  has no semantic meaning.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Whether setting or updating this flag on an Instance requires a database
 *  restart. If a flag that requires database restart is set, the backend will
 *  automatically restart the database (making sure to satisfy any availability
 *  SLO's).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requiresDbRestart;

/** Restriction on STRING type value. */
@property(nonatomic, strong, nullable) GTLRCloudAlloyDBAdmin_StringRestrictions *stringRestrictions;

/** Major database engine versions for which this flag is supported. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedDbVersions;

/**
 *  valueType
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_Float Float
 *        type flag. (Value: "FLOAT")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_Integer
 *        Integer type flag. (Value: "INTEGER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_None
 *        Denotes that the flag does not accept any values. (Value: "NONE")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_String
 *        String type flag. (Value: "STRING")
 *    @arg @c kGTLRCloudAlloyDBAdmin_SupportedDatabaseFlag_ValueType_ValueTypeUnspecified
 *        This is an unknown flag type. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  A time based retention policy specifies that all backups within a certain
 *  time period should be retained.
 */
@interface GTLRCloudAlloyDBAdmin_TimeBasedRetention : GTLRObject

/** The retention period. */
@property(nonatomic, strong, nullable) GTLRDuration *retentionPeriod;

@end


/**
 *  Message describing User object.
 */
@interface GTLRCloudAlloyDBAdmin_User : GTLRObject

/**
 *  Optional. List of database roles this user has. The database role strings
 *  are subject to the PostgreSQL naming conventions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *databaseRoles;

/**
 *  Output only. Name of the resource in the form of
 *  projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Input only. Password for the user. */
@property(nonatomic, copy, nullable) NSString *password;

/**
 *  Optional. Type of this user.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudAlloyDBAdmin_User_UserType_AlloydbBuiltIn The default
 *        user type that authenticates via password-based authentication.
 *        (Value: "ALLOYDB_BUILT_IN")
 *    @arg @c kGTLRCloudAlloyDBAdmin_User_UserType_AlloydbIamUser Database user
 *        that can authenticate via IAM-Based authentication. (Value:
 *        "ALLOYDB_IAM_USER")
 *    @arg @c kGTLRCloudAlloyDBAdmin_User_UserType_UserTypeUnspecified
 *        Unspecified user type. (Value: "USER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *userType;

@end


/**
 *  The username/password for a database user. Used for specifying initial users
 *  at cluster creation time.
 */
@interface GTLRCloudAlloyDBAdmin_UserPassword : GTLRObject

/** The initial password for the user. */
@property(nonatomic, copy, nullable) NSString *password;

/** The database username. */
@property(nonatomic, copy, nullable) NSString *user;

@end


/**
 *  A weekly schedule starts a backup at prescribed start times within a day,
 *  for the specified days of the week. The weekly schedule message is flexible
 *  and can be used to create many types of schedules. For example, to have a
 *  daily backup that starts at 22:00, configure the `start_times` field to have
 *  one element "22:00" and the `days_of_week` field to have all seven days of
 *  the week.
 */
@interface GTLRCloudAlloyDBAdmin_WeeklySchedule : GTLRObject

/**
 *  The days of the week to perform a backup. If this field is left empty, the
 *  default of every day of the week is used.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *daysOfWeek;

/**
 *  The times during the day to start a backup. The start times are assumed to
 *  be in UTC and to be an exact hour (e.g., 04:00:00). If no start times are
 *  provided, a single fixed start time is chosen arbitrarily.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudAlloyDBAdmin_GoogleTypeTimeOfDay *> *startTimes;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
