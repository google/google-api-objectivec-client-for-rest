// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Vertex AI API (aiplatform/v1)
// Description:
//   Train high-quality custom machine learning models with minimal machine
//   learning expertise and effort.
// Documentation:
//   https://cloud.google.com/vertex-ai/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRAiplatformObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Includes all fields except for direct notebook inputs.
 *
 *  Value: "NOTEBOOK_EXECUTION_JOB_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewNotebookExecutionJobViewBasic;
/**
 *  Includes all fields.
 *
 *  Value: "NOTEBOOK_EXECUTION_JOB_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewNotebookExecutionJobViewFull;
/**
 *  When unspecified, the API defaults to the BASIC view.
 *
 *  Value: "NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewNotebookExecutionJobViewUnspecified;
/**
 *  Include: VersionId, ModelVersionExternalName, and SupportedActions.
 *
 *  Value: "PUBLISHER_MODEL_VERSION_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewPublisherModelVersionViewBasic;
/**
 *  Include basic metadata about the publisher model, but not the full contents.
 *
 *  Value: "PUBLISHER_MODEL_VIEW_BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewPublisherModelViewBasic;
/**
 *  Include everything.
 *
 *  Value: "PUBLISHER_MODEL_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewPublisherModelViewFull;
/**
 *  The default / unset value. The API will default to the BASIC view.
 *
 *  Value: "PUBLISHER_MODEL_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatformViewPublisherModelViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Aiplatform query classes.
 */
@interface GTLRAiplatformQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a Dataset.
 *
 *  Method: aiplatform.datasets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the Dataset in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset to
 *    include in the query.
 *
 *  @return GTLRAiplatformQuery_DatasetsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object;

@end

/**
 *  Create a version from a Dataset.
 *
 *  Method: aiplatform.datasets.datasetVersions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsCreate : GTLRAiplatformQuery

/**
 *  Required. The name of the Dataset resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Create a version from a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion to
 *    include in the query.
 *  @param parent Required. The name of the Dataset resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Dataset version.
 *
 *  Method: aiplatform.datasets.datasetVersions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset version to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Dataset version.
 *
 *  @param name Required. The resource name of the Dataset version to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Dataset version.
 *
 *  Method: aiplatform.datasets.datasetVersions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset version to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion.
 *
 *  Gets a Dataset version.
 *
 *  @param name Required. The resource name of the Dataset version to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DatasetVersions in a Dataset.
 *
 *  Method: aiplatform.datasets.datasetVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsList : GTLRAiplatformQuery

/** Optional. The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. A comma-separated list of fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Dataset to list DatasetVersions from.
 *  Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetVersionsResponse.
 *
 *  Lists DatasetVersions in a Dataset.
 *
 *  @param parent Required. The resource name of the Dataset to list
 *    DatasetVersions from. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a DatasetVersion.
 *
 *  Method: aiplatform.datasets.datasetVersions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsPatch : GTLRAiplatformQuery

/** Output only. Identifier. The resource name of the DatasetVersion. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask. Updatable fields: *
 *  `display_name`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion.
 *
 *  Updates a DatasetVersion.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion to
 *    include in the query.
 *  @param name Output only. Identifier. The resource name of the
 *    DatasetVersion.
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                           name:(NSString *)name;

@end

/**
 *  Restores a dataset version.
 *
 *  Method: aiplatform.datasets.datasetVersions.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDatasetVersionsRestore : GTLRAiplatformQuery

/**
 *  Required. The name of the DatasetVersion resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Restores a dataset version.
 *
 *  @param name Required. The name of the DatasetVersion resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDatasetVersionsRestore
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a Dataset.
 *
 *  Method: aiplatform.datasets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Dataset.
 *
 *  @param name Required. The resource name of the Dataset to delete. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_DatasetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Dataset.
 *
 *  Method: aiplatform.datasets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsGet : GTLRAiplatformQuery

/** Required. The name of the Dataset resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset.
 *
 *  Gets a Dataset.
 *
 *  @param name Required. The name of the Dataset resource.
 *
 *  @return GTLRAiplatformQuery_DatasetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Datasets in a Location.
 *
 *  Method: aiplatform.datasets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsList : GTLRAiplatformQuery

/**
 *  An expression for filtering the results of the request. For field names both
 *  snake_case and camelCase are supported. * `display_name`: supports = and !=
 *  * `metadata_schema_uri`: supports = and != * `labels` supports general map
 *  functions that is: * `labels.key=value` - key:value equality * `labels.key:*
 *  or labels:key - key existence * A key including a space must be quoted.
 *  `labels."a key"`. Some examples: * `displayName="myDisplayName"` *
 *  `labels.myKey="myValue"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `display_name`
 *  * `create_time` * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Dataset's parent resource. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetsResponse.
 *
 *  Lists Datasets in a Location.
 *
 *  @return GTLRAiplatformQuery_DatasetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates a Dataset.
 *
 *  Method: aiplatform.datasets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_DatasetsPatch : GTLRAiplatformQuery

/** Output only. Identifier. The resource name of the Dataset. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask. Updatable fields: *
 *  `display_name` * `description` * `labels`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset.
 *
 *  Updates a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset to
 *    include in the query.
 *  @param name Output only. Identifier. The resource name of the Dataset.
 *
 *  @return GTLRAiplatformQuery_DatasetsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                           name:(NSString *)name;

@end

/**
 *  Return a list of tokens based on the input text.
 *
 *  Method: aiplatform.endpoints.computeTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_EndpointsComputeTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to get lists of tokens and
 *  token ids.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse.
 *
 *  Return a list of tokens based on the input text.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint requested to get lists of
 *    tokens and token ids.
 *
 *  @return GTLRAiplatformQuery_EndpointsComputeTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a token counting.
 *
 *  Method: aiplatform.endpoints.countTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_EndpointsCountTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to perform token counting.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse.
 *
 *  Perform a token counting.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest to include in the
 *    query.
 *  @param endpoint Required. The name of the Endpoint requested to perform
 *    token counting. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_EndpointsCountTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs.
 *
 *  Method: aiplatform.endpoints.generateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_EndpointsGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_EndpointsGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Generate content with multimodal inputs with streaming support.
 *
 *  Method: aiplatform.endpoints.streamGenerateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_EndpointsStreamGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs with streaming support.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_EndpointsStreamGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Cancels a BatchPredictionJob. Starts asynchronous cancellation on the
 *  BatchPredictionJob. The server makes the best effort to cancel the job, but
 *  success is not guaranteed. Clients can use JobService.GetBatchPredictionJob
 *  or other methods to check whether the cancellation succeeded or whether the
 *  job completed despite cancellation. On a successful cancellation, the
 *  BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is
 *  set to `CANCELLED`. Any files already outputted by the job are not deleted.
 *
 *  Method: aiplatform.projects.locations.batchPredictionJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the BatchPredictionJob to cancel. Format:
 *  `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a BatchPredictionJob. Starts asynchronous cancellation on the
 *  BatchPredictionJob. The server makes the best effort to cancel the job, but
 *  success is not guaranteed. Clients can use JobService.GetBatchPredictionJob
 *  or other methods to check whether the cancellation succeeded or whether the
 *  job completed despite cancellation. On a successful cancellation, the
 *  BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is
 *  set to `CANCELLED`. Any files already outputted by the job are not deleted.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelBatchPredictionJobRequest to
 *    include in the query.
 *  @param name Required. The name of the BatchPredictionJob to cancel. Format:
 *    `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelBatchPredictionJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a BatchPredictionJob. A BatchPredictionJob once created will right
 *  away be attempted to start.
 *
 *  Method: aiplatform.projects.locations.batchPredictionJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the BatchPredictionJob
 *  in. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob.
 *
 *  Creates a BatchPredictionJob. A BatchPredictionJob once created will right
 *  away be attempted to start.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob to include in the
 *    query.
 *  @param parent Required. The resource name of the Location to create the
 *    BatchPredictionJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a BatchPredictionJob. Can only be called on jobs that already
 *  finished.
 *
 *  Method: aiplatform.projects.locations.batchPredictionJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the BatchPredictionJob resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a BatchPredictionJob. Can only be called on jobs that already
 *  finished.
 *
 *  @param name Required. The name of the BatchPredictionJob resource to be
 *    deleted. Format:
 *    `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a BatchPredictionJob
 *
 *  Method: aiplatform.projects.locations.batchPredictionJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the BatchPredictionJob resource. Format:
 *  `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob.
 *
 *  Gets a BatchPredictionJob
 *
 *  @param name Required. The name of the BatchPredictionJob resource. Format:
 *    `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists BatchPredictionJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.batchPredictionJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`,
 *  `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time`
 *  supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in
 *  RFC 3339 format. * `labels` supports general map functions that is:
 *  `labels.key=value` - key:value equality `labels.key:* - key existence Some
 *  examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND
 *  display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR
 *  display_name="my_job"` * `NOT display_name="my_job"` *
 *  `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` *
 *  `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListBatchPredictionJobsResponse.next_page_token of the previous
 *  JobService.ListBatchPredictionJobs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the BatchPredictionJobs
 *  from. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListBatchPredictionJobsResponse.
 *
 *  Lists BatchPredictionJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    BatchPredictionJobs from. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The
 *  server makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use JobService.GetCustomJob or other methods to check whether
 *  the cancellation succeeded or whether the job completed despite
 *  cancellation. On successful cancellation, the CustomJob is not deleted;
 *  instead it becomes a job with a CustomJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  CustomJob.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.customJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the CustomJob to cancel. Format:
 *  `projects/{project}/locations/{location}/customJobs/{custom_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The
 *  server makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use JobService.GetCustomJob or other methods to check whether
 *  the cancellation succeeded or whether the job completed despite
 *  cancellation. On successful cancellation, the CustomJob is not deleted;
 *  instead it becomes a job with a CustomJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  CustomJob.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelCustomJobRequest to include in
 *    the query.
 *  @param name Required. The name of the CustomJob to cancel. Format:
 *    `projects/{project}/locations/{location}/customJobs/{custom_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelCustomJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a CustomJob. A created CustomJob right away will be attempted to be
 *  run.
 *
 *  Method: aiplatform.projects.locations.customJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the CustomJob in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CustomJob.
 *
 *  Creates a CustomJob. A created CustomJob right away will be attempted to be
 *  run.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1CustomJob to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    CustomJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CustomJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a CustomJob.
 *
 *  Method: aiplatform.projects.locations.customJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the CustomJob resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/customJobs/{custom_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a CustomJob.
 *
 *  @param name Required. The name of the CustomJob resource to be deleted.
 *    Format: `projects/{project}/locations/{location}/customJobs/{custom_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a CustomJob.
 *
 *  Method: aiplatform.projects.locations.customJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the CustomJob resource. Format:
 *  `projects/{project}/locations/{location}/customJobs/{custom_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CustomJob.
 *
 *  Gets a CustomJob.
 *
 *  @param name Required. The name of the CustomJob resource. Format:
 *    `projects/{project}/locations/{location}/customJobs/{custom_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CustomJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.customJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
 *  `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT
 *  display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `labels.keyA=valueA` * `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListCustomJobsResponse.next_page_token of the previous
 *  JobService.ListCustomJobs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the CustomJobs from.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListCustomJobsResponse.
 *
 *  Lists CustomJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    CustomJobs from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.customJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.customJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.customJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.customJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.customJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the DataLabelingJob. Format:
 *  `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelDataLabelingJobRequest to
 *    include in the query.
 *  @param name Required. The name of the DataLabelingJob. Format:
 *    `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelDataLabelingJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a DataLabelingJob.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The parent of the DataLabelingJob. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob.
 *
 *  Creates a DataLabelingJob.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob
 *    to include in the query.
 *  @param parent Required. The parent of the DataLabelingJob. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a DataLabelingJob.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the DataLabelingJob to be deleted. Format:
 *  `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a DataLabelingJob.
 *
 *  @param name Required. The name of the DataLabelingJob to be deleted. Format:
 *    `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a DataLabelingJob.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the DataLabelingJob. Format:
 *  `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob.
 *
 *  Gets a DataLabelingJob.
 *
 *  @param name Required. The name of the DataLabelingJob. Format:
 *    `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DataLabelingJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
 *  `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT
 *  display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `labels.keyA=valueA` * `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order by
 *  default. Use `desc` after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the DataLabelingJob. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read. FieldMask represents a set of symbolic
 *  field paths. For example, the mask can be `paths: "name"`. The "name" here
 *  is a field in DataLabelingJob. If this field is not set, all fields of the
 *  DataLabelingJob are returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListDataLabelingJobsResponse.
 *
 *  Lists DataLabelingJobs in a Location.
 *
 *  @param parent Required. The parent of the DataLabelingJob. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.dataLabelingJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an AnnotationSpec.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the AnnotationSpec resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1AnnotationSpec.
 *
 *  Gets an AnnotationSpec.
 *
 *  @param name Required. The name of the AnnotationSpec resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.datasets.annotationSpecs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the Dataset in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    Dataset in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists Annotations belongs to a dataitem This RPC is only available in
 *  InternalDatasetService. It is only used for exporting conversation data to
 *  CCAI Insights.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the DataItem to list Annotations from.
 *  Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListAnnotationsResponse.
 *
 *  Lists Annotations belongs to a dataitem This RPC is only available in
 *  InternalDatasetService. It is only used for exporting conversation data to
 *  CCAI Insights.
 *
 *  @param parent Required. The resource name of the DataItem to list
 *    Annotations from. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.annotations.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DataItems in a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Dataset to list DataItems from. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListDataItemsResponse.
 *
 *  Lists DataItems in a Dataset.
 *
 *  @param parent Required. The resource name of the Dataset to list DataItems
 *    from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.datasets.dataItems.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create a version from a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsCreate : GTLRAiplatformQuery

/**
 *  Required. The name of the Dataset resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Create a version from a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion to
 *    include in the query.
 *  @param parent Required. The name of the Dataset resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Dataset version.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset version to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Dataset version.
 *
 *  @param name Required. The resource name of the Dataset version to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Dataset version.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset version to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion.
 *
 *  Gets a Dataset version.
 *
 *  @param name Required. The resource name of the Dataset version to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DatasetVersions in a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsList : GTLRAiplatformQuery

/** Optional. The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. A comma-separated list of fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Dataset to list DatasetVersions from.
 *  Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetVersionsResponse.
 *
 *  Lists DatasetVersions in a Dataset.
 *
 *  @param parent Required. The resource name of the Dataset to list
 *    DatasetVersions from. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a DatasetVersion.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsPatch : GTLRAiplatformQuery

/** Output only. Identifier. The resource name of the DatasetVersion. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask. Updatable fields: *
 *  `display_name`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion.
 *
 *  Updates a DatasetVersion.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion to
 *    include in the query.
 *  @param name Output only. Identifier. The resource name of the
 *    DatasetVersion.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                           name:(NSString *)name;

@end

/**
 *  Restores a dataset version.
 *
 *  Method: aiplatform.projects.locations.datasets.datasetVersions.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsRestore : GTLRAiplatformQuery

/**
 *  Required. The name of the DatasetVersion resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Restores a dataset version.
 *
 *  @param name Required. The name of the DatasetVersion resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsRestore
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Dataset to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Dataset.
 *
 *  @param name Required. The resource name of the Dataset to delete. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports data from a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsExport : GTLRAiplatformQuery

/**
 *  Required. The name of the Dataset resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Exports data from a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1ExportDataRequest
 *    to include in the query.
 *  @param name Required. The name of the Dataset resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsExport
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportDataRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsGet : GTLRAiplatformQuery

/** Required. The name of the Dataset resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset.
 *
 *  Gets a Dataset.
 *
 *  @param name Required. The name of the Dataset resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports data into a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsImport : GTLRAiplatformQuery

/**
 *  Required. The name of the Dataset resource. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Imports data into a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1ImportDataRequest
 *    to include in the query.
 *  @param name Required. The name of the Dataset resource. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsImport
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportDataRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists Datasets in a Location.
 *
 *  Method: aiplatform.projects.locations.datasets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsList : GTLRAiplatformQuery

/**
 *  An expression for filtering the results of the request. For field names both
 *  snake_case and camelCase are supported. * `display_name`: supports = and !=
 *  * `metadata_schema_uri`: supports = and != * `labels` supports general map
 *  functions that is: * `labels.key=value` - key:value equality * `labels.key:*
 *  or labels:key - key existence * A key including a space must be quoted.
 *  `labels."a key"`. Some examples: * `displayName="myDisplayName"` *
 *  `labels.myKey="myValue"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `display_name`
 *  * `create_time` * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Dataset's parent resource. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetsResponse.
 *
 *  Lists Datasets in a Location.
 *
 *  @param parent Required. The name of the Dataset's parent resource. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.datasets.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.datasets.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.datasets.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsPatch : GTLRAiplatformQuery

/** Output only. Identifier. The resource name of the Dataset. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask. Updatable fields: *
 *  `display_name` * `description` * `labels`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset.
 *
 *  Updates a Dataset.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Dataset to
 *    include in the query.
 *  @param name Output only. Identifier. The resource name of the Dataset.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a SavedQuery.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the SavedQuery to delete. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a SavedQuery.
 *
 *  @param name Required. The resource name of the SavedQuery to delete. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists SavedQueries in a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Dataset to list SavedQueries from.
 *  Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListSavedQueriesResponse.
 *
 *  Lists SavedQueries in a Dataset.
 *
 *  @param parent Required. The resource name of the Dataset to list
 *    SavedQueries from. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.datasets.savedQueries.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Searches DataItems in a Dataset.
 *
 *  Method: aiplatform.projects.locations.datasets.searchDataItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDatasetsSearchDataItems : GTLRAiplatformQuery

/**
 *  An expression that specifies what Annotations will be returned per DataItem.
 *  Annotations satisfied either of the conditions will be returned. *
 *  `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved
 *  query id that annotations should belong to.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *annotationFilters;

/**
 *  An expression for filtering the Annotations that will be returned per
 *  DataItem. * `annotation_spec_id` - for = or !=.
 */
@property(nonatomic, copy, nullable) NSString *annotationsFilter GTLR_DEPRECATED;

/**
 *  If set, only up to this many of Annotations will be returned per
 *  DataItemView. The maximum value is 1000. If not set, the maximum value will
 *  be used.
 */
@property(nonatomic, assign) NSInteger annotationsLimit;

/**
 *  An expression for filtering the DataItem that will be returned. *
 *  `data_item_id` - for = or !=. * `labeled` - for = or !=. *
 *  `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at
 *  least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the
 *  context of SavedQuery or DataLabelingJob. For example: * `data_item=1` *
 *  `has_annotation(5)`
 */
@property(nonatomic, copy, nullable) NSString *dataItemFilter;

/**
 *  The resource name of a DataLabelingJob. Format:
 *  `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 *  If this field is set, all of the search will be done in the context of this
 *  DataLabelingJob.
 */
@property(nonatomic, copy, nullable) NSString *dataLabelingJob;

/**
 *  Required. The resource name of the Dataset from which to search DataItems.
 *  Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Mask specifying which fields of DataItemView to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderBy GTLR_DEPRECATED;

/**
 *  A comma-separated list of annotation fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending. Must also specify
 *  saved_query.
 */
@property(nonatomic, copy, nullable) NSString *orderByAnnotationOrderBy;

/**
 *  Required. Saved query of the Annotation. Only Annotations belong to this
 *  saved query will be considered for ordering.
 */
@property(nonatomic, copy, nullable) NSString *orderByAnnotationSavedQuery;

/**
 *  A comma-separated list of data item fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending.
 */
@property(nonatomic, copy, nullable) NSString *orderByDataItem;

/**
 *  Requested page size. Server may return fewer results than requested. Default
 *  and maximum page size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results for the server to return Typically
 *  obtained via SearchDataItemsResponse.next_page_token of the previous
 *  DatasetService.SearchDataItems call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The resource name of a SavedQuery(annotation set in UI). Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
 *  All of the search will be done in the context of this SavedQuery.
 */
@property(nonatomic, copy, nullable) NSString *savedQuery GTLR_DEPRECATED;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1SearchDataItemsResponse.
 *
 *  Searches DataItems in a Dataset.
 *
 *  @param dataset Required. The resource name of the Dataset from which to
 *    search DataItems. Format:
 *    `projects/{project}/locations/{location}/datasets/{dataset}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDatasetsSearchDataItems
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithDataset:(NSString *)dataset;

@end

/**
 *  Create a DeploymentResourcePool.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsCreate : GTLRAiplatformQuery

/**
 *  Required. The parent location resource where this DeploymentResourcePool
 *  will be created. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Create a DeploymentResourcePool.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest
 *    to include in the query.
 *  @param parent Required. The parent location resource where this
 *    DeploymentResourcePool will be created. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a DeploymentResourcePool.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the DeploymentResourcePool to delete. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Delete a DeploymentResourcePool.
 *
 *  @param name Required. The name of the DeploymentResourcePool to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a DeploymentResourcePool.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the DeploymentResourcePool to retrieve. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool.
 *
 *  Get a DeploymentResourcePool.
 *
 *  @param name Required. The name of the DeploymentResourcePool to retrieve.
 *    Format:
 *    `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List DeploymentResourcePools in a location.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsList : GTLRAiplatformQuery

/**
 *  The maximum number of DeploymentResourcePools to return. The service may
 *  return fewer than this value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListDeploymentResourcePools` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListDeploymentResourcePools` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent Location which owns this collection of
 *  DeploymentResourcePools. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse.
 *
 *  List DeploymentResourcePools in a location.
 *
 *  @param parent Required. The parent Location which owns this collection of
 *    DeploymentResourcePools. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Update a DeploymentResourcePool.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsPatch : GTLRAiplatformQuery

/**
 *  Immutable. The resource name of the DeploymentResourcePool. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Update a DeploymentResourcePool.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool to include in
 *    the query.
 *  @param name Immutable. The resource name of the DeploymentResourcePool.
 *    Format:
 *    `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool *)object
                           name:(NSString *)name;

@end

/**
 *  List DeployedModels that have been deployed on this DeploymentResourcePool.
 *
 *  Method: aiplatform.projects.locations.deploymentResourcePools.queryDeployedModels
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsQueryDeployedModels : GTLRAiplatformQuery

/**
 *  Required. The name of the target DeploymentResourcePool to query. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *deploymentResourcePool;

/**
 *  The maximum number of DeployedModels to return. The service may return fewer
 *  than this value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `QueryDeployedModels` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `QueryDeployedModels` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1QueryDeployedModelsResponse.
 *
 *  List DeployedModels that have been deployed on this DeploymentResourcePool.
 *
 *  @param deploymentResourcePool Required. The name of the target
 *    DeploymentResourcePool to query. Format:
 *    `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsQueryDeployedModels
 */
+ (instancetype)queryWithDeploymentResourcePool:(NSString *)deploymentResourcePool;

@end

/**
 *  Return a list of tokens based on the input text.
 *
 *  Method: aiplatform.projects.locations.endpoints.computeTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsComputeTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to get lists of tokens and
 *  token ids.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse.
 *
 *  Return a list of tokens based on the input text.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint requested to get lists of
 *    tokens and token ids.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsComputeTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a token counting.
 *
 *  Method: aiplatform.projects.locations.endpoints.countTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsCountTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to perform token counting.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse.
 *
 *  Perform a token counting.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest to include in the
 *    query.
 *  @param endpoint Required. The name of the Endpoint requested to perform
 *    token counting. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsCountTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Creates an Endpoint.
 *
 *  Method: aiplatform.projects.locations.endpoints.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsCreate : GTLRAiplatformQuery

/**
 *  Immutable. The ID to use for endpoint, which will become the final component
 *  of the endpoint resource name. If not provided, Vertex AI will generate a
 *  value for this ID. If the first character is a letter, this value may be up
 *  to 63 characters, and valid characters are `[a-z0-9-]`. The last character
 *  must be a letter or number. If the first character is a number, this value
 *  may be up to 9 characters, and valid characters are `[0-9]` with no leading
 *  zeros. When using HTTP/JSON, this field is populated based on a query string
 *  argument, such as `?endpoint_id=12345`. This is the fallback for fields that
 *  are not included in either the URI or the body.
 */
@property(nonatomic, copy, nullable) NSString *endpointId;

/**
 *  Required. The resource name of the Location to create the Endpoint in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates an Endpoint.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Endpoint to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    Endpoint in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Endpoint *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Endpoint.
 *
 *  Method: aiplatform.projects.locations.endpoints.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes an Endpoint.
 *
 *  @param name Required. The name of the Endpoint resource to be deleted.
 *    Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deploys a Model into this Endpoint, creating a DeployedModel within it.
 *
 *  Method: aiplatform.projects.locations.endpoints.deployModel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsDeployModel : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint resource into which to deploy a Model.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deploys a Model into this Endpoint, creating a DeployedModel within it.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest to include in the
 *    query.
 *  @param endpoint Required. The name of the Endpoint resource into which to
 *    deploy a Model. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsDeployModel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform an unary online prediction request to a gRPC model server for Vertex
 *  first-party products and frameworks.
 *
 *  Method: aiplatform.projects.locations.endpoints.directPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictResponse.
 *
 *  Perform an unary online prediction request to a gRPC model server for Vertex
 *  first-party products and frameworks.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform an unary online prediction request to a gRPC model server for custom
 *  containers.
 *
 *  Method: aiplatform.projects.locations.endpoints.directRawPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectRawPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictResponse.
 *
 *  Perform an unary online prediction request to a gRPC model server for custom
 *  containers.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictRequest to include
 *    in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectRawPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform an online explanation. If deployed_model_id is specified, the
 *  corresponding DeployModel must have explanation_spec populated. If
 *  deployed_model_id is not specified, all DeployedModels must have
 *  explanation_spec populated.
 *
 *  Method: aiplatform.projects.locations.endpoints.explain
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsExplain : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the explanation.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ExplainResponse.
 *
 *  Perform an online explanation. If deployed_model_id is specified, the
 *  corresponding DeployModel must have explanation_spec populated. If
 *  deployed_model_id is not specified, all DeployedModels must have
 *  explanation_spec populated.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1ExplainRequest to
 *    include in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    explanation. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsExplain
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExplainRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs.
 *
 *  Method: aiplatform.projects.locations.endpoints.generateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Gets an Endpoint.
 *
 *  Method: aiplatform.projects.locations.endpoints.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint resource. Format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Endpoint.
 *
 *  Gets an Endpoint.
 *
 *  @param name Required. The name of the Endpoint resource. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Endpoints in a Location.
 *
 *  Method: aiplatform.projects.locations.endpoints.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsList : GTLRAiplatformQuery

/**
 *  Optional. An expression for filtering the results of the request. For field
 *  names both snake_case and camelCase are supported. * `endpoint` supports `=`
 *  and `!=`. `endpoint` represents the Endpoint ID, i.e. the last segment of
 *  the Endpoint's resource name. * `display_name` supports `=` and `!=`. *
 *  `labels` supports general map functions that is: * `labels.key=value` -
 *  key:value equality * `labels.key:*` or `labels:key` - key existence * A key
 *  including a space must be quoted. `labels."a key"`. * `base_model_name` only
 *  supports `=`. Some examples: * `endpoint=1` * `displayName="myDisplayName"`
 *  * `labels.myKey="myValue"` * `baseModelName="text-bison"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `display_name`
 *  * `create_time` * `update_time` Example: `display_name, create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListEndpointsResponse.next_page_token of the previous
 *  EndpointService.ListEndpoints call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the
 *  Endpoints. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListEndpointsResponse.
 *
 *  Lists Endpoints in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the Endpoints. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing deployed model. Updatable fields include
 *  `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
 *  `disable_container_logging` (v1 only), and `enable_container_logging`
 *  (v1beta1 only).
 *
 *  Method: aiplatform.projects.locations.endpoints.mutateDeployedModel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsMutateDeployedModel : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint resource into which to mutate a
 *  DeployedModel. Format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates an existing deployed model. Updatable fields include
 *  `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
 *  `disable_container_logging` (v1 only), and `enable_container_logging`
 *  (v1beta1 only).
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelRequest to
 *    include in the query.
 *  @param endpoint Required. The name of the Endpoint resource into which to
 *    mutate a DeployedModel. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsMutateDeployedModel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.endpoints.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.endpoints.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.endpoints.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.endpoints.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.endpoints.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an Endpoint.
 *
 *  Method: aiplatform.projects.locations.endpoints.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsPatch : GTLRAiplatformQuery

/** Output only. The resource name of the Endpoint. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. See
 *  google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Endpoint.
 *
 *  Updates an Endpoint.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Endpoint to
 *    include in the query.
 *  @param name Output only. The resource name of the Endpoint.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Endpoint *)object
                           name:(NSString *)name;

@end

/**
 *  Perform an online prediction.
 *
 *  Method: aiplatform.projects.locations.endpoints.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PredictResponse.
 *
 *  Perform an online prediction.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest to
 *    include in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform an online prediction with an arbitrary HTTP payload. The response
 *  includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the
 *  Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID
 *  of the Endpoint's DeployedModel that served this prediction.
 *
 *  Method: aiplatform.projects.locations.endpoints.rawPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsRawPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleApiHttpBody.
 *
 *  Perform an online prediction with an arbitrary HTTP payload. The response
 *  includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the
 *  Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID
 *  of the Endpoint's DeployedModel that served this prediction.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest
 *    to include in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsRawPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a server-side streaming online prediction request for Vertex LLM
 *  streaming.
 *
 *  Method: aiplatform.projects.locations.endpoints.serverStreamingPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsServerStreamingPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictResponse.
 *
 *  Perform a server-side streaming online prediction request for Vertex LLM
 *  streaming.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest to include
 *    in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsServerStreamingPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs with streaming support.
 *
 *  Method: aiplatform.projects.locations.endpoints.streamGenerateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs with streaming support.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Perform a streaming online prediction with an arbitrary HTTP payload.
 *
 *  Method: aiplatform.projects.locations.endpoints.streamRawPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamRawPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleApiHttpBody.
 *
 *  Perform a streaming online prediction with an arbitrary HTTP payload.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest to include
 *    in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamRawPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Undeploys a Model from an Endpoint, removing a DeployedModel from it, and
 *  freeing all resources it's using.
 *
 *  Method: aiplatform.projects.locations.endpoints.undeployModel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEndpointsUndeployModel : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint resource from which to undeploy a Model.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Undeploys a Model from an Endpoint, removing a DeployedModel from it, and
 *  freeing all resources it's using.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint resource from which to
 *    undeploy a Model. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEndpointsUndeployModel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Evaluates instances based on a given metric.
 *
 *  Method: aiplatform.projects.locations.evaluateInstances
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsEvaluateInstances : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to evaluate the instances.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesResponse.
 *
 *  Evaluates instances based on a given metric.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesRequest to include
 *    in the query.
 *  @param location Required. The resource name of the Location to evaluate the
 *    instances. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsEvaluateInstances
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesRequest *)object
                       location:(NSString *)location;

@end

/**
 *  Creates a new FeatureGroup in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featureGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for this FeatureGroup, which will become the final
 *  component of the FeatureGroup's resource name. This value may be up to 128
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within the project and location.
 */
@property(nonatomic, copy, nullable) NSString *featureGroupId;

/**
 *  Required. The resource name of the Location to create FeatureGroups. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new FeatureGroup in a given project and location.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create
 *    FeatureGroups. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single FeatureGroup.
 *
 *  Method: aiplatform.projects.locations.featureGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsDelete : GTLRAiplatformQuery

/**
 *  If set to true, any Features under this FeatureGroup will also be deleted.
 *  (Otherwise, the request will only work if the FeatureGroup has no Features.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the FeatureGroup to be deleted. Format:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single FeatureGroup.
 *
 *  @param name Required. The name of the FeatureGroup to be deleted. Format:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Feature in a given FeatureGroup.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for the Feature, which will become the final
 *  component of the Feature's resource name. This value may be up to 128
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within an EntityType/FeatureGroup.
 */
@property(nonatomic, copy, nullable) NSString *featureId;

/**
 *  Required. The resource name of the EntityType or FeatureGroup to create a
 *  Feature. Format for entity_type as parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new Feature in a given FeatureGroup.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Feature to
 *    include in the query.
 *  @param parent Required. The resource name of the EntityType or FeatureGroup
 *    to create a Feature. Format for entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Feature.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Features to be deleted. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single Feature.
 *
 *  @param name Required. The name of the Features to be deleted. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Feature.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Feature resource. Format for entity_type as
 *  parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Feature.
 *
 *  Gets details of a single Feature.
 *
 *  @param name Required. The name of the Feature resource. Format for
 *    entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Features in a given FeatureGroup.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesList : GTLRAiplatformQuery

/**
 *  Lists the Features that match the filter expression. The following filters
 *  are supported: * `value_type`: Supports = and != comparisons. *
 *  `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be
 *  in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <=
 *  comparisons. Values must be in RFC 3339 format. * `labels`: Supports
 *  key-value equality as well as key presence. Examples: * `value_type =
 *  DOUBLE` --> Features whose type is DOUBLE. * `create_time >
 *  \\"2020-01-31T15:30:00.000000Z\\" OR update_time >
 *  \\"2020-01-31T15:30:00.000000Z\\"` --> EntityTypes created or updated after
 *  2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod`
 *  --> Features having both (active: yes) and (env: prod) labels. *
 *  `labels.env: *` --> Any Feature which has a label with 'env' as the key.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Only applicable for Vertex AI Feature Store (Legacy). If set, return the
 *  most recent ListFeaturesRequest.latest_stats_count of stats for each Feature
 *  in response. Valid value is [0, 10]. If number of stats exists <
 *  ListFeaturesRequest.latest_stats_count, return all existing stats.
 */
@property(nonatomic, assign) NSInteger latestStatsCount;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `feature_id` *
 *  `value_type` (Not supported for FeatureRegistry Feature) * `create_time` *
 *  `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Features to return. The service may return fewer than
 *  this value. If unspecified, at most 1000 Features will be returned. The
 *  maximum value is 1000; any value greater than 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous FeaturestoreService.ListFeatures call
 *  or FeatureRegistryService.ListFeatures call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list Features. Format for
 *  entity_type as parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturesResponse.
 *
 *  Lists Features in a given FeatureGroup.
 *
 *  @param parent Required. The resource name of the Location to list Features.
 *    Format for entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.operations.listWait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsListWait : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsListWait
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single Feature.
 *
 *  Method: aiplatform.projects.locations.featureGroups.features.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesPatch : GTLRAiplatformQuery

/**
 *  Immutable. Name of the Feature. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *  The last part feature is assigned by the client. The feature can be up to 64
 *  characters long and can consist only of ASCII Latin letters A-Z and a-z,
 *  underscore(_), and ASCII digits 0-9 starting with a letter. The value will
 *  be unique given an entity type.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the Features
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then only the non-empty
 *  fields present in the request will be overwritten. Set the update_mask to
 *  `*` to override all fields. Updatable fields: * `description` * `labels` *
 *  `disable_monitoring` (Not supported for FeatureRegistryService Feature) *
 *  `point_of_contact` (Not supported for FeaturestoreService FeatureStore)
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single Feature.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Feature to
 *    include in the query.
 *  @param name Immutable. Name of the Feature. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *    The last part feature is assigned by the client. The feature can be up to
 *    64 characters long and can consist only of ASCII Latin letters A-Z and
 *    a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value
 *    will be unique given an entity type.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single FeatureGroup.
 *
 *  Method: aiplatform.projects.locations.featureGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsGet : GTLRAiplatformQuery

/** Required. The name of the FeatureGroup resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup.
 *
 *  Gets details of a single FeatureGroup.
 *
 *  @param name Required. The name of the FeatureGroup resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FeatureGroups in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featureGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsList : GTLRAiplatformQuery

/**
 *  Lists the FeatureGroups that match the filter expression. The following
 *  fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
 *  and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`:
 *  Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in
 *  RFC 3339 format. * `labels`: Supports key-value equality and key presence.
 *  Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"`
 *  FeatureGroups created or updated after 2020-01-01. * `labels.env = "prod"`
 *  FeatureGroups with label "env" set to "prod".
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported Fields: * `create_time`
 *  * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of FeatureGroups to return. The service may return fewer
 *  than this value. If unspecified, at most 100 FeatureGroups will be returned.
 *  The maximum value is 100; any value greater than 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  FeatureGroupAdminService.ListFeatureGroups call. Provide this to retrieve
 *  the subsequent page. When paginating, all other parameters provided to
 *  FeatureGroupAdminService.ListFeatureGroups must match the call that provided
 *  the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list FeatureGroups. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureGroupsResponse.
 *
 *  Lists FeatureGroups in a given project and location.
 *
 *  @param parent Required. The resource name of the Location to list
 *    FeatureGroups. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureGroups.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featureGroups.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureGroups.operations.listWait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsListWait : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsListWait
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featureGroups.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single FeatureGroup.
 *
 *  Method: aiplatform.projects.locations.featureGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsPatch : GTLRAiplatformQuery

/**
 *  Identifier. Name of the FeatureGroup. Format:
 *  `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  FeatureGroup resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  only the non-empty fields present in the request will be overwritten. Set
 *  the update_mask to `*` to override all fields. Updatable fields: * `labels`
 *  * `description` * `big_query` * `big_query.entity_id_columns`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single FeatureGroup.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup to
 *    include in the query.
 *  @param name Identifier. Name of the FeatureGroup. Format:
 *    `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new FeatureOnlineStore in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for this FeatureOnlineStore, which will become the
 *  final component of the FeatureOnlineStore's resource name. This value may be
 *  up to 60 characters, and valid characters are `[a-z0-9_]`. The first
 *  character cannot be a number. The value must be unique within the project
 *  and location.
 */
@property(nonatomic, copy, nullable) NSString *featureOnlineStoreId;

/**
 *  Required. The resource name of the Location to create FeatureOnlineStores.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new FeatureOnlineStore in a given project and location.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore to include in the
 *    query.
 *  @param parent Required. The resource name of the Location to create
 *    FeatureOnlineStores. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not contain
 *  any FeatureViews.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresDelete : GTLRAiplatformQuery

/**
 *  If set to true, any FeatureViews and Features for this FeatureOnlineStore
 *  will also be deleted. (Otherwise, the request will only work if the
 *  FeatureOnlineStore has no FeatureViews.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the FeatureOnlineStore to be deleted. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not contain
 *  any FeatureViews.
 *
 *  @param name Required. The name of the FeatureOnlineStore to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new FeatureView in a given FeatureOnlineStore.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for the FeatureView, which will become the final
 *  component of the FeatureView's resource name. This value may be up to 60
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within a FeatureOnlineStore.
 */
@property(nonatomic, copy, nullable) NSString *featureViewId;

/**
 *  Required. The resource name of the FeatureOnlineStore to create
 *  FeatureViews. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Immutable. If set to true, one on demand sync will be run immediately,
 *  regardless whether the FeatureView.sync_config is configured or not.
 */
@property(nonatomic, assign) BOOL runSyncImmediately;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new FeatureView in a given FeatureOnlineStore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureView to
 *    include in the query.
 *  @param parent Required. The resource name of the FeatureOnlineStore to
 *    create FeatureViews. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the FeatureView to be deleted. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single FeatureView.
 *
 *  @param name Required. The name of the FeatureView to be deleted. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single FeatureViewSync.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the FeatureViewSync resource. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSync.
 *
 *  Gets details of a single FeatureViewSync.
 *
 *  @param name Required. The name of the FeatureViewSync resource. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FeatureViewSyncs in a given FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList : GTLRAiplatformQuery

/**
 *  Lists the FeatureViewSyncs that match the filter expression. The following
 *  filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`,
 *  and `<=` comparisons. Values must be in RFC 3339 format. Examples: *
 *  `create_time > \\"2020-01-31T15:30:00.000000Z\\"` --> FeatureViewSyncs
 *  created after 2020-01-31T15:30:00.000000Z.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `create_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of FeatureViewSyncs to return. The service may return
 *  fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be
 *  returned. The maximum value is 1000; any value greater than 1000 will be
 *  coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the FeatureView to list FeatureViewSyncs.
 *  Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewSyncsResponse.
 *
 *  Lists FeatureViewSyncs in a given FeatureView.
 *
 *  @param parent Required. The resource name of the FeatureView to list
 *    FeatureViewSyncs. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Fetch feature values under a FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.fetchFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues : GTLRAiplatformQuery

/**
 *  Required. FeatureView resource format
 *  `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
 */
@property(nonatomic, copy, nullable) NSString *featureView;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse.
 *
 *  Fetch feature values under a FeatureView.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest to include
 *    in the query.
 *  @param featureView Required. FeatureView resource format
 *    `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest *)object
                    featureView:(NSString *)featureView;

@end

/**
 *  Gets details of a single FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the FeatureView resource. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureView.
 *
 *  Gets details of a single FeatureView.
 *
 *  @param name Required. The name of the FeatureView resource. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists FeatureViews in a given FeatureOnlineStore.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsList : GTLRAiplatformQuery

/**
 *  Lists the FeatureViews that match the filter expression. The following
 *  filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`,
 *  and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`:
 *  Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in
 *  RFC 3339 format. * `labels`: Supports key-value equality as well as key
 *  presence. Examples: * `create_time > \\"2020-01-31T15:30:00.000000Z\\" OR
 *  update_time > \\"2020-01-31T15:30:00.000000Z\\"` --> FeatureViews created or
 *  updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND
 *  labels.env = prod` --> FeatureViews having both (active: yes) and (env:
 *  prod) labels. * `labels.env: *` --> Any FeatureView which has a label with
 *  'env' as the key.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: *
 *  `feature_view_id` * `create_time` * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of FeatureViews to return. The service may return fewer
 *  than this value. If unspecified, at most 1000 FeatureViews will be returned.
 *  The maximum value is 1000; any value greater than 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the FeatureOnlineStore to list FeatureViews.
 *  Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewsResponse.
 *
 *  Lists FeatureViews in a given FeatureOnlineStore.
 *
 *  @param parent Required. The resource name of the FeatureOnlineStore to list
 *    FeatureViews. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.operations.listWait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsListWait : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsListWait
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsPatch : GTLRAiplatformQuery

/**
 *  Identifier. Name of the FeatureView. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  FeatureView resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  only the non-empty fields present in the request will be overwritten. Set
 *  the update_mask to `*` to override all fields. Updatable fields: * `labels`
 *  * `service_agent_type` * `big_query_source` * `big_query_source.uri` *
 *  `big_query_source.entity_id_columns` * `feature_registry_source` *
 *  `feature_registry_source.feature_groups` * `sync_config` *
 *  `sync_config.cron`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single FeatureView.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureView to
 *    include in the query.
 *  @param name Identifier. Name of the FeatureView. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureView *)object
                           name:(NSString *)name;

@end

/**
 *  Search the nearest entities under a FeatureView. Search only works for
 *  indexable feature view; if a feature view isn't indexable, returns Invalid
 *  argument response.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.searchNearestEntities
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities : GTLRAiplatformQuery

/**
 *  Required. FeatureView resource format
 *  `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
 */
@property(nonatomic, copy, nullable) NSString *featureView;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesResponse.
 *
 *  Search the nearest entities under a FeatureView. Search only works for
 *  indexable feature view; if a feature view isn't indexable, returns Invalid
 *  argument response.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesRequest to
 *    include in the query.
 *  @param featureView Required. FeatureView resource format
 *    `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesRequest *)object
                    featureView:(NSString *)featureView;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Triggers on-demand sync for the FeatureView.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.sync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSync : GTLRAiplatformQuery

/**
 *  Required. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *featureView;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewResponse.
 *
 *  Triggers on-demand sync for the FeatureView.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewRequest to include in
 *    the query.
 *  @param featureView Required. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSync
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewRequest *)object
                    featureView:(NSString *)featureView;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.featureViews.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Gets details of a single FeatureOnlineStore.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGet : GTLRAiplatformQuery

/** Required. The name of the FeatureOnlineStore resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore.
 *
 *  Gets details of a single FeatureOnlineStore.
 *
 *  @param name Required. The name of the FeatureOnlineStore resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists FeatureOnlineStores in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresList : GTLRAiplatformQuery

/**
 *  Lists the FeatureOnlineStores that match the filter expression. The
 *  following fields are supported: * `create_time`: Supports `=`, `!=`, `<`,
 *  `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. *
 *  `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
 *  Values must be in RFC 3339 format. * `labels`: Supports key-value equality
 *  and key presence. Examples: * `create_time > "2020-01-01" OR update_time >
 *  "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01. *
 *  `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported Fields: * `create_time`
 *  * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of FeatureOnlineStores to return. The service may return
 *  fewer than this value. If unspecified, at most 100 FeatureOnlineStores will
 *  be returned. The maximum value is 100; any value greater than 100 will be
 *  coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the
 *  call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list FeatureOnlineStores.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse.
 *
 *  Lists FeatureOnlineStores in a given project and location.
 *
 *  @param parent Required. The resource name of the Location to list
 *    FeatureOnlineStores. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.operations.listWait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsListWait : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsListWait
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single FeatureOnlineStore.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresPatch : GTLRAiplatformQuery

/**
 *  Identifier. Name of the FeatureOnlineStore. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  FeatureOnlineStore resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then only the non-empty fields present in the request will be overwritten.
 *  Set the update_mask to `*` to override all fields. Updatable fields: *
 *  `labels` * `description` * `bigtable` * `bigtable.auto_scaling` *
 *  `bigtable.enable_multi_region_replica`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single FeatureOnlineStore.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore to include in the
 *    query.
 *  @param name Identifier. Name of the FeatureOnlineStore. Format:
 *    `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.featureOnlineStores.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Batch reads Feature values from a Featurestore. This API enables batch
 *  reading Feature values, where each read instance in the batch may read
 *  Feature values of entities from one or more EntityTypes. Point-in-time
 *  correctness is guaranteed for Feature values of each read instance as of
 *  each instance's read timestamp.
 *
 *  Method: aiplatform.projects.locations.featurestores.batchReadFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresBatchReadFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Featurestore from which to query Feature
 *  values. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *featurestore;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Batch reads Feature values from a Featurestore. This API enables batch
 *  reading Feature values, where each read instance in the batch may read
 *  Feature values of entities from one or more EntityTypes. Point-in-time
 *  correctness is guaranteed for Feature values of each read instance as of
 *  each instance's read timestamp.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequest to
 *    include in the query.
 *  @param featurestore Required. The resource name of the Featurestore from
 *    which to query Feature values. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresBatchReadFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequest *)object
                   featurestore:(NSString *)featurestore;

@end

/**
 *  Creates a new Featurestore in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featurestores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for this Featurestore, which will become the final
 *  component of the Featurestore's resource name. This value may be up to 60
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within the project and location.
 */
@property(nonatomic, copy, nullable) NSString *featurestoreId;

/**
 *  Required. The resource name of the Location to create Featurestores. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new Featurestore in a given project and location.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Featurestore to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create
 *    Featurestores. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Featurestore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Featurestore. The Featurestore must not contain any
 *  EntityTypes or `force` must be set to true for the request to succeed.
 *
 *  Method: aiplatform.projects.locations.featurestores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresDelete : GTLRAiplatformQuery

/**
 *  If set to true, any EntityTypes and Features for this Featurestore will also
 *  be deleted. (Otherwise, the request will only work if the Featurestore has
 *  no EntityTypes.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the Featurestore to be deleted. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single Featurestore. The Featurestore must not contain any
 *  EntityTypes or `force` must be set to true for the request to succeed.
 *
 *  @param name Required. The name of the Featurestore to be deleted. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new EntityType in a given Featurestore.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for the EntityType, which will become the final
 *  component of the EntityType's resource name. This value may be up to 60
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within a featurestore.
 */
@property(nonatomic, copy, nullable) NSString *entityTypeId;

/**
 *  Required. The resource name of the Featurestore to create EntityTypes.
 *  Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new EntityType in a given Featurestore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1EntityType to
 *    include in the query.
 *  @param parent Required. The resource name of the Featurestore to create
 *    EntityTypes. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EntityType *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single EntityType. The EntityType must not have any Features or
 *  `force` must be set to true for the request to succeed.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDelete : GTLRAiplatformQuery

/**
 *  If set to true, any Features for this EntityType will also be deleted.
 *  (Otherwise, the request will only work if the EntityType has no Features.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the EntityType to be deleted. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single EntityType. The EntityType must not have any Features or
 *  `force` must be set to true for the request to succeed.
 *
 *  @param name Required. The name of the EntityType to be deleted. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Delete Feature values from Featurestore. The progress of the deletion is
 *  tracked by the returned operation. The deleted feature values are guaranteed
 *  to be invisible to subsequent read operations after the operation is marked
 *  as successfully done. If a delete feature values operation fails, the
 *  feature values returned from reads and exports may be inconsistent. If
 *  consistency is required, the caller must retry the same delete request again
 *  and wait till the new operation returned is marked as successfully done.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType grouping the Features for
 *  which values are being deleted from. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Delete Feature values from Featurestore. The progress of the deletion is
 *  tracked by the returned operation. The deleted feature values are guaranteed
 *  to be invisible to subsequent read operations after the operation is marked
 *  as successfully done. If a delete feature values operation fails, the
 *  feature values returned from reads and exports may be inconsistent. If
 *  consistency is required, the caller must retry the same delete request again
 *  and wait till the new operation returned is marked as successfully done.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequest to
 *    include in the query.
 *  @param entityType Required. The resource name of the EntityType grouping the
 *    Features for which values are being deleted from. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Exports Feature values from all the entities of a target EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesExportFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType from which to export Feature
 *  values. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Exports Feature values from all the entities of a target EntityType.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequest to
 *    include in the query.
 *  @param entityType Required. The resource name of the EntityType from which
 *    to export Feature values. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesExportFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Creates a batch of Features in a given EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType to create the batch of
 *  Features under. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a batch of Features in a given EntityType.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the EntityType to create the
 *    batch of Features under. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new Feature in a given EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesCreate : GTLRAiplatformQuery

/**
 *  Required. The ID to use for the Feature, which will become the final
 *  component of the Feature's resource name. This value may be up to 128
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within an EntityType/FeatureGroup.
 */
@property(nonatomic, copy, nullable) NSString *featureId;

/**
 *  Required. The resource name of the EntityType or FeatureGroup to create a
 *  Feature. Format for entity_type as parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a new Feature in a given EntityType.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Feature to
 *    include in the query.
 *  @param parent Required. The resource name of the EntityType or FeatureGroup
 *    to create a Feature. Format for entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Feature.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Features to be deleted. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single Feature.
 *
 *  @param name Required. The name of the Features to be deleted. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Feature.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Feature resource. Format for entity_type as
 *  parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Feature.
 *
 *  Gets details of a single Feature.
 *
 *  @param name Required. The name of the Feature resource. Format for
 *    entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Features in a given EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesList : GTLRAiplatformQuery

/**
 *  Lists the Features that match the filter expression. The following filters
 *  are supported: * `value_type`: Supports = and != comparisons. *
 *  `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be
 *  in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <=
 *  comparisons. Values must be in RFC 3339 format. * `labels`: Supports
 *  key-value equality as well as key presence. Examples: * `value_type =
 *  DOUBLE` --> Features whose type is DOUBLE. * `create_time >
 *  \\"2020-01-31T15:30:00.000000Z\\" OR update_time >
 *  \\"2020-01-31T15:30:00.000000Z\\"` --> EntityTypes created or updated after
 *  2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod`
 *  --> Features having both (active: yes) and (env: prod) labels. *
 *  `labels.env: *` --> Any Feature which has a label with 'env' as the key.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Only applicable for Vertex AI Feature Store (Legacy). If set, return the
 *  most recent ListFeaturesRequest.latest_stats_count of stats for each Feature
 *  in response. Valid value is [0, 10]. If number of stats exists <
 *  ListFeaturesRequest.latest_stats_count, return all existing stats.
 */
@property(nonatomic, assign) NSInteger latestStatsCount;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `feature_id` *
 *  `value_type` (Not supported for FeatureRegistry Feature) * `create_time` *
 *  `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Features to return. The service may return fewer than
 *  this value. If unspecified, at most 1000 Features will be returned. The
 *  maximum value is 1000; any value greater than 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous FeaturestoreService.ListFeatures call
 *  or FeatureRegistryService.ListFeatures call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list Features. Format for
 *  entity_type as parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturesResponse.
 *
 *  Lists Features in a given EntityType.
 *
 *  @param parent Required. The resource name of the Location to list Features.
 *    Format for entity_type as parent:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    Format for feature_group as parent:
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single Feature.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.features.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesPatch : GTLRAiplatformQuery

/**
 *  Immutable. Name of the Feature. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *  The last part feature is assigned by the client. The feature can be up to 64
 *  characters long and can consist only of ASCII Latin letters A-Z and a-z,
 *  underscore(_), and ASCII digits 0-9 starting with a letter. The value will
 *  be unique given an entity type.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the Features
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then only the non-empty
 *  fields present in the request will be overwritten. Set the update_mask to
 *  `*` to override all fields. Updatable fields: * `description` * `labels` *
 *  `disable_monitoring` (Not supported for FeatureRegistryService Feature) *
 *  `point_of_contact` (Not supported for FeaturestoreService FeatureStore)
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Feature.
 *
 *  Updates the parameters of a single Feature.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Feature to
 *    include in the query.
 *  @param name Immutable. Name of the Feature. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *    `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *    The last part feature is assigned by the client. The feature can be up to
 *    64 characters long and can consist only of ASCII Latin letters A-Z and
 *    a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value
 *    will be unique given an entity type.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the EntityType resource. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1EntityType.
 *
 *  Gets details of a single EntityType.
 *
 *  @param name Required. The name of the EntityType resource. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Imports Feature values into the Featurestore from a source storage. The
 *  progress of the import is tracked by the returned operation. The imported
 *  features are guaranteed to be visible to subsequent read operations after
 *  the operation is marked as successfully done. If an import operation fails,
 *  the Feature values returned from reads and exports may be inconsistent. If
 *  consistency is required, the caller must retry the same import request again
 *  and wait till the new operation returned is marked as successfully done.
 *  There are also scenarios where the caller can cause inconsistency. - Source
 *  data for import contains multiple distinct Feature values for the same
 *  entity ID and timestamp. - Source is modified during an import. This
 *  includes adding, updating, or removing source data and/or metadata. Examples
 *  of updating metadata include but are not limited to changing storage
 *  location, storage class, or retention policy. - Online serving cluster is
 *  under-provisioned.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesImportFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType grouping the Features for
 *  which values are being imported. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Imports Feature values into the Featurestore from a source storage. The
 *  progress of the import is tracked by the returned operation. The imported
 *  features are guaranteed to be visible to subsequent read operations after
 *  the operation is marked as successfully done. If an import operation fails,
 *  the Feature values returned from reads and exports may be inconsistent. If
 *  consistency is required, the caller must retry the same import request again
 *  and wait till the new operation returned is marked as successfully done.
 *  There are also scenarios where the caller can cause inconsistency. - Source
 *  data for import contains multiple distinct Feature values for the same
 *  entity ID and timestamp. - Source is modified during an import. This
 *  includes adding, updating, or removing source data and/or metadata. Examples
 *  of updating metadata include but are not limited to changing storage
 *  location, storage class, or retention policy. - Online serving cluster is
 *  under-provisioned.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequest to
 *    include in the query.
 *  @param entityType Required. The resource name of the EntityType grouping the
 *    Features for which values are being imported. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesImportFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Lists EntityTypes in a given Featurestore.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesList : GTLRAiplatformQuery

/**
 *  Lists the EntityTypes that match the filter expression. The following
 *  filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`,
 *  and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`:
 *  Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in
 *  RFC 3339 format. * `labels`: Supports key-value equality as well as key
 *  presence. Examples: * `create_time > \\"2020-01-31T15:30:00.000000Z\\" OR
 *  update_time > \\"2020-01-31T15:30:00.000000Z\\"` --> EntityTypes created or
 *  updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND
 *  labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod)
 *  labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as
 *  the key.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: *
 *  `entity_type_id` * `create_time` * `update_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of EntityTypes to return. The service may return fewer
 *  than this value. If unspecified, at most 1000 EntityTypes will be returned.
 *  The maximum value is 1000; any value greater than 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous FeaturestoreService.ListEntityTypes
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to FeaturestoreService.ListEntityTypes must match
 *  the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Featurestore to list EntityTypes. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListEntityTypesResponse.
 *
 *  Lists EntityTypes in a given Featurestore.
 *
 *  @param parent Required. The resource name of the Featurestore to list
 *    EntityTypes. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single EntityType.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesPatch : GTLRAiplatformQuery

/**
 *  Immutable. Name of the EntityType. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  The last part entity_type is assigned by the client. The entity_type can be
 *  up to 64 characters long and can consist only of ASCII Latin letters A-Z and
 *  a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The
 *  value will be unique given a featurestore.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the EntityType
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then only the non-empty
 *  fields present in the request will be overwritten. Set the update_mask to
 *  `*` to override all fields. Updatable fields: * `description` * `labels` *
 *  `monitoring_config.snapshot_analysis.disabled` *
 *  `monitoring_config.snapshot_analysis.monitoring_interval_days` *
 *  `monitoring_config.snapshot_analysis.staleness_days` *
 *  `monitoring_config.import_features_analysis.state` *
 *  `monitoring_config.import_features_analysis.anomaly_detection_baseline` *
 *  `monitoring_config.numerical_threshold_config.value` *
 *  `monitoring_config.categorical_threshold_config.value` *
 *  `offline_storage_ttl_days`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1EntityType.
 *
 *  Updates the parameters of a single EntityType.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1EntityType to
 *    include in the query.
 *  @param name Immutable. Name of the EntityType. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *    The last part entity_type is assigned by the client. The entity_type can
 *    be up to 64 characters long and can consist only of ASCII Latin letters
 *    A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a
 *    letter. The value will be unique given a featurestore.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EntityType *)object
                           name:(NSString *)name;

@end

/**
 *  Reads Feature values of a specific entity of an EntityType. For reading
 *  feature values of multiple entities of an EntityType, please use
 *  StreamingReadFeatureValues.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesReadFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType for the entity being read.
 *  Value format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
 *  For example, for a machine learning model predicting user clicks on a
 *  website, an EntityType ID could be `user`.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponse.
 *
 *  Reads Feature values of a specific entity of an EntityType. For reading
 *  feature values of multiple entities of an EntityType, please use
 *  StreamingReadFeatureValues.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesRequest to include
 *    in the query.
 *  @param entityType Required. The resource name of the EntityType for the
 *    entity being read. Value format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
 *    For example, for a machine learning model predicting user clicks on a
 *    website, an EntityType ID could be `user`.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesReadFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Reads Feature values for multiple entities. Depending on their size, data
 *  for different entities may be broken up across multiple responses.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the entities' type. Value format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
 *  For example, for a machine learning model predicting user clicks on a
 *  website, an EntityType ID could be `user`.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponse.
 *
 *  Reads Feature values for multiple entities. Depending on their size, data
 *  for different entities may be broken up across multiple responses.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest to
 *    include in the query.
 *  @param entityType Required. The resource name of the entities' type. Value
 *    format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
 *    For example, for a machine learning model predicting user clicks on a
 *    website, an EntityType ID could be `user`.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Writes Feature values of one or more entities of an EntityType. The Feature
 *  values are merged into existing entities if any. The Feature values to be
 *  written must have timestamp within the online storage retention.
 *
 *  Method: aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues : GTLRAiplatformQuery

/**
 *  Required. The resource name of the EntityType for the entities being
 *  written. Value format:
 *  `projects/{project}/locations/{location}/featurestores/
 *  {featurestore}/entityTypes/{entityType}`. For example, for a machine
 *  learning model predicting user clicks on a website, an EntityType ID could
 *  be `user`.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesResponse.
 *
 *  Writes Feature values of one or more entities of an EntityType. The Feature
 *  values are merged into existing entities if any. The Feature values to be
 *  written must have timestamp within the online storage retention.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesRequest to include
 *    in the query.
 *  @param entityType Required. The resource name of the EntityType for the
 *    entities being written. Value format:
 *    `projects/{project}/locations/{location}/featurestores/
 *    {featurestore}/entityTypes/{entityType}`. For example, for a machine
 *    learning model predicting user clicks on a website, an EntityType ID could
 *    be `user`.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesRequest *)object
                     entityType:(NSString *)entityType;

@end

/**
 *  Gets details of a single Featurestore.
 *
 *  Method: aiplatform.projects.locations.featurestores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGet : GTLRAiplatformQuery

/** Required. The name of the Featurestore resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Featurestore.
 *
 *  Gets details of a single Featurestore.
 *
 *  @param name Required. The name of the Featurestore resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.featurestores.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Featurestores in a given project and location.
 *
 *  Method: aiplatform.projects.locations.featurestores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresList : GTLRAiplatformQuery

/**
 *  Lists the featurestores that match the filter expression. The following
 *  fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
 *  and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`:
 *  Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in
 *  RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`,
 *  `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value
 *  equality and key presence. Examples: * `create_time > "2020-01-01" OR
 *  update_time > "2020-01-01"` Featurestores created or updated after
 *  2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to
 *  "prod".
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported Fields: * `create_time`
 *  * `update_time` * `online_serving_config.fixed_node_count`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Featurestores to return. The service may return fewer
 *  than this value. If unspecified, at most 100 Featurestores will be returned.
 *  The maximum value is 100; any value greater than 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous FeaturestoreService.ListFeaturestores
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to FeaturestoreService.ListFeaturestores must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list Featurestores. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturestoresResponse.
 *
 *  Lists Featurestores in a given project and location.
 *
 *  @param parent Required. The resource name of the Location to list
 *    Featurestores. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.featurestores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.featurestores.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.featurestores.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the parameters of a single Featurestore.
 *
 *  Method: aiplatform.projects.locations.featurestores.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresPatch : GTLRAiplatformQuery

/**
 *  Output only. Name of the Featurestore. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  Featurestore resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  only the non-empty fields present in the request will be overwritten. Set
 *  the update_mask to `*` to override all fields. Updatable fields: * `labels`
 *  * `online_serving_config.fixed_node_count` * `online_serving_config.scaling`
 *  * `online_storage_ttl_days`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single Featurestore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Featurestore to
 *    include in the query.
 *  @param name Output only. Name of the Featurestore. Format:
 *    `projects/{project}/locations/{location}/featurestores/{featurestore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Featurestore *)object
                           name:(NSString *)name;

@end

/**
 *  Searches Features matching a query in a given project.
 *
 *  Method: aiplatform.projects.locations.featurestores.searchFeatures
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSearchFeatures : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to search Features. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  The maximum number of Features to return. The service may return fewer than
 *  this value. If unspecified, at most 100 Features will be returned. The
 *  maximum value is 100; any value greater than 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous FeaturestoreService.SearchFeatures
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to FeaturestoreService.SearchFeatures, except
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Query string that is a conjunction of field-restricted queries and/or
 *  field-restricted filters. Field-restricted queries and filters can be
 *  combined using `AND` to form a conjunction. A field query is in the form
 *  FIELD:QUERY. This implicitly checks if QUERY exists as a substring within
 *  Feature's FIELD. The QUERY and the FIELD are converted to a sequence of
 *  words (i.e. tokens) for comparison. This is done by: * Removing
 *  leading/trailing whitespace and tokenizing the search value. Characters that
 *  are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*`
 *  are treated as delimiters for tokens. `*` is treated as a wildcard that
 *  matches characters within a token. * Ignoring case. * Prepending an asterisk
 *  to the first and appending an asterisk to the last token in QUERY. A QUERY
 *  must be either a singular token or a phrase. A phrase is one or multiple
 *  words enclosed in double quotation marks ("). With phrases, the order of the
 *  words is important. Words in the phrase must be matching in order and
 *  consecutively. Supported FIELDs for field-restricted queries: * `feature_id`
 *  * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches
 *  a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`,
 *  `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID
 *  containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id:
 *  foo AND description: bar` --> Matches a Feature with ID containing the
 *  substring `foo` and description containing the substring `bar`. Besides
 *  field queries, the following exact-match filters are supported. The
 *  exact-match filters do not support wildcards. Unlike field-restricted
 *  queries, exact-match filters are case-sensitive. * `feature_id`: Supports =
 *  comparisons. * `description`: Supports = comparisons. Multi-token filters
 *  should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. *
 *  `value_type`: Supports = and != comparisons. * `labels`: Supports key-value
 *  equality as well as key presence. * `featurestore_id`: Supports =
 *  comparisons. Examples: * `description = "foo bar"` --> Any Feature with
 *  description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features
 *  whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` -->
 *  Features having both (active: yes) and (env: prod) labels. * `labels.env: *`
 *  --> Any Feature which has a label with `env` as the key.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1SearchFeaturesResponse.
 *
 *  Searches Features matching a query in a given project.
 *
 *  @param location Required. The resource name of the Location to search
 *    Features. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSearchFeatures
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithLocation:(NSString *)location;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.featurestores.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.featurestores.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsFeaturestoresTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsFeaturestoresTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: aiplatform.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsGet : GTLRAiplatformQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the
 *  HyperparameterTuningJob. The server makes a best effort to cancel the job,
 *  but success is not guaranteed. Clients can use
 *  JobService.GetHyperparameterTuningJob or other methods to check whether the
 *  cancellation succeeded or whether the job completed despite cancellation. On
 *  successful cancellation, the HyperparameterTuningJob is not deleted; instead
 *  it becomes a job with a HyperparameterTuningJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  HyperparameterTuningJob.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the HyperparameterTuningJob to cancel. Format:
 *  `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the
 *  HyperparameterTuningJob. The server makes a best effort to cancel the job,
 *  but success is not guaranteed. Clients can use
 *  JobService.GetHyperparameterTuningJob or other methods to check whether the
 *  cancellation succeeded or whether the job completed despite cancellation. On
 *  successful cancellation, the HyperparameterTuningJob is not deleted; instead
 *  it becomes a job with a HyperparameterTuningJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  HyperparameterTuningJob.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest
 *    to include in the query.
 *  @param name Required. The name of the HyperparameterTuningJob to cancel.
 *    Format:
 *    `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a HyperparameterTuningJob
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the
 *  HyperparameterTuningJob in. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob.
 *
 *  Creates a HyperparameterTuningJob
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob to include
 *    in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    HyperparameterTuningJob in. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a HyperparameterTuningJob.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the HyperparameterTuningJob resource to be deleted.
 *  Format:
 *  `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a HyperparameterTuningJob.
 *
 *  @param name Required. The name of the HyperparameterTuningJob resource to be
 *    deleted. Format:
 *    `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a HyperparameterTuningJob
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the HyperparameterTuningJob resource. Format:
 *  `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob.
 *
 *  Gets a HyperparameterTuningJob
 *
 *  @param name Required. The name of the HyperparameterTuningJob resource.
 *    Format:
 *    `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists HyperparameterTuningJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
 *  `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT
 *  display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `labels.keyA=valueA` * `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListHyperparameterTuningJobsResponse.next_page_token of the previous
 *  JobService.ListHyperparameterTuningJobs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the
 *  HyperparameterTuningJobs from. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse.
 *
 *  Lists HyperparameterTuningJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    HyperparameterTuningJobs from. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.hyperparameterTuningJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an IndexEndpoint.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the IndexEndpoint in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates an IndexEndpoint.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    IndexEndpoint in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an IndexEndpoint.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the IndexEndpoint resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes an IndexEndpoint.
 *
 *  @param name Required. The name of the IndexEndpoint resource to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deploys an Index into this IndexEndpoint, creating a DeployedIndex within
 *  it. Only non-empty Indexes can be deployed.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.deployIndex
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDeployIndex : GTLRAiplatformQuery

/**
 *  Required. The name of the IndexEndpoint resource into which to deploy an
 *  Index. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deploys an Index into this IndexEndpoint, creating a DeployedIndex within
 *  it. Only non-empty Indexes can be deployed.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexRequest to include in the
 *    query.
 *  @param indexEndpoint Required. The name of the IndexEndpoint resource into
 *    which to deploy an Index. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDeployIndex
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint;

@end

/**
 *  Finds the nearest neighbors of each vector within the request.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.findNeighbors
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsFindNeighbors : GTLRAiplatformQuery

/**
 *  Required. The name of the index endpoint. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponse.
 *
 *  Finds the nearest neighbors of each vector within the request.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequest to include in
 *    the query.
 *  @param indexEndpoint Required. The name of the index endpoint. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsFindNeighbors
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint;

@end

/**
 *  Gets an IndexEndpoint.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the IndexEndpoint resource. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint.
 *
 *  Gets an IndexEndpoint.
 *
 *  @param name Required. The name of the IndexEndpoint resource. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists IndexEndpoints in a Location.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsList : GTLRAiplatformQuery

/**
 *  Optional. An expression for filtering the results of the request. For field
 *  names both snake_case and camelCase are supported. * `index_endpoint`
 *  supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the
 *  last segment of the IndexEndpoint's resourcename. * `display_name` supports
 *  =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax)
 *  syntax) * `labels` supports general map functions that is:
 *  `labels.key=value` - key:value equality `labels.key:* or labels:key - key
 *  existence A key including a space must be quoted. `labels."a key"`. Some
 *  examples: * `index_endpoint="1"` * `display_name="myDisplayName"` *
 *  `regex(display_name, "^A") -> The display name starts with an A. *
 *  `labels.myKey="myValue"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListIndexEndpointsResponse.next_page_token of the previous
 *  IndexEndpointService.ListIndexEndpoints call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the
 *  IndexEndpoints. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListIndexEndpointsResponse.
 *
 *  Lists IndexEndpoints in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the IndexEndpoints. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update an existing DeployedIndex under an IndexEndpoint.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsMutateDeployedIndex : GTLRAiplatformQuery

/**
 *  Required. The name of the IndexEndpoint resource into which to deploy an
 *  Index. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Update an existing DeployedIndex under an IndexEndpoint.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex to
 *    include in the query.
 *  @param indexEndpoint Required. The name of the IndexEndpoint resource into
 *    which to deploy an Index. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsMutateDeployedIndex
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *)object
                  indexEndpoint:(NSString *)indexEndpoint;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an IndexEndpoint.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsPatch : GTLRAiplatformQuery

/** Output only. The resource name of the IndexEndpoint. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. See
 *  google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint.
 *
 *  Updates an IndexEndpoint.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint to
 *    include in the query.
 *  @param name Output only. The resource name of the IndexEndpoint.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint *)object
                           name:(NSString *)name;

@end

/**
 *  Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints
 *  can be retrieved in a batch.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.readIndexDatapoints
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsReadIndexDatapoints : GTLRAiplatformQuery

/**
 *  Required. The name of the index endpoint. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsResponse.
 *
 *  Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints
 *  can be retrieved in a batch.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsRequest to
 *    include in the query.
 *  @param indexEndpoint Required. The name of the index endpoint. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsReadIndexDatapoints
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint;

@end

/**
 *  Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it,
 *  and freeing all resources it's using.
 *
 *  Method: aiplatform.projects.locations.indexEndpoints.undeployIndex
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsUndeployIndex : GTLRAiplatformQuery

/**
 *  Required. The name of the IndexEndpoint resource from which to undeploy an
 *  Index. Format:
 *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it,
 *  and freeing all resources it's using.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexRequest to include in
 *    the query.
 *  @param indexEndpoint Required. The name of the IndexEndpoint resource from
 *    which to undeploy an Index. Format:
 *    `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsUndeployIndex
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint;

@end

/**
 *  Creates an Index.
 *
 *  Method: aiplatform.projects.locations.indexes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the Index in. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates an Index.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Index to include
 *    in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    Index in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Index *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Index. An Index can only be deleted when all its DeployedIndexes
 *  had been undeployed.
 *
 *  Method: aiplatform.projects.locations.indexes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Index resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/indexes/{index}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes an Index. An Index can only be deleted when all its DeployedIndexes
 *  had been undeployed.
 *
 *  @param name Required. The name of the Index resource to be deleted. Format:
 *    `projects/{project}/locations/{location}/indexes/{index}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an Index.
 *
 *  Method: aiplatform.projects.locations.indexes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Index resource. Format:
 *  `projects/{project}/locations/{location}/indexes/{index}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Index.
 *
 *  Gets an Index.
 *
 *  @param name Required. The name of the Index resource. Format:
 *    `projects/{project}/locations/{location}/indexes/{index}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Indexes in a Location.
 *
 *  Method: aiplatform.projects.locations.indexes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes
 *  call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the Indexes.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListIndexesResponse.
 *
 *  Lists Indexes in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the Indexes. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.indexes.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.indexes.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.indexes.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.indexes.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.indexes.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an Index.
 *
 *  Method: aiplatform.projects.locations.indexes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesPatch : GTLRAiplatformQuery

/** Output only. The resource name of the Index. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. For the `FieldMask` definition, see
 *  google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates an Index.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Index to include
 *    in the query.
 *  @param name Output only. The resource name of the Index.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Index *)object
                           name:(NSString *)name;

@end

/**
 *  Remove Datapoints from an Index.
 *
 *  Method: aiplatform.projects.locations.indexes.removeDatapoints
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesRemoveDatapoints : GTLRAiplatformQuery

/**
 *  Required. The name of the Index resource to be updated. Format:
 *  `projects/{project}/locations/{location}/indexes/{index}`
 */
@property(nonatomic, copy, nullable) NSString *index;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsResponse.
 *
 *  Remove Datapoints from an Index.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsRequest to include
 *    in the query.
 *  @param index Required. The name of the Index resource to be updated. Format:
 *    `projects/{project}/locations/{location}/indexes/{index}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesRemoveDatapoints
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsRequest *)object
                          index:(NSString *)index;

@end

/**
 *  Add/update Datapoints into an Index.
 *
 *  Method: aiplatform.projects.locations.indexes.upsertDatapoints
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsIndexesUpsertDatapoints : GTLRAiplatformQuery

/**
 *  Required. The name of the Index resource to be updated. Format:
 *  `projects/{project}/locations/{location}/indexes/{index}`
 */
@property(nonatomic, copy, nullable) NSString *index;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsResponse.
 *
 *  Add/update Datapoints into an Index.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsRequest to include
 *    in the query.
 *  @param index Required. The name of the Index resource to be updated. Format:
 *    `projects/{project}/locations/{location}/indexes/{index}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsIndexesUpsertDatapoints
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsRequest *)object
                          index:(NSString *)index;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: aiplatform.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsList : GTLRAiplatformQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudLocationListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an Artifact associated with a MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsCreate : GTLRAiplatformQuery

/**
 *  The {artifact} portion of the resource name with the format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 *  If not provided, the Artifact's ID will be a UUID generated by the service.
 *  Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be
 *  unique across all Artifacts in the parent MetadataStore. (Otherwise the
 *  request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller
 *  can't view the preexisting Artifact.)
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

/**
 *  Required. The resource name of the MetadataStore where the Artifact should
 *  be created. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Artifact.
 *
 *  Creates an Artifact associated with a MetadataStore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Artifact to
 *    include in the query.
 *  @param parent Required. The resource name of the MetadataStore where the
 *    Artifact should be created. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Artifact *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Artifact.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsDelete : GTLRAiplatformQuery

/**
 *  Optional. The etag of the Artifact to delete. If this is provided, it must
 *  match the server's etag. Otherwise, the request will fail with a
 *  FAILED_PRECONDITION.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The resource name of the Artifact to delete. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes an Artifact.
 *
 *  @param name Required. The resource name of the Artifact to delete. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a specific Artifact.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Artifact to retrieve. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Artifact.
 *
 *  Retrieves a specific Artifact.
 *
 *  @param name Required. The resource name of the Artifact to retrieve. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Artifacts in the MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsList : GTLRAiplatformQuery

/**
 *  Filter specifying the boolean condition for the Artifacts to satisfy in
 *  order to be part of the result set. The syntax to define filter query is
 *  based on https://google.aip.dev/160. The supported set of filters include
 *  the following: * **Attribute filtering**: For example: `display_name =
 *  "test"`. Supported fields include: `name`, `display_name`, `uri`, `state`,
 *  `schema_title`, `create_time`, and `update_time`. Time fields, such as
 *  `create_time` and `update_time`, require values specified in RFC-3339
 *  format. For example: `create_time = "2020-11-19T11:30:00-04:00"` *
 *  **Metadata field**: To filter on metadata fields use traversal operation as
 *  follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`
 *  In case the field name contains special characters (such as colon), one can
 *  embed it inside double quote. For example: `metadata."field:1".number_value
 *  = 10.0` * **Context based filtering**: To filter Artifacts based on the
 *  contexts to which they belong, use the function operator with the full
 *  resource name `in_context()`. For example:
 *  `in_context("projects//locations//metadataStores//contexts/")` Each of the
 *  above supported filter types can be combined together using logical
 *  operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For
 *  example: `display_name = "test" AND metadata.field1.bool_value = true`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  How the list of messages is ordered. Specify the values to order by and an
 *  ordering operation. The default sorting order is ascending. To specify
 *  descending order for a field, users append a " desc" suffix; for example:
 *  "foo desc, bar". Subfields are specified with a `.` character, such as
 *  foo.bar. see https://google.aip.dev/132#ordering for more details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Artifacts to return. The service may return fewer.
 *  Must be in range 1-1000, inclusive. Defaults to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous MetadataService.ListArtifacts call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  provided parameters must match the call that provided the page token.
 *  (Otherwise the request will fail with INVALID_ARGUMENT error.)
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The MetadataStore whose Artifacts should be listed. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListArtifactsResponse.
 *
 *  Lists Artifacts in the MetadataStore.
 *
 *  @param parent Required. The MetadataStore whose Artifacts should be listed.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a stored Artifact.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPatch : GTLRAiplatformQuery

/**
 *  If set to true, and the Artifact is not found, a new Artifact is created.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Output only. The resource name of the Artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A FieldMask indicating which fields should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Artifact.
 *
 *  Updates a stored Artifact.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Artifact to
 *    include in the query.
 *  @param name Output only. The resource name of the Artifact.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Artifact *)object
                           name:(NSString *)name;

@end

/**
 *  Purges Artifacts.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPurge : GTLRAiplatformQuery

/**
 *  Required. The metadata store to purge Artifacts from. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Purges Artifacts.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsRequest to include in
 *    the query.
 *  @param parent Required. The metadata store to purge Artifacts from. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPurge
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieves lineage of an Artifact represented through Artifacts and
 *  Executions connected by Event edges and returned as a LineageSubgraph.
 *
 *  Method: aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Artifact whose Lineage needs to be
 *  retrieved as a LineageSubgraph. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 *  The request may error with FAILED_PRECONDITION if the number of Artifacts,
 *  the number of Executions, or the number of Events that would be returned for
 *  the Context exceeds 1000.
 */
@property(nonatomic, copy, nullable) NSString *artifact;

/**
 *  Filter specifying the boolean condition for the Artifacts to satisfy in
 *  order to be part of the Lineage Subgraph. The syntax to define filter query
 *  is based on https://google.aip.dev/160. The supported set of filters include
 *  the following: * **Attribute filtering**: For example: `display_name =
 *  "test"` Supported fields include: `name`, `display_name`, `uri`, `state`,
 *  `schema_title`, `create_time`, and `update_time`. Time fields, such as
 *  `create_time` and `update_time`, require values specified in RFC-3339
 *  format. For example: `create_time = "2020-11-19T11:30:00-04:00"` *
 *  **Metadata field**: To filter on metadata fields use traversal operation as
 *  follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`
 *  In case the field name contains special characters (such as colon), one can
 *  embed it inside double quote. For example: `metadata."field:1".number_value
 *  = 10.0` Each of the above supported filter types can be combined together
 *  using logical operators (`AND` & `OR`). Maximum nested expression depth
 *  allowed is 5. For example: `display_name = "test" AND
 *  metadata.field1.bool_value = true`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Specifies the size of the lineage graph in terms of number of hops from the
 *  specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0:
 *  Only input artifact is returned. No value: Transitive closure is performed
 *  to return the complete graph.
 */
@property(nonatomic, assign) NSInteger maxHops;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph.
 *
 *  Retrieves lineage of an Artifact represented through Artifacts and
 *  Executions connected by Event edges and returned as a LineageSubgraph.
 *
 *  @param artifact Required. The resource name of the Artifact whose Lineage
 *    needs to be retrieved as a LineageSubgraph. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 *    The request may error with FAILED_PRECONDITION if the number of Artifacts,
 *    the number of Executions, or the number of Events that would be returned
 *    for the Context exceeds 1000.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph
 */
+ (instancetype)queryWithArtifact:(NSString *)artifact;

@end

/**
 *  Adds a set of Artifacts and Executions to a Context. If any of the Artifacts
 *  or Executions have already been added to a Context, they are simply skipped.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Context that the Artifacts and Executions
 *  belong to. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse.
 *
 *  Adds a set of Artifacts and Executions to a Context. If any of the Artifacts
 *  or Executions have already been added to a Context, they are simply skipped.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest
 *    to include in the query.
 *  @param context Required. The resource name of the Context that the Artifacts
 *    and Executions belong to. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest *)object
                        context:(NSString *)context;

@end

/**
 *  Adds a set of Contexts as children to a parent Context. If any of the child
 *  Contexts have already been added to the parent Context, they are simply
 *  skipped. If this call would create a cycle or cause any Context to have more
 *  than 10 parents, the request will fail with an INVALID_ARGUMENT error.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.addContextChildren
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextChildren : GTLRAiplatformQuery

/**
 *  Required. The resource name of the parent Context. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenResponse.
 *
 *  Adds a set of Contexts as children to a parent Context. If any of the child
 *  Contexts have already been added to the parent Context, they are simply
 *  skipped. If this call would create a cycle or cause any Context to have more
 *  than 10 parents, the request will fail with an INVALID_ARGUMENT error.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenRequest to include
 *    in the query.
 *  @param context Required. The resource name of the parent Context. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextChildren
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenRequest *)object
                        context:(NSString *)context;

@end

/**
 *  Creates a Context associated with a MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsCreate : GTLRAiplatformQuery

/**
 *  The {context} portion of the resource name with the format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`.
 *  If not provided, the Context's ID will be a UUID generated by the service.
 *  Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be
 *  unique across all Contexts in the parent MetadataStore. (Otherwise the
 *  request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller
 *  can't view the preexisting Context.)
 */
@property(nonatomic, copy, nullable) NSString *contextId;

/**
 *  Required. The resource name of the MetadataStore where the Context should be
 *  created. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Context.
 *
 *  Creates a Context associated with a MetadataStore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Context to
 *    include in the query.
 *  @param parent Required. The resource name of the MetadataStore where the
 *    Context should be created. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Context *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a stored Context.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsDelete : GTLRAiplatformQuery

/**
 *  Optional. The etag of the Context to delete. If this is provided, it must
 *  match the server's etag. Otherwise, the request will fail with a
 *  FAILED_PRECONDITION.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The force deletion semantics is still undefined. Users should not use this
 *  field.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The resource name of the Context to delete. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a stored Context.
 *
 *  @param name Required. The resource name of the Context to delete. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a specific Context.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Context to retrieve. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Context.
 *
 *  Retrieves a specific Context.
 *
 *  @param name Required. The resource name of the Context to retrieve. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Contexts on the MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsList : GTLRAiplatformQuery

/**
 *  Filter specifying the boolean condition for the Contexts to satisfy in order
 *  to be part of the result set. The syntax to define filter query is based on
 *  https://google.aip.dev/160. Following are the supported set of filters: *
 *  **Attribute filtering**: For example: `display_name = "test"`. Supported
 *  fields include: `name`, `display_name`, `schema_title`, `create_time`, and
 *  `update_time`. Time fields, such as `create_time` and `update_time`, require
 *  values specified in RFC-3339 format. For example: `create_time =
 *  "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata
 *  fields use traversal operation as follows: `metadata..`. For example:
 *  `metadata.field_1.number_value = 10.0`. In case the field name contains
 *  special characters (such as colon), one can embed it inside double quote.
 *  For example: `metadata."field:1".number_value = 10.0` * **Parent Child
 *  filtering**: To filter Contexts based on parent-child relationship use the
 *  HAS operator as follows: ``` parent_contexts:
 *  "projects//locations//metadataStores//contexts/" child_contexts:
 *  "projects//locations//metadataStores//contexts/" ``` Each of the above
 *  supported filters can be combined together using logical operators (`AND` &
 *  `OR`). Maximum nested expression depth allowed is 5. For example:
 *  `display_name = "test" AND metadata.field1.bool_value = true`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  How the list of messages is ordered. Specify the values to order by and an
 *  ordering operation. The default sorting order is ascending. To specify
 *  descending order for a field, users append a " desc" suffix; for example:
 *  "foo desc, bar". Subfields are specified with a `.` character, such as
 *  foo.bar. see https://google.aip.dev/132#ordering for more details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Contexts to return. The service may return fewer. Must
 *  be in range 1-1000, inclusive. Defaults to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous MetadataService.ListContexts call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  provided parameters must match the call that provided the page token.
 *  (Otherwise the request will fail with INVALID_ARGUMENT error.)
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The MetadataStore whose Contexts should be listed. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListContextsResponse.
 *
 *  Lists Contexts on the MetadataStore.
 *
 *  @param parent Required. The MetadataStore whose Contexts should be listed.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a stored Context.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPatch : GTLRAiplatformQuery

/** If set to true, and the Context is not found, a new Context is created. */
@property(nonatomic, assign) BOOL allowMissing;

/** Immutable. The resource name of the Context. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A FieldMask indicating which fields should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Context.
 *
 *  Updates a stored Context.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Context to
 *    include in the query.
 *  @param name Immutable. The resource name of the Context.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Context *)object
                           name:(NSString *)name;

@end

/**
 *  Purges Contexts.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPurge : GTLRAiplatformQuery

/**
 *  Required. The metadata store to purge Contexts from. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Purges Contexts.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsRequest to include in
 *    the query.
 *  @param parent Required. The metadata store to purge Contexts from. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPurge
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieves Artifacts and Executions within the specified Context, connected
 *  by Event edges and returned as a LineageSubgraph.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Context whose Artifacts and Executions
 *  should be retrieved as a LineageSubgraph. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *  The request may error with FAILED_PRECONDITION if the number of Artifacts,
 *  the number of Executions, or the number of Events that would be returned for
 *  the Context exceeds 1000.
 */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph.
 *
 *  Retrieves Artifacts and Executions within the specified Context, connected
 *  by Event edges and returned as a LineageSubgraph.
 *
 *  @param context Required. The resource name of the Context whose Artifacts
 *    and Executions should be retrieved as a LineageSubgraph. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *    The request may error with FAILED_PRECONDITION if the number of Artifacts,
 *    the number of Executions, or the number of Events that would be returned
 *    for the Context exceeds 1000.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph
 */
+ (instancetype)queryWithContext:(NSString *)context;

@end

/**
 *  Remove a set of children contexts from a parent Context. If any of the child
 *  Contexts were NOT added to the parent Context, they are simply skipped.
 *
 *  Method: aiplatform.projects.locations.metadataStores.contexts.removeContextChildren
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsRemoveContextChildren : GTLRAiplatformQuery

/**
 *  Required. The resource name of the parent Context. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenResponse.
 *
 *  Remove a set of children contexts from a parent Context. If any of the child
 *  Contexts were NOT added to the parent Context, they are simply skipped.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenRequest to
 *    include in the query.
 *  @param context Required. The resource name of the parent Context. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsRemoveContextChildren
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenRequest *)object
                        context:(NSString *)context;

@end

/**
 *  Initializes a MetadataStore, including allocation of resources.
 *
 *  Method: aiplatform.projects.locations.metadataStores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresCreate : GTLRAiplatformQuery

/**
 *  The {metadatastore} portion of the resource name with the format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If
 *  not provided, the MetadataStore's ID will be a UUID generated by the
 *  service. Must be 4-128 characters in length. Valid characters are `/a-z-/`.
 *  Must be unique across all MetadataStores in the parent Location. (Otherwise
 *  the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
 *  caller can't view the preexisting MetadataStore.)
 */
@property(nonatomic, copy, nullable) NSString *metadataStoreId;

/**
 *  Required. The resource name of the Location where the MetadataStore should
 *  be created. Format: `projects/{project}/locations/{location}/`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Initializes a MetadataStore, including allocation of resources.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore to
 *    include in the query.
 *  @param parent Required. The resource name of the Location where the
 *    MetadataStore should be created. Format:
 *    `projects/{project}/locations/{location}/`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single MetadataStore and all its child resources (Artifacts,
 *  Executions, and Contexts).
 *
 *  Method: aiplatform.projects.locations.metadataStores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresDelete : GTLRAiplatformQuery

/** Deprecated: Field is no longer supported. */
@property(nonatomic, assign) BOOL force GTLR_DEPRECATED;

/**
 *  Required. The resource name of the MetadataStore to delete. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a single MetadataStore and all its child resources (Artifacts,
 *  Executions, and Contexts).
 *
 *  @param name Required. The resource name of the MetadataStore to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Adds Events to the specified Execution. An Event indicates whether an
 *  Artifact was used as an input or output for an Execution. If an Event
 *  already exists between the Execution and the Artifact, the Event is skipped.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.addExecutionEvents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsAddExecutionEvents : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Execution that the Events connect
 *  Artifacts with. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 */
@property(nonatomic, copy, nullable) NSString *execution;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsResponse.
 *
 *  Adds Events to the specified Execution. An Event indicates whether an
 *  Artifact was used as an input or output for an Execution. If an Event
 *  already exists between the Execution and the Artifact, the Event is skipped.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsRequest to include
 *    in the query.
 *  @param execution Required. The resource name of the Execution that the
 *    Events connect Artifacts with. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsAddExecutionEvents
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsRequest *)object
                      execution:(NSString *)execution;

@end

/**
 *  Creates an Execution associated with a MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsCreate : GTLRAiplatformQuery

/**
 *  The {execution} portion of the resource name with the format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 *  If not provided, the Execution's ID will be a UUID generated by the service.
 *  Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be
 *  unique across all Executions in the parent MetadataStore. (Otherwise the
 *  request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller
 *  can't view the preexisting Execution.)
 */
@property(nonatomic, copy, nullable) NSString *executionId;

/**
 *  Required. The resource name of the MetadataStore where the Execution should
 *  be created. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Execution.
 *
 *  Creates an Execution associated with a MetadataStore.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Execution to
 *    include in the query.
 *  @param parent Required. The resource name of the MetadataStore where the
 *    Execution should be created. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Execution *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Execution.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsDelete : GTLRAiplatformQuery

/**
 *  Optional. The etag of the Execution to delete. If this is provided, it must
 *  match the server's etag. Otherwise, the request will fail with a
 *  FAILED_PRECONDITION.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The resource name of the Execution to delete. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes an Execution.
 *
 *  @param name Required. The resource name of the Execution to delete. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a specific Execution.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Execution to retrieve. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Execution.
 *
 *  Retrieves a specific Execution.
 *
 *  @param name Required. The resource name of the Execution to retrieve.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Executions in the MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsList : GTLRAiplatformQuery

/**
 *  Filter specifying the boolean condition for the Executions to satisfy in
 *  order to be part of the result set. The syntax to define filter query is
 *  based on https://google.aip.dev/160. Following are the supported set of
 *  filters: * **Attribute filtering**: For example: `display_name = "test"`.
 *  Supported fields include: `name`, `display_name`, `state`, `schema_title`,
 *  `create_time`, and `update_time`. Time fields, such as `create_time` and
 *  `update_time`, require values specified in RFC-3339 format. For example:
 *  `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter
 *  on metadata fields use traversal operation as follows: `metadata..` For
 *  example: `metadata.field_1.number_value = 10.0` In case the field name
 *  contains special characters (such as colon), one can embed it inside double
 *  quote. For example: `metadata."field:1".number_value = 10.0` * **Context
 *  based filtering**: To filter Executions based on the contexts to which they
 *  belong use the function operator with the full resource name:
 *  `in_context()`. For example:
 *  `in_context("projects//locations//metadataStores//contexts/")` Each of the
 *  above supported filters can be combined together using logical operators
 *  (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example:
 *  `display_name = "test" AND metadata.field1.bool_value = true`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  How the list of messages is ordered. Specify the values to order by and an
 *  ordering operation. The default sorting order is ascending. To specify
 *  descending order for a field, users append a " desc" suffix; for example:
 *  "foo desc, bar". Subfields are specified with a `.` character, such as
 *  foo.bar. see https://google.aip.dev/132#ordering for more details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Executions to return. The service may return fewer.
 *  Must be in range 1-1000, inclusive. Defaults to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous MetadataService.ListExecutions call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  provided parameters must match the call that provided the page token.
 *  (Otherwise the request will fail with an INVALID_ARGUMENT error.)
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The MetadataStore whose Executions should be listed. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListExecutionsResponse.
 *
 *  Lists Executions in the MetadataStore.
 *
 *  @param parent Required. The MetadataStore whose Executions should be listed.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a stored Execution.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPatch : GTLRAiplatformQuery

/**
 *  If set to true, and the Execution is not found, a new Execution is created.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Output only. The resource name of the Execution. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A FieldMask indicating which fields should be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Execution.
 *
 *  Updates a stored Execution.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Execution to
 *    include in the query.
 *  @param name Output only. The resource name of the Execution.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Execution *)object
                           name:(NSString *)name;

@end

/**
 *  Purges Executions.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPurge : GTLRAiplatformQuery

/**
 *  Required. The metadata store to purge Executions from. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Purges Executions.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsRequest to include in
 *    the query.
 *  @param parent Required. The metadata store to purge Executions from. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPurge
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Obtains the set of input and output Artifacts for this Execution, in the
 *  form of LineageSubgraph that also contains the Execution and connecting
 *  Events.
 *
 *  Method: aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Execution whose input and output
 *  Artifacts should be retrieved as a LineageSubgraph. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 */
@property(nonatomic, copy, nullable) NSString *execution;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph.
 *
 *  Obtains the set of input and output Artifacts for this Execution, in the
 *  form of LineageSubgraph that also contains the Execution and connecting
 *  Events.
 *
 *  @param execution Required. The resource name of the Execution whose input
 *    and output Artifacts should be retrieved as a LineageSubgraph. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs
 */
+ (instancetype)queryWithExecution:(NSString *)execution;

@end

/**
 *  Retrieves a specific MetadataStore.
 *
 *  Method: aiplatform.projects.locations.metadataStores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the MetadataStore to retrieve. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore.
 *
 *  Retrieves a specific MetadataStore.
 *
 *  @param name Required. The resource name of the MetadataStore to retrieve.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists MetadataStores for a Location.
 *
 *  Method: aiplatform.projects.locations.metadataStores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresList : GTLRAiplatformQuery

/**
 *  The maximum number of Metadata Stores to return. The service may return
 *  fewer. Must be in range 1-1000, inclusive. Defaults to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous MetadataService.ListMetadataStores
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other provided parameters must match the call that provided the page token.
 *  (Otherwise the request will fail with INVALID_ARGUMENT error.)
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The Location whose MetadataStores should be listed. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataStoresResponse.
 *
 *  Lists MetadataStores for a Location.
 *
 *  @param parent Required. The Location whose MetadataStores should be listed.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a MetadataSchema.
 *
 *  Method: aiplatform.projects.locations.metadataStores.metadataSchemas.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasCreate : GTLRAiplatformQuery

/**
 *  The {metadata_schema} portion of the resource name with the format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
 *  If not provided, the MetadataStore's ID will be a UUID generated by the
 *  service. Must be 4-128 characters in length. Valid characters are `/a-z-/`.
 *  Must be unique across all MetadataSchemas in the parent Location. (Otherwise
 *  the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
 *  caller can't view the preexisting MetadataSchema.)
 */
@property(nonatomic, copy, nullable) NSString *metadataSchemaId;

/**
 *  Required. The resource name of the MetadataStore where the MetadataSchema
 *  should be created. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema.
 *
 *  Creates a MetadataSchema.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema to
 *    include in the query.
 *  @param parent Required. The resource name of the MetadataStore where the
 *    MetadataSchema should be created. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieves a specific MetadataSchema.
 *
 *  Method: aiplatform.projects.locations.metadataStores.metadataSchemas.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the MetadataSchema to retrieve. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema.
 *
 *  Retrieves a specific MetadataSchema.
 *
 *  @param name Required. The resource name of the MetadataSchema to retrieve.
 *    Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists MetadataSchemas.
 *
 *  Method: aiplatform.projects.locations.metadataStores.metadataSchemas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasList : GTLRAiplatformQuery

/** A query to filter available MetadataSchemas for matching results. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of MetadataSchemas to return. The service may return
 *  fewer. Must be in range 1-1000, inclusive. Defaults to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous MetadataService.ListMetadataSchemas
 *  call. Provide this to retrieve the next page. When paginating, all other
 *  provided parameters must match the call that provided the page token.
 *  (Otherwise the request will fail with INVALID_ARGUMENT error.)
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The MetadataStore whose MetadataSchemas should be listed. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataSchemasResponse.
 *
 *  Lists MetadataSchemas.
 *
 *  @param parent Required. The MetadataStore whose MetadataSchemas should be
 *    listed. Format:
 *    `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.metadataStores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.metadataStores.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.metadataStores.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and
 *  datalabeling.googleapis.com to Vertex AI.
 *
 *  Method: aiplatform.projects.locations.migratableResources.batchMigrate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesBatchMigrate : GTLRAiplatformQuery

/**
 *  Required. The location of the migrated resource will live in. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and
 *  datalabeling.googleapis.com to Vertex AI.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesRequest to
 *    include in the query.
 *  @param parent Required. The location of the migrated resource will live in.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesBatchMigrate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.migratableResources.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.migratableResources.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.migratableResources.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.migratableResources.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.migratableResources.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Searches all of the resources in automl.googleapis.com,
 *  datalabeling.googleapis.com and ml.googleapis.com that can be migrated to
 *  Vertex AI's given location.
 *
 *  Method: aiplatform.projects.locations.migratableResources.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesSearch : GTLRAiplatformQuery

/**
 *  Required. The location that the migratable resources should be searched
 *  from. It's the Vertex AI location that the resources can be migrated to, not
 *  the resources' original location. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesResponse.
 *
 *  Searches all of the resources in automl.googleapis.com,
 *  datalabeling.googleapis.com and ml.googleapis.com that can be migrated to
 *  Vertex AI's given location.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesRequest to
 *    include in the query.
 *  @param parent Required. The location that the migratable resources should be
 *    searched from. It's the Vertex AI location that the resources can be
 *    migrated to, not the resources' original location. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesSearch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a ModelDeploymentMonitoringJob. It will run periodically on a
 *  configured interval.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The parent of the ModelDeploymentMonitoringJob. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.
 *
 *  Creates a ModelDeploymentMonitoringJob. It will run periodically on a
 *  configured interval.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob to
 *    include in the query.
 *  @param parent Required. The parent of the ModelDeploymentMonitoringJob.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a ModelDeploymentMonitoringJob.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The resource name of the model monitoring job to delete. Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a ModelDeploymentMonitoringJob.
 *
 *  @param name Required. The resource name of the model monitoring job to
 *    delete. Format:
 *    `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a ModelDeploymentMonitoringJob.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsGet : GTLRAiplatformQuery

/**
 *  Required. The resource name of the ModelDeploymentMonitoringJob. Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.
 *
 *  Gets a ModelDeploymentMonitoringJob.
 *
 *  @param name Required. The resource name of the ModelDeploymentMonitoringJob.
 *    Format:
 *    `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists ModelDeploymentMonitoringJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
 *  `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT
 *  display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `labels.keyA=valueA` * `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent of the ModelDeploymentMonitoringJob. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse.
 *
 *  Lists ModelDeploymentMonitoringJobs in a Location.
 *
 *  @param parent Required. The parent of the ModelDeploymentMonitoringJob.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a ModelDeploymentMonitoringJob.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPatch : GTLRAiplatformQuery

/** Output only. Resource name of a ModelDeploymentMonitoringJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask is used to specify the fields to be overwritten in
 *  the ModelDeploymentMonitoringJob resource by the update. The fields
 *  specified in the update_mask are relative to the resource, not the full
 *  request. A field will be overwritten if it is in the mask. If the user does
 *  not provide a mask then only the non-empty fields present in the request
 *  will be overwritten. Set the update_mask to `*` to override all fields. For
 *  the objective config, the user can either provide the update mask for
 *  model_deployment_monitoring_objective_configs or any combination of its
 *  nested fields, such as:
 *  model_deployment_monitoring_objective_configs.objective_config.training_dataset.
 *  Updatable fields: * `display_name` *
 *  `model_deployment_monitoring_schedule_config` *
 *  `model_monitoring_alert_config` * `logging_sampling_strategy` * `labels` *
 *  `log_ttl` * `enable_monitoring_pipeline_logs` . and *
 *  `model_deployment_monitoring_objective_configs` . or *
 *  `model_deployment_monitoring_objective_configs.objective_config.training_dataset`
 *  *
 *  `model_deployment_monitoring_objective_configs.objective_config.training_prediction_skew_detection_config`
 *  *
 *  `model_deployment_monitoring_objective_configs.objective_config.prediction_drift_detection_config`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates a ModelDeploymentMonitoringJob.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob to
 *    include in the query.
 *  @param name Output only. Resource name of a ModelDeploymentMonitoringJob.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob *)object
                           name:(NSString *)name;

@end

/**
 *  Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
 *  makes a best effort to cancel the job. Will mark
 *  ModelDeploymentMonitoringJob.state to 'PAUSED'.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.pause
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPause : GTLRAiplatformQuery

/**
 *  Required. The resource name of the ModelDeploymentMonitoringJob to pause.
 *  Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
 *  makes a best effort to cancel the job. Will mark
 *  ModelDeploymentMonitoringJob.state to 'PAUSED'.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest
 *    to include in the query.
 *  @param name Required. The resource name of the ModelDeploymentMonitoringJob
 *    to pause. Format:
 *    `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPause
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
 *  next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
 *  resumed.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.resume
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsResume : GTLRAiplatformQuery

/**
 *  Required. The resource name of the ModelDeploymentMonitoringJob to resume.
 *  Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
 *  next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
 *  resumed.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest
 *    to include in the query.
 *  @param name Required. The resource name of the ModelDeploymentMonitoringJob
 *    to resume. Format:
 *    `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsResume
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Searches Model Monitoring Statistics generated within a given time window.
 *
 *  Method: aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies : GTLRAiplatformQuery

/**
 *  Required. ModelDeploymentMonitoring Job resource name. Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *modelDeploymentMonitoringJob;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse.
 *
 *  Searches Model Monitoring Statistics generated within a given time window.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest
 *    to include in the query.
 *  @param modelDeploymentMonitoringJob Required. ModelDeploymentMonitoring Job
 *    resource name. Format:
 *    `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest *)object
   modelDeploymentMonitoringJob:(NSString *)modelDeploymentMonitoringJob;

@end

/**
 *  Copies an already existing Vertex AI Model into the specified Location. The
 *  source Model must exist in the same Project. When copying custom Models, the
 *  users themselves are responsible for Model.metadata content to be
 *  region-agnostic, as well as making sure that any resources (e.g. files) it
 *  depends on remain accessible.
 *
 *  Method: aiplatform.projects.locations.models.copy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsCopy : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location into which to copy the Model.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Copies an already existing Vertex AI Model into the specified Location. The
 *  source Model must exist in the same Project. When copying custom Models, the
 *  users themselves are responsible for Model.metadata content to be
 *  region-agnostic, as well as making sure that any resources (e.g. files) it
 *  depends on remain accessible.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1CopyModelRequest
 *    to include in the query.
 *  @param parent Required. The resource name of the Location into which to copy
 *    the Model. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsCopy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CopyModelRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Model. A model cannot be deleted if any Endpoint resource has a
 *  DeployedModel based on the model in its deployed_models field.
 *
 *  Method: aiplatform.projects.locations.models.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Model resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Model. A model cannot be deleted if any Endpoint resource has a
 *  DeployedModel based on the model in its deployed_models field.
 *
 *  @param name Required. The name of the Model resource to be deleted. Format:
 *    `projects/{project}/locations/{location}/models/{model}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a Model version. Model version can only be deleted if there are no
 *  DeployedModels created from it. Deleting the only version in the Model is
 *  not allowed. Use DeleteModel for deleting the Model instead.
 *
 *  Method: aiplatform.projects.locations.models.deleteVersion
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsDeleteVersion : GTLRAiplatformQuery

/**
 *  Required. The name of the model version to be deleted, with a version ID
 *  explicitly included. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@1234`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Model version. Model version can only be deleted if there are no
 *  DeployedModels created from it. Deleting the only version in the Model is
 *  not allowed. Use DeleteModel for deleting the Model instead.
 *
 *  @param name Required. The name of the model version to be deleted, with a
 *    version ID explicitly included. Example:
 *    `projects/{project}/locations/{location}/models/{model}\@1234`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsDeleteVersion
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a ModelEvaluation.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the ModelEvaluation resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation.
 *
 *  Gets a ModelEvaluation.
 *
 *  @param name Required. The name of the ModelEvaluation resource. Format:
 *    `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports an externally generated ModelEvaluation.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsImport : GTLRAiplatformQuery

/**
 *  Required. The name of the parent model resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation.
 *
 *  Imports an externally generated ModelEvaluation.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ImportModelEvaluationRequest to
 *    include in the query.
 *  @param parent Required. The name of the parent model resource. Format:
 *    `projects/{project}/locations/{location}/models/{model}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsImport
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportModelEvaluationRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists ModelEvaluations in a Model.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListModelEvaluationsResponse.next_page_token of the previous
 *  ModelService.ListModelEvaluations call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Model to list the ModelEvaluations from.
 *  Format: `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationsResponse.
 *
 *  Lists ModelEvaluations in a Model.
 *
 *  @param parent Required. The resource name of the Model to list the
 *    ModelEvaluations from. Format:
 *    `projects/{project}/locations/{location}/models/{model}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports a list of externally generated EvaluatedAnnotations.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.slices.batchImport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesBatchImport : GTLRAiplatformQuery

/**
 *  Required. The name of the parent ModelEvaluationSlice resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse.
 *
 *  Imports a list of externally generated EvaluatedAnnotations.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest
 *    to include in the query.
 *  @param parent Required. The name of the parent ModelEvaluationSlice
 *    resource. Format:
 *    `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesBatchImport
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a ModelEvaluationSlice.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.slices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the ModelEvaluationSlice resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice.
 *
 *  Gets a ModelEvaluationSlice.
 *
 *  @param name Required. The name of the ModelEvaluationSlice resource. Format:
 *    `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists ModelEvaluationSlices in a ModelEvaluation.
 *
 *  Method: aiplatform.projects.locations.models.evaluations.slices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesList : GTLRAiplatformQuery

/** The standard list filter. * `slice.dimension` - for =. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListModelEvaluationSlicesResponse.next_page_token of the previous
 *  ModelService.ListModelEvaluationSlices call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the ModelEvaluation to list the
 *  ModelEvaluationSlices from. Format:
 *  `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse.
 *
 *  Lists ModelEvaluationSlices in a ModelEvaluation.
 *
 *  @param parent Required. The resource name of the ModelEvaluation to list the
 *    ModelEvaluationSlices from. Format:
 *    `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Exports a trained, exportable Model to a location specified by the user. A
 *  Model is considered to be exportable if it has at least one supported export
 *  format.
 *
 *  Method: aiplatform.projects.locations.models.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsExport : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Model to export. The resource name may
 *  contain version id or version alias to specify the version, if no version is
 *  specified, the default version will be exported.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Exports a trained, exportable Model to a location specified by the user. A
 *  Model is considered to be exportable if it has at least one supported export
 *  format.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequest to include in the
 *    query.
 *  @param name Required. The resource name of the Model to export. The resource
 *    name may contain version id or version alias to specify the version, if no
 *    version is specified, the default version will be exported.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsExport
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a Model.
 *
 *  Method: aiplatform.projects.locations.models.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Model resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}` In order to
 *  retrieve a specific version of the model, also provide the version ID or
 *  version alias. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@2` or
 *  `projects/{project}/locations/{location}/models/{model}\@golden` If no
 *  version ID or alias is specified, the "default" version will be returned.
 *  The "default" version alias is created for the first version of the model,
 *  and can be moved to other versions later on. There will be exactly one
 *  default version.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Model.
 *
 *  Gets a Model.
 *
 *  @param name Required. The name of the Model resource. Format:
 *    `projects/{project}/locations/{location}/models/{model}` In order to
 *    retrieve a specific version of the model, also provide the version ID or
 *    version alias. Example:
 *    `projects/{project}/locations/{location}/models/{model}\@2` or
 *    `projects/{project}/locations/{location}/models/{model}\@golden` If no
 *    version ID or alias is specified, the "default" version will be returned.
 *    The "default" version alias is created for the first version of the model,
 *    and can be moved to other versions later on. There will be exactly one
 *    default version.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.models.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Models in a Location.
 *
 *  Method: aiplatform.projects.locations.models.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsList : GTLRAiplatformQuery

/**
 *  An expression for filtering the results of the request. For field names both
 *  snake_case and camelCase are supported. * `model` supports = and !=. `model`
 *  represents the Model ID, i.e. the last segment of the Model's resource name.
 *  * `display_name` supports = and != * `labels` supports general map functions
 *  that is: * `labels.key=value` - key:value equality * `labels.key:* or
 *  labels:key - key existence * A key including a space must be quoted.
 *  `labels."a key"`. * `base_model_name` only supports = Some examples: *
 *  `model=1234` * `displayName="myDisplayName"` * `labels.myKey="myValue"` *
 *  `baseModelName="text-bison"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `display_name`
 *  * `create_time` * `update_time` Example: `display_name, create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListModelsResponse.next_page_token of the previous ModelService.ListModels
 *  call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the Models from. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListModelsResponse.
 *
 *  Lists Models in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the Models
 *    from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists versions of the specified model.
 *
 *  Method: aiplatform.projects.locations.models.listVersions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsListVersions : GTLRAiplatformQuery

/**
 *  An expression for filtering the results of the request. For field names both
 *  snake_case and camelCase are supported. * `labels` supports general map
 *  functions that is: * `labels.key=value` - key:value equality * `labels.key:*
 *  or labels:key - key existence * A key including a space must be quoted.
 *  `labels."a key"`. Some examples: * `labels.myKey="myValue"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. The name of the model to list versions for. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `create_time`
 *  * `update_time` Example: `update_time asc, create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via next_page_token of the
 *  previous ListModelVersions call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListModelVersionsResponse.
 *
 *  Lists versions of the specified model.
 *
 *  @param name Required. The name of the model to list versions for.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsListVersions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Merges a set of aliases for a Model version.
 *
 *  Method: aiplatform.projects.locations.models.mergeVersionAliases
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsMergeVersionAliases : GTLRAiplatformQuery

/**
 *  Required. The name of the model version to merge aliases, with a version ID
 *  explicitly included. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@1234`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Model.
 *
 *  Merges a set of aliases for a Model version.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1MergeVersionAliasesRequest to
 *    include in the query.
 *  @param name Required. The name of the model version to merge aliases, with a
 *    version ID explicitly included. Example:
 *    `projects/{project}/locations/{location}/models/{model}\@1234`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsMergeVersionAliases
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MergeVersionAliasesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.models.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.models.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.models.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.models.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.models.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a Model.
 *
 *  Method: aiplatform.projects.locations.models.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsPatch : GTLRAiplatformQuery

/** The resource name of the Model. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Model.
 *
 *  Updates a Model.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Model to include
 *    in the query.
 *  @param name The resource name of the Model.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Model *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.models.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.models.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Incrementally update the dataset used for an examples model.
 *
 *  Method: aiplatform.projects.locations.models.updateExplanationDataset
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsUpdateExplanationDataset : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Model to update. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Incrementally update the dataset used for an examples model.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetRequest to
 *    include in the query.
 *  @param model Required. The resource name of the Model to update. Format:
 *    `projects/{project}/locations/{location}/models/{model}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsUpdateExplanationDataset
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Uploads a Model artifact into Vertex AI.
 *
 *  Method: aiplatform.projects.locations.models.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsModelsUpload : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location into which to upload the Model.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Uploads a Model artifact into Vertex AI.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UploadModelRequest to include in the
 *    query.
 *  @param parent Required. The resource name of the Location into which to
 *    upload the Model. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsModelsUpload
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UploadModelRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server
 *  makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use JobService.GetNasJob or other methods to check whether the
 *  cancellation succeeded or whether the job completed despite cancellation. On
 *  successful cancellation, the NasJob is not deleted; instead it becomes a job
 *  with a NasJob.error value with a google.rpc.Status.code of 1, corresponding
 *  to `Code.CANCELLED`, and NasJob.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.nasJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the NasJob to cancel. Format:
 *  `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server
 *  makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use JobService.GetNasJob or other methods to check whether the
 *  cancellation succeeded or whether the job completed despite cancellation. On
 *  successful cancellation, the NasJob is not deleted; instead it becomes a job
 *  with a NasJob.error value with a google.rpc.Status.code of 1, corresponding
 *  to `Code.CANCELLED`, and NasJob.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelNasJobRequest to include in
 *    the query.
 *  @param name Required. The name of the NasJob to cancel. Format:
 *    `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelNasJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a NasJob
 *
 *  Method: aiplatform.projects.locations.nasJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the NasJob in. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NasJob.
 *
 *  Creates a NasJob
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1NasJob to include
 *    in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    NasJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NasJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a NasJob.
 *
 *  Method: aiplatform.projects.locations.nasJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the NasJob resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a NasJob.
 *
 *  @param name Required. The name of the NasJob resource to be deleted. Format:
 *    `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a NasJob
 *
 *  Method: aiplatform.projects.locations.nasJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the NasJob resource. Format:
 *  `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NasJob.
 *
 *  Gets a NasJob
 *
 *  @param name Required. The name of the NasJob resource. Format:
 *    `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists NasJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.nasJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
 *  `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT
 *  display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `labels.keyA=valueA` * `labels.keyB:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs
 *  call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the NasJobs from.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListNasJobsResponse.
 *
 *  Lists NasJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    NasJobs from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a NasTrialDetail.
 *
 *  Method: aiplatform.projects.locations.nasJobs.nasTrialDetails.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the NasTrialDetail resource. Format:
 *  `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NasTrialDetail.
 *
 *  Gets a NasTrialDetail.
 *
 *  @param name Required. The name of the NasTrialDetail resource. Format:
 *    `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List top NasTrialDetails of a NasJob.
 *
 *  Method: aiplatform.projects.locations.nasJobs.nasTrialDetails.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsList : GTLRAiplatformQuery

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListNasTrialDetailsResponse.next_page_token of the previous
 *  JobService.ListNasTrialDetails call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the NasJob resource. Format:
 *  `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListNasTrialDetailsResponse.
 *
 *  List top NasTrialDetails of a NasJob.
 *
 *  @param parent Required. The name of the NasJob resource. Format:
 *    `projects/{project}/locations/{location}/nasJobs/{nas_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a NotebookExecutionJob.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsCreate : GTLRAiplatformQuery

/** Optional. User specified ID for the NotebookExecutionJob. */
@property(nonatomic, copy, nullable) NSString *notebookExecutionJobId;

/**
 *  Required. The resource name of the Location to create the
 *  NotebookExecutionJob. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a NotebookExecutionJob.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob to include in
 *    the query.
 *  @param parent Required. The resource name of the Location to create the
 *    NotebookExecutionJob. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a NotebookExecutionJob.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsDelete : GTLRAiplatformQuery

/** Required. The name of the NotebookExecutionJob resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a NotebookExecutionJob.
 *
 *  @param name Required. The name of the NotebookExecutionJob resource to be
 *    deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a NotebookExecutionJob.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsGet : GTLRAiplatformQuery

/** Required. The name of the NotebookExecutionJob resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The NotebookExecutionJob view. Defaults to BASIC.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewUnspecified When
 *        unspecified, the API defaults to the BASIC view. (Value:
 *        "NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewBasic Includes all
 *        fields except for direct notebook inputs. (Value:
 *        "NOTEBOOK_EXECUTION_JOB_VIEW_BASIC")
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewFull Includes all
 *        fields. (Value: "NOTEBOOK_EXECUTION_JOB_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob.
 *
 *  Gets a NotebookExecutionJob.
 *
 *  @param name Required. The name of the NotebookExecutionJob resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists NotebookExecutionJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsList : GTLRAiplatformQuery

/**
 *  Optional. An expression for filtering the results of the request. For field
 *  names both snake_case and camelCase are supported. * `notebookExecutionJob`
 *  supports = and !=. `notebookExecutionJob` represents the
 *  NotebookExecutionJob ID. * `displayName` supports = and != and regex. *
 *  `schedule` supports = and != and regex. Some examples: *
 *  `notebookExecutionJob="123"` * `notebookExecutionJob="my-execution-job"` *
 *  `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. A comma-separated list of fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending. Supported fields: *
 *  `display_name` * `create_time` * `update_time` Example: `display_name,
 *  create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListNotebookExecutionJobs.next_page_token of the previous
 *  NotebookService.ListNotebookExecutionJobs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the
 *  NotebookExecutionJobs. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The NotebookExecutionJob view. Defaults to BASIC.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewUnspecified When
 *        unspecified, the API defaults to the BASIC view. (Value:
 *        "NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewBasic Includes all
 *        fields except for direct notebook inputs. (Value:
 *        "NOTEBOOK_EXECUTION_JOB_VIEW_BASIC")
 *    @arg @c kGTLRAiplatformViewNotebookExecutionJobViewFull Includes all
 *        fields. (Value: "NOTEBOOK_EXECUTION_JOB_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse.
 *
 *  Lists NotebookExecutionJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the NotebookExecutionJobs. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.notebookExecutionJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Assigns a NotebookRuntime to a user for a particular Notebook file. This
 *  method will either returns an existing assignment or generates a new one.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.assign
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesAssign : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to get the NotebookRuntime
 *  assignment. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Assigns a NotebookRuntime to a user for a particular Notebook file. This
 *  method will either returns an existing assignment or generates a new one.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1AssignNotebookRuntimeRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to get the
 *    NotebookRuntime assignment. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesAssign
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AssignNotebookRuntimeRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a NotebookRuntime.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntime resource to be deleted. Instead of
 *  checking whether the name is in valid NotebookRuntime resource name format,
 *  directly throw NotFound exception if there is no such NotebookRuntime in
 *  spanner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a NotebookRuntime.
 *
 *  @param name Required. The name of the NotebookRuntime resource to be
 *    deleted. Instead of checking whether the name is in valid NotebookRuntime
 *    resource name format, directly throw NotFound exception if there is no
 *    such NotebookRuntime in spanner.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a NotebookRuntime.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntime resource. Instead of checking
 *  whether the name is in valid NotebookRuntime resource name format, directly
 *  throw NotFound exception if there is no such NotebookRuntime in spanner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime.
 *
 *  Gets a NotebookRuntime.
 *
 *  @param name Required. The name of the NotebookRuntime resource. Instead of
 *    checking whether the name is in valid NotebookRuntime resource name
 *    format, directly throw NotFound exception if there is no such
 *    NotebookRuntime in spanner.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists NotebookRuntimes in a Location.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesList : GTLRAiplatformQuery

/**
 *  Optional. An expression for filtering the results of the request. For field
 *  names both snake_case and camelCase are supported. * `notebookRuntime`
 *  supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e.
 *  the last segment of the NotebookRuntime's resource name. * `displayName`
 *  supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=.
 *  `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e.
 *  the last segment of the NotebookRuntimeTemplate's resource name. *
 *  `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY,
 *  HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState
 *  enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED,
 *  STOPPED, BEING_UPGRADED, ERROR, INVALID]. * `runtimeUser` supports = and !=.
 *  * API version is UI only: `uiState` supports = and !=. uiState enum:
 *  [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED,
 *  UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED,
 *  UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and
 *  !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: *
 *  `notebookRuntime="notebookRuntime123"` * `displayName="myDisplayName"` and
 *  `displayName=~"myDisplayNameRegex"` *
 *  `notebookRuntimeTemplate="notebookRuntimeTemplate321"` *
 *  `healthState=HEALTHY` * `runtimeState=RUNNING` *
 *  `runtimeUser="test\@google.com"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED`
 *  * `notebookRuntimeType=USER_DEFINED`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. A comma-separated list of fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending. Supported fields: *
 *  `display_name` * `create_time` * `update_time` Example: `display_name,
 *  create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListNotebookRuntimesResponse.next_page_token of the previous
 *  NotebookService.ListNotebookRuntimes call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the
 *  NotebookRuntimes. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimesResponse.
 *
 *  Lists NotebookRuntimes in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the NotebookRuntimes. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts a NotebookRuntime.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.start
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesStart : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntime resource to be started. Instead of
 *  checking whether the name is in valid NotebookRuntime resource name format,
 *  directly throw NotFound exception if there is no such NotebookRuntime in
 *  spanner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Starts a NotebookRuntime.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StartNotebookRuntimeRequest to
 *    include in the query.
 *  @param name Required. The name of the NotebookRuntime resource to be
 *    started. Instead of checking whether the name is in valid NotebookRuntime
 *    resource name format, directly throw NotFound exception if there is no
 *    such NotebookRuntime in spanner.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesStart
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StartNotebookRuntimeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Upgrades a NotebookRuntime.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimes.upgrade
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesUpgrade : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntime resource to be upgrade. Instead of
 *  checking whether the name is in valid NotebookRuntime resource name format,
 *  directly throw NotFound exception if there is no such NotebookRuntime in
 *  spanner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Upgrades a NotebookRuntime.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest to
 *    include in the query.
 *  @param name Required. The name of the NotebookRuntime resource to be
 *    upgrade. Instead of checking whether the name is in valid NotebookRuntime
 *    resource name format, directly throw NotFound exception if there is no
 *    such NotebookRuntime in spanner.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesUpgrade
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a NotebookRuntimeTemplate.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesCreate : GTLRAiplatformQuery

/** Optional. User specified ID for the notebook runtime template. */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeTemplateId;

/**
 *  Required. The resource name of the Location to create the
 *  NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a NotebookRuntimeTemplate.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate to include
 *    in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a NotebookRuntimeTemplate.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntimeTemplate resource to be deleted.
 *  Format:
 *  `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a NotebookRuntimeTemplate.
 *
 *  @param name Required. The name of the NotebookRuntimeTemplate resource to be
 *    deleted. Format:
 *    `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a NotebookRuntimeTemplate.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the NotebookRuntimeTemplate resource. Format:
 *  `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate.
 *
 *  Gets a NotebookRuntimeTemplate.
 *
 *  @param name Required. The name of the NotebookRuntimeTemplate resource.
 *    Format:
 *    `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGetIamPolicy : GTLRAiplatformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists NotebookRuntimeTemplates in a Location.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesList : GTLRAiplatformQuery

/**
 *  Optional. An expression for filtering the results of the request. For field
 *  names both snake_case and camelCase are supported. *
 *  `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate`
 *  represents the NotebookRuntimeTemplate ID, i.e. the last segment of the
 *  NotebookRuntimeTemplate's resource name. * `display_name` supports = and !=
 *  * `labels` supports general map functions that is: * `labels.key=value` -
 *  key:value equality * `labels.key:* or labels:key - key existence * A key
 *  including a space must be quoted. `labels."a key"`. * `notebookRuntimeType`
 *  supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some
 *  examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` *
 *  `displayName="myDisplayName"` * `labels.myKey="myValue"` *
 *  `notebookRuntimeType=USER_DEFINED`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. A comma-separated list of fields to order by, sorted in ascending
 *  order. Use "desc" after a field name for descending. Supported fields: *
 *  `display_name` * `create_time` * `update_time` Example: `display_name,
 *  create_time desc`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListNotebookRuntimeTemplatesResponse.next_page_token of the previous
 *  NotebookService.ListNotebookRuntimeTemplates call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location from which to list the
 *  NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse.
 *
 *  Lists NotebookRuntimeTemplates in a Location.
 *
 *  @param parent Required. The resource name of the Location from which to list
 *    the NotebookRuntimeTemplates. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a NotebookRuntimeTemplate.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesPatch : GTLRAiplatformQuery

/** The resource name of the NotebookRuntimeTemplate. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. For the `FieldMask`
 *  definition, see google.protobuf.FieldMask. Input format: `{paths:
 *  "${updated_filed}"}` Updatable fields: * `encryption_spec.kms_key_name`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate.
 *
 *  Updates a NotebookRuntimeTemplate.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate to include
 *    in the query.
 *  @param name The resource name of the NotebookRuntimeTemplate.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy : GTLRAiplatformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAiplatform_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: aiplatform.projects.locations.notebookRuntimeTemplates.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions : GTLRAiplatformQuery

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a PersistentResource.
 *
 *  Method: aiplatform.projects.locations.persistentResources.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the PersistentResource
 *  in. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the PersistentResource, which become the final
 *  component of the PersistentResource's resource name. The maximum length is
 *  63 characters, and valid characters are
 *  `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
 */
@property(nonatomic, copy, nullable) NSString *persistentResourceId;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a PersistentResource.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource to include in the
 *    query.
 *  @param parent Required. The resource name of the Location to create the
 *    PersistentResource in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a PersistentResource.
 *
 *  Method: aiplatform.projects.locations.persistentResources.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the PersistentResource to be deleted. Format:
 *  `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a PersistentResource.
 *
 *  @param name Required. The name of the PersistentResource to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a PersistentResource.
 *
 *  Method: aiplatform.projects.locations.persistentResources.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the PersistentResource resource. Format:
 *  `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource.
 *
 *  Gets a PersistentResource.
 *
 *  @param name Required. The name of the PersistentResource resource. Format:
 *    `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists PersistentResources in a Location.
 *
 *  Method: aiplatform.projects.locations.persistentResources.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesList : GTLRAiplatformQuery

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListPersistentResourceResponse.next_page_token of the previous
 *  PersistentResourceService.ListPersistentResource call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the PersistentResources
 *  from. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListPersistentResourcesResponse.
 *
 *  Lists PersistentResources in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    PersistentResources from. Format:
 *    `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.persistentResources.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.persistentResources.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.persistentResources.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.persistentResources.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.persistentResources.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a PersistentResource.
 *
 *  Method: aiplatform.projects.locations.persistentResources.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesPatch : GTLRAiplatformQuery

/** Immutable. Resource name of a PersistentResource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Specify the fields to be overwritten in the PersistentResource by
 *  the update method.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates a PersistentResource.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource to include in the
 *    query.
 *  @param name Immutable. Resource name of a PersistentResource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource *)object
                           name:(NSString *)name;

@end

/**
 *  Reboots a PersistentResource.
 *
 *  Method: aiplatform.projects.locations.persistentResources.reboot
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesReboot : GTLRAiplatformQuery

/**
 *  Required. The name of the PersistentResource resource. Format:
 *  `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Reboots a PersistentResource.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1RebootPersistentResourceRequest to
 *    include in the query.
 *  @param name Required. The name of the PersistentResource resource. Format:
 *    `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesReboot
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RebootPersistentResourceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Batch cancel PipelineJobs. Firstly the server will check if all the jobs are
 *  in non-terminal states, and skip the jobs that are already terminated. If
 *  the operation failed, none of the pipeline jobs are cancelled. The server
 *  will poll the states of all the pipeline jobs periodically to check the
 *  cancellation status. This operation will return an LRO.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.batchCancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the PipelineJobs' parent resource. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Batch cancel PipelineJobs. Firstly the server will check if all the jobs are
 *  in non-terminal states, and skip the jobs that are already terminated. If
 *  the operation failed, none of the pipeline jobs are cancelled. The server
 *  will poll the states of all the pipeline jobs periodically to check the
 *  cancellation status. This operation will return an LRO.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest to
 *    include in the query.
 *  @param parent Required. The name of the PipelineJobs' parent resource.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the
 *  PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are
 *  deleted.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the PipelineJobs' parent resource. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the
 *  PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are
 *  deleted.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest to
 *    include in the query.
 *  @param parent Required. The name of the PipelineJobs' parent resource.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob.
 *  The server makes a best effort to cancel the pipeline, but success is not
 *  guaranteed. Clients can use PipelineService.GetPipelineJob or other methods
 *  to check whether the cancellation succeeded or whether the pipeline
 *  completed despite cancellation. On successful cancellation, the PipelineJob
 *  is not deleted; instead it becomes a pipeline with a PipelineJob.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  PipelineJob.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the PipelineJob to cancel. Format:
 *  `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob.
 *  The server makes a best effort to cancel the pipeline, but success is not
 *  guaranteed. Clients can use PipelineService.GetPipelineJob or other methods
 *  to check whether the cancellation succeeded or whether the pipeline
 *  completed despite cancellation. On successful cancellation, the PipelineJob
 *  is not deleted; instead it becomes a pipeline with a PipelineJob.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  PipelineJob.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelPipelineJobRequest to include
 *    in the query.
 *  @param name Required. The name of the PipelineJob to cancel. Format:
 *    `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelPipelineJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a PipelineJob. A PipelineJob will run immediately when created.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the PipelineJob in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The ID to use for the PipelineJob, which will become the final component of
 *  the PipelineJob name. If not provided, an ID will be automatically
 *  generated. This value should be less than 128 characters, and valid
 *  characters are `/a-z-/`.
 */
@property(nonatomic, copy, nullable) NSString *pipelineJobId;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob.
 *
 *  Creates a PipelineJob. A PipelineJob will run immediately when created.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    PipelineJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a PipelineJob.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the PipelineJob resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a PipelineJob.
 *
 *  @param name Required. The name of the PipelineJob resource to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a PipelineJob.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the PipelineJob resource. Format:
 *  `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob.
 *
 *  Gets a PipelineJob.
 *
 *  @param name Required. The name of the PipelineJob resource. Format:
 *    `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists PipelineJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsList : GTLRAiplatformQuery

/**
 *  Lists the PipelineJobs that match the filter expression. The following
 *  fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons.
 *  * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. *
 *  `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard.
 *  for example, can check if pipeline's display_name contains *step* by doing
 *  display_name:\\"*step*\\" * `state`: Supports `=` and `!=` comparisons. *
 *  `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
 *  Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`,
 *  `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. *
 *  `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values
 *  must be in RFC 3339 format. * `labels`: Supports key-value equality and key
 *  presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:`
 *  wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and
 *  `:` wildcard. Filter expressions can be combined together using logical
 *  operators (`AND` & `OR`). For example: `pipeline_name="test" AND
 *  create_time>"2020-05-18T13:30:00Z"`. The syntax to define filter expression
 *  is based on https://google.aip.dev/160. Examples: *
 *  `create_time>"2021-05-18T00:00:00Z" OR update_time>"2020-05-18T00:00:00Z"`
 *  PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env
 *  = "prod"` PipelineJobs with label "env" set to "prod".
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by. The default sort order is in
 *  ascending order. Use "desc" after a field name for descending. You can have
 *  multiple order_by fields provided e.g. "create_time desc, end_time",
 *  "end_time, start_time, update_time" For example, using "create_time desc,
 *  end_time" will order results by create time in descending order, and if
 *  there are multiple jobs having the same create time, order them by the end
 *  time in ascending order. if order_by is not specified, it will order by
 *  default order is create time in descending order. Supported fields: *
 *  `create_time` * `update_time` * `end_time` * `start_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListPipelineJobsResponse.next_page_token of the previous
 *  PipelineService.ListPipelineJobs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the PipelineJobs from.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListPipelineJobsResponse.
 *
 *  Lists PipelineJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    PipelineJobs from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.pipelineJobs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of tokens based on the input text.
 *
 *  Method: aiplatform.projects.locations.publishers.models.computeTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsComputeTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to get lists of tokens and
 *  token ids.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse.
 *
 *  Return a list of tokens based on the input text.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint requested to get lists of
 *    tokens and token ids.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsComputeTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a token counting.
 *
 *  Method: aiplatform.projects.locations.publishers.models.countTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsCountTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to perform token counting.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse.
 *
 *  Perform a token counting.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest to include in the
 *    query.
 *  @param endpoint Required. The name of the Endpoint requested to perform
 *    token counting. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsCountTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs.
 *
 *  Method: aiplatform.projects.locations.publishers.models.generateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Perform an online prediction.
 *
 *  Method: aiplatform.projects.locations.publishers.models.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PredictResponse.
 *
 *  Perform an online prediction.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest to
 *    include in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform an online prediction with an arbitrary HTTP payload. The response
 *  includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the
 *  Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID
 *  of the Endpoint's DeployedModel that served this prediction.
 *
 *  Method: aiplatform.projects.locations.publishers.models.rawPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsRawPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleApiHttpBody.
 *
 *  Perform an online prediction with an arbitrary HTTP payload. The response
 *  includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the
 *  Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID
 *  of the Endpoint's DeployedModel that served this prediction.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest
 *    to include in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsRawPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a server-side streaming online prediction request for Vertex LLM
 *  streaming.
 *
 *  Method: aiplatform.projects.locations.publishers.models.serverStreamingPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsServerStreamingPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictResponse.
 *
 *  Perform a server-side streaming online prediction request for Vertex LLM
 *  streaming.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest to include
 *    in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsServerStreamingPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs with streaming support.
 *
 *  Method: aiplatform.projects.locations.publishers.models.streamGenerateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs with streaming support.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Perform a streaming online prediction with an arbitrary HTTP payload.
 *
 *  Method: aiplatform.projects.locations.publishers.models.streamRawPredict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamRawPredict : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleApiHttpBody.
 *
 *  Perform a streaming online prediction with an arbitrary HTTP payload.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest to include
 *    in the query.
 *  @param endpoint Required. The name of the Endpoint requested to serve the
 *    prediction. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamRawPredict
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Creates a Schedule.
 *
 *  Method: aiplatform.projects.locations.schedules.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the Schedule in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Schedule.
 *
 *  Creates a Schedule.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Schedule to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    Schedule in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Schedule *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Schedule.
 *
 *  Method: aiplatform.projects.locations.schedules.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Schedule resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/schedules/{schedule}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Schedule.
 *
 *  @param name Required. The name of the Schedule resource to be deleted.
 *    Format: `projects/{project}/locations/{location}/schedules/{schedule}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Schedule.
 *
 *  Method: aiplatform.projects.locations.schedules.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Schedule resource. Format:
 *  `projects/{project}/locations/{location}/schedules/{schedule}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Schedule.
 *
 *  Gets a Schedule.
 *
 *  @param name Required. The name of the Schedule resource. Format:
 *    `projects/{project}/locations/{location}/schedules/{schedule}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Schedules in a Location.
 *
 *  Method: aiplatform.projects.locations.schedules.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesList : GTLRAiplatformQuery

/**
 *  Lists the Schedules that match the filter expression. The following fields
 *  are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:`
 *  wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`:
 *  Supports existence of the check. (e.g. `create_pipeline_job_request:*` -->
 *  Schedule has create_pipeline_job_request). * `create_time`: Supports `=`,
 *  `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
 *  format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
 *  comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`,
 *  `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must
 *  be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`,
 *  `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter
 *  expressions can be combined together using logical operators (`NOT`, `AND` &
 *  `OR`). The syntax to define filter expression is based on
 *  https://google.aip.dev/160. Examples: * `state="ACTIVE" AND
 *  display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` *
 *  `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR
 *  NOT end_time:*` * `create_pipeline_job_request:*`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by. The default sort order is in
 *  ascending order. Use "desc" after a field name for descending. You can have
 *  multiple order_by fields provided. For example, using "create_time desc,
 *  end_time" will order results by create time in descending order, and if
 *  there are multiple schedules having the same create time, order them by the
 *  end time in ascending order. If order_by is not specified, it will order by
 *  default with create_time in descending order. Supported fields: *
 *  `create_time` * `start_time` * `end_time` * `next_run_time`
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The standard list page size. Default to 100 if not specified. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListSchedulesResponse.next_page_token of the previous
 *  ScheduleService.ListSchedules call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the Schedules from.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListSchedulesResponse.
 *
 *  Lists Schedules in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    Schedules from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.schedules.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.schedules.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.schedules.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.schedules.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.schedules.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an active or paused Schedule. When the Schedule is updated, new runs
 *  will be scheduled starting from the updated next execution time after the
 *  update time based on the time_specification in the updated Schedule. All
 *  unstarted runs before the update time will be skipped while already created
 *  runs will NOT be paused or canceled.
 *
 *  Method: aiplatform.projects.locations.schedules.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesPatch : GTLRAiplatformQuery

/** Immutable. The resource name of the Schedule. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource. See
 *  google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Schedule.
 *
 *  Updates an active or paused Schedule. When the Schedule is updated, new runs
 *  will be scheduled starting from the updated next execution time after the
 *  update time based on the time_specification in the updated Schedule. All
 *  unstarted runs before the update time will be skipped while already created
 *  runs will NOT be paused or canceled.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Schedule to
 *    include in the query.
 *  @param name Immutable. The resource name of the Schedule.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Schedule *)object
                           name:(NSString *)name;

@end

/**
 *  Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is
 *  paused, no new runs will be created. Already created runs will NOT be paused
 *  or canceled.
 *
 *  Method: aiplatform.projects.locations.schedules.pause
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesPause : GTLRAiplatformQuery

/**
 *  Required. The name of the Schedule resource to be paused. Format:
 *  `projects/{project}/locations/{location}/schedules/{schedule}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is
 *  paused, no new runs will be created. Already created runs will NOT be paused
 *  or canceled.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1PauseScheduleRequest to include in
 *    the query.
 *  @param name Required. The name of the Schedule resource to be paused.
 *    Format: `projects/{project}/locations/{location}/schedules/{schedule}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesPause
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PauseScheduleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Resumes a paused Schedule to start scheduling new runs. Will mark
 *  Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the
 *  Schedule is resumed, new runs will be scheduled starting from the next
 *  execution time after the current time based on the time_specification in the
 *  Schedule. If Schedule.catchUp is set up true, all missed runs will be
 *  scheduled for backfill first.
 *
 *  Method: aiplatform.projects.locations.schedules.resume
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSchedulesResume : GTLRAiplatformQuery

/**
 *  Required. The name of the Schedule resource to be resumed. Format:
 *  `projects/{project}/locations/{location}/schedules/{schedule}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Resumes a paused Schedule to start scheduling new runs. Will mark
 *  Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the
 *  Schedule is resumed, new runs will be scheduled starting from the next
 *  execution time after the current time based on the time_specification in the
 *  Schedule. If Schedule.catchUp is set up true, all missed runs will be
 *  scheduled for backfill first.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ResumeScheduleRequest to include in
 *    the query.
 *  @param name Required. The name of the Schedule resource to be resumed.
 *    Format: `projects/{project}/locations/{location}/schedules/{schedule}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSchedulesResume
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ResumeScheduleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a SpecialistPool.
 *
 *  Method: aiplatform.projects.locations.specialistPools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsCreate : GTLRAiplatformQuery

/**
 *  Required. The parent Project name for the new SpecialistPool. The form is
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a SpecialistPool.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool to
 *    include in the query.
 *  @param parent Required. The parent Project name for the new SpecialistPool.
 *    The form is `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a SpecialistPool as well as all Specialists in the pool.
 *
 *  Method: aiplatform.projects.locations.specialistPools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsDelete : GTLRAiplatformQuery

/**
 *  If set to true, any specialist managers in this SpecialistPool will also be
 *  deleted. (Otherwise, the request will only work if the SpecialistPool has no
 *  specialist managers.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The resource name of the SpecialistPool to delete. Format:
 *  `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a SpecialistPool as well as all Specialists in the pool.
 *
 *  @param name Required. The resource name of the SpecialistPool to delete.
 *    Format:
 *    `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a SpecialistPool.
 *
 *  Method: aiplatform.projects.locations.specialistPools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the SpecialistPool resource. The form is
 *  `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool.
 *
 *  Gets a SpecialistPool.
 *
 *  @param name Required. The name of the SpecialistPool resource. The form is
 *    `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists SpecialistPools in a Location.
 *
 *  Method: aiplatform.projects.locations.specialistPools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsList : GTLRAiplatformQuery

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained by
 *  ListSpecialistPoolsResponse.next_page_token of the previous
 *  SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the SpecialistPool's parent resource. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read. FieldMask represents a set of
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListSpecialistPoolsResponse.
 *
 *  Lists SpecialistPools in a Location.
 *
 *  @param parent Required. The name of the SpecialistPool's parent resource.
 *    Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.specialistPools.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.specialistPools.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.specialistPools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.specialistPools.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.specialistPools.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a SpecialistPool.
 *
 *  Method: aiplatform.projects.locations.specialistPools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsPatch : GTLRAiplatformQuery

/** Required. The resource name of the SpecialistPool. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The update mask applies to the resource.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates a SpecialistPool.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool to
 *    include in the query.
 *  @param name Required. The resource name of the SpecialistPool.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Study. A resource name will be generated after creation of the
 *  Study.
 *
 *  Method: aiplatform.projects.locations.studies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the CustomJob in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Study.
 *
 *  Creates a Study. A resource name will be generated after creation of the
 *  Study.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Study to include
 *    in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    CustomJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Study *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Study.
 *
 *  Method: aiplatform.projects.locations.studies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Study resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a Study.
 *
 *  @param name Required. The name of the Study resource to be deleted. Format:
 *    `projects/{project}/locations/{location}/studies/{study}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Study by name.
 *
 *  Method: aiplatform.projects.locations.studies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Study resource. Format:
 *  `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Study.
 *
 *  Gets a Study by name.
 *
 *  @param name Required. The name of the Study resource. Format:
 *    `projects/{project}/locations/{location}/studies/{study}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the studies in a region for an associated project.
 *
 *  Method: aiplatform.projects.locations.studies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesList : GTLRAiplatformQuery

/**
 *  Optional. The maximum number of studies to return per "page" of results. If
 *  unspecified, service will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token to request the next page of results. If unspecified,
 *  there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the Study from. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListStudiesResponse.
 *
 *  Lists all the studies in a region for an associated project.
 *
 *  @param parent Required. The resource name of the Location to list the Study
 *    from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Looks a study up using the user-defined display_name field instead of the
 *  fully qualified resource name.
 *
 *  Method: aiplatform.projects.locations.studies.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesLookup : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to get the Study from. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Study.
 *
 *  Looks a study up using the user-defined display_name field instead of the
 *  fully qualified resource name.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1LookupStudyRequest to include in the
 *    query.
 *  @param parent Required. The resource name of the Location to get the Study
 *    from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesLookup
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1LookupStudyRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.studies.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.studies.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.studies.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.studies.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.studies.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Adds a measurement of the objective metrics to a Trial. This measurement is
 *  assumed to have been taken before the Trial is complete.
 *
 *  Method: aiplatform.projects.locations.studies.trials.addTrialMeasurement
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsAddTrialMeasurement : GTLRAiplatformQuery

/**
 *  Required. The name of the trial to add measurement. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *trialName;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Trial.
 *
 *  Adds a measurement of the objective metrics to a Trial. This measurement is
 *  assumed to have been taken before the Trial is complete.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1AddTrialMeasurementRequest to
 *    include in the query.
 *  @param trialName Required. The name of the trial to add measurement. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsAddTrialMeasurement
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddTrialMeasurementRequest *)object
                      trialName:(NSString *)trialName;

@end

/**
 *  Checks whether a Trial should stop or not. Returns a long-running operation.
 *  When the operation is successful, it will contain a
 *  CheckTrialEarlyStoppingStateResponse.
 *
 *  Method: aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState : GTLRAiplatformQuery

/**
 *  Required. The Trial's name. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *trialName;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Checks whether a Trial should stop or not. Returns a long-running operation.
 *  When the operation is successful, it will contain a
 *  CheckTrialEarlyStoppingStateResponse.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest
 *    to include in the query.
 *  @param trialName Required. The Trial's name. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest *)object
                      trialName:(NSString *)trialName;

@end

/**
 *  Marks a Trial as complete.
 *
 *  Method: aiplatform.projects.locations.studies.trials.complete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsComplete : GTLRAiplatformQuery

/**
 *  Required. The Trial's name. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Trial.
 *
 *  Marks a Trial as complete.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CompleteTrialRequest to include in
 *    the query.
 *  @param name Required. The Trial's name. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsComplete
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CompleteTrialRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Adds a user provided Trial to a Study.
 *
 *  Method: aiplatform.projects.locations.studies.trials.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Study to create the Trial in. Format:
 *  `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Trial.
 *
 *  Adds a user provided Trial to a Study.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Trial to include
 *    in the query.
 *  @param parent Required. The resource name of the Study to create the Trial
 *    in. Format: `projects/{project}/locations/{location}/studies/{study}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Trial *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Trial.
 *
 *  Method: aiplatform.projects.locations.studies.trials.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsDelete : GTLRAiplatformQuery

/**
 *  Required. The Trial's name. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a Trial.
 *
 *  @param name Required. The Trial's name. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Trial.
 *
 *  Method: aiplatform.projects.locations.studies.trials.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Trial resource. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Trial.
 *
 *  Gets a Trial.
 *
 *  @param name Required. The name of the Trial resource. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the Trials associated with a Study.
 *
 *  Method: aiplatform.projects.locations.studies.trials.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsList : GTLRAiplatformQuery

/**
 *  Optional. The number of Trials to retrieve per "page" of results. If
 *  unspecified, the service will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token to request the next page of results. If unspecified,
 *  there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Study to list the Trial from. Format:
 *  `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListTrialsResponse.
 *
 *  Lists the Trials associated with a Study.
 *
 *  @param parent Required. The resource name of the Study to list the Trial
 *    from. Format: `projects/{project}/locations/{location}/studies/{study}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the pareto-optimal Trials for multi-objective Study or the optimal
 *  Trials for single-objective Study. The definition of pareto-optimal can be
 *  checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
 *
 *  Method: aiplatform.projects.locations.studies.trials.listOptimalTrials
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsListOptimalTrials : GTLRAiplatformQuery

/** Required. The name of the Study that the optimal Trial belongs to. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsResponse.
 *
 *  Lists the pareto-optimal Trials for multi-objective Study or the optimal
 *  Trials for single-objective Study. The definition of pareto-optimal can be
 *  checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsRequest to include
 *    in the query.
 *  @param parent Required. The name of the Study that the optimal Trial belongs
 *    to.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsListOptimalTrials
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.studies.trials.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.studies.trials.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.studies.trials.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.studies.trials.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.studies.trials.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Stops a Trial.
 *
 *  Method: aiplatform.projects.locations.studies.trials.stop
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsStop : GTLRAiplatformQuery

/**
 *  Required. The Trial's name. Format:
 *  `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Trial.
 *
 *  Stops a Trial.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1StopTrialRequest
 *    to include in the query.
 *  @param name Required. The Trial's name. Format:
 *    `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsStop
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StopTrialRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Adds one or more Trials to a Study, with parameter values suggested by
 *  Vertex AI Vizier. Returns a long-running operation associated with the
 *  generation of Trial suggestions. When this long-running operation succeeds,
 *  it will contain a SuggestTrialsResponse.
 *
 *  Method: aiplatform.projects.locations.studies.trials.suggest
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsSuggest : GTLRAiplatformQuery

/**
 *  Required. The project and location that the Study belongs to. Format:
 *  `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Adds one or more Trials to a Study, with parameter values suggested by
 *  Vertex AI Vizier. Returns a long-running operation associated with the
 *  generation of Trial suggestions. When this long-running operation succeeds,
 *  it will contain a SuggestTrialsResponse.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsRequest to include in
 *    the query.
 *  @param parent Required. The project and location that the Study belongs to.
 *    Format: `projects/{project}/locations/{location}/studies/{study}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsSuggest
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Reads multiple TensorboardTimeSeries' data. The data point number limit is
 *  1000 for scalars, 100 for tensors and blob references. If the number of data
 *  points stored is less than the limit, all data is returned. Otherwise, the
 *  number limit of data points is randomly selected from this time series and
 *  returned.
 *
 *  Method: aiplatform.projects.locations.tensorboards.batchRead
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsBatchRead : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Tensorboard containing
 *  TensorboardTimeSeries to read data from. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
 *  TensorboardTimeSeries referenced by time_series must be sub resources of
 *  this Tensorboard.
 */
@property(nonatomic, copy, nullable) NSString *tensorboard;

/**
 *  Required. The resource names of the TensorboardTimeSeries to read data from.
 *  Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *timeSeries;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse.
 *
 *  Reads multiple TensorboardTimeSeries' data. The data point number limit is
 *  1000 for scalars, 100 for tensors and blob references. If the number of data
 *  points stored is less than the limit, all data is returned. Otherwise, the
 *  number limit of data points is randomly selected from this time series and
 *  returned.
 *
 *  @param tensorboard Required. The resource name of the Tensorboard containing
 *    TensorboardTimeSeries to read data from. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
 *    TensorboardTimeSeries referenced by time_series must be sub resources of
 *    this Tensorboard.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsBatchRead
 */
+ (instancetype)queryWithTensorboard:(NSString *)tensorboard;

@end

/**
 *  Creates a Tensorboard.
 *
 *  Method: aiplatform.projects.locations.tensorboards.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the Tensorboard in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Creates a Tensorboard.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    Tensorboard in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Tensorboard.
 *
 *  Method: aiplatform.projects.locations.tensorboards.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the Tensorboard to be deleted. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a Tensorboard.
 *
 *  @param name Required. The name of the Tensorboard to be deleted. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsBatchCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardExperiment to create the
 *  TensorboardTimeSeries in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *  The TensorboardRuns referenced by the parent fields in the
 *  CreateTensorboardTimeSeriesRequest messages must be sub resources of this
 *  TensorboardExperiment.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse.
 *
 *  Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest
 *    to include in the query.
 *  @param parent Required. The resource name of the TensorboardExperiment to
 *    create the TensorboardTimeSeries in. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *    The TensorboardRuns referenced by the parent fields in the
 *    CreateTensorboardTimeSeriesRequest messages must be sub resources of this
 *    TensorboardExperiment.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a TensorboardExperiment.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Tensorboard to create the
 *  TensorboardExperiment in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Tensorboard experiment, which becomes the
 *  final component of the Tensorboard experiment's resource name. This value
 *  should be 1-128 characters, and valid characters are `/a-z-/`.
 */
@property(nonatomic, copy, nullable) NSString *tensorboardExperimentId;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment.
 *
 *  Creates a TensorboardExperiment.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment to include in
 *    the query.
 *  @param parent Required. The resource name of the Tensorboard to create the
 *    TensorboardExperiment in. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TensorboardExperiment.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardExperiment to be deleted. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a TensorboardExperiment.
 *
 *  @param name Required. The name of the TensorboardExperiment to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a TensorboardExperiment.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardExperiment resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment.
 *
 *  Gets a TensorboardExperiment.
 *
 *  @param name Required. The name of the TensorboardExperiment resource.
 *    Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TensorboardExperiments in a Location.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsList : GTLRAiplatformQuery

/** Lists the TensorboardExperiments that match the filter expression. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field to use to sort the list. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of TensorboardExperiments to return. The service may
 *  return fewer than this value. If unspecified, at most 50
 *  TensorboardExperiments are returned. The maximum value is 1000; values above
 *  1000 are coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  TensorboardService.ListTensorboardExperiments call. Provide this to retrieve
 *  the subsequent page. When paginating, all other parameters provided to
 *  TensorboardService.ListTensorboardExperiments must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Tensorboard to list
 *  TensorboardExperiments. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardExperimentsResponse.
 *
 *  Lists TensorboardExperiments in a Location.
 *
 *  @param parent Required. The resource name of the Tensorboard to list
 *    TensorboardExperiments. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a TensorboardExperiment.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsPatch : GTLRAiplatformQuery

/**
 *  Output only. Name of the TensorboardExperiment. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  TensorboardExperiment resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it's in the mask. If the user does not provide a mask then
 *  all fields are overwritten if new values are specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment.
 *
 *  Updates a TensorboardExperiment.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment to include in
 *    the query.
 *  @param name Output only. Name of the TensorboardExperiment. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment *)object
                           name:(NSString *)name;

@end

/**
 *  Batch create TensorboardRuns.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsBatchCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardExperiment to create the
 *  TensorboardRuns in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *  The parent field in the CreateTensorboardRunRequest messages must match this
 *  field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse.
 *
 *  Batch create TensorboardRuns.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the TensorboardExperiment to
 *    create the TensorboardRuns in. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *    The parent field in the CreateTensorboardRunRequest messages must match
 *    this field.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a TensorboardRun.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardExperiment to create the
 *  TensorboardRun in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Tensorboard run, which becomes the final
 *  component of the Tensorboard run's resource name. This value should be 1-128
 *  characters, and valid characters are `/a-z-/`.
 */
@property(nonatomic, copy, nullable) NSString *tensorboardRunId;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun.
 *
 *  Creates a TensorboardRun.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun to
 *    include in the query.
 *  @param parent Required. The resource name of the TensorboardExperiment to
 *    create the TensorboardRun in. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TensorboardRun.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardRun to be deleted. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a TensorboardRun.
 *
 *  @param name Required. The name of the TensorboardRun to be deleted. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a TensorboardRun.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardRun resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun.
 *
 *  Gets a TensorboardRun.
 *
 *  @param name Required. The name of the TensorboardRun resource. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TensorboardRuns in a Location.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsList : GTLRAiplatformQuery

/** Lists the TensorboardRuns that match the filter expression. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field to use to sort the list. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of TensorboardRuns to return. The service may return
 *  fewer than this value. If unspecified, at most 50 TensorboardRuns are
 *  returned. The maximum value is 1000; values above 1000 are coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  TensorboardService.ListTensorboardRuns call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  TensorboardService.ListTensorboardRuns must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the TensorboardExperiment to list
 *  TensorboardRuns. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardRunsResponse.
 *
 *  Lists TensorboardRuns in a Location.
 *
 *  @param parent Required. The resource name of the TensorboardExperiment to
 *    list TensorboardRuns. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a TensorboardRun.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsPatch : GTLRAiplatformQuery

/**
 *  Output only. Name of the TensorboardRun. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  TensorboardRun resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it's in the mask. If the user does not provide a mask then
 *  all fields are overwritten if new values are specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun.
 *
 *  Updates a TensorboardRun.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun to
 *    include in the query.
 *  @param name Output only. Name of the TensorboardRun. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a TensorboardTimeSeries.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardRun to create the
 *  TensorboardTimeSeries in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The user specified unique ID to use for the TensorboardTimeSeries,
 *  which becomes the final component of the TensorboardTimeSeries's resource
 *  name. This value should match "a-z0-9{0, 127}"
 */
@property(nonatomic, copy, nullable) NSString *tensorboardTimeSeriesId;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries.
 *
 *  Creates a TensorboardTimeSeries.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries to include in
 *    the query.
 *  @param parent Required. The resource name of the TensorboardRun to create
 *    the TensorboardTimeSeries in. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TensorboardTimeSeries.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardTimeSeries to be deleted. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a TensorboardTimeSeries.
 *
 *  @param name Required. The name of the TensorboardTimeSeries to be deleted.
 *    Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports a TensorboardTimeSeries' data. Data is returned in paginated
 *  responses.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardTimeSeries to export data
 *  from. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboardTimeSeries;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse.
 *
 *  Exports a TensorboardTimeSeries' data. Data is returned in paginated
 *  responses.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest
 *    to include in the query.
 *  @param tensorboardTimeSeries Required. The resource name of the
 *    TensorboardTimeSeries to export data from. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest *)object
          tensorboardTimeSeries:(NSString *)tensorboardTimeSeries;

@end

/**
 *  Gets a TensorboardTimeSeries.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the TensorboardTimeSeries resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries.
 *
 *  Gets a TensorboardTimeSeries.
 *
 *  @param name Required. The name of the TensorboardTimeSeries resource.
 *    Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TensorboardTimeSeries in a Location.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList : GTLRAiplatformQuery

/** Lists the TensorboardTimeSeries that match the filter expression. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field to use to sort the list. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of TensorboardTimeSeries to return. The service may
 *  return fewer than this value. If unspecified, at most 50
 *  TensorboardTimeSeries are returned. The maximum value is 1000; values above
 *  1000 are coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous
 *  TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve
 *  the subsequent page. When paginating, all other parameters provided to
 *  TensorboardService.ListTensorboardTimeSeries must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the TensorboardRun to list
 *  TensorboardTimeSeries. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse.
 *
 *  Lists TensorboardTimeSeries in a Location.
 *
 *  @param parent Required. The resource name of the TensorboardRun to list
 *    TensorboardTimeSeries. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a TensorboardTimeSeries.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch : GTLRAiplatformQuery

/** Output only. Name of the TensorboardTimeSeries. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  TensorboardTimeSeries resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field is
 *  overwritten if it's in the mask. If the user does not provide a mask then
 *  all fields are overwritten if new values are specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries.
 *
 *  Updates a TensorboardTimeSeries.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries to include in
 *    the query.
 *  @param name Output only. Name of the TensorboardTimeSeries.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *)object
                           name:(NSString *)name;

@end

/**
 *  Reads a TensorboardTimeSeries' data. By default, if the number of data
 *  points stored is less than 1000, all data is returned. Otherwise, 1000 data
 *  points is randomly selected from this time series and returned. This value
 *  can be changed by changing max_data_points, which can't be greater than 10k.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead : GTLRAiplatformQuery

/** Reads the TensorboardTimeSeries' data that match the filter expression. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of TensorboardTimeSeries' data to return. This value
 *  should be a positive integer. This value can be set to -1 to return all
 *  data.
 */
@property(nonatomic, assign) NSInteger maxDataPoints;

/**
 *  Required. The resource name of the TensorboardTimeSeries to read data from.
 *  Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboardTimeSeries;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse.
 *
 *  Reads a TensorboardTimeSeries' data. By default, if the number of data
 *  points stored is less than 1000, all data is returned. Otherwise, 1000 data
 *  points is randomly selected from this time series and returned. This value
 *  can be changed by changing max_data_points, which can't be greater than 10k.
 *
 *  @param tensorboardTimeSeries Required. The resource name of the
 *    TensorboardTimeSeries to read data from. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead
 */
+ (instancetype)queryWithTensorboardTimeSeries:(NSString *)tensorboardTimeSeries;

@end

/**
 *  Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in
 *  consumer project's Cloud Storage bucket without users having to obtain Cloud
 *  Storage access permission.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData : GTLRAiplatformQuery

/** IDs of the blobs to read. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *blobIds;

/**
 *  Required. The resource name of the TensorboardTimeSeries to list Blobs.
 *  Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 */
@property(nonatomic, copy, nullable) NSString *timeSeries;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse.
 *
 *  Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in
 *  consumer project's Cloud Storage bucket without users having to obtain Cloud
 *  Storage access permission.
 *
 *  @param timeSeries Required. The resource name of the TensorboardTimeSeries
 *    to list Blobs. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData
 */
+ (instancetype)queryWithTimeSeries:(NSString *)timeSeries;

@end

/**
 *  Write time series data points into multiple TensorboardTimeSeries under a
 *  TensorboardRun. If any data fail to be ingested, an error is returned.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.runs.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsWrite : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardRun to write data to. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboardRun;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataResponse.
 *
 *  Write time series data points into multiple TensorboardTimeSeries under a
 *  TensorboardRun. If any data fail to be ingested, an error is returned.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest to
 *    include in the query.
 *  @param tensorboardRun Required. The resource name of the TensorboardRun to
 *    write data to. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsWrite
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest *)object
                 tensorboardRun:(NSString *)tensorboardRun;

@end

/**
 *  Write time series data points of multiple TensorboardTimeSeries in multiple
 *  TensorboardRun's. If any data fail to be ingested, an error is returned.
 *
 *  Method: aiplatform.projects.locations.tensorboards.experiments.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsWrite : GTLRAiplatformQuery

/**
 *  Required. The resource name of the TensorboardExperiment to write data to.
 *  Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboardExperiment;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse.
 *
 *  Write time series data points of multiple TensorboardTimeSeries in multiple
 *  TensorboardRun's. If any data fail to be ingested, an error is returned.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest
 *    to include in the query.
 *  @param tensorboardExperiment Required. The resource name of the
 *    TensorboardExperiment to write data to. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsWrite
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest *)object
          tensorboardExperiment:(NSString *)tensorboardExperiment;

@end

/**
 *  Gets a Tensorboard.
 *
 *  Method: aiplatform.projects.locations.tensorboards.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the Tensorboard resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard.
 *
 *  Gets a Tensorboard.
 *
 *  @param name Required. The name of the Tensorboard resource. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Tensorboards in a Location.
 *
 *  Method: aiplatform.projects.locations.tensorboards.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsList : GTLRAiplatformQuery

/** Lists the Tensorboards that match the filter expression. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field to use to sort the list. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of Tensorboards to return. The service may return fewer
 *  than this value. If unspecified, at most 100 Tensorboards are returned. The
 *  maximum value is 100; values above 100 are coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous TensorboardService.ListTensorboards
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to TensorboardService.ListTensorboards must match
 *  the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list Tensorboards. Format:
 *  `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardsResponse.
 *
 *  Lists Tensorboards in a Location.
 *
 *  @param parent Required. The resource name of the Location to list
 *    Tensorboards. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.tensorboards.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tensorboards.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.tensorboards.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a Tensorboard.
 *
 *  Method: aiplatform.projects.locations.tensorboards.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsPatch : GTLRAiplatformQuery

/**
 *  Output only. Name of the Tensorboard. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Tensorboard resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field is overwritten
 *  if it's in the mask. If the user does not provide a mask then all fields are
 *  overwritten if new values are specified.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Updates a Tensorboard.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard to
 *    include in the query.
 *  @param name Output only. Name of the Tensorboard. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsPatch
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the storage size for a given TensorBoard instance.
 *
 *  Method: aiplatform.projects.locations.tensorboards.readSize
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadSize : GTLRAiplatformQuery

/**
 *  Required. The name of the Tensorboard resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboard;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardSizeResponse.
 *
 *  Returns the storage size for a given TensorBoard instance.
 *
 *  @param tensorboard Required. The name of the Tensorboard resource. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadSize
 */
+ (instancetype)queryWithTensorboard:(NSString *)tensorboard;

@end

/**
 *  Returns a list of monthly active users for a given TensorBoard instance.
 *
 *  Method: aiplatform.projects.locations.tensorboards.readUsage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadUsage : GTLRAiplatformQuery

/**
 *  Required. The name of the Tensorboard resource. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboard;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse.
 *
 *  Returns a list of monthly active users for a given TensorBoard instance.
 *
 *  @param tensorboard Required. The name of the Tensorboard resource. Format:
 *    `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadUsage
 */
+ (instancetype)queryWithTensorboard:(NSString *)tensorboard;

@end

/**
 *  Cancels a TrainingPipeline. Starts asynchronous cancellation on the
 *  TrainingPipeline. The server makes a best effort to cancel the pipeline, but
 *  success is not guaranteed. Clients can use
 *  PipelineService.GetTrainingPipeline or other methods to check whether the
 *  cancellation succeeded or whether the pipeline completed despite
 *  cancellation. On successful cancellation, the TrainingPipeline is not
 *  deleted; instead it becomes a pipeline with a TrainingPipeline.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  TrainingPipeline.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the TrainingPipeline to cancel. Format:
 *  `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a TrainingPipeline. Starts asynchronous cancellation on the
 *  TrainingPipeline. The server makes a best effort to cancel the pipeline, but
 *  success is not guaranteed. Clients can use
 *  PipelineService.GetTrainingPipeline or other methods to check whether the
 *  cancellation succeeded or whether the pipeline completed despite
 *  cancellation. On successful cancellation, the TrainingPipeline is not
 *  deleted; instead it becomes a pipeline with a TrainingPipeline.error value
 *  with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  TrainingPipeline.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelTrainingPipelineRequest to
 *    include in the query.
 *  @param name Required. The name of the TrainingPipeline to cancel. Format:
 *    `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelTrainingPipelineRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a TrainingPipeline. A created TrainingPipeline right away will be
 *  attempted to be run.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the TrainingPipeline
 *  in. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline.
 *
 *  Creates a TrainingPipeline. A created TrainingPipeline right away will be
 *  attempted to be run.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline
 *    to include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    TrainingPipeline in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TrainingPipeline.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesDelete : GTLRAiplatformQuery

/**
 *  Required. The name of the TrainingPipeline resource to be deleted. Format:
 *  `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Deletes a TrainingPipeline.
 *
 *  @param name Required. The name of the TrainingPipeline resource to be
 *    deleted. Format:
 *    `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a TrainingPipeline.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesGet : GTLRAiplatformQuery

/**
 *  Required. The name of the TrainingPipeline resource. Format:
 *  `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline.
 *
 *  Gets a TrainingPipeline.
 *
 *  @param name Required. The name of the TrainingPipeline resource. Format:
 *    `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TrainingPipelines in a Location.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesList : GTLRAiplatformQuery

/**
 *  The standard list filter. Supported fields: * `display_name` supports `=`,
 *  `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=`
 *  comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:`
 *  wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=`
 *  comparisons. `create_time` must be in RFC 3339 format. * `labels` supports
 *  general map functions that is: `labels.key=value` - key:value equality
 *  `labels.key:* - key existence Some examples of using the filter are: *
 *  `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` *
 *  `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT
 *  display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` *
 *  `training_task_definition:"*automl_text_classification*"`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The standard list page token. Typically obtained via
 *  ListTrainingPipelinesResponse.next_page_token of the previous
 *  PipelineService.ListTrainingPipelines call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the TrainingPipelines
 *  from. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Mask specifying which fields to read.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRAiplatform_GoogleCloudAiplatformV1ListTrainingPipelinesResponse.
 *
 *  Lists TrainingPipelines in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    TrainingPipelines from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  Method: aiplatform.projects.locations.trainingPipelines.operations.wait
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsWait : GTLRAiplatformQuery

/** The name of the operation resource to wait on. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum duration to wait before timing out. If left blank, the wait will
 *  be at most the time permitted by the underlying HTTP/RPC protocol. If RPC
 *  context deadline is also specified, the shorter one will be used.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Waits until the specified long-running operation is done or reaches at most
 *  a specified timeout, returning the latest state. If the operation is already
 *  done, the latest state is immediately returned. If the timeout specified is
 *  greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If
 *  the server does not support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort
 *  basis. It may return the latest state before the specified timeout
 *  (including immediately), meaning even an immediate response is no guarantee
 *  that the operation is done.
 *
 *  @param name The name of the operation resource to wait on.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsWait
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob. The
 *  server makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use GenAiTuningService.GetTuningJob or other methods to check
 *  whether the cancellation succeeded or whether the job completed despite
 *  cancellation. On successful cancellation, the TuningJob is not deleted;
 *  instead it becomes a job with a TuningJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  TuningJob.state is set to `CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsCancel : GTLRAiplatformQuery

/**
 *  Required. The name of the TuningJob to cancel. Format:
 *  `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob. The
 *  server makes a best effort to cancel the job, but success is not guaranteed.
 *  Clients can use GenAiTuningService.GetTuningJob or other methods to check
 *  whether the cancellation succeeded or whether the job completed despite
 *  cancellation. On successful cancellation, the TuningJob is not deleted;
 *  instead it becomes a job with a TuningJob.error value with a
 *  google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
 *  TuningJob.state is set to `CANCELLED`.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CancelTuningJobRequest to include in
 *    the query.
 *  @param name Required. The name of the TuningJob to cancel. Format:
 *    `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsCancel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelTuningJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a TuningJob. A created TuningJob right away will be attempted to be
 *  run.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsCreate : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location to create the TuningJob in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TuningJob.
 *
 *  Creates a TuningJob. A created TuningJob right away will be attempted to be
 *  run.
 *
 *  @param object The @c GTLRAiplatform_GoogleCloudAiplatformV1TuningJob to
 *    include in the query.
 *  @param parent Required. The resource name of the Location to create the
 *    TuningJob in. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TuningJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a TuningJob.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsGet : GTLRAiplatformQuery

/**
 *  Required. The name of the TuningJob resource. Format:
 *  `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1TuningJob.
 *
 *  Gets a TuningJob.
 *
 *  @param name Required. The name of the TuningJob resource. Format:
 *    `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TuningJobs in a Location.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsList : GTLRAiplatformQuery

/** Optional. The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The standard list page token. Typically obtained via
 *  ListTuningJob.next_page_token of the previous
 *  GenAiTuningService.ListTuningJob][] call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Location to list the TuningJobs from.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ListTuningJobsResponse.
 *
 *  Lists TuningJobs in a Location.
 *
 *  @param parent Required. The resource name of the Location to list the
 *    TuningJobs from. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsCancel : GTLRAiplatformQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsDelete : GTLRAiplatformQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsGet : GTLRAiplatformQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsList : GTLRAiplatformQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Rebase a TunedModel.
 *
 *  Method: aiplatform.projects.locations.tuningJobs.rebaseTunedModel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_ProjectsLocationsTuningJobsRebaseTunedModel : GTLRAiplatformQuery

/**
 *  Required. The resource name of the Location into which to rebase the Model.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAiplatform_GoogleLongrunningOperation.
 *
 *  Rebase a TunedModel.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1RebaseTunedModelRequest to include
 *    in the query.
 *  @param parent Required. The resource name of the Location into which to
 *    rebase the Model. Format: `projects/{project}/locations/{location}`
 *
 *  @return GTLRAiplatformQuery_ProjectsLocationsTuningJobsRebaseTunedModel
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RebaseTunedModelRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Return a list of tokens based on the input text.
 *
 *  Method: aiplatform.publishers.models.computeTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_PublishersModelsComputeTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to get lists of tokens and
 *  token ids.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse.
 *
 *  Return a list of tokens based on the input text.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest to include in
 *    the query.
 *  @param endpoint Required. The name of the Endpoint requested to get lists of
 *    tokens and token ids.
 *
 *  @return GTLRAiplatformQuery_PublishersModelsComputeTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Perform a token counting.
 *
 *  Method: aiplatform.publishers.models.countTokens
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_PublishersModelsCountTokens : GTLRAiplatformQuery

/**
 *  Required. The name of the Endpoint requested to perform token counting.
 *  Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse.
 *
 *  Perform a token counting.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest to include in the
 *    query.
 *  @param endpoint Required. The name of the Endpoint requested to perform
 *    token counting. Format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_PublishersModelsCountTokens
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint;

@end

/**
 *  Generate content with multimodal inputs.
 *
 *  Method: aiplatform.publishers.models.generateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_PublishersModelsGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_PublishersModelsGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

/**
 *  Gets a Model Garden publisher model.
 *
 *  Method: aiplatform.publishers.models.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 */
@interface GTLRAiplatformQuery_PublishersModelsGet : GTLRAiplatformQuery

/** Optional. Token used to access Hugging Face gated models. */
@property(nonatomic, copy, nullable) NSString *huggingFaceToken;

/**
 *  Optional. Boolean indicates whether the requested model is a Hugging Face
 *  model.
 */
@property(nonatomic, assign) BOOL isHuggingFaceModel;

/**
 *  Optional. The IETF BCP-47 language code representing the language in which
 *  the publisher model's text information should be written in.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The name of the PublisherModel resource. Format:
 *  `publishers/{publisher}/models/{publisher_model}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. PublisherModel view specifying which fields to read.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatformViewPublisherModelViewUnspecified The default /
 *        unset value. The API will default to the BASIC view. (Value:
 *        "PUBLISHER_MODEL_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRAiplatformViewPublisherModelViewBasic Include basic metadata
 *        about the publisher model, but not the full contents. (Value:
 *        "PUBLISHER_MODEL_VIEW_BASIC")
 *    @arg @c kGTLRAiplatformViewPublisherModelViewFull Include everything.
 *        (Value: "PUBLISHER_MODEL_VIEW_FULL")
 *    @arg @c kGTLRAiplatformViewPublisherModelVersionViewBasic Include:
 *        VersionId, ModelVersionExternalName, and SupportedActions. (Value:
 *        "PUBLISHER_MODEL_VERSION_VIEW_BASIC")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel.
 *
 *  Gets a Model Garden publisher model.
 *
 *  @param name Required. The name of the PublisherModel resource. Format:
 *    `publishers/{publisher}/models/{publisher_model}`
 *
 *  @return GTLRAiplatformQuery_PublishersModelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generate content with multimodal inputs with streaming support.
 *
 *  Method: aiplatform.publishers.models.streamGenerateContent
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAiplatformCloudPlatform
 *    @c kGTLRAuthScopeAiplatformCloudPlatformReadOnly
 */
@interface GTLRAiplatformQuery_PublishersModelsStreamGenerateContent : GTLRAiplatformQuery

/**
 *  Required. The fully qualified name of the publisher model or tuned model
 *  endpoint to use. Publisher model format:
 *  `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *  model endpoint format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Fetches a @c GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse.
 *
 *  Generate content with multimodal inputs with streaming support.
 *
 *  @param object The @c
 *    GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest to include in
 *    the query.
 *  @param model Required. The fully qualified name of the publisher model or
 *    tuned model endpoint to use. Publisher model format:
 *    `projects/{project}/locations/{location}/publishers/ * /models/ *` Tuned
 *    model endpoint format:
 *    `projects/{project}/locations/{location}/endpoints/{endpoint}`
 *
 *  @return GTLRAiplatformQuery_PublishersModelsStreamGenerateContent
 */
+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
