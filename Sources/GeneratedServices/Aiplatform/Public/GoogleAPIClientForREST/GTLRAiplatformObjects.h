// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Vertex AI API (aiplatform/v1)
// Description:
//   Train high-quality custom machine learning models with minimal machine
//   learning expertise and effort.
// Documentation:
//   https://cloud.google.com/vertex-ai/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAiplatform_CloudAiLargeModelsVisionImage;
@class GTLRAiplatform_CloudAiLargeModelsVisionImageRAIScores;
@class GTLRAiplatform_CloudAiLargeModelsVisionMedia;
@class GTLRAiplatform_CloudAiLargeModelsVisionNamedBoundingBox;
@class GTLRAiplatform_CloudAiLargeModelsVisionRaiInfo;
@class GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabels;
@class GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox;
@class GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity;
@class GTLRAiplatform_CloudAiLargeModelsVisionSemanticFilterResponse;
@class GTLRAiplatform_CloudAiLargeModelsVisionVideo;
@class GTLRAiplatform_GoogleApiHttpBody;
@class GTLRAiplatform_GoogleApiHttpBody_Extensions_Item;
@class GTLRAiplatform_GoogleCloudAiplatformV1ActiveLearningConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1Annotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1Annotation_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Artifact;
@class GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Metadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1Attribution;
@class GTLRAiplatform_GoogleCloudAiplatformV1AutomaticResources;
@class GTLRAiplatform_GoogleCloudAiplatformV1AutoscalingMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1AvroSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchDedicatedResources;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInputConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputInfo;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField;
@class GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1BleuInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1BleuInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1BleuMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1BleuResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1BleuSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Blob;
@class GTLRAiplatform_GoogleCloudAiplatformV1BlurBaselineConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1BoolArray;
@class GTLRAiplatform_GoogleCloudAiplatformV1Candidate;
@class GTLRAiplatform_GoogleCloudAiplatformV1Citation;
@class GTLRAiplatform_GoogleCloudAiplatformV1CitationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1CoherenceResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1CoherenceSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1CompletionStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1ContainerRegistryDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1ContainerSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Content;
@class GTLRAiplatform_GoogleCloudAiplatformV1Context;
@class GTLRAiplatform_GoogleCloudAiplatformV1Context_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Context_Metadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1CreatePipelineJobRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardRunRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1CsvDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1CsvSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1CustomJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_WebAccessUris;
@class GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataItem;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataItem_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataItemView;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_AnnotationLabels;
@class GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Dataset;
@class GTLRAiplatform_GoogleCloudAiplatformV1Dataset_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion;
@class GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexRef;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployedModelRef;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool;
@class GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest_TrafficSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1DestinationFeatureSetting;
@class GTLRAiplatform_GoogleCloudAiplatformV1DiskSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1DoubleArray;
@class GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Endpoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_TrafficSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1EntityIdSelector;
@class GTLRAiplatform_GoogleCloudAiplatformV1EntityType;
@class GTLRAiplatform_GoogleCloudAiplatformV1EntityType_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1EnvVar;
@class GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem;
@class GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotationExplanation;
@class GTLRAiplatform_GoogleCloudAiplatformV1Event;
@class GTLRAiplatform_GoogleCloudAiplatformV1Event_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Examples;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExamplesRestrictionsNamespace;
@class GTLRAiplatform_GoogleCloudAiplatformV1Execution;
@class GTLRAiplatform_GoogleCloudAiplatformV1Execution_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Execution_Metadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1Explanation;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Inputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Outputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride_Inputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationParameters;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpecOverride;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportFilterSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportFractionSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo;
@class GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequestOutputConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1Feature;
@class GTLRAiplatform_GoogleCloudAiplatformV1Feature_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQuery;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigma;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtable;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreOptimized;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureStatsAnomaly;
@class GTLRAiplatform_GoogleCloudAiplatformV1Featurestore;
@class GTLRAiplatform_GoogleCloudAiplatformV1Featurestore_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueList;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureView;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureView_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewBigQuerySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKey;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSync;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncSyncSummary;
@class GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewVertexRagSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse;
@class GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse_ProtoStruct;
@class GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList;
@class GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair;
@class GTLRAiplatform_GoogleCloudAiplatformV1FileData;
@class GTLRAiplatform_GoogleCloudAiplatformV1FilterSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQuery;
@class GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF;
@class GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors;
@class GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNeighbor;
@class GTLRAiplatform_GoogleCloudAiplatformV1FluencyInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1FluencyInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1FluencyResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1FluencySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1FractionSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall_Args;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionDeclaration;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse;
@class GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse_Response;
@class GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1GcsSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1GenieSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1GoogleSearchRetrieval;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundednessResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundednessSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunk;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkRetrievedContext;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkWeb;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundingMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1GroundingSupport;
@class GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1IdMatcher;
@class GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_AnnotationLabels;
@class GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_DataItemLabels;
@class GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Index;
@class GTLRAiplatform_GoogleCloudAiplatformV1Index_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointCrowdingTag;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointRestriction;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointSparseEmbedding;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexPrivateEndpoints;
@class GTLRAiplatform_GoogleCloudAiplatformV1IndexStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1InputDataConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1Int64Array;
@class GTLRAiplatform_GoogleCloudAiplatformV1IntegratedGradientsAttribution;
@class GTLRAiplatform_GoogleCloudAiplatformV1LargeModelReference;
@class GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultCandidate;
@class GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultTopCandidates;
@class GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ManualBatchTuningParameters;
@class GTLRAiplatform_GoogleCloudAiplatformV1Measurement;
@class GTLRAiplatform_GoogleCloudAiplatformV1MeasurementMetric;
@class GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema;
@class GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore;
@class GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreDataplexConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreMetadataStoreState;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResource;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlDataset;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlModel;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceResponse;
@class GTLRAiplatform_GoogleCloudAiplatformV1Model;
@class GTLRAiplatform_GoogleCloudAiplatformV1Model_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelBaseModelSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelContainerSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDataStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSlice;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec_Configs;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelExplanation;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelGardenSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_AttributionScoreDriftThresholds;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_DriftThresholds;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_AttributionScoreSkewThresholds;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_SkewThresholds;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelOriginalModelInfo;
@class GTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutput;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasTrial;
@class GTLRAiplatform_GoogleCloudAiplatformV1NasTrialDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQuery;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryEmbedding;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryParameters;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryStringFilter;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighbors;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError;
@class GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborsNeighbor;
@class GTLRAiplatform_GoogleCloudAiplatformV1Neighbor;
@class GTLRAiplatform_GoogleCloudAiplatformV1NetworkSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1NfsMount;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookEucConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookIdleShutdownConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplateRef;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Part;
@class GTLRAiplatform_GoogleCloudAiplatformV1PersistentDiskSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource;
@class GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_PipelineSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_InputArtifacts;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_Parameters;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_ParameterValues;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Inputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Outputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailArtifactList;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail;
@class GTLRAiplatform_GoogleCloudAiplatformV1PipelineTemplateMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Port;
@class GTLRAiplatform_GoogleCloudAiplatformV1PredefinedSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1PredictSchemata;
@class GTLRAiplatform_GoogleCloudAiplatformV1Presets;
@class GTLRAiplatform_GoogleCloudAiplatformV1PrivateEndpoints;
@class GTLRAiplatform_GoogleCloudAiplatformV1PrivateServiceConnectConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1Probe;
@class GTLRAiplatform_GoogleCloudAiplatformV1ProbeExecAction;
@class GTLRAiplatform_GoogleCloudAiplatformV1PscAutomatedEndpoints;
@class GTLRAiplatform_GoogleCloudAiplatformV1PSCAutomationConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToAction;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeploy;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences_References;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelDocumentation;
@class GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelResourceReference;
@class GTLRAiplatform_GoogleCloudAiplatformV1PythonPackageSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualitySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1RayLogsSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1RayMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1RaySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1RaySpec_ResourcePoolImages;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse_MonthlyUsageData;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData;
@class GTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourcePool;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime_AccessUris;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntimeSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ResourcesConsumed;
@class GTLRAiplatform_GoogleCloudAiplatformV1Retrieval;
@class GTLRAiplatform_GoogleCloudAiplatformV1RougeInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1RougeInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1RougeMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1RougeResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1RougeSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetyInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetyInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetyResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting;
@class GTLRAiplatform_GoogleCloudAiplatformV1SafetySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SampleConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SampledShapleyAttribution;
@class GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategy;
@class GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SavedQuery;
@class GTLRAiplatform_GoogleCloudAiplatformV1Scalar;
@class GTLRAiplatform_GoogleCloudAiplatformV1Schedule;
@class GTLRAiplatform_GoogleCloudAiplatformV1ScheduleRunResponse;
@class GTLRAiplatform_GoogleCloudAiplatformV1Scheduling;
@class GTLRAiplatform_GoogleCloudAiplatformV1Schema;
@class GTLRAiplatform_GoogleCloudAiplatformV1Schema_Properties;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaAnnotationSpecColor;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResult_Instance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextSegment;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSegment;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_DatasetConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SchemaVertex;
@class GTLRAiplatform_GoogleCloudAiplatformV1SearchEntryPoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective;
@class GTLRAiplatform_GoogleCloudAiplatformV1Segment;
@class GTLRAiplatform_GoogleCloudAiplatformV1ServiceAccountSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ShieldedVmConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SmoothGradConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool;
@class GTLRAiplatform_GoogleCloudAiplatformV1StratifiedSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1StringArray;
@class GTLRAiplatform_GoogleCloudAiplatformV1StructFieldValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1StructValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1Study;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudySpecStudyStoppingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1StudyTimeConstraint;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualitySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityResult;
@class GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbositySpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters;
@class GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution;
@class GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket;
@class GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDataStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1Tensor;
@class GTLRAiplatform_GoogleCloudAiplatformV1Tensor_StructVal;
@class GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard;
@class GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlob;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlobSequence;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTensor;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries;
@class GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1TFRecordDestination;
@class GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData;
@class GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesDataPoint;
@class GTLRAiplatform_GoogleCloudAiplatformV1TimestampSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1TokensInfo;
@class GTLRAiplatform_GoogleCloudAiplatformV1Tool;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInput;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInstance;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchResults;
@class GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1TrainingConfig;
@class GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline;
@class GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1Trial;
@class GTLRAiplatform_GoogleCloudAiplatformV1Trial_WebAccessUris;
@class GTLRAiplatform_GoogleCloudAiplatformV1TrialContext;
@class GTLRAiplatform_GoogleCloudAiplatformV1TrialParameter;
@class GTLRAiplatform_GoogleCloudAiplatformV1TunedModel;
@class GTLRAiplatform_GoogleCloudAiplatformV1TunedModelRef;
@class GTLRAiplatform_GoogleCloudAiplatformV1TuningDataStats;
@class GTLRAiplatform_GoogleCloudAiplatformV1TuningJob;
@class GTLRAiplatform_GoogleCloudAiplatformV1TuningJob_Labels;
@class GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest_TrafficSplit;
@class GTLRAiplatform_GoogleCloudAiplatformV1UnmanagedContainerModel;
@class GTLRAiplatform_GoogleCloudAiplatformV1UserActionReference;
@class GTLRAiplatform_GoogleCloudAiplatformV1Value;
@class GTLRAiplatform_GoogleCloudAiplatformV1VertexAISearch;
@class GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStore;
@class GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStoreRagResource;
@class GTLRAiplatform_GoogleCloudAiplatformV1VideoMetadata;
@class GTLRAiplatform_GoogleCloudAiplatformV1WorkerPoolSpec;
@class GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload;
@class GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload_FeatureValues;
@class GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest;
@class GTLRAiplatform_GoogleCloudAiplatformV1XraiAttribution;
@class GTLRAiplatform_GoogleCloudLocationLocation;
@class GTLRAiplatform_GoogleCloudLocationLocation_Labels;
@class GTLRAiplatform_GoogleCloudLocationLocation_Metadata;
@class GTLRAiplatform_GoogleIamV1Binding;
@class GTLRAiplatform_GoogleIamV1Policy;
@class GTLRAiplatform_GoogleLongrunningOperation;
@class GTLRAiplatform_GoogleLongrunningOperation_Metadata;
@class GTLRAiplatform_GoogleLongrunningOperation_Response;
@class GTLRAiplatform_GoogleRpcStatus;
@class GTLRAiplatform_GoogleRpcStatus_Details_Item;
@class GTLRAiplatform_GoogleTypeColor;
@class GTLRAiplatform_GoogleTypeDate;
@class GTLRAiplatform_GoogleTypeExpr;
@class GTLRAiplatform_GoogleTypeInterval;
@class GTLRAiplatform_GoogleTypeMoney;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail.errorCause

/**
 *  Cloud API not enabled.
 *
 *  Value: "CLOUD_API_NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_CloudApiNotEnabled;
/**
 *  Should never be used.
 *
 *  Value: "ERROR_CAUSE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_ErrorCauseUnspecified;
/**
 *  Project does not have enough quota.
 *
 *  Value: "INSUFFICIENT_QUOTA"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InsufficientQuota;
/**
 *  An internal error with unknown cause.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_Internal;
/**
 *  Component spec of pipeline is invalid.
 *
 *  Value: "INVALID_COMPONENT_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidComponentSpec;
/**
 *  A container spec is invalid.
 *
 *  Value: "INVALID_CONTAINER_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidContainerSpec;
/**
 *  A custom job is invalid.
 *
 *  Value: "INVALID_CUSTOM_JOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidCustomJob;
/**
 *  DagOutputsSpec is invalid.
 *
 *  Value: "INVALID_DAG_OUTPUTS_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDagOutputsSpec;
/**
 *  DagSpec is invalid.
 *
 *  Value: "INVALID_DAG_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDagSpec;
/**
 *  A deployment config is invalid.
 *
 *  Value: "INVALID_DEPLOYMENT_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDeploymentConfig;
/**
 *  A deployment spec is invalid.
 *
 *  Value: "INVALID_DEPLOYMENT_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDeploymentSpec;
/**
 *  Invalid GCS input uri
 *
 *  Value: "INVALID_GCS_INPUT_URI"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidGcsInputUri;
/**
 *  Invalid GCS output uri
 *
 *  Value: "INVALID_GCS_OUTPUT_URI"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidGcsOutputUri;
/**
 *  Importer spec is invalid.
 *
 *  Value: "INVALID_IMPORTER_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidImporterSpec;
/**
 *  An instance schema is invalid.
 *
 *  Value: "INVALID_INSTANCE_SCHEMA"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidInstanceSchema;
/**
 *  KMS setup is invalid.
 *
 *  Value: "INVALID_KMS_SETUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidKmsSetup;
/**
 *  Network setup is invalid.
 *
 *  Value: "INVALID_NETWORK_SETUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidNetworkSetup;
/**
 *  Notification email setup is invalid.
 *
 *  Value: "INVALID_NOTIFICATION_EMAIL_SETUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidNotificationEmailSetup;
/**
 *  A pipeline spec is invalid.
 *
 *  Value: "INVALID_PIPELINE_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineSpec;
/**
 *  IR Pipeline Spec can not been parsed to yaml or json format.
 *
 *  Value: "INVALID_PIPELINE_SPEC_FORMAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineSpecFormat;
/**
 *  Task artifact is invalid.
 *
 *  Value: "INVALID_PIPELINE_TASK_ARTIFACT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineTaskArtifact;
/**
 *  Task spec is invalid.
 *
 *  Value: "INVALID_PIPELINE_TASK_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineTaskSpec;
/**
 *  Resolver spec is invalid.
 *
 *  Value: "INVALID_RESOLVER_SPEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidResolverSpec;
/**
 *  Runtime Parameters are invalid.
 *
 *  Value: "INVALID_RUNTIME_PARAMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidRuntimeParameters;
/**
 *  Service account setup is invalid.
 *
 *  Value: "INVALID_SERVICE_ACCOUNT_SETUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidServiceAccountSetup;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Artifact.state

/**
 *  A state indicating that the Artifact should exist, unless something external
 *  to the system deletes it.
 *
 *  Value: "LIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_Live;
/**
 *  A state used by systems like Vertex AI Pipelines to indicate that the
 *  underlying data item represented by this Artifact is being created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_Pending;
/**
 *  Unspecified state for the Artifact.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Candidate.finishReason

/**
 *  Token generation stopped because the content contains forbidden terms.
 *
 *  Value: "BLOCKLIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Blocklist;
/**
 *  The finish reason is unspecified.
 *
 *  Value: "FINISH_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_FinishReasonUnspecified;
/**
 *  The function call generated by the model is invalid.
 *
 *  Value: "MALFORMED_FUNCTION_CALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_MalformedFunctionCall;
/**
 *  Token generation reached the configured maximum output tokens.
 *
 *  Value: "MAX_TOKENS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_MaxTokens;
/**
 *  All other reasons that stopped the token generation.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Other;
/**
 *  Token generation stopped for potentially containing prohibited content.
 *
 *  Value: "PROHIBITED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_ProhibitedContent;
/**
 *  Token generation stopped because the content potentially contains copyright
 *  violations.
 *
 *  Value: "RECITATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Recitation;
/**
 *  Token generation stopped because the content potentially contains safety
 *  violations. NOTE: When streaming, content is empty if content filters blocks
 *  the output.
 *
 *  Value: "SAFETY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Safety;
/**
 *  Token generation stopped because the content potentially contains Sensitive
 *  Personally Identifiable Information (SPII).
 *
 *  Value: "SPII"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Spii;
/**
 *  Token generation reached a natural stopping point or a configured stop
 *  sequence.
 *
 *  Value: "STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Stop;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1CustomJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation.queryType

/**
 *  Query similar samples across all classes in the dataset.
 *
 *  Value: "ALL_SIMILAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_AllSimilar;
/**
 *  Unspecified query type for model error analysis.
 *
 *  Value: "QUERY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_QueryTypeUnspecified;
/**
 *  Query dissimilar samples from the same class of the input sample.
 *
 *  Value: "SAME_CLASS_DISSIMILAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_SameClassDissimilar;
/**
 *  Query similar samples from the same class of the input sample.
 *
 *  Value: "SAME_CLASS_SIMILAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_SameClassSimilar;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation.type

/**
 *  Invalid value.
 *
 *  Value: "EVALUATED_ANNOTATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_EvaluatedAnnotationTypeUnspecified;
/**
 *  The EvaluatedAnnotation is false negative. It has a ground truth annotation
 *  which is not matched by any of the model created predictions.
 *
 *  Value: "FALSE_NEGATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_FalseNegative;
/**
 *  The EvaluatedAnnotation is false positive. It has a prediction created by
 *  the Model which does not match any ground truth annotation.
 *
 *  Value: "FALSE_POSITIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_FalsePositive;
/**
 *  The EvaluatedAnnotation is a true positive. It has a prediction created by
 *  the Model and a ground truth Annotation which the prediction matches.
 *
 *  Value: "TRUE_POSITIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_TruePositive;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Event.type

/**
 *  An input of the Execution.
 *
 *  Value: "INPUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_Input;
/**
 *  An output of the Execution.
 *
 *  Value: "OUTPUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_Output;
/**
 *  Unspecified whether input or output of the Execution.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource.dataFormat

/**
 *  Format unspecified, used when unset.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource_DataFormat_DataFormatUnspecified;
/**
 *  Examples are stored in JSONL files.
 *
 *  Value: "JSONL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource_DataFormat_Jsonl;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride.dataFormat

/**
 *  Unspecified format. Must not be used.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_DataFormatUnspecified;
/**
 *  Provided data is a set of embeddings.
 *
 *  Value: "EMBEDDINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_Embeddings;
/**
 *  Provided data is a set of model inputs.
 *
 *  Value: "INSTANCES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_Instances;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Execution.state

/**
 *  The Execution completed through Cache hit.
 *
 *  Value: "CACHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Cached;
/**
 *  The Execution was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Cancelled;
/**
 *  The Execution has finished running
 *
 *  Value: "COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Complete;
/**
 *  The Execution has failed
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Failed;
/**
 *  The Execution is new
 *
 *  Value: "NEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_New;
/**
 *  The Execution is running
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Running;
/**
 *  Unspecified Execution state
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata.encoding

/**
 *  The tensor represents a bag of features where each index maps to a feature.
 *  InputMetadata.index_feature_mapping must be provided for this encoding. For
 *  example: ``` input = [27, 6.0, 150] index_feature_mapping = ["age",
 *  "height", "weight"] ```
 *
 *  Value: "BAG_OF_FEATURES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_BagOfFeatures;
/**
 *  The tensor represents a bag of features where each index maps to a feature.
 *  Zero values in the tensor indicates feature being non-existent.
 *  InputMetadata.index_feature_mapping must be provided for this encoding. For
 *  example: ``` input = [2, 0, 5, 0, 1] index_feature_mapping = ["a", "b", "c",
 *  "d", "e"] ```
 *
 *  Value: "BAG_OF_FEATURES_SPARSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_BagOfFeaturesSparse;
/**
 *  The tensor is encoded into a 1-dimensional array represented by an encoded
 *  tensor. InputMetadata.encoded_tensor_name must be provided for this
 *  encoding. For example: ``` input = ["This", "is", "a", "test", "."] encoded
 *  = [0.1, 0.2, 0.3, 0.4, 0.5] ```
 *
 *  Value: "COMBINED_EMBEDDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_CombinedEmbedding;
/**
 *  Select this encoding when the input tensor is encoded into a 2-dimensional
 *  array represented by an encoded tensor. InputMetadata.encoded_tensor_name
 *  must be provided for this encoding. The first dimension of the encoded
 *  tensor's shape is the same as the input tensor's shape. For example: ```
 *  input = ["This", "is", "a", "test", "."] encoded = [[0.1, 0.2, 0.3, 0.4,
 *  0.5], [0.2, 0.1, 0.4, 0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5, 0.3, 0.1,
 *  0.2, 0.4], [0.4, 0.3, 0.2, 0.5, 0.1]] ```
 *
 *  Value: "CONCAT_EMBEDDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_ConcatEmbedding;
/**
 *  Default value. This is the same as IDENTITY.
 *
 *  Value: "ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_EncodingUnspecified;
/**
 *  The tensor represents one feature.
 *
 *  Value: "IDENTITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_Identity;
/**
 *  The tensor is a list of binaries representing whether a feature exists or
 *  not (1 indicates existence). InputMetadata.index_feature_mapping must be
 *  provided for this encoding. For example: ``` input = [1, 0, 1, 0, 1]
 *  index_feature_mapping = ["a", "b", "c", "d", "e"] ```
 *
 *  Value: "INDICATOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_Indicator;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization.colorMap

/**
 *  Should not be used.
 *
 *  Value: "COLOR_MAP_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_ColorMapUnspecified;
/**
 *  Positive: green. Negative: green.
 *
 *  Value: "GREEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Green;
/**
 *  Positive: green. Negative: pink.
 *
 *  Value: "PINK_GREEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_PinkGreen;
/**
 *  PiYG palette.
 *
 *  Value: "PINK_WHITE_GREEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_PinkWhiteGreen;
/**
 *  Positive: red. Negative: red.
 *
 *  Value: "RED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Red;
/**
 *  Positive: green. Negative: red.
 *
 *  Value: "RED_GREEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_RedGreen;
/**
 *  Viridis color map: A perceptually uniform color mapping which is easier to
 *  see by those with colorblindness and progresses from yellow to green to
 *  blue. Positive: yellow. Negative: blue.
 *
 *  Value: "VIRIDIS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Viridis;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization.overlayType

/**
 *  The attributions are shown on top of grayscaled version of the original
 *  image.
 *
 *  Value: "GRAYSCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_Grayscale;
/**
 *  The attributions are used as a mask to reveal predictive parts of the image
 *  and hide the un-predictive parts.
 *
 *  Value: "MASK_BLACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_MaskBlack;
/**
 *  No overlay.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_None;
/**
 *  The attributions are shown on top of the original image.
 *
 *  Value: "ORIGINAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_Original;
/**
 *  Default value. This is the same as NONE.
 *
 *  Value: "OVERLAY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_OverlayTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization.polarity

/**
 *  Shows both positive and negative attributions.
 *
 *  Value: "BOTH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Both;
/**
 *  Setting polarity to negative highlights areas that does not lead to the
 *  models's current prediction.
 *
 *  Value: "NEGATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Negative;
/**
 *  Default value. This is the same as POSITIVE.
 *
 *  Value: "POLARITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_PolarityUnspecified;
/**
 *  Highlights the pixels/outlines that were most influential to the model's
 *  prediction.
 *
 *  Value: "POSITIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Positive;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization.type

/**
 *  Shows which region contributed to the image prediction by outlining the
 *  region.
 *
 *  Value: "OUTLINES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_Outlines;
/**
 *  Shows which pixel contributed to the image prediction.
 *
 *  Value: "PIXELS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_Pixels;
/**
 *  Should not be used.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig.exportUse

/**
 *  Export for custom code training.
 *
 *  Value: "CUSTOM_CODE_TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig_ExportUse_CustomCodeTraining;
/**
 *  Regular user export.
 *
 *  Value: "EXPORT_USE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig_ExportUse_ExportUseUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Feature.valueType

/**
 *  Used for Feature that is a boolean.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Bool;
/**
 *  Used for Feature that is a list of boolean.
 *
 *  Value: "BOOL_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_BoolArray;
/**
 *  Used for Feature that is bytes.
 *
 *  Value: "BYTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Bytes;
/**
 *  Used for Feature that is double.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Double;
/**
 *  Used for Feature that is a list of double.
 *
 *  Value: "DOUBLE_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_DoubleArray;
/**
 *  Used for Feature that is INT64.
 *
 *  Value: "INT64"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Int64;
/**
 *  Used for Feature that is a list of INT64.
 *
 *  Value: "INT64_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Int64Array;
/**
 *  Used for Feature that is string.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_String;
/**
 *  Used for Feature that is a list of String.
 *
 *  Value: "STRING_ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_StringArray;
/**
 *  Used for Feature that is struct.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Struct;
/**
 *  The value type is unspecified.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_ValueTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly.objective

/**
 *  Stats are generated by Import Feature Analysis.
 *
 *  Value: "IMPORT_FEATURE_ANALYSIS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_ImportFeatureAnalysis;
/**
 *  If it's OBJECTIVE_UNSPECIFIED, monitoring_stats will be empty.
 *
 *  Value: "OBJECTIVE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_ObjectiveUnspecified;
/**
 *  Stats are generated by Snapshot Analysis.
 *
 *  Value: "SNAPSHOT_ANALYSIS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_SnapshotAnalysis;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore.state

/**
 *  State when the featureOnlineStore configuration is not being updated and the
 *  fields reflect the current configuration of the featureOnlineStore. The
 *  featureOnlineStore is usable in this state.
 *
 *  Value: "STABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_Stable;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_StateUnspecified;
/**
 *  The state of the featureOnlineStore configuration when it is being updated.
 *  During an update, the fields reflect either the original configuration or
 *  the updated configuration of the featureOnlineStore. The featureOnlineStore
 *  is still usable in this state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_Updating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Featurestore.state

/**
 *  State when the featurestore configuration is not being updated and the
 *  fields reflect the current configuration of the featurestore. The
 *  featurestore is usable in this state.
 *
 *  Value: "STABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_Stable;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_StateUnspecified;
/**
 *  The state of the featurestore configuration when it is being updated. During
 *  an update, the fields reflect either the original configuration or the
 *  updated configuration of the featurestore. For example,
 *  `online_serving_config.fixed_node_count` can take minutes to update. While
 *  the update is in progress, the featurestore is in the UPDATING state, and
 *  the value of `fixed_node_count` can be the original value or the updated
 *  value, depending on the progress of the operation. Until the update
 *  completes, the actual number of nodes can still be the original value of
 *  `fixed_node_count`. The featurestore is still usable in this state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_Updating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis.anomalyDetectionBaseline

/**
 *  Should not be used.
 *
 *  Value: "BASELINE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_BaselineUnspecified;
/**
 *  Choose the later one statistics generated by either most recent snapshot
 *  analysis or previous import features analysis. If non of them exists, skip
 *  anomaly detection and only generate a statistics.
 *
 *  Value: "LATEST_STATS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_LatestStats;
/**
 *  Use the statistics generated by the most recent snapshot analysis if exists.
 *
 *  Value: "MOST_RECENT_SNAPSHOT_STATS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_MostRecentSnapshotStats;
/**
 *  Use the statistics generated by the previous import features analysis if
 *  exists.
 *
 *  Value: "PREVIOUS_IMPORT_FEATURES_STATS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_PreviousImportFeaturesStats;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis.state

/**
 *  The default behavior of whether to enable the monitoring. EntityType-level
 *  config: disabled. Feature-level config: inherited from the configuration of
 *  EntityType this Feature belongs to.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Default;
/**
 *  Explicitly disables import features analysis. EntityType-level config: by
 *  default disables import features analysis for all Features under it.
 *  Feature-level config: disables import features analysis regardless of the
 *  EntityType-level config.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Disabled;
/**
 *  Explicitly enables import features analysis. EntityType-level config: by
 *  default enables import features analysis for all Features under it.
 *  Feature-level config: enables import features analysis regardless of the
 *  EntityType-level config.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Enabled;
/**
 *  Should not be used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig.distanceMeasureType

/**
 *  Cosine Distance. Defined as 1 - cosine similarity. We strongly suggest using
 *  DOT_PRODUCT_DISTANCE + UNIT_L2_NORM instead of COSINE distance. Our
 *  algorithms have been more optimized for DOT_PRODUCT distance which, when
 *  combined with UNIT_L2_NORM, is mathematically equivalent to COSINE distance
 *  and results in the same ranking.
 *
 *  Value: "COSINE_DISTANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_CosineDistance;
/**
 *  Should not be set.
 *
 *  Value: "DISTANCE_MEASURE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_DistanceMeasureTypeUnspecified;
/**
 *  Dot Product Distance. Defined as a negative of the dot product.
 *
 *  Value: "DOT_PRODUCT_DISTANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_DotProductDistance;
/**
 *  Euclidean (L_2) Distance.
 *
 *  Value: "SQUARED_L2_DISTANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_SquaredL2Distance;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest.dataFormat

/**
 *  Not set. Will be treated as the KeyValue format.
 *
 *  Value: "FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_FeatureViewDataFormatUnspecified;
/**
 *  Return response data in key-value format.
 *
 *  Value: "KEY_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_KeyValue;
/**
 *  Return response data in proto Struct format.
 *
 *  Value: "PROTO_STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_ProtoStruct;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig.mode

/**
 *  Model is constrained to always predicting function calls only. If
 *  "allowed_function_names" are set, the predicted function calls will be
 *  limited to any one of "allowed_function_names", else the predicted function
 *  calls will be any one of the provided "function_declarations".
 *
 *  Value: "ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_Any;
/**
 *  Default model behavior, model decides to predict either function calls or
 *  natural language response.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_Auto;
/**
 *  Unspecified function calling mode. This value should not be used.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_ModeUnspecified;
/**
 *  Model will not predict any function calls. Model behavior is same as when
 *  not passing any function declarations.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_None;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback.blockReason

/**
 *  Unspecified blocked reason.
 *
 *  Value: "BLOCKED_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_BlockedReasonUnspecified;
/**
 *  Candidates blocked due to the terms which are included from the terminology
 *  blocklist.
 *
 *  Value: "BLOCKLIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Blocklist;
/**
 *  Candidates blocked due to other reason.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Other;
/**
 *  Candidates blocked due to prohibited content.
 *
 *  Value: "PROHIBITED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_ProhibitedContent;
/**
 *  Candidates blocked due to safety.
 *
 *  Value: "SAFETY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Safety;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode.modelRoutingPreference

/**
 *  Balanced model routing preference.
 *
 *  Value: "BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_Balanced;
/**
 *  Prefer lower cost over higher quality.
 *
 *  Value: "PRIORITIZE_COST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_PrioritizeCost;
/**
 *  Prefer higher quality over low cost.
 *
 *  Value: "PRIORITIZE_QUALITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_PrioritizeQuality;
/**
 *  Unspecified model routing preference.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_Unknown;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Index.indexUpdateMethod

/**
 *  BatchUpdate: user can call UpdateIndex with files on Cloud Storage of
 *  Datapoints to update.
 *
 *  Value: "BATCH_UPDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_BatchUpdate;
/**
 *  Should not be used.
 *
 *  Value: "INDEX_UPDATE_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_IndexUpdateMethodUnspecified;
/**
 *  StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to update the
 *  Index and the updates will be applied in corresponding DeployedIndexes in
 *  nearly real-time.
 *
 *  Value: "STREAM_UPDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_StreamUpdate;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction.op

/**
 *  Datapoints are eligible iff their value is == the query's.
 *
 *  Value: "EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Equal;
/**
 *  Datapoints are eligible iff their value is > the query's.
 *
 *  Value: "GREATER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Greater;
/**
 *  Datapoints are eligible iff their value is >= the query's.
 *
 *  Value: "GREATER_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_GreaterEqual;
/**
 *  Datapoints are eligible iff their value is < the query's.
 *
 *  Value: "LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Less;
/**
 *  Datapoints are eligible iff their value is <= the query's.
 *
 *  Value: "LESS_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_LessEqual;
/**
 *  Datapoints are eligible iff their value is != the query's.
 *
 *  Value: "NOT_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_NotEqual;
/**
 *  Default value of the enum.
 *
 *  Value: "OPERATOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_OperatorUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec.acceleratorType

/**
 *  Unspecified accelerator type, which means no accelerator.
 *
 *  Value: "ACCELERATOR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_AcceleratorTypeUnspecified;
/**
 *  Nvidia A100 80GB GPU.
 *
 *  Value: "NVIDIA_A100_80GB"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaA10080gb;
/**
 *  Nvidia H100 80Gb GPU.
 *
 *  Value: "NVIDIA_H100_80GB"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaH10080gb;
/**
 *  Nvidia L4 GPU.
 *
 *  Value: "NVIDIA_L4"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaL4;
/**
 *  Nvidia Tesla A100 GPU.
 *
 *  Value: "NVIDIA_TESLA_A100"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaA100;
/**
 *  Deprecated: Nvidia Tesla K80 GPU has reached end of support, see
 *  https://cloud.google.com/compute/docs/eol/k80-eol.
 *
 *  Value: "NVIDIA_TESLA_K80"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaK80 GTLR_DEPRECATED;
/**
 *  Nvidia Tesla P100 GPU.
 *
 *  Value: "NVIDIA_TESLA_P100"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaP100;
/**
 *  Nvidia Tesla P4 GPU.
 *
 *  Value: "NVIDIA_TESLA_P4"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaP4;
/**
 *  Nvidia Tesla T4 GPU.
 *
 *  Value: "NVIDIA_TESLA_T4"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaT4;
/**
 *  Nvidia Tesla V100 GPU.
 *
 *  Value: "NVIDIA_TESLA_V100"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaV100;
/**
 *  TPU v2.
 *
 *  Value: "TPU_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV2;
/**
 *  TPU v3.
 *
 *  Value: "TPU_V3"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV3;
/**
 *  TPU v4.
 *
 *  Value: "TPU_V4_POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV4Pod;
/**
 *  TPU v5.
 *
 *  Value: "TPU_V5_LITEPOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV5Litepod;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema.schemaType

/**
 *  A type indicating that the MetadataSchema will be used by Artifacts.
 *
 *  Value: "ARTIFACT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ArtifactType;
/**
 *  A state indicating that the MetadataSchema will be used by Contexts.
 *
 *  Value: "CONTEXT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ContextType;
/**
 *  A typee indicating that the MetadataSchema will be used by Executions.
 *
 *  Value: "EXECUTION_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ExecutionType;
/**
 *  Unspecified type for the MetadataSchema.
 *
 *  Value: "METADATA_SCHEMA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_MetadataSchemaTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Model.supportedDeploymentResourcesTypes

/**
 *  Resources that to large degree are decided by Vertex AI, and require only a
 *  modest additional configuration.
 *
 *  Value: "AUTOMATIC_RESOURCES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Model_SupportedDeploymentResourcesTypes_AutomaticResources;
/**
 *  Resources that are dedicated to the DeployedModel, and that need a higher
 *  degree of manual configuration.
 *
 *  Value: "DEDICATED_RESOURCES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Model_SupportedDeploymentResourcesTypes_DedicatedResources;
/**
 *  Should not be used.
 *
 *  Value: "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Model_SupportedDeploymentResourcesTypes_DeploymentResourcesTypeUnspecified;
/**
 *  Resources that can be shared by multiple DeployedModels. A pre-configured
 *  DeploymentResourcePool is required.
 *
 *  Value: "SHARED_RESOURCES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Model_SupportedDeploymentResourcesTypes_SharedResources;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable.logSource

/**
 *  Unspecified source.
 *
 *  Value: "LOG_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_LogSourceUnspecified;
/**
 *  Logs coming from Serving traffic.
 *
 *  Value: "SERVING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_Serving;
/**
 *  Logs coming from Training dataset.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_Training;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable.logType

/**
 *  Explain logs.
 *
 *  Value: "EXPLAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_Explain;
/**
 *  Unspecified type.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_LogTypeUnspecified;
/**
 *  Predict logs.
 *
 *  Value: "PREDICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_Predict;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.scheduleState

/**
 *  Unspecified state.
 *
 *  Value: "MONITORING_SCHEDULE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_MonitoringScheduleStateUnspecified;
/**
 *  The pipeline is offline and will be scheduled for next run.
 *
 *  Value: "OFFLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Offline;
/**
 *  The pipeline is picked up and wait to run.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Pending;
/**
 *  The pipeline is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Running;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat.exportableContents

/**
 *  Model artifact and any of its supported files. Will be exported to the
 *  location specified by the `artifactDestination` field of the
 *  ExportModelRequest.output_config object.
 *
 *  Value: "ARTIFACT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat_ExportableContents_Artifact;
/**
 *  Should not be used.
 *
 *  Value: "EXPORTABLE_CONTENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat_ExportableContents_ExportableContentUnspecified;
/**
 *  The container image that is to be used when deploying this Model. Will be
 *  exported to the location specified by the `imageDestination` field of the
 *  ExportModelRequest.output_config object.
 *
 *  Value: "IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat_ExportableContents_Image;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.predictionFormat

/**
 *  Predictions are in BigQuery.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_Bigquery;
/**
 *  Predictions are in JSONL files.
 *
 *  Value: "JSONL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_Jsonl;
/**
 *  Should not be set.
 *
 *  Value: "PREDICTION_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_PredictionFormatUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies.objective

/**
 *  Feature attribution scores to detect skew between Prediction datasets
 *  collected within different time windows.
 *
 *  Value: "FEATURE_ATTRIBUTION_DRIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_FeatureAttributionDrift;
/**
 *  Feature attribution scores to detect skew between Training-Prediction
 *  datasets.
 *
 *  Value: "FEATURE_ATTRIBUTION_SKEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_FeatureAttributionSkew;
/**
 *  Default value, should not be set.
 *
 *  Value: "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_ModelDeploymentMonitoringObjectiveTypeUnspecified;
/**
 *  Raw feature values' stats to detect drift between Serving-Prediction
 *  datasets.
 *
 *  Value: "RAW_FEATURE_DRIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_RawFeatureDrift;
/**
 *  Raw feature values' stats to detect skew between Training-Prediction
 *  datasets.
 *
 *  Value: "RAW_FEATURE_SKEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_RawFeatureSkew;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo.sourceType

/**
 *  The Model is uploaded by automl training pipeline.
 *
 *  Value: "AUTOML"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Automl;
/**
 *  The Model is registered and sync'ed from BigQuery ML.
 *
 *  Value: "BQML"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Bqml;
/**
 *  The Model is uploaded by user or custom training pipeline.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Custom;
/**
 *  The Model is uploaded by text embedding finetuning pipeline.
 *
 *  Value: "CUSTOM_TEXT_EMBEDDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_CustomTextEmbedding;
/**
 *  The Model is saved or tuned from Genie.
 *
 *  Value: "GENIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Genie;
/**
 *  The Model is saved or tuned from Marketplace.
 *
 *  Value: "MARKETPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Marketplace;
/**
 *  The Model is saved or tuned from Model Garden.
 *
 *  Value: "MODEL_GARDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_ModelGarden;
/**
 *  Should not be used.
 *
 *  Value: "MODEL_SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_ModelSourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NasJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec.multiTrialAlgorithm

/**
 *  The Grid Search Algorithm for Multi-trial Neural Architecture Search (NAS).
 *
 *  Value: "GRID_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_GridSearch;
/**
 *  Defaults to `REINFORCEMENT_LEARNING`.
 *
 *  Value: "MULTI_TRIAL_ALGORITHM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_MultiTrialAlgorithmUnspecified;
/**
 *  The Reinforcement Learning Algorithm for Multi-trial Neural Architecture
 *  Search (NAS).
 *
 *  Value: "REINFORCEMENT_LEARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_ReinforcementLearning;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.goal

/**
 *  Goal Type will default to maximize.
 *
 *  Value: "GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_GoalTypeUnspecified;
/**
 *  Maximize the goal metric.
 *
 *  Value: "MAXIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_Maximize;
/**
 *  Minimize the goal metric.
 *
 *  Value: "MINIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_Minimize;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NasTrial.state

/**
 *  Indicates that the NasTrial has been suggested.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Active;
/**
 *  Indicates that the NasTrial should not be attempted again. The service will
 *  set a NasTrial to INFEASIBLE when it's done but missing the
 *  final_measurement.
 *
 *  Value: "INFEASIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Infeasible;
/**
 *  Indicates that a specific NasTrial has been requested, but it has not yet
 *  been suggested by the service.
 *
 *  Value: "REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Requested;
/**
 *  The NasTrial state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_StateUnspecified;
/**
 *  Indicates that the NasTrial should stop according to the service.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Stopping;
/**
 *  Indicates that the NasTrial is completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter.op

/**
 *  Entities are eligible if their value is == the query's.
 *
 *  Value: "EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Equal;
/**
 *  Entities are eligible if their value is > the query's.
 *
 *  Value: "GREATER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Greater;
/**
 *  Entities are eligible if their value is >= the query's.
 *
 *  Value: "GREATER_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_GreaterEqual;
/**
 *  Entities are eligible if their value is < the query's.
 *
 *  Value: "LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Less;
/**
 *  Entities are eligible if their value is <= the query's.
 *
 *  Value: "LESS_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_LessEqual;
/**
 *  Entities are eligible if their value is != the query's.
 *
 *  Value: "NOT_EQUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_NotEqual;
/**
 *  Unspecified operator.
 *
 *  Value: "OPERATOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_OperatorUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError.errorType

/**
 *  There are multiple restricts with the same `namespace` value.
 *
 *  Value: "DUPLICATE_NAMESPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_DuplicateNamespace;
/**
 *  The size of the dense embedding vectors does not match with the specified
 *  dimension.
 *
 *  Value: "EMBEDDING_SIZE_MISMATCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_EmbeddingSizeMismatch;
/**
 *  The record is empty.
 *
 *  Value: "EMPTY_LINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_EmptyLine;
/**
 *  Default, shall not be used.
 *
 *  Value: "ERROR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_ErrorTypeUnspecified;
/**
 *  Invalid avro format.
 *
 *  Value: "INVALID_AVRO_SYNTAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidAvroSyntax;
/**
 *  Invalid csv format.
 *
 *  Value: "INVALID_CSV_SYNTAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidCsvSyntax;
/**
 *  Invalid dense embedding.
 *
 *  Value: "INVALID_EMBEDDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEmbedding;
/**
 *  The embedding id is not valid.
 *
 *  Value: "INVALID_EMBEDDING_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEmbeddingId;
/**
 *  File is not in UTF_8 format.
 *
 *  Value: "INVALID_ENCODING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEncoding;
/**
 *  Invalid json format.
 *
 *  Value: "INVALID_JSON_SYNTAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidJsonSyntax;
/**
 *  Numeric restrict has invalid numeric value specified.
 *
 *  Value: "INVALID_NUMERIC_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidNumericValue;
/**
 *  Error parsing sparse dimensions field.
 *
 *  Value: "INVALID_SPARSE_DIMENSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidSparseDimensions;
/**
 *  Invalid sparse embedding.
 *
 *  Value: "INVALID_SPARSE_EMBEDDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidSparseEmbedding;
/**
 *  Token restrict value is invalid.
 *
 *  Value: "INVALID_TOKEN_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidTokenValue;
/**
 *  Numeric restrict has multiple values specified.
 *
 *  Value: "MULTIPLE_VALUES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_MultipleValues;
/**
 *  The `namespace` field is missing.
 *
 *  Value: "NAMESPACE_MISSING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_NamespaceMissing;
/**
 *  Numeric restrict has operator specified in datapoint.
 *
 *  Value: "OP_IN_DATAPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_OpInDatapoint;
/**
 *  Generic catch-all error. Only used for validation failure where the root
 *  cause cannot be easily retrieved programmatically.
 *
 *  Value: "PARSING_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_ParsingError;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob.jobState

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateUpdating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime.healthState

/**
 *  Unspecified health state.
 *
 *  Value: "HEALTH_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_HealthStateUnspecified;
/**
 *  NotebookRuntime is in healthy state. Applies to ACTIVE state.
 *
 *  Value: "HEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_Healthy;
/**
 *  NotebookRuntime is in unhealthy state. Applies to ACTIVE state.
 *
 *  Value: "UNHEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_Unhealthy;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime.notebookRuntimeType

/**
 *  Unspecified notebook runtime type, NotebookRuntimeType will default to
 *  USER_DEFINED.
 *
 *  Value: "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_NotebookRuntimeTypeUnspecified;
/**
 *  runtime or template with system defined configurations.
 *
 *  Value: "ONE_CLICK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_OneClick;
/**
 *  runtime or template with coustomized configurations from user.
 *
 *  Value: "USER_DEFINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_UserDefined;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime.runtimeState

/**
 *  NotebookRuntime is in starting state.
 *
 *  Value: "BEING_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingStarted;
/**
 *  NotebookRuntime is in stopping state.
 *
 *  Value: "BEING_STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingStopped;
/**
 *  NotebookRuntime is in upgrading state. It is in the middle of upgrading
 *  process.
 *
 *  Value: "BEING_UPGRADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingUpgraded;
/**
 *  NotebookRuntime was unable to start/stop properly.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Error;
/**
 *  NotebookRuntime is in invalid state. Cannot be recovered.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Invalid;
/**
 *  NotebookRuntime is in running state.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Running;
/**
 *  Unspecified runtime state.
 *
 *  Value: "RUNTIME_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_RuntimeStateUnspecified;
/**
 *  NotebookRuntime is in stopped state.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Stopped;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate.notebookRuntimeType

/**
 *  Unspecified notebook runtime type, NotebookRuntimeType will default to
 *  USER_DEFINED.
 *
 *  Value: "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_NotebookRuntimeTypeUnspecified;
/**
 *  runtime or template with system defined configurations.
 *
 *  Value: "ONE_CLICK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_OneClick;
/**
 *  runtime or template with coustomized configurations from user.
 *
 *  Value: "USER_DEFINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_UserDefined;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult.pairwiseChoice

/**
 *  Baseline prediction wins
 *
 *  Value: "BASELINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Baseline;
/**
 *  Candidate prediction wins
 *
 *  Value: "CANDIDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Candidate;
/**
 *  Unspecified prediction choice.
 *
 *  Value: "PAIRWISE_CHOICE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_PairwiseChoiceUnspecified;
/**
 *  Winner cannot be determined
 *
 *  Value: "TIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Tie;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult.pairwiseChoice

/**
 *  Baseline prediction wins
 *
 *  Value: "BASELINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Baseline;
/**
 *  Candidate prediction wins
 *
 *  Value: "CANDIDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Candidate;
/**
 *  Unspecified prediction choice.
 *
 *  Value: "PAIRWISE_CHOICE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_PairwiseChoiceUnspecified;
/**
 *  Winner cannot be determined
 *
 *  Value: "TIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Tie;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult.pairwiseChoice

/**
 *  Baseline prediction wins
 *
 *  Value: "BASELINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Baseline;
/**
 *  Candidate prediction wins
 *
 *  Value: "CANDIDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Candidate;
/**
 *  Unspecified prediction choice.
 *
 *  Value: "PAIRWISE_CHOICE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_PairwiseChoiceUnspecified;
/**
 *  Winner cannot be determined
 *
 *  Value: "TIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Tie;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource.state

/**
 *  The ERROR state indicates the persistent resource may be unusable. Details
 *  can be found in the `error` field.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Error;
/**
 *  The PROVISIONING state indicates the persistent resources is being created.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Provisioning;
/**
 *  The REBOOTING state indicates the persistent resource is being rebooted (PR
 *  is not available right now but is expected to be ready again later).
 *
 *  Value: "REBOOTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Rebooting;
/**
 *  The RUNNING state indicates the persistent resource is healthy and fully
 *  usable.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Running;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_StateUnspecified;
/**
 *  The STOPPING state indicates the persistent resource is being deleted.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Stopping;
/**
 *  The UPDATING state indicates the persistent resource is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Updating;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob.state

/**
 *  The pipeline has been cancelled.
 *
 *  Value: "PIPELINE_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateCancelled;
/**
 *  The pipeline is being cancelled. From this state, the pipeline may only go
 *  to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or
 *  PIPELINE_STATE_CANCELLED.
 *
 *  Value: "PIPELINE_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateCancelling;
/**
 *  The pipeline failed.
 *
 *  Value: "PIPELINE_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateFailed;
/**
 *  The pipeline has been stopped, and can be resumed.
 *
 *  Value: "PIPELINE_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStatePaused;
/**
 *  The service is preparing to run the pipeline.
 *
 *  Value: "PIPELINE_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStatePending;
/**
 *  The pipeline has been created or resumed, and processing has not yet begun.
 *
 *  Value: "PIPELINE_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateQueued;
/**
 *  The pipeline is in progress.
 *
 *  Value: "PIPELINE_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateRunning;
/**
 *  The pipeline completed successfully.
 *
 *  Value: "PIPELINE_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateSucceeded;
/**
 *  The pipeline state is unspecified.
 *
 *  Value: "PIPELINE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig.failurePolicy

/**
 *  Indicates that the pipeline should stop scheduling new tasks after a task
 *  has failed.
 *
 *  Value: "PIPELINE_FAILURE_POLICY_FAIL_FAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyFailFast;
/**
 *  Indicates that the pipeline should continue to run until all possible tasks
 *  have been scheduled and completed.
 *
 *  Value: "PIPELINE_FAILURE_POLICY_FAIL_SLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyFailSlow;
/**
 *  Default value, and follows fail slow behavior.
 *
 *  Value: "PIPELINE_FAILURE_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail.state

/**
 *  Specifies task was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Cancelled;
/**
 *  Specifies task is being cancelled.
 *
 *  Value: "CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Cancelling;
/**
 *  Specifies Task cancel is in pending state.
 *
 *  Value: "CANCEL_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_CancelPending;
/**
 *  Specifies task failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Failed;
/**
 *  Specifies that the task was not triggered because the task's trigger policy
 *  is not satisfied. The trigger policy is specified in the `condition` field
 *  of PipelineJob.pipeline_spec.
 *
 *  Value: "NOT_TRIGGERED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_NotTriggered;
/**
 *  Specifies pending state for the task.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Pending;
/**
 *  Specifies task is being executed.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Running;
/**
 *  Specifies task was skipped due to cache hit.
 *
 *  Value: "SKIPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Skipped;
/**
 *  Unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_StateUnspecified;
/**
 *  Specifies task completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus.state

/**
 *  Specifies task was cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Cancelled;
/**
 *  Specifies task is being cancelled.
 *
 *  Value: "CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Cancelling;
/**
 *  Specifies Task cancel is in pending state.
 *
 *  Value: "CANCEL_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_CancelPending;
/**
 *  Specifies task failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Failed;
/**
 *  Specifies that the task was not triggered because the task's trigger policy
 *  is not satisfied. The trigger policy is specified in the `condition` field
 *  of PipelineJob.pipeline_spec.
 *
 *  Value: "NOT_TRIGGERED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_NotTriggered;
/**
 *  Specifies pending state for the task.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Pending;
/**
 *  Specifies task is being executed.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Running;
/**
 *  Specifies task was skipped due to cache hit.
 *
 *  Value: "SKIPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Skipped;
/**
 *  Unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_StateUnspecified;
/**
 *  Specifies task completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Presets.modality

/**
 *  IMAGE modality
 *
 *  Value: "IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Image;
/**
 *  Should not be set. Added as a recommended best practice for enums
 *
 *  Value: "MODALITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_ModalityUnspecified;
/**
 *  TABULAR modality
 *
 *  Value: "TABULAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Tabular;
/**
 *  TEXT modality
 *
 *  Value: "TEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Text;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Presets.query

/**
 *  Faster response as a trade-off against less precise neighbors.
 *
 *  Value: "FAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Query_Fast;
/**
 *  More precise neighbors as a trade-off against slower response.
 *
 *  Value: "PRECISE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Query_Precise;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel.launchStage

/**
 *  Used to indicate the PublisherModel is at Experimental launch stage,
 *  available to a small set of customers.
 *
 *  Value: "EXPERIMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_Experimental;
/**
 *  Used to indicate the PublisherModel is at GA launch stage, available to all
 *  customers and ready for production workload.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_Ga;
/**
 *  The model launch stage is unspecified.
 *
 *  Value: "LAUNCH_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_LaunchStageUnspecified;
/**
 *  Used to indicate the PublisherModel is at Private Preview launch stage, only
 *  available to a small set of customers, although a larger set of customers
 *  than an Experimental launch. Previews are the first launch stage used to get
 *  feedback from customers.
 *
 *  Value: "PRIVATE_PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_PrivatePreview;
/**
 *  Used to indicate the PublisherModel is at Public Preview launch stage,
 *  available to all customers, although not supported for production workloads.
 *
 *  Value: "PUBLIC_PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_PublicPreview;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel.openSourceCategory

/**
 *  Used to indicate the PublisherModel is a Google-owned pure open source
 *  model.
 *
 *  Value: "GOOGLE_OWNED_OSS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_GoogleOwnedOss;
/**
 *  Used to indicate the PublisherModel is a Google-owned open source model w/
 *  Google checkpoint.
 *
 *  Value: "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_GoogleOwnedOssWithGoogleCheckpoint;
/**
 *  The open source category is unspecified, which should not be used.
 *
 *  Value: "OPEN_SOURCE_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_OpenSourceCategoryUnspecified;
/**
 *  Used to indicate the PublisherModel is not open sourced.
 *
 *  Value: "PROPRIETARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_Proprietary;
/**
 *  Used to indicate the PublisherModel is a 3p-owned pure open source model.
 *
 *  Value: "THIRD_PARTY_OWNED_OSS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_ThirdPartyOwnedOss;
/**
 *  Used to indicate the PublisherModel is a 3p-owned open source model w/
 *  Google checkpoint.
 *
 *  Value: "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_ThirdPartyOwnedOssWithGoogleCheckpoint;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel.versionState

/**
 *  Used to indicate the version is stable.
 *
 *  Value: "VERSION_STATE_STABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateStable;
/**
 *  The version state is unspecified.
 *
 *  Value: "VERSION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateUnspecified;
/**
 *  Used to indicate the version is unstable.
 *
 *  Value: "VERSION_STATE_UNSTABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateUnstable;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity.reservationAffinityType

/**
 *  Consume any reservation available, falling back to on-demand.
 *
 *  Value: "ANY_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_AnyReservation;
/**
 *  Do not consume from any reserved capacity, only use on-demand.
 *
 *  Value: "NO_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_NoReservation;
/**
 *  Consume from a specific reservation. When chosen, the reservation must be
 *  identified via the `key` and `values` fields.
 *
 *  Value: "SPECIFIC_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_SpecificReservation;
/**
 *  Default value. This should not be used.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating.category

/**
 *  The harm category is civic integrity.
 *
 *  Value: "HARM_CATEGORY_CIVIC_INTEGRITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryCivicIntegrity;
/**
 *  The harm category is dangerous content.
 *
 *  Value: "HARM_CATEGORY_DANGEROUS_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryDangerousContent;
/**
 *  The harm category is harassment.
 *
 *  Value: "HARM_CATEGORY_HARASSMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryHarassment;
/**
 *  The harm category is hate speech.
 *
 *  Value: "HARM_CATEGORY_HATE_SPEECH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryHateSpeech;
/**
 *  The harm category is sexually explicit content.
 *
 *  Value: "HARM_CATEGORY_SEXUALLY_EXPLICIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategorySexuallyExplicit;
/**
 *  The harm category is unspecified.
 *
 *  Value: "HARM_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating.probability

/**
 *  Harm probability unspecified.
 *
 *  Value: "HARM_PROBABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_HarmProbabilityUnspecified;
/**
 *  High level of harm.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_High;
/**
 *  Low level of harm.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Low;
/**
 *  Medium level of harm.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Medium;
/**
 *  Negligible level of harm.
 *
 *  Value: "NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Negligible;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating.severity

/**
 *  High level of harm severity.
 *
 *  Value: "HARM_SEVERITY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityHigh;
/**
 *  Low level of harm severity.
 *
 *  Value: "HARM_SEVERITY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityLow;
/**
 *  Medium level of harm severity.
 *
 *  Value: "HARM_SEVERITY_MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityMedium;
/**
 *  Negligible level of harm severity.
 *
 *  Value: "HARM_SEVERITY_NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityNegligible;
/**
 *  Harm severity unspecified.
 *
 *  Value: "HARM_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting.category

/**
 *  The harm category is civic integrity.
 *
 *  Value: "HARM_CATEGORY_CIVIC_INTEGRITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryCivicIntegrity;
/**
 *  The harm category is dangerous content.
 *
 *  Value: "HARM_CATEGORY_DANGEROUS_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryDangerousContent;
/**
 *  The harm category is harassment.
 *
 *  Value: "HARM_CATEGORY_HARASSMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryHarassment;
/**
 *  The harm category is hate speech.
 *
 *  Value: "HARM_CATEGORY_HATE_SPEECH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryHateSpeech;
/**
 *  The harm category is sexually explicit content.
 *
 *  Value: "HARM_CATEGORY_SEXUALLY_EXPLICIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategorySexuallyExplicit;
/**
 *  The harm category is unspecified.
 *
 *  Value: "HARM_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting.method

/**
 *  The harm block method is unspecified.
 *
 *  Value: "HARM_BLOCK_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_HarmBlockMethodUnspecified;
/**
 *  The harm block method uses the probability score.
 *
 *  Value: "PROBABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_Probability;
/**
 *  The harm block method uses both probability and severity scores.
 *
 *  Value: "SEVERITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_Severity;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting.threshold

/**
 *  Block low threshold and above (i.e. block more).
 *
 *  Value: "BLOCK_LOW_AND_ABOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockLowAndAbove;
/**
 *  Block medium threshold and above.
 *
 *  Value: "BLOCK_MEDIUM_AND_ABOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockMediumAndAbove;
/**
 *  Block none.
 *
 *  Value: "BLOCK_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockNone;
/**
 *  Block only high threshold (i.e. block less).
 *
 *  Value: "BLOCK_ONLY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockOnlyHigh;
/**
 *  Unspecified harm block threshold.
 *
 *  Value: "HARM_BLOCK_THRESHOLD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_HarmBlockThresholdUnspecified;
/**
 *  Turn off the safety filter.
 *
 *  Value: "OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_Off;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SampleConfig.sampleStrategy

/**
 *  Default will be treated as UNCERTAINTY.
 *
 *  Value: "SAMPLE_STRATEGY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SampleConfig_SampleStrategy_SampleStrategyUnspecified;
/**
 *  Sample the most uncertain data to label.
 *
 *  Value: "UNCERTAINTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SampleConfig_SampleStrategy_Uncertainty;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Schedule.state

/**
 *  The Schedule is active. Runs are being scheduled on the user-specified
 *  timespec.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Active;
/**
 *  The Schedule is completed. No new runs will be scheduled. Already started
 *  runs will be allowed to complete. Schedules in completed state cannot be
 *  paused or resumed.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Completed;
/**
 *  The schedule is paused. No new runs will be created until the schedule is
 *  resumed. Already started runs will be allowed to complete.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Paused;
/**
 *  Unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Scheduling.strategy

/**
 *  Flex Start strategy uses DWS to queue for resources.
 *
 *  Value: "FLEX_START"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_FlexStart;
/**
 *  Deprecated. Low cost by making potential use of spot resources.
 *
 *  Value: "LOW_COST"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_LowCost GTLR_DEPRECATED;
/**
 *  Deprecated. Regular on-demand provisioning strategy.
 *
 *  Value: "ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_OnDemand GTLR_DEPRECATED;
/**
 *  Spot provisioning strategy uses spot resources.
 *
 *  Value: "SPOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_Spot;
/**
 *  Standard provisioning strategy uses regular on-demand resources.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_Standard;
/**
 *  Strategy will default to STANDARD.
 *
 *  Value: "STRATEGY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_StrategyUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Schema.type

/**
 *  OpenAPI array type
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Array;
/**
 *  OpenAPI boolean type
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Boolean;
/**
 *  OpenAPI integer type
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Integer;
/**
 *  OpenAPI number type
 *
 *  Value: "NUMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Number;
/**
 *  OpenAPI object type
 *
 *  Value: "OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Object;
/**
 *  OpenAPI string type
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_String;
/**
 *  Not specified, should not be used.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError.status

/**
 *  The operation was aborted, typically due to a concurrency issue such as a
 *  sequencer check failure or transaction abort. See the guidelines above for
 *  deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP
 *  Mapping: 409 Conflict
 *
 *  Value: "ABORTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Aborted;
/**
 *  The entity that a client attempted to create (e.g., file or directory)
 *  already exists. HTTP Mapping: 409 Conflict
 *
 *  Value: "ALREADY_EXISTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_AlreadyExists;
/**
 *  The operation was cancelled, typically by the caller. HTTP Mapping: 499
 *  Client Closed Request
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Cancelled;
/**
 *  Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server
 *  Error
 *
 *  Value: "DATA_LOSS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_DataLoss;
/**
 *  The deadline expired before the operation could complete. For operations
 *  that change the state of the system, this error may be returned even if the
 *  operation has completed successfully. For example, a successful response
 *  from a server could have been delayed long enough for the deadline to
 *  expire. HTTP Mapping: 504 Gateway Timeout
 *
 *  Value: "DEADLINE_EXCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_DeadlineExceeded;
/**
 *  The operation was rejected because the system is not in a state required for
 *  the operation's execution. For example, the directory to be deleted is
 *  non-empty, an rmdir operation is applied to a non-directory, etc. Service
 *  implementors can use the following guidelines to decide between
 *  `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE`
 *  if the client can retry just the failing call. (b) Use `ABORTED` if the
 *  client should retry at a higher level. For example, when a client-specified
 *  test-and-set fails, indicating the client should restart a read-modify-write
 *  sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until
 *  the system state has been explicitly fixed. For example, if an "rmdir" fails
 *  because the directory is non-empty, `FAILED_PRECONDITION` should be returned
 *  since the client should not retry unless the files are deleted from the
 *  directory. HTTP Mapping: 400 Bad Request
 *
 *  Value: "FAILED_PRECONDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_FailedPrecondition;
/**
 *  Internal errors. This means that some invariants expected by the underlying
 *  system have been broken. This error code is reserved for serious errors.
 *  HTTP Mapping: 500 Internal Server Error
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Internal;
/**
 *  The client specified an invalid argument. Note that this differs from
 *  `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are
 *  problematic regardless of the state of the system (e.g., a malformed file
 *  name). HTTP Mapping: 400 Bad Request
 *
 *  Value: "INVALID_ARGUMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_InvalidArgument;
/**
 *  Some requested entity (e.g., file or directory) was not found. Note to
 *  server developers: if a request is denied for an entire class of users, such
 *  as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be
 *  used. If a request is denied for some users within a class of users, such as
 *  user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping:
 *  404 Not Found
 *
 *  Value: "NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_NotFound;
/**
 *  Not an error; returned on success. HTTP Mapping: 200 OK
 *
 *  Value: "OK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Ok;
/**
 *  The operation was attempted past the valid range. E.g., seeking or reading
 *  past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem
 *  that may be fixed if the system state changes. For example, a 32-bit file
 *  system will generate `INVALID_ARGUMENT` if asked to read at an offset that
 *  is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked
 *  to read from an offset past the current file size. There is a fair bit of
 *  overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using
 *  `OUT_OF_RANGE` (the more specific error) when it applies so that callers who
 *  are iterating through a space can easily look for an `OUT_OF_RANGE` error to
 *  detect when they are done. HTTP Mapping: 400 Bad Request
 *
 *  Value: "OUT_OF_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_OutOfRange;
/**
 *  The caller does not have permission to execute the specified operation.
 *  `PERMISSION_DENIED` must not be used for rejections caused by exhausting
 *  some resource (use `RESOURCE_EXHAUSTED` instead for those errors).
 *  `PERMISSION_DENIED` must not be used if the caller can not be identified
 *  (use `UNAUTHENTICATED` instead for those errors). This error code does not
 *  imply the request is valid or the requested entity exists or satisfies other
 *  pre-conditions. HTTP Mapping: 403 Forbidden
 *
 *  Value: "PERMISSION_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_PermissionDenied;
/**
 *  Some resource has been exhausted, perhaps a per-user quota, or perhaps the
 *  entire file system is out of space. HTTP Mapping: 429 Too Many Requests
 *
 *  Value: "RESOURCE_EXHAUSTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_ResourceExhausted;
/**
 *  The request does not have valid authentication credentials for the
 *  operation. HTTP Mapping: 401 Unauthorized
 *
 *  Value: "UNAUTHENTICATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unauthenticated;
/**
 *  The service is currently unavailable. This is most likely a transient
 *  condition, which can be corrected by retrying with a backoff. Note that it
 *  is not always safe to retry non-idempotent operations. See the guidelines
 *  above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and
 *  `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable
 *
 *  Value: "UNAVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unavailable;
/**
 *  The operation is not implemented or is not supported/enabled in this
 *  service. HTTP Mapping: 501 Not Implemented
 *
 *  Value: "UNIMPLEMENTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unimplemented;
/**
 *  Unknown error. For example, this error may be returned when a `Status` value
 *  received from another address space belongs to an error space that is not
 *  known in this address space. Also errors raised by APIs that do not return
 *  enough error information may be converted to this error. HTTP Mapping: 500
 *  Internal Server Error
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unknown;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry.type

/**
 *  Uses Vertex AI Search to check the grounding. Deprecated. Use
 *  VERTEX_AI_SEARCH instead.
 *
 *  Value: "ENTERPRISE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Enterprise GTLR_DEPRECATED;
/**
 *  Uses inline context to check the grounding.
 *
 *  Value: "INLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Inline;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Unspecified;
/**
 *  Uses Vertex AI Search to check the grounding
 *
 *  Value: "VERTEX_AI_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_VertexAiSearch;
/**
 *  Uses Web Search to check the grounding.
 *
 *  Value: "WEB"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Web;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.modelType

/**
 *  A Model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Default.
 *
 *  Value: "CLOUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Cloud;
/**
 *  A model type best tailored to be used within Google Cloud, which cannot be
 *  exported externally. Compared to the CLOUD model above, it is expected to
 *  have higher prediction accuracy.
 *
 *  Value: "CLOUD_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Cloud1;
/**
 *  CoCa model for Model Garden training with customizable hyperparameters. Best
 *  tailored to be used within Google Cloud, and cannot be exported externally.
 *
 *  Value: "COCA"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Coca;
/**
 *  EfficientNet model for Model Garden training with customizable
 *  hyperparameters. Best tailored to be used within Google Cloud, and cannot be
 *  exported externally.
 *
 *  Value: "EFFICIENTNET"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Efficientnet;
/**
 *  MaxViT model for Model Garden training with customizable hyperparameters.
 *  Best tailored to be used within Google Cloud, and cannot be exported
 *  externally.
 *
 *  Value: "MAXVIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Maxvit;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as TensorFlow or Core ML model
 *  and used on a mobile or edge device afterwards. Expected to have a higher
 *  latency, but should also have a higher prediction quality than other mobile
 *  models.
 *
 *  Value: "MOBILE_TF_HIGH_ACCURACY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfHighAccuracy1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as TensorFlow or Core ML model
 *  and used on a mobile or edge device afterwards. Expected to have low
 *  latency, but may have lower prediction quality than other mobile models.
 *
 *  Value: "MOBILE_TF_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfLowLatency1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as TensorFlow or Core ML model
 *  and used on a mobile or edge device with afterwards.
 *
 *  Value: "MOBILE_TF_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfVersatile1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_ModelTypeUnspecified;
/**
 *  ViT model for Model Garden training with customizable hyperparameters. Best
 *  tailored to be used within Google Cloud, and cannot be exported externally.
 *
 *  Value: "VIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Vit;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata.successfulStopReason

/**
 *  The inputs.budgetMilliNodeHours had been reached.
 *
 *  Value: "BUDGET_REACHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_BudgetReached;
/**
 *  Further training of the Model ceased to increase its quality, since it
 *  already has converged.
 *
 *  Value: "MODEL_CONVERGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_ModelConverged;
/**
 *  Should not be set.
 *
 *  Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.modelType

/**
 *  A model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Compared to the CLOUD_HIGH_ACCURACY_1 and CLOUD_LOW_LATENCY_1
 *  models above, it is expected to have higher prediction quality and lower
 *  latency.
 *
 *  Value: "CLOUD_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Cloud1;
/**
 *  A model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Expected to have a higher latency, but should also have a higher
 *  prediction quality than other cloud models.
 *
 *  Value: "CLOUD_HIGH_ACCURACY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudHighAccuracy1;
/**
 *  A model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Expected to have a low latency, but may have lower prediction
 *  quality than other cloud models.
 *
 *  Value: "CLOUD_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudLowLatency1;
/**
 *  A model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Expected to best support predictions in streaming with lower
 *  latency and lower prediction quality than other cloud models.
 *
 *  Value: "CLOUD_STREAMING_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudStreaming1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) and used on a mobile or edge
 *  device with TensorFlow afterwards. Expected to have a higher latency, but
 *  should also have a higher prediction quality than other mobile models.
 *
 *  Value: "MOBILE_TF_HIGH_ACCURACY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfHighAccuracy1;
/**
 *  A model that, in addition to being available within Google Cloud can also be
 *  exported (see ModelService.ExportModel) and used on a mobile or edge device
 *  with TensorFlow afterwards. Expected to have low latency, but may have lower
 *  prediction quality than other mobile models.
 *
 *  Value: "MOBILE_TF_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfLowLatency1;
/**
 *  A model that, in addition to being available within Google Cloud can also be
 *  exported (see ModelService.ExportModel) and used on a mobile or edge device
 *  with TensorFlow afterwards.
 *
 *  Value: "MOBILE_TF_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfVersatile1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_ModelTypeUnspecified;
/**
 *  SpineNet for Model Garden training with customizable hyperparameters. Best
 *  tailored to be used within Google Cloud, and cannot be exported externally.
 *
 *  Value: "SPINENET"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Spinenet;
/**
 *  YOLO for Model Garden training with customizable hyperparameters. Best
 *  tailored to be used within Google Cloud, and cannot be exported externally.
 *
 *  Value: "YOLO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Yolo;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata.successfulStopReason

/**
 *  The inputs.budgetMilliNodeHours had been reached.
 *
 *  Value: "BUDGET_REACHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_BudgetReached;
/**
 *  Further training of the Model ceased to increase its quality, since it
 *  already has converged.
 *
 *  Value: "MODEL_CONVERGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_ModelConverged;
/**
 *  Should not be set.
 *
 *  Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.modelType

/**
 *  A model to be used via prediction calls to uCAIP API. Expected to have a
 *  higher latency, but should also have a higher prediction quality than other
 *  models.
 *
 *  Value: "CLOUD_HIGH_ACCURACY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_CloudHighAccuracy1;
/**
 *  A model to be used via prediction calls to uCAIP API. Expected to have a
 *  lower latency but relatively lower prediction quality.
 *
 *  Value: "CLOUD_LOW_ACCURACY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_CloudLowAccuracy1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as TensorFlow model and used on a
 *  mobile or edge device afterwards. Expected to have low latency, but may have
 *  lower prediction quality than other mobile models.
 *
 *  Value: "MOBILE_TF_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_MobileTfLowLatency1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_ModelTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata.successfulStopReason

/**
 *  The inputs.budgetMilliNodeHours had been reached.
 *
 *  Value: "BUDGET_REACHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_BudgetReached;
/**
 *  Further training of the Model ceased to increase its quality, since it
 *  already has converged.
 *
 *  Value: "MODEL_CONVERGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_ModelConverged;
/**
 *  Should not be set.
 *
 *  Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.trainerType

/** Value: "AUTOML_TRAINER" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_AutomlTrainer;
/** Value: "MODEL_GARDEN_TRAINER" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_ModelGardenTrainer;
/**
 *  Default value.
 *
 *  Value: "TRAINER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_TrainerTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs.modelType

/**
 *  A model best tailored to be used within Google Cloud, and which c annot be
 *  exported. Default.
 *
 *  Value: "CLOUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_Cloud;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow
 *  Lite model and used on a Coral device afterwards.
 *
 *  Value: "MOBILE_CORAL_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileCoralVersatile1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) to a Jetson device afterwards.
 *
 *  Value: "MOBILE_JETSON_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileJetsonVersatile1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow
 *  Lite model and used on a mobile or edge device afterwards.
 *
 *  Value: "MOBILE_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileVersatile1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_ModelTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs.modelType

/**
 *  A model best tailored to be used within Google Cloud, and which cannot be
 *  exported. Default.
 *
 *  Value: "CLOUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_Cloud;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) to a Jetson device afterwards.
 *
 *  Value: "MOBILE_JETSON_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_MobileJetsonVersatile1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow
 *  Lite model and used on a mobile or edge device afterwards.
 *
 *  Value: "MOBILE_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_MobileVersatile1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_ModelTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs.modelType

/**
 *  A model best tailored to be used within Google Cloud, and which c annot be
 *  exported. Default.
 *
 *  Value: "CLOUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_Cloud;
/**
 *  A model that trades off quality for low latency, to be exported (see
 *  ModelService.ExportModel) and used on a Google Coral device.
 *
 *  Value: "MOBILE_CORAL_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileCoralLowLatency1;
/**
 *  A versatile model that is meant to be exported (see
 *  ModelService.ExportModel) and used on a Google Coral device.
 *
 *  Value: "MOBILE_CORAL_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileCoralVersatile1;
/**
 *  A model that trades off quality for low latency, to be exported (see
 *  ModelService.ExportModel) and used on an NVIDIA Jetson device.
 *
 *  Value: "MOBILE_JETSON_LOW_LATENCY_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileJetsonLowLatency1;
/**
 *  A versatile model that is meant to be exported (see
 *  ModelService.ExportModel) and used on an NVIDIA Jetson device.
 *
 *  Value: "MOBILE_JETSON_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileJetsonVersatile1;
/**
 *  A model that, in addition to being available within Google Cloud, can also
 *  be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow
 *  Lite model and used on a mobile or edge device afterwards.
 *
 *  Value: "MOBILE_VERSATILE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileVersatile1;
/**
 *  Should not be set.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_ModelTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective.type

/**
 *  Feature attribution scores to detect skew between Prediction datasets
 *  collected within different time windows.
 *
 *  Value: "FEATURE_ATTRIBUTION_DRIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_FeatureAttributionDrift;
/**
 *  Feature attribution scores to detect skew between Training-Prediction
 *  datasets.
 *
 *  Value: "FEATURE_ATTRIBUTION_SKEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_FeatureAttributionSkew;
/**
 *  Default value, should not be set.
 *
 *  Value: "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_ModelDeploymentMonitoringObjectiveTypeUnspecified;
/**
 *  Raw feature values' stats to detect drift between Serving-Prediction
 *  datasets.
 *
 *  Value: "RAW_FEATURE_DRIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_RawFeatureDrift;
/**
 *  Raw feature values' stats to detect skew between Training-Prediction
 *  datasets.
 *
 *  Value: "RAW_FEATURE_SKEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_RawFeatureSkew;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Study.state

/**
 *  The study is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Active;
/**
 *  The study is done when the service exhausts the parameter search space or
 *  max_trial_count is reached.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Completed;
/**
 *  The study is stopped due to an internal error.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Inactive;
/**
 *  The study state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1StudySpec.algorithm

/**
 *  The default algorithm used by Vertex AI for [hyperparameter
 *  tuning](https://cloud.google.com/vertex-ai/docs/training/hyperparameter-tuning-overview)
 *  and [Vertex AI Vizier](https://cloud.google.com/vertex-ai/docs/vizier).
 *
 *  Value: "ALGORITHM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_AlgorithmUnspecified;
/**
 *  Simple grid search within the feasible space. To use grid search, all
 *  parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.
 *
 *  Value: "GRID_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_GridSearch;
/**
 *  Simple random search within the feasible space.
 *
 *  Value: "RANDOM_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_RandomSearch;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1StudySpec.measurementSelectionType

/**
 *  Use the best measurement reported.
 *
 *  Value: "BEST_MEASUREMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_BestMeasurement;
/**
 *  Use the last measurement reported.
 *
 *  Value: "LAST_MEASUREMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_LastMeasurement;
/**
 *  Will be treated as LAST_MEASUREMENT.
 *
 *  Value: "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_MeasurementSelectionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1StudySpec.observationNoise

/**
 *  Vertex AI will estimate the amount of noise in metric evaluations, it may
 *  repeat the same Trial parameters more than once.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_High;
/**
 *  Vertex AI assumes that the objective function is (nearly) perfectly
 *  reproducible, and will never repeat the same Trial parameters.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_Low;
/**
 *  The default noise level chosen by Vertex AI.
 *
 *  Value: "OBSERVATION_NOISE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_ObservationNoiseUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec.goal

/**
 *  Goal Type will default to maximize.
 *
 *  Value: "GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_GoalTypeUnspecified;
/**
 *  Maximize the goal metric.
 *
 *  Value: "MAXIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_Maximize;
/**
 *  Minimize the goal metric.
 *
 *  Value: "MINIMIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_Minimize;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec.scaleType

/**
 *  By default, no scaling is applied.
 *
 *  Value: "SCALE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_ScaleTypeUnspecified;
/**
 *  Scales the feasible space to (0, 1) linearly.
 *
 *  Value: "UNIT_LINEAR_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitLinearScale;
/**
 *  Scales the feasible space logarithmically to (0, 1). The entire feasible
 *  space must be strictly positive.
 *
 *  Value: "UNIT_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitLogScale;
/**
 *  Scales the feasible space "reverse" logarithmically to (0, 1). The result is
 *  that values close to the top of the feasible space are spread out more than
 *  points near the bottom. The entire feasible space must be strictly positive.
 *
 *  Value: "UNIT_REVERSE_LOG_SCALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitReverseLogScale;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse.studyState

/**
 *  The study is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Active;
/**
 *  The study is done when the service exhausts the parameter search space or
 *  max_trial_count is reached.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Completed;
/**
 *  The study is stopped due to an internal error.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Inactive;
/**
 *  The study state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters.adapterSize

/**
 *  Adapter size 8.
 *
 *  Value: "ADAPTER_SIZE_EIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeEight;
/**
 *  Adapter size 4.
 *
 *  Value: "ADAPTER_SIZE_FOUR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeFour;
/**
 *  Adapter size 1.
 *
 *  Value: "ADAPTER_SIZE_ONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeOne;
/**
 *  Adapter size 16.
 *
 *  Value: "ADAPTER_SIZE_SIXTEEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeSixteen;
/**
 *  Adapter size 32.
 *
 *  Value: "ADAPTER_SIZE_THIRTY_TWO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeThirtyTwo;
/**
 *  Adapter size is unspecified.
 *
 *  Value: "ADAPTER_SIZE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Tensor.dtype

/**
 *  Data types that all computation devices are expected to be capable to
 *  support.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Bool;
/**
 *  Not a legal value for DataType. Used to indicate a DataType field has not
 *  been set.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_DataTypeUnspecified;
/** Value: "DOUBLE" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Double;
/** Value: "FLOAT" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Float;
/** Value: "INT16" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int16;
/** Value: "INT32" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int32;
/** Value: "INT64" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int64;
/** Value: "INT8" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int8;
/** Value: "STRING" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_String;
/** Value: "UINT16" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint16;
/** Value: "UINT32" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint32;
/** Value: "UINT64" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint64;
/** Value: "UINT8" */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint8;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries.valueType

/**
 *  Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of
 *  sample images with labels over epochs/time.
 *
 *  Value: "BLOB_SEQUENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_BlobSequence;
/**
 *  Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a
 *  model over epochs/time.
 *
 *  Value: "SCALAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_Scalar;
/**
 *  Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of
 *  weights of layer in a model over epoch/time.
 *
 *  Value: "TENSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_Tensor;
/**
 *  The value type is unspecified.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_ValueTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData.valueType

/**
 *  Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of
 *  sample images with labels over epochs/time.
 *
 *  Value: "BLOB_SEQUENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_BlobSequence;
/**
 *  Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a
 *  model over epochs/time.
 *
 *  Value: "SCALAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_Scalar;
/**
 *  Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of
 *  weights of layer in a model over epoch/time.
 *
 *  Value: "TENSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_Tensor;
/**
 *  The value type is unspecified.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_ValueTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline.state

/**
 *  The pipeline has been cancelled.
 *
 *  Value: "PIPELINE_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateCancelled;
/**
 *  The pipeline is being cancelled. From this state, the pipeline may only go
 *  to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or
 *  PIPELINE_STATE_CANCELLED.
 *
 *  Value: "PIPELINE_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateCancelling;
/**
 *  The pipeline failed.
 *
 *  Value: "PIPELINE_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateFailed;
/**
 *  The pipeline has been stopped, and can be resumed.
 *
 *  Value: "PIPELINE_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStatePaused;
/**
 *  The service is preparing to run the pipeline.
 *
 *  Value: "PIPELINE_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStatePending;
/**
 *  The pipeline has been created or resumed, and processing has not yet begun.
 *
 *  Value: "PIPELINE_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateQueued;
/**
 *  The pipeline is in progress.
 *
 *  Value: "PIPELINE_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateRunning;
/**
 *  The pipeline completed successfully.
 *
 *  Value: "PIPELINE_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateSucceeded;
/**
 *  The pipeline state is unspecified.
 *
 *  Value: "PIPELINE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1Trial.state

/**
 *  Indicates that the Trial has been suggested.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Active;
/**
 *  Indicates that the Trial should not be attempted again. The service will set
 *  a Trial to INFEASIBLE when it's done but missing the final_measurement.
 *
 *  Value: "INFEASIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Infeasible;
/**
 *  Indicates that a specific Trial has been requested, but it has not yet been
 *  suggested by the service.
 *
 *  Value: "REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Requested;
/**
 *  The Trial state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_StateUnspecified;
/**
 *  Indicates that the Trial should stop according to the service.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Stopping;
/**
 *  Indicates that the Trial is completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRAiplatform_GoogleCloudAiplatformV1TuningJob.state

/**
 *  The job has been cancelled.
 *
 *  Value: "JOB_STATE_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateCancelled;
/**
 *  The job is being cancelled. From this state the job may only go to either
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 *
 *  Value: "JOB_STATE_CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateCancelling;
/**
 *  The job has expired.
 *
 *  Value: "JOB_STATE_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateExpired;
/**
 *  The job failed.
 *
 *  Value: "JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateFailed;
/**
 *  The job is partially succeeded, some results may be missing due to errors.
 *
 *  Value: "JOB_STATE_PARTIALLY_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePartiallySucceeded;
/**
 *  The job has been stopped, and can be resumed.
 *
 *  Value: "JOB_STATE_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePaused;
/**
 *  The service is preparing to run the job.
 *
 *  Value: "JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePending;
/**
 *  The job has been just created or resumed and processing has not yet begun.
 *
 *  Value: "JOB_STATE_QUEUED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateQueued;
/**
 *  The job is in progress.
 *
 *  Value: "JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateRunning;
/**
 *  The job completed successfully.
 *
 *  Value: "JOB_STATE_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateSucceeded;
/**
 *  The job state is unspecified.
 *
 *  Value: "JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateUnspecified;
/**
 *  The job is being updated. Only jobs in the `RUNNING` state can be updated.
 *  After updating, the job goes back to the `RUNNING` state.
 *
 *  Value: "JOB_STATE_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateUpdating;

/**
 *  Generate video response.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionGenerateVideoResponse : GTLRObject

/** The generates samples. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_CloudAiLargeModelsVisionMedia *> *generatedSamples;

/**
 *  Returns if any videos were filtered due to RAI policies.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *raiMediaFilteredCount;

/** Returns rai failure reasons if any. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *raiMediaFilteredReasons;

@end


/**
 *  Image.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionImage : GTLRObject

/** Image encoding, encoded as "image/png" or "image/jpg". */
@property(nonatomic, copy, nullable) NSString *encoding;

/**
 *  Generation seed for the sampled image. This parameter is exposed to the user
 *  only if one of the following is true: 1. The user specified per-example
 *  seeds in the request. 2. The user doesn't specify the generation seed in the
 *  request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *generationSeed;

/**
 *  Raw bytes.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *image;

/** RAI scores for generated image. */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionImageRAIScores *imageRaiScores;

/** RAI info for image. */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionRaiInfo *raiInfo;

/** Semantic filter info for image. */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionSemanticFilterResponse *semanticFilterResponse;

/** Text/Expanded text input for imagen. */
@property(nonatomic, copy, nullable) NSString *text;

/** Path to another storage (typically Google Cloud Storage). */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  RAI scores for generated image returned.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionImageRAIScores : GTLRObject

/**
 *  Agile watermark score for image.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *agileWatermarkDetectionScore;

@end


/**
 *  Media.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionMedia : GTLRObject

/** Image. */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionImage *image;

/** Video */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionVideo *video;

@end


/**
 *  GTLRAiplatform_CloudAiLargeModelsVisionNamedBoundingBox
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionNamedBoundingBox : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *classes;
@property(nonatomic, strong, nullable) NSArray<NSString *> *entities;

/**
 *  scores
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *scores;

/**
 *  x1
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x1;

/**
 *  x2
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x2;

/**
 *  y1
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y1;

/**
 *  y2
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y2;

@end


/**
 *  Next ID: 6
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionRaiInfo : GTLRObject

/** List of blocked entities from the blocklist if it is detected. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *blockedEntities;

/** The list of detected labels for different rai categories. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabels *> *detectedLabels;

/**
 *  The model name used to indexing into the RaiFilterConfig map. Would either
 *  be one of imagegeneration\@002-006, imagen-3.0-... api endpoint names, or
 *  internal names used for mapping to different filter configs (genselfie,
 *  ai_watermark) than its api endpoint.
 */
@property(nonatomic, copy, nullable) NSString *modelName;

/** List of rai categories' information to return */
@property(nonatomic, strong, nullable) NSArray<NSString *> *raiCategories;

/**
 *  List of rai scores mapping to the rai categories. Rounded to 1 decimal
 *  place.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *scores;

@end


/**
 *  Filters returning list of deteceted labels, scores, and bounding boxes.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabels : GTLRObject

/** The list of detected entities for the rai signal. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity *> *entities;

/** The RAI category for the deteceted labels. */
@property(nonatomic, copy, nullable) NSString *raiCategory;

@end


/**
 *  An integer bounding box of original pixels of the image for the detected
 *  labels.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox : GTLRObject

/**
 *  The X coordinate of the top-left corner, in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x1;

/**
 *  The X coordinate of the bottom-right corner, in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x2;

/**
 *  The Y coordinate of the top-left corner, in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y1;

/**
 *  The Y coordinate of the bottom-right corner, in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y2;

@end


/**
 *  The properties for a detected entity from the rai signal.
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity : GTLRObject

/** Bounding box of the label */
@property(nonatomic, strong, nullable) GTLRAiplatform_CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox *boundingBox;

/**
 *  Description of the label
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The intersection ratio between the detection bounding box and the mask.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iouScore;

/** MID of the label */
@property(nonatomic, copy, nullable) NSString *mid;

/**
 *  Confidence score of the label
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  GTLRAiplatform_CloudAiLargeModelsVisionSemanticFilterResponse
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionSemanticFilterResponse : GTLRObject

/**
 *  Class labels of the bounding boxes that failed the semantic filtering.
 *  Bounding box coordinates.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_CloudAiLargeModelsVisionNamedBoundingBox *> *namedBoundingBoxes;

/**
 *  This response is added when semantic filter config is turned on in
 *  EditConfig. It reports if this image is passed semantic filter response. If
 *  passed_semantic_filter is false, the bounding box information will be
 *  populated for user to check what caused the semantic filter to fail.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *passedSemanticFilter;

@end


/**
 *  Video
 */
@interface GTLRAiplatform_CloudAiLargeModelsVisionVideo : GTLRObject

/** Path to another storage (typically Google Cloud Storage). */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Raw bytes.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *video;

@end


/**
 *  Create API error message for Vertex Pipeline. Next Id: 3.
 */
@interface GTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail : GTLRObject

/**
 *  The error root cause returned by CreatePipelineJob API.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_CloudApiNotEnabled
 *        Cloud API not enabled. (Value: "CLOUD_API_NOT_ENABLED")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_ErrorCauseUnspecified
 *        Should never be used. (Value: "ERROR_CAUSE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InsufficientQuota
 *        Project does not have enough quota. (Value: "INSUFFICIENT_QUOTA")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_Internal
 *        An internal error with unknown cause. (Value: "INTERNAL")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidComponentSpec
 *        Component spec of pipeline is invalid. (Value:
 *        "INVALID_COMPONENT_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidContainerSpec
 *        A container spec is invalid. (Value: "INVALID_CONTAINER_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidCustomJob
 *        A custom job is invalid. (Value: "INVALID_CUSTOM_JOB")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDagOutputsSpec
 *        DagOutputsSpec is invalid. (Value: "INVALID_DAG_OUTPUTS_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDagSpec
 *        DagSpec is invalid. (Value: "INVALID_DAG_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDeploymentConfig
 *        A deployment config is invalid. (Value: "INVALID_DEPLOYMENT_CONFIG")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidDeploymentSpec
 *        A deployment spec is invalid. (Value: "INVALID_DEPLOYMENT_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidGcsInputUri
 *        Invalid GCS input uri (Value: "INVALID_GCS_INPUT_URI")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidGcsOutputUri
 *        Invalid GCS output uri (Value: "INVALID_GCS_OUTPUT_URI")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidImporterSpec
 *        Importer spec is invalid. (Value: "INVALID_IMPORTER_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidInstanceSchema
 *        An instance schema is invalid. (Value: "INVALID_INSTANCE_SCHEMA")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidKmsSetup
 *        KMS setup is invalid. (Value: "INVALID_KMS_SETUP")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidNetworkSetup
 *        Network setup is invalid. (Value: "INVALID_NETWORK_SETUP")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidNotificationEmailSetup
 *        Notification email setup is invalid. (Value:
 *        "INVALID_NOTIFICATION_EMAIL_SETUP")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineSpec
 *        A pipeline spec is invalid. (Value: "INVALID_PIPELINE_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineSpecFormat
 *        IR Pipeline Spec can not been parsed to yaml or json format. (Value:
 *        "INVALID_PIPELINE_SPEC_FORMAT")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineTaskArtifact
 *        Task artifact is invalid. (Value: "INVALID_PIPELINE_TASK_ARTIFACT")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidPipelineTaskSpec
 *        Task spec is invalid. (Value: "INVALID_PIPELINE_TASK_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidResolverSpec
 *        Resolver spec is invalid. (Value: "INVALID_RESOLVER_SPEC")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidRuntimeParameters
 *        Runtime Parameters are invalid. (Value: "INVALID_RUNTIME_PARAMETERS")
 *    @arg @c kGTLRAiplatform_CloudAiPlatformCommonCreatePipelineJobApiErrorDetail_ErrorCause_InvalidServiceAccountSetup
 *        Service account setup is invalid. (Value:
 *        "INVALID_SERVICE_ACCOUNT_SETUP")
 */
@property(nonatomic, copy, nullable) NSString *errorCause;

/** Public messages contains actionable items for the error cause. */
@property(nonatomic, copy, nullable) NSString *publicMessage;

@end


/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRAiplatform_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRAiplatform_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  Parameters that configure the active learning pipeline. Active learning will
 *  label the data incrementally by several iterations. For every iteration, it
 *  will select a batch of data based on the sampling strategy.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ActiveLearningConfig : GTLRObject

/**
 *  Max number of human labeled DataItems.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDataItemCount;

/**
 *  Max percent of total DataItems for human labeling.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDataItemPercentage;

/**
 *  Active learning data sampling config. For every active learning labeling
 *  iteration, it will select a batch of data based on the sampling strategy.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SampleConfig *sampleConfig;

/**
 *  CMLE training config. For every active learning labeling iteration, system
 *  will train a machine learning model on CMLE. The trained model will be used
 *  by data sampling algorithm to select DataItems.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TrainingConfig *trainingConfig;

@end


/**
 *  Request message for MetadataService.AddContextArtifactsAndExecutions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest : GTLRObject

/**
 *  The resource names of the Artifacts to attribute to the Context. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *artifacts;

/**
 *  The resource names of the Executions to associate with the Context. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *executions;

@end


/**
 *  Response message for MetadataService.AddContextArtifactsAndExecutions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse : GTLRObject
@end


/**
 *  Request message for MetadataService.AddContextChildren.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenRequest : GTLRObject

/** The resource names of the child Contexts. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *childContexts;

@end


/**
 *  Response message for MetadataService.AddContextChildren.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenResponse : GTLRObject
@end


/**
 *  Request message for MetadataService.AddExecutionEvents.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsRequest : GTLRObject

/** The Events to create and add. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Event *> *events;

@end


/**
 *  Response message for MetadataService.AddExecutionEvents.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsResponse : GTLRObject
@end


/**
 *  Request message for VizierService.AddTrialMeasurement.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AddTrialMeasurementRequest : GTLRObject

/** Required. The measurement to be added to a Trial. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Measurement *measurement;

@end


/**
 *  Used to assign specific AnnotationSpec to a particular area of a DataItem or
 *  the whole part of the DataItem.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Annotation : GTLRObject

/** Output only. The source of the Annotation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1UserActionReference *annotationSource;

/** Output only. Timestamp when this Annotation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  Annotations. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed. No
 *  more than 64 user labels can be associated with one Annotation(System labels
 *  are excluded). See https://goo.gl/xmQnxf for more information and examples
 *  of labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable. Following system labels
 *  exist for each Annotation: *
 *  "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's
 *  annotation set this Annotation belongs to. If not set, the Annotation is not
 *  visible in the UI. * "aiplatform.googleapis.com/payload_schema": output
 *  only, its value is the payload_schema's title.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Annotation_Labels *labels;

/** Output only. Resource name of the Annotation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The schema of the payload can be found in payload_schema.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id payload;

/**
 *  Required. Google Cloud Storage URI points to a YAML file describing payload.
 *  The schema is defined as an [OpenAPI 3.0.2 Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  The schema files that can be used here are found in
 *  gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the
 *  chosen schema must be consistent with the parent Dataset's metadata.
 */
@property(nonatomic, copy, nullable) NSString *payloadSchemaUri;

/** Output only. Timestamp when this Annotation was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  Annotations. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed. No
 *  more than 64 user labels can be associated with one Annotation(System labels
 *  are excluded). See https://goo.gl/xmQnxf for more information and examples
 *  of labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable. Following system labels
 *  exist for each Annotation: *
 *  "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's
 *  annotation set this Annotation belongs to. If not set, the Annotation is not
 *  visible in the UI. * "aiplatform.googleapis.com/payload_schema": output
 *  only, its value is the payload_schema's title.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Annotation_Labels : GTLRObject
@end


/**
 *  Identifies a concept with which DataItems may be annotated with.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AnnotationSpec : GTLRObject

/** Output only. Timestamp when this AnnotationSpec was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The user-defined name of the AnnotationSpec. The name can be up to
 *  128 characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Output only. Resource name of the AnnotationSpec. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Timestamp when AnnotationSpec was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Instance of a general artifact.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Artifact : GTLRObject

/** Output only. Timestamp when this Artifact was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the Artifact
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  User provided display name of the Artifact. May be up to 128 Unicode
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  An eTag used to perform consistent read-modify-write updates. If not set, a
 *  blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your Artifacts. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Artifact (System labels are excluded).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Labels *labels;

/**
 *  Properties of the Artifact. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Metadata *metadata;

/** Output only. The resource name of the Artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The title of the schema describing the metadata. Schema title and version is
 *  expected to be registered in earlier Create Schema calls. And both are used
 *  together as unique identifiers to identify schemas within the local metadata
 *  store.
 */
@property(nonatomic, copy, nullable) NSString *schemaTitle;

/**
 *  The version of the schema in schema_name to use. Schema title and version is
 *  expected to be registered in earlier Create Schema calls. And both are used
 *  together as unique identifiers to identify schemas within the local metadata
 *  store.
 */
@property(nonatomic, copy, nullable) NSString *schemaVersion;

/**
 *  The state of this Artifact. This is a property of the Artifact, and does not
 *  imply or capture any ongoing process. This property is managed by clients
 *  (such as Vertex AI Pipelines), and the system does not prescribe or check
 *  the validity of state transitions.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_Live A state
 *        indicating that the Artifact should exist, unless something external
 *        to the system deletes it. (Value: "LIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_Pending A
 *        state used by systems like Vertex AI Pipelines to indicate that the
 *        underlying data item represented by this Artifact is being created.
 *        (Value: "PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Artifact_State_StateUnspecified
 *        Unspecified state for the Artifact. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when this Artifact was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  The uniform resource identifier of the artifact file. May be empty if there
 *  is no actual artifact file.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The labels with user-defined metadata to organize your Artifacts. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Artifact (System labels are excluded).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Labels : GTLRObject
@end


/**
 *  Properties of the Artifact. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Artifact_Metadata : GTLRObject
@end


/**
 *  Metadata information for NotebookService.AssignNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AssignNotebookRuntimeOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  A human-readable message that shows the intermediate progress details of
 *  NotebookRuntime.
 */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for NotebookService.AssignNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AssignNotebookRuntimeRequest : GTLRObject

/**
 *  Required. Provide runtime specific information (e.g. runtime owner, notebook
 *  id) used for NotebookRuntime assignment.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime *notebookRuntime;

/** Optional. User specified ID for the notebook runtime. */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeId;

/**
 *  Required. The resource name of the NotebookRuntimeTemplate based on which a
 *  NotebookRuntime will be assigned (reuse or create a new one).
 */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeTemplate;

@end


/**
 *  Attribution that explains a particular prediction output.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Attribution : GTLRObject

/**
 *  Output only. Error of feature_attributions caused by approximation used in
 *  the explanation method. Lower value means more precise attributions. * For
 *  Sampled Shapley attribution, increasing path_count might reduce the error. *
 *  For Integrated Gradients attribution, increasing step_count might reduce the
 *  error. * For XRAI attribution, increasing step_count might reduce the error.
 *  See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more
 *  information.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *approximationError;

/**
 *  Output only. Model predicted output if the input instance is constructed
 *  from the baselines of all the features defined in
 *  ExplanationMetadata.inputs. The field name of the output is determined by
 *  the key in ExplanationMetadata.outputs. If the Model's predicted output has
 *  multiple dimensions (rank > 1), this is the value in the output located by
 *  output_index. If there are multiple baselines, their output values are
 *  averaged.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *baselineOutputValue;

/**
 *  Output only. Attributions of each explained feature. Features are extracted
 *  from the prediction instances according to explanation metadata for inputs.
 *  The value is a struct, whose keys are the name of the feature. The values
 *  are how much the feature in the instance contributed to the predicted
 *  result. The format of the value is determined by the feature's input format:
 *  * If the feature is a scalar value, the attribution value is a floating
 *  number. * If the feature is an array of scalar values, the attribution value
 *  is an array. * If the feature is a struct, the attribution value is a
 *  struct. The keys in the attribution value struct are the same as the keys in
 *  the feature struct. The formats of the values in the attribution struct are
 *  determined by the formats of the values in the feature struct. The
 *  ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the
 *  ExplanationSpec field of the Endpoint.deployed_models object, points to the
 *  schema file that describes the features and their attribution values (if it
 *  is populated).
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id featureAttributions;

/**
 *  Output only. Model predicted output on the corresponding explanation
 *  instance. The field name of the output is determined by the key in
 *  ExplanationMetadata.outputs. If the Model predicted output has multiple
 *  dimensions, this is the value in the output located by output_index.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *instanceOutputValue;

/**
 *  Output only. The display name of the output identified by output_index. For
 *  example, the predicted class name by a multi-classification Model. This
 *  field is only populated iff the Model predicts display names as a separate
 *  field along with the explained output. The predicted display name must has
 *  the same shape of the explained output, and can be located using
 *  output_index.
 */
@property(nonatomic, copy, nullable) NSString *outputDisplayName;

/**
 *  Output only. The index that locates the explained prediction output. If the
 *  prediction output is a scalar value, output_index is not populated. If the
 *  prediction output has multiple dimensions, the length of the output_index
 *  list is the same as the number of dimensions of the output. The i-th element
 *  in output_index is the element index of the i-th dimension of the output
 *  vector. Indices start from 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *outputIndex;

/**
 *  Output only. Name of the explain output. Specified as the key in
 *  ExplanationMetadata.outputs.
 */
@property(nonatomic, copy, nullable) NSString *outputName;

@end


/**
 *  A description of resources that to large degree are decided by Vertex AI,
 *  and require only a modest additional configuration. Each Model supporting
 *  these resources documents its specific guidelines.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AutomaticResources : GTLRObject

/**
 *  Immutable. The maximum number of replicas this DeployedModel may be deployed
 *  on when the traffic against it increases. If the requested value is too
 *  large, the deployment will error, but if deployment succeeds then the
 *  ability to scale the model to that many replicas is guaranteed (barring
 *  service outages). If traffic against the DeployedModel increases beyond what
 *  its replicas at maximum may handle, a portion of the traffic will be
 *  dropped. If this value is not provided, a no upper bound for scaling under
 *  heavy traffic will be assume, though Vertex AI may be unable to scale beyond
 *  certain replica number.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxReplicaCount;

/**
 *  Immutable. The minimum number of replicas this DeployedModel will be always
 *  deployed on. If traffic against it increases, it may dynamically be deployed
 *  onto more replicas up to max_replica_count, and as traffic decreases, some
 *  of these extra replicas may be freed. If the requested value is too large,
 *  the deployment will error.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minReplicaCount;

@end


/**
 *  The metric specification that defines the target resource utilization (CPU
 *  utilization, accelerator's duty cycle, and so on) for calculating the
 *  desired replica count.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AutoscalingMetricSpec : GTLRObject

/**
 *  Required. The resource metric name. Supported metrics: * For Online
 *  Prediction: *
 *  `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` *
 *  `aiplatform.googleapis.com/prediction/online/cpu/utilization`
 */
@property(nonatomic, copy, nullable) NSString *metricName;

/**
 *  The target resource utilization in percentage (1% - 100%) for the given
 *  metric; once the real usage deviates from the target by a certain
 *  percentage, the machine replicas change. The default value is 60
 *  (representing 60%) if not provided.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *target;

@end


/**
 *  The storage details for Avro input content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1AvroSource : GTLRObject

/** Required. Google Cloud Storage location. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

@end


/**
 *  Request message for PipelineService.BatchCancelPipelineJobs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest : GTLRObject

/**
 *  Required. The names of the PipelineJobs to cancel. A maximum of 32
 *  PipelineJobs can be cancelled in a batch. Format:
 *  `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Details of operations that perform batch create Features.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata : GTLRObject

/** Operation metadata for Feature. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for FeaturestoreService.BatchCreateFeatures.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesRequest : GTLRObject

/**
 *  Required. The request message specifying the Features to create. All
 *  Features must be created under the same parent EntityType. The `parent`
 *  field in each child request message can be omitted. If `parent` is set in a
 *  child request, then the value must match the `parent` value in this request
 *  message.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureRequest *> *requests;

@end


/**
 *  Response message for FeaturestoreService.BatchCreateFeatures.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesResponse : GTLRObject

/** The Features created. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Feature *> *features;

@end


/**
 *  Request message for TensorboardService.BatchCreateTensorboardRuns.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest : GTLRObject

/**
 *  Required. The request message specifying the TensorboardRuns to create. A
 *  maximum of 1000 TensorboardRuns can be created in a batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardRunRequest *> *requests;

@end


/**
 *  Response message for TensorboardService.BatchCreateTensorboardRuns.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse : GTLRObject

/** The created TensorboardRuns. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *> *tensorboardRuns;

@end


/**
 *  Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest : GTLRObject

/**
 *  Required. The request message specifying the TensorboardTimeSeries to
 *  create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest *> *requests;

@end


/**
 *  Response message for TensorboardService.BatchCreateTensorboardTimeSeries.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse : GTLRObject

/** The created TensorboardTimeSeries. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *> *tensorboardTimeSeries;

@end


/**
 *  A description of resources that are used for performing batch operations,
 *  are dedicated to a Model, and need manual configuration.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchDedicatedResources : GTLRObject

/** Required. Immutable. The specification of a single machine. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec *machineSpec;

/**
 *  Immutable. The maximum number of machine replicas the batch operation may be
 *  scaled to. The default value is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxReplicaCount;

/**
 *  Immutable. The number of machine replicas used at the start of the batch
 *  operation. If not set, Vertex AI decides starting number, not greater than
 *  max_replica_count
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startingReplicaCount;

@end


/**
 *  Request message for PipelineService.BatchDeletePipelineJobs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest : GTLRObject

/**
 *  Required. The names of the PipelineJobs to delete. A maximum of 32
 *  PipelineJobs can be deleted in a batch. Format:
 *  `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Request message for ModelService.BatchImportEvaluatedAnnotations
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest : GTLRObject

/** Required. Evaluated annotations resource to be imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation *> *evaluatedAnnotations;

@end


/**
 *  Response message for ModelService.BatchImportEvaluatedAnnotations
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse : GTLRObject

/**
 *  Output only. Number of EvaluatedAnnotations imported.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEvaluatedAnnotationsCount;

@end


/**
 *  Request message for ModelService.BatchImportModelEvaluationSlices
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest : GTLRObject

/** Required. Model evaluation slice resource to be imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice *> *modelEvaluationSlices;

@end


/**
 *  Response message for ModelService.BatchImportModelEvaluationSlices
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse : GTLRObject

/** Output only. List of imported ModelEvaluationSlice.name. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *importedModelEvaluationSlices;

@end


/**
 *  Runtime operation information for MigrationService.BatchMigrateResources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** Partial results that reflect the latest migration operation progress. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult *> *partialResults;

@end


/**
 *  Represents a partial result in batch migration operation for one
 *  MigrateResourceRequest.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult : GTLRObject

/** Migrated dataset resource name. */
@property(nonatomic, copy, nullable) NSString *dataset;

/** The error result of the migration request in case of failure. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/** Migrated model resource name. */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  It's the same as the value in
 *  MigrateResourceRequest.migrate_resource_requests.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequest *request;

@end


/**
 *  Request message for MigrationService.BatchMigrateResources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesRequest : GTLRObject

/**
 *  Required. The request messages specifying the resources to migrate. They
 *  must be in the same location as the destination. Up to 50 resources can be
 *  migrated in one batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequest *> *migrateResourceRequests;

@end


/**
 *  Response message for MigrationService.BatchMigrateResources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesResponse : GTLRObject

/** Successfully migrated resources. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceResponse *> *migrateResourceResponses;

@end


/**
 *  A job that uses a Model to produce predictions on multiple input instances.
 *  If predictions for significant portion of the instances fail, the job may
 *  finish without attempting predictions for all remaining instances.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob : GTLRObject

/** Output only. Statistics on completed and failed prediction instances. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CompletionStats *completionStats;

/** Output only. Time when the BatchPredictionJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The config of resources used by the Model during the batch prediction. If
 *  the Model supports DEDICATED_RESOURCES this config may be provided (and the
 *  job will use these resources), if the Model doesn't support
 *  AUTOMATIC_RESOURCES, this config must be provided.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchDedicatedResources *dedicatedResources;

/**
 *  For custom-trained Models and AutoML Tabular Models, the container of the
 *  DeployedModel instances will send `stderr` and `stdout` streams to Cloud
 *  Logging by default. Please note that the logs incur cost, which are subject
 *  to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User
 *  can disable container logging by setting this flag to true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableContainerLogging;

/** Required. The user-defined name of this BatchPredictionJob. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key options for a BatchPredictionJob. If this is
 *  set, then all resources created by the BatchPredictionJob will be encrypted
 *  with the provided encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the BatchPredictionJob entered any of the following
 *  states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when the job's state is JOB_STATE_FAILED or
 *  JOB_STATE_CANCELLED.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Explanation configuration for this BatchPredictionJob. Can be specified only
 *  if generate_explanation is set to `true`. This value overrides the value of
 *  Model.explanation_spec. All fields of explanation_spec are optional in the
 *  request. If a field of the explanation_spec object is not populated, the
 *  corresponding field of the Model.explanation_spec object is inherited.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec *explanationSpec;

/**
 *  Generate explanation with the batch prediction results. When set to `true`,
 *  the batch prediction output changes based on the `predictions_format` field
 *  of the BatchPredictionJob.output_config object: * `bigquery`: output
 *  includes a column named `explanation`. The value is a struct that conforms
 *  to the Explanation object. * `jsonl`: The JSON objects on each line include
 *  an additional entry keyed `explanation`. The value of the entry is a JSON
 *  object that conforms to the Explanation object. * `csv`: Generating
 *  explanations for CSV format is not supported. If this field is set to true,
 *  either the Model.explanation_spec or explanation_spec must be populated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *generateExplanation;

/**
 *  Required. Input configuration of the instances on which predictions are
 *  performed. The schema of any single instance may be specified via the
 *  Model's PredictSchemata's instance_schema_uri.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInputConfig *inputConfig;

/**
 *  Configuration for how to convert batch prediction input instances to the
 *  prediction instances that are sent to the Model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig *instanceConfig;

/**
 *  The labels with user-defined metadata to organize BatchPredictionJobs. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_Labels *labels;

/**
 *  Immutable. Parameters configuring the batch behavior. Currently only
 *  applicable when dedicated_resources are used (in other cases Vertex AI does
 *  the tuning itself).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ManualBatchTuningParameters *manualBatchTuningParameters;

/**
 *  The name of the Model resource that produces the predictions via this job,
 *  must share the same ancestor Location. Starting this job has no impact on
 *  any existing deployments of the Model and their resources. Exactly one of
 *  model and unmanaged_container_model must be set. The model resource name may
 *  contain version id or version alias to specify the version. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@2` or
 *  `projects/{project}/locations/{location}/models/{model}\@golden` if no
 *  version is specified, the default version will be deployed. The model
 *  resource could also be a publisher model. Example:
 *  `publishers/{publisher}/models/{model}` or
 *  `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  The parameters that govern the predictions. The schema of the parameters may
 *  be specified via the Model's PredictSchemata's parameters_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id modelParameters;

/**
 *  Output only. The version ID of the Model that produces the predictions via
 *  this job.
 */
@property(nonatomic, copy, nullable) NSString *modelVersionId;

/** Output only. Resource name of the BatchPredictionJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The Configuration specifying where output predictions should be
 *  written. The schema of any single prediction may be specified as a
 *  concatenation of Model's PredictSchemata's instance_schema_uri and
 *  prediction_schema_uri.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputConfig *outputConfig;

/** Output only. Information further describing the output of this job. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputInfo *outputInfo;

/**
 *  Output only. Partial failures encountered. For example, single files that
 *  can't be read. This field never exceeds 20 entries. Status details fields
 *  contain standard Google Cloud error details.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleRpcStatus *> *partialFailures;

/**
 *  Output only. Information about resources that had been consumed by this job.
 *  Provided in real time at best effort basis, as well as a final value once
 *  the job completes. Note: This field currently may be not populated for batch
 *  predictions that use AutoML Models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ResourcesConsumed *resourcesConsumed;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  The service account that the DeployedModel's container runs as. If not
 *  specified, a system generated one will be used, which has minimal
 *  permissions and the custom container, if used, may not have enough
 *  permission to access other Google Cloud resources. Users deploying the Model
 *  must have the `iam.serviceAccounts.actAs` permission on this service
 *  account.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only. Time when the BatchPredictionJob for the first time entered the
 *  `JOB_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Contains model information necessary to perform batch prediction without
 *  requiring uploading to model registry. Exactly one of model and
 *  unmanaged_container_model must be set.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1UnmanagedContainerModel *unmanagedContainerModel;

/**
 *  Output only. Time when the BatchPredictionJob was most recently updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize BatchPredictionJobs. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob_Labels : GTLRObject
@end


/**
 *  Configures the input to BatchPredictionJob. See
 *  Model.supported_input_storage_formats for Model's supported input formats,
 *  and how instances should be expressed via any of them.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInputConfig : GTLRObject

/**
 *  The BigQuery location of the input table. The schema of the table should be
 *  in the format described by the given context OpenAPI Schema, if one is
 *  provided. The table may contain additional columns that are not described by
 *  the schema, and they will be ignored.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource *bigquerySource;

/** The Cloud Storage location for the input instances. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

/**
 *  Required. The format in which instances are given, must be one of the
 *  Model's supported_input_storage_formats.
 */
@property(nonatomic, copy, nullable) NSString *instancesFormat;

@end


/**
 *  Configuration defining how to transform batch prediction input instances to
 *  the instances that the Model accepts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig : GTLRObject

/**
 *  Fields that will be excluded in the prediction instance that is sent to the
 *  Model. Excluded will be attached to the batch prediction output if key_field
 *  is not specified. When excluded_fields is populated, included_fields must be
 *  empty. The input must be JSONL with objects at each line, BigQuery or
 *  TfRecord.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedFields;

/**
 *  Fields that will be included in the prediction instance that is sent to the
 *  Model. If instance_type is `array`, the order of field names in
 *  included_fields also determines the order of the values in the array. When
 *  included_fields is populated, excluded_fields must be empty. The input must
 *  be JSONL with objects at each line, BigQuery or TfRecord.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedFields;

/**
 *  The format of the instance that the Model accepts. Vertex AI will convert
 *  compatible batch prediction input instance formats to the specified format.
 *  Supported values are: * `object`: Each input is converted to JSON object
 *  format. * For `bigquery`, each row is converted to an object. * For `jsonl`,
 *  each line of the JSONL input must be an object. * Does not apply to `csv`,
 *  `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is
 *  converted to JSON array format. * For `bigquery`, each row is converted to
 *  an array. The order of columns is determined by the BigQuery column order,
 *  unless included_fields is populated. included_fields must be populated for
 *  specifying field orders. * For `jsonl`, if each line of the JSONL input is
 *  an object, included_fields must be populated for specifying field orders. *
 *  Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If
 *  not specified, Vertex AI converts the batch prediction input as follows: *
 *  For `bigquery` and `csv`, the behavior is the same as `array`. The order of
 *  columns is the same as defined in the file or table, unless included_fields
 *  is populated. * For `jsonl`, the prediction instance format is determined by
 *  each line of the input. * For `tf-record`/`tf-record-gzip`, each record will
 *  be converted to an object in the format of `{"b64": }`, where `` is the
 *  Base64-encoded string of the content of the record. * For `file-list`, each
 *  file in the list will be converted to an object in the format of `{"b64":
 *  }`, where `` is the Base64-encoded string of the content of the file.
 */
@property(nonatomic, copy, nullable) NSString *instanceType;

/**
 *  The name of the field that is considered as a key. The values identified by
 *  the key field is not included in the transformed instances that is sent to
 *  the Model. This is similar to specifying this name of the field in
 *  excluded_fields. In addition, the batch prediction output will not include
 *  the instances. Instead the output will only include the value of the key
 *  field, in a field named `key` in the output: * For `jsonl` output format,
 *  the output will have a `key` field instead of the `instance` field. * For
 *  `csv`/`bigquery` output format, the output will have have a `key` column
 *  instead of the instance feature columns. The input must be JSONL with
 *  objects at each line, CSV, BigQuery or TfRecord.
 */
@property(nonatomic, copy, nullable) NSString *keyField;

@end


/**
 *  Configures the output of BatchPredictionJob. See
 *  Model.supported_output_storage_formats for supported output formats, and how
 *  predictions are expressed via any of them.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputConfig : GTLRObject

/**
 *  The BigQuery project or dataset location where the output is to be written
 *  to. If project is provided, a new dataset is created with name
 *  `prediction__` where is made BigQuery-dataset-name compatible (for example,
 *  most special characters become underscores), and timestamp is in
 *  YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format. In the dataset two
 *  tables will be created, `predictions`, and `errors`. If the Model has both
 *  instance and prediction schemata defined then the tables have columns as
 *  follows: The `predictions` table contains instances for which the prediction
 *  succeeded, it has columns as per a concatenation of the Model's instance and
 *  prediction schemata. The `errors` table contains rows for which the
 *  prediction has failed, it has instance columns, as per the instance schema,
 *  followed by a single "errors" column, which as values has google.rpc.Status
 *  represented as a STRUCT, and containing only `code` and `message`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination *bigqueryDestination;

/**
 *  The Cloud Storage location of the directory where the output is to be
 *  written to. In the given directory a new directory is created. Its name is
 *  `prediction--`, where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601
 *  format. Inside of it files `predictions_0001.`, `predictions_0002.`, ...,
 *  `predictions_N.` are created where `` depends on chosen predictions_format,
 *  and N may equal 0001 and depends on the total number of successfully
 *  predicted instances. If the Model has both instance and prediction schemata
 *  defined then each such file contains predictions as per the
 *  predictions_format. If prediction for any instance failed (partially or
 *  completely), then an additional `errors_0001.`, `errors_0002.`,...,
 *  `errors_N.` files are created (N depends on total number of failed
 *  predictions). These files contain the failed instances, as per their schema,
 *  followed by an additional `error` field which as value has google.rpc.Status
 *  containing only `code` and `message` fields.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcsDestination;

/**
 *  Required. The format in which Vertex AI gives the predictions, must be one
 *  of the Model's supported_output_storage_formats.
 */
@property(nonatomic, copy, nullable) NSString *predictionsFormat;

@end


/**
 *  Further describes this job's output. Supplements output_config.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJobOutputInfo : GTLRObject

/**
 *  Output only. The path of the BigQuery dataset created, in
 *  `bq://projectId.bqDatasetId` format, into which the prediction output is
 *  written.
 */
@property(nonatomic, copy, nullable) NSString *bigqueryOutputDataset;

/**
 *  Output only. The name of the BigQuery table created, in `predictions_`
 *  format, into which the prediction output is written. Can be used by UI to
 *  generate the BigQuery output path, for example.
 */
@property(nonatomic, copy, nullable) NSString *bigqueryOutputTable;

/**
 *  Output only. The full path of the Cloud Storage directory created, into
 *  which the prediction output is written.
 */
@property(nonatomic, copy, nullable) NSString *gcsOutputDirectory;

@end


/**
 *  Details of operations that batch reads Feature values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata : GTLRObject

/** Operation metadata for Featurestore batch read Features values. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for FeaturestoreService.BatchReadFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequest : GTLRObject

/** Similar to csv_read_instances, but from BigQuery source. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource *bigqueryReadInstances;

/**
 *  Each read instance consists of exactly one read timestamp and one or more
 *  entity IDs identifying entities of the corresponding EntityTypes whose
 *  Features are requested. Each output instance contains Feature values of
 *  requested entities concatenated together as of the read time. An example
 *  read instance may be `foo_entity_id, bar_entity_id,
 *  2020-01-01T10:00:00.123Z`. An example output instance may be `foo_entity_id,
 *  bar_entity_id, 2020-01-01T10:00:00.123Z, foo_entity_feature1_value,
 *  bar_entity_feature2_value`. Timestamp in each read instance must be
 *  millisecond-aligned. `csv_read_instances` are read instances stored in a
 *  plain-text CSV file. The header should be: [ENTITY_TYPE_ID1],
 *  [ENTITY_TYPE_ID2], ..., timestamp The columns can be in any order. Values in
 *  the timestamp column must use the RFC 3339 format, e.g.
 *  `2012-07-30T10:43:17.123Z`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CsvSource *csvReadInstances;

/** Required. Specifies output location and format. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueDestination *destination;

/**
 *  Required. Specifies EntityType grouping Features to read values of and
 *  settings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec *> *entityTypeSpecs;

/**
 *  When not empty, the specified fields in the *_read_instances source will be
 *  joined as-is in the output, in addition to those fields from the
 *  Featurestore Entity. For BigQuery source, the type of the pass-through
 *  values will be automatically inferred. For CSV source, the pass-through
 *  values will be passed as opaque bytes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField *> *passThroughFields;

/**
 *  Optional. Excludes Feature values with feature generation timestamp before
 *  this timestamp. If not set, retrieve oldest values kept in Feature Store.
 *  Timestamp, if present, must not have higher than millisecond precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Selects Features of an EntityType to read values of and specifies read
 *  settings.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec : GTLRObject

/**
 *  Required. ID of the EntityType to select Features. The EntityType id is the
 *  entity_type_id specified during EntityType creation.
 */
@property(nonatomic, copy, nullable) NSString *entityTypeId;

/**
 *  Required. Selectors choosing which Feature values to read from the
 *  EntityType.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector *featureSelector;

/** Per-Feature settings for the batch read. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DestinationFeatureSetting *> *settings;

@end


/**
 *  Describe pass-through fields in read_instance source.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField : GTLRObject

/**
 *  Required. The name of the field in the CSV header or the name of the column
 *  in BigQuery table. The naming restriction is the same as Feature.name.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

@end


/**
 *  Response message for FeaturestoreService.BatchReadFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesResponse : GTLRObject
@end


/**
 *  Response message for TensorboardService.BatchReadTensorboardTimeSeriesData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse : GTLRObject

/** The returned time series data. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData *> *timeSeriesData;

@end


/**
 *  The BigQuery location for the output content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination : GTLRObject

/**
 *  Required. BigQuery URI to a project or table, up to 2000 characters long.
 *  When only the project is specified, the Dataset and Table is created. When
 *  the full table reference is specified, the Dataset must exist and table must
 *  not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or
 *  `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.
 */
@property(nonatomic, copy, nullable) NSString *outputUri;

@end


/**
 *  The BigQuery location for the input content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource : GTLRObject

/**
 *  Required. BigQuery URI to a table, up to 2000 characters long. Accepted
 *  forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.
 */
@property(nonatomic, copy, nullable) NSString *inputUri;

@end


/**
 *  Input for bleu metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BleuInput : GTLRObject

/** Required. Repeated bleu instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BleuInstance *> *instances;

/** Required. Spec for bleu score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BleuSpec *metricSpec;

@end


/**
 *  Spec for bleu instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BleuInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Bleu metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BleuMetricValue : GTLRObject

/**
 *  Output only. Bleu score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for bleu metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BleuResults : GTLRObject

/** Output only. Bleu metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BleuMetricValue *> *bleuMetricValues;

@end


/**
 *  Spec for bleu score metric - calculates the precision of n-grams in the
 *  prediction as compared to reference - returns a score ranging between 0 to
 *  1.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BleuSpec : GTLRObject

/**
 *  Optional. Whether to use_effective_order to compute bleu score.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useEffectiveOrder;

@end


/**
 *  Content blob. It's preferred to send as text directly rather than raw bytes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Blob : GTLRObject

/**
 *  Required. Raw bytes.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/** Required. The IANA standard MIME type of the source data. */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Config for blur baseline. When enabled, a linear path from the maximally
 *  blurred image to the input image is created. Using a blurred baseline
 *  instead of zero (black image) is motivated by the BlurIG approach explained
 *  here: https://arxiv.org/abs/2004.03383
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BlurBaselineConfig : GTLRObject

/**
 *  The standard deviation of the blur kernel for the blurred baseline. The same
 *  blurring parameter is used for both the height and the width dimension. If
 *  not set, the method defaults to the zero (i.e. black for images) baseline.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxBlurSigma;

@end


/**
 *  A list of boolean values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1BoolArray : GTLRObject

/**
 *  A list of bool values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Request message for JobService.CancelBatchPredictionJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelBatchPredictionJobRequest : GTLRObject
@end


/**
 *  Request message for JobService.CancelCustomJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelCustomJobRequest : GTLRObject
@end


/**
 *  Request message for JobService.CancelDataLabelingJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelDataLabelingJobRequest : GTLRObject
@end


/**
 *  Request message for JobService.CancelHyperparameterTuningJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest : GTLRObject
@end


/**
 *  Request message for JobService.CancelNasJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelNasJobRequest : GTLRObject
@end


/**
 *  Request message for PipelineService.CancelPipelineJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelPipelineJobRequest : GTLRObject
@end


/**
 *  Request message for PipelineService.CancelTrainingPipeline.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelTrainingPipelineRequest : GTLRObject
@end


/**
 *  Request message for GenAiTuningService.CancelTuningJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CancelTuningJobRequest : GTLRObject
@end


/**
 *  A response candidate generated from the model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Candidate : GTLRObject

/**
 *  Output only. Average log probability score of the candidate.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *avgLogprobs;

/** Output only. Source attribution of the generated content. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CitationMetadata *citationMetadata;

/** Output only. Content parts of the candidate. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Content *content;

/**
 *  Output only. Describes the reason the mode stopped generating tokens in more
 *  detail. This is only filled when `finish_reason` is set.
 */
@property(nonatomic, copy, nullable) NSString *finishMessage;

/**
 *  Output only. The reason why the model stopped generating tokens. If empty,
 *  the model has not stopped generating the tokens.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Blocklist
 *        Token generation stopped because the content contains forbidden terms.
 *        (Value: "BLOCKLIST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_FinishReasonUnspecified
 *        The finish reason is unspecified. (Value: "FINISH_REASON_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_MalformedFunctionCall
 *        The function call generated by the model is invalid. (Value:
 *        "MALFORMED_FUNCTION_CALL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_MaxTokens
 *        Token generation reached the configured maximum output tokens. (Value:
 *        "MAX_TOKENS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Other
 *        All other reasons that stopped the token generation. (Value: "OTHER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_ProhibitedContent
 *        Token generation stopped for potentially containing prohibited
 *        content. (Value: "PROHIBITED_CONTENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Recitation
 *        Token generation stopped because the content potentially contains
 *        copyright violations. (Value: "RECITATION")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Safety
 *        Token generation stopped because the content potentially contains
 *        safety violations. NOTE: When streaming, content is empty if content
 *        filters blocks the output. (Value: "SAFETY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Spii
 *        Token generation stopped because the content potentially contains
 *        Sensitive Personally Identifiable Information (SPII). (Value: "SPII")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Candidate_FinishReason_Stop
 *        Token generation reached a natural stopping point or a configured stop
 *        sequence. (Value: "STOP")
 */
@property(nonatomic, copy, nullable) NSString *finishReason;

/**
 *  Output only. Metadata specifies sources used to ground generated content.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundingMetadata *groundingMetadata;

/**
 *  Output only. Index of the candidate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *index;

/**
 *  Output only. Log-likelihood scores for the response tokens and top tokens
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResult *logprobsResult;

/**
 *  Output only. List of ratings for the safety of a response candidate. There
 *  is at most one rating per category.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating *> *safetyRatings;

@end


/**
 *  This message will be placed in the metadata field of a
 *  google.longrunning.Operation associated with a CheckTrialEarlyStoppingState
 *  request.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata : GTLRObject

/** Operation metadata for suggesting Trials. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** The name of the Study that the Trial belongs to. */
@property(nonatomic, copy, nullable) NSString *study;

/** The Trial name. */
@property(nonatomic, copy, nullable) NSString *trial;

@end


/**
 *  Request message for VizierService.CheckTrialEarlyStoppingState.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest : GTLRObject
@end


/**
 *  Response message for VizierService.CheckTrialEarlyStoppingState.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse : GTLRObject

/**
 *  True if the Trial should stop.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shouldStop;

@end


/**
 *  Source attributions for content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Citation : GTLRObject

/**
 *  Output only. End index into the content.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/** Output only. License of the attribution. */
@property(nonatomic, copy, nullable) NSString *license;

/** Output only. Publication date of the attribution. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeDate *publicationDate;

/**
 *  Output only. Start index into the content.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

/** Output only. Title of the attribution. */
@property(nonatomic, copy, nullable) NSString *title;

/** Output only. Url reference of the attribution. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A collection of source attributions for a piece of content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CitationMetadata : GTLRObject

/** Output only. List of citations. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Citation *> *citations;

@end


/**
 *  Input for coherence metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInput : GTLRObject

/** Required. Coherence instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInstance *instance;

/** Required. Spec for coherence score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CoherenceSpec *metricSpec;

@end


/**
 *  Spec for coherence instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

@end


/**
 *  Spec for coherence result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CoherenceResult : GTLRObject

/**
 *  Output only. Confidence for coherence score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for coherence score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Coherence score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for coherence score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CoherenceSpec : GTLRObject

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for VizierService.CompleteTrial.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CompleteTrialRequest : GTLRObject

/**
 *  Optional. If provided, it will be used as the completed Trial's
 *  final_measurement; Otherwise, the service will auto-select a previously
 *  reported measurement as the final-measurement
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Measurement *finalMeasurement;

/**
 *  Optional. A human readable reason why the trial was infeasible. This should
 *  only be provided if `trial_infeasible` is true.
 */
@property(nonatomic, copy, nullable) NSString *infeasibleReason;

/**
 *  Optional. True if the Trial cannot be run with the given Parameter, and
 *  final_measurement will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trialInfeasible;

@end


/**
 *  Success and error statistics of processing multiple entities (for example,
 *  DataItems or structured data rows) in batch.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CompletionStats : GTLRObject

/**
 *  Output only. The number of entities for which any error was encountered.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failedCount;

/**
 *  Output only. In cases when enough errors are encountered a job, pipeline, or
 *  operation may be failed as a whole. Below is the number of entities for
 *  which the processing had not been finished (either in successful or failed
 *  state). Set to -1 if the number is unknown (for example, the operation
 *  failed before the total entity number could be collected).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *incompleteCount;

/**
 *  Output only. The number of entities that had been processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successfulCount;

/**
 *  Output only. The number of the successful forecast points that are generated
 *  by the forecasting model. This is ONLY used by the forecasting batch
 *  prediction.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successfulForecastPointCount;

@end


/**
 *  Request message for ComputeTokens RPC call.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest : GTLRObject

/** Optional. Input content. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Content *> *contents;

/**
 *  Optional. The instances that are the input to token computing API call.
 *  Schema is identical to the prediction schema of the text model, even for the
 *  non-text models, like chat models, or Codey models.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *instances;

/**
 *  Optional. The name of the publisher model requested to serve the prediction.
 *  Format: projects/{project}/locations/{location}/publishers/ * /models/ *
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Response message for ComputeTokens RPC call.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse : GTLRObject

/**
 *  Lists of tokens info from the input. A ComputeTokensRequest could have
 *  multiple instances with a prompt in each instance. We also need to return
 *  lists of tokens info for the request with multiple instances.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TokensInfo *> *tokensInfo;

@end


/**
 *  The Container Registry location for the container image.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ContainerRegistryDestination : GTLRObject

/**
 *  Required. Container Registry URI of a container image. Only Google Container
 *  Registry and Artifact Registry are supported now. Accepted forms: * Google
 *  Container Registry path. For example: `gcr.io/projectId/imageName:tag`. *
 *  Artifact Registry path. For example:
 *  `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is
 *  not specified, "latest" will be used as the default tag.
 */
@property(nonatomic, copy, nullable) NSString *outputUri;

@end


/**
 *  The spec of a Container.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ContainerSpec : GTLRObject

/** The arguments to be passed when starting the container. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  The command to be invoked when the container is started. It overrides the
 *  entrypoint instruction in Dockerfile when provided.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

/**
 *  Environment variables to be passed to the container. Maximum limit is 100.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EnvVar *> *env;

/**
 *  Required. The URI of a container image in the Container Registry that is to
 *  be run on each worker replica.
 */
@property(nonatomic, copy, nullable) NSString *imageUri;

@end


/**
 *  The base structured datatype containing multi-part content of a message. A
 *  `Content` includes a `role` field designating the producer of the `Content`
 *  and a `parts` field containing multi-part data that contains the content of
 *  the message turn.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Content : GTLRObject

/**
 *  Required. Ordered `Parts` that constitute a single message. Parts may have
 *  different IANA MIME types.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Part *> *parts;

/**
 *  Optional. The producer of the content. Must be either 'user' or 'model'.
 *  Useful to set for multi-turn conversations, otherwise can be left blank or
 *  unset.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Instance of a general context.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Context : GTLRObject

/** Output only. Timestamp when this Context was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the Context
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  User provided display name of the Context. May be up to 128 Unicode
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  An eTag used to perform consistent read-modify-write updates. If not set, a
 *  blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your Contexts. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Context (System labels are excluded).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Context_Labels *labels;

/**
 *  Properties of the Context. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Context_Metadata *metadata;

/** Immutable. The resource name of the Context. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. A list of resource names of Contexts that are parents of this
 *  Context. A Context may have at most 10 parent_contexts.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *parentContexts;

/**
 *  The title of the schema describing the metadata. Schema title and version is
 *  expected to be registered in earlier Create Schema calls. And both are used
 *  together as unique identifiers to identify schemas within the local metadata
 *  store.
 */
@property(nonatomic, copy, nullable) NSString *schemaTitle;

/**
 *  The version of the schema in schema_name to use. Schema title and version is
 *  expected to be registered in earlier Create Schema calls. And both are used
 *  together as unique identifiers to identify schemas within the local metadata
 *  store.
 */
@property(nonatomic, copy, nullable) NSString *schemaVersion;

/** Output only. Timestamp when this Context was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Contexts. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Context (System labels are excluded).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Context_Labels : GTLRObject
@end


/**
 *  Properties of the Context. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Context_Metadata : GTLRObject
@end


/**
 *  Details of ModelService.CopyModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CopyModelOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for ModelService.CopyModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CopyModelRequest : GTLRObject

/**
 *  Customer-managed encryption key options. If this is set, then the Model copy
 *  will be encrypted with the provided encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Optional. Copy source_model into a new Model with this ID. The ID will
 *  become the final component of the model resource name. This value may be up
 *  to 63 characters, and valid characters are `[a-z0-9_-]`. The first character
 *  cannot be a number or hyphen.
 */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Optional. Specify this field to copy source_model into this existing Model
 *  as a new version. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *parentModel;

/**
 *  Required. The resource name of the Model to copy. That Model must be in the
 *  same Project. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *sourceModel;

@end


/**
 *  Response message of ModelService.CopyModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CopyModelResponse : GTLRObject

/**
 *  The name of the copied Model resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/** Output only. The version ID of the model that is copied. */
@property(nonatomic, copy, nullable) NSString *modelVersionId;

@end


/**
 *  Request message for PredictionService.CountTokens.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest : GTLRObject

/** Optional. Input content. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Content *> *contents;

/**
 *  Optional. Generation config that the model will use to generate the
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfig *generationConfig;

/**
 *  Optional. The instances that are the input to token counting call. Schema is
 *  identical to the prediction schema of the underlying model.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *instances;

/**
 *  Optional. The name of the publisher model requested to serve the prediction.
 *  Format: `projects/{project}/locations/{location}/publishers/ * /models/ *`
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Optional. The user provided system instructions for the model. Note: only
 *  text should be used in parts and content in each part will be in a separate
 *  paragraph.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Content *systemInstruction;

/**
 *  Optional. A list of `Tools` the model may use to generate the next response.
 *  A `Tool` is a piece of code that enables the system to interact with
 *  external systems to perform an action, or set of actions, outside of
 *  knowledge and scope of the model.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tool *> *tools;

@end


/**
 *  Response message for PredictionService.CountTokens.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse : GTLRObject

/**
 *  The total number of billable characters counted across all instances from
 *  the request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalBillableCharacters;

/**
 *  The total number of tokens counted across all instances from the request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalTokens;

@end


/**
 *  Runtime operation information for DatasetService.CreateDataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateDatasetOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for DatasetService.CreateDatasetVersion.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for CreateDeploymentResourcePool method.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateDeploymentResourcePoolOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for CreateDeploymentResourcePool method.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest : GTLRObject

/** Required. The DeploymentResourcePool to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool *deploymentResourcePool;

/**
 *  Required. The ID to use for the DeploymentResourcePool, which will become
 *  the final component of the DeploymentResourcePool's resource name. The
 *  maximum length is 63 characters, and valid characters are
 *  `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
 */
@property(nonatomic, copy, nullable) NSString *deploymentResourcePoolId;

@end


/**
 *  Runtime operation information for EndpointService.CreateEndpoint.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateEndpointOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create EntityType.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata : GTLRObject

/** Operation metadata for EntityType. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create FeatureGroup.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureGroupOperationMetadata : GTLRObject

/** Operation metadata for FeatureGroup. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create FeatureOnlineStore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureOnlineStoreOperationMetadata : GTLRObject

/** Operation metadata for FeatureOnlineStore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create Feature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureOperationMetadata : GTLRObject

/** Operation metadata for Feature. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for FeaturestoreService.CreateFeature. Request message for
 *  FeatureRegistryService.CreateFeature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureRequest : GTLRObject

/** Required. The Feature to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Feature *feature;

/**
 *  Required. The ID to use for the Feature, which will become the final
 *  component of the Feature's resource name. This value may be up to 128
 *  characters, and valid characters are `[a-z0-9_]`. The first character cannot
 *  be a number. The value must be unique within an EntityType/FeatureGroup.
 */
@property(nonatomic, copy, nullable) NSString *featureId;

/**
 *  Required. The resource name of the EntityType or FeatureGroup to create a
 *  Feature. Format for entity_type as parent:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  Format for feature_group as parent:
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

@end


/**
 *  Details of operations that perform create Featurestore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata : GTLRObject

/** Operation metadata for Featurestore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create FeatureView.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateFeatureViewOperationMetadata : GTLRObject

/** Operation metadata for FeatureView Create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for IndexEndpointService.CreateIndexEndpoint.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for IndexService.CreateIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateIndexOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** The operation metadata with regard to Matching Engine Index operation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata *nearestNeighborSearchOperationMetadata;

@end


/**
 *  Details of operations that perform MetadataService.CreateMetadataStore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata : GTLRObject

/** Operation metadata for creating a MetadataStore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Metadata information for NotebookService.CreateNotebookExecutionJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateNotebookExecutionJobOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  A human-readable message that shows the intermediate progress details of
 *  NotebookRuntime.
 */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for [NotebookService.CreateNotebookExecutionJob]
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest : GTLRObject

/** Required. The NotebookExecutionJob to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob *notebookExecutionJob;

/** Optional. User specified ID for the NotebookExecutionJob. */
@property(nonatomic, copy, nullable) NSString *notebookExecutionJobId;

/**
 *  Required. The resource name of the Location to create the
 *  NotebookExecutionJob. Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

@end


/**
 *  Metadata information for NotebookService.CreateNotebookRuntimeTemplate.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateNotebookRuntimeTemplateOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create PersistentResource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreatePersistentResourceOperationMetadata : GTLRObject

/** Operation metadata for PersistentResource. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** Progress Message for Create LRO */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for PipelineService.CreatePipelineJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreatePipelineJobRequest : GTLRObject

/**
 *  Required. The resource name of the Location to create the PipelineJob in.
 *  Format: `projects/{project}/locations/{location}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The PipelineJob to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob *pipelineJob;

/**
 *  The ID to use for the PipelineJob, which will become the final component of
 *  the PipelineJob name. If not provided, an ID will be automatically
 *  generated. This value should be less than 128 characters, and valid
 *  characters are `/a-z-/`.
 */
@property(nonatomic, copy, nullable) NSString *pipelineJobId;

@end


/**
 *  Details of operations that perform create FeatureGroup.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateRegistryFeatureOperationMetadata : GTLRObject

/** Operation metadata for Feature. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for
 *  SpecialistPoolService.CreateSpecialistPool.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform create Tensorboard.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardOperationMetadata : GTLRObject

/** Operation metadata for Tensorboard. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for TensorboardService.CreateTensorboardRun.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardRunRequest : GTLRObject

/**
 *  Required. The resource name of the TensorboardExperiment to create the
 *  TensorboardRun in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The TensorboardRun to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *tensorboardRun;

/**
 *  Required. The ID to use for the Tensorboard run, which becomes the final
 *  component of the Tensorboard run's resource name. This value should be 1-128
 *  characters, and valid characters are `/a-z-/`.
 */
@property(nonatomic, copy, nullable) NSString *tensorboardRunId;

@end


/**
 *  Request message for TensorboardService.CreateTensorboardTimeSeries.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest : GTLRObject

/**
 *  Required. The resource name of the TensorboardRun to create the
 *  TensorboardTimeSeries in. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The TensorboardTimeSeries to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *tensorboardTimeSeries;

/**
 *  Optional. The user specified unique ID to use for the TensorboardTimeSeries,
 *  which becomes the final component of the TensorboardTimeSeries's resource
 *  name. This value should match "a-z0-9{0, 127}"
 */
@property(nonatomic, copy, nullable) NSString *tensorboardTimeSeriesId;

@end


/**
 *  The storage details for CSV output content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CsvDestination : GTLRObject

/** Required. Google Cloud Storage location. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcsDestination;

@end


/**
 *  The storage details for CSV input content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CsvSource : GTLRObject

/** Required. Google Cloud Storage location. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

@end


/**
 *  Represents a job that runs custom workloads such as a Docker container or a
 *  Python package. A CustomJob can have multiple worker pools and each worker
 *  pool can have its own machine and input spec. A CustomJob will be cleaned up
 *  once the job enters terminal state (failed or succeeded).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CustomJob : GTLRObject

/** Output only. Time when the CustomJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The display name of the CustomJob. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key options for a CustomJob. If this is set,
 *  then all resources created by the CustomJob will be encrypted with the
 *  provided encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the CustomJob entered any of the following states:
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when job's state is `JOB_STATE_FAILED` or
 *  `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/** Required. Job spec. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *jobSpec;

/**
 *  The labels with user-defined metadata to organize CustomJobs. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_Labels *labels;

/** Output only. Resource name of a CustomJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Time when the CustomJob for the first time entered the
 *  `JOB_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1CustomJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Time when the CustomJob was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if
 *  job_spec.enable_web_access is `true`. The keys are names of each node in the
 *  training job; for example, `workerpool0-0` for the primary node,
 *  `workerpool1-0` for the first node in the second worker pool, and
 *  `workerpool1-1` for the second node in the second worker pool. The values
 *  are the URIs for each node's interactive shell.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_WebAccessUris *webAccessUris;

@end


/**
 *  The labels with user-defined metadata to organize CustomJobs. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_Labels : GTLRObject
@end


/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if
 *  job_spec.enable_web_access is `true`. The keys are names of each node in the
 *  training job; for example, `workerpool0-0` for the primary node,
 *  `workerpool1-0` for the first node in the second worker pool, and
 *  `workerpool1-1` for the second node in the second worker pool. The values
 *  are the URIs for each node's interactive shell.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CustomJob_WebAccessUris : GTLRObject
@end


/**
 *  Represents the spec of a CustomJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec : GTLRObject

/**
 *  The Cloud Storage location to store the output of this CustomJob or
 *  HyperparameterTuningJob. For HyperparameterTuningJob, the
 *  baseOutputDirectory of each child CustomJob backing a Trial is set to a
 *  subdirectory of name id under its parent HyperparameterTuningJob's
 *  baseOutputDirectory. The following Vertex AI environment variables will be
 *  passed to containers or python modules when this field is set: For
 *  CustomJob: * AIP_MODEL_DIR = `/model/` * AIP_CHECKPOINT_DIR =
 *  `/checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `/logs/` For CustomJob backing a
 *  Trial of HyperparameterTuningJob: * AIP_MODEL_DIR = `//model/` *
 *  AIP_CHECKPOINT_DIR = `//checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `//logs/`
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *baseOutputDirectory;

/**
 *  Optional. Whether you want Vertex AI to enable access to the customized
 *  dashboard in training chief container. If set to `true`, you can access the
 *  dashboard at the URIs given by CustomJob.web_access_uris or
 *  Trial.web_access_uris (within HyperparameterTuningJob.trials).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDashboardAccess;

/**
 *  Optional. Whether you want Vertex AI to enable [interactive shell
 *  access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
 *  to training containers. If set to `true`, you can access interactive shells
 *  at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris
 *  (within HyperparameterTuningJob.trials).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableWebAccess;

/**
 *  Optional. The Experiment associated with this job. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
 */
@property(nonatomic, copy, nullable) NSString *experiment;

/**
 *  Optional. The Experiment Run associated with this job. Format:
 *  `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
 */
@property(nonatomic, copy, nullable) NSString *experimentRun;

/**
 *  Optional. The name of the Model resources for which to generate a mapping to
 *  artifact URIs. Applicable only to some of the Google-provided custom jobs.
 *  Format: `projects/{project}/locations/{location}/models/{model}` In order to
 *  retrieve a specific version of the model, also provide the version ID or
 *  version alias. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@2` or
 *  `projects/{project}/locations/{location}/models/{model}\@golden` If no
 *  version ID or alias is specified, the "default" version will be returned.
 *  The "default" version alias is created for the first version of the model,
 *  and can be moved to other versions later on. There will be exactly one
 *  default version.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *models;

/**
 *  Optional. The full name of the Compute Engine
 *  [network](/compute/docs/networks-and-firewalls#networks) to which the Job
 *  should be peered. For example, `projects/12345/global/networks/myVPC`.
 *  [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form
 *  `projects/{project}/global/networks/{network}`. Where {project} is a project
 *  number, as in `12345`, and {network} is a network name. To specify this
 *  field, you must have already [configured VPC Network Peering for Vertex
 *  AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this
 *  field is left unspecified, the job is not peered with any network.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Optional. The ID of the PersistentResource in the same Project and Location
 *  which to run If this is specified, the job will be run on existing machines
 *  held by the PersistentResource instead of on-demand short-live machines. The
 *  network and CMEK configs on the job should be consistent with those on the
 *  PersistentResource, otherwise, the job will be rejected.
 */
@property(nonatomic, copy, nullable) NSString *persistentResourceId;

/**
 *  The ID of the location to store protected artifacts. e.g. us-central1.
 *  Populate only when the location is different than CustomJob location. List
 *  of supported locations:
 *  https://cloud.google.com/vertex-ai/docs/general/locations
 */
@property(nonatomic, copy, nullable) NSString *protectedArtifactLocationId;

/**
 *  Optional. A list of names for the reserved ip ranges under the VPC network
 *  that can be used for this job. If set, we will deploy the job within the
 *  provided ip ranges. Otherwise, the job will be deployed to any ip ranges
 *  under the provided VPC network. Example: ['vertex-ai-ip-range'].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reservedIpRanges;

/** Scheduling options for a CustomJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Scheduling *scheduling;

/**
 *  Specifies the service account for workload run-as account. Users submitting
 *  jobs must have act-as permission on this run-as account. If unspecified, the
 *  [Vertex AI Custom Code Service
 *  Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
 *  for the CustomJob's project is used.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Optional. The name of a Vertex AI Tensorboard resource to which this
 *  CustomJob will upload Tensorboard logs. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboard;

/**
 *  Required. The spec of the worker pools including machine type and Docker
 *  image. All worker pools except the first one are optional and can be skipped
 *  by providing an empty value.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1WorkerPoolSpec *> *workerPoolSpecs;

@end


/**
 *  A piece of data in a Dataset. Could be an image, a video, a document or
 *  plain text.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataItem : GTLRObject

/** Output only. Timestamp when this DataItem was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your DataItems.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. No more than
 *  64 user labels can be associated with one DataItem(System labels are
 *  excluded). See https://goo.gl/xmQnxf for more information and examples of
 *  labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DataItem_Labels *labels;

/** Output only. The resource name of the DataItem. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The data that the DataItem represents (for example, an image or a
 *  text snippet). The schema of the payload is stored in the parent Dataset's
 *  metadata schema's dataItemSchemaUri field.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id payload;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Output only. Timestamp when this DataItem was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your DataItems.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. No more than
 *  64 user labels can be associated with one DataItem(System labels are
 *  excluded). See https://goo.gl/xmQnxf for more information and examples of
 *  labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataItem_Labels : GTLRObject
@end


/**
 *  A container for a single DataItem and Annotations on it.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataItemView : GTLRObject

/**
 *  The Annotations on the DataItem. If too many Annotations should be returned
 *  for the DataItem, this field will be truncated per annotations_limit in
 *  request. If it was, then the has_truncated_annotations will be set to true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Annotation *> *annotations;

/** The DataItem. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DataItem *dataItem;

/**
 *  True if and only if the Annotations field has been truncated. It happens if
 *  more Annotations for this DataItem met the request's annotation_filter than
 *  are allowed to be returned by annotations_limit. Note that if Annotations
 *  field is not being returned due to field mask, then this field will not be
 *  set to true no matter how many Annotations are there.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasTruncatedAnnotations;

@end


/**
 *  DataLabelingJob is used to trigger a human labeling job on unlabeled data
 *  from the following Dataset:
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob : GTLRObject

/**
 *  Parameters that configure the active learning pipeline. Active learning will
 *  label the data incrementally via several iterations. For every iteration, it
 *  will select a batch of data based on the sampling strategy.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ActiveLearningConfig *activeLearningConfig;

/**
 *  Labels to assign to annotations generated by this DataLabelingJob. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels. System reserved label keys are
 *  prefixed with "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_AnnotationLabels *annotationLabels;

/** Output only. Timestamp when this DataLabelingJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Estimated cost(in US dollars) that the DataLabelingJob has
 *  incurred to date.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeMoney *currentSpend;

/**
 *  Required. Dataset resource names. Right now we only support labeling from a
 *  single Dataset. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *datasets;

/**
 *  Required. The user-defined name of the DataLabelingJob. The name can be up
 *  to 128 characters long and can consist of any UTF-8 characters. Display name
 *  of a DataLabelingJob.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a DataLabelingJob. If set, this
 *  DataLabelingJob will be secured by this key. Note: Annotations created in
 *  the DataLabelingJob are associated with the EncryptionSpec of the Dataset
 *  they are exported to.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. DataLabelingJob errors. It is only populated when job's state
 *  is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Required. Input config parameters for the DataLabelingJob.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id inputs;

/**
 *  Required. Points to a YAML file stored on Google Cloud Storage describing
 *  the config for a specific type of DataLabelingJob. The schema files that can
 *  be used here are found in the
 *  https://storage.googleapis.com/google-cloud-aiplatform bucket in the
 *  /schema/datalabelingjob/inputs/ folder.
 */
@property(nonatomic, copy, nullable) NSString *inputsSchemaUri;

/**
 *  Required. The Google Cloud Storage location of the instruction pdf. This pdf
 *  is shared with labelers, and provides detailed description on how to label
 *  DataItems in Datasets.
 */
@property(nonatomic, copy, nullable) NSString *instructionUri;

/**
 *  Required. Number of labelers to work on each DataItem.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *labelerCount;

/**
 *  Output only. Current labeling job progress percentage scaled in interval [0,
 *  100], indicating the percentage of DataItems that has been finished.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *labelingProgress;

/**
 *  The labels with user-defined metadata to organize your DataLabelingJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable. Following system labels exist for each DataLabelingJob: *
 *  "aiplatform.googleapis.com/schema": output only, its value is the
 *  inputs_schema's title.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_Labels *labels;

/** Output only. Resource name of the DataLabelingJob. */
@property(nonatomic, copy, nullable) NSString *name;

/** The SpecialistPools' resource names associated with this job. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *specialistPools;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Timestamp when this DataLabelingJob was updated most recently.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Labels to assign to annotations generated by this DataLabelingJob. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels. System reserved label keys are
 *  prefixed with "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_AnnotationLabels : GTLRObject
@end


/**
 *  The labels with user-defined metadata to organize your DataLabelingJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable. Following system labels exist for each DataLabelingJob: *
 *  "aiplatform.googleapis.com/schema": output only, its value is the
 *  inputs_schema's title.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob_Labels : GTLRObject
@end


/**
 *  A collection of DataItems and Annotations on them.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Dataset : GTLRObject

/** Output only. Timestamp when this Dataset was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The number of DataItems in this Dataset. Only apply for
 *  non-structured Dataset.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataItemCount;

/**
 *  The description of the Dataset.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The user-defined name of the Dataset. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a Dataset. If set, this Dataset and
 *  all sub-resources of this Dataset will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your Datasets. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Dataset (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable. Following system labels exist for each Dataset: *
 *  "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value
 *  is the metadata_schema's title.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Dataset_Labels *labels;

/**
 *  Required. Additional information about the Dataset.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Output only. The resource name of the Artifact that was created in
 *  MetadataStore when creating the Dataset. The Artifact resource name pattern
 *  is
 *  `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
 */
@property(nonatomic, copy, nullable) NSString *metadataArtifact;

/**
 *  Required. Points to a YAML file stored on Google Cloud Storage describing
 *  additional information about the Dataset. The schema is defined as an
 *  OpenAPI 3.0.2 Schema Object. The schema files that can be used here are
 *  found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
 */
@property(nonatomic, copy, nullable) NSString *metadataSchemaUri;

/**
 *  Optional. Reference to the public base model last used by the dataset. Only
 *  set for prompt datasets.
 */
@property(nonatomic, copy, nullable) NSString *modelReference;

/** Output only. Identifier. The resource name of the Dataset. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  All SavedQueries belong to the Dataset will be returned in List/Get Dataset
 *  response. The annotation_specs field will not be populated except for UI
 *  cases which will only use annotation_spec_count. In CreateDataset request, a
 *  SavedQuery is created together if this field is set, up to one SavedQuery
 *  can be set in CreateDatasetRequest. The SavedQuery should not contain any
 *  AnnotationSpec.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SavedQuery *> *savedQueries;

/** Output only. Timestamp when this Dataset was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Datasets. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Dataset (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable. Following system labels exist for each Dataset: *
 *  "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value
 *  is the metadata_schema's title.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Dataset_Labels : GTLRObject
@end


/**
 *  Describes the dataset version.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion : GTLRObject

/** Output only. Name of the associated BigQuery dataset. */
@property(nonatomic, copy, nullable) NSString *bigQueryDatasetName;

/** Output only. Timestamp when this DatasetVersion was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The user-defined name of the DatasetVersion. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Output only. Additional information about the DatasetVersion.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Output only. Reference to the public base model last used by the dataset
 *  version. Only set for prompt dataset versions.
 */
@property(nonatomic, copy, nullable) NSString *modelReference;

/** Output only. Identifier. The resource name of the DatasetVersion. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Output only. Timestamp when this DatasetVersion was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A description of resources that are dedicated to a DeployedModel, and that
 *  need a higher degree of manual configuration.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources : GTLRObject

/**
 *  Immutable. The metric specifications that overrides a resource utilization
 *  metric (CPU utilization, accelerator's duty cycle, and so on) target value
 *  (default to 60 if not set). At most one entry is allowed per metric. If
 *  machine_spec.accelerator_count is above 0, the autoscaling will be based on
 *  both CPU utilization and accelerator's duty cycle metrics and scale up when
 *  either metrics exceeds its target value while scale down if both metrics are
 *  under their target value. The default target value is 60 for both metrics.
 *  If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU
 *  utilization metric only with default target value 60 if not explicitly set.
 *  For example, in the case of Online Prediction, if you want to override
 *  target CPU utilization to 80, you should set
 *  autoscaling_metric_specs.metric_name to
 *  `aiplatform.googleapis.com/prediction/online/cpu/utilization` and
 *  autoscaling_metric_specs.target to `80`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1AutoscalingMetricSpec *> *autoscalingMetricSpecs;

/**
 *  Required. Immutable. The specification of a single machine used by the
 *  prediction.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec *machineSpec;

/**
 *  Immutable. The maximum number of replicas this DeployedModel may be deployed
 *  on when the traffic against it increases. If the requested value is too
 *  large, the deployment will error, but if deployment succeeds then the
 *  ability to scale the model to that many replicas is guaranteed (barring
 *  service outages). If traffic against the DeployedModel increases beyond what
 *  its replicas at maximum may handle, a portion of the traffic will be
 *  dropped. If this value is not provided, will use min_replica_count as the
 *  default value. The value of this field impacts the charge against Vertex CPU
 *  and GPU quotas. Specifically, you will be charged for (max_replica_count *
 *  number of cores in the selected machine type) and (max_replica_count *
 *  number of GPUs per replica in the selected machine type).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxReplicaCount;

/**
 *  Required. Immutable. The minimum number of machine replicas this
 *  DeployedModel will be always deployed on. This value must be greater than or
 *  equal to 1. If traffic against the DeployedModel increases, it may
 *  dynamically be deployed onto more replicas, and as traffic decreases, some
 *  of these extra replicas may be freed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minReplicaCount;

/**
 *  Optional. If true, schedule the deployment workload on [spot
 *  VMs](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *spot;

@end


/**
 *  Details of operations that delete Feature values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata : GTLRObject

/** Operation metadata for Featurestore delete Features values. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for FeaturestoreService.DeleteFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequest : GTLRObject

/** Select feature values to be deleted by specifying entities. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity *selectEntity;

/**
 *  Select feature values to be deleted by specifying time range and features.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature *selectTimeRangeAndFeature;

@end


/**
 *  Message to select entity. If an entity id is selected, all the feature
 *  values corresponding to the entity id will be deleted, including the
 *  entityId.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity : GTLRObject

/**
 *  Required. Selectors choosing feature values of which entity id to be deleted
 *  from the EntityType.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EntityIdSelector *entityIdSelector;

@end


/**
 *  Message to select time range and feature. Values of the selected feature
 *  generated within an inclusive time range will be deleted. Using this option
 *  permanently deletes the feature values from the specified feature IDs within
 *  the specified time range. This might include data from the online storage.
 *  If you want to retain any deleted historical data in the online storage, you
 *  must re-ingest it.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature : GTLRObject

/**
 *  Required. Selectors choosing which feature values to be deleted from the
 *  EntityType.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector *featureSelector;

/**
 *  If set, data will not be deleted from online storage. When time range is
 *  older than the data in online storage, setting this to be true will make the
 *  deletion have no impact on online serving.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skipOnlineStorageDelete;

/**
 *  Required. Select feature generated within a half-inclusive time range. The
 *  time range is lower inclusive and upper exclusive.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeInterval *timeRange;

@end


/**
 *  Response message for FeaturestoreService.DeleteFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponse : GTLRObject

/** Response for request specifying the entities to delete */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity *selectEntity;

/** Response for request specifying time range and feature */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature *selectTimeRangeAndFeature;

@end


/**
 *  Response message if the request uses the SelectEntity option.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity : GTLRObject

/**
 *  The count of deleted entity rows in the offline storage. Each row
 *  corresponds to the combination of an entity ID and a timestamp. One entity
 *  ID can have multiple rows in the offline storage.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offlineStorageDeletedEntityRowCount;

/**
 *  The count of deleted entities in the online storage. Each entity ID
 *  corresponds to one entity.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlineStorageDeletedEntityCount;

@end


/**
 *  Response message if the request uses the SelectTimeRangeAndFeature option.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature : GTLRObject

/**
 *  The count of the features or columns impacted. This is the same as the
 *  feature count in the request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impactedFeatureCount;

/**
 *  The count of modified entity rows in the offline storage. Each row
 *  corresponds to the combination of an entity ID and a timestamp. One entity
 *  ID can have multiple rows in the offline storage. Within each row, only the
 *  features specified in the request are deleted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offlineStorageModifiedEntityRowCount;

/**
 *  The count of modified entities in the online storage. Each entity ID
 *  corresponds to one entity. Within each entity, only the features specified
 *  in the request are deleted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlineStorageModifiedEntityCount;

@end


/**
 *  Details of operations that perform MetadataService.DeleteMetadataStore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata : GTLRObject

/** Operation metadata for deleting a MetadataStore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform deletes of any entities.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeleteOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  A deployment of an Index. IndexEndpoints contain one or more
 *  DeployedIndexes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex : GTLRObject

/**
 *  Optional. A description of resources that the DeployedIndex uses, which to
 *  large degree are decided by Vertex AI, and optionally allows only a modest
 *  additional configuration. If min_replica_count is not set, the default value
 *  is 2 (we don't provide SLA when min_replica_count=1). If max_replica_count
 *  is not set, the default value is min_replica_count. The max allowed replica
 *  count is 1000.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1AutomaticResources *automaticResources;

/** Output only. Timestamp when the DeployedIndex was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. A description of resources that are dedicated to the
 *  DeployedIndex, and that need a higher degree of manual configuration. The
 *  field min_replica_count must be set to a value strictly greater than 0, or
 *  else validation will fail. We don't provide SLA when min_replica_count=1. If
 *  max_replica_count is not set, the default value is min_replica_count. The
 *  max allowed replica count is 1000. Available machine types for SMALL shard:
 *  e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
 *  Available machine types for MEDIUM shard: e2-standard-16 and all machine
 *  types available for LARGE shard. Available machine types for LARGE shard:
 *  e2-highmem-16, n2d-standard-32. n1-standard-16 and n1-standard-32 are still
 *  available, but we recommend e2-standard-16 and e2-highmem-16 for cost
 *  efficiency.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources *dedicatedResources;

/**
 *  Optional. If set, the authentication is enabled for the private endpoint.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfig *deployedIndexAuthConfig;

/**
 *  Optional. The deployment group can be no longer than 64 characters (eg:
 *  'test', 'prod'). If not set, we will use the 'default' deployment group.
 *  Creating `deployment_groups` with `reserved_ip_ranges` is a recommended
 *  practice when the peered network has multiple peering ranges. This creates
 *  your deployments from predictable IP spaces for easier traffic
 *  administration. Also, one deployment_group (except 'default') can only be
 *  used with the same reserved_ip_ranges which means if the deployment_group
 *  has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or
 *  [d, e] is disallowed. Note: we only support up to 5 deployment groups(not
 *  including 'default').
 */
@property(nonatomic, copy, nullable) NSString *deploymentGroup;

/**
 *  The display name of the DeployedIndex. If not provided upon creation, the
 *  Index's display_name is used.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. If true, private endpoint's access logs are sent to Cloud Logging.
 *  These logs are like standard server access logs, containing information like
 *  timestamp and latency for each MatchRequest. Note that logs may incur a
 *  cost, especially if the deployed index receives a high queries per second
 *  rate (QPS). Estimate your costs before enabling this option.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAccessLogging;

/**
 *  Required. The user specified ID of the DeployedIndex. The ID can be up to
 *  128 characters long and must start with a letter and only contain letters,
 *  numbers, and underscores. The ID must be unique within the project it is
 *  created in.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. The name of the Index this is the deployment of. We may refer to
 *  this Index as the DeployedIndex's "original" Index.
 */
@property(nonatomic, copy, nullable) NSString *index;

/**
 *  Output only. The DeployedIndex may depend on various data on its original
 *  Index. Additionally when certain changes to the original Index are being
 *  done (e.g. when what the Index contains is being changed) the DeployedIndex
 *  may be asynchronously updated in the background to reflect these changes. If
 *  this timestamp's value is at least the Index.update_time of the original
 *  Index, it means that this DeployedIndex and the original Index are in sync.
 *  If this timestamp is older, then to see which updates this DeployedIndex
 *  already contains (and which it does not), one must list the operations that
 *  are running on the original Index. Only the successfully completed
 *  Operations with update_time equal or before this sync time are contained in
 *  this DeployedIndex.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *indexSyncTime;

/**
 *  Output only. Provides paths for users to send requests directly to the
 *  deployed index services running on Cloud via private services access. This
 *  field is populated if network is configured.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexPrivateEndpoints *privateEndpoints;

/**
 *  Optional. If set for PSC deployed index, PSC connection will be
 *  automatically created after deployment is done and the endpoint information
 *  is populated in private_endpoints.psc_automated_endpoints.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PSCAutomationConfig *> *pscAutomationConfigs;

/**
 *  Optional. A list of reserved ip ranges under the VPC network that can be
 *  used for this DeployedIndex. If set, we will deploy the index within the
 *  provided ip ranges. Otherwise, the index might be deployed to any ip ranges
 *  under the provided VPC network. The value should be the name of the address
 *  (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example:
 *  ['vertex-ai-ip-range']. For more information about subnets and network IP
 *  ranges, please see
 *  https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reservedIpRanges;

@end


/**
 *  Used to set up the auth on the DeployedIndex's private endpoint.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfig : GTLRObject

/** Defines the authentication provider that the DeployedIndex uses. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider *authProvider;

@end


/**
 *  Configuration for an authentication provider, including support for [JSON
 *  Web Token
 *  (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider : GTLRObject

/**
 *  A list of allowed JWT issuers. Each entry must be a valid Google service
 *  account, in the following format:
 *  `service-account-name\@project-id.iam.gserviceaccount.com`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedIssuers;

/**
 *  The list of JWT
 *  [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
 *  that are allowed to access. A JWT containing any of these audiences will be
 *  accepted.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *audiences;

@end


/**
 *  Points to a DeployedIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexRef : GTLRObject

/** Immutable. The ID of the DeployedIndex in the above IndexEndpoint. */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

/** Output only. The display name of the DeployedIndex. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Immutable. A resource name of the IndexEndpoint. */
@property(nonatomic, copy, nullable) NSString *indexEndpoint;

@end


/**
 *  A deployment of a Model. Endpoints contain one or more DeployedModels.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel : GTLRObject

/**
 *  A description of resources that to large degree are decided by Vertex AI,
 *  and require only a modest additional configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1AutomaticResources *automaticResources;

/** Output only. Timestamp when the DeployedModel was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A description of resources that are dedicated to the DeployedModel, and that
 *  need a higher degree of manual configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources *dedicatedResources;

/**
 *  For custom-trained Models and AutoML Tabular Models, the container of the
 *  DeployedModel instances will send `stderr` and `stdout` streams to Cloud
 *  Logging by default. Please note that the logs incur cost, which are subject
 *  to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User
 *  can disable container logging by setting this flag to true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableContainerLogging;

/**
 *  If true, deploy the model without explainable feature, regardless the
 *  existence of Model.explanation_spec or explanation_spec.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableExplanations;

/**
 *  The display name of the DeployedModel. If not provided upon creation, the
 *  Model's display_name is used.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  If true, online prediction access logs are sent to Cloud Logging. These logs
 *  are like standard server access logs, containing information like timestamp
 *  and latency for each prediction request. Note that logs may incur a cost,
 *  especially if your project receives prediction requests at a high queries
 *  per second rate (QPS). Estimate your costs before enabling this option.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAccessLogging;

/**
 *  Explanation configuration for this DeployedModel. When deploying a Model
 *  using EndpointService.DeployModel, this value overrides the value of
 *  Model.explanation_spec. All fields of explanation_spec are optional in the
 *  request. If a field of explanation_spec is not populated, the value of the
 *  same field of Model.explanation_spec is inherited. If the corresponding
 *  Model.explanation_spec is not populated, all fields of the explanation_spec
 *  will be used for the explanation configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec *explanationSpec;

/**
 *  Immutable. The ID of the DeployedModel. If not provided upon deployment,
 *  Vertex AI will generate a value for this ID. This value should be 1-10
 *  characters, and valid characters are `/[0-9]/`.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. The resource name of the Model that this is the deployment of.
 *  Note that the Model may be in a different location than the DeployedModel's
 *  Endpoint. The resource name may contain version id or version alias to
 *  specify the version. Example:
 *  `projects/{project}/locations/{location}/models/{model}\@2` or
 *  `projects/{project}/locations/{location}/models/{model}\@golden` if no
 *  version is specified, the default version will be deployed.
 */
@property(nonatomic, copy, nullable) NSString *model;

/** Output only. The version ID of the model that is deployed. */
@property(nonatomic, copy, nullable) NSString *modelVersionId;

/**
 *  Output only. Provide paths for users to send predict/explain/health requests
 *  directly to the deployed model services running on Cloud via private
 *  services access. This field is populated if network is configured.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PrivateEndpoints *privateEndpoints;

/**
 *  The service account that the DeployedModel's container runs as. Specify the
 *  email address of the service account. If this service account is not
 *  specified, the container runs as a service account that doesn't have access
 *  to the resource project. Users deploying the Model must have the
 *  `iam.serviceAccounts.actAs` permission on this service account.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  The resource name of the shared DeploymentResourcePool to deploy on. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *sharedResources;

@end


/**
 *  Points to a DeployedModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployedModelRef : GTLRObject

/** Immutable. An ID of a DeployedModel in the above Endpoint. */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/** Immutable. A resource name of an Endpoint. */
@property(nonatomic, copy, nullable) NSString *endpoint;

@end


/**
 *  Runtime operation information for IndexEndpointService.DeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexOperationMetadata : GTLRObject

/** The unique index id specified by user */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for IndexEndpointService.DeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexRequest : GTLRObject

/** Required. The DeployedIndex to be created within the IndexEndpoint. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *deployedIndex;

@end


/**
 *  Response message for IndexEndpointService.DeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexResponse : GTLRObject

/** The DeployedIndex that had been deployed in the IndexEndpoint. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *deployedIndex;

@end


/**
 *  A description of resources that can be shared by multiple DeployedModels,
 *  whose underlying specification consists of a DedicatedResources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool : GTLRObject

/** Output only. Timestamp when this DeploymentResourcePool was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The underlying DedicatedResources that the DeploymentResourcePool
 *  uses.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources *dedicatedResources;

/**
 *  If the DeploymentResourcePool is deployed with custom-trained Models or
 *  AutoML Tabular Models, the container(s) of the DeploymentResourcePool will
 *  send `stderr` and `stdout` streams to Cloud Logging by default. Please note
 *  that the logs incur cost, which are subject to [Cloud Logging
 *  pricing](https://cloud.google.com/logging/pricing). User can disable
 *  container logging by setting this flag to true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableContainerLogging;

/**
 *  Customer-managed encryption key spec for a DeploymentResourcePool. If set,
 *  this DeploymentResourcePool will be secured by this key. Endpoints and the
 *  DeploymentResourcePool they deploy in need to have the same EncryptionSpec.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Immutable. The resource name of the DeploymentResourcePool. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  The service account that the DeploymentResourcePool's container(s) run as.
 *  Specify the email address of the service account. If this service account is
 *  not specified, the container(s) run as a service account that doesn't have
 *  access to the resource project. Users deploying the Models to this
 *  DeploymentResourcePool must have the `iam.serviceAccounts.actAs` permission
 *  on this service account.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

@end


/**
 *  Runtime operation information for EndpointService.DeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployModelOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for EndpointService.DeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest : GTLRObject

/**
 *  Required. The DeployedModel to be created within the Endpoint. Note that
 *  Endpoint.traffic_split must be updated for the DeployedModel to start
 *  receiving traffic, either as part of this call, or via
 *  EndpointService.UpdateEndpoint.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *deployedModel;

/**
 *  A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
 *  that should be forwarded to that DeployedModel. If this field is non-empty,
 *  then the Endpoint's traffic_split will be overwritten with it. To refer to
 *  the ID of the just being deployed Model, a "0" should be used, and the
 *  actual ID of the new DeployedModel will be filled in its place by this
 *  method. The traffic percentage values must add up to 100. If this field is
 *  empty, then the Endpoint's traffic_split is not updated.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest_TrafficSplit *trafficSplit;

@end


/**
 *  A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
 *  that should be forwarded to that DeployedModel. If this field is non-empty,
 *  then the Endpoint's traffic_split will be overwritten with it. To refer to
 *  the ID of the just being deployed Model, a "0" should be used, and the
 *  actual ID of the new DeployedModel will be filled in its place by this
 *  method. The traffic percentage values must add up to 100. If this field is
 *  empty, then the Endpoint's traffic_split is not updated.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of intValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest_TrafficSplit : GTLRObject
@end


/**
 *  Response message for EndpointService.DeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DeployModelResponse : GTLRObject

/** The DeployedModel that had been deployed in the Endpoint. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *deployedModel;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1DestinationFeatureSetting
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DestinationFeatureSetting : GTLRObject

/**
 *  Specify the field name in the export destination. If not specified, Feature
 *  ID is used.
 */
@property(nonatomic, copy, nullable) NSString *destinationField;

/** Required. The ID of the Feature to apply the setting to. */
@property(nonatomic, copy, nullable) NSString *featureId;

@end


/**
 *  Request message for PredictionService.DirectPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictRequest : GTLRObject

/** The prediction input. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensor *> *inputs;

/** The parameters that govern the prediction. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensor *parameters;

@end


/**
 *  Response message for PredictionService.DirectPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictResponse : GTLRObject

/** The prediction output. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensor *> *outputs;

/** The parameters that govern the prediction. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensor *parameters;

@end


/**
 *  Request message for PredictionService.DirectRawPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictRequest : GTLRObject

/**
 *  The prediction input.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *input;

/**
 *  Fully qualified name of the API method being invoked to perform predictions.
 *  Format: `/namespace.Service/Method/` Example:
 *  `/tensorflow.serving.PredictionService/Predict`
 */
@property(nonatomic, copy, nullable) NSString *methodName;

@end


/**
 *  Response message for PredictionService.DirectRawPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictResponse : GTLRObject

/**
 *  The prediction output.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *output;

@end


/**
 *  Represents the spec of disk options.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DiskSpec : GTLRObject

/**
 *  Size in GB of the boot disk (default is 100GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bootDiskSizeGb;

/**
 *  Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd"
 *  (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard
 *  Disk Drive).
 */
@property(nonatomic, copy, nullable) NSString *bootDiskType;

@end


/**
 *  A list of double values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1DoubleArray : GTLRObject

/**
 *  A list of double values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Represents a customer-managed encryption key spec that can be applied to a
 *  top-level resource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec : GTLRObject

/**
 *  Required. The Cloud KMS resource identifier of the customer managed
 *  encryption key used to protect a resource. Has the form:
 *  `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
 *  The key needs to be in the same region as where the compute resource is
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

@end


/**
 *  Models are deployed into it, and afterwards Endpoint is called to obtain
 *  predictions and explanations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Endpoint : GTLRObject

/** Output only. Timestamp when this Endpoint was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. DNS of the dedicated endpoint. Will only be populated if
 *  dedicated_endpoint_enabled is true. Format:
 *  `https://{endpoint_id}.{region}-{project_number}.prediction.vertexai.goog`.
 */
@property(nonatomic, copy, nullable) NSString *dedicatedEndpointDns;

/**
 *  If true, the endpoint will be exposed through a dedicated DNS
 *  [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS will be
 *  isolated from other users' traffic and will have better performance and
 *  reliability. Note: Once you enabled dedicated endpoint, you won't be able to
 *  send request to the shared DNS {region}-aiplatform.googleapis.com. The
 *  limitation will be removed soon.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dedicatedEndpointEnabled;

/**
 *  Output only. The models deployed in this Endpoint. To add or remove
 *  DeployedModels use EndpointService.DeployModel and
 *  EndpointService.UndeployModel respectively.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *> *deployedModels;

/**
 *  The description of the Endpoint.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the Endpoint. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Deprecated: If true, expose the Endpoint via private service connect. Only
 *  one of the fields, network or enable_private_service_connect, can be set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePrivateServiceConnect GTLR_DEPRECATED;

/**
 *  Customer-managed encryption key spec for an Endpoint. If set, this Endpoint
 *  and all sub-resources of this Endpoint will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your Endpoints. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_Labels *labels;

/**
 *  Output only. Resource name of the Model Monitoring job associated with this
 *  Endpoint if monitoring is enabled by
 *  JobService.CreateModelDeploymentMonitoringJob. Format:
 *  `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
 */
@property(nonatomic, copy, nullable) NSString *modelDeploymentMonitoringJob;

/** Output only. The resource name of the Endpoint. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The full name of the Google Compute Engine
 *  [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
 *  to which the Endpoint should be peered. Private services access must already
 *  be configured for the network. If left unspecified, the Endpoint is not
 *  peered with any network. Only one of the fields, network or
 *  enable_private_service_connect, can be set.
 *  [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
 *  `projects/{project}/global/networks/{network}`. Where `{project}` is a
 *  project number, as in `12345`, and `{network}` is network name.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** Configures the request-response logging for online prediction. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig *predictRequestResponseLoggingConfig;

/**
 *  Optional. Configuration for private service connect. network and
 *  private_service_connect_config are mutually exclusive.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PrivateServiceConnectConfig *privateServiceConnectConfig;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
 *  that should be forwarded to that DeployedModel. If a DeployedModel's ID is
 *  not listed in this map, then it receives no traffic. The traffic percentage
 *  values must add up to 100, or map must be empty if the Endpoint is to not
 *  accept any traffic at a moment.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_TrafficSplit *trafficSplit;

/** Output only. Timestamp when this Endpoint was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Endpoints. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_Labels : GTLRObject
@end


/**
 *  A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
 *  that should be forwarded to that DeployedModel. If a DeployedModel's ID is
 *  not listed in this map, then it receives no traffic. The traffic percentage
 *  values must add up to 100, or map must be empty if the Endpoint is to not
 *  accept any traffic at a moment.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of intValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Endpoint_TrafficSplit : GTLRObject
@end


/**
 *  Selector for entityId. Getting ids from the given source.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EntityIdSelector : GTLRObject

/** Source of Csv */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CsvSource *csvSource;

/**
 *  Source column that holds entity IDs. If not provided, entity IDs are
 *  extracted from the column named entity_id.
 */
@property(nonatomic, copy, nullable) NSString *entityIdField;

@end


/**
 *  An entity type is a type of object in a system that needs to be modeled and
 *  have stored information about. For example, driver is an entity type, and
 *  driver0 is an instance of an entity type driver.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EntityType : GTLRObject

/** Output only. Timestamp when this EntityType was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of the EntityType.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Used to perform a consistent read-modify-write updates. If not
 *  set, a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  EntityTypes. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one EntityType (System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EntityType_Labels *labels;

/**
 *  Optional. The default monitoring configuration for all Features with value
 *  type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this
 *  EntityType. If this is populated with
 *  [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot
 *  analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is
 *  disabled.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfig *monitoringConfig;

/**
 *  Immutable. Name of the EntityType. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
 *  The last part entity_type is assigned by the client. The entity_type can be
 *  up to 64 characters long and can consist only of ASCII Latin letters A-Z and
 *  a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The
 *  value will be unique given a featurestore.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Config for data retention policy in offline storage. TTL in days
 *  for feature values that will be stored in offline storage. The Feature Store
 *  offline storage periodically removes obsolete feature values older than
 *  `offline_storage_ttl_days` since the feature generation time. If unset (or
 *  explicitly set to 0), default to 4000 days TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offlineStorageTtlDays;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Output only. Timestamp when this EntityType was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  EntityTypes. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one EntityType (System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EntityType_Labels : GTLRObject
@end


/**
 *  Represents an environment variable present in a Container or Python Module.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EnvVar : GTLRObject

/**
 *  Required. Name of the environment variable. Must be a valid C identifier.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Variables that reference a $(VAR_NAME) are expanded using the
 *  previous defined environment variables in the container and any service
 *  environment variables. If a variable cannot be resolved, the reference in
 *  the input string will be unchanged. The $(VAR_NAME) syntax can be escaped
 *  with a double $$, ie: $$(VAR_NAME). Escaped references will never be
 *  expanded, regardless of whether the variable exists or not.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Model error analysis for each annotation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation : GTLRObject

/**
 *  Attributed items for a given annotation, typically representing neighbors
 *  from the training sets constrained by the query type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem *> *attributedItems;

/**
 *  The outlier score of this annotated item. Usually defined as the min of all
 *  distances from attributed items.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *outlierScore;

/**
 *  The threshold used to determine if this annotation is an outlier or not.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *outlierThreshold;

/**
 *  The query type used for finding the attributed items.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_AllSimilar
 *        Query similar samples across all classes in the dataset. (Value:
 *        "ALL_SIMILAR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_QueryTypeUnspecified
 *        Unspecified query type for model error analysis. (Value:
 *        "QUERY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_SameClassDissimilar
 *        Query dissimilar samples from the same class of the input sample.
 *        (Value: "SAME_CLASS_DISSIMILAR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation_QueryType_SameClassSimilar
 *        Query similar samples from the same class of the input sample. (Value:
 *        "SAME_CLASS_SIMILAR")
 */
@property(nonatomic, copy, nullable) NSString *queryType;

@end


/**
 *  Attributed items for a given annotation, typically representing neighbors
 *  from the training sets constrained by the query type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem : GTLRObject

/**
 *  The unique ID for each annotation. Used by FE to allocate the annotation in
 *  DB.
 */
@property(nonatomic, copy, nullable) NSString *annotationResourceName;

/**
 *  The distance of this item to the annotation.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distance;

@end


/**
 *  True positive, false positive, or false negative. EvaluatedAnnotation is
 *  only available under ModelEvaluationSlice with slice of `annotationSpec`
 *  dimension.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation : GTLRObject

/**
 *  Output only. The data item payload that the Model predicted this
 *  EvaluatedAnnotation on.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id dataItemPayload;

/** Annotations of model error analysis results. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ErrorAnalysisAnnotation *> *errorAnalysisAnnotations;

/**
 *  Output only. ID of the EvaluatedDataItemView under the same ancestor
 *  ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and
 *  predictions on data_item_payload.
 */
@property(nonatomic, copy, nullable) NSString *evaluatedDataItemViewId;

/**
 *  Explanations of predictions. Each element of the explanations indicates the
 *  explanation for one explanation Method. The attributions list in the
 *  EvaluatedAnnotationExplanation.explanation object corresponds to the
 *  predictions list. For example, the second element in the attributions list
 *  explains the second element in the predictions list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotationExplanation *> *explanations;

/**
 *  Output only. The ground truth Annotations, i.e. the Annotations that exist
 *  in the test data the Model is evaluated on. For true positive, there is one
 *  and only one ground truth annotation, which matches the only prediction in
 *  predictions. For false positive, there are zero or more ground truth
 *  annotations that are similar to the only prediction in predictions, but not
 *  enough for a match. For false negative, there is one and only one ground
 *  truth annotation, which doesn't match any predictions created by the model.
 *  The schema of the ground truth is stored in
 *  ModelEvaluation.annotation_schema_uri
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *groundTruths;

/**
 *  Output only. The model predicted annotations. For true positive, there is
 *  one and only one prediction, which matches the only one ground truth
 *  annotation in ground_truths. For false positive, there is one and only one
 *  prediction, which doesn't match any ground truth annotation of the
 *  corresponding data_item_view_id. For false negative, there are zero or more
 *  predictions which are similar to the only ground truth annotation in
 *  ground_truths but not enough for a match. The schema of the prediction is
 *  stored in ModelEvaluation.annotation_schema_uri
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *predictions;

/**
 *  Output only. Type of the EvaluatedAnnotation.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_EvaluatedAnnotationTypeUnspecified
 *        Invalid value. (Value: "EVALUATED_ANNOTATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_FalseNegative
 *        The EvaluatedAnnotation is false negative. It has a ground truth
 *        annotation which is not matched by any of the model created
 *        predictions. (Value: "FALSE_NEGATIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_FalsePositive
 *        The EvaluatedAnnotation is false positive. It has a prediction created
 *        by the Model which does not match any ground truth annotation. (Value:
 *        "FALSE_POSITIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotation_Type_TruePositive
 *        The EvaluatedAnnotation is a true positive. It has a prediction
 *        created by the Model and a ground truth Annotation which the
 *        prediction matches. (Value: "TRUE_POSITIVE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Explanation result of the prediction produced by the Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EvaluatedAnnotationExplanation : GTLRObject

/** Explanation attribution response details. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Explanation *explanation;

/**
 *  Explanation type. For AutoML Image Classification models, possible values
 *  are: * `image-integrated-gradients` * `image-xrai`
 */
@property(nonatomic, copy, nullable) NSString *explanationType;

@end


/**
 *  Request message for EvaluationService.EvaluateInstances.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesRequest : GTLRObject

/** Instances and metric spec for bleu metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BleuInput *bleuInput;

/** Input for coherence metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CoherenceInput *coherenceInput;

/**
 *  Auto metric instances. Instances and metric spec for exact match metric.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInput *exactMatchInput;

/**
 *  LLM-based metric instance. General text generation metrics, applicable to
 *  other categories. Input for fluency metric.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FluencyInput *fluencyInput;

/** Input for fulfillment metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInput *fulfillmentInput;

/** Input for groundedness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInput *groundednessInput;

/** Input for pairwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInput *pairwiseMetricInput;

/** Input for pairwise question answering quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput *pairwiseQuestionAnsweringQualityInput;

/** Input for pairwise summarization quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInput *pairwiseSummarizationQualityInput;

/** Input for pointwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInput *pointwiseMetricInput;

/** Input for question answering correctness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput *questionAnsweringCorrectnessInput;

/** Input for question answering helpfulness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput *questionAnsweringHelpfulnessInput;

/** Input for question answering quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInput *questionAnsweringQualityInput;

/** Input for question answering relevance metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput *questionAnsweringRelevanceInput;

/** Instances and metric spec for rouge metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RougeInput *rougeInput;

/** Input for safety metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SafetyInput *safetyInput;

/** Input for summarization helpfulness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInput *summarizationHelpfulnessInput;

/** Input for summarization quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInput *summarizationQualityInput;

/** Input for summarization verbosity metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInput *summarizationVerbosityInput;

/** Tool call metric instances. Input for tool call valid metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInput *toolCallValidInput;

/** Input for tool name match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInput *toolNameMatchInput;

/** Input for tool parameter key match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInput *toolParameterKeyMatchInput;

/** Input for tool parameter key value match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInput *toolParameterKvMatchInput;

@end


/**
 *  Response message for EvaluationService.EvaluateInstances.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesResponse : GTLRObject

/** Results for bleu metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BleuResults *bleuResults;

/** Result for coherence metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CoherenceResult *coherenceResult;

/** Auto metric evaluation results. Results for exact match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchResults *exactMatchResults;

/**
 *  LLM-based metric evaluation result. General text generation metrics,
 *  applicable to other categories. Result for fluency metric.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FluencyResult *fluencyResult;

/** Result for fulfillment metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentResult *fulfillmentResult;

/** Result for groundedness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundednessResult *groundednessResult;

/** Result for pairwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult *pairwiseMetricResult;

/** Result for pairwise question answering quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult *pairwiseQuestionAnsweringQualityResult;

/** Result for pairwise summarization quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult *pairwiseSummarizationQualityResult;

/** Generic metrics. Result for pointwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricResult *pointwiseMetricResult;

/** Result for question answering correctness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult *questionAnsweringCorrectnessResult;

/** Result for question answering helpfulness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult *questionAnsweringHelpfulnessResult;

/**
 *  Question answering only metrics. Result for question answering quality
 *  metric.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityResult *questionAnsweringQualityResult;

/** Result for question answering relevance metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult *questionAnsweringRelevanceResult;

/** Results for rouge metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RougeResults *rougeResults;

/** Result for safety metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SafetyResult *safetyResult;

/** Result for summarization helpfulness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessResult *summarizationHelpfulnessResult;

/** Summarization only metrics. Result for summarization quality metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityResult *summarizationQualityResult;

/** Result for summarization verbosity metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityResult *summarizationVerbosityResult;

/** Tool call metrics. Results for tool call valid metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidResults *toolCallValidResults;

/** Results for tool name match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchResults *toolNameMatchResults;

/** Results for tool parameter key match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchResults *toolParameterKeyMatchResults;

/** Results for tool parameter key value match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchResults *toolParameterKvMatchResults;

@end


/**
 *  An edge describing the relationship between an Artifact and an Execution in
 *  a lineage graph.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Event : GTLRObject

/** Required. The relative resource name of the Artifact in the Event. */
@property(nonatomic, copy, nullable) NSString *artifact;

/** Output only. Time the Event occurred. */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/** Output only. The relative resource name of the Execution in the Event. */
@property(nonatomic, copy, nullable) NSString *execution;

/**
 *  The labels with user-defined metadata to annotate Events. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Event (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Event_Labels *labels;

/**
 *  Required. The type of the Event.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_Input An input
 *        of the Execution. (Value: "INPUT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_Output An output
 *        of the Execution. (Value: "OUTPUT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Event_Type_TypeUnspecified
 *        Unspecified whether input or output of the Execution. (Value:
 *        "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The labels with user-defined metadata to annotate Events. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. No more than 64 user labels can be
 *  associated with one Event (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Event_Labels : GTLRObject
@end


/**
 *  Input for exact match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInput : GTLRObject

/** Required. Repeated exact match instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInstance *> *instances;

/** Required. Spec for exact match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchSpec *metricSpec;

@end


/**
 *  Spec for exact match instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Exact match metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchMetricValue : GTLRObject

/**
 *  Output only. Exact match score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for exact match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchResults : GTLRObject

/** Output only. Exact match metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchMetricValue *> *exactMatchMetricValues;

@end


/**
 *  Spec for exact match metric - returns 1 if prediction and reference exactly
 *  matches, otherwise 0.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExactMatchSpec : GTLRObject
@end


/**
 *  Example-based explainability that returns the nearest neighbors from the
 *  provided dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Examples : GTLRObject

/** The Cloud Storage input instances. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource *exampleGcsSource;

/**
 *  The full configuration for the generated index, the semantics are the same
 *  as metadata and should match
 *  [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id nearestNeighborSearchConfig;

/**
 *  The number of neighbors to return when querying for examples.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *neighborCount;

/**
 *  Simplified preset configuration, which automatically sets configuration
 *  values based on the desired query speed-precision trade-off and modality.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Presets *presets;

@end


/**
 *  The Cloud Storage input instances.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource : GTLRObject

/**
 *  The format in which instances are given, if not specified, assume it's JSONL
 *  format. Currently only JSONL format is supported.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource_DataFormat_DataFormatUnspecified
 *        Format unspecified, used when unset. (Value:
 *        "DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesExampleGcsSource_DataFormat_Jsonl
 *        Examples are stored in JSONL files. (Value: "JSONL")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/** The Cloud Storage location for the input instances. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

@end


/**
 *  Overrides for example-based explanations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride : GTLRObject

/**
 *  The number of neighbors to return that have the same crowding tag.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *crowdingCount;

/**
 *  The format of the data being provided with each call.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_DataFormatUnspecified
 *        Unspecified format. Must not be used. (Value:
 *        "DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_Embeddings
 *        Provided data is a set of embeddings. (Value: "EMBEDDINGS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride_DataFormat_Instances
 *        Provided data is a set of model inputs. (Value: "INSTANCES")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/**
 *  The number of neighbors to return.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *neighborCount;

/** Restrict the resulting nearest neighbors to respect these constraints. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ExamplesRestrictionsNamespace *> *restrictions;

/**
 *  If true, return the embeddings instead of neighbors.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnEmbeddings;

@end


/**
 *  Restrictions namespace for example-based explanations overrides.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExamplesRestrictionsNamespace : GTLRObject

/** The list of allowed tags. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allow;

/** The list of deny tags. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deny;

/** The namespace name. */
@property(nonatomic, copy, nullable) NSString *namespaceName;

@end


/**
 *  Instance of a general execution.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Execution : GTLRObject

/** Output only. Timestamp when this Execution was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the Execution
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  User provided display name of the Execution. May be up to 128 Unicode
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  An eTag used to perform consistent read-modify-write updates. If not set, a
 *  blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your Executions. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. No more than 64 user labels
 *  can be associated with one Execution (System labels are excluded).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Execution_Labels *labels;

/**
 *  Properties of the Execution. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Execution_Metadata *metadata;

/** Output only. The resource name of the Execution. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The title of the schema describing the metadata. Schema title and version is
 *  expected to be registered in earlier Create Schema calls. And both are used
 *  together as unique identifiers to identify schemas within the local metadata
 *  store.
 */
@property(nonatomic, copy, nullable) NSString *schemaTitle;

/**
 *  The version of the schema in `schema_title` to use. Schema title and version
 *  is expected to be registered in earlier Create Schema calls. And both are
 *  used together as unique identifiers to identify schemas within the local
 *  metadata store.
 */
@property(nonatomic, copy, nullable) NSString *schemaVersion;

/**
 *  The state of this Execution. This is a property of the Execution, and does
 *  not imply or capture any ongoing process. This property is managed by
 *  clients (such as Vertex AI Pipelines) and the system does not prescribe or
 *  check the validity of state transitions.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Cached The
 *        Execution completed through Cache hit. (Value: "CACHED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Cancelled
 *        The Execution was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Complete
 *        The Execution has finished running (Value: "COMPLETE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Failed The
 *        Execution has failed (Value: "FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_New The
 *        Execution is new (Value: "NEW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_Running The
 *        Execution is running (Value: "RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Execution_State_StateUnspecified
 *        Unspecified Execution state (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when this Execution was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Executions. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. No more than 64 user labels
 *  can be associated with one Execution (System labels are excluded).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Execution_Labels : GTLRObject
@end


/**
 *  Properties of the Execution. Top level metadata keys' heading and trailing
 *  spaces will be trimmed. The size of this field should not exceed 200KB.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Execution_Metadata : GTLRObject
@end


/**
 *  Request message for PredictionService.Explain.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplainRequest : GTLRObject

/**
 *  If specified, this ExplainRequest will be served by the chosen
 *  DeployedModel, overriding Endpoint.traffic_split.
 */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  If specified, overrides the explanation_spec of the DeployedModel. Can be
 *  used for explaining prediction results with different configurations, such
 *  as: - Explaining top-5 predictions results as opposed to top-1; - Increasing
 *  path count or step count of the attribution methods to reduce approximate
 *  errors; - Using different baselines for explaining the prediction results.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpecOverride *explanationSpecOverride;

/**
 *  Required. The instances that are the input to the explanation call. A
 *  DeployedModel may have an upper limit on the number of instances it supports
 *  per request, and when it is exceeded the explanation call errors in case of
 *  AutoML Models, or, in case of customer created Models, the behaviour is as
 *  documented by that Model. The schema of any single instance may be specified
 *  via Endpoint's DeployedModels' Model's PredictSchemata's
 *  instance_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *instances;

/**
 *  The parameters that govern the prediction. The schema of the parameters may
 *  be specified via Endpoint's DeployedModels' Model's PredictSchemata's
 *  parameters_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id parameters;

@end


/**
 *  Response message for PredictionService.Explain.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplainResponse : GTLRObject

/** ID of the Endpoint's DeployedModel that served this explanation. */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  The explanations of the Model's PredictResponse.predictions. It has the same
 *  number of elements as instances to be explained.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Explanation *> *explanations;

/**
 *  The predictions that are the output of the predictions call. Same as
 *  PredictResponse.predictions.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *predictions;

@end


/**
 *  Explanation of a prediction (provided in PredictResponse.predictions)
 *  produced by the Model on a given instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Explanation : GTLRObject

/**
 *  Output only. Feature attributions grouped by predicted outputs. For Models
 *  that predict only one output, such as regression Models that predict only
 *  one score, there is only one attibution that explains the predicted output.
 *  For Models that predict multiple outputs, such as multiclass Models that
 *  predict multiple classes, each element explains one specific item.
 *  Attribution.output_index can be used to identify which output this
 *  attribution is explaining. By default, we provide Shapley values for the
 *  predicted class. However, you can configure the explanation request to
 *  generate Shapley values for any other classes too. For example, if a model
 *  predicts a probability of `0.4` for approving a loan application, the
 *  model's decision is to reject the application since `p(reject) = 0.6 >
 *  p(approve) = 0.4`, and the default Shapley values would be computed for
 *  rejection decision and not approval, even though the latter might be the
 *  positive class. If users set ExplanationParameters.top_k, the attributions
 *  are sorted by instance_output_value in descending order. If
 *  ExplanationParameters.output_indices is specified, the attributions are
 *  stored by Attribution.output_index in the same order as they appear in the
 *  output_indices.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Attribution *> *attributions;

/**
 *  Output only. List of the nearest neighbors for example-based explanations.
 *  For models deployed with the examples explanations feature enabled, the
 *  attributions field is empty and instead the neighbors field is populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Neighbor *> *neighbors;

@end


/**
 *  Metadata describing the Model's input and output for explanation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata : GTLRObject

/**
 *  Points to a YAML file stored on Google Cloud Storage describing the format
 *  of the feature attributions. The schema is defined as an OpenAPI 3.0.2
 *  [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  AutoML tabular Models always have this field populated by Vertex AI. Note:
 *  The URI given on output may be different, including the URI scheme, than the
 *  one given on input. The output URI will point to a location where the user
 *  only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *featureAttributionsSchemaUri;

/**
 *  Required. Map from feature names to feature input metadata. Keys are the
 *  name of the features. Values are the specification of the feature. An empty
 *  InputMetadata is valid. It describes a text feature which has the name
 *  specified as the key in ExplanationMetadata.inputs. The baseline of the
 *  empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow
 *  images, the key can be any friendly name of the feature. Once specified,
 *  featureAttributions are keyed by this key (if not grouped with another
 *  feature). For custom images, the key must match with the key in instance.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Inputs *inputs;

/**
 *  Name of the source to generate embeddings for example based explanations.
 */
@property(nonatomic, copy, nullable) NSString *latentSpaceSource;

/**
 *  Required. Map from output names to output metadata. For Vertex AI-provided
 *  Tensorflow images, keys can be any user defined string that consists of any
 *  UTF-8 characters. For custom images, keys are the name of the output field
 *  in the prediction to be explained. Currently only one key is allowed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Outputs *outputs;

@end


/**
 *  Required. Map from feature names to feature input metadata. Keys are the
 *  name of the features. Values are the specification of the feature. An empty
 *  InputMetadata is valid. It describes a text feature which has the name
 *  specified as the key in ExplanationMetadata.inputs. The baseline of the
 *  empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow
 *  images, the key can be any friendly name of the feature. Once specified,
 *  featureAttributions are keyed by this key (if not grouped with another
 *  feature). For custom images, the key must match with the key in instance.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Inputs : GTLRObject
@end


/**
 *  Required. Map from output names to output metadata. For Vertex AI-provided
 *  Tensorflow images, keys can be any user defined string that consists of any
 *  UTF-8 characters. For custom images, keys are the name of the output field
 *  in the prediction to be explained. Currently only one key is allowed.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata_Outputs : GTLRObject
@end


/**
 *  Metadata of the input of a feature. Fields other than
 *  InputMetadata.input_baselines are applicable only for Models that are using
 *  Vertex AI-provided images for Tensorflow.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata : GTLRObject

/**
 *  Specifies the shape of the values of the input if the input is a sparse
 *  representation. Refer to Tensorflow documentation for more details:
 *  https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
 */
@property(nonatomic, copy, nullable) NSString *denseShapeTensorName;

/**
 *  A list of baselines for the encoded tensor. The shape of each baseline
 *  should match the shape of the encoded tensor. If a scalar is provided,
 *  Vertex AI broadcasts to the same shape as the encoded tensor.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *encodedBaselines;

/**
 *  Encoded tensor is a transformation of the input tensor. Must be provided if
 *  choosing Integrated Gradients attribution or XRAI attribution and the input
 *  tensor is not differentiable. An encoded tensor is generated if the input
 *  tensor is encoded by a lookup table.
 */
@property(nonatomic, copy, nullable) NSString *encodedTensorName;

/**
 *  Defines how the feature is encoded into the input tensor. Defaults to
 *  IDENTITY.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_BagOfFeatures
 *        The tensor represents a bag of features where each index maps to a
 *        feature. InputMetadata.index_feature_mapping must be provided for this
 *        encoding. For example: ``` input = [27, 6.0, 150]
 *        index_feature_mapping = ["age", "height", "weight"] ``` (Value:
 *        "BAG_OF_FEATURES")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_BagOfFeaturesSparse
 *        The tensor represents a bag of features where each index maps to a
 *        feature. Zero values in the tensor indicates feature being
 *        non-existent. InputMetadata.index_feature_mapping must be provided for
 *        this encoding. For example: ``` input = [2, 0, 5, 0, 1]
 *        index_feature_mapping = ["a", "b", "c", "d", "e"] ``` (Value:
 *        "BAG_OF_FEATURES_SPARSE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_CombinedEmbedding
 *        The tensor is encoded into a 1-dimensional array represented by an
 *        encoded tensor. InputMetadata.encoded_tensor_name must be provided for
 *        this encoding. For example: ``` input = ["This", "is", "a", "test",
 *        "."] encoded = [0.1, 0.2, 0.3, 0.4, 0.5] ``` (Value:
 *        "COMBINED_EMBEDDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_ConcatEmbedding
 *        Select this encoding when the input tensor is encoded into a
 *        2-dimensional array represented by an encoded tensor.
 *        InputMetadata.encoded_tensor_name must be provided for this encoding.
 *        The first dimension of the encoded tensor's shape is the same as the
 *        input tensor's shape. For example: ``` input = ["This", "is", "a",
 *        "test", "."] encoded = [[0.1, 0.2, 0.3, 0.4, 0.5], [0.2, 0.1, 0.4,
 *        0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5, 0.3, 0.1, 0.2, 0.4], [0.4,
 *        0.3, 0.2, 0.5, 0.1]] ``` (Value: "CONCAT_EMBEDDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_EncodingUnspecified
 *        Default value. This is the same as IDENTITY. (Value:
 *        "ENCODING_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_Identity
 *        The tensor represents one feature. (Value: "IDENTITY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadata_Encoding_Indicator
 *        The tensor is a list of binaries representing whether a feature exists
 *        or not (1 indicates existence). InputMetadata.index_feature_mapping
 *        must be provided for this encoding. For example: ``` input = [1, 0, 1,
 *        0, 1] index_feature_mapping = ["a", "b", "c", "d", "e"] ``` (Value:
 *        "INDICATOR")
 */
@property(nonatomic, copy, nullable) NSString *encoding;

/**
 *  The domain details of the input feature value. Like min/max, original mean
 *  or standard deviation if normalized.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain *featureValueDomain;

/**
 *  Name of the group that the input belongs to. Features with the same group
 *  name will be treated as one feature when computing attributions. Features
 *  grouped together can have different shapes in value. If provided, there will
 *  be one single attribution generated in Attribution.feature_attributions,
 *  keyed by the group name.
 */
@property(nonatomic, copy, nullable) NSString *groupName;

/**
 *  A list of feature names for each index in the input tensor. Required when
 *  the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE,
 *  INDICATOR.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *indexFeatureMapping;

/**
 *  Specifies the index of the values of the input tensor. Required when the
 *  input tensor is a sparse representation. Refer to Tensorflow documentation
 *  for more details:
 *  https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
 */
@property(nonatomic, copy, nullable) NSString *indicesTensorName;

/**
 *  Baseline inputs for this feature. If no baseline is specified, Vertex AI
 *  chooses the baseline for this feature. If multiple baselines are specified,
 *  Vertex AI returns the average attributions across them in
 *  Attribution.feature_attributions. For Vertex AI-provided Tensorflow images
 *  (both 1.x and 2.x), the shape of each baseline must match the shape of the
 *  input tensor. If a scalar is provided, we broadcast to the same shape as the
 *  input tensor. For custom images, the element of the baselines must be in the
 *  same format as the feature's input in the instance[]. The schema of any
 *  single instance may be specified via Endpoint's DeployedModels' Model's
 *  PredictSchemata's instance_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *inputBaselines;

/**
 *  Name of the input tensor for this feature. Required and is only applicable
 *  to Vertex AI-provided images for Tensorflow.
 */
@property(nonatomic, copy, nullable) NSString *inputTensorName;

/**
 *  Modality of the feature. Valid values are: numeric, image. Defaults to
 *  numeric.
 */
@property(nonatomic, copy, nullable) NSString *modality;

/** Visualization configurations for image explanation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization *visualization;

@end


/**
 *  Domain details of the input feature value. Provides numeric information
 *  about the feature, such as its range (min, max). If the feature has been
 *  pre-processed, for example with z-scoring, then it provides information
 *  about how to recover the original feature. For example, if the input feature
 *  is an image and it has been pre-processed to obtain 0-mean and stddev = 1
 *  values, then original_mean, and original_stddev refer to the mean and stddev
 *  of the original feature (e.g. image tensor) from which input feature (with
 *  mean = 0 and stddev = 1) was obtained.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain : GTLRObject

/**
 *  The maximum permissible value for this feature.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  The minimum permissible value for this feature.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

/**
 *  If this input feature has been normalized to a mean value of 0, the
 *  original_mean specifies the mean value of the domain prior to normalization.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *originalMean;

/**
 *  If this input feature has been normalized to a standard deviation of 1.0,
 *  the original_stddev specifies the standard deviation of the domain prior to
 *  normalization.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *originalStddev;

@end


/**
 *  Visualization configurations for image explanation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization : GTLRObject

/**
 *  Excludes attributions below the specified percentile, from the highlighted
 *  areas. Defaults to 62.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clipPercentLowerbound;

/**
 *  Excludes attributions above the specified percentile from the highlighted
 *  areas. Using the clip_percent_upperbound and clip_percent_lowerbound
 *  together can be useful for filtering out noise and making it easier to see
 *  areas of strong attribution. Defaults to 99.9.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clipPercentUpperbound;

/**
 *  The color scheme used for the highlighted areas. Defaults to PINK_GREEN for
 *  Integrated Gradients attribution, which shows positive attributions in green
 *  and negative in pink. Defaults to VIRIDIS for XRAI attribution, which
 *  highlights the most influential regions in yellow and the least influential
 *  in blue.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_ColorMapUnspecified
 *        Should not be used. (Value: "COLOR_MAP_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Green
 *        Positive: green. Negative: green. (Value: "GREEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_PinkGreen
 *        Positive: green. Negative: pink. (Value: "PINK_GREEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_PinkWhiteGreen
 *        PiYG palette. (Value: "PINK_WHITE_GREEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Red
 *        Positive: red. Negative: red. (Value: "RED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_RedGreen
 *        Positive: green. Negative: red. (Value: "RED_GREEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_ColorMap_Viridis
 *        Viridis color map: A perceptually uniform color mapping which is
 *        easier to see by those with colorblindness and progresses from yellow
 *        to green to blue. Positive: yellow. Negative: blue. (Value: "VIRIDIS")
 */
@property(nonatomic, copy, nullable) NSString *colorMap;

/**
 *  How the original image is displayed in the visualization. Adjusting the
 *  overlay can help increase visual clarity if the original image makes it
 *  difficult to view the visualization. Defaults to NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_Grayscale
 *        The attributions are shown on top of grayscaled version of the
 *        original image. (Value: "GRAYSCALE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_MaskBlack
 *        The attributions are used as a mask to reveal predictive parts of the
 *        image and hide the un-predictive parts. (Value: "MASK_BLACK")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_None
 *        No overlay. (Value: "NONE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_Original
 *        The attributions are shown on top of the original image. (Value:
 *        "ORIGINAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_OverlayType_OverlayTypeUnspecified
 *        Default value. This is the same as NONE. (Value:
 *        "OVERLAY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *overlayType;

/**
 *  Whether to only highlight pixels with positive contributions, negative or
 *  both. Defaults to POSITIVE.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Both
 *        Shows both positive and negative attributions. (Value: "BOTH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Negative
 *        Setting polarity to negative highlights areas that does not lead to
 *        the models's current prediction. (Value: "NEGATIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_PolarityUnspecified
 *        Default value. This is the same as POSITIVE. (Value:
 *        "POLARITY_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Polarity_Positive
 *        Highlights the pixels/outlines that were most influential to the
 *        model's prediction. (Value: "POSITIVE")
 */
@property(nonatomic, copy, nullable) NSString *polarity;

/**
 *  Type of the image visualization. Only applicable to Integrated Gradients
 *  attribution. OUTLINES shows regions of attribution, while PIXELS shows
 *  per-pixel attribution. Defaults to OUTLINES.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_Outlines
 *        Shows which region contributed to the image prediction by outlining
 *        the region. (Value: "OUTLINES")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_Pixels
 *        Shows which pixel contributed to the image prediction. (Value:
 *        "PIXELS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization_Type_TypeUnspecified
 *        Should not be used. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Metadata of the prediction output to be explained.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata : GTLRObject

/**
 *  Specify a field name in the prediction to look for the display name. Use
 *  this if the prediction contains the display names for the outputs. The
 *  display names in the prediction must have the same shape of the outputs, so
 *  that it can be located by Attribution.output_index for a specific output.
 */
@property(nonatomic, copy, nullable) NSString *displayNameMappingKey;

/**
 *  Static mapping between the index and display name. Use this if the outputs
 *  are a deterministic n-dimensional array, e.g. a list of scores of all the
 *  classes in a pre-defined order for a multi-classification Model. It's not
 *  feasible if the outputs are non-deterministic, e.g. the Model produces top-k
 *  classes or sort the outputs by their values. The shape of the value must be
 *  an n-dimensional array of strings. The number of dimensions must match that
 *  of the outputs to be explained. The Attribution.output_display_name is
 *  populated by locating in the mapping with Attribution.output_index.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id indexDisplayNameMapping;

/**
 *  Name of the output tensor. Required and is only applicable to Vertex AI
 *  provided images for Tensorflow.
 */
@property(nonatomic, copy, nullable) NSString *outputTensorName;

@end


/**
 *  The ExplanationMetadata entries that can be overridden at online explanation
 *  time.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride : GTLRObject

/**
 *  Required. Overrides the input metadata of the features. The key is the name
 *  of the feature to be overridden. The keys specified here must exist in the
 *  input metadata to be overridden. If a feature is not specified here, the
 *  corresponding feature's input metadata is not overridden.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride_Inputs *inputs;

@end


/**
 *  Required. Overrides the input metadata of the features. The key is the name
 *  of the feature to be overridden. The keys specified here must exist in the
 *  input metadata to be overridden. If a feature is not specified here, the
 *  corresponding feature's input metadata is not overridden.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride_Inputs : GTLRObject
@end


/**
 *  The input metadata entries to be overridden.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride : GTLRObject

/**
 *  Baseline inputs for this feature. This overrides the `input_baseline` field
 *  of the ExplanationMetadata.InputMetadata object of the corresponding
 *  feature's input metadata. If it's not specified, the original baselines are
 *  not overridden.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *inputBaselines;

@end


/**
 *  Parameters to configure explaining for Model's predictions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationParameters : GTLRObject

/**
 *  Example-based explanations that returns the nearest neighbors from the
 *  provided dataset.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Examples *examples;

/**
 *  An attribution method that computes Aumann-Shapley values taking advantage
 *  of the model's fully differentiable structure. Refer to this paper for more
 *  details: https://arxiv.org/abs/1703.01365
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IntegratedGradientsAttribution *integratedGradientsAttribution;

/**
 *  If populated, only returns attributions that have output_index contained in
 *  output_indices. It must be an ndarray of integers, with the same shape of
 *  the output it's explaining. If not populated, returns attributions for top_k
 *  indices of outputs. If neither top_k nor output_indices is populated,
 *  returns the argmax index of the outputs. Only applicable to Models that
 *  predict multiple outputs (e,g, multi-class Models that predict multiple
 *  classes).
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *outputIndices;

/**
 *  An attribution method that approximates Shapley values for features that
 *  contribute to the label being predicted. A sampling strategy is used to
 *  approximate the value rather than considering all subsets of features. Refer
 *  to this paper for model details: https://arxiv.org/abs/1306.4265.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SampledShapleyAttribution *sampledShapleyAttribution;

/**
 *  If populated, returns attributions for top K indices of outputs (defaults to
 *  1). Only applies to Models that predicts more than one outputs (e,g,
 *  multi-class Models). When set to -1, returns explanations for all outputs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topK;

/**
 *  An attribution method that redistributes Integrated Gradients attribution to
 *  segmented regions, taking advantage of the model's fully differentiable
 *  structure. Refer to this paper for more details:
 *  https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural
 *  images, like a picture of a house or an animal. If the images are taken in
 *  artificial environments, like a lab or manufacturing line, or from
 *  diagnostic equipment, like x-rays or quality-control cameras, use Integrated
 *  Gradients instead.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1XraiAttribution *xraiAttribution;

@end


/**
 *  Specification of Model explanation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec : GTLRObject

/**
 *  Optional. Metadata describing the Model's input and output for explanation.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadata *metadata;

/**
 *  Required. Parameters that configure explaining of the Model's predictions.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationParameters *parameters;

@end


/**
 *  The ExplanationSpec entries that can be overridden at online explanation
 *  time.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpecOverride : GTLRObject

/** The example-based explanations parameter overrides. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExamplesOverride *examplesOverride;

/**
 *  The metadata to be overridden. If not specified, no metadata is overridden.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationMetadataOverride *metadata;

/**
 *  The parameters to be overridden. Note that the attribution method cannot be
 *  changed. If not specified, no parameter is overridden.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationParameters *parameters;

@end


/**
 *  Describes what part of the Dataset is to be exported, the destination of the
 *  export and how to export.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig : GTLRObject

/**
 *  The Cloud Storage URI that points to a YAML file describing the annotation
 *  schema. The schema is defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  The schema files that can be used here are found in
 *  gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the
 *  chosen schema must be consistent with metadata of the Dataset specified by
 *  dataset_id. Only used for custom training data export use cases. Only
 *  applicable to Datasets that have DataItems and Annotations. Only Annotations
 *  that both match this schema and belong to DataItems not ignored by the split
 *  method are used in respectively training, validation or test role, depending
 *  on the role of the DataItem they are on. When used in conjunction with
 *  annotations_filter, the Annotations used for training are filtered by both
 *  annotations_filter and annotation_schema_uri.
 */
@property(nonatomic, copy, nullable) NSString *annotationSchemaUri;

/**
 *  An expression for filtering what part of the Dataset is to be exported. Only
 *  Annotations that match this filter will be exported. The filter syntax is
 *  the same as in ListAnnotations.
 */
@property(nonatomic, copy, nullable) NSString *annotationsFilter;

/**
 *  Indicates the usage of the exported files.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig_ExportUse_CustomCodeTraining
 *        Export for custom code training. (Value: "CUSTOM_CODE_TRAINING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig_ExportUse_ExportUseUnspecified
 *        Regular user export. (Value: "EXPORT_USE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *exportUse;

/** Split based on the provided filters for each set. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportFilterSplit *filterSplit;

/** Split based on fractions defining the size of each set. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportFractionSplit *fractionSplit;

/**
 *  The Google Cloud Storage location where the output is to be written to. In
 *  the given directory a new directory will be created with name:
 *  `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601
 *  format. All export output will be written into that directory. Inside that
 *  directory, annotations with the same schema will be grouped into sub
 *  directories which are named with the corresponding annotations' schema
 *  title. Inside these sub directories, a schema.yaml will be created to
 *  describe the output format.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcsDestination;

/**
 *  The ID of a SavedQuery (annotation set) under the Dataset specified by
 *  dataset_id used for filtering Annotations for training. Only used for custom
 *  training data export use cases. Only applicable to Datasets that have
 *  SavedQueries. Only Annotations that are associated with this SavedQuery are
 *  used in respectively training. When used in conjunction with
 *  annotations_filter, the Annotations used for training are filtered by both
 *  saved_query_id and annotations_filter. Only one of saved_query_id and
 *  annotation_schema_uri should be specified as both of them represent the same
 *  thing: problem type.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

@end


/**
 *  Runtime operation information for DatasetService.ExportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportDataOperationMetadata : GTLRObject

/**
 *  A Google Cloud Storage directory which path ends with '/'. The exported data
 *  is stored in the directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsOutputDirectory;

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for DatasetService.ExportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportDataRequest : GTLRObject

/** Required. The desired output location. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportDataConfig *exportConfig;

@end


/**
 *  Response message for DatasetService.ExportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportDataResponse : GTLRObject

/**
 *  Only present for custom code training export use case. Records data stats,
 *  i.e., train/validation/test item/annotation counts calculated during the
 *  export operation.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelDataStats *dataStats;

/**
 *  All of the files that are exported in this export operation. For custom code
 *  training export, only three (training, validation and test) Cloud Storage
 *  paths in wildcard format are populated (for example, gs://.../training-*).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exportedFiles;

@end


/**
 *  Details of operations that exports Features values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata : GTLRObject

/** Operation metadata for Featurestore export Feature values. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for FeaturestoreService.ExportFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequest : GTLRObject

/** Required. Specifies destination location and format. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueDestination *destination;

/** Required. Selects Features to export values of. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector *featureSelector;

/**
 *  Exports all historical values of all entities of the EntityType within a
 *  time range
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport *fullExport;

/** Per-Feature export settings. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DestinationFeatureSetting *> *settings;

/**
 *  Exports the latest Feature values of all entities of the EntityType within a
 *  time range.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport *snapshotExport;

@end


/**
 *  Describes exporting all historical Feature values of all entities of the
 *  EntityType between [start_time, end_time].
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport : GTLRObject

/**
 *  Exports Feature values as of this timestamp. If not set, retrieve values as
 *  of now. Timestamp, if present, must not have higher than millisecond
 *  precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Excludes Feature values with feature generation timestamp before this
 *  timestamp. If not set, retrieve oldest values kept in Feature Store.
 *  Timestamp, if present, must not have higher than millisecond precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Describes exporting the latest Feature values of all entities of the
 *  EntityType between [start_time, snapshot_time].
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport : GTLRObject

/**
 *  Exports Feature values as of this timestamp. If not set, retrieve values as
 *  of now. Timestamp, if present, must not have higher than millisecond
 *  precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *snapshotTime;

/**
 *  Excludes Feature values with feature generation timestamp before this
 *  timestamp. If not set, retrieve oldest values kept in Feature Store.
 *  Timestamp, if present, must not have higher than millisecond precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Response message for FeaturestoreService.ExportFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesResponse : GTLRObject
@end


/**
 *  Assigns input data to training, validation, and test sets based on the given
 *  filters, data pieces not matched by any filter are ignored. Currently only
 *  supported for Datasets containing DataItems. If any of the filters in this
 *  message are to match nothing, then they can be set as '-' (the minus sign).
 *  Supported only for unstructured Datasets.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFilterSplit : GTLRObject

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to test the Model. A filter with same syntax as the one used
 *  in DatasetService.ListDataItems may be used. If a single DataItem is matched
 *  by more than one of the FilterSplit filters, then it is assigned to the
 *  first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *testFilter;

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to train the Model. A filter with same syntax as the one
 *  used in DatasetService.ListDataItems may be used. If a single DataItem is
 *  matched by more than one of the FilterSplit filters, then it is assigned to
 *  the first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *trainingFilter;

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to validate the Model. A filter with same syntax as the one
 *  used in DatasetService.ListDataItems may be used. If a single DataItem is
 *  matched by more than one of the FilterSplit filters, then it is assigned to
 *  the first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *validationFilter;

@end


/**
 *  Assigns the input data to training, validation, and test sets as per the
 *  given fractions. Any of `training_fraction`, `validation_fraction` and
 *  `test_fraction` may optionally be provided, they must sum to up to 1. If the
 *  provided ones sum to less than 1, the remainder is assigned to sets as
 *  decided by Vertex AI. If none of the fractions are set, by default roughly
 *  80% of data is used for training, 10% for validation, and 10% for test.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportFractionSplit : GTLRObject

/**
 *  The fraction of the input data that is to be used to evaluate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testFraction;

/**
 *  The fraction of the input data that is to be used to train the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingFraction;

/**
 *  The fraction of the input data that is to be used to validate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationFraction;

@end


/**
 *  Details of ModelService.ExportModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportModelOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  Output only. Information further describing the output of this Model export.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo *outputInfo;

@end


/**
 *  Further describes the output of the ExportModel. Supplements
 *  ExportModelRequest.OutputConfig.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo : GTLRObject

/**
 *  Output only. If the Model artifact is being exported to Google Cloud Storage
 *  this is the full path of the directory created, into which the Model files
 *  are being written to.
 */
@property(nonatomic, copy, nullable) NSString *artifactOutputUri;

/**
 *  Output only. If the Model image is being exported to Google Container
 *  Registry or Artifact Registry this is the full path of the image created.
 */
@property(nonatomic, copy, nullable) NSString *imageOutputUri;

@end


/**
 *  Request message for ModelService.ExportModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequest : GTLRObject

/** Required. The desired output location and configuration. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequestOutputConfig *outputConfig;

@end


/**
 *  Output configuration for the Model export.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequestOutputConfig : GTLRObject

/**
 *  The Cloud Storage location where the Model artifact is to be written to.
 *  Under the directory given as the destination a new one with name
 *  "`model-export--`", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601
 *  format, will be created. Inside, the Model and any of its supporting files
 *  will be written. This field should only be set when the `exportableContent`
 *  field of the [Model.supported_export_formats] object contains `ARTIFACT`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *artifactDestination;

/**
 *  The ID of the format in which the Model must be exported. Each Model lists
 *  the export formats it supports. If no value is provided here, then the first
 *  from the list of the Model's supported formats is used by default.
 */
@property(nonatomic, copy, nullable) NSString *exportFormatId;

/**
 *  The Google Container Registry or Artifact Registry uri where the Model
 *  container image will be copied to. This field should only be set when the
 *  `exportableContent` field of the [Model.supported_export_formats] object
 *  contains `IMAGE`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ContainerRegistryDestination *imageDestination;

@end


/**
 *  Response message of ModelService.ExportModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportModelResponse : GTLRObject
@end


/**
 *  Request message for TensorboardService.ExportTensorboardTimeSeriesData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest : GTLRObject

/**
 *  Exports the TensorboardTimeSeries' data that match the filter expression.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field to use to sort the TensorboardTimeSeries' data. By default,
 *  TensorboardTimeSeries' data is returned in a pseudo random order.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of data points to return per page. The default page_size
 *  is 1000. Values must be between 1 and 10000. Values above 10000 are coerced
 *  to 10000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token, received from a previous ExportTensorboardTimeSeriesData call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to ExportTensorboardTimeSeriesData must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

@end


/**
 *  Response message for TensorboardService.ExportTensorboardTimeSeriesData.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "timeSeriesDataPoints" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as page_token to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The returned time series data points.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesDataPoint *> *timeSeriesDataPoints;

@end


/**
 *  Feature Metadata information. For example, color is a feature that describes
 *  an apple.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Feature : GTLRObject

/**
 *  Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp
 *  when this EntityType was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the Feature.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set,
 *  use the monitoring_config defined for the EntityType this Feature belongs
 *  to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or
 *  INT64 can enable monitoring. If set to true, all types of data monitoring
 *  are disabled despite the config on EntityType.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableMonitoring;

/**
 *  Used to perform a consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your Features.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one Feature (System labels
 *  are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Feature_Labels *labels;

/**
 *  Output only. Only applicable for Vertex AI Feature Store (Legacy). The list
 *  of historical stats and anomalies with specified objectives.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly *> *monitoringStatsAnomalies;

/**
 *  Immutable. Name of the Feature. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
 *  `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
 *  The last part feature is assigned by the client. The feature can be up to 64
 *  characters long and can consist only of ASCII Latin letters A-Z and a-z,
 *  underscore(_), and ASCII digits 0-9 starting with a letter. The value will
 *  be unique given an entity type.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Entity responsible for maintaining this feature. Can be comma separated list
 *  of email addresses or URIs.
 */
@property(nonatomic, copy, nullable) NSString *pointOfContact;

/**
 *  Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp
 *  when this EntityType was most recently updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of
 *  Feature value.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Bool Used
 *        for Feature that is a boolean. (Value: "BOOL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_BoolArray
 *        Used for Feature that is a list of boolean. (Value: "BOOL_ARRAY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Bytes
 *        Used for Feature that is bytes. (Value: "BYTES")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Double
 *        Used for Feature that is double. (Value: "DOUBLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_DoubleArray
 *        Used for Feature that is a list of double. (Value: "DOUBLE_ARRAY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Int64
 *        Used for Feature that is INT64. (Value: "INT64")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Int64Array
 *        Used for Feature that is a list of INT64. (Value: "INT64_ARRAY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_String
 *        Used for Feature that is string. (Value: "STRING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_StringArray
 *        Used for Feature that is a list of String. (Value: "STRING_ARRAY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_Struct
 *        Used for Feature that is struct. (Value: "STRUCT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Feature_ValueType_ValueTypeUnspecified
 *        The value type is unspecified. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

/**
 *  Only applicable for Vertex AI Feature Store. The name of the BigQuery
 *  Table/View column hosting data for this version. If no value is provided,
 *  will use feature_id.
 */
@property(nonatomic, copy, nullable) NSString *versionColumnName;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your Features.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one Feature (System labels
 *  are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Feature_Labels : GTLRObject
@end


/**
 *  Vertex AI Feature Group.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup : GTLRObject

/**
 *  Indicates that features for this group come from BigQuery Table/View. By
 *  default treats the source as a sparse time series source. The BigQuery
 *  source table or view must have at least one entity ID column and a column
 *  named `feature_timestamp`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQuery *bigQuery;

/** Output only. Timestamp when this FeatureGroup was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of the FeatureGroup.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureGroup. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one FeatureGroup(System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup_Labels *labels;

/**
 *  Identifier. Name of the FeatureGroup. Format:
 *  `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Timestamp when this FeatureGroup was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureGroup. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one FeatureGroup(System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup_Labels : GTLRObject
@end


/**
 *  Input source type for BigQuery Tables and Views.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQuery : GTLRObject

/**
 *  Required. Immutable. The BigQuery source URI that points to either a
 *  BigQuery Table or View.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource *bigQuerySource;

/**
 *  Optional. If set, all feature values will be fetched from a single row per
 *  unique entityId including nulls. If not set, will collapse all rows for each
 *  unique entityId into a singe row with any non-null values if present, if no
 *  non-null values are present will sync null. ex: If source has schema
 *  `(entity_id, feature_timestamp, f0, f1)` and the following rows: `(e1,
 *  2020-01-01T10:00:00.123Z, 10, 15)` `(e1, 2020-02-01T10:00:00.123Z, 20,
 *  null)` If dense is set, `(e1, 20, null)` is synced to online stores. If
 *  dense is not set, `(e1, 20, 15)` is synced to online stores.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dense;

/**
 *  Optional. Columns to construct entity_id / row keys. If not provided
 *  defaults to `entity_id`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entityIdColumns;

/**
 *  Optional. Set if the data source is not a time-series.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *staticDataSource;

/**
 *  Optional. If the source is a time-series source, this can be set to control
 *  how downstream sources (ex: FeatureView ) will treat time-series sources. If
 *  not set, will treat the source as a time-series source with
 *  `feature_timestamp` as timestamp column and no scan boundary.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries *timeSeries;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries : GTLRObject

/**
 *  Optional. Column hosting timestamp values for a time-series source. Will be
 *  used to determine the latest `feature_values` for each entity. Optional. If
 *  not provided, column named `feature_timestamp` of type `TIMESTAMP` will be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *timestampColumn;

@end


/**
 *  A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats
 *  requested by user, sorted by FeatureStatsAnomaly.start_time descending.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly : GTLRObject

/** Output only. The stats and anomalies generated at specific timestamp. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureStatsAnomaly *featureStatsAnomaly;

/**
 *  Output only. The objective for each stats.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_ImportFeatureAnalysis
 *        Stats are generated by Import Feature Analysis. (Value:
 *        "IMPORT_FEATURE_ANALYSIS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_ObjectiveUnspecified
 *        If it's OBJECTIVE_UNSPECIFIED, monitoring_stats will be empty. (Value:
 *        "OBJECTIVE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly_Objective_SnapshotAnalysis
 *        Stats are generated by Snapshot Analysis. (Value: "SNAPSHOT_ANALYSIS")
 */
@property(nonatomic, copy, nullable) NSString *objective;

@end


/**
 *  Noise sigma by features. Noise sigma represents the standard deviation of
 *  the gaussian kernel that will be used to add noise to interpolated inputs
 *  prior to computing gradients.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigma : GTLRObject

/**
 *  Noise sigma per feature. No noise is added to features that are not set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature *> *noiseSigma;

@end


/**
 *  Noise sigma for a single feature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature : GTLRObject

/**
 *  The name of the input feature for which noise sigma is provided. The
 *  features are defined in explanation metadata inputs.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This represents the standard deviation of the Gaussian kernel that will be
 *  used to add noise to the feature prior to computing gradients. Similar to
 *  noise_sigma but represents the noise added to the current feature. Defaults
 *  to 0.1.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sigma;

@end


/**
 *  Vertex AI Feature Online Store provides a centralized repository for serving
 *  ML features and embedding indexes at low latency. The Feature Online Store
 *  is a top-level container.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore : GTLRObject

/**
 *  Contains settings for the Cloud Bigtable instance that will be created to
 *  serve featureValues for all FeatureViews under this FeatureOnlineStore.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtable *bigtable;

/** Output only. Timestamp when this FeatureOnlineStore was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The dedicated serving endpoint for this FeatureOnlineStore, which
 *  is different from common Vertex service endpoint.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint *dedicatedServingEndpoint;

/**
 *  Optional. Customer-managed encryption key spec for data storage. If set,
 *  online store will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureOnlineStore. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one
 *  FeatureOnlineStore(System labels are excluded)." System reserved label keys
 *  are prefixed with "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_Labels *labels;

/**
 *  Identifier. Name of the FeatureOnlineStore. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Contains settings for the Optimized store that will be created to serve
 *  featureValues for all FeatureViews under this FeatureOnlineStore. When
 *  choose Optimized storage type, need to set
 *  PrivateServiceConnectConfig.enable_private_service_connect to use private
 *  endpoint. Otherwise will use public endpoint by default.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreOptimized *optimized;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. State of the featureOnlineStore.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_Stable
 *        State when the featureOnlineStore configuration is not being updated
 *        and the fields reflect the current configuration of the
 *        featureOnlineStore. The featureOnlineStore is usable in this state.
 *        (Value: "STABLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_State_Updating
 *        The state of the featureOnlineStore configuration when it is being
 *        updated. During an update, the fields reflect either the original
 *        configuration or the updated configuration of the featureOnlineStore.
 *        The featureOnlineStore is still usable in this state. (Value:
 *        "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when this FeatureOnlineStore was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureOnlineStore. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one
 *  FeatureOnlineStore(System labels are excluded)." System reserved label keys
 *  are prefixed with "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore_Labels : GTLRObject
@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtable : GTLRObject

/** Required. Autoscaling config applied to Bigtable Instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling *autoScaling;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling : GTLRObject

/**
 *  Optional. A percentage of the cluster's CPU capacity. Can be from 10% to
 *  80%. When a cluster's CPU utilization exceeds the target that you have set,
 *  Bigtable immediately adds nodes to the cluster. When CPU utilization is
 *  substantially lower than the target, Bigtable removes nodes. If not set will
 *  default to 50%.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuUtilizationTarget;

/**
 *  Required. The maximum number of nodes to scale up to. Must be greater than
 *  or equal to min_node_count, and less than or equal to 10 times of
 *  'min_node_count'.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNodeCount;

/**
 *  Required. The minimum number of nodes to scale down to. Must be greater than
 *  or equal to 1.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodeCount;

@end


/**
 *  The dedicated serving endpoint for this FeatureOnlineStore. Only need to set
 *  when you choose Optimized storage type. Public endpoint is provisioned by
 *  default.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint : GTLRObject

/**
 *  Optional. Private service connect config. The private service connection is
 *  available only for Optimized storage type, not for embedding management now.
 *  If PrivateServiceConnectConfig.enable_private_service_connect set to true,
 *  customers will use private service connection to send request. Otherwise,
 *  the connection will set to public endpoint.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PrivateServiceConnectConfig *privateServiceConnectConfig;

/**
 *  Output only. This field will be populated with the domain name to use for
 *  this FeatureOnlineStore
 */
@property(nonatomic, copy, nullable) NSString *publicEndpointDomainName;

/**
 *  Output only. The name of the service attachment resource. Populated if
 *  private service connect is enabled and after FeatureViewSync is created.
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachment;

@end


/**
 *  Optimized storage type
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStoreOptimized : GTLRObject
@end


/**
 *  Selector for Features of an EntityType.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector : GTLRObject

/** Required. Matches Features based on ID. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IdMatcher *idMatcher;

@end


/**
 *  Stats and Anomaly generated at specific timestamp for specific Feature. The
 *  start_time and end_time are used to define the time range of the dataset
 *  that current stats belongs to, e.g. prediction traffic is bucketed into
 *  prediction datasets by time window. If the Dataset is not defined by time
 *  window, start_time = end_time. Timestamp of the stats and anomalies always
 *  refers to end_time. Raw stats and anomalies are stored in stats_uri or
 *  anomaly_uri in the tensorflow defined protos. Field data_stats contains
 *  almost identical information with the raw stats in Vertex AI defined proto,
 *  for UI to display.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureStatsAnomaly : GTLRObject

/**
 *  This is the threshold used when detecting anomalies. The threshold can be
 *  changed by user, so this one might be different from ThresholdConfig.value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *anomalyDetectionThreshold;

/**
 *  Path of the anomaly file for current feature values in Cloud Storage bucket.
 *  Format: gs:////anomalies. Example:
 *  gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary
 *  format with Protobuf message Anoamlies are stored as binary format with
 *  Protobuf message [tensorflow.metadata.v0.AnomalyInfo]
 *  (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto).
 */
@property(nonatomic, copy, nullable) NSString *anomalyUri;

/**
 *  Deviation from the current stats to baseline stats. 1. For categorical
 *  feature, the distribution distance is calculated by L-inifinity norm. 2. For
 *  numerical feature, the distribution distance is calculated by Jensen–Shannon
 *  divergence.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distributionDeviation;

/**
 *  The end timestamp of window where stats were generated. For objectives where
 *  time window doesn't make sense (e.g. Featurestore Snapshot Monitoring),
 *  end_time indicates the timestamp of the data used to generate stats (e.g.
 *  timestamp we take snapshots for feature values).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Feature importance score, only populated when cross-feature monitoring is
 *  enabled. For now only used to represent feature attribution score within
 *  range [0, 1] for
 *  ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
 *  ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

/**
 *  The start timestamp of window where stats were generated. For objectives
 *  where time window doesn't make sense (e.g. Featurestore Snapshot
 *  Monitoring), start_time is only used to indicate the monitoring intervals,
 *  so it always equals to (end_time - monitoring_interval).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Path of the stats file for current feature values in Cloud Storage bucket.
 *  Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats.
 *  Stats are stored as binary format with Protobuf message
 *  [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
 */
@property(nonatomic, copy, nullable) NSString *statsUri;

@end


/**
 *  Vertex AI Feature Store provides a centralized repository for organizing,
 *  storing, and serving ML features. The Featurestore is a top-level container
 *  for your features and their values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Featurestore : GTLRObject

/** Output only. Timestamp when this Featurestore was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Customer-managed encryption key spec for data storage. If set,
 *  both of the online and offline data storage will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  Featurestore. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one Featurestore(System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Featurestore_Labels *labels;

/**
 *  Output only. Name of the Featurestore. Format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Config for online storage resources. The field should not co-exist
 *  with the field of `OnlineStoreReplicationConfig`. If both of it and
 *  OnlineStoreReplicationConfig are unset, the feature store will not have an
 *  online store and cannot be used for online serving.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig *onlineServingConfig;

/**
 *  Optional. TTL in days for feature values that will be stored in online
 *  serving storage. The Feature Store online storage periodically removes
 *  obsolete feature values older than `online_storage_ttl_days` since the
 *  feature generation time. Note that `online_storage_ttl_days` should be less
 *  than or equal to `offline_storage_ttl_days` for each EntityType under a
 *  featurestore. If not set, default to 4000 days
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlineStorageTtlDays;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. State of the featurestore.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_Stable
 *        State when the featurestore configuration is not being updated and the
 *        fields reflect the current configuration of the featurestore. The
 *        featurestore is usable in this state. (Value: "STABLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Featurestore_State_Updating
 *        The state of the featurestore configuration when it is being updated.
 *        During an update, the fields reflect either the original configuration
 *        or the updated configuration of the featurestore. For example,
 *        `online_serving_config.fixed_node_count` can take minutes to update.
 *        While the update is in progress, the featurestore is in the UPDATING
 *        state, and the value of `fixed_node_count` can be the original value
 *        or the updated value, depending on the progress of the operation.
 *        Until the update completes, the actual number of nodes can still be
 *        the original value of `fixed_node_count`. The featurestore is still
 *        usable in this state. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when this Featurestore was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  Featurestore. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one Featurestore(System
 *  labels are excluded)." System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Featurestore_Labels : GTLRObject
@end


/**
 *  Configuration of how features in Featurestore are monitored.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfig : GTLRObject

/**
 *  Threshold for categorical features of anomaly detection. This is shared by
 *  all types of Featurestore Monitoring for categorical features (i.e. Features
 *  with type (Feature.ValueType) BOOL or STRING).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig *categoricalThresholdConfig;

/** The config for ImportFeatures Analysis Based Feature Monitoring. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis *importFeaturesAnalysis;

/**
 *  Threshold for numerical features of anomaly detection. This is shared by all
 *  objectives of Featurestore Monitoring for numerical features (i.e. Features
 *  with type (Feature.ValueType) DOUBLE or INT64).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig *numericalThresholdConfig;

/** The config for Snapshot Analysis Based Feature Monitoring. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis *snapshotAnalysis;

@end


/**
 *  Configuration of the Featurestore's ImportFeature Analysis Based Monitoring.
 *  This type of analysis generates statistics for values of each Feature
 *  imported by every ImportFeatureValues operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis : GTLRObject

/**
 *  The baseline used to do anomaly detection for the statistics generated by
 *  import features analysis.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_BaselineUnspecified
 *        Should not be used. (Value: "BASELINE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_LatestStats
 *        Choose the later one statistics generated by either most recent
 *        snapshot analysis or previous import features analysis. If non of them
 *        exists, skip anomaly detection and only generate a statistics. (Value:
 *        "LATEST_STATS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_MostRecentSnapshotStats
 *        Use the statistics generated by the most recent snapshot analysis if
 *        exists. (Value: "MOST_RECENT_SNAPSHOT_STATS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_AnomalyDetectionBaseline_PreviousImportFeaturesStats
 *        Use the statistics generated by the previous import features analysis
 *        if exists. (Value: "PREVIOUS_IMPORT_FEATURES_STATS")
 */
@property(nonatomic, copy, nullable) NSString *anomalyDetectionBaseline;

/**
 *  Whether to enable / disable / inherite default hebavior for import features
 *  analysis.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Default
 *        The default behavior of whether to enable the monitoring.
 *        EntityType-level config: disabled. Feature-level config: inherited
 *        from the configuration of EntityType this Feature belongs to. (Value:
 *        "DEFAULT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Disabled
 *        Explicitly disables import features analysis. EntityType-level config:
 *        by default disables import features analysis for all Features under
 *        it. Feature-level config: disables import features analysis regardless
 *        of the EntityType-level config. (Value: "DISABLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_Enabled
 *        Explicitly enables import features analysis. EntityType-level config:
 *        by default enables import features analysis for all Features under it.
 *        Feature-level config: enables import features analysis regardless of
 *        the EntityType-level config. (Value: "ENABLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis_State_StateUnspecified
 *        Should not be used. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This
 *  type of analysis generates statistics for each Feature based on a snapshot
 *  of the latest feature value of each entities every monitoring_interval.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis : GTLRObject

/**
 *  The monitoring schedule for snapshot analysis. For EntityType-level config:
 *  unset / disabled = true indicates disabled by default for Features under it;
 *  otherwise by default enable snapshot analysis monitoring with
 *  monitoring_interval for Features under it. Feature-level config: disabled =
 *  true indicates disabled regardless of the EntityType-level config; unset
 *  monitoring_interval indicates going with EntityType-level config; otherwise
 *  run snapshot analysis monitoring with monitoring_interval regardless of the
 *  EntityType-level config. Explicitly Disable the snapshot analysis based
 *  monitoring.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Configuration of the snapshot analysis based monitoring pipeline running
 *  interval. The value indicates number of days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *monitoringIntervalDays;

/**
 *  Customized export features time window for snapshot analysis. Unit is one
 *  day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000
 *  days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stalenessDays;

@end


/**
 *  The config for Featurestore Monitoring threshold.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig : GTLRObject

/**
 *  Specify a threshold value that can trigger the alert. 1. For categorical
 *  feature, the distribution distance is calculated by L-inifinity norm. 2. For
 *  numerical feature, the distribution distance is calculated by Jensen–Shannon
 *  divergence. Each feature must have a non-zero threshold if they need to be
 *  monitored. Otherwise no alert will be triggered for that feature.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  OnlineServingConfig specifies the details for provisioning online serving
 *  resources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig : GTLRObject

/**
 *  The number of nodes for the online store. The number of nodes doesn't scale
 *  automatically, but you can manually update the number of nodes. If set to 0,
 *  the featurestore will not have an online store and cannot be used for online
 *  serving.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fixedNodeCount;

/**
 *  Online serving scaling configuration. Only one of `fixed_node_count` and
 *  `scaling` can be set. Setting one will reset the other.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling *scaling;

@end


/**
 *  Online serving scaling configuration. If min_node_count and max_node_count
 *  are set to the same value, the cluster will be configured with the fixed
 *  number of node (no auto-scaling).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling : GTLRObject

/**
 *  Optional. The cpu utilization that the Autoscaler should be trying to
 *  achieve. This number is on a scale from 0 (no utilization) to 100 (total
 *  utilization), and is limited between 10 and 80. When a cluster's CPU
 *  utilization exceeds the target that you have set, Bigtable immediately adds
 *  nodes to the cluster. When CPU utilization is substantially lower than the
 *  target, Bigtable removes nodes. If not set or set to 0, default to 50.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuUtilizationTarget;

/**
 *  The maximum number of nodes to scale up to. Must be greater than
 *  min_node_count, and less than or equal to 10 times of 'min_node_count'.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNodeCount;

/**
 *  Required. The minimum number of nodes to scale down to. Must be greater than
 *  or equal to 1.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodeCount;

@end


/**
 *  Value for a feature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue : GTLRObject

/** A list of bool type feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BoolArray *boolArrayValue;

/**
 *  Bool type feature value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/**
 *  Bytes feature value.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *bytesValue;

/** A list of double type feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DoubleArray *doubleArrayValue;

/**
 *  Double type feature value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/** A list of int64 type feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Int64Array *int64ArrayValue;

/**
 *  Int64 feature value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *int64Value;

/** Metadata of feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueMetadata *metadata;

/** A list of string type feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StringArray *stringArrayValue;

/** String feature value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

/** A struct type feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StructValue *structValue;

@end


/**
 *  A destination location for Feature values and format.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueDestination : GTLRObject

/**
 *  Output in BigQuery format. BigQueryDestination.output_uri in
 *  FeatureValueDestination.bigquery_destination must refer to a table.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination *bigqueryDestination;

/**
 *  Output in CSV format. Array Feature value types are not allowed in CSV
 *  format.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CsvDestination *csvDestination;

/**
 *  Output in TFRecord format. Below are the mapping from Feature value type in
 *  Featurestore to Feature value type in TFRecord: Value type in Featurestore |
 *  Value type in TFRecord DOUBLE, DOUBLE_ARRAY | FLOAT_LIST INT64, INT64_ARRAY
 *  | INT64_LIST STRING, STRING_ARRAY, BYTES | BYTES_LIST true ->
 *  byte_string("true"), false -> byte_string("false") BOOL, BOOL_ARRAY (true,
 *  false) | BYTES_LIST
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TFRecordDestination *tfrecordDestination;

@end


/**
 *  Container for list of values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueList : GTLRObject

/** A list of feature values. All of them should be the same data type. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue *> *values;

@end


/**
 *  Metadata of feature value.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueMetadata : GTLRObject

/**
 *  Feature generation timestamp. Typically, it is provided by user at feature
 *  ingestion time. If not, feature store will use the system timestamp when the
 *  data is ingested into feature store. For streaming ingestion, the time,
 *  aligned by days, must be no older than five years (1825 days) and no later
 *  than one year (366 days) in the future.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *generateTime;

@end


/**
 *  FeatureView is representation of values that the FeatureOnlineStore will
 *  serve based on its syncConfig.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureView : GTLRObject

/**
 *  Optional. Configures how data is supposed to be extracted from a BigQuery
 *  source to be loaded onto the FeatureOnlineStore.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewBigQuerySource *bigQuerySource;

/** Output only. Timestamp when this FeatureView was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Used to perform consistent read-modify-write updates. If not set,
 *  a blind "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. Configures the features from a Feature Registry source that need
 *  to be loaded onto the FeatureOnlineStore.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource *featureRegistrySource;

/**
 *  Optional. Configuration for index preparation for vector search. It contains
 *  the required configurations to create an index from source data, so that
 *  approximate nearest neighbor (a.k.a ANN) algorithms search can be performed
 *  during online serving.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig *indexConfig;

/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureViews. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one
 *  FeatureOnlineStore(System labels are excluded)." System reserved label keys
 *  are prefixed with "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureView_Labels *labels;

/**
 *  Identifier. Name of the FeatureView. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Configures when data is to be synced/updated for this FeatureView. At the
 *  end of the sync the latest featureValues for each entityId of this
 *  FeatureView are made ready for online serving.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncConfig *syncConfig;

/** Output only. Timestamp when this FeatureView was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Optional. The Vertex RAG Source that the FeatureView is linked to. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewVertexRagSource *vertexRagSource;

@end


/**
 *  Optional. The labels with user-defined metadata to organize your
 *  FeatureViews. Label keys and values can be no longer than 64 characters
 *  (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information on and examples of labels. No
 *  more than 64 user labels can be associated with one
 *  FeatureOnlineStore(System labels are excluded)." System reserved label keys
 *  are prefixed with "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureView_Labels : GTLRObject
@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewBigQuerySource
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewBigQuerySource : GTLRObject

/** Required. Columns to construct entity_id / row keys. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entityIdColumns;

/**
 *  Required. The BigQuery view URI that will be materialized on each sync
 *  trigger based on FeatureView.SyncConfig.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Lookup key for a feature view.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKey : GTLRObject

/**
 *  The actual Entity ID will be composed from this struct. This should match
 *  with the way ID is defined in the FeatureView spec.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey *compositeKey;

/** String key to use for lookup. */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  ID that is comprised from several parts (columns).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey : GTLRObject

/**
 *  Parts to construct Entity ID. Should match with the same ID columns as
 *  defined in FeatureView in the same order.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *parts;

@end


/**
 *  A Feature Registry source for features that need to be synced to Online
 *  Store.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource : GTLRObject

/** Required. List of features that need to be synced to Online Store. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup *> *featureGroups;

/**
 *  Optional. The project number of the parent project of the Feature Groups.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *projectNumber;

@end


/**
 *  Features belonging to a single feature group that will be synced to Online
 *  Store.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup : GTLRObject

/** Required. Identifier of the feature group. */
@property(nonatomic, copy, nullable) NSString *featureGroupId;

/** Required. Identifiers of features under the feature group. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *featureIds;

@end


/**
 *  Configuration for vector indexing.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig : GTLRObject

/**
 *  Optional. Configuration options for using brute force search, which simply
 *  implements the standard linear search in the database for each query. It is
 *  primarily meant for benchmarking and to generate the ground truth for
 *  approximate search.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig *bruteForceConfig;

/**
 *  Optional. Column of crowding. This column contains crowding attribute which
 *  is a constraint on a neighbor list produced by
 *  FeatureOnlineStoreService.SearchNearestEntities to diversify search results.
 *  If NearestNeighborQuery.per_crowding_attribute_neighbor_count is set to K in
 *  SearchNearestEntitiesRequest, it's guaranteed that no more than K entities
 *  of the same crowding attribute are returned in the response.
 */
@property(nonatomic, copy, nullable) NSString *crowdingColumn;

/**
 *  Optional. The distance measure used in nearest neighbor search.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_CosineDistance
 *        Cosine Distance. Defined as 1 - cosine similarity. We strongly suggest
 *        using DOT_PRODUCT_DISTANCE + UNIT_L2_NORM instead of COSINE distance.
 *        Our algorithms have been more optimized for DOT_PRODUCT distance
 *        which, when combined with UNIT_L2_NORM, is mathematically equivalent
 *        to COSINE distance and results in the same ranking. (Value:
 *        "COSINE_DISTANCE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_DistanceMeasureTypeUnspecified
 *        Should not be set. (Value: "DISTANCE_MEASURE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_DotProductDistance
 *        Dot Product Distance. Defined as a negative of the dot product.
 *        (Value: "DOT_PRODUCT_DISTANCE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfig_DistanceMeasureType_SquaredL2Distance
 *        Euclidean (L_2) Distance. (Value: "SQUARED_L2_DISTANCE")
 */
@property(nonatomic, copy, nullable) NSString *distanceMeasureType;

/**
 *  Optional. Column of embedding. This column contains the source data to
 *  create index for vector search. embedding_column must be set when using
 *  vector search.
 */
@property(nonatomic, copy, nullable) NSString *embeddingColumn;

/**
 *  Optional. The number of dimensions of the input embedding.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *embeddingDimension;

/**
 *  Optional. Columns of features that're used to filter vector search results.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterColumns;

/**
 *  Optional. Configuration options for the tree-AH algorithm (Shallow tree +
 *  Asymmetric Hashing). Please refer to this paper for more details:
 *  https://arxiv.org/abs/1908.10396
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig *treeAhConfig;

@end


/**
 *  Configuration options for using brute force search.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig : GTLRObject
@end


/**
 *  Configuration options for the tree-AH algorithm.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig : GTLRObject

/**
 *  Optional. Number of embeddings on each leaf node. The default value is 1000
 *  if not set.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *leafNodeEmbeddingCount;

@end


/**
 *  FeatureViewSync is a representation of sync operation which copies data from
 *  data source to Feature View in Online Store.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSync : GTLRObject

/**
 *  Output only. Time when this FeatureViewSync is created. Creation of a
 *  FeatureViewSync means that the job is pending / waiting for sufficient
 *  resources but may not have started the actual data transfer yet.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Final status of the FeatureViewSync. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *finalStatus;

/**
 *  Identifier. Name of the FeatureViewSync. Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Time when this FeatureViewSync is finished. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeInterval *runTime;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Output only. Summary of the sync job. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncSyncSummary *syncSummary;

@end


/**
 *  Configuration for Sync. Only one option is set.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncConfig : GTLRObject

/**
 *  Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs.
 *  To explicitly set a timezone to the cron tab, apply a prefix in the cron
 *  tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The
 *  ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database.
 *  For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1
 *  * * * *".
 */
@property(nonatomic, copy, nullable) NSString *cron;

@end


/**
 *  Summary from the Sync job. For continuous syncs, the summary is updated
 *  periodically. For batch syncs, it gets updated on completion of the sync.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSyncSyncSummary : GTLRObject

/**
 *  Output only. Total number of rows synced.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowSynced;

/**
 *  Lower bound of the system time watermark for the sync job. This is only set
 *  for continuously syncing feature views.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *systemWatermarkTime;

/**
 *  Output only. BigQuery slot milliseconds consumed for the sync job.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSlot;

@end


/**
 *  A Vertex Rag source for features that need to be synced to Online Store.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewVertexRagSource : GTLRObject

/**
 *  Optional. The RAG corpus id corresponding to this FeatureView.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ragCorpusId;

/**
 *  Required. The BigQuery view/table URI that will be materialized on each
 *  manual sync trigger. The table/view is expected to have the following
 *  columns and types at least: - `corpus_id` (STRING, NULLABLE/REQUIRED) -
 *  `file_id` (STRING, NULLABLE/REQUIRED) - `chunk_id` (STRING,
 *  NULLABLE/REQUIRED) - `chunk_data_type` (STRING, NULLABLE/REQUIRED) -
 *  `chunk_data` (STRING, NULLABLE/REQUIRED) - `embeddings` (FLOAT, REPEATED) -
 *  `file_original_uri` (STRING, NULLABLE/REQUIRED)
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Request message for FeatureOnlineStoreService.FetchFeatureValues. All the
 *  features under the requested feature view will be returned.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest : GTLRObject

/**
 *  Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE
 *  will be used.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_FeatureViewDataFormatUnspecified
 *        Not set. Will be treated as the KeyValue format. (Value:
 *        "FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_KeyValue
 *        Return response data in key-value format. (Value: "KEY_VALUE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest_DataFormat_ProtoStruct
 *        Return response data in proto Struct format. (Value: "PROTO_STRUCT")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/** Optional. The request key to fetch feature values for. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKey *dataKey;

@end


/**
 *  Response message for FeatureOnlineStoreService.FetchFeatureValues
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse : GTLRObject

/**
 *  The data key associated with this response. Will only be populated for
 *  FeatureOnlineStoreService.StreamingFetchFeatureValues RPCs.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewDataKey *dataKey;

/** Feature values in KeyValue format. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList *keyValues;

/** Feature values in proto Struct format. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse_ProtoStruct *protoStruct;

@end


/**
 *  Feature values in proto Struct format.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse_ProtoStruct : GTLRObject
@end


/**
 *  Response structure in the format of key (feature name) and (feature) value
 *  pair.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList : GTLRObject

/** List of feature names and values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair *> *features;

@end


/**
 *  Feature name & value pair.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair : GTLRObject

/** Feature short name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Feature value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue *value;

@end


/**
 *  URI based data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FileData : GTLRObject

/** Required. URI. */
@property(nonatomic, copy, nullable) NSString *fileUri;

/** Required. The IANA standard MIME type of the source data. */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Assigns input data to training, validation, and test sets based on the given
 *  filters, data pieces not matched by any filter are ignored. Currently only
 *  supported for Datasets containing DataItems. If any of the filters in this
 *  message are to match nothing, then they can be set as '-' (the minus sign).
 *  Supported only for unstructured Datasets.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FilterSplit : GTLRObject

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to test the Model. A filter with same syntax as the one used
 *  in DatasetService.ListDataItems may be used. If a single DataItem is matched
 *  by more than one of the FilterSplit filters, then it is assigned to the
 *  first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *testFilter;

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to train the Model. A filter with same syntax as the one
 *  used in DatasetService.ListDataItems may be used. If a single DataItem is
 *  matched by more than one of the FilterSplit filters, then it is assigned to
 *  the first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *trainingFilter;

/**
 *  Required. A filter on DataItems of the Dataset. DataItems that match this
 *  filter are used to validate the Model. A filter with same syntax as the one
 *  used in DatasetService.ListDataItems may be used. If a single DataItem is
 *  matched by more than one of the FilterSplit filters, then it is assigned to
 *  the first set that applies to it in the training, validation, test order.
 */
@property(nonatomic, copy, nullable) NSString *validationFilter;

@end


/**
 *  The request message for MatchService.FindNeighbors.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequest : GTLRObject

/**
 *  The ID of the DeployedIndex that will serve the request. This request is
 *  sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That
 *  IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index
 *  has a DeployedIndex.id field. The value of the field below must equal one of
 *  the DeployedIndex.id fields of the IndexEndpoint that is being called for
 *  this request.
 */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

/** The list of queries. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQuery *> *queries;

/**
 *  If set to true, the full datapoints (including all vector values and
 *  restricts) of the nearest neighbors are returned. Note that returning full
 *  datapoint will significantly increase the latency and cost of the query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnFullDatapoint;

@end


/**
 *  A query to find a number of the nearest neighbors (most similar vectors) of
 *  a vector.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQuery : GTLRObject

/**
 *  The number of neighbors to find via approximate search before exact
 *  reordering is performed. If not set, the default value from scam config is
 *  used; if set, this value must be > 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *approximateNeighborCount;

/**
 *  Required. The datapoint/vector whose nearest neighbors should be searched
 *  for.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint *datapoint;

/**
 *  The fraction of the number of leaves to search, set at query time allows
 *  user to tune search performance. This value increase result in both search
 *  accuracy and latency increase. The value should be between 0.0 and 1.0. If
 *  not set or set to 0.0, query uses the default value specified in
 *  NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fractionLeafNodesToSearchOverride;

/**
 *  The number of nearest neighbors to be retrieved from database for each
 *  query. If not set, will use the default from the service configuration
 *  (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *neighborCount;

/**
 *  Crowding is a constraint on a neighbor list produced by nearest neighbor
 *  search requiring that no more than some value k' of the k neighbors returned
 *  have the same value of crowding_attribute. It's used for improving result
 *  diversity. This field is the maximum number of matches with the same
 *  crowding tag.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *perCrowdingAttributeNeighborCount;

/** Optional. Represents RRF algorithm that combines search results. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF *rrf;

@end


/**
 *  Parameters for RRF algorithm that combines search results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF : GTLRObject

/**
 *  Required. Users can provide an alpha value to give more weight to dense vs
 *  sparse results. For example, if the alpha is 0, we only return sparse and if
 *  the alpha is 1, we only return dense.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *alpha;

@end


/**
 *  The response message for MatchService.FindNeighbors.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponse : GTLRObject

/** The nearest neighbors of the query datapoints. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors *> *nearestNeighbors;

@end


/**
 *  Nearest neighbors for one query.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors : GTLRObject

/**
 *  The ID of the query datapoint.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** All its neighbors. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNeighbor *> *neighbors;

@end


/**
 *  A neighbor of the query vector.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponseNeighbor : GTLRObject

/**
 *  The datapoint of the neighbor. Note that full datapoints are returned only
 *  when "return_full_datapoint" is set to true. Otherwise, only the
 *  "datapoint_id" and "crowding_tag" fields are populated.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint *datapoint;

/**
 *  The distance between the neighbor and the dense embedding query.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distance;

/**
 *  The distance between the neighbor and the query sparse_embedding.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sparseDistance;

@end


/**
 *  Input for fluency metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FluencyInput : GTLRObject

/** Required. Fluency instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FluencyInstance *instance;

/** Required. Spec for fluency score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FluencySpec *metricSpec;

@end


/**
 *  Spec for fluency instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FluencyInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

@end


/**
 *  Spec for fluency result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FluencyResult : GTLRObject

/**
 *  Output only. Confidence for fluency score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for fluency score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Fluency score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for fluency score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FluencySpec : GTLRObject

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Assigns the input data to training, validation, and test sets as per the
 *  given fractions. Any of `training_fraction`, `validation_fraction` and
 *  `test_fraction` may optionally be provided, they must sum to up to 1. If the
 *  provided ones sum to less than 1, the remainder is assigned to sets as
 *  decided by Vertex AI. If none of the fractions are set, by default roughly
 *  80% of data is used for training, 10% for validation, and 10% for test.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FractionSplit : GTLRObject

/**
 *  The fraction of the input data that is to be used to evaluate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testFraction;

/**
 *  The fraction of the input data that is to be used to train the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingFraction;

/**
 *  The fraction of the input data that is to be used to validate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationFraction;

@end


/**
 *  Input for fulfillment metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInput : GTLRObject

/** Required. Fulfillment instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInstance *instance;

/** Required. Spec for fulfillment score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentSpec *metricSpec;

@end


/**
 *  Spec for fulfillment instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentInstance : GTLRObject

/** Required. Inference instruction prompt to compare prediction with. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

@end


/**
 *  Spec for fulfillment result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentResult : GTLRObject

/**
 *  Output only. Confidence for fulfillment score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for fulfillment score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Fulfillment score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for fulfillment metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FulfillmentSpec : GTLRObject

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  A predicted [FunctionCall] returned from the model that contains a string
 *  representing the [FunctionDeclaration.name] and a structured JSON object
 *  containing the parameters and their values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall : GTLRObject

/**
 *  Optional. Required. The function parameters and values in JSON object
 *  format. See [FunctionDeclaration.parameters] for parameter details.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall_Args *args;

/**
 *  Required. The name of the function to call. Matches
 *  [FunctionDeclaration.name].
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Optional. Required. The function parameters and values in JSON object
 *  format. See [FunctionDeclaration.parameters] for parameter details.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall_Args : GTLRObject
@end


/**
 *  Function calling config.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig : GTLRObject

/**
 *  Optional. Function names to call. Only set when the Mode is ANY. Function
 *  names should match [FunctionDeclaration.name]. With mode set to ANY, model
 *  will predict a function call from the set of function names provided.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedFunctionNames;

/**
 *  Optional. Function calling mode.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_Any
 *        Model is constrained to always predicting function calls only. If
 *        "allowed_function_names" are set, the predicted function calls will be
 *        limited to any one of "allowed_function_names", else the predicted
 *        function calls will be any one of the provided
 *        "function_declarations". (Value: "ANY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_Auto
 *        Default model behavior, model decides to predict either function calls
 *        or natural language response. (Value: "AUTO")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_ModeUnspecified
 *        Unspecified function calling mode. This value should not be used.
 *        (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig_Mode_None
 *        Model will not predict any function calls. Model behavior is same as
 *        when not passing any function declarations. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Structured representation of a function declaration as defined by the
 *  [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included
 *  in this declaration are the function name and parameters. This
 *  FunctionDeclaration is a representation of a block of code that can be used
 *  as a `Tool` by the model and executed by the client.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionDeclaration : GTLRObject

/**
 *  Optional. Description and purpose of the function. Model uses it to decide
 *  how and whether to call the function.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The name of the function to call. Must start with a letter or an
 *  underscore. Must be a-z, A-Z, 0-9, or contain underscores, dots and dashes,
 *  with a maximum length of 64.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Describes the parameters to this function in JSON Schema Object
 *  format. Reflects the Open API 3.03 Parameter Object. string Key: the name of
 *  the parameter. Parameter names are case sensitive. Schema Value: the Schema
 *  defining the type used for the parameter. For function with no parameters,
 *  this can be left unset. Parameter names must start with a letter or an
 *  underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a
 *  maximum length of 64. Example with 1 required and 1 optional parameter:
 *  type: OBJECT properties: param1: type: STRING param2: type: INTEGER
 *  required: - param1
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Schema *parameters;

/**
 *  Optional. Describes the output from this function in JSON Schema format.
 *  Reflects the Open API 3.03 Response Object. The Schema defines the type used
 *  for the response value of the function.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Schema *response;

@end


/**
 *  The result output from a [FunctionCall] that contains a string representing
 *  the [FunctionDeclaration.name] and a structured JSON object containing any
 *  output from the function is used as context to the model. This should
 *  contain the result of a [FunctionCall] made based on model prediction.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse : GTLRObject

/**
 *  Required. The name of the function to call. Matches
 *  [FunctionDeclaration.name] and [FunctionCall.name].
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The function response in JSON object format. Use "output" key to
 *  specify function output and "error" key to specify error details (if any).
 *  If "output" and "error" keys are not specified, then whole "response" is
 *  treated as function output.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse_Response *response;

@end


/**
 *  Required. The function response in JSON object format. Use "output" key to
 *  specify function output and "error" key to specify error details (if any).
 *  If "output" and "error" keys are not specified, then whole "response" is
 *  treated as function output.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse_Response : GTLRObject
@end


/**
 *  The Google Cloud Storage location where the output is to be written to.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination : GTLRObject

/**
 *  Required. Google Cloud Storage URI to output directory. If the uri doesn't
 *  end with '/', a '/' will be automatically appended. The directory is created
 *  if it doesn't exist.
 */
@property(nonatomic, copy, nullable) NSString *outputUriPrefix;

@end


/**
 *  The Google Cloud Storage location for the input content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GcsSource : GTLRObject

/**
 *  Required. Google Cloud Storage URI(-s) to the input file(s). May contain
 *  wildcards. For more information on wildcards, see
 *  https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

@end


/**
 *  Request message for [PredictionService.GenerateContent].
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest : GTLRObject

/**
 *  Required. The content of the current conversation with the model. For
 *  single-turn queries, this is a single instance. For multi-turn queries, this
 *  is a repeated field that contains conversation history + latest request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Content *> *contents;

/** Optional. Generation config. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfig *generationConfig;

/**
 *  Optional. The labels with user-defined metadata for the request. It is used
 *  for billing and reporting only. Label keys and values can be no longer than
 *  63 characters (Unicode codepoints) and can only contain lowercase letters,
 *  numeric characters, underscores, and dashes. International characters are
 *  allowed. Label values are optional. Label keys must start with a letter.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest_Labels *labels;

/**
 *  Optional. Per request settings for blocking unsafe content. Enforced on
 *  GenerateContentResponse.candidates.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting *> *safetySettings;

/**
 *  Optional. The user provided system instructions for the model. Note: only
 *  text should be used in parts and content in each part will be in a separate
 *  paragraph.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Content *systemInstruction;

/**
 *  Optional. Tool config. This config is shared for all tools provided in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolConfig *toolConfig;

/**
 *  Optional. A list of `Tools` the model may use to generate the next response.
 *  A `Tool` is a piece of code that enables the system to interact with
 *  external systems to perform an action, or set of actions, outside of
 *  knowledge and scope of the model.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tool *> *tools;

@end


/**
 *  Optional. The labels with user-defined metadata for the request. It is used
 *  for billing and reporting only. Label keys and values can be no longer than
 *  63 characters (Unicode codepoints) and can only contain lowercase letters,
 *  numeric characters, underscores, and dashes. International characters are
 *  allowed. Label values are optional. Label keys must start with a letter.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest_Labels : GTLRObject
@end


/**
 *  Response message for [PredictionService.GenerateContent].
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse : GTLRObject

/** Output only. Generated candidates. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Candidate *> *candidates;

/** Output only. The model version used to generate the response. */
@property(nonatomic, copy, nullable) NSString *modelVersion;

/**
 *  Output only. Content filter results for a prompt sent in the request. Note:
 *  Sent only in the first stream chunk. Only happens when no candidates were
 *  generated due to content violations.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback *promptFeedback;

/** Usage metadata about the response(s). */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata *usageMetadata;

@end


/**
 *  Content filter results for a prompt sent in the request.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback : GTLRObject

/**
 *  Output only. Blocked reason.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_BlockedReasonUnspecified
 *        Unspecified blocked reason. (Value: "BLOCKED_REASON_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Blocklist
 *        Candidates blocked due to the terms which are included from the
 *        terminology blocklist. (Value: "BLOCKLIST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Other
 *        Candidates blocked due to other reason. (Value: "OTHER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_ProhibitedContent
 *        Candidates blocked due to prohibited content. (Value:
 *        "PROHIBITED_CONTENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback_BlockReason_Safety
 *        Candidates blocked due to safety. (Value: "SAFETY")
 */
@property(nonatomic, copy, nullable) NSString *blockReason;

/** Output only. A readable block reason message. */
@property(nonatomic, copy, nullable) NSString *blockReasonMessage;

/** Output only. Safety ratings. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating *> *safetyRatings;

@end


/**
 *  Usage metadata about response(s).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata : GTLRObject

/**
 *  Number of tokens in the response(s).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *candidatesTokenCount;

/**
 *  Number of tokens in the request. When `cached_content` is set, this is still
 *  the total effective prompt size meaning this includes the number of tokens
 *  in the cached content.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *promptTokenCount;

/**
 *  Total token count for prompt and response candidates.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalTokenCount;

@end


/**
 *  Generation config.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfig : GTLRObject

/**
 *  Optional. Number of candidates to generate.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *candidateCount;

/**
 *  Optional. Frequency penalties.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *frequencyPenalty;

/**
 *  Optional. Logit probabilities.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logprobs;

/**
 *  Optional. The maximum number of output tokens to generate per message.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxOutputTokens;

/**
 *  Optional. Positive penalties.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *presencePenalty;

/**
 *  Optional. If true, export the logprobs results in response.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseLogprobs;

/**
 *  Optional. Output response mimetype of the generated candidate text.
 *  Supported mimetype: - `text/plain`: (default) Text output. -
 *  `application/json`: JSON response in the candidates. The model needs to be
 *  prompted to output the appropriate response type, otherwise the behavior is
 *  undefined. This is a preview feature.
 */
@property(nonatomic, copy, nullable) NSString *responseMimeType;

/**
 *  Optional. The `Schema` object allows the definition of input and output data
 *  types. These types can be objects, but also primitives and arrays.
 *  Represents a select subset of an [OpenAPI 3.0 schema
 *  object](https://spec.openapis.org/oas/v3.0.3#schema). If set, a compatible
 *  response_mime_type must also be set. Compatible mimetypes:
 *  `application/json`: Schema for JSON response.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Schema *responseSchema;

/** Optional. Routing configuration. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfig *routingConfig;

/**
 *  Optional. Seed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seed;

/** Optional. Stop sequences. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *stopSequences;

/**
 *  Optional. Controls the randomness of predictions.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temperature;

/**
 *  Optional. If specified, top-k sampling will be used.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topK;

/**
 *  Optional. If specified, nucleus sampling will be used.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topP;

@end


/**
 *  The configuration for routing the request to a specific model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfig : GTLRObject

/** Automated routing. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode *autoMode;

/** Manual routing. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode *manualMode;

@end


/**
 *  When automated routing is specified, the routing will be determined by the
 *  pretrained routing model and customer provided model routing preference.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode : GTLRObject

/**
 *  The model routing preference.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_Balanced
 *        Balanced model routing preference. (Value: "BALANCED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_PrioritizeCost
 *        Prefer lower cost over higher quality. (Value: "PRIORITIZE_COST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_PrioritizeQuality
 *        Prefer higher quality over low cost. (Value: "PRIORITIZE_QUALITY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode_ModelRoutingPreference_Unknown
 *        Unspecified model routing preference. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *modelRoutingPreference;

@end


/**
 *  When manual routing is set, the specified model will be used directly.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode : GTLRObject

/**
 *  The model name to use. Only the public LLM models are accepted. e.g.
 *  'gemini-1.5-pro-001'.
 */
@property(nonatomic, copy, nullable) NSString *modelName;

@end


/**
 *  Generic Metadata shared by all operations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata : GTLRObject

/** Output only. Time when the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Partial failures encountered. E.g. single files that couldn't
 *  be read. This field should never exceed 20 entries. Status details field
 *  will contain standard Google Cloud error details.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleRpcStatus *> *partialFailures;

/**
 *  Output only. Time when the operation was updated for the last time. If the
 *  operation has finished (successfully or not), this is the finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Contains information about the source of the models generated from
 *  Generative AI Studio.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GenieSource : GTLRObject

/** Required. The public base model URI. */
@property(nonatomic, copy, nullable) NSString *baseModelUri;

@end


/**
 *  Tool to retrieve public web data for grounding, powered by Google.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GoogleSearchRetrieval : GTLRObject
@end


/**
 *  Input for groundedness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInput : GTLRObject

/** Required. Groundedness instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInstance *instance;

/** Required. Spec for groundedness metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundednessSpec *metricSpec;

@end


/**
 *  Spec for groundedness instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundednessInstance : GTLRObject

/**
 *  Required. Background information provided in context used to compare against
 *  the prediction.
 */
@property(nonatomic, copy, nullable) NSString *context;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

@end


/**
 *  Spec for groundedness result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundednessResult : GTLRObject

/**
 *  Output only. Confidence for groundedness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for groundedness score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Groundedness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for groundedness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundednessSpec : GTLRObject

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Grounding chunk.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunk : GTLRObject

/** Grounding chunk from context retrieved by the retrieval tools. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkRetrievedContext *retrievedContext;

/** Grounding chunk from the web. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkWeb *web;

@end


/**
 *  Chunk from context retrieved by the retrieval tools.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkRetrievedContext : GTLRObject

/** Title of the attribution. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI reference of the attribution. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Chunk from the web.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunkWeb : GTLRObject

/** Title of the chunk. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI reference of the chunk. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Metadata returned to client when grounding is enabled.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundingMetadata : GTLRObject

/**
 *  List of supporting references retrieved from specified grounding source.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1GroundingChunk *> *groundingChunks;

/** Optional. List of grounding support. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1GroundingSupport *> *groundingSupports;

/** Optional. Google search entry for the following-up web searches. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SearchEntryPoint *searchEntryPoint;

/** Optional. Web search queries for the following-up web search. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *webSearchQueries;

@end


/**
 *  Grounding support.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1GroundingSupport : GTLRObject

/**
 *  Confidence score of the support references. Ranges from 0 to 1. 1 is the
 *  most confident. This list must have the same size as the
 *  grounding_chunk_indices.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *confidenceScores;

/**
 *  A list of indices (into 'grounding_chunk') specifying the citations
 *  associated with the claim. For instance [1,3,4] means that
 *  grounding_chunk[1], grounding_chunk[3], grounding_chunk[4] are the retrieved
 *  content attributed to the claim.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *groundingChunkIndices;

/** Segment of the content this support belongs to. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Segment *segment;

@end


/**
 *  Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study
 *  specification and multiple CustomJobs with identical CustomJob
 *  specification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob : GTLRObject

/** Output only. Time when the HyperparameterTuningJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The display name of the HyperparameterTuningJob. The name can be
 *  up to 128 characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key options for a HyperparameterTuningJob. If
 *  this is set, then all resources created by the HyperparameterTuningJob will
 *  be encrypted with the provided encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the HyperparameterTuningJob entered any of the
 *  following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
 *  `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when job's state is JOB_STATE_FAILED or
 *  JOB_STATE_CANCELLED.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  The labels with user-defined metadata to organize HyperparameterTuningJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_Labels *labels;

/**
 *  The number of failed Trials that need to be seen before failing the
 *  HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must
 *  fail before the whole job fails.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxFailedTrialCount;

/**
 *  Required. The desired total number of Trials.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTrialCount;

/** Output only. Resource name of the HyperparameterTuningJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The desired number of Trials to run in parallel.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *parallelTrialCount;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Time when the HyperparameterTuningJob for the first time
 *  entered the `JOB_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Required. Study configuration of the HyperparameterTuningJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpec *studySpec;

/**
 *  Required. The spec of a trial job. The same spec applies to the CustomJobs
 *  created in all the trials.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *trialJobSpec;

/** Output only. Trials of the HyperparameterTuningJob. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Trial *> *trials;

/**
 *  Output only. Time when the HyperparameterTuningJob was most recently
 *  updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize HyperparameterTuningJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob_Labels : GTLRObject
@end


/**
 *  Matcher for Features of an EntityType by Feature ID.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IdMatcher : GTLRObject

/**
 *  Required. The following are accepted as `ids`: * A single-element list
 *  containing only `*`, which selects all Features in the target EntityType, or
 *  * A list containing only Feature IDs, which selects only Features with those
 *  IDs in the target EntityType.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ids;

@end


/**
 *  Describes the location from where we import data into a Dataset, together
 *  with the labels that will be applied to the DataItems and the Annotations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig : GTLRObject

/**
 *  Labels that will be applied to newly imported Annotations. If two
 *  Annotations are identical, one of them will be deduped. Two Annotations are
 *  considered identical if their payload, payload_schema_uri and all of their
 *  labels are the same. These labels will be overridden by Annotation labels
 *  specified inside index file referenced by import_schema_uri, e.g. jsonl
 *  file.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_AnnotationLabels *annotationLabels;

/**
 *  Labels that will be applied to newly imported DataItems. If an identical
 *  DataItem as one being imported already exists in the Dataset, then these
 *  labels will be appended to these of the already existing one, and if labels
 *  with identical key is imported before, the old label value will be
 *  overwritten. If two DataItems are identical in the same import data
 *  operation, the labels will be combined and if key collision happens in this
 *  case, one of the values will be picked randomly. Two DataItems are
 *  considered identical if their content bytes are identical (e.g. image bytes
 *  or pdf bytes). These labels will be overridden by Annotation labels
 *  specified inside index file referenced by import_schema_uri, e.g. jsonl
 *  file.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_DataItemLabels *dataItemLabels;

/** The Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

/**
 *  Required. Points to a YAML file stored on Google Cloud Storage describing
 *  the import format. Validation will be done against the schema. The schema is
 *  defined as an [OpenAPI 3.0.2 Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 */
@property(nonatomic, copy, nullable) NSString *importSchemaUri;

@end


/**
 *  Labels that will be applied to newly imported Annotations. If two
 *  Annotations are identical, one of them will be deduped. Two Annotations are
 *  considered identical if their payload, payload_schema_uri and all of their
 *  labels are the same. These labels will be overridden by Annotation labels
 *  specified inside index file referenced by import_schema_uri, e.g. jsonl
 *  file.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_AnnotationLabels : GTLRObject
@end


/**
 *  Labels that will be applied to newly imported DataItems. If an identical
 *  DataItem as one being imported already exists in the Dataset, then these
 *  labels will be appended to these of the already existing one, and if labels
 *  with identical key is imported before, the old label value will be
 *  overwritten. If two DataItems are identical in the same import data
 *  operation, the labels will be combined and if key collision happens in this
 *  case, one of the values will be picked randomly. Two DataItems are
 *  considered identical if their content bytes are identical (e.g. image bytes
 *  or pdf bytes). These labels will be overridden by Annotation labels
 *  specified inside index file referenced by import_schema_uri, e.g. jsonl
 *  file.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig_DataItemLabels : GTLRObject
@end


/**
 *  Runtime operation information for DatasetService.ImportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for DatasetService.ImportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataRequest : GTLRObject

/**
 *  Required. The desired input locations. The contents of all input locations
 *  will be imported in one batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ImportDataConfig *> *importConfigs;

@end


/**
 *  Response message for DatasetService.ImportData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportDataResponse : GTLRObject
@end


/**
 *  Details of operations that perform import Feature values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata : GTLRObject

/**
 *  List of ImportFeatureValues operations running under a single EntityType
 *  that are blocking this operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *blockingOperationIds;

/** Operation metadata for Featurestore import Feature values. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  Number of entities that have been imported by the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEntityCount;

/**
 *  Number of Feature values that have been imported by the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedFeatureValueCount;

/**
 *  The number of rows in input source that weren't imported due to either * Not
 *  having any featureValues. * Having a null entityId. * Having a null
 *  timestamp. * Not being parsable (applicable for CSV sources).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidRowCount;

/** The source URI from where Feature values are imported. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceUris;

/**
 *  The number rows that weren't ingested due to having timestamps outside the
 *  retention boundary.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timestampOutsideRetentionRowsCount;

@end


/**
 *  Request message for FeaturestoreService.ImportFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequest : GTLRObject

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1AvroSource *avroSource;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource *bigquerySource;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CsvSource *csvSource;

/**
 *  If true, API doesn't start ingestion analysis pipeline.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableIngestionAnalysis;

/**
 *  If set, data will not be imported for online serving. This is typically used
 *  for backfilling, where Feature generation timestamps are not in the
 *  timestamp range needed for online serving.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableOnlineServing;

/**
 *  Source column that holds entity IDs. If not provided, entity IDs are
 *  extracted from the column named entity_id.
 */
@property(nonatomic, copy, nullable) NSString *entityIdField;

/**
 *  Required. Specifications defining which Feature values to import from the
 *  entity. The request fails if no feature_specs are provided, and having
 *  multiple feature_specs for one Feature is not allowed.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec *> *featureSpecs;

/**
 *  Single Feature timestamp for all entities being imported. The timestamp must
 *  not have higher than millisecond precision.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *featureTime;

/**
 *  Source column that holds the Feature timestamp for all Feature values in
 *  each entity.
 */
@property(nonatomic, copy, nullable) NSString *featureTimeField;

/**
 *  Specifies the number of workers that are used to write data to the
 *  Featurestore. Consider the online serving capacity that you require to
 *  achieve the desired import throughput without interfering with online
 *  serving. The value must be positive, and less than or equal to 100. If not
 *  set, defaults to using 1 worker. The low count ensures minimal impact on
 *  online serving performance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *workerCount;

@end


/**
 *  Defines the Feature value(s) to import.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec : GTLRObject

/**
 *  Required. ID of the Feature to import values of. This Feature must exist in
 *  the target EntityType, or the request will fail.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Source column to get the Feature values from. If not set, uses the column
 *  with the same name as the Feature ID.
 */
@property(nonatomic, copy, nullable) NSString *sourceField;

@end


/**
 *  Response message for FeaturestoreService.ImportFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesResponse : GTLRObject

/**
 *  Number of entities that have been imported by the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEntityCount;

/**
 *  Number of Feature values that have been imported by the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedFeatureValueCount;

/**
 *  The number of rows in input source that weren't imported due to either * Not
 *  having any featureValues. * Having a null entityId. * Having a null
 *  timestamp. * Not being parsable (applicable for CSV sources).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidRowCount;

/**
 *  The number rows that weren't ingested due to having feature timestamps
 *  outside the retention boundary.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timestampOutsideRetentionRowsCount;

@end


/**
 *  Request message for ModelService.ImportModelEvaluation
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ImportModelEvaluationRequest : GTLRObject

/** Required. Model evaluation resource to be imported. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation *modelEvaluation;

@end


/**
 *  A representation of a collection of database items organized in a way that
 *  allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Index : GTLRObject

/** Output only. Timestamp when this Index was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The pointers to DeployedIndexes created from this Index. An
 *  Index can be only deleted if all its DeployedIndexes had been undeployed
 *  first.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndexRef *> *deployedIndexes;

/**
 *  The description of the Index.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the Index. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Immutable. Customer-managed encryption key spec for an Index. If set, this
 *  Index and all sub-resources of this Index will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Output only. Stats of the index resource. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexStats *indexStats;

/**
 *  Immutable. The update method to use with this Index. If not set,
 *  BATCH_UPDATE will be used by default.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_BatchUpdate
 *        BatchUpdate: user can call UpdateIndex with files on Cloud Storage of
 *        Datapoints to update. (Value: "BATCH_UPDATE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_IndexUpdateMethodUnspecified
 *        Should not be used. (Value: "INDEX_UPDATE_METHOD_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Index_IndexUpdateMethod_StreamUpdate
 *        StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to
 *        update the Index and the updates will be applied in corresponding
 *        DeployedIndexes in nearly real-time. (Value: "STREAM_UPDATE")
 */
@property(nonatomic, copy, nullable) NSString *indexUpdateMethod;

/**
 *  The labels with user-defined metadata to organize your Indexes. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Index_Labels *labels;

/**
 *  An additional information about the Index; the schema of the metadata can be
 *  found in metadata_schema.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Immutable. Points to a YAML file stored on Google Cloud Storage describing
 *  additional information about the Index, that is specific to it. Unset if the
 *  Index does not have any additional information. The schema is defined as an
 *  OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  Note: The URI given on output will be immutable and probably different,
 *  including the URI scheme, than the one given on input. The output URI will
 *  point to a location where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *metadataSchemaUri;

/** Output only. The resource name of the Index. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Timestamp when this Index was most recently updated. This also
 *  includes any update to the contents of the Index. Note that Operations
 *  working on this Index may have their
 *  Operations.metadata.generic_metadata.update_time a little after the value of
 *  this timestamp, yet that does not mean their results are not already
 *  reflected in the Index. Result of any successfully completed Operation on
 *  the Index is reflected in it.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Indexes. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Index_Labels : GTLRObject
@end


/**
 *  A datapoint of Index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint : GTLRObject

/**
 *  Optional. CrowdingTag of the datapoint, the number of neighbors to return in
 *  each crowding can be configured during query.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointCrowdingTag *crowdingTag;

/** Required. Unique identifier of the datapoint. */
@property(nonatomic, copy, nullable) NSString *datapointId;

/**
 *  Required. Feature embedding vector for dense index. An array of numbers with
 *  the length of [NearestNeighborSearchConfig.dimensions].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *featureVector;

/**
 *  Optional. List of Restrict of the datapoint, used to perform "restricted
 *  searches" where boolean rule are used to filter the subset of the database
 *  eligible for matching. This uses numeric comparisons.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction *> *numericRestricts;

/**
 *  Optional. List of Restrict of the datapoint, used to perform "restricted
 *  searches" where boolean rule are used to filter the subset of the database
 *  eligible for matching. This uses categorical tokens. See:
 *  https://cloud.google.com/vertex-ai/docs/matching-engine/filtering
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointRestriction *> *restricts;

/** Optional. Feature embedding vector for sparse index. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointSparseEmbedding *sparseEmbedding;

@end


/**
 *  Crowding tag is a constraint on a neighbor list produced by nearest neighbor
 *  search requiring that no more than some value k' of the k neighbors returned
 *  have the same value of crowding_attribute.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointCrowdingTag : GTLRObject

/**
 *  The attribute value used for crowding. The maximum number of neighbors to
 *  return per crowding attribute value (per_crowding_attribute_num_neighbors)
 *  is configured per-query. This field is ignored if
 *  per_crowding_attribute_num_neighbors is larger than the total number of
 *  neighbors to return for a given query.
 */
@property(nonatomic, copy, nullable) NSString *crowdingAttribute;

@end


/**
 *  This field allows restricts to be based on numeric comparisons rather than
 *  categorical tokens.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction : GTLRObject

/**
 *  The namespace of this restriction. e.g.: cost.
 *
 *  Remapped to 'namespaceProperty' to avoid language reserved word 'namespace'.
 */
@property(nonatomic, copy, nullable) NSString *namespaceProperty;

/**
 *  This MUST be specified for queries and must NOT be specified for datapoints.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Equal
 *        Datapoints are eligible iff their value is == the query's. (Value:
 *        "EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Greater
 *        Datapoints are eligible iff their value is > the query's. (Value:
 *        "GREATER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_GreaterEqual
 *        Datapoints are eligible iff their value is >= the query's. (Value:
 *        "GREATER_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_Less
 *        Datapoints are eligible iff their value is < the query's. (Value:
 *        "LESS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_LessEqual
 *        Datapoints are eligible iff their value is <= the query's. (Value:
 *        "LESS_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_NotEqual
 *        Datapoints are eligible iff their value is != the query's. (Value:
 *        "NOT_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointNumericRestriction_Op_OperatorUnspecified
 *        Default value of the enum. (Value: "OPERATOR_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *op;

/**
 *  Represents 64 bit float.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueDouble;

/**
 *  Represents 32 bit float.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueFloat;

/**
 *  Represents 64 bit integer.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueInt;

@end


/**
 *  Restriction of a datapoint which describe its attributes(tokens) from each
 *  of several attribute categories(namespaces).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointRestriction : GTLRObject

/** The attributes to allow in this namespace. e.g.: 'red' */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowList;

/** The attributes to deny in this namespace. e.g.: 'blue' */
@property(nonatomic, strong, nullable) NSArray<NSString *> *denyList;

/**
 *  The namespace of this restriction. e.g.: color.
 *
 *  Remapped to 'namespaceProperty' to avoid language reserved word 'namespace'.
 */
@property(nonatomic, copy, nullable) NSString *namespaceProperty;

@end


/**
 *  Feature embedding vector for sparse index. An array of numbers whose values
 *  are located in the specified dimensions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapointSparseEmbedding : GTLRObject

/**
 *  Required. The list of indexes for the embedding values of the sparse vector.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *dimensions;

/**
 *  Required. The list of embedding values of the sparse vector.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Indexes are deployed into it. An IndexEndpoint can have multiple
 *  DeployedIndexes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint : GTLRObject

/** Output only. Timestamp when this IndexEndpoint was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The indexes deployed in this endpoint. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *> *deployedIndexes;

/**
 *  The description of the IndexEndpoint.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the IndexEndpoint. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Deprecated: If true, expose the IndexEndpoint via private service
 *  connect. Only one of the fields, network or enable_private_service_connect,
 *  can be set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePrivateServiceConnect GTLR_DEPRECATED;

/**
 *  Immutable. Customer-managed encryption key spec for an IndexEndpoint. If
 *  set, this IndexEndpoint and all sub-resources of this IndexEndpoint will be
 *  secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your IndexEndpoints. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint_Labels *labels;

/** Output only. The resource name of the IndexEndpoint. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The full name of the Google Compute Engine
 *  [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
 *  to which the IndexEndpoint should be peered. Private services access must
 *  already be configured for the network. If left unspecified, the Endpoint is
 *  not peered with any network. network and private_service_connect_config are
 *  mutually exclusive.
 *  [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
 *  `projects/{project}/global/networks/{network}`. Where {project} is a project
 *  number, as in '12345', and {network} is network name.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Optional. Configuration for private service connect. network and
 *  private_service_connect_config are mutually exclusive.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PrivateServiceConnectConfig *privateServiceConnectConfig;

/**
 *  Output only. If public_endpoint_enabled is true, this field will be
 *  populated with the domain name to use for this index endpoint.
 */
@property(nonatomic, copy, nullable) NSString *publicEndpointDomainName;

/**
 *  Optional. If true, the deployed index will be accessible through public
 *  endpoint.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *publicEndpointEnabled;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Timestamp when this IndexEndpoint was last updated. This
 *  timestamp is not updated when the endpoint's DeployedIndexes are updated,
 *  e.g. due to updates of the original Indexes they are the deployments of.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your IndexEndpoints. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint_Labels : GTLRObject
@end


/**
 *  IndexPrivateEndpoints proto is used to provide paths for users to send
 *  requests via private endpoints (e.g. private service access, private service
 *  connect). To send request via private service access, use
 *  match_grpc_address. To send request via private service connect, use
 *  service_attachment.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexPrivateEndpoints : GTLRObject

/** Output only. The ip address used to send match gRPC requests. */
@property(nonatomic, copy, nullable) NSString *matchGrpcAddress;

/**
 *  Output only. PscAutomatedEndpoints is populated if private service connect
 *  is enabled if PscAutomatedConfig is set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PscAutomatedEndpoints *> *pscAutomatedEndpoints;

/**
 *  Output only. The name of the service attachment resource. Populated if
 *  private service connect is enabled.
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachment;

@end


/**
 *  Stats of the Index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IndexStats : GTLRObject

/**
 *  Output only. The number of shards in the Index.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardsCount;

/**
 *  Output only. The number of sparse vectors in the Index.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sparseVectorsCount;

/**
 *  Output only. The number of dense vectors in the Index.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vectorsCount;

@end


/**
 *  Specifies Vertex AI owned input data to be used for training, and possibly
 *  evaluating, the Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1InputDataConfig : GTLRObject

/**
 *  Applicable only to custom training with Datasets that have DataItems and
 *  Annotations. Cloud Storage URI that points to a YAML file describing the
 *  annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  The schema files that can be used here are found in
 *  gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the
 *  chosen schema must be consistent with metadata of the Dataset specified by
 *  dataset_id. Only Annotations that both match this schema and belong to
 *  DataItems not ignored by the split method are used in respectively training,
 *  validation or test role, depending on the role of the DataItem they are on.
 *  When used in conjunction with annotations_filter, the Annotations used for
 *  training are filtered by both annotations_filter and annotation_schema_uri.
 */
@property(nonatomic, copy, nullable) NSString *annotationSchemaUri;

/**
 *  Applicable only to Datasets that have DataItems and Annotations. A filter on
 *  Annotations of the Dataset. Only Annotations that both match this filter and
 *  belong to DataItems not ignored by the split method are used in respectively
 *  training, validation or test role, depending on the role of the DataItem
 *  they are on (for the auto-assigned that role is decided by Vertex AI). A
 *  filter with same syntax as the one used in ListAnnotations may be used, but
 *  note here it filters across all Annotations of the Dataset, and not just
 *  within a single DataItem.
 */
@property(nonatomic, copy, nullable) NSString *annotationsFilter;

/**
 *  Only applicable to custom training with tabular Dataset with BigQuery
 *  source. The BigQuery project location where the training data is to be
 *  written to. In the given project a new dataset is created with name
 *  `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ format. All
 *  training input data is written into that dataset. In the dataset three
 *  tables are created, `training`, `validation` and `test`. * AIP_DATA_FORMAT =
 *  "bigquery". * AIP_TRAINING_DATA_URI =
 *  "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI =
 *  "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI =
 *  "bigquery_destination.dataset___.test"
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination *bigqueryDestination;

/**
 *  Required. The ID of the Dataset in the same Project and Location which data
 *  will be used to train the Model. The Dataset must use schema compatible with
 *  Model being trained, and what is compatible should be described in the used
 *  TrainingPipeline's training_task_definition. For tabular Datasets, all their
 *  data is exported to training, to pick and choose from.
 */
@property(nonatomic, copy, nullable) NSString *datasetId;

/** Split based on the provided filters for each set. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FilterSplit *filterSplit;

/** Split based on fractions defining the size of each set. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FractionSplit *fractionSplit;

/**
 *  The Cloud Storage location where the training data is to be written to. In
 *  the given directory a new directory is created with name: `dataset---` where
 *  timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All training input
 *  data is written into that directory. The Vertex AI environment variables
 *  representing Cloud Storage data URIs are represented in the Cloud Storage
 *  wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" *
 *  AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data *
 *  AIP_TRAINING_DATA_URI =
 *  "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" *
 *  AIP_VALIDATION_DATA_URI =
 *  "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" *
 *  AIP_TEST_DATA_URI = "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcsDestination;

/**
 *  Whether to persist the ML use assignment to data item system labels.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *persistMlUseAssignment;

/** Supported only for tabular Datasets. Split based on a predefined key. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PredefinedSplit *predefinedSplit;

/**
 *  Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery
 *  (annotation set) under the Dataset specified by dataset_id used for
 *  filtering Annotations for training. Only Annotations that are associated
 *  with this SavedQuery are used in respectively training. When used in
 *  conjunction with annotations_filter, the Annotations used for training are
 *  filtered by both saved_query_id and annotations_filter. Only one of
 *  saved_query_id and annotation_schema_uri should be specified as both of them
 *  represent the same thing: problem type.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

/**
 *  Supported only for tabular Datasets. Split based on the distribution of the
 *  specified column.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StratifiedSplit *stratifiedSplit;

/**
 *  Supported only for tabular Datasets. Split based on the timestamp of the
 *  input data pieces.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TimestampSplit *timestampSplit;

@end


/**
 *  A list of int64 values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Int64Array : GTLRObject

/**
 *  A list of int64 values.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  An attribution method that computes the Aumann-Shapley value taking
 *  advantage of the model's fully differentiable structure. Refer to this paper
 *  for more details: https://arxiv.org/abs/1703.01365
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1IntegratedGradientsAttribution : GTLRObject

/**
 *  Config for IG with blur baseline. When enabled, a linear path from the
 *  maximally blurred image to the input image is created. Using a blurred
 *  baseline instead of zero (black image) is motivated by the BlurIG approach
 *  explained here: https://arxiv.org/abs/2004.03383
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BlurBaselineConfig *blurBaselineConfig;

/**
 *  Config for SmoothGrad approximation of gradients. When enabled, the
 *  gradients are approximated by averaging the gradients from noisy samples in
 *  the vicinity of the inputs. Adding noise can help improve the computed
 *  gradients. Refer to this paper for more details:
 *  https://arxiv.org/pdf/1706.03825.pdf
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SmoothGradConfig *smoothGradConfig;

/**
 *  Required. The number of steps for approximating the path integral. A good
 *  value to start is 50 and gradually increase until the sum to diff property
 *  is within the desired error range. Valid range of its value is [1, 100],
 *  inclusively.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepCount;

@end


/**
 *  Contains information about the Large Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LargeModelReference : GTLRObject

/**
 *  Required. The unique name of the large Foundation or pre-built model. Like
 *  "chat-bison", "text-bison". Or model name with version ID, like
 *  "chat-bison\@001", "text-bison\@005", etc.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A subgraph of the overall lineage graph. Event edges connect Artifact and
 *  Execution nodes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph : GTLRObject

/** The Artifact nodes in the subgraph. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Artifact *> *artifacts;

/** The Event edges between Artifacts and Executions in the subgraph. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Event *> *events;

/** The Execution nodes in the subgraph. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Execution *> *executions;

@end


/**
 *  Response message for DatasetService.ListAnnotations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "annotations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListAnnotationsResponse : GTLRCollectionObject

/**
 *  A list of Annotations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Annotation *> *annotations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for MetadataService.ListArtifacts.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "artifacts" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListArtifactsResponse : GTLRCollectionObject

/**
 *  The Artifacts retrieved from the MetadataStore.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Artifact *> *artifacts;

/**
 *  A token, which can be sent as ListArtifactsRequest.page_token to retrieve
 *  the next page. If this field is not populated, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListBatchPredictionJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "batchPredictionJobs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListBatchPredictionJobsResponse : GTLRCollectionObject

/**
 *  List of BatchPredictionJobs in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob *> *batchPredictionJobs;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListBatchPredictionJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for MetadataService.ListContexts.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "contexts" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListContextsResponse : GTLRCollectionObject

/**
 *  The Contexts retrieved from the MetadataStore.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Context *> *contexts;

/**
 *  A token, which can be sent as ListContextsRequest.page_token to retrieve the
 *  next page. If this field is not populated, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListCustomJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "customJobs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListCustomJobsResponse : GTLRCollectionObject

/**
 *  List of CustomJobs in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1CustomJob *> *customJobs;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListCustomJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for DatasetService.ListDataItems.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataItems" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListDataItemsResponse : GTLRCollectionObject

/**
 *  A list of DataItems that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DataItem *> *dataItems;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListDataLabelingJobs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataLabelingJobs" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListDataLabelingJobsResponse : GTLRCollectionObject

/**
 *  A list of DataLabelingJobs that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob *> *dataLabelingJobs;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for DatasetService.ListDatasets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "datasets" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetsResponse : GTLRCollectionObject

/**
 *  A list of Datasets that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Dataset *> *datasets;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for DatasetService.ListDatasetVersions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "datasetVersions" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetVersionsResponse : GTLRCollectionObject

/**
 *  A list of DatasetVersions that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *> *datasetVersions;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListDeploymentResourcePools method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "deploymentResourcePools" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse : GTLRCollectionObject

/**
 *  The DeploymentResourcePools from the specified location.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool *> *deploymentResourcePools;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for EndpointService.ListEndpoints.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "endpoints" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListEndpointsResponse : GTLRCollectionObject

/**
 *  List of Endpoints in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Endpoint *> *endpoints;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListEndpointsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeaturestoreService.ListEntityTypes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entityTypes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListEntityTypesResponse : GTLRCollectionObject

/**
 *  The EntityTypes matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EntityType *> *entityTypes;

/**
 *  A token, which can be sent as ListEntityTypesRequest.page_token to retrieve
 *  the next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for MetadataService.ListExecutions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "executions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListExecutionsResponse : GTLRCollectionObject

/**
 *  The Executions retrieved from the MetadataStore.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Execution *> *executions;

/**
 *  A token, which can be sent as ListExecutionsRequest.page_token to retrieve
 *  the next page. If this field is not populated, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeatureRegistryService.ListFeatureGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "featureGroups" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureGroupsResponse : GTLRCollectionObject

/**
 *  The FeatureGroups matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup *> *featureGroups;

/**
 *  A token, which can be sent as ListFeatureGroupsRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "featureOnlineStores" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse : GTLRCollectionObject

/**
 *  The FeatureOnlineStores matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore *> *featureOnlineStores;

/**
 *  A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeaturestoreService.ListFeatures. Response message for
 *  FeatureRegistryService.ListFeatures.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "features" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturesResponse : GTLRCollectionObject

/**
 *  The Features matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Feature *> *features;

/**
 *  A token, which can be sent as ListFeaturesRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeaturestoreService.ListFeaturestores.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "featurestores" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturestoresResponse : GTLRCollectionObject

/**
 *  The Featurestores matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Featurestore *> *featurestores;

/**
 *  A token, which can be sent as ListFeaturestoresRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeatureOnlineStoreAdminService.ListFeatureViews.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "featureViews" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewsResponse : GTLRCollectionObject

/**
 *  The FeatureViews matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureView *> *featureViews;

/**
 *  A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve
 *  the next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "featureViewSyncs" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewSyncsResponse : GTLRCollectionObject

/**
 *  The FeatureViewSyncs matching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSync *> *featureViewSyncs;

/**
 *  A token, which can be sent as ListFeatureViewSyncsRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListHyperparameterTuningJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "hyperparameterTuningJobs" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse : GTLRCollectionObject

/**
 *  List of HyperparameterTuningJobs in the requested page.
 *  HyperparameterTuningJob.trials of the jobs will be not be returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob *> *hyperparameterTuningJobs;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListHyperparameterTuningJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for IndexEndpointService.ListIndexEndpoints.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "indexEndpoints" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListIndexEndpointsResponse : GTLRCollectionObject

/**
 *  List of IndexEndpoints in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint *> *indexEndpoints;

/**
 *  A token to retrieve next page of results. Pass to
 *  ListIndexEndpointsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for IndexService.ListIndexes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "indexes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListIndexesResponse : GTLRCollectionObject

/**
 *  List of indexes in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Index *> *indexes;

/**
 *  A token to retrieve next page of results. Pass to
 *  ListIndexesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for MetadataService.ListMetadataSchemas.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "metadataSchemas" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataSchemasResponse : GTLRCollectionObject

/**
 *  The MetadataSchemas found for the MetadataStore.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema *> *metadataSchemas;

/**
 *  A token, which can be sent as ListMetadataSchemasRequest.page_token to
 *  retrieve the next page. If this field is not populated, there are no
 *  subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for MetadataService.ListMetadataStores.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "metadataStores" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataStoresResponse : GTLRCollectionObject

/**
 *  The MetadataStores found for the Location.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore *> *metadataStores;

/**
 *  A token, which can be sent as ListMetadataStoresRequest.page_token to
 *  retrieve the next page. If this field is not populated, there are no
 *  subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListModelDeploymentMonitoringJobs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "modelDeploymentMonitoringJobs" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse : GTLRCollectionObject

/**
 *  A list of ModelDeploymentMonitoringJobs that matches the specified filter in
 *  the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob *> *modelDeploymentMonitoringJobs;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ModelService.ListModelEvaluationSlices.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "modelEvaluationSlices" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse : GTLRCollectionObject

/**
 *  List of ModelEvaluations in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice *> *modelEvaluationSlices;

/**
 *  A token to retrieve next page of results. Pass to
 *  ListModelEvaluationSlicesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ModelService.ListModelEvaluations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "modelEvaluations" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationsResponse : GTLRCollectionObject

/**
 *  List of ModelEvaluations in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation *> *modelEvaluations;

/**
 *  A token to retrieve next page of results. Pass to
 *  ListModelEvaluationsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ModelService.ListModels
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "models" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListModelsResponse : GTLRCollectionObject

/**
 *  List of Models in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Model *> *models;

/**
 *  A token to retrieve next page of results. Pass to
 *  ListModelsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ModelService.ListModelVersions
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "models" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListModelVersionsResponse : GTLRCollectionObject

/**
 *  List of Model versions in the requested page. In the returned Model name
 *  field, version ID instead of regvision tag will be included.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Model *> *models;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListModelVersionsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListNasJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "nasJobs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListNasJobsResponse : GTLRCollectionObject

/**
 *  List of NasJobs in the requested page. NasJob.nas_job_output of the jobs
 *  will not be returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NasJob *> *nasJobs;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListNasJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for JobService.ListNasTrialDetails
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "nasTrialDetails" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListNasTrialDetailsResponse : GTLRCollectionObject

/**
 *  List of top NasTrials in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NasTrialDetail *> *nasTrialDetails;

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListNasTrialDetailsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for [NotebookService.CreateNotebookExecutionJob]
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "notebookExecutionJobs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results. Pass to
 *  ListNotebookExecutionJobs.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of NotebookExecutionJobs in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob *> *notebookExecutionJobs;

@end


/**
 *  Response message for NotebookService.ListNotebookRuntimes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "notebookRuntimes" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimesResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results. Pass to
 *  ListNotebookRuntimesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of NotebookRuntimes in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime *> *notebookRuntimes;

@end


/**
 *  Response message for NotebookService.ListNotebookRuntimeTemplates.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "notebookRuntimeTemplates" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results. Pass to
 *  ListNotebookRuntimeTemplatesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of NotebookRuntimeTemplates in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate *> *notebookRuntimeTemplates;

@end


/**
 *  Request message for VizierService.ListOptimalTrials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsRequest : GTLRObject
@end


/**
 *  Response message for VizierService.ListOptimalTrials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsResponse : GTLRObject

/**
 *  The pareto-optimal Trials for multiple objective Study or the optimal trial
 *  for single objective Study. The definition of pareto-optimal can be checked
 *  in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Trial *> *optimalTrials;

@end


/**
 *  Response message for PersistentResourceService.ListPersistentResources
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "persistentResources" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListPersistentResourcesResponse : GTLRCollectionObject

/**
 *  A token to retrieve next page of results. Pass to
 *  ListPersistentResourcesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  persistentResources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource *> *persistentResources;

@end


/**
 *  Response message for PipelineService.ListPipelineJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "pipelineJobs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListPipelineJobsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListPipelineJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of PipelineJobs in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob *> *pipelineJobs;

@end


/**
 *  Response message for DatasetService.ListSavedQueries.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "savedQueries" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListSavedQueriesResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of SavedQueries that match the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SavedQuery *> *savedQueries;

@end


/**
 *  Response message for ScheduleService.ListSchedules
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "schedules" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListSchedulesResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListSchedulesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of Schedules in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Schedule *> *schedules;

@end


/**
 *  Response message for SpecialistPoolService.ListSpecialistPools.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "specialistPools" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListSpecialistPoolsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of SpecialistPools that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool *> *specialistPools;

@end


/**
 *  Response message for VizierService.ListStudies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "studies" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListStudiesResponse : GTLRCollectionObject

/**
 *  Passes this token as the `page_token` field of the request for a subsequent
 *  call. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The studies associated with the project.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Study *> *studies;

@end


/**
 *  Response message for TensorboardService.ListTensorboardExperiments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tensorboardExperiments" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardExperimentsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as ListTensorboardExperimentsRequest.page_token
 *  to retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The TensorboardExperiments mathching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment *> *tensorboardExperiments;

@end


/**
 *  Response message for TensorboardService.ListTensorboardRuns.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tensorboardRuns" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardRunsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as ListTensorboardRunsRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The TensorboardRuns mathching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *> *tensorboardRuns;

@end


/**
 *  Response message for TensorboardService.ListTensorboards.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tensorboards" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as ListTensorboardsRequest.page_token to retrieve
 *  the next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Tensorboards mathching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard *> *tensorboards;

@end


/**
 *  Response message for TensorboardService.ListTensorboardTimeSeries.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tensorboardTimeSeries" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to
 *  retrieve the next page. If this field is omitted, there are no subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The TensorboardTimeSeries mathching the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *> *tensorboardTimeSeries;

@end


/**
 *  Response message for PipelineService.ListTrainingPipelines
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "trainingPipelines" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTrainingPipelinesResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListTrainingPipelinesRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TrainingPipelines in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline *> *trainingPipelines;

@end


/**
 *  Response message for VizierService.ListTrials.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "trials" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTrialsResponse : GTLRCollectionObject

/**
 *  Pass this token as the `page_token` field of the request for a subsequent
 *  call. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Trials associated with the Study.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Trial *> *trials;

@end


/**
 *  Response message for GenAiTuningService.ListTuningJobs
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tuningJobs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ListTuningJobsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass to
 *  ListTuningJobsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TuningJobs in the requested page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TuningJob *> *tuningJobs;

@end


/**
 *  Logprobs Result
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResult : GTLRObject

/**
 *  Length = total number of decoding steps. The chosen candidates may or may
 *  not be in top_candidates.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultCandidate *> *chosenCandidates;

/** Length = total number of decoding steps. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultTopCandidates *> *topCandidates;

@end


/**
 *  Candidate for the logprobs token and score.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultCandidate : GTLRObject

/**
 *  The candidate's log probability.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logProbability;

/** The candidate’s token string value. */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  The candidate’s token id value.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tokenId;

@end


/**
 *  Candidates with top log probabilities at each decoding step.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultTopCandidates : GTLRObject

/** Sorted by log probability in descending order. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1LogprobsResultCandidate *> *candidates;

@end


/**
 *  Request message for VizierService.LookupStudy.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1LookupStudyRequest : GTLRObject

/** Required. The user-defined display name of the Study */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Specification of a single machine.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec : GTLRObject

/**
 *  The number of accelerators to attach to the machine.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acceleratorCount;

/**
 *  Immutable. The type of accelerator(s) that may be attached to the machine as
 *  per accelerator_count.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_AcceleratorTypeUnspecified
 *        Unspecified accelerator type, which means no accelerator. (Value:
 *        "ACCELERATOR_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaA10080gb
 *        Nvidia A100 80GB GPU. (Value: "NVIDIA_A100_80GB")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaH10080gb
 *        Nvidia H100 80Gb GPU. (Value: "NVIDIA_H100_80GB")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaL4
 *        Nvidia L4 GPU. (Value: "NVIDIA_L4")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaA100
 *        Nvidia Tesla A100 GPU. (Value: "NVIDIA_TESLA_A100")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaK80
 *        Deprecated: Nvidia Tesla K80 GPU has reached end of support, see
 *        https://cloud.google.com/compute/docs/eol/k80-eol. (Value:
 *        "NVIDIA_TESLA_K80")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaP100
 *        Nvidia Tesla P100 GPU. (Value: "NVIDIA_TESLA_P100")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaP4
 *        Nvidia Tesla P4 GPU. (Value: "NVIDIA_TESLA_P4")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaT4
 *        Nvidia Tesla T4 GPU. (Value: "NVIDIA_TESLA_T4")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_NvidiaTeslaV100
 *        Nvidia Tesla V100 GPU. (Value: "NVIDIA_TESLA_V100")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV2
 *        TPU v2. (Value: "TPU_V2")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV3
 *        TPU v3. (Value: "TPU_V3")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV4Pod
 *        TPU v4. (Value: "TPU_V4_POD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MachineSpec_AcceleratorType_TpuV5Litepod
 *        TPU v5. (Value: "TPU_V5_LITEPOD")
 */
@property(nonatomic, copy, nullable) NSString *acceleratorType;

/**
 *  Immutable. The type of the machine. See the [list of machine types supported
 *  for
 *  prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types)
 *  See the [list of machine types supported for custom
 *  training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types).
 *  For DeployedModel this field is optional, and the default value is
 *  `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this
 *  field is required.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Optional. Immutable. Configuration controlling how this resource pool
 *  consumes reservation.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity *reservationAffinity;

/**
 *  Immutable. The topology of the TPUs. Corresponds to the TPU topologies
 *  available from GKE. (Example: tpu_topology: "2x2x1").
 */
@property(nonatomic, copy, nullable) NSString *tpuTopology;

@end


/**
 *  Manual batch tuning parameters.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ManualBatchTuningParameters : GTLRObject

/**
 *  Immutable. The number of the records (e.g. instances) of the operation given
 *  in each batch to a machine replica. Machine type, and size of a single
 *  record should be considered when setting this parameter, higher value speeds
 *  up the batch operation's execution, but too high value will result in a
 *  whole batch not fitting in a machine's memory, and the whole operation will
 *  fail. The default value is 64.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchSize;

@end


/**
 *  A message representing a Measurement of a Trial. A Measurement contains the
 *  Metrics got by executing a Trial using suggested hyperparameter values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Measurement : GTLRObject

/**
 *  Output only. Time that the Trial has been running at the point of this
 *  Measurement.
 */
@property(nonatomic, strong, nullable) GTLRDuration *elapsedDuration;

/**
 *  Output only. A list of metrics got by evaluating the objective functions
 *  using suggested Parameter values.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MeasurementMetric *> *metrics;

/**
 *  Output only. The number of steps the machine learning model has been trained
 *  for. Must be non-negative.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepCount;

@end


/**
 *  A message representing a metric in the measurement.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MeasurementMetric : GTLRObject

/**
 *  Output only. The ID of the Metric. The Metric should be defined in
 *  StudySpec's Metrics.
 */
@property(nonatomic, copy, nullable) NSString *metricId;

/**
 *  Output only. The value for this metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Request message for ModelService.MergeVersionAliases.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MergeVersionAliasesRequest : GTLRObject

/**
 *  Required. The set of version aliases to merge. The alias should be at most
 *  128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an
 *  alias means removing that alias from the version. `-` is NOT counted in the
 *  128 characters. Example: `-golden` means removing the `golden` alias from
 *  the version. There is NO ordering in aliases, which means 1) The aliases
 *  returned from GetModel API might not have the exactly same order from this
 *  MergeVersionAliases API. 2) Adding and deleting the same alias in the
 *  request is not recommended, and the 2 operations will be cancelled out.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *versionAliases;

@end


/**
 *  Instance of a general MetadataSchema.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema : GTLRObject

/** Output only. Timestamp when this MetadataSchema was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the Metadata Schema
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Output only. The resource name of the MetadataSchema. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The raw YAML string representation of the MetadataSchema. The
 *  combination of [MetadataSchema.version] and the schema name given by `title`
 *  in [MetadataSchema.schema] must be unique within a MetadataStore. The schema
 *  is defined as an OpenAPI 3.0.2 [MetadataSchema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
 */
@property(nonatomic, copy, nullable) NSString *schema;

/**
 *  The type of the MetadataSchema. This is a property that identifies which
 *  metadata types will use the MetadataSchema.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ArtifactType
 *        A type indicating that the MetadataSchema will be used by Artifacts.
 *        (Value: "ARTIFACT_TYPE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ContextType
 *        A state indicating that the MetadataSchema will be used by Contexts.
 *        (Value: "CONTEXT_TYPE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_ExecutionType
 *        A typee indicating that the MetadataSchema will be used by Executions.
 *        (Value: "EXECUTION_TYPE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema_SchemaType_MetadataSchemaTypeUnspecified
 *        Unspecified type for the MetadataSchema. (Value:
 *        "METADATA_SCHEMA_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *schemaType;

/**
 *  The version of the MetadataSchema. The version's format must match the
 *  following regular expression: `^[0-9]+.+.+$`, which would allow to
 *  order/compare different versions. Example: 1.0.0, 1.0.1, etc.
 */
@property(nonatomic, copy, nullable) NSString *schemaVersion;

@end


/**
 *  Instance of a metadata store. Contains a set of metadata that can be
 *  queried.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore : GTLRObject

/** Output only. Timestamp when this MetadataStore was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. Dataplex integration settings. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreDataplexConfig *dataplexConfig;

/**
 *  Description of the MetadataStore.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Customer-managed encryption key spec for a Metadata Store. If set, this
 *  Metadata Store and all sub-resources of this Metadata Store are secured
 *  using this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/** Output only. The resource name of the MetadataStore instance. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. State information of the MetadataStore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreMetadataStoreState *state;

/** Output only. Timestamp when this MetadataStore was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Represents Dataplex integration settings.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreDataplexConfig : GTLRObject

/**
 *  Optional. Whether or not Data Lineage synchronization is enabled for Vertex
 *  Pipelines.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabledPipelinesLineage;

@end


/**
 *  Represents state information for a MetadataStore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MetadataStoreMetadataStoreState : GTLRObject

/**
 *  The disk utilization of the MetadataStore in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskUtilizationBytes;

@end


/**
 *  Represents one resource that exists in automl.googleapis.com,
 *  datalabeling.googleapis.com or ml.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResource : GTLRObject

/** Output only. Represents one Dataset in automl.googleapis.com. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlDataset *automlDataset;

/** Output only. Represents one Model in automl.googleapis.com. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlModel *automlModel;

/** Output only. Represents one Dataset in datalabeling.googleapis.com. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset *dataLabelingDataset;

/**
 *  Output only. Timestamp when the last migration attempt on this
 *  MigratableResource started. Will not be set if there's no migration attempt
 *  on this MigratableResource.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastMigrateTime;

/** Output only. Timestamp when this MigratableResource was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUpdateTime;

/** Output only. Represents one Version in ml.googleapis.com. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion *mlEngineModelVersion;

@end


/**
 *  Represents one Dataset in automl.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlDataset : GTLRObject

/**
 *  Full resource name of automl Dataset. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/** The Dataset's display name in automl.googleapis.com. */
@property(nonatomic, copy, nullable) NSString *datasetDisplayName;

@end


/**
 *  Represents one Model in automl.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceAutomlModel : GTLRObject

/**
 *  Full resource name of automl Model. Format:
 *  `projects/{project}/locations/{location}/models/{model}`.
 */
@property(nonatomic, copy, nullable) NSString *model;

/** The Model's display name in automl.googleapis.com. */
@property(nonatomic, copy, nullable) NSString *modelDisplayName;

@end


/**
 *  Represents one Dataset in datalabeling.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset : GTLRObject

/**
 *  The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to
 *  the data labeling Dataset.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset *> *dataLabelingAnnotatedDatasets;

/**
 *  Full resource name of data labeling Dataset. Format:
 *  `projects/{project}/datasets/{dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/** The Dataset's display name in datalabeling.googleapis.com. */
@property(nonatomic, copy, nullable) NSString *datasetDisplayName;

@end


/**
 *  Represents one AnnotatedDataset in datalabeling.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset : GTLRObject

/**
 *  Full resource name of data labeling AnnotatedDataset. Format:
 *  `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *annotatedDataset;

/** The AnnotatedDataset's display name in datalabeling.googleapis.com. */
@property(nonatomic, copy, nullable) NSString *annotatedDatasetDisplayName;

@end


/**
 *  Represents one model Version in ml.googleapis.com.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion : GTLRObject

/**
 *  The ml.googleapis.com endpoint that this model Version currently lives in.
 *  Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com *
 *  europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Full resource name of ml engine model Version. Format:
 *  `projects/{project}/models/{model}/versions/{version}`.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Config of migrating one resource from automl.googleapis.com,
 *  datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequest : GTLRObject

/**
 *  Config for migrating Dataset in automl.googleapis.com to Vertex AI's
 *  Dataset.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig *migrateAutomlDatasetConfig;

/**
 *  Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig *migrateAutomlModelConfig;

/**
 *  Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's
 *  Dataset.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig *migrateDataLabelingDatasetConfig;

/** Config for migrating Version in ml.googleapis.com to Vertex AI's Model. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig *migrateMlEngineModelVersionConfig;

@end


/**
 *  Config for migrating Dataset in automl.googleapis.com to Vertex AI's
 *  Dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig : GTLRObject

/**
 *  Required. Full resource name of automl Dataset. Format:
 *  `projects/{project}/locations/{location}/datasets/{dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Required. Display name of the Dataset in Vertex AI. System will pick a
 *  display name if unspecified.
 */
@property(nonatomic, copy, nullable) NSString *datasetDisplayName;

@end


/**
 *  Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig : GTLRObject

/**
 *  Required. Full resource name of automl Model. Format:
 *  `projects/{project}/locations/{location}/models/{model}`.
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Optional. Display name of the model in Vertex AI. System will pick a display
 *  name if unspecified.
 */
@property(nonatomic, copy, nullable) NSString *modelDisplayName;

@end


/**
 *  Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's
 *  Dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig : GTLRObject

/**
 *  Required. Full resource name of data labeling Dataset. Format:
 *  `projects/{project}/datasets/{dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Optional. Display name of the Dataset in Vertex AI. System will pick a
 *  display name if unspecified.
 */
@property(nonatomic, copy, nullable) NSString *datasetDisplayName;

/**
 *  Optional. Configs for migrating AnnotatedDataset in
 *  datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified
 *  AnnotatedDatasets have to belong to the datalabeling Dataset.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig *> *migrateDataLabelingAnnotatedDatasetConfigs;

@end


/**
 *  Config for migrating AnnotatedDataset in datalabeling.googleapis.com to
 *  Vertex AI's SavedQuery.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig : GTLRObject

/**
 *  Required. Full resource name of data labeling AnnotatedDataset. Format:
 *  `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
 */
@property(nonatomic, copy, nullable) NSString *annotatedDataset;

@end


/**
 *  Config for migrating version in ml.googleapis.com to Vertex AI's Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig : GTLRObject

/**
 *  Required. The ml.googleapis.com endpoint that this model version should be
 *  migrated from. Example values: * ml.googleapis.com *
 *  us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com *
 *  asia-east1-ml.googleapis.com
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Required. Display name of the model in Vertex AI. System will pick a display
 *  name if unspecified.
 */
@property(nonatomic, copy, nullable) NSString *modelDisplayName;

/**
 *  Required. Full resource name of ml engine model version. Format:
 *  `projects/{project}/models/{model}/versions/{version}`.
 */
@property(nonatomic, copy, nullable) NSString *modelVersion;

@end


/**
 *  Describes a successfully migrated resource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MigrateResourceResponse : GTLRObject

/** Migrated Dataset's resource name. */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Before migration, the identifier in ml.googleapis.com, automl.googleapis.com
 *  or datalabeling.googleapis.com.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MigratableResource *migratableResource;

/** Migrated Model's resource name. */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  A trained machine learning Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Model : GTLRObject

/**
 *  Immutable. The path to the directory containing the Model artifact and any
 *  of its supporting files. Not required for AutoML Models.
 */
@property(nonatomic, copy, nullable) NSString *artifactUri;

/**
 *  Optional. User input field to specify the base model source. Currently it
 *  only supports specifing the Model Garden models and Genie models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelBaseModelSource *baseModelSource;

/**
 *  Input only. The specification of the container that is to be used when
 *  deploying this Model. The specification is ingested upon
 *  ModelService.UploadModel, and all binaries it contains are copied and stored
 *  internally by Vertex AI. Not required for AutoML Models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelContainerSpec *containerSpec;

/** Output only. Timestamp when this Model was uploaded into Vertex AI. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Stats of data used for training or evaluating the Model. Only populated when
 *  the Model is trained by a TrainingPipeline with data_input_config.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelDataStats *dataStats;

/**
 *  Output only. The pointers to DeployedModels created from this Model. Note
 *  that Model could have been deployed to Endpoints in different Locations.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedModelRef *> *deployedModels;

/**
 *  The description of the Model.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the Model. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a Model. If set, this Model and all
 *  sub-resources of this Model will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The default explanation specification for this Model. The Model can be used
 *  for requesting explanation after being deployed if it is populated. The
 *  Model can be used for batch explanation if it is populated. All fields of
 *  the explanation_spec can be overridden by explanation_spec of
 *  DeployModelRequest.deployed_model, or explanation_spec of
 *  BatchPredictionJob. If the default explanation specification is not set for
 *  this Model, this Model can still be used for requesting explanation by
 *  setting explanation_spec of DeployModelRequest.deployed_model and for batch
 *  explanation by setting explanation_spec of BatchPredictionJob.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec *explanationSpec;

/**
 *  The labels with user-defined metadata to organize your Models. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Model_Labels *labels;

/**
 *  Immutable. An additional information about the Model; the schema of the
 *  metadata can be found in metadata_schema. Unset if the Model does not have
 *  any additional information.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Output only. The resource name of the Artifact that was created in
 *  MetadataStore when creating the Model. The Artifact resource name pattern is
 *  `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
 */
@property(nonatomic, copy, nullable) NSString *metadataArtifact;

/**
 *  Immutable. Points to a YAML file stored on Google Cloud Storage describing
 *  additional information about the Model, that is specific to it. Unset if the
 *  Model does not have any additional information. The schema is defined as an
 *  OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  AutoML Models always have this field populated by Vertex AI, if no
 *  additional metadata is needed, this field is set to an empty string. Note:
 *  The URI given on output will be immutable and probably different, including
 *  the URI scheme, than the one given on input. The output URI will point to a
 *  location where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *metadataSchemaUri;

/**
 *  Output only. Source of a model. It can either be automl training pipeline,
 *  custom training pipeline, BigQuery ML, or saved and tuned from Genie or
 *  Model Garden.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo *modelSourceInfo;

/** The resource name of the Model. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. If this Model is a copy of another Model, this contains info
 *  about the original.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelOriginalModelInfo *originalModelInfo;

/**
 *  Optional. This field is populated if the model is produced by a pipeline
 *  job.
 */
@property(nonatomic, copy, nullable) NSString *pipelineJob;

/**
 *  The schemata that describe formats of the Model's predictions and
 *  explanations as given and returned via PredictionService.Predict and
 *  PredictionService.Explain.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PredictSchemata *predictSchemata;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. When this Model is deployed, its prediction resources are
 *  described by the `prediction_resources` field of the
 *  Endpoint.deployed_models object. Because not all Models support all resource
 *  configuration types, the configuration types this Model supports are listed
 *  here. If no configuration types are listed, the Model cannot be deployed to
 *  an Endpoint and does not support online predictions
 *  (PredictionService.Predict or PredictionService.Explain). Such a Model can
 *  serve predictions by using a BatchPredictionJob, if it has at least one
 *  entry each in supported_input_storage_formats and
 *  supported_output_storage_formats.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedDeploymentResourcesTypes;

/**
 *  Output only. The formats in which this Model may be exported. If empty, this
 *  Model is not available for export.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat *> *supportedExportFormats;

/**
 *  Output only. The formats this Model supports in
 *  BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri
 *  exists, the instances should be given as per that schema. The possible
 *  formats are: * `jsonl` The JSON Lines format, where each instance is a
 *  single line. Uses GcsSource. * `csv` The CSV format, where each instance is
 *  a single comma-separated line. The first line in the file is the header,
 *  containing comma-separated field names. Uses GcsSource. * `tf-record` The
 *  TFRecord format, where each instance is a single record in tfrecord syntax.
 *  Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is
 *  gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in
 *  BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the
 *  location of an instance to process, uses `gcs_source` field of the
 *  InputConfig object. If this Model doesn't support any of these formats it
 *  means it cannot be used with a BatchPredictionJob. However, if it has
 *  supported_deployment_resources_types, it could serve online predictions by
 *  using PredictionService.Predict or PredictionService.Explain.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedInputStorageFormats;

/**
 *  Output only. The formats this Model supports in
 *  BatchPredictionJob.output_config. If both
 *  PredictSchemata.instance_schema_uri and
 *  PredictSchemata.prediction_schema_uri exist, the predictions are returned
 *  together with their instances. In other words, the prediction has the
 *  original instance data first, followed by the actual prediction content (as
 *  per the schema). The possible formats are: * `jsonl` The JSON Lines format,
 *  where each prediction is a single line. Uses GcsDestination. * `csv` The CSV
 *  format, where each prediction is a single comma-separated line. The first
 *  line in the file is the header, containing comma-separated field names. Uses
 *  GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery
 *  table, uses BigQueryDestination . If this Model doesn't support any of these
 *  formats it means it cannot be used with a BatchPredictionJob. However, if it
 *  has supported_deployment_resources_types, it could serve online predictions
 *  by using PredictionService.Predict or PredictionService.Explain.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedOutputStorageFormats;

/**
 *  Output only. The resource name of the TrainingPipeline that uploaded this
 *  Model, if any.
 */
@property(nonatomic, copy, nullable) NSString *trainingPipeline;

/** Output only. Timestamp when this Model was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  User provided version aliases so that a model version can be referenced via
 *  alias (i.e.
 *  `projects/{project}/locations/{location}/models/{model_id}\@{version_alias}`
 *  instead of auto-generated version id (i.e.
 *  `projects/{project}/locations/{location}/models/{model_id}\@{version_id})`.
 *  The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default
 *  version alias will be created for the first version of the model, and there
 *  must be exactly one default version alias for a model.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *versionAliases;

/** Output only. Timestamp when this version was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *versionCreateTime;

/** The description of this version. */
@property(nonatomic, copy, nullable) NSString *versionDescription;

/**
 *  Output only. Immutable. The version ID of the model. A new version is
 *  committed when a new model version is uploaded or trained under an existing
 *  model id. It is an auto-incrementing decimal number in string
 *  representation.
 */
@property(nonatomic, copy, nullable) NSString *versionId;

/** Output only. Timestamp when this version was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *versionUpdateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Models. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Model_Labels : GTLRObject
@end


/**
 *  User input field to specify the base model source. Currently it only
 *  supports specifing the Model Garden models and Genie models.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelBaseModelSource : GTLRObject

/** Information about the base model of Genie models. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenieSource *genieSource;

/** Source information of Model Garden models. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelGardenSource *modelGardenSource;

@end


/**
 *  Specification of a container for serving predictions. Some fields in this
 *  message correspond to fields in the [Kubernetes Container v1 core
 *  specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelContainerSpec : GTLRObject

/**
 *  Immutable. Specifies arguments for the command that runs when the container
 *  starts. This overrides the container's
 *  [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this
 *  field as an array of executable and arguments, similar to a Docker `CMD`'s
 *  "default parameters" form. If you don't specify this field but do specify
 *  the command field, then the command from the `command` field runs without
 *  any additional arguments. See the [Kubernetes documentation about how the
 *  `command` and `args` fields interact with a container's `ENTRYPOINT` and
 *  `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
 *  If you don't specify this field and don't specify the `command` field, then
 *  the container's
 *  [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and
 *  `CMD` determine what runs based on their default behavior. See the Docker
 *  documentation about [how `CMD` and `ENTRYPOINT`
 *  interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
 *  In this field, you can reference [environment variables set by Vertex
 *  AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
 *  and environment variables set in the env field. You cannot reference
 *  environment variables set in the Docker image. In order for environment
 *  variables to be expanded, reference them by using the following syntax: $(
 *  VARIABLE_NAME) Note that this differs from Bash variable expansion, which
 *  does not use parentheses. If a variable cannot be resolved, the reference in
 *  the input string is used unchanged. To avoid variable expansion, you can
 *  escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field
 *  corresponds to the `args` field of the Kubernetes Containers [v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  Immutable. Specifies the command that runs when the container starts. This
 *  overrides the container's
 *  [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint).
 *  Specify this field as an array of executable and arguments, similar to a
 *  Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not
 *  specify this field, then the container's `ENTRYPOINT` runs, in conjunction
 *  with the args field or the container's
 *  [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either
 *  exists. If this field is not specified and the container does not have an
 *  `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and
 *  `ENTRYPOINT`
 *  interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
 *  If you specify this field, then you can also specify the `args` field to
 *  provide additional arguments for this command. However, if you specify this
 *  field, then the container's `CMD` is ignored. See the [Kubernetes
 *  documentation about how the `command` and `args` fields interact with a
 *  container's `ENTRYPOINT` and
 *  `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
 *  In this field, you can reference [environment variables set by Vertex
 *  AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
 *  and environment variables set in the env field. You cannot reference
 *  environment variables set in the Docker image. In order for environment
 *  variables to be expanded, reference them by using the following syntax: $(
 *  VARIABLE_NAME) Note that this differs from Bash variable expansion, which
 *  does not use parentheses. If a variable cannot be resolved, the reference in
 *  the input string is used unchanged. To avoid variable expansion, you can
 *  escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field
 *  corresponds to the `command` field of the Kubernetes Containers [v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

/** Immutable. Deployment timeout. Limit for deployment timeout is 2 hours. */
@property(nonatomic, strong, nullable) GTLRDuration *deploymentTimeout;

/**
 *  Immutable. List of environment variables to set in the container. After the
 *  container starts running, code running in the container can read these
 *  environment variables. Additionally, the command and args fields can
 *  reference these variables. Later entries in this list can also reference
 *  earlier entries. For example, the following example sets the variable
 *  `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value":
 *  "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch
 *  the order of the variables in the example, then the expansion does not
 *  occur. This field corresponds to the `env` field of the Kubernetes
 *  Containers [v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EnvVar *> *env;

/**
 *  Immutable. List of ports to expose from the container. Vertex AI sends gRPC
 *  prediction requests that it receives to the first port on this list. Vertex
 *  AI also sends liveness and health checks to this port. If you do not specify
 *  this field, gRPC requests to the container will be disabled. Vertex AI does
 *  not use ports other than the first one listed. This field corresponds to the
 *  `ports` field of the Kubernetes Containers v1 core API.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Port *> *grpcPorts;

/** Immutable. Specification for Kubernetes readiness probe. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Probe *healthProbe;

/**
 *  Immutable. HTTP path on the container to send health checks to. Vertex AI
 *  intermittently sends GET requests to this path on the container's IP address
 *  and port to check that the container is healthy. Read more about [health
 *  checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health).
 *  For example, if you set this field to `/bar`, then Vertex AI intermittently
 *  sends a GET request to the `/bar` path on the port of your container
 *  specified by the first value of this `ModelContainerSpec`'s ports field. If
 *  you don't specify this field, it defaults to the following value when you
 *  deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/
 *  DEPLOYED_MODEL:predict The placeholders in this value are replaced as
 *  follows: * ENDPOINT: The last segment (following `endpoints/`)of the
 *  Endpoint.name][] field of the Endpoint where this Model has been deployed.
 *  (Vertex AI makes this value available to your container code as the
 *  [`AIP_ENDPOINT_ID` environment
 *  variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
 *  * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes
 *  this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID`
 *  environment
 *  variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
 */
@property(nonatomic, copy, nullable) NSString *healthRoute;

/**
 *  Required. Immutable. URI of the Docker image to be used as the custom
 *  container for serving predictions. This URI must identify an image in
 *  Artifact Registry or Container Registry. Learn more about the [container
 *  publishing
 *  requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing),
 *  including permissions requirements for the Vertex AI Service Agent. The
 *  container image is ingested upon ModelService.UploadModel, stored
 *  internally, and this original path is afterwards not used. To learn about
 *  the requirements for the Docker image itself, see [Custom container
 *  requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#).
 *  You can use the URI to one of Vertex AI's [pre-built container images for
 *  prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers)
 *  in this field.
 */
@property(nonatomic, copy, nullable) NSString *imageUri;

/**
 *  Immutable. List of ports to expose from the container. Vertex AI sends any
 *  prediction requests that it receives to the first port on this list. Vertex
 *  AI also sends [liveness and health
 *  checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness)
 *  to this port. If you do not specify this field, it defaults to following
 *  value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use
 *  ports other than the first one listed. This field corresponds to the `ports`
 *  field of the Kubernetes Containers [v1 core
 *  API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Port *> *ports;

/**
 *  Immutable. HTTP path on the container to send prediction requests to. Vertex
 *  AI forwards requests sent using projects.locations.endpoints.predict to this
 *  path on the container's IP address and port. Vertex AI then returns the
 *  container's response in the API response. For example, if you set this field
 *  to `/foo`, then when Vertex AI receives a prediction request, it forwards
 *  the request body in a POST request to the `/foo` path on the port of your
 *  container specified by the first value of this `ModelContainerSpec`'s ports
 *  field. If you don't specify this field, it defaults to the following value
 *  when you deploy this Model to an Endpoint:
 *  /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The
 *  placeholders in this value are replaced as follows: * ENDPOINT: The last
 *  segment (following `endpoints/`)of the Endpoint.name][] field of the
 *  Endpoint where this Model has been deployed. (Vertex AI makes this value
 *  available to your container code as the [`AIP_ENDPOINT_ID` environment
 *  variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
 *  * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes
 *  this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID`
 *  environment
 *  variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
 */
@property(nonatomic, copy, nullable) NSString *predictRoute;

/**
 *  Immutable. The amount of the VM memory to reserve as the shared memory for
 *  the model in megabytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sharedMemorySizeMb;

/** Immutable. Specification for Kubernetes startup probe. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Probe *startupProbe;

@end


/**
 *  Stats of data used for train or evaluate the Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDataStats : GTLRObject

/**
 *  Number of Annotations that are used for evaluating this Model. If the Model
 *  is evaluated multiple times, this will be the number of test Annotations
 *  used by the first evaluation. If the Model is not evaluated, the number is
 *  0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testAnnotationsCount;

/**
 *  Number of DataItems that were used for evaluating this Model. If the Model
 *  is evaluated multiple times, this will be the number of test DataItems used
 *  by the first evaluation. If the Model is not evaluated, the number is 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testDataItemsCount;

/**
 *  Number of Annotations that are used for training this Model.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingAnnotationsCount;

/**
 *  Number of DataItems that were used for training this Model.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingDataItemsCount;

/**
 *  Number of Annotations that are used for validating this Model during
 *  training.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationAnnotationsCount;

/**
 *  Number of DataItems that were used for validating this Model during
 *  training.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationDataItemsCount;

@end


/**
 *  ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as
 *  well as some information of the logs stored in this table.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable : GTLRObject

/**
 *  The created BigQuery table to store logs. Customer could do their own query
 *  & analysis. Format: `bq://.model_deployment_monitoring_._`
 */
@property(nonatomic, copy, nullable) NSString *bigqueryTablePath;

/**
 *  The source of log.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_LogSourceUnspecified
 *        Unspecified source. (Value: "LOG_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_Serving
 *        Logs coming from Serving traffic. (Value: "SERVING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogSource_Training
 *        Logs coming from Training dataset. (Value: "TRAINING")
 */
@property(nonatomic, copy, nullable) NSString *logSource;

/**
 *  The type of log.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_Explain
 *        Explain logs. (Value: "EXPLAIN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_LogTypeUnspecified
 *        Unspecified type. (Value: "LOG_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable_LogType_Predict
 *        Predict logs. (Value: "PREDICT")
 */
@property(nonatomic, copy, nullable) NSString *logType;

/**
 *  Output only. The schema version of the request/response logging BigQuery
 *  table. Default to v1 if unset.
 */
@property(nonatomic, copy, nullable) NSString *requestResponseLoggingSchemaVersion;

@end


/**
 *  Represents a job that runs periodically to monitor the deployed models in an
 *  endpoint. It will analyze the logged training & prediction data to detect
 *  any abnormal behaviors.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob : GTLRObject

/**
 *  YAML schema file uri describing the format of a single instance that you
 *  want Tensorflow Data Validation (TFDV) to analyze. If this field is empty,
 *  all the feature data types are inferred from predict_instance_schema_uri,
 *  meaning that TFDV will use the data in the exact format(data type) as
 *  prediction request/response. If there are any data type differences between
 *  predict instance and TFDV instance, this field can be used to override the
 *  schema. For models trained with Vertex AI, this field must be set as all the
 *  fields in predict instance formatted as string.
 */
@property(nonatomic, copy, nullable) NSString *analysisInstanceSchemaUri;

/**
 *  Output only. The created bigquery tables for the job under customer project.
 *  Customer could do their own query & analysis. There could be 4 log tables in
 *  maximum: 1. Training data logging predict request/response 2. Serving data
 *  logging predict request/response
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable *> *bigqueryTables;

/**
 *  Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The user-defined name of the ModelDeploymentMonitoringJob. The
 *  name can be up to 128 characters long and can consist of any UTF-8
 *  characters. Display name of a ModelDeploymentMonitoringJob.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  If true, the scheduled monitoring pipeline logs are sent to Google Cloud
 *  Logging, including pipeline status and anomalies detected. Please note the
 *  logs incur cost, which are subject to [Cloud Logging
 *  pricing](https://cloud.google.com/logging#pricing).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableMonitoringPipelineLogs;

/**
 *  Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If
 *  set, this ModelDeploymentMonitoringJob and all sub-resources of this
 *  ModelDeploymentMonitoringJob will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Required. Endpoint resource name. Format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Output only. Only populated when the job's state is `JOB_STATE_FAILED` or
 *  `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  The labels with user-defined metadata to organize your
 *  ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_Labels *labels;

/** Output only. Latest triggered monitoring pipeline metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata *latestMonitoringPipelineMetadata;

/** Required. Sample Strategy for logging. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategy *loggingSamplingStrategy;

/**
 *  The TTL of BigQuery tables in user projects which stores logs. A day is the
 *  basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. {
 *  second: 3600} indicates ttl = 1 day.
 */
@property(nonatomic, strong, nullable) GTLRDuration *logTtl;

/**
 *  Required. The config for monitoring objectives. This is a per DeployedModel
 *  config. Each DeployedModel needs to be configured separately.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig *> *modelDeploymentMonitoringObjectiveConfigs;

/** Required. Schedule config for running the monitoring job. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig *modelDeploymentMonitoringScheduleConfig;

/** Alert config for model monitoring. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfig *modelMonitoringAlertConfig;

/** Output only. Resource name of a ModelDeploymentMonitoringJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Timestamp when this monitoring pipeline will be scheduled to
 *  run for the next round.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *nextScheduleTime;

/**
 *  YAML schema file uri describing the format of a single instance, which are
 *  given to format this Endpoint's prediction (and explanation). If not set, we
 *  will generate predict schema from collected predict requests.
 */
@property(nonatomic, copy, nullable) NSString *predictInstanceSchemaUri;

/**
 *  Sample Predict instance, same format as PredictRequest.instances, this can
 *  be set as a replacement of
 *  ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we
 *  will generate predict schema from collected predict requests.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id samplePredictInstance;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Schedule state when the monitoring job is in Running state.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_MonitoringScheduleStateUnspecified
 *        Unspecified state. (Value: "MONITORING_SCHEDULE_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Offline
 *        The pipeline is offline and will be scheduled for next run. (Value:
 *        "OFFLINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Pending
 *        The pipeline is picked up and wait to run. (Value: "PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_ScheduleState_Running
 *        The pipeline is running. (Value: "RUNNING")
 */
@property(nonatomic, copy, nullable) NSString *scheduleState;

/**
 *  Output only. The detailed state of the monitoring job. When the job is still
 *  creating, the state will be 'PENDING'. Once the job is successfully created,
 *  the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'.
 *  Resume the job, the state will return to 'RUNNING'.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Stats anomalies base folder path. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *statsAnomaliesBaseDirectory;

/**
 *  Output only. Timestamp when this ModelDeploymentMonitoringJob was updated
 *  most recently.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your
 *  ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob_Labels : GTLRObject
@end


/**
 *  All metadata of most recent monitoring pipelines.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata : GTLRObject

/**
 *  The time that most recent monitoring pipelines that is related to this run.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *runTime;

/** The status of the most recent monitoring pipeline. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *status;

@end


/**
 *  ModelDeploymentMonitoringObjectiveConfig contains the pair of
 *  deployed_model_id to ModelMonitoringObjectiveConfig.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig : GTLRObject

/** The DeployedModel ID of the objective config. */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  The objective config of for the modelmonitoring job of this deployed model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig *objectiveConfig;

@end


/**
 *  The config for scheduling monitoring job.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig : GTLRObject

/**
 *  Required. The model monitoring job scheduling interval. It will be rounded
 *  up to next full hour. This defines how often the monitoring jobs are
 *  triggered.
 */
@property(nonatomic, strong, nullable) GTLRDuration *monitorInterval;

/**
 *  The time window of the prediction data being included in each prediction
 *  dataset. This window specifies how long the data should be collected from
 *  historical model results for each run. If not set,
 *  ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g.
 *  If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window
 *  is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00
 *  will be retrieved and aggregated to calculate the monitoring statistics.
 */
@property(nonatomic, strong, nullable) GTLRDuration *monitorWindow;

@end


/**
 *  A collection of metrics calculated by comparing Model's predictions on all
 *  of the test data against annotations from the test data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation : GTLRObject

/**
 *  Points to a YAML file stored on Google Cloud Storage describing
 *  EvaluatedDataItemView.predictions, EvaluatedDataItemView.ground_truths,
 *  EvaluatedAnnotation.predictions, and EvaluatedAnnotation.ground_truths. The
 *  schema is defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  This field is not populated if there are neither EvaluatedDataItemViews nor
 *  EvaluatedAnnotations under this ModelEvaluation.
 */
@property(nonatomic, copy, nullable) NSString *annotationSchemaUri;

/** Output only. Timestamp when this ModelEvaluation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Points to a YAML file stored on Google Cloud Storage describing
 *  EvaluatedDataItemView.data_item_payload and
 *  EvaluatedAnnotation.data_item_payload. The schema is defined as an OpenAPI
 *  3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  This field is not populated if there are neither EvaluatedDataItemViews nor
 *  EvaluatedAnnotations under this ModelEvaluation.
 */
@property(nonatomic, copy, nullable) NSString *dataItemSchemaUri;

/** The display name of the ModelEvaluation. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Describes the values of ExplanationSpec that are used for explaining the
 *  predicted values on the evaluated data.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec *> *explanationSpecs;

/**
 *  The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from
 *  Managed Pipeline, metadata contains a structured value with keys of
 *  "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path",
 *  "row_based_metrics_path".
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Evaluation metrics of the Model. The schema of the metrics is stored in
 *  metrics_schema_uri
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metrics;

/**
 *  Points to a YAML file stored on Google Cloud Storage describing the metrics
 *  of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 */
@property(nonatomic, copy, nullable) NSString *metricsSchemaUri;

/**
 *  Aggregated explanation metrics for the Model's prediction output over the
 *  data this ModelEvaluation uses. This field is populated only if the Model is
 *  evaluated with explanations, and only for AutoML tabular Models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelExplanation *modelExplanation;

/** Output only. The resource name of the ModelEvaluation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  All possible dimensions of ModelEvaluationSlices. The dimensions can be used
 *  as the filter of the ModelService.ListModelEvaluationSlices request, in the
 *  form of `slice.dimension = `.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sliceDimensions;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec : GTLRObject

/** Explanation spec details. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ExplanationSpec *explanationSpec;

/**
 *  Explanation type. For AutoML Image Classification models, possible values
 *  are: * `image-integrated-gradients` * `image-xrai`
 */
@property(nonatomic, copy, nullable) NSString *explanationType;

@end


/**
 *  A collection of metrics calculated by comparing Model's predictions on a
 *  slice of the test data against ground truth annotations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice : GTLRObject

/** Output only. Timestamp when this ModelEvaluationSlice was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Sliced evaluation metrics of the Model. The schema of the
 *  metrics is stored in metrics_schema_uri
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metrics;

/**
 *  Output only. Points to a YAML file stored on Google Cloud Storage describing
 *  the metrics of this ModelEvaluationSlice. The schema is defined as an
 *  OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 */
@property(nonatomic, copy, nullable) NSString *metricsSchemaUri;

/**
 *  Output only. Aggregated explanation metrics for the Model's prediction
 *  output over the data this ModelEvaluation uses. This field is populated only
 *  if the Model is evaluated with explanations, and only for tabular Models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelExplanation *modelExplanation;

/** Output only. The resource name of the ModelEvaluationSlice. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The slice of the test data that is used to evaluate the Model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSlice *slice;

@end


/**
 *  Definition of a slice.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSlice : GTLRObject

/**
 *  Output only. The dimension of the slice. Well-known dimensions are: *
 *  `annotationSpec`: This slice is on the test data that has either ground
 *  truth or prediction with AnnotationSpec.display_name equals to value. *
 *  `slice`: This slice is a user customized slice defined by its SliceSpec.
 */
@property(nonatomic, copy, nullable) NSString *dimension;

/** Output only. Specification for how the data was sliced. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec *sliceSpec;

/** Output only. The value of the dimension in this slice. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Specification for how the data should be sliced.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec : GTLRObject

/**
 *  Mapping configuration for this SliceSpec. The key is the name of the
 *  feature. By default, the key will be prefixed by "instance" as a dictionary
 *  prefix for Vertex Batch Predictions output format.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec_Configs *configs;

@end


/**
 *  Mapping configuration for this SliceSpec. The key is the name of the
 *  feature. By default, the key will be prefixed by "instance" as a dictionary
 *  prefix for Vertex Batch Predictions output format.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec_Configs : GTLRObject
@end


/**
 *  A range of values for slice(s). `low` is inclusive, `high` is exclusive.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange : GTLRObject

/**
 *  Exclusive high value for the range.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *high;

/**
 *  Inclusive low value for the range.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *low;

@end


/**
 *  Specification message containing the config for this SliceSpec. When `kind`
 *  is selected as `value` and/or `range`, only a single slice will be computed.
 *  When `all_values` is present, a separate slice will be computed for each
 *  possible label/value for the corresponding key in `config`. Examples, with
 *  feature zip_code with values 12345, 23334, 88888 and feature country with
 *  values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": {
 *  "value": { "float_value": 12345.0 } } } A single slice for any data with
 *  zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low":
 *  12345, "high": 20000 } } } A single slice containing data where the
 *  zip_codes between 12345 and 20000 For this example, data with the zip_code
 *  of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low":
 *  10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } }
 *  A single slice containing data where the zip_codes between 10000 and 20000
 *  has the country "US". For this example, data with the zip_code of 12345 and
 *  country "US" will be in this slice. Example 4: { "country": {"all_values": {
 *  "value": true } } } Three slices are computed, one for each unique country
 *  in the dataset. Example 5: { "country": { "all_values": { "value": true } },
 *  "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are
 *  computed, one for each unique country in the dataset where the zip_code is
 *  also 12345. For this example, data with zip_code 12345 and country "US" will
 *  be in one slice, zip_code 12345 and country "Canada" in another slice, and
 *  zip_code 12345 and country "Mexico" in another slice, totaling 3 slices.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig : GTLRObject

/**
 *  If all_values is set to true, then all possible labels of the keyed feature
 *  will have another slice computed. Example: `{"all_values":{"value":true}}`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allValues;

/**
 *  A range of values for a numerical feature. Example:
 *  `{"range":{"low":10000.0,"high":50000.0}}` will capture 12345 and 23334 in
 *  the slice.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange *range;

/**
 *  A unique specific value for a given feature. Example: `{ "value": {
 *  "string_value": "12345" } }`
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue *value;

@end


/**
 *  Single value that supports strings and floats.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue : GTLRObject

/**
 *  Float type.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *floatValue;

/** String type. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  Aggregated explanation metrics for a Model over a set of instances.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelExplanation : GTLRObject

/**
 *  Output only. Aggregated attributions explaining the Model's prediction
 *  outputs over the set of instances. The attributions are grouped by outputs.
 *  For Models that predict only one output, such as regression Models that
 *  predict only one score, there is only one attibution that explains the
 *  predicted output. For Models that predict multiple outputs, such as
 *  multiclass Models that predict multiple classes, each element explains one
 *  specific item. Attribution.output_index can be used to identify which output
 *  this attribution is explaining. The baselineOutputValue, instanceOutputValue
 *  and featureAttributions fields are averaged over the test data. NOTE:
 *  Currently AutoML tabular classification Models produce only one attribution,
 *  which averages attributions over all the classes it predicts.
 *  Attribution.approximation_error is not populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Attribution *> *meanAttributions;

@end


/**
 *  Represents export format supported by the Model. All formats export to
 *  Google Cloud Storage.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelExportFormat : GTLRObject

/** Output only. The content of this Model that may be exported. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exportableContents;

/**
 *  Output only. The ID of the export format. The possible format IDs are: *
 *  `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge
 *  TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A
 *  tensorflow model in SavedModel format. * `tf-js` A
 *  [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the
 *  browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile
 *  devices. * `custom-trained` A Model that was uploaded or trained by custom
 *  code.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  Contains information about the source of the models generated from Model
 *  Garden.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelGardenSource : GTLRObject

/** Required. The model garden source model resource name. */
@property(nonatomic, copy, nullable) NSString *publicModelName;

@end


/**
 *  The alert config for model monitoring.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfig : GTLRObject

/** Email alert config. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig *emailAlertConfig;

/**
 *  Dump the anomalies to Cloud Logging. The anomalies will be put to json
 *  payload encoded from proto
 *  google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can
 *  be further sinked to Pub/Sub or any other services supported by Cloud
 *  Logging.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableLogging;

/**
 *  Resource names of the NotificationChannels to send alert. Must be of the
 *  format `projects//notificationChannels/`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notificationChannels;

@end


/**
 *  The config for email alert.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig : GTLRObject

/** The email addresses to send the alert. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *userEmails;

@end


/**
 *  The objective configuration for model monitoring, including the information
 *  needed to detect anomalies for one particular model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig : GTLRObject

/** The config for integrating with Vertex Explainable AI. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig *explanationConfig;

/** The config for drift of prediction data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig *predictionDriftDetectionConfig;

/**
 *  Training dataset for models. This field has to be set only if
 *  TrainingPredictionSkewDetectionConfig is specified.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset *trainingDataset;

/** The config for skew between training data and prediction data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig *trainingPredictionSkewDetectionConfig;

@end


/**
 *  The config for integrating with Vertex Explainable AI. Only applicable if
 *  the Model has explanation_spec populated.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig : GTLRObject

/**
 *  If want to analyze the Vertex Explainable AI feature attribute scores or
 *  not. If set to true, Vertex AI will log the feature attributions from
 *  explain response and do the skew/drift detection for them.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableFeatureAttributes;

/** Predictions generated by the BatchPredictionJob using baseline dataset. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline *explanationBaseline;

@end


/**
 *  Output from BatchPredictionJob for Model Monitoring baseline dataset, which
 *  can be used to generate baseline attribution scores.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline : GTLRObject

/** BigQuery location for BatchExplain output. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination *bigquery;

/** Cloud Storage location for BatchExplain output. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcs;

/**
 *  The storage format of the predictions generated BatchPrediction job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_Bigquery
 *        Predictions are in BigQuery. (Value: "BIGQUERY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_Jsonl
 *        Predictions are in JSONL files. (Value: "JSONL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline_PredictionFormat_PredictionFormatUnspecified
 *        Should not be set. (Value: "PREDICTION_FORMAT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *predictionFormat;

@end


/**
 *  The config for Prediction data drift detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig : GTLRObject

/**
 *  Key is the feature name and value is the threshold. The threshold here is
 *  against attribution score distance between different time windows.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_AttributionScoreDriftThresholds *attributionScoreDriftThresholds;

/**
 *  Drift anomaly detection threshold used by all features. When the per-feature
 *  thresholds are not set, this field can be used to specify a threshold for
 *  all features.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig *defaultDriftThreshold;

/**
 *  Key is the feature name and value is the threshold. If a feature needs to be
 *  monitored for drift, a value threshold must be configured for that feature.
 *  The threshold here is against feature distribution distance between
 *  different time windws.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_DriftThresholds *driftThresholds;

@end


/**
 *  Key is the feature name and value is the threshold. The threshold here is
 *  against attribution score distance between different time windows.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_AttributionScoreDriftThresholds : GTLRObject
@end


/**
 *  Key is the feature name and value is the threshold. If a feature needs to be
 *  monitored for drift, a value threshold must be configured for that feature.
 *  The threshold here is against feature distribution distance between
 *  different time windws.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig_DriftThresholds : GTLRObject
@end


/**
 *  Training Dataset information.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset : GTLRObject

/** The BigQuery table of the unmanaged Dataset used to train this Model. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQuerySource *bigquerySource;

/**
 *  Data format of the dataset, only applicable if the input is from Google
 *  Cloud Storage. The possible formats are: "tf-record" The source file is a
 *  TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file
 *  is a JSONL file.
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/** The resource name of the Dataset used to train this Model. */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  The Google Cloud Storage uri of the unmanaged Dataset used to train this
 *  Model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsSource *gcsSource;

/**
 *  Strategy to sample data from Training Dataset. If not set, we process the
 *  whole dataset.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategy *loggingSamplingStrategy;

/**
 *  The target field name the model is to predict. This field will be excluded
 *  when doing Predict and (or) Explain for the training data.
 */
@property(nonatomic, copy, nullable) NSString *targetField;

@end


/**
 *  The config for Training & Prediction data skew detection. It specifies the
 *  training dataset sources and the skew detection parameters.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig : GTLRObject

/**
 *  Key is the feature name and value is the threshold. The threshold here is
 *  against attribution score distance between the training and prediction
 *  feature.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_AttributionScoreSkewThresholds *attributionScoreSkewThresholds;

/**
 *  Skew anomaly detection threshold used by all features. When the per-feature
 *  thresholds are not set, this field can be used to specify a threshold for
 *  all features.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig *defaultSkewThreshold;

/**
 *  Key is the feature name and value is the threshold. If a feature needs to be
 *  monitored for skew, a value threshold must be configured for that feature.
 *  The threshold here is against feature distribution distance between the
 *  training and prediction feature.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_SkewThresholds *skewThresholds;

@end


/**
 *  Key is the feature name and value is the threshold. The threshold here is
 *  against attribution score distance between the training and prediction
 *  feature.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_AttributionScoreSkewThresholds : GTLRObject
@end


/**
 *  Key is the feature name and value is the threshold. If a feature needs to be
 *  monitored for skew, a value threshold must be configured for that feature.
 *  The threshold here is against feature distribution distance between the
 *  training and prediction feature.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig_SkewThresholds : GTLRObject
@end


/**
 *  Statistics and anomalies generated by Model Monitoring.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies : GTLRObject

/**
 *  Number of anomalies within all stats.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *anomalyCount;

/** Deployed Model ID. */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/** A list of historical Stats and Anomalies generated for all Features. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies *> *featureStats;

/**
 *  Model Monitoring Objective those stats and anomalies belonging to.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_FeatureAttributionDrift
 *        Feature attribution scores to detect skew between Prediction datasets
 *        collected within different time windows. (Value:
 *        "FEATURE_ATTRIBUTION_DRIFT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_FeatureAttributionSkew
 *        Feature attribution scores to detect skew between Training-Prediction
 *        datasets. (Value: "FEATURE_ATTRIBUTION_SKEW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_ModelDeploymentMonitoringObjectiveTypeUnspecified
 *        Default value, should not be set. (Value:
 *        "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_RawFeatureDrift
 *        Raw feature values' stats to detect drift between Serving-Prediction
 *        datasets. (Value: "RAW_FEATURE_DRIFT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies_Objective_RawFeatureSkew
 *        Raw feature values' stats to detect skew between Training-Prediction
 *        datasets. (Value: "RAW_FEATURE_SKEW")
 */
@property(nonatomic, copy, nullable) NSString *objective;

@end


/**
 *  Historical Stats (and Anomalies) for a specific Feature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies : GTLRObject

/** Display Name of the Feature. */
@property(nonatomic, copy, nullable) NSString *featureDisplayName;

/**
 *  A list of historical stats generated by different time window's Prediction
 *  Dataset.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FeatureStatsAnomaly *> *predictionStats;

/** Threshold for anomaly detection. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig *threshold;

/** Stats calculated for the Training Dataset. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureStatsAnomaly *trainingStats;

@end


/**
 *  Contains information about the original Model if this Model is a copy.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelOriginalModelInfo : GTLRObject

/**
 *  Output only. The resource name of the Model this Model is a copy of,
 *  including the revision. Format:
 *  `projects/{project}/locations/{location}/models/{model_id}\@{version_id}`
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Detail description of the source information of the model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo : GTLRObject

/**
 *  If this Model is copy of another Model. If true then source_type pertains to
 *  the original.
 *
 *  Remapped to 'copyProperty' to avoid NSObject's 'copy'.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *copyProperty NS_RETURNS_NOT_RETAINED;

/**
 *  Type of the model source.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Automl
 *        The Model is uploaded by automl training pipeline. (Value: "AUTOML")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Bqml
 *        The Model is registered and sync'ed from BigQuery ML. (Value: "BQML")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Custom
 *        The Model is uploaded by user or custom training pipeline. (Value:
 *        "CUSTOM")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_CustomTextEmbedding
 *        The Model is uploaded by text embedding finetuning pipeline. (Value:
 *        "CUSTOM_TEXT_EMBEDDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Genie
 *        The Model is saved or tuned from Genie. (Value: "GENIE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_Marketplace
 *        The Model is saved or tuned from Marketplace. (Value: "MARKETPLACE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_ModelGarden
 *        The Model is saved or tuned from Model Garden. (Value: "MODEL_GARDEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ModelSourceInfo_SourceType_ModelSourceTypeUnspecified
 *        Should not be used. (Value: "MODEL_SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sourceType;

@end


/**
 *  Runtime operation information for IndexEndpointService.MutateDeployedIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata : GTLRObject

/** The unique index id specified by user */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Response message for IndexEndpointService.MutateDeployedIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedIndexResponse : GTLRObject

/** The DeployedIndex that had been updated in the IndexEndpoint. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *deployedIndex;

@end


/**
 *  Runtime operation information for EndpointService.MutateDeployedModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for EndpointService.MutateDeployedModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelRequest : GTLRObject

/**
 *  Required. The DeployedModel to be mutated within the Endpoint. Only the
 *  following fields can be mutated: * `min_replica_count` in either
 *  DedicatedResources or AutomaticResources * `max_replica_count` in either
 *  DedicatedResources or AutomaticResources * autoscaling_metric_specs *
 *  `disable_container_logging` (v1 only) * `enable_container_logging` (v1beta1
 *  only)
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *deployedModel;

/**
 *  Required. The update mask applies to the resource. See
 *  google.protobuf.FieldMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Response message for EndpointService.MutateDeployedModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelResponse : GTLRObject

/** The DeployedModel that's being mutated. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *deployedModel;

@end


/**
 *  Represents a Neural Architecture Search (NAS) job.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJob : GTLRObject

/** Output only. Time when the NasJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The display name of the NasJob. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Enable a separation of Custom model training and restricted image
 *  training for tenant project.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableRestrictedImageTraining GTLR_DEPRECATED;

/**
 *  Customer-managed encryption key options for a NasJob. If this is set, then
 *  all resources created by the NasJob will be encrypted with the provided
 *  encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the NasJob entered any of the following states:
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when job's state is JOB_STATE_FAILED or
 *  JOB_STATE_CANCELLED.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  The labels with user-defined metadata to organize NasJobs. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJob_Labels *labels;

/** Output only. Resource name of the NasJob. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Output of the NasJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutput *nasJobOutput;

/** Required. The specification of a NasJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpec *nasJobSpec;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Time when the NasJob for the first time entered the
 *  `JOB_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Time when the NasJob was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize NasJobs. Label keys and
 *  values can be no longer than 64 characters (Unicode codepoints), can only
 *  contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJob_Labels : GTLRObject
@end


/**
 *  Represents a uCAIP NasJob output.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutput : GTLRObject

/**
 *  Output only. The output of this multi-trial Neural Architecture Search (NAS)
 *  job.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput *multiTrialJobOutput;

@end


/**
 *  The output of a multi-trial Neural Architecture Search (NAS) jobs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput : GTLRObject

/**
 *  Output only. List of NasTrials that were started as part of search stage.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NasTrial *> *searchTrials;

/**
 *  Output only. List of NasTrials that were started as part of train stage.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NasTrial *> *trainTrials;

@end


/**
 *  Represents the spec of a NasJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpec : GTLRObject

/** The spec of multi-trial algorithms. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec *multiTrialAlgorithmSpec;

/**
 *  The ID of the existing NasJob in the same Project and Location which will be
 *  used to resume search. search_space_spec and nas_algorithm_spec are obtained
 *  from previous NasJob hence should not provide them again for this NasJob.
 */
@property(nonatomic, copy, nullable) NSString *resumeNasJobId;

/** It defines the search space for Neural Architecture Search (NAS). */
@property(nonatomic, copy, nullable) NSString *searchSpaceSpec;

@end


/**
 *  The spec of multi-trial Neural Architecture Search (NAS).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec : GTLRObject

/**
 *  Metric specs for the NAS job. Validation for this field is done at
 *  `multi_trial_algorithm_spec` field.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec *metric;

/**
 *  The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to
 *  `REINFORCEMENT_LEARNING`.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_GridSearch
 *        The Grid Search Algorithm for Multi-trial Neural Architecture Search
 *        (NAS). (Value: "GRID_SEARCH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_MultiTrialAlgorithmUnspecified
 *        Defaults to `REINFORCEMENT_LEARNING`. (Value:
 *        "MULTI_TRIAL_ALGORITHM_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec_MultiTrialAlgorithm_ReinforcementLearning
 *        The Reinforcement Learning Algorithm for Multi-trial Neural
 *        Architecture Search (NAS). (Value: "REINFORCEMENT_LEARNING")
 */
@property(nonatomic, copy, nullable) NSString *multiTrialAlgorithm;

/** Required. Spec for search trials. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec *searchTrialSpec;

/**
 *  Spec for train trials. Top N [TrainTrialSpec.max_parallel_trial_count]
 *  search trials will be trained for every M [TrainTrialSpec.frequency] trials
 *  searched.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec *trainTrialSpec;

@end


/**
 *  Represents a metric to optimize.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec : GTLRObject

/**
 *  Required. The optimization goal of the metric.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_GoalTypeUnspecified
 *        Goal Type will default to maximize. (Value: "GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_Maximize
 *        Maximize the goal metric. (Value: "MAXIMIZE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec_Goal_Minimize
 *        Minimize the goal metric. (Value: "MINIMIZE")
 */
@property(nonatomic, copy, nullable) NSString *goal;

/** Required. The ID of the metric. Must not contain whitespaces. */
@property(nonatomic, copy, nullable) NSString *metricId;

@end


/**
 *  Represent spec for search trials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec : GTLRObject

/**
 *  The number of failed trials that need to be seen before failing the NasJob.
 *  If set to 0, Vertex AI decides how many trials must fail before the whole
 *  job fails.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxFailedTrialCount;

/**
 *  Required. The maximum number of trials to run in parallel.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxParallelTrialCount;

/**
 *  Required. The maximum number of Neural Architecture Search (NAS) trials to
 *  run.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTrialCount;

/**
 *  Required. The spec of a search trial job. The same spec applies to all
 *  search trials.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *searchTrialJobSpec;

@end


/**
 *  Represent spec for train trials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec : GTLRObject

/**
 *  Required. Frequency of search trials to start train stage. Top N
 *  [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for
 *  every M [TrainTrialSpec.frequency] trials searched.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *frequency;

/**
 *  Required. The maximum number of trials to run in parallel.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxParallelTrialCount;

/**
 *  Required. The spec of a train trial job. The same spec applies to all train
 *  trials.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *trainTrialJobSpec;

@end


/**
 *  Represents a uCAIP NasJob trial.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasTrial : GTLRObject

/**
 *  Output only. Time when the NasTrial's status changed to `SUCCEEDED` or
 *  `INFEASIBLE`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. The final measurement containing the objective value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Measurement *finalMeasurement;

/**
 *  Output only. The identifier of the NasTrial assigned by the service.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Output only. Time when the NasTrial was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the NasTrial.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Active
 *        Indicates that the NasTrial has been suggested. (Value: "ACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Infeasible
 *        Indicates that the NasTrial should not be attempted again. The service
 *        will set a NasTrial to INFEASIBLE when it's done but missing the
 *        final_measurement. (Value: "INFEASIBLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Requested
 *        Indicates that a specific NasTrial has been requested, but it has not
 *        yet been suggested by the service. (Value: "REQUESTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_StateUnspecified
 *        The NasTrial state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Stopping
 *        Indicates that the NasTrial should stop according to the service.
 *        (Value: "STOPPING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NasTrial_State_Succeeded
 *        Indicates that the NasTrial is completed successfully. (Value:
 *        "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a NasTrial details along with its parameters. If there is a
 *  corresponding train NasTrial, the train NasTrial is also returned.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NasTrialDetail : GTLRObject

/** Output only. Resource name of the NasTrialDetail. */
@property(nonatomic, copy, nullable) NSString *name;

/** The parameters for the NasJob NasTrial. */
@property(nonatomic, copy, nullable) NSString *parameters;

/** The requested search NasTrial. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasTrial *searchTrial;

/**
 *  The train NasTrial corresponding to search_trial. Only populated if
 *  search_trial is used for training.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NasTrial *trainTrial;

@end


/**
 *  A query to find a number of similar entities.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQuery : GTLRObject

/** Optional. The embedding vector that be used for similar search. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryEmbedding *embedding;

/**
 *  Optional. The entity id whose similar entities should be searched for. If
 *  embedding is set, search will use embedding instead of entity_id.
 */
@property(nonatomic, copy, nullable) NSString *entityId;

/**
 *  Optional. The number of similar entities to be retrieved from feature view
 *  for each query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *neighborCount;

/** Optional. The list of numeric filters. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter *> *numericFilters;

/** Optional. Parameters that can be set to tune query on the fly. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryParameters *parameters;

/**
 *  Optional. Crowding is a constraint on a neighbor list produced by nearest
 *  neighbor search requiring that no more than
 *  sper_crowding_attribute_neighbor_count of the k neighbors returned have the
 *  same value of crowding_attribute. It's used for improving result diversity.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *perCrowdingAttributeNeighborCount;

/** Optional. The list of string filters. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryStringFilter *> *stringFilters;

@end


/**
 *  The embedding vector.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryEmbedding : GTLRObject

/**
 *  Optional. Individual value in the embedding.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *value;

@end


/**
 *  Numeric filter is used to search a subset of the entities by using boolean
 *  rules on numeric columns. For example: Database Point 0: {name: "a"
 *  value_int: 42} {name: "b" value_float: 1.0} Database Point 1: {name: "a"
 *  value_int: 10} {name: "b" value_float: 2.0} Database Point 2: {name: "a"
 *  value_int: -1} {name: "b" value_float: 3.0} Query: {name: "a" value_int: 12
 *  operator: LESS} // Matches Point 1, 2 {name: "b" value_float: 2.0 operator:
 *  EQUAL} // Matches Point 1
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter : GTLRObject

/** Required. Column name in BigQuery that used as filters. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. This MUST be specified for queries and must NOT be specified for
 *  database points.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Equal
 *        Entities are eligible if their value is == the query's. (Value:
 *        "EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Greater
 *        Entities are eligible if their value is > the query's. (Value:
 *        "GREATER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_GreaterEqual
 *        Entities are eligible if their value is >= the query's. (Value:
 *        "GREATER_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_Less
 *        Entities are eligible if their value is < the query's. (Value: "LESS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_LessEqual
 *        Entities are eligible if their value is <= the query's. (Value:
 *        "LESS_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_NotEqual
 *        Entities are eligible if their value is != the query's. (Value:
 *        "NOT_EQUAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter_Op_OperatorUnspecified
 *        Unspecified operator. (Value: "OPERATOR_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *op;

/**
 *  double value type.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueDouble;

/**
 *  float value type.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueFloat;

/**
 *  int value type.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *valueInt;

@end


/**
 *  Parameters that can be overrided in each query to tune query latency and
 *  recall.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryParameters : GTLRObject

/**
 *  Optional. The number of neighbors to find via approximate search before
 *  exact reordering is performed; if set, this value must be > neighbor_count.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *approximateNeighborCandidates;

/**
 *  Optional. The fraction of the number of leaves to search, set at query time
 *  allows user to tune search performance. This value increase result in both
 *  search accuracy and latency increase. The value should be between 0.0 and
 *  1.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *leafNodesSearchFraction;

@end


/**
 *  String filter is used to search a subset of the entities by using boolean
 *  rules on string columns. For example: if a query specifies string filter
 *  with 'name = color, allow_tokens = {red, blue}, deny_tokens = {purple}','
 *  then that query will match entities that are red or blue, but if those
 *  points are also purple, then they will be excluded even if they are
 *  red/blue. Only string filter is supported for now, numeric filter will be
 *  supported in the near future.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQueryStringFilter : GTLRObject

/** Optional. The allowed tokens. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowTokens;

/** Optional. The denied tokens. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *denyTokens;

/** Required. Column names in BigQuery that used as filters. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Nearest neighbors for one query.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighbors : GTLRObject

/** All its neighbors. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborsNeighbor *> *neighbors;

@end


/**
 *  Runtime operation metadata with regard to Matching Engine Index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata : GTLRObject

/**
 *  The validation stats of the content (per file) to be inserted or updated on
 *  the Matching Engine Index resource. Populated if contentsDeltaUri is
 *  provided as part of Index.metadata. Please note that, currently for those
 *  files that are broken or has unsupported file format, we will not have the
 *  stats for those files.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats *> *contentValidationStats;

/**
 *  The ingested data size in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataBytesCount;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats : GTLRObject

/**
 *  Number of records in this file we skipped due to validate errors.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidRecordCount;

/**
 *  Number of sparse records in this file we skipped due to validate errors.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidSparseRecordCount;

/**
 *  The detail information of the partial failures encountered for those invalid
 *  records that couldn't be parsed. Up to 50 partial errors will be reported.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError *> *partialErrors;

/** Cloud Storage URI pointing to the original file in user's bucket. */
@property(nonatomic, copy, nullable) NSString *sourceGcsUri;

/**
 *  Number of records in this file that were successfully processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validRecordCount;

/**
 *  Number of sparse records in this file that were successfully processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validSparseRecordCount;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError : GTLRObject

/** Empty if the embedding id is failed to parse. */
@property(nonatomic, copy, nullable) NSString *embeddingId;

/**
 *  A human-readable message that is shown to the user to help them fix the
 *  error. Note that this message may change from time to time, your code should
 *  check against error_type as the source of truth.
 */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  The error type of this record.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_DuplicateNamespace
 *        There are multiple restricts with the same `namespace` value. (Value:
 *        "DUPLICATE_NAMESPACE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_EmbeddingSizeMismatch
 *        The size of the dense embedding vectors does not match with the
 *        specified dimension. (Value: "EMBEDDING_SIZE_MISMATCH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_EmptyLine
 *        The record is empty. (Value: "EMPTY_LINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_ErrorTypeUnspecified
 *        Default, shall not be used. (Value: "ERROR_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidAvroSyntax
 *        Invalid avro format. (Value: "INVALID_AVRO_SYNTAX")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidCsvSyntax
 *        Invalid csv format. (Value: "INVALID_CSV_SYNTAX")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEmbedding
 *        Invalid dense embedding. (Value: "INVALID_EMBEDDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEmbeddingId
 *        The embedding id is not valid. (Value: "INVALID_EMBEDDING_ID")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidEncoding
 *        File is not in UTF_8 format. (Value: "INVALID_ENCODING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidJsonSyntax
 *        Invalid json format. (Value: "INVALID_JSON_SYNTAX")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidNumericValue
 *        Numeric restrict has invalid numeric value specified. (Value:
 *        "INVALID_NUMERIC_VALUE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidSparseDimensions
 *        Error parsing sparse dimensions field. (Value:
 *        "INVALID_SPARSE_DIMENSIONS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidSparseEmbedding
 *        Invalid sparse embedding. (Value: "INVALID_SPARSE_EMBEDDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_InvalidTokenValue
 *        Token restrict value is invalid. (Value: "INVALID_TOKEN_VALUE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_MultipleValues
 *        Numeric restrict has multiple values specified. (Value:
 *        "MULTIPLE_VALUES")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_NamespaceMissing
 *        The `namespace` field is missing. (Value: "NAMESPACE_MISSING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_OpInDatapoint
 *        Numeric restrict has operator specified in datapoint. (Value:
 *        "OP_IN_DATAPOINT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError_ErrorType_ParsingError
 *        Generic catch-all error. Only used for validation failure where the
 *        root cause cannot be easily retrieved programmatically. (Value:
 *        "PARSING_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *errorType;

/** The original content of this record. */
@property(nonatomic, copy, nullable) NSString *rawRecord;

/** Cloud Storage URI pointing to the original file in user's bucket. */
@property(nonatomic, copy, nullable) NSString *sourceGcsUri;

@end


/**
 *  A neighbor of the query vector.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborsNeighbor : GTLRObject

/**
 *  The distance between the neighbor and the query vector.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *distance;

/** The id of the similar entity. */
@property(nonatomic, copy, nullable) NSString *entityId;

/**
 *  The attributes of the neighbor, e.g. filters, crowding and metadata Note
 *  that full entities are returned only when "return_full_entity" is set to
 *  true. Otherwise, only the "entity_id" and "distance" fields are populated.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse *entityKeyValues;

@end


/**
 *  Neighbors for example-based explanations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Neighbor : GTLRObject

/**
 *  Output only. The neighbor distance.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *neighborDistance;

/** Output only. The neighbor id. */
@property(nonatomic, copy, nullable) NSString *neighborId;

@end


/**
 *  Network spec.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NetworkSpec : GTLRObject

/**
 *  Whether to enable public internet access. Default false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableInternetAccess;

/**
 *  The full name of the Google Compute Engine
 *  [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  The name of the subnet that this instance is in. Format:
 *  `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

@end


/**
 *  Represents a mount configuration for Network File System (NFS) to mount.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NfsMount : GTLRObject

/**
 *  Required. Destination mount path. The NFS will be mounted for the user under
 *  /mnt/nfs/
 */
@property(nonatomic, copy, nullable) NSString *mountPoint;

/**
 *  Required. Source path exported from NFS server. Has to start with '/', and
 *  combined with the ip address, it indicates the source mount path in the form
 *  of `server:path`
 */
@property(nonatomic, copy, nullable) NSString *path;

/** Required. IP address of the NFS server. */
@property(nonatomic, copy, nullable) NSString *server;

@end


/**
 *  The euc configuration of NotebookRuntimeTemplate.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookEucConfig : GTLRObject

/**
 *  Output only. Whether ActAs check is bypassed for service account attached to
 *  the VM. If false, we need ActAs check for the default Compute Engine Service
 *  account. When a Runtime is created, a VM is allocated using Default Compute
 *  Engine Service Account. Any user requesting to use this Runtime requires
 *  Service Account User (ActAs) permission over this SA. If true, Runtime owner
 *  is using EUC and does not require the above permission as VM no longer use
 *  default Compute Engine SA, but a P4SA.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bypassActasCheck;

/**
 *  Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In
 *  proto3, the default value of a boolean is false. In this way, by default EUC
 *  will be enabled for NotebookRuntimeTemplate.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *eucDisabled;

@end


/**
 *  NotebookExecutionJob represents an instance of a notebook execution.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob : GTLRObject

/** Output only. Timestamp when this NotebookExecutionJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The Dataform Repository pointing to a single file notebook repository. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource *dataformRepositorySource;

/** The contents of an input notebook file. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource *directNotebookSource;

/**
 *  The display name of the NotebookExecutionJob. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for the notebook execution job. This
 *  field is auto-populated if the NotebookService.NotebookRuntimeTemplate has
 *  an encryption spec.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Max running time of the execution job in seconds (default 86400s / 24 hrs).
 */
@property(nonatomic, strong, nullable) GTLRDuration *executionTimeout;

/**
 *  The user email to run the execution as. Only supported by Colab runtimes.
 */
@property(nonatomic, copy, nullable) NSString *executionUser;

/**
 *  The Cloud Storage url pointing to the ipynb file. Format:
 *  `gs://bucket/notebook_file.ipynb`
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource *gcsNotebookSource;

/**
 *  The Cloud Storage location to upload the result to. Format:
 *  `gs://bucket-name`
 */
@property(nonatomic, copy, nullable) NSString *gcsOutputUri;

/**
 *  Output only. The state of the NotebookExecutionJob.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_JobState_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *jobState;

/**
 *  The labels with user-defined metadata to organize NotebookExecutionJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_Labels *labels;

/**
 *  Output only. The resource name of this NotebookExecutionJob. Format:
 *  `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The NotebookRuntimeTemplate to source compute configuration from. */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeTemplateResourceName;

/**
 *  Output only. The Schedule resource name if this job is triggered by one.
 *  Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
 */
@property(nonatomic, copy, nullable) NSString *scheduleResourceName;

/** The service account to run the execution as. */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only. Populated when the NotebookExecutionJob is completed. When
 *  there is an error during notebook execution, the error details are
 *  populated.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *status;

/**
 *  Output only. Timestamp when this NotebookExecutionJob was most recently
 *  updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize NotebookExecutionJobs.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob_Labels : GTLRObject
@end


/**
 *  The Dataform Repository containing the input notebook.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource : GTLRObject

/**
 *  The commit SHA to read repository with. If unset, the file will be read at
 *  HEAD.
 */
@property(nonatomic, copy, nullable) NSString *commitSha;

/**
 *  The resource name of the Dataform Repository. Format:
 *  `projects/{project_id}/locations/{location}/repositories/{repository_id}`
 */
@property(nonatomic, copy, nullable) NSString *dataformRepositoryResourceName;

@end


/**
 *  The content of the input notebook in ipynb format.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource : GTLRObject

/**
 *  The base64-encoded contents of the input notebook file.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

@end


/**
 *  The Cloud Storage uri for the input notebook.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource : GTLRObject

/**
 *  The version of the Cloud Storage object to read. If unset, the current
 *  version of the object is read. See
 *  https://cloud.google.com/storage/docs/metadata#generation-number.
 */
@property(nonatomic, copy, nullable) NSString *generation;

/**
 *  The Cloud Storage uri pointing to the ipynb file. Format:
 *  `gs://bucket/notebook_file.ipynb`
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The idle shutdown configuration of NotebookRuntimeTemplate, which contains
 *  the idle_timeout as required field.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookIdleShutdownConfig : GTLRObject

/**
 *  Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *idleShutdownDisabled;

/**
 *  Required. Duration is accurate to the second. In Notebook, Idle Timeout is
 *  accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440
 *  * 60.
 */
@property(nonatomic, strong, nullable) GTLRDuration *idleTimeout;

@end


/**
 *  A runtime is a virtual machine allocated to a particular user for a
 *  particular Notebook file on temporary basis with lifetime limited to 24
 *  hours.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime : GTLRObject

/** Output only. Timestamp when this NotebookRuntime was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The description of the NotebookRuntime.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the NotebookRuntime. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Customer-managed encryption key spec for the notebook runtime.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Timestamp when this NotebookRuntime will be expired: 1. System
 *  Predefined NotebookRuntime: 24 hours after creation. After expiration,
 *  system predifined runtime will be deleted. 2. User created NotebookRuntime:
 *  6 months after last upgrade. After expiration, user created runtime will be
 *  stopped and allowed for upgrade.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expirationTime;

/**
 *  Output only. The health state of the NotebookRuntime.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_HealthStateUnspecified
 *        Unspecified health state. (Value: "HEALTH_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_Healthy
 *        NotebookRuntime is in healthy state. Applies to ACTIVE state. (Value:
 *        "HEALTHY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_HealthState_Unhealthy
 *        NotebookRuntime is in unhealthy state. Applies to ACTIVE state.
 *        (Value: "UNHEALTHY")
 */
@property(nonatomic, copy, nullable) NSString *healthState;

/** Output only. The idle shutdown configuration of the notebook runtime. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookIdleShutdownConfig *idleShutdownConfig;

/**
 *  Output only. Whether NotebookRuntime is upgradable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isUpgradable;

/**
 *  The labels with user-defined metadata to organize your NotebookRuntime.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. No more than
 *  64 user labels can be associated with one NotebookRuntime (System labels are
 *  excluded). See https://goo.gl/xmQnxf for more information and examples of
 *  labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable. Following system labels
 *  exist for NotebookRuntime: *
 *  "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only,
 *  its value is the Compute Engine instance id. *
 *  "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is
 *  either "bigquery" or "vertex"; if absent, it should be "vertex". This is to
 *  describe the entry service, either BigQuery or Vertex.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_Labels *labels;

/** Output only. The resource name of the NotebookRuntime. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The Compute Engine tags to add to runtime (see [Tagging
 *  instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *networkTags;

/**
 *  Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is
 *  created from.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplateRef *notebookRuntimeTemplateRef;

/**
 *  Output only. The type of the notebook runtime.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_NotebookRuntimeTypeUnspecified
 *        Unspecified notebook runtime type, NotebookRuntimeType will default to
 *        USER_DEFINED. (Value: "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_OneClick
 *        runtime or template with system defined configurations. (Value:
 *        "ONE_CLICK")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_NotebookRuntimeType_UserDefined
 *        runtime or template with coustomized configurations from user. (Value:
 *        "USER_DEFINED")
 */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeType;

/** Output only. The proxy endpoint used to access the NotebookRuntime. */
@property(nonatomic, copy, nullable) NSString *proxyUri;

/**
 *  Output only. The runtime (instance) state of the NotebookRuntime.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingStarted
 *        NotebookRuntime is in starting state. (Value: "BEING_STARTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingStopped
 *        NotebookRuntime is in stopping state. (Value: "BEING_STOPPED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_BeingUpgraded
 *        NotebookRuntime is in upgrading state. It is in the middle of
 *        upgrading process. (Value: "BEING_UPGRADED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Error
 *        NotebookRuntime was unable to start/stop properly. (Value: "ERROR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Invalid
 *        NotebookRuntime is in invalid state. Cannot be recovered. (Value:
 *        "INVALID")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Running
 *        NotebookRuntime is in running state. (Value: "RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_RuntimeStateUnspecified
 *        Unspecified runtime state. (Value: "RUNTIME_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_RuntimeState_Stopped
 *        NotebookRuntime is in stopped state. (Value: "STOPPED")
 */
@property(nonatomic, copy, nullable) NSString *runtimeState;

/** Required. The user email of the NotebookRuntime. */
@property(nonatomic, copy, nullable) NSString *runtimeUser;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. The service account that the NotebookRuntime workload runs as.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Output only. Timestamp when this NotebookRuntime was most recently updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Output only. The VM os image version of NotebookRuntime. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  The labels with user-defined metadata to organize your NotebookRuntime.
 *  Label keys and values can be no longer than 64 characters (Unicode
 *  codepoints), can only contain lowercase letters, numeric characters,
 *  underscores and dashes. International characters are allowed. No more than
 *  64 user labels can be associated with one NotebookRuntime (System labels are
 *  excluded). See https://goo.gl/xmQnxf for more information and examples of
 *  labels. System reserved label keys are prefixed with
 *  "aiplatform.googleapis.com/" and are immutable. Following system labels
 *  exist for NotebookRuntime: *
 *  "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only,
 *  its value is the Compute Engine instance id. *
 *  "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is
 *  either "bigquery" or "vertex"; if absent, it should be "vertex". This is to
 *  describe the entry service, either BigQuery or Vertex.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime_Labels : GTLRObject
@end


/**
 *  A template that specifies runtime configurations such as machine type,
 *  runtime version, network configurations, etc. Multiple runtimes can be
 *  created from a runtime template.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate : GTLRObject

/** Output only. Timestamp when this NotebookRuntimeTemplate was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The specification of persistent disk attached to the runtime as
 *  data disk storage.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PersistentDiskSpec *dataPersistentDiskSpec;

/**
 *  The description of the NotebookRuntimeTemplate.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The display name of the NotebookRuntimeTemplate. The name can be
 *  up to 128 characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Customer-managed encryption key spec for the notebook runtime. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** EUC configuration of the NotebookRuntimeTemplate. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookEucConfig *eucConfig;

/**
 *  The idle shutdown configuration of NotebookRuntimeTemplate. This config will
 *  only be set when idle shutdown is enabled.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookIdleShutdownConfig *idleShutdownConfig;

/**
 *  Output only. The default template to use if not specified.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  The labels with user-defined metadata to organize the
 *  NotebookRuntimeTemplates. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_Labels *labels;

/**
 *  Optional. Immutable. The specification of a single machine for the template.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec *machineSpec;

/** The resource name of the NotebookRuntimeTemplate. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Network spec. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NetworkSpec *networkSpec;

/**
 *  Optional. The Compute Engine tags to add to runtime (see [Tagging
 *  instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *networkTags;

/**
 *  Optional. Immutable. The type of the notebook runtime template.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_NotebookRuntimeTypeUnspecified
 *        Unspecified notebook runtime type, NotebookRuntimeType will default to
 *        USER_DEFINED. (Value: "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_OneClick
 *        runtime or template with system defined configurations. (Value:
 *        "ONE_CLICK")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_NotebookRuntimeType_UserDefined
 *        runtime or template with coustomized configurations from user. (Value:
 *        "USER_DEFINED")
 */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeType;

/**
 *  The service account that the runtime workload runs as. You can use any
 *  service account within the same project, but you must have the service
 *  account user permission to use the instance. If not specified, the [Compute
 *  Engine default service
 *  account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
 *  is used.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** Optional. Immutable. Runtime Shielded VM spec. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ShieldedVmConfig *shieldedVmConfig;

/**
 *  Output only. Timestamp when this NotebookRuntimeTemplate was most recently
 *  updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize the
 *  NotebookRuntimeTemplates. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate_Labels : GTLRObject
@end


/**
 *  Points to a NotebookRuntimeTemplateRef.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplateRef : GTLRObject

/** Immutable. A resource name of the NotebookRuntimeTemplate. */
@property(nonatomic, copy, nullable) NSString *notebookRuntimeTemplate;

@end


/**
 *  Input for pairwise metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInput : GTLRObject

/** Required. Pairwise metric instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInstance *instance;

/** Required. Spec for pairwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricSpec *metricSpec;

@end


/**
 *  Pairwise metric instance. Usually one instance corresponds to one row in an
 *  evaluation dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricInstance : GTLRObject

/**
 *  Instance specified as a json string. String key-value pairs are expected in
 *  the json_instance to render PairwiseMetricSpec.instance_prompt_template.
 */
@property(nonatomic, copy, nullable) NSString *jsonInstance;

@end


/**
 *  Spec for pairwise metric result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult : GTLRObject

/** Output only. Explanation for pairwise metric score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Pairwise metric choice.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Baseline
 *        Baseline prediction wins (Value: "BASELINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Candidate
 *        Candidate prediction wins (Value: "CANDIDATE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_PairwiseChoiceUnspecified
 *        Unspecified prediction choice. (Value: "PAIRWISE_CHOICE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricResult_PairwiseChoice_Tie
 *        Winner cannot be determined (Value: "TIE")
 */
@property(nonatomic, copy, nullable) NSString *pairwiseChoice;

@end


/**
 *  Spec for pairwise metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseMetricSpec : GTLRObject

/** Required. Metric prompt template for pairwise metric. */
@property(nonatomic, copy, nullable) NSString *metricPromptTemplate;

@end


/**
 *  Input for pairwise question answering quality metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput : GTLRObject

/** Required. Pairwise question answering quality instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance *instance;

/** Required. Spec for pairwise question answering quality score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec *metricSpec;

@end


/**
 *  Spec for pairwise question answering quality instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance : GTLRObject

/** Required. Output of the baseline model. */
@property(nonatomic, copy, nullable) NSString *baselinePrediction;

/** Required. Text to answer the question. */
@property(nonatomic, copy, nullable) NSString *context;

/** Required. Question Answering prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the candidate model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for pairwise question answering quality result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult : GTLRObject

/**
 *  Output only. Confidence for question answering quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for question answering quality score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Pairwise question answering prediction choice.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Baseline
 *        Baseline prediction wins (Value: "BASELINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Candidate
 *        Candidate prediction wins (Value: "CANDIDATE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_PairwiseChoiceUnspecified
 *        Unspecified prediction choice. (Value: "PAIRWISE_CHOICE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult_PairwiseChoice_Tie
 *        Winner cannot be determined (Value: "TIE")
 */
@property(nonatomic, copy, nullable) NSString *pairwiseChoice;

@end


/**
 *  Spec for pairwise question answering quality score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute question answering
 *  quality.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for pairwise summarization quality metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInput : GTLRObject

/** Required. Pairwise summarization quality instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance *instance;

/** Required. Spec for pairwise summarization quality score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec *metricSpec;

@end


/**
 *  Spec for pairwise summarization quality instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance : GTLRObject

/** Required. Output of the baseline model. */
@property(nonatomic, copy, nullable) NSString *baselinePrediction;

/** Required. Text to be summarized. */
@property(nonatomic, copy, nullable) NSString *context;

/** Required. Summarization prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the candidate model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for pairwise summarization quality result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult : GTLRObject

/**
 *  Output only. Confidence for summarization quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for summarization quality score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Pairwise summarization prediction choice.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Baseline
 *        Baseline prediction wins (Value: "BASELINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Candidate
 *        Candidate prediction wins (Value: "CANDIDATE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_PairwiseChoiceUnspecified
 *        Unspecified prediction choice. (Value: "PAIRWISE_CHOICE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualityResult_PairwiseChoice_Tie
 *        Winner cannot be determined (Value: "TIE")
 */
@property(nonatomic, copy, nullable) NSString *pairwiseChoice;

@end


/**
 *  Spec for pairwise summarization quality score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute pairwise
 *  summarization quality.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  A datatype containing media that is part of a multi-part `Content` message.
 *  A `Part` consists of data which has an associated datatype. A `Part` can
 *  only contain one of the accepted types in `Part.data`. A `Part` must have a
 *  fixed IANA MIME type identifying the type and subtype of the media if
 *  `inline_data` or `file_data` field is filled with raw bytes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Part : GTLRObject

/** Optional. URI based data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FileData *fileData;

/**
 *  Optional. A predicted [FunctionCall] returned from the model that contains a
 *  string representing the [FunctionDeclaration.name] with the parameters and
 *  their values.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FunctionCall *functionCall;

/**
 *  Optional. The result output of a [FunctionCall] that contains a string
 *  representing the [FunctionDeclaration.name] and a structured JSON object
 *  containing any output from the function call. It is used as context to the
 *  model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FunctionResponse *functionResponse;

/** Optional. Inlined bytes data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Blob *inlineData;

/** Optional. Text part (can be code). */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  Optional. Video metadata. The metadata should only be specified while the
 *  video data is presented in inline_data or file_data.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1VideoMetadata *videoMetadata;

@end


/**
 *  Request message for JobService.PauseModelDeploymentMonitoringJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest : GTLRObject
@end


/**
 *  Request message for ScheduleService.PauseSchedule.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PauseScheduleRequest : GTLRObject
@end


/**
 *  Represents the spec of persistent disk options.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PersistentDiskSpec : GTLRObject

/**
 *  Size in GB of the disk (default is 100GB).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  Type of the disk (default is "pd-standard"). Valid values: "pd-ssd"
 *  (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk
 *  Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme
 *  Persistent Disk)
 */
@property(nonatomic, copy, nullable) NSString *diskType;

@end


/**
 *  Represents long-lasting resources that are dedicated to users to runs custom
 *  workloads. A PersistentResource can have multiple node pools and each node
 *  pool can have its own machine spec.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource : GTLRObject

/** Output only. Time when the PersistentResource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The display name of the PersistentResource. The name can be up to
 *  128 characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Customer-managed encryption key spec for a PersistentResource. If
 *  set, this PersistentResource and all sub-resources of this
 *  PersistentResource will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Only populated when persistent resource's state is `STOPPING`
 *  or `ERROR`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Optional. The labels with user-defined metadata to organize
 *  PersistentResource. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_Labels *labels;

/** Immutable. Resource name of a PersistentResource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The full name of the Compute Engine
 *  [network](/compute/docs/networks-and-firewalls#networks) to peered with
 *  Vertex AI to host the persistent resources. For example,
 *  `projects/12345/global/networks/myVPC`.
 *  [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form
 *  `projects/{project}/global/networks/{network}`. Where {project} is a project
 *  number, as in `12345`, and {network} is a network name. To specify this
 *  field, you must have already [configured VPC Network Peering for Vertex
 *  AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this
 *  field is left unspecified, the resources aren't peered with any network.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Optional. A list of names for the reserved IP ranges under the VPC network
 *  that can be used for this persistent resource. If set, we will deploy the
 *  persistent resource within the provided IP ranges. Otherwise, the persistent
 *  resource is deployed to any IP ranges under the provided VPC network.
 *  Example: ['vertex-ai-ip-range'].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reservedIpRanges;

/** Required. The spec of the pools of different resources. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ResourcePool *> *resourcePools;

/** Output only. Runtime information of the Persistent Resource. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime *resourceRuntime;

/**
 *  Optional. Persistent Resource runtime spec. For example, used for Ray
 *  cluster configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntimeSpec *resourceRuntimeSpec;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Time when the PersistentResource for the first time entered the
 *  `RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of a Study.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Error
 *        The ERROR state indicates the persistent resource may be unusable.
 *        Details can be found in the `error` field. (Value: "ERROR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Provisioning
 *        The PROVISIONING state indicates the persistent resources is being
 *        created. (Value: "PROVISIONING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Rebooting
 *        The REBOOTING state indicates the persistent resource is being
 *        rebooted (PR is not available right now but is expected to be ready
 *        again later). (Value: "REBOOTING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Running
 *        The RUNNING state indicates the persistent resource is healthy and
 *        fully usable. (Value: "RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_StateUnspecified
 *        Not set. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Stopping
 *        The STOPPING state indicates the persistent resource is being deleted.
 *        (Value: "STOPPING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_State_Updating
 *        The UPDATING state indicates the persistent resource is being updated.
 *        (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Time when the PersistentResource was most recently updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize
 *  PersistentResource. Label keys and values can be no longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed.
 *  See https://goo.gl/xmQnxf for more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource_Labels : GTLRObject
@end


/**
 *  An instance of a machine learning PipelineJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob : GTLRObject

/** Output only. Pipeline creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The display name of the Pipeline. The name can be up to 128 characters long
 *  and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a pipelineJob. If set, this
 *  PipelineJob and all of its sub-resources will be secured by this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/** Output only. Pipeline end time. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. The error that occurred during pipeline execution. Only
 *  populated when the pipeline's state is FAILED or CANCELLED.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Output only. The details of pipeline run. Not available in the list view.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobDetail *jobDetail;

/**
 *  The labels with user-defined metadata to organize PipelineJob. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels. Note there is some reserved label key
 *  for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set
 *  value will get overrided.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_Labels *labels;

/** Output only. The resource name of the PipelineJob. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The full name of the Compute Engine
 *  [network](/compute/docs/networks-and-firewalls#networks) to which the
 *  Pipeline Job's workload should be peered. For example,
 *  `projects/12345/global/networks/myVPC`.
 *  [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form
 *  `projects/{project}/global/networks/{network}`. Where {project} is a project
 *  number, as in `12345`, and {network} is a network name. Private services
 *  access must already be configured for the network. Pipeline job will apply
 *  the network configuration to the Google Cloud resources being launched, if
 *  applied, such as Vertex AI Training or Dataflow job. If left unspecified,
 *  the workload is not peered with any network.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** The spec of the pipeline. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_PipelineSpec *pipelineSpec;

/**
 *  Optional. Whether to do component level validations before job creation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *preflightValidations;

/**
 *  A list of names for the reserved ip ranges under the VPC network that can be
 *  used for this Pipeline Job's workload. If set, we will deploy the Pipeline
 *  Job's workload within the provided ip ranges. Otherwise, the job will be
 *  deployed to any ip ranges under the provided VPC network. Example:
 *  ['vertex-ai-ip-range'].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reservedIpRanges;

/** Runtime config of the pipeline. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig *runtimeConfig;

/**
 *  Output only. The schedule resource name. Only returned if the Pipeline is
 *  created by Schedule API.
 */
@property(nonatomic, copy, nullable) NSString *scheduleName;

/**
 *  The service account that the pipeline workload runs as. If not specified,
 *  the Compute Engine default service account in the project will be used. See
 *  https://cloud.google.com/compute/docs/access/service-accounts#default_service_account
 *  Users starting the pipeline must have the `iam.serviceAccounts.actAs`
 *  permission on this service account.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** Output only. Pipeline start time. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateCancelled
 *        The pipeline has been cancelled. (Value: "PIPELINE_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateCancelling
 *        The pipeline is being cancelled. From this state, the pipeline may
 *        only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or
 *        PIPELINE_STATE_CANCELLED. (Value: "PIPELINE_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateFailed
 *        The pipeline failed. (Value: "PIPELINE_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStatePaused
 *        The pipeline has been stopped, and can be resumed. (Value:
 *        "PIPELINE_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStatePending
 *        The service is preparing to run the pipeline. (Value:
 *        "PIPELINE_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateQueued
 *        The pipeline has been created or resumed, and processing has not yet
 *        begun. (Value: "PIPELINE_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateRunning
 *        The pipeline is in progress. (Value: "PIPELINE_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateSucceeded
 *        The pipeline completed successfully. (Value:
 *        "PIPELINE_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_State_PipelineStateUnspecified
 *        The pipeline state is unspecified. (Value:
 *        "PIPELINE_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Pipeline template metadata. Will fill up fields if
 *  PipelineJob.template_uri is from supported template registry.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTemplateMetadata *templateMetadata;

/**
 *  A template uri from where the PipelineJob.pipeline_spec, if empty, will be
 *  downloaded. Currently, only uri from Vertex Template Registry & Gallery is
 *  supported. Reference to
 *  https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.
 */
@property(nonatomic, copy, nullable) NSString *templateUri;

/** Output only. Timestamp when this PipelineJob was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize PipelineJob. Label keys
 *  and values can be no longer than 64 characters (Unicode codepoints), can
 *  only contain lowercase letters, numeric characters, underscores and dashes.
 *  International characters are allowed. See https://goo.gl/xmQnxf for more
 *  information and examples of labels. Note there is some reserved label key
 *  for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set
 *  value will get overrided.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_Labels : GTLRObject
@end


/**
 *  The spec of the pipeline.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob_PipelineSpec : GTLRObject
@end


/**
 *  The runtime detail of PipelineJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobDetail : GTLRObject

/** Output only. The context of the pipeline. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Context *pipelineContext;

/** Output only. The context of the current pipeline run. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Context *pipelineRunContext;

/** Output only. The runtime details of the tasks under the pipeline. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail *> *taskDetails;

@end


/**
 *  The runtime config of a PipelineJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig : GTLRObject

/**
 *  Represents the failure policy of a pipeline. Currently, the default of a
 *  pipeline is that the pipeline will continue to run until no more tasks can
 *  be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a
 *  pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop
 *  scheduling any new tasks when a task has failed. Any scheduled tasks will
 *  continue to completion.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyFailFast
 *        Indicates that the pipeline should stop scheduling new tasks after a
 *        task has failed. (Value: "PIPELINE_FAILURE_POLICY_FAIL_FAST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyFailSlow
 *        Indicates that the pipeline should continue to run until all possible
 *        tasks have been scheduled and completed. (Value:
 *        "PIPELINE_FAILURE_POLICY_FAIL_SLOW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_FailurePolicy_PipelineFailurePolicyUnspecified
 *        Default value, and follows fail slow behavior. (Value:
 *        "PIPELINE_FAILURE_POLICY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *failurePolicy;

/**
 *  Required. A path in a Cloud Storage bucket, which will be treated as the
 *  root output directory of the pipeline. It is used by the system to generate
 *  the paths of output artifacts. The artifact paths are generated with a
 *  sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified
 *  output directory. The service account specified in this pipeline must have
 *  the `storage.objects.get` and `storage.objects.create` permissions for this
 *  bucket.
 */
@property(nonatomic, copy, nullable) NSString *gcsOutputDirectory;

/**
 *  The runtime artifacts of the PipelineJob. The key will be the input artifact
 *  name and the value would be one of the InputArtifact.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_InputArtifacts *inputArtifacts;

/**
 *  Deprecated. Use RuntimeConfig.parameter_values instead. The runtime
 *  parameters of the PipelineJob. The parameters will be passed into
 *  PipelineJob.pipeline_spec to replace the placeholders at runtime. This field
 *  is used by pipelines built using `PipelineJob.pipeline_spec.schema_version`
 *  2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or
 *  lower.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_Parameters *parameters GTLR_DEPRECATED;

/**
 *  The runtime parameters of the PipelineJob. The parameters will be passed
 *  into PipelineJob.pipeline_spec to replace the placeholders at runtime. This
 *  field is used by pipelines built using
 *  `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built
 *  using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_ParameterValues *parameterValues;

@end


/**
 *  The runtime artifacts of the PipelineJob. The key will be the input artifact
 *  name and the value would be one of the InputArtifact.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_InputArtifacts : GTLRObject
@end


/**
 *  Deprecated. Use RuntimeConfig.parameter_values instead. The runtime
 *  parameters of the PipelineJob. The parameters will be passed into
 *  PipelineJob.pipeline_spec to replace the placeholders at runtime. This field
 *  is used by pipelines built using `PipelineJob.pipeline_spec.schema_version`
 *  2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or
 *  lower.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1Value. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
GTLR_DEPRECATED
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_Parameters : GTLRObject
@end


/**
 *  The runtime parameters of the PipelineJob. The parameters will be passed
 *  into PipelineJob.pipeline_spec to replace the placeholders at runtime. This
 *  field is used by pipelines built using
 *  `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built
 *  using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfig_ParameterValues : GTLRObject
@end


/**
 *  The type of an input artifact.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact : GTLRObject

/**
 *  Artifact resource id from MLMD. Which is the last portion of an artifact
 *  resource name:
 *  `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`.
 *  The artifact must stay within the same project, location and default
 *  metadatastore as the pipeline.
 */
@property(nonatomic, copy, nullable) NSString *artifactId;

@end


/**
 *  The runtime detail of a task execution.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail : GTLRObject

/** Output only. Task create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Task end time. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. The error that occurred during task execution. Only populated
 *  when the task's state is FAILED or CANCELLED.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/** Output only. The execution metadata of the task. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Execution *execution;

/** Output only. The detailed execution info. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetail *executorDetail;

/** Output only. The runtime input artifacts of the task. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Inputs *inputs;

/** Output only. The runtime output artifacts of the task. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Outputs *outputs;

/**
 *  Output only. The id of the parent task if the task is within a component
 *  scope. Empty if the task is at the root level.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *parentTaskId;

/**
 *  Output only. A list of task status. This field keeps a record of task status
 *  evolving over time.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus *> *pipelineTaskStatus;

/** Output only. Task start time. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. State of the task.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Cancelled
 *        Specifies task was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Cancelling
 *        Specifies task is being cancelled. (Value: "CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_CancelPending
 *        Specifies Task cancel is in pending state. (Value: "CANCEL_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Failed
 *        Specifies task failed. (Value: "FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_NotTriggered
 *        Specifies that the task was not triggered because the task's trigger
 *        policy is not satisfied. The trigger policy is specified in the
 *        `condition` field of PipelineJob.pipeline_spec. (Value:
 *        "NOT_TRIGGERED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Pending
 *        Specifies pending state for the task. (Value: "PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Running
 *        Specifies task is being executed. (Value: "RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Skipped
 *        Specifies task was skipped due to cache hit. (Value: "SKIPPED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_StateUnspecified
 *        Unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_State_Succeeded
 *        Specifies task completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The system generated ID of the task.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *taskId;

/**
 *  Output only. The user specified name of the task that is defined in
 *  pipeline_spec.
 */
@property(nonatomic, copy, nullable) NSString *taskName;

@end


/**
 *  Output only. The runtime input artifacts of the task.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailArtifactList.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Inputs : GTLRObject
@end


/**
 *  Output only. The runtime output artifacts of the task.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailArtifactList.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetail_Outputs : GTLRObject
@end


/**
 *  A list of artifact metadata.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailArtifactList : GTLRObject

/** Output only. A list of artifact metadata. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Artifact *> *artifacts;

@end


/**
 *  A single record of the task status.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus : GTLRObject

/**
 *  Output only. The error that occurred during the state. May be set when the
 *  state is any of the non-final state (PENDING/RUNNING/CANCELLING) or FAILED
 *  state. If the state is FAILED, the error here is final and not going to be
 *  retried. If the state is a non-final state, the error indicates a
 *  system-error being retried.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Output only. The state of the task.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Cancelled
 *        Specifies task was cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Cancelling
 *        Specifies task is being cancelled. (Value: "CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_CancelPending
 *        Specifies Task cancel is in pending state. (Value: "CANCEL_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Failed
 *        Specifies task failed. (Value: "FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_NotTriggered
 *        Specifies that the task was not triggered because the task's trigger
 *        policy is not satisfied. The trigger policy is specified in the
 *        `condition` field of PipelineJob.pipeline_spec. (Value:
 *        "NOT_TRIGGERED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Pending
 *        Specifies pending state for the task. (Value: "PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Running
 *        Specifies task is being executed. (Value: "RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Skipped
 *        Specifies task was skipped due to cache hit. (Value: "SKIPPED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_StateUnspecified
 *        Unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus_State_Succeeded
 *        Specifies task completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Update time of this status. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The runtime detail of a pipeline executor.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetail : GTLRObject

/** Output only. The detailed info for a container executor. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail *containerDetail;

/** Output only. The detailed info for a custom job executor. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail *customJobDetail;

@end


/**
 *  The detail of a container execution. It contains the job names of the
 *  lifecycle of a container execution.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail : GTLRObject

/**
 *  Output only. The names of the previously failed CustomJob for the main
 *  container executions. The list includes the all attempts in chronological
 *  order.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *failedMainJobs;

/**
 *  Output only. The names of the previously failed CustomJob for the
 *  pre-caching-check container executions. This job will be available if the
 *  PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the
 *  lifecycle events. The list includes the all attempts in chronological order.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *failedPreCachingCheckJobs;

/**
 *  Output only. The name of the CustomJob for the main container execution.
 */
@property(nonatomic, copy, nullable) NSString *mainJob;

/**
 *  Output only. The name of the CustomJob for the pre-caching-check container
 *  execution. This job will be available if the PipelineJob.pipeline_spec
 *  specifies the `pre_caching_check` hook in the lifecycle events.
 */
@property(nonatomic, copy, nullable) NSString *preCachingCheckJob;

@end


/**
 *  The detailed info for a custom job executor.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail : GTLRObject

/**
 *  Output only. The names of the previously failed CustomJob. The list includes
 *  the all attempts in chronological order.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *failedJobs;

/** Output only. The name of the CustomJob. */
@property(nonatomic, copy, nullable) NSString *job;

@end


/**
 *  Pipeline template metadata if PipelineJob.template_uri is from supported
 *  template registry. Currently, the only supported registry is Artifact
 *  Registry.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PipelineTemplateMetadata : GTLRObject

/**
 *  The version_name in artifact registry. Will always be presented in output if
 *  the PipelineJob.template_uri is from supported template registry. Format is
 *  "sha256:abcdef123456...".
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Input for pointwise metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInput : GTLRObject

/** Required. Pointwise metric instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInstance *instance;

/** Required. Spec for pointwise metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricSpec *metricSpec;

@end


/**
 *  Pointwise metric instance. Usually one instance corresponds to one row in an
 *  evaluation dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricInstance : GTLRObject

/**
 *  Instance specified as a json string. String key-value pairs are expected in
 *  the json_instance to render PointwiseMetricSpec.instance_prompt_template.
 */
@property(nonatomic, copy, nullable) NSString *jsonInstance;

@end


/**
 *  Spec for pointwise metric result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricResult : GTLRObject

/** Output only. Explanation for pointwise metric score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Pointwise metric score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for pointwise metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PointwiseMetricSpec : GTLRObject

/** Required. Metric prompt template for pointwise metric. */
@property(nonatomic, copy, nullable) NSString *metricPromptTemplate;

@end


/**
 *  Represents a network port in a container.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Port : GTLRObject

/**
 *  The number of the port to expose on the pod's IP address. Must be a valid
 *  port number, between 1 and 65535 inclusive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containerPort;

@end


/**
 *  Assigns input data to training, validation, and test sets based on the value
 *  of a provided key. Supported only for tabular Datasets.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PredefinedSplit : GTLRObject

/**
 *  Required. The key is a name of one of the Dataset's data columns. The value
 *  of the key (either the label's value or value in the column) must be one of
 *  {`training`, `validation`, `test`}, and it defines to which set the given
 *  piece of data is assigned. If for a piece of data the key is not present or
 *  has an invalid value, that piece is ignored by the pipeline.
 */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  Request message for PredictionService.Predict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest : GTLRObject

/**
 *  Required. The instances that are the input to the prediction call. A
 *  DeployedModel may have an upper limit on the number of instances it supports
 *  per request, and when it is exceeded the prediction call errors in case of
 *  AutoML Models, or, in case of customer created Models, the behaviour is as
 *  documented by that Model. The schema of any single instance may be specified
 *  via Endpoint's DeployedModels' Model's PredictSchemata's
 *  instance_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *instances;

/**
 *  The parameters that govern the prediction. The schema of the parameters may
 *  be specified via Endpoint's DeployedModels' Model's PredictSchemata's
 *  parameters_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id parameters;

@end


/**
 *  Configuration for logging request-response to a BigQuery table.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig : GTLRObject

/**
 *  BigQuery table for logging. If only given a project, a new dataset will be
 *  created with name `logging__` where will be made BigQuery-dataset-name
 *  compatible (e.g. most special characters will become underscores). If no
 *  table name is given, a new table will be created with name
 *  `request_response_logging`
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BigQueryDestination *bigqueryDestination;

/**
 *  If logging is enabled or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Percentage of requests to be logged, expressed as a fraction in range(0,1].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *samplingRate;

@end


/**
 *  Response message for PredictionService.Predict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PredictResponse : GTLRObject

/** ID of the Endpoint's DeployedModel that served this prediction. */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  Output only. Request-level metadata returned by the model. The metadata type
 *  will be dependent upon the model implementation.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/**
 *  Output only. The resource name of the Model which is deployed as the
 *  DeployedModel that this prediction hits.
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Output only. The display name of the Model which is deployed as the
 *  DeployedModel that this prediction hits.
 */
@property(nonatomic, copy, nullable) NSString *modelDisplayName;

/**
 *  Output only. The version ID of the Model which is deployed as the
 *  DeployedModel that this prediction hits.
 */
@property(nonatomic, copy, nullable) NSString *modelVersionId;

/**
 *  The predictions that are the output of the predictions call. The schema of
 *  any single prediction may be specified via Endpoint's DeployedModels'
 *  Model's PredictSchemata's prediction_schema_uri.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *predictions;

@end


/**
 *  Contains the schemata used in Model's predictions and explanations via
 *  PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PredictSchemata : GTLRObject

/**
 *  Immutable. Points to a YAML file stored on Google Cloud Storage describing
 *  the format of a single instance, which are used in PredictRequest.instances,
 *  ExplainRequest.instances and BatchPredictionJob.input_config. The schema is
 *  defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  AutoML Models always have this field populated by Vertex AI. Note: The URI
 *  given on output will be immutable and probably different, including the URI
 *  scheme, than the one given on input. The output URI will point to a location
 *  where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *instanceSchemaUri;

/**
 *  Immutable. Points to a YAML file stored on Google Cloud Storage describing
 *  the parameters of prediction and explanation via PredictRequest.parameters,
 *  ExplainRequest.parameters and BatchPredictionJob.model_parameters. The
 *  schema is defined as an OpenAPI 3.0.2 [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  AutoML Models always have this field populated by Vertex AI, if no
 *  parameters are supported, then it is set to an empty string. Note: The URI
 *  given on output will be immutable and probably different, including the URI
 *  scheme, than the one given on input. The output URI will point to a location
 *  where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *parametersSchemaUri;

/**
 *  Immutable. Points to a YAML file stored on Google Cloud Storage describing
 *  the format of a single prediction produced by this Model, which are returned
 *  via PredictResponse.predictions, ExplainResponse.explanations, and
 *  BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2
 *  [Schema
 *  Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 *  AutoML Models always have this field populated by Vertex AI. Note: The URI
 *  given on output will be immutable and probably different, including the URI
 *  scheme, than the one given on input. The output URI will point to a location
 *  where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *predictionSchemaUri;

@end


/**
 *  Preset configuration for example-based explanations
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Presets : GTLRObject

/**
 *  The modality of the uploaded model, which automatically configures the
 *  distance measurement and feature normalization for the underlying example
 *  index and queries. If your model does not precisely fit one of these types,
 *  it is okay to choose the closest type.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Image
 *        IMAGE modality (Value: "IMAGE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_ModalityUnspecified
 *        Should not be set. Added as a recommended best practice for enums
 *        (Value: "MODALITY_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Tabular
 *        TABULAR modality (Value: "TABULAR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Modality_Text TEXT
 *        modality (Value: "TEXT")
 */
@property(nonatomic, copy, nullable) NSString *modality;

/**
 *  Preset option controlling parameters for speed-precision trade-off when
 *  querying for examples. If omitted, defaults to `PRECISE`.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Query_Fast Faster
 *        response as a trade-off against less precise neighbors. (Value:
 *        "FAST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Presets_Query_Precise More
 *        precise neighbors as a trade-off against slower response. (Value:
 *        "PRECISE")
 */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  PrivateEndpoints proto is used to provide paths for users to send requests
 *  privately. To send request via private service access, use predict_http_uri,
 *  explain_http_uri or health_http_uri. To send request via private service
 *  connect, use service_attachment.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PrivateEndpoints : GTLRObject

/** Output only. Http(s) path to send explain requests. */
@property(nonatomic, copy, nullable) NSString *explainHttpUri;

/** Output only. Http(s) path to send health check requests. */
@property(nonatomic, copy, nullable) NSString *healthHttpUri;

/** Output only. Http(s) path to send prediction requests. */
@property(nonatomic, copy, nullable) NSString *predictHttpUri;

/**
 *  Output only. The name of the service attachment resource. Populated if
 *  private service connect is enabled.
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachment;

@end


/**
 *  Represents configuration for private service connect.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PrivateServiceConnectConfig : GTLRObject

/**
 *  Required. If true, expose the IndexEndpoint via private service connect.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePrivateServiceConnect;

/**
 *  A list of Projects from which the forwarding rule will target the service
 *  attachment.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *projectAllowlist;

/**
 *  Output only. The name of the generated service attachment resource. This is
 *  only populated if the endpoint is deployed with PrivateServiceConnect.
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachment;

@end


/**
 *  Probe describes a health check to be performed against a container to
 *  determine whether it is alive or ready to receive traffic.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Probe : GTLRObject

/** ExecAction probes the health of a container by executing a command. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ProbeExecAction *exec;

/**
 *  How often (in seconds) to perform the probe. Default to 10 seconds. Minimum
 *  value is 1. Must be less than timeout_seconds. Maps to Kubernetes probe
 *  argument 'periodSeconds'.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *periodSeconds;

/**
 *  Number of seconds after which the probe times out. Defaults to 1 second.
 *  Minimum value is 1. Must be greater or equal to period_seconds. Maps to
 *  Kubernetes probe argument 'timeoutSeconds'.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSeconds;

@end


/**
 *  ExecAction specifies a command to execute.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ProbeExecAction : GTLRObject

/**
 *  Command is the command line to execute inside the container, the working
 *  directory for the command is root ('/') in the container's filesystem. The
 *  command is simply exec'd, it is not run inside a shell, so traditional shell
 *  instructions ('|', etc) won't work. To use a shell, you need to explicitly
 *  call out to that shell. Exit status of 0 is treated as live/healthy and
 *  non-zero is unhealthy.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

@end


/**
 *  PscAutomatedEndpoints defines the output of the forwarding rule
 *  automatically created by each PscAutomationConfig.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PscAutomatedEndpoints : GTLRObject

/** Ip Address created by the automated forwarding rule. */
@property(nonatomic, copy, nullable) NSString *matchAddress;

/** Corresponding network in pscAutomationConfigs. */
@property(nonatomic, copy, nullable) NSString *network;

/** Corresponding project_id in pscAutomationConfigs */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  PSC config that is used to automatically create forwarding rule via
 *  ServiceConnectionMap.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PSCAutomationConfig : GTLRObject

/**
 *  Required. The full name of the Google Compute Engine
 *  [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks).
 *  [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
 *  `projects/{project}/global/networks/{network}`. Where {project} is a project
 *  number, as in '12345', and {network} is network name.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** Required. Project id used to create forwarding rule. */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  A Model Garden Publisher Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel : GTLRObject

/** Optional. Additional information about the model's Frameworks. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *frameworks;

/**
 *  Optional. Indicates the launch stage of the model.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_Experimental
 *        Used to indicate the PublisherModel is at Experimental launch stage,
 *        available to a small set of customers. (Value: "EXPERIMENTAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_Ga
 *        Used to indicate the PublisherModel is at GA launch stage, available
 *        to all customers and ready for production workload. (Value: "GA")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_LaunchStageUnspecified
 *        The model launch stage is unspecified. (Value:
 *        "LAUNCH_STAGE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_PrivatePreview
 *        Used to indicate the PublisherModel is at Private Preview launch
 *        stage, only available to a small set of customers, although a larger
 *        set of customers than an Experimental launch. Previews are the first
 *        launch stage used to get feedback from customers. (Value:
 *        "PRIVATE_PREVIEW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_LaunchStage_PublicPreview
 *        Used to indicate the PublisherModel is at Public Preview launch stage,
 *        available to all customers, although not supported for production
 *        workloads. (Value: "PUBLIC_PREVIEW")
 */
@property(nonatomic, copy, nullable) NSString *launchStage;

/** Output only. The resource name of the PublisherModel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Indicates the open source category of the publisher model.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_GoogleOwnedOss
 *        Used to indicate the PublisherModel is a Google-owned pure open source
 *        model. (Value: "GOOGLE_OWNED_OSS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_GoogleOwnedOssWithGoogleCheckpoint
 *        Used to indicate the PublisherModel is a Google-owned open source
 *        model w/ Google checkpoint. (Value:
 *        "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_OpenSourceCategoryUnspecified
 *        The open source category is unspecified, which should not be used.
 *        (Value: "OPEN_SOURCE_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_Proprietary
 *        Used to indicate the PublisherModel is not open sourced. (Value:
 *        "PROPRIETARY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_ThirdPartyOwnedOss
 *        Used to indicate the PublisherModel is a 3p-owned pure open source
 *        model. (Value: "THIRD_PARTY_OWNED_OSS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_OpenSourceCategory_ThirdPartyOwnedOssWithGoogleCheckpoint
 *        Used to indicate the PublisherModel is a 3p-owned open source model w/
 *        Google checkpoint. (Value:
 *        "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT")
 */
@property(nonatomic, copy, nullable) NSString *openSourceCategory;

/**
 *  Optional. The schemata that describes formats of the PublisherModel's
 *  predictions and explanations as given and returned via
 *  PredictionService.Predict.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PredictSchemata *predictSchemata;

/**
 *  Optional. Output only. Immutable. Used to indicate this model has a
 *  publisher model and provide the template of the publisher model resource
 *  name.
 */
@property(nonatomic, copy, nullable) NSString *publisherModelTemplate;

/** Optional. Supported call-to-action options. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToAction *supportedActions;

/**
 *  Output only. Immutable. The version ID of the PublisherModel. A new version
 *  is committed when a new model version is uploaded under an existing model
 *  id. It is an auto-incrementing decimal number in string representation.
 */
@property(nonatomic, copy, nullable) NSString *versionId;

/**
 *  Optional. Indicates the state of the model version.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateStable
 *        Used to indicate the version is stable. (Value:
 *        "VERSION_STATE_STABLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateUnspecified
 *        The version state is unspecified. (Value: "VERSION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1PublisherModel_VersionState_VersionStateUnstable
 *        Used to indicate the version is unstable. (Value:
 *        "VERSION_STATE_UNSTABLE")
 */
@property(nonatomic, copy, nullable) NSString *versionState;

@end


/**
 *  Actions could take on this Publisher Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToAction : GTLRObject

/** Optional. Create application using the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *createApplication;

/** Optional. Deploy the PublisherModel to Vertex Endpoint. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeploy *deploy;

/** Optional. Deploy PublisherModel to Google Kubernetes Engine. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke *deployGke;

/**
 *  Optional. Multiple setups to deploy the PublisherModel to Vertex Endpoint.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex *multiDeployVertex;

/** Optional. Open evaluation pipeline of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openEvaluationPipeline;

/** Optional. Open fine-tuning pipeline of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openFineTuningPipeline;

/** Optional. Open fine-tuning pipelines of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines *openFineTuningPipelines;

/** Optional. Open in Generation AI Studio. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openGenerationAiStudio;

/** Optional. Open Genie / Playground. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openGenie;

/** Optional. Open notebook of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openNotebook;

/** Optional. Open notebooks of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks *openNotebooks;

/** Optional. Open prompt-tuning pipeline of the PublisherModel. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *openPromptTuningPipeline;

/** Optional. Request for access. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *requestAccess;

/** Optional. To view Rest API docs. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi *viewRestApi;

@end


/**
 *  Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint
 *  requests.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeploy : GTLRObject

/**
 *  Optional. The path to the directory containing the Model artifact and any of
 *  its supporting files.
 */
@property(nonatomic, copy, nullable) NSString *artifactUri;

/**
 *  A description of resources that to large degree are decided by Vertex AI,
 *  and require only a modest additional configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1AutomaticResources *automaticResources;

/**
 *  Optional. The specification of the container that is to be used when
 *  deploying this Model in Vertex AI. Not present for Large Models.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelContainerSpec *containerSpec;

/**
 *  A description of resources that are dedicated to the DeployedModel, and that
 *  need a higher degree of manual configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DedicatedResources *dedicatedResources;

/** Optional. Metadata information about this deployment config. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata *deployMetadata;

/**
 *  Optional. The name of the deploy task (e.g., "text to image generation").
 */
@property(nonatomic, copy, nullable) NSString *deployTaskName;

/**
 *  Optional. Large model reference. When this is set, model_artifact_spec is
 *  not needed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1LargeModelReference *largeModelReference;

/** Optional. Default model display name. */
@property(nonatomic, copy, nullable) NSString *modelDisplayName;

/**
 *  Optional. The signed URI for ephemeral Cloud Storage access to model
 *  artifact.
 */
@property(nonatomic, copy, nullable) NSString *publicArtifactUri;

/**
 *  The resource name of the shared DeploymentResourcePool to deploy on. Format:
 *  `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
 */
@property(nonatomic, copy, nullable) NSString *sharedResources;

/** Required. The title of the regional resource reference. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Metadata information about the deployment for managing deployment config.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata : GTLRObject

/**
 *  Optional. Labels for the deployment. For managing deployment config like
 *  verifying, source of deployment config, etc.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata_Labels *labels;

/** Optional. Sample request for deployed endpoint. */
@property(nonatomic, copy, nullable) NSString *sampleRequest;

@end


/**
 *  Optional. Labels for the deployment. For managing deployment config like
 *  verifying, source of deployment config, etc.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata_Labels : GTLRObject
@end


/**
 *  Configurations for PublisherModel GKE deployment
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke : GTLRObject

/** Optional. GKE deployment configuration in yaml format. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gkeYamlConfigs;

@end


/**
 *  Multiple setups to deploy the PublisherModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex : GTLRObject

/** Optional. One click deployment configurations. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionDeploy *> *multiDeployVertex;

@end


/**
 *  Open fine tuning pipelines.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines : GTLRObject

/** Required. Regional resource references to fine tuning pipelines. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *> *fineTuningPipelines;

@end


/**
 *  Open notebooks.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks : GTLRObject

/** Required. Regional resource references to notebooks. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences *> *notebooks;

@end


/**
 *  The regional resource name or the URI. Key is region, e.g., us-central1,
 *  europe-west2, global, etc..
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences : GTLRObject

/** Required. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences_References *references;

/** Optional. Description of the resource. */
@property(nonatomic, copy, nullable) NSString *resourceDescription;

/** Optional. Title of the resource. */
@property(nonatomic, copy, nullable) NSString *resourceTitle;

/** Optional. Use case (CUJ) of the resource. */
@property(nonatomic, copy, nullable) NSString *resourceUseCase;

/** Required. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Required.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelResourceReference.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences_References : GTLRObject
@end


/**
 *  Rest API docs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi : GTLRObject

/** Required. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelDocumentation *> *documentations;

/** Required. The title of the view rest API. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A named piece of documentation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelDocumentation : GTLRObject

/** Required. Content of this piece of document (in Markdown format). */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA,
 *  NODE.JS, etc..
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Reference to a resource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PublisherModelResourceReference : GTLRObject

/**
 *  Description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty GTLR_DEPRECATED;

/** The resource name of the Google Cloud resource. */
@property(nonatomic, copy, nullable) NSString *resourceName;

/** The URI of the resource. */
@property(nonatomic, copy, nullable) NSString *uri;

/** Use case (CUJ) of the resource. */
@property(nonatomic, copy, nullable) NSString *useCase GTLR_DEPRECATED;

@end


/**
 *  Details of operations that perform MetadataService.PurgeArtifacts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsMetadata : GTLRObject

/** Operation metadata for purging Artifacts. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for MetadataService.PurgeArtifacts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsRequest : GTLRObject

/**
 *  Required. A required filter matching the Artifacts to be purged. E.g.,
 *  `update_time <= 2020-11-19T11:30:00-04:00`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Flag to indicate to actually perform the purge. If `force` is set
 *  to false, the method will return a sample of Artifact names that would be
 *  deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Response message for MetadataService.PurgeArtifacts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsResponse : GTLRObject

/**
 *  The number of Artifacts that this request deleted (or, if `force` is false,
 *  the number of Artifacts that will be deleted). This can be an estimate.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of the Artifact names that will be deleted. Only populated if
 *  `force` is set to false. The maximum number of samples is 100 (it is
 *  possible to return fewer).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Details of operations that perform MetadataService.PurgeContexts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsMetadata : GTLRObject

/** Operation metadata for purging Contexts. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for MetadataService.PurgeContexts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsRequest : GTLRObject

/**
 *  Required. A required filter matching the Contexts to be purged. E.g.,
 *  `update_time <= 2020-11-19T11:30:00-04:00`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Flag to indicate to actually perform the purge. If `force` is set
 *  to false, the method will return a sample of Context names that would be
 *  deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Response message for MetadataService.PurgeContexts.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsResponse : GTLRObject

/**
 *  The number of Contexts that this request deleted (or, if `force` is false,
 *  the number of Contexts that will be deleted). This can be an estimate.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of the Context names that will be deleted. Only populated if
 *  `force` is set to false. The maximum number of samples is 100 (it is
 *  possible to return fewer).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Details of operations that perform MetadataService.PurgeExecutions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsMetadata : GTLRObject

/** Operation metadata for purging Executions. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for MetadataService.PurgeExecutions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsRequest : GTLRObject

/**
 *  Required. A required filter matching the Executions to be purged. E.g.,
 *  `update_time <= 2020-11-19T11:30:00-04:00`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Flag to indicate to actually perform the purge. If `force` is set
 *  to false, the method will return a sample of Execution names that would be
 *  deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Response message for MetadataService.PurgeExecutions.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsResponse : GTLRObject

/**
 *  The number of Executions that this request deleted (or, if `force` is false,
 *  the number of Executions that will be deleted). This can be an estimate.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of the Execution names that will be deleted. Only populated if
 *  `force` is set to false. The maximum number of samples is 100 (it is
 *  possible to return fewer).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  The spec of a Python packaged code.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1PythonPackageSpec : GTLRObject

/** Command line arguments to be passed to the Python task. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  Environment variables to be passed to the python module. Maximum limit is
 *  100.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1EnvVar *> *env;

/**
 *  Required. The URI of a container image in Artifact Registry that will run
 *  the provided Python package. Vertex AI provides a wide range of executor
 *  images with pre-installed packages to meet users' various use cases. See the
 *  list of [pre-built containers for
 *  training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers).
 *  You must use an image from this list.
 */
@property(nonatomic, copy, nullable) NSString *executorImageUri;

/**
 *  Required. The Google Cloud Storage location of the Python package files
 *  which are the training program and its dependent packages. The maximum
 *  number of package URIs is 100.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *packageUris;

/** Required. The Python module name to run after installing the packages. */
@property(nonatomic, copy, nullable) NSString *pythonModule;

@end


/**
 *  Response message for QueryDeployedModels method.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QueryDeployedModelsResponse : GTLRObject

/**
 *  References to the DeployedModels that share the specified
 *  deploymentResourcePool.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedModelRef *> *deployedModelRefs;

/** DEPRECATED Use deployed_model_refs instead. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DeployedModel *> *deployedModels GTLR_DEPRECATED;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The total number of DeployedModels on this DeploymentResourcePool.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalDeployedModelCount;

/**
 *  The total number of Endpoints that have DeployedModels on this
 *  DeploymentResourcePool.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalEndpointCount;

@end


/**
 *  Input for question answering correctness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput : GTLRObject

/** Required. Question answering correctness instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance *instance;

/** Required. Spec for question answering correctness score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec *metricSpec;

@end


/**
 *  Spec for question answering correctness instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance : GTLRObject

/** Optional. Text provided as context to answer the question. */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Required. The question asked and other instruction in the inference prompt.
 */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for question answering correctness result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult : GTLRObject

/**
 *  Output only. Confidence for question answering correctness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for question answering correctness score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Question Answering Correctness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for question answering correctness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute question answering
 *  correctness.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for question answering helpfulness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput : GTLRObject

/** Required. Question answering helpfulness instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance *instance;

/** Required. Spec for question answering helpfulness score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec *metricSpec;

@end


/**
 *  Spec for question answering helpfulness instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance : GTLRObject

/** Optional. Text provided as context to answer the question. */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Required. The question asked and other instruction in the inference prompt.
 */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for question answering helpfulness result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult : GTLRObject

/**
 *  Output only. Confidence for question answering helpfulness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for question answering helpfulness score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Question Answering Helpfulness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for question answering helpfulness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute question answering
 *  helpfulness.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for question answering quality metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInput : GTLRObject

/** Required. Question answering quality instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInstance *instance;

/** Required. Spec for question answering quality score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualitySpec *metricSpec;

@end


/**
 *  Spec for question answering quality instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityInstance : GTLRObject

/** Required. Text to answer the question. */
@property(nonatomic, copy, nullable) NSString *context;

/** Required. Question Answering prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for question answering quality result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualityResult : GTLRObject

/**
 *  Output only. Confidence for question answering quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for question answering quality score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Question Answering Quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for question answering quality score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringQualitySpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute question answering
 *  quality.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for question answering relevance metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput : GTLRObject

/** Required. Question answering relevance instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance *instance;

/** Required. Spec for question answering relevance score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec *metricSpec;

@end


/**
 *  Spec for question answering relevance instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance : GTLRObject

/** Optional. Text provided as context to answer the question. */
@property(nonatomic, copy, nullable) NSString *context;

/**
 *  Required. The question asked and other instruction in the inference prompt.
 */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for question answering relevance result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult : GTLRObject

/**
 *  Output only. Confidence for question answering relevance score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for question answering relevance score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Question Answering Relevance score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for question answering relevance metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute question answering
 *  relevance.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for PredictionService.RawPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest : GTLRObject

/**
 *  The prediction input. Supports HTTP headers and arbitrary data payload. A
 *  DeployedModel may have an upper limit on the number of instances it supports
 *  per request. When this limit it is exceeded for an AutoML model, the
 *  RawPredict method returns an error. When this limit is exceeded for a
 *  custom-trained model, the behavior varies depending on the model. You can
 *  specify the schema for each instance in the
 *  predict_schemata.instance_schema_uri field when you create a Model. This
 *  schema applies when you deploy the `Model` as a `DeployedModel` to an
 *  Endpoint and use the `RawPredict` method.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleApiHttpBody *httpBody;

@end


/**
 *  Configuration for the Ray OSS Logs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RayLogsSpec : GTLRObject

/**
 *  Optional. Flag to disable the export of Ray OSS logs to Cloud Logging.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

@end


/**
 *  Configuration for the Ray metrics.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RayMetricSpec : GTLRObject

/**
 *  Optional. Flag to disable the Ray metrics collection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

@end


/**
 *  Configuration information for the Ray cluster. For experimental launch, Ray
 *  cluster creation and Persistent cluster creation are 1:1 mapping: We will
 *  provision all the nodes within the Persistent cluster as Ray nodes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RaySpec : GTLRObject

/**
 *  Optional. This will be used to indicate which resource pool will serve as
 *  the Ray head node(the first node within that pool). Will use the machine
 *  from the first workerpool as the head node by default if this field isn't
 *  set.
 */
@property(nonatomic, copy, nullable) NSString *headNodeResourcePoolId;

/**
 *  Optional. Default image for user to choose a preferred ML framework (for
 *  example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt
 *  images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers).
 *  Either this or the resource_pool_images is required. Use this field if you
 *  need all the resource pools to have the same Ray image. Otherwise, use the
 *  {\@code resource_pool_images} field.
 */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Optional. OSS Ray logging configurations. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RayLogsSpec *rayLogsSpec;

/** Optional. Ray metrics configurations. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RayMetricSpec *rayMetricSpec;

/**
 *  Optional. Required if image_uri isn't set. A map of resource_pool_id to
 *  prebuild Ray image if user need to use different images for different
 *  head/worker pools. This map needs to cover all the resource pool ids.
 *  Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1":
 *  "worker image" "ray_worker_node_pool2": "another worker image" }
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RaySpec_ResourcePoolImages *resourcePoolImages;

@end


/**
 *  Optional. Required if image_uri isn't set. A map of resource_pool_id to
 *  prebuild Ray image if user need to use different images for different
 *  head/worker pools. This map needs to cover all the resource pool ids.
 *  Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1":
 *  "worker image" "ray_worker_node_pool2": "another worker image" }
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RaySpec_ResourcePoolImages : GTLRObject
@end


/**
 *  Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesRequest : GTLRObject

/**
 *  Required. ID for a specific entity. For example, for a machine learning
 *  model predicting user clicks on a website, an entity ID could be `user_123`.
 */
@property(nonatomic, copy, nullable) NSString *entityId;

/** Required. Selector choosing Features of the target EntityType. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector *featureSelector;

@end


/**
 *  Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponse : GTLRObject

/**
 *  Entity view with Feature values. This may be the entity in the Featurestore
 *  if values for all Features were requested, or a projection of the entity in
 *  the Featurestore if values for only some Features were requested.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView *entityView;

/** Response header. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader *header;

@end


/**
 *  Entity view with Feature values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView : GTLRObject

/**
 *  Each piece of data holds the k requested values for one requested Feature.
 *  If no values for the requested Feature exist, the corresponding cell will be
 *  empty. This has the same size and is in the same order as the features from
 *  the header ReadFeatureValuesResponse.header.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData *> *data;

/** ID of the requested entity. */
@property(nonatomic, copy, nullable) NSString *entityId;

@end


/**
 *  Container to hold value(s), successive in time, for one Feature from the
 *  request.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData : GTLRObject

/** Feature value if a single value is requested. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue *value;

/**
 *  Feature values list if values, successive in time, are requested. If the
 *  requested number of values is greater than the number of existing Feature
 *  values, nonexistent values are omitted instead of being returned as empty.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValueList *values;

@end


/**
 *  Metadata for requested Features.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor : GTLRObject

/**
 *  Feature ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  Response header with metadata for the requested
 *  ReadFeatureValuesRequest.entity_type and Features.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader : GTLRObject

/**
 *  The resource name of the EntityType from the ReadFeatureValuesRequest. Value
 *  format:
 *  `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  List of Feature metadata corresponding to each piece of
 *  ReadFeatureValuesResponse.EntityView.data.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor *> *featureDescriptors;

@end


/**
 *  The request message for MatchService.ReadIndexDatapoints.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsRequest : GTLRObject

/** The ID of the DeployedIndex that will serve the request. */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

/** IDs of the datapoints to be searched for. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ids;

@end


/**
 *  The response message for MatchService.ReadIndexDatapoints.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsResponse : GTLRObject

/** The result list of datapoints. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint *> *datapoints;

@end


/**
 *  Response message for TensorboardService.ReadTensorboardBlobData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse : GTLRObject

/** Blob messages containing blob bytes. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlob *> *blobs;

@end


/**
 *  Response message for TensorboardService.ReadTensorboardSize.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardSizeResponse : GTLRObject

/**
 *  Payload storage size for the TensorBoard
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageSizeByte;

@end


/**
 *  Response message for TensorboardService.ReadTensorboardTimeSeriesData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse : GTLRObject

/** The returned time series data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData *timeSeriesData;

@end


/**
 *  Response message for TensorboardService.ReadTensorboardUsage.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse : GTLRObject

/** Maps year-month (YYYYMM) string to per month usage data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse_MonthlyUsageData *monthlyUsageData;

@end


/**
 *  Maps year-month (YYYYMM) string to per month usage data.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse_MonthlyUsageData : GTLRObject
@end


/**
 *  Per month usage data
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData : GTLRObject

/** Usage data for each user in the given month. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData *> *userUsageData;

@end


/**
 *  Per user usage data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData : GTLRObject

/** User's username */
@property(nonatomic, copy, nullable) NSString *username;

/**
 *  Number of times the user has read data within the Tensorboard.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *viewCount;

@end


/**
 *  Request message for GenAiTuningService.RebaseTunedModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RebaseTunedModelRequest : GTLRObject

/** Optional. The Google Cloud Storage location to write the artifacts. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *artifactDestination;

/**
 *  Optional. By default, bison to gemini migration will always create new
 *  model/endpoint, but for gemini-1.0 to gemini-1.5 migration, we default
 *  deploy to the same endpoint. See details in this Section.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deployToSameEndpoint;

/**
 *  Required. TunedModel reference to retrieve the legacy model information.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TunedModelRef *tunedModelRef;

/**
 *  Optional. The TuningJob to be updated. Users can use this TuningJob field to
 *  overwrite tuning configs.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TuningJob *tuningJob;

@end


/**
 *  Details of operations that perform reboot PersistentResource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RebootPersistentResourceOperationMetadata : GTLRObject

/** Operation metadata for PersistentResource. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** Progress Message for Reboot LRO */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for PersistentResourceService.RebootPersistentResource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RebootPersistentResourceRequest : GTLRObject
@end


/**
 *  Request message for MetadataService.DeleteContextChildrenRequest.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenRequest : GTLRObject

/** The resource names of the child Contexts. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *childContexts;

@end


/**
 *  Response message for MetadataService.RemoveContextChildren.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenResponse : GTLRObject
@end


/**
 *  Request message for IndexService.RemoveDatapoints
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsRequest : GTLRObject

/** A list of datapoint ids to be deleted. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *datapointIds;

@end


/**
 *  Response message for IndexService.RemoveDatapoints
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsResponse : GTLRObject
@end


/**
 *  A ReservationAffinity can be used to configure a Vertex AI resource (e.g., a
 *  DeployedModel) to draw its Compute Engine resources from a Shared
 *  Reservation, or exclusively from on-demand capacity.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity : GTLRObject

/**
 *  Optional. Corresponds to the label key of a reservation resource. To target
 *  a SPECIFIC_RESERVATION by name, use
 *  `compute.googleapis.com/reservation-name` as the key and specify the name of
 *  your reservation as its value.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Required. Specifies the reservation affinity type.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_AnyReservation
 *        Consume any reservation available, falling back to on-demand. (Value:
 *        "ANY_RESERVATION")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_NoReservation
 *        Do not consume from any reserved capacity, only use on-demand. (Value:
 *        "NO_RESERVATION")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_SpecificReservation
 *        Consume from a specific reservation. When chosen, the reservation must
 *        be identified via the `key` and `values` fields. (Value:
 *        "SPECIFIC_RESERVATION")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1ReservationAffinity_ReservationAffinityType_TypeUnspecified
 *        Default value. This should not be used. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reservationAffinityType;

/**
 *  Optional. Corresponds to the label values of a reservation resource. This
 *  must be the full resource name of the reservation.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Represents the spec of a group of resources of the same type, for example
 *  machine type, disk, and accelerators, in a PersistentResource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourcePool : GTLRObject

/** Optional. Optional spec to configure GKE or Ray-on-Vertex autoscaling */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec *autoscalingSpec;

/** Optional. Disk spec for the machine in this node pool. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DiskSpec *diskSpec;

/**
 *  Immutable. The unique ID in a PersistentResource for referring to this
 *  resource pool. User can specify it if necessary. Otherwise, it's generated
 *  automatically.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Required. Immutable. The specification of a single machine. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec *machineSpec;

/**
 *  Optional. The total number of machines to use for this resource pool.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *replicaCount;

/**
 *  Output only. The number of machines currently in use by training jobs for
 *  this resource pool. Will replace idle_replica_count.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usedReplicaCount;

@end


/**
 *  The min/max number of replicas allowed if enabling autoscaling
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec : GTLRObject

/**
 *  Optional. max replicas in the node pool, must be ≥ replica_count and >
 *  min_replica_count or will throw error
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxReplicaCount;

/**
 *  Optional. min replicas in the node pool, must be ≤ replica_count and <
 *  max_replica_count or will throw error. For autoscaling enabled
 *  Ray-on-Vertex, we allow min_replica_count of a resource_pool to be 0 to
 *  match the OSS Ray
 *  behavior(https://docs.ray.io/en/latest/cluster/vms/user-guides/configuring-autoscaling.html#cluster-config-parameters).
 *  As for Persistent Resource, the min_replica_count must be > 0, we added a
 *  corresponding validation inside
 *  CreatePersistentResourceRequestValidator.java.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minReplicaCount;

@end


/**
 *  Persistent Cluster runtime information as output
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime : GTLRObject

/**
 *  Output only. URIs for user to connect to the Cluster. Example: {
 *  "RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001" "RAY_DASHBOARD_URI":
 *  "ray-dashboard-address:8888" }
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime_AccessUris *accessUris;

@end


/**
 *  Output only. URIs for user to connect to the Cluster. Example: {
 *  "RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001" "RAY_DASHBOARD_URI":
 *  "ray-dashboard-address:8888" }
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntime_AccessUris : GTLRObject
@end


/**
 *  Configuration for the runtime on a PersistentResource instance, including
 *  but not limited to: * Service accounts used to run the workloads. * Whether
 *  to make it a dedicated Ray Cluster.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourceRuntimeSpec : GTLRObject

/**
 *  Optional. Ray cluster configuration. Required when creating a dedicated
 *  RayCluster on the PersistentResource.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RaySpec *raySpec;

/**
 *  Optional. Configure the use of workload identity on the PersistentResource
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ServiceAccountSpec *serviceAccountSpec;

@end


/**
 *  Statistics information about resource consumption.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResourcesConsumed : GTLRObject

/**
 *  Output only. The number of replica hours used. Note that many replicas may
 *  run in parallel, and additionally any given work may be queued for some
 *  time. Therefore this value is not strictly related to wall time.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *replicaHours;

@end


/**
 *  Runtime operation information for DatasetService.RestoreDatasetVersion.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for JobService.ResumeModelDeploymentMonitoringJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest : GTLRObject
@end


/**
 *  Request message for ScheduleService.ResumeSchedule.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ResumeScheduleRequest : GTLRObject

/**
 *  Optional. Whether to backfill missed runs when the schedule is resumed from
 *  PAUSED state. If set to true, all missed runs will be scheduled. New runs
 *  will be scheduled after the backfill is complete. This will also update
 *  Schedule.catch_up field. Default to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *catchUp;

@end


/**
 *  Defines a retrieval tool that model can call to access external knowledge.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Retrieval : GTLRObject

/**
 *  Optional. Deprecated. This option is no longer supported.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAttribution GTLR_DEPRECATED;

/** Set to use data source powered by Vertex AI Search. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1VertexAISearch *vertexAiSearch;

/**
 *  Set to use data source powered by Vertex RAG store. User data is uploaded
 *  via the VertexRagDataService.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStore *vertexRagStore;

@end


/**
 *  Input for rouge metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RougeInput : GTLRObject

/** Required. Repeated rouge instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1RougeInstance *> *instances;

/** Required. Spec for rouge score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1RougeSpec *metricSpec;

@end


/**
 *  Spec for rouge instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RougeInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Rouge metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RougeMetricValue : GTLRObject

/**
 *  Output only. Rouge score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for rouge metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RougeResults : GTLRObject

/** Output only. Rouge metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1RougeMetricValue *> *rougeMetricValues;

@end


/**
 *  Spec for rouge score metric - calculates the recall of n-grams in prediction
 *  as compared to reference - returns a score ranging between 0 and 1.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1RougeSpec : GTLRObject

/** Optional. Supported rouge types are rougen[1-9], rougeL, and rougeLsum. */
@property(nonatomic, copy, nullable) NSString *rougeType;

/**
 *  Optional. Whether to split summaries while using rougeLsum.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *splitSummaries;

/**
 *  Optional. Whether to use stemmer to compute rouge score.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useStemmer;

@end


/**
 *  Input for safety metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetyInput : GTLRObject

/** Required. Safety instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SafetyInstance *instance;

/** Required. Spec for safety metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SafetySpec *metricSpec;

@end


/**
 *  Spec for safety instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetyInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

@end


/**
 *  Safety rating corresponding to the generated content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetyRating : GTLRObject

/**
 *  Output only. Indicates whether the content was filtered out because of this
 *  rating.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blocked;

/**
 *  Output only. Harm category.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryCivicIntegrity
 *        The harm category is civic integrity. (Value:
 *        "HARM_CATEGORY_CIVIC_INTEGRITY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryDangerousContent
 *        The harm category is dangerous content. (Value:
 *        "HARM_CATEGORY_DANGEROUS_CONTENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryHarassment
 *        The harm category is harassment. (Value: "HARM_CATEGORY_HARASSMENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryHateSpeech
 *        The harm category is hate speech. (Value: "HARM_CATEGORY_HATE_SPEECH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategorySexuallyExplicit
 *        The harm category is sexually explicit content. (Value:
 *        "HARM_CATEGORY_SEXUALLY_EXPLICIT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Category_HarmCategoryUnspecified
 *        The harm category is unspecified. (Value: "HARM_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Output only. Harm probability levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_HarmProbabilityUnspecified
 *        Harm probability unspecified. (Value: "HARM_PROBABILITY_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_High
 *        High level of harm. (Value: "HIGH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Low
 *        Low level of harm. (Value: "LOW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Medium
 *        Medium level of harm. (Value: "MEDIUM")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Probability_Negligible
 *        Negligible level of harm. (Value: "NEGLIGIBLE")
 */
@property(nonatomic, copy, nullable) NSString *probability;

/**
 *  Output only. Harm probability score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *probabilityScore;

/**
 *  Output only. Harm severity levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityHigh
 *        High level of harm severity. (Value: "HARM_SEVERITY_HIGH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityLow
 *        Low level of harm severity. (Value: "HARM_SEVERITY_LOW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityMedium
 *        Medium level of harm severity. (Value: "HARM_SEVERITY_MEDIUM")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityNegligible
 *        Negligible level of harm severity. (Value: "HARM_SEVERITY_NEGLIGIBLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetyRating_Severity_HarmSeverityUnspecified
 *        Harm severity unspecified. (Value: "HARM_SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Output only. Harm severity score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *severityScore;

@end


/**
 *  Spec for safety result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetyResult : GTLRObject

/**
 *  Output only. Confidence for safety score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for safety score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Safety score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Safety settings.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetySetting : GTLRObject

/**
 *  Required. Harm category.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryCivicIntegrity
 *        The harm category is civic integrity. (Value:
 *        "HARM_CATEGORY_CIVIC_INTEGRITY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryDangerousContent
 *        The harm category is dangerous content. (Value:
 *        "HARM_CATEGORY_DANGEROUS_CONTENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryHarassment
 *        The harm category is harassment. (Value: "HARM_CATEGORY_HARASSMENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryHateSpeech
 *        The harm category is hate speech. (Value: "HARM_CATEGORY_HATE_SPEECH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategorySexuallyExplicit
 *        The harm category is sexually explicit content. (Value:
 *        "HARM_CATEGORY_SEXUALLY_EXPLICIT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Category_HarmCategoryUnspecified
 *        The harm category is unspecified. (Value: "HARM_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Optional. Specify if the threshold is used for probability or severity
 *  score. If not specified, the threshold is used for probability score.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_HarmBlockMethodUnspecified
 *        The harm block method is unspecified. (Value:
 *        "HARM_BLOCK_METHOD_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_Probability
 *        The harm block method uses the probability score. (Value:
 *        "PROBABILITY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Method_Severity
 *        The harm block method uses both probability and severity scores.
 *        (Value: "SEVERITY")
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  Required. The harm block threshold.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockLowAndAbove
 *        Block low threshold and above (i.e. block more). (Value:
 *        "BLOCK_LOW_AND_ABOVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockMediumAndAbove
 *        Block medium threshold and above. (Value: "BLOCK_MEDIUM_AND_ABOVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockNone
 *        Block none. (Value: "BLOCK_NONE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_BlockOnlyHigh
 *        Block only high threshold (i.e. block less). (Value:
 *        "BLOCK_ONLY_HIGH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_HarmBlockThresholdUnspecified
 *        Unspecified harm block threshold. (Value:
 *        "HARM_BLOCK_THRESHOLD_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SafetySetting_Threshold_Off
 *        Turn off the safety filter. (Value: "OFF")
 */
@property(nonatomic, copy, nullable) NSString *threshold;

@end


/**
 *  Spec for safety metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SafetySpec : GTLRObject

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Active learning data sampling config. For every active learning labeling
 *  iteration, it will select a batch of data based on the sampling strategy.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SampleConfig : GTLRObject

/**
 *  The percentage of data needed to be labeled in each following batch (except
 *  the first batch).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *followingBatchSamplePercentage;

/**
 *  The percentage of data needed to be labeled in the first batch.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *initialBatchSamplePercentage;

/**
 *  Field to choose sampling strategy. Sampling strategy will decide which data
 *  should be selected for human labeling in every batch.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SampleConfig_SampleStrategy_SampleStrategyUnspecified
 *        Default will be treated as UNCERTAINTY. (Value:
 *        "SAMPLE_STRATEGY_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SampleConfig_SampleStrategy_Uncertainty
 *        Sample the most uncertain data to label. (Value: "UNCERTAINTY")
 */
@property(nonatomic, copy, nullable) NSString *sampleStrategy;

@end


/**
 *  An attribution method that approximates Shapley values for features that
 *  contribute to the label being predicted. A sampling strategy is used to
 *  approximate the value rather than considering all subsets of features.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SampledShapleyAttribution : GTLRObject

/**
 *  Required. The number of feature permutations to consider when approximating
 *  the Shapley values. Valid range of its value is [1, 50], inclusively.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pathCount;

@end


/**
 *  Sampling Strategy for logging, can be for both training and prediction
 *  dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategy : GTLRObject

/** Random sample config. Will support more sampling strategies later. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig *randomSampleConfig;

@end


/**
 *  Requests are randomly selected.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig : GTLRObject

/**
 *  Sample rate (0, 1]
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sampleRate;

@end


/**
 *  A SavedQuery is a view of the dataset. It references a subset of annotations
 *  by problem type and filters.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SavedQuery : GTLRObject

/** Output only. Filters on the Annotations in the dataset. */
@property(nonatomic, copy, nullable) NSString *annotationFilter;

/**
 *  Output only. Number of AnnotationSpecs in the context of the SavedQuery.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *annotationSpecCount;

/** Output only. Timestamp when this SavedQuery was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The user-defined name of the SavedQuery. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Used to perform a consistent read-modify-write update. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Some additional information about the SavedQuery.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id metadata;

/** Output only. Resource name of the SavedQuery. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Problem type of the SavedQuery. Allowed values: *
 *  IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL *
 *  IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL
 *  * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT *
 *  VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
 */
@property(nonatomic, copy, nullable) NSString *problemType;

/**
 *  Output only. If the Annotations belonging to the SavedQuery can be used for
 *  AutoML training.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportAutomlTraining;

/** Output only. Timestamp when SavedQuery was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  One point viewable on a scalar metric plot.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Scalar : GTLRObject

/**
 *  Value of the point at this step / timestamp.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  An instance of a Schedule periodically schedules runs to make API calls
 *  based on user specified time specification and API request type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Schedule : GTLRObject

/**
 *  Optional. Whether new scheduled runs can be queued when max_concurrent_runs
 *  limit is reached. If set to true, new runs will be queued instead of
 *  skipped. Default to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowQueueing;

/**
 *  Output only. Whether to backfill missed runs when the schedule is resumed
 *  from PAUSED state. If set to true, all missed runs will be scheduled. New
 *  runs will be scheduled after the backfill is complete. Default to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *catchUp;

/** Request for NotebookService.CreateNotebookExecutionJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest *createNotebookExecutionJobRequest;

/**
 *  Request for PipelineService.CreatePipelineJob.
 *  CreatePipelineJobRequest.parent field is required (format:
 *  projects/{project}/locations/{location}).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CreatePipelineJobRequest *createPipelineJobRequest;

/** Output only. Timestamp when this Schedule was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs.
 *  To explicitly set a timezone to the cron tab, apply a prefix in the cron
 *  tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The
 *  ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database.
 *  For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1
 *  * * * *".
 */
@property(nonatomic, copy, nullable) NSString *cron;

/**
 *  Required. User provided name of the Schedule. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Timestamp after which no new runs can be scheduled. If specified,
 *  The schedule will be completed when either end_time is reached or when
 *  scheduled_run_count >= max_run_count. If not specified, new runs will keep
 *  getting scheduled until this Schedule is paused or deleted. Already
 *  scheduled runs will be allowed to complete. Unset if not specified.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Timestamp when this Schedule was last paused. Unset if never
 *  paused.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastPauseTime;

/**
 *  Output only. Timestamp when this Schedule was last resumed. Unset if never
 *  resumed from pause.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastResumeTime;

/**
 *  Output only. Response of the last scheduled run. This is the response for
 *  starting the scheduled requests and not the execution of the operations/jobs
 *  created by the requests (if applicable). Unset if no run has been scheduled
 *  yet.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ScheduleRunResponse *lastScheduledRunResponse;

/**
 *  Required. Maximum number of runs that can be started concurrently for this
 *  Schedule. This is the limit for starting the scheduled requests and not the
 *  execution of the operations/jobs created by the requests (if applicable).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConcurrentRunCount;

/**
 *  Optional. Maximum run count of the schedule. If specified, The schedule will
 *  be completed when either started_run_count >= max_run_count or when end_time
 *  is reached. If not specified, new runs will keep getting scheduled until
 *  this Schedule is paused or deleted. Already scheduled runs will be allowed
 *  to complete. Unset if not specified.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRunCount;

/** Immutable. The resource name of the Schedule. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Timestamp when this Schedule should schedule the next run.
 *  Having a next_run_time in the past means the runs are being started behind
 *  schedule.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *nextRunTime;

/**
 *  Output only. The number of runs started by this schedule.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startedRunCount;

/**
 *  Optional. Timestamp after which the first run can be scheduled. Default to
 *  Schedule create time if not specified.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The state of this Schedule.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Active The
 *        Schedule is active. Runs are being scheduled on the user-specified
 *        timespec. (Value: "ACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Completed
 *        The Schedule is completed. No new runs will be scheduled. Already
 *        started runs will be allowed to complete. Schedules in completed state
 *        cannot be paused or resumed. (Value: "COMPLETED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_Paused The
 *        schedule is paused. No new runs will be created until the schedule is
 *        resumed. Already started runs will be allowed to complete. (Value:
 *        "PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schedule_State_StateUnspecified
 *        Unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Timestamp when this Schedule was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Status of a scheduled run.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ScheduleRunResponse : GTLRObject

/** The response of the scheduled run. */
@property(nonatomic, copy, nullable) NSString *runResponse;

/** The scheduled run time based on the user-specified schedule. */
@property(nonatomic, strong, nullable) GTLRDateTime *scheduledRunTime;

@end


/**
 *  All parameters related to queuing and scheduling of custom jobs.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Scheduling : GTLRObject

/**
 *  Optional. Indicates if the job should retry for internal errors after the
 *  job starts running. If true, overrides
 *  `Scheduling.restart_job_on_worker_restart` to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableRetries;

/**
 *  Optional. This is the maximum duration that a job will wait for the
 *  requested resources to be provisioned if the scheduling strategy is set to
 *  [Strategy.DWS_FLEX_START]. If set to 0, the job will wait indefinitely. The
 *  default is 24 hours.
 */
@property(nonatomic, strong, nullable) GTLRDuration *maxWaitDuration;

/**
 *  Restarts the entire CustomJob if a worker gets restarted. This feature can
 *  be used by distributed training jobs that are not resilient to workers
 *  leaving and joining a job.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restartJobOnWorkerRestart;

/**
 *  Optional. This determines which type of scheduling strategy to use.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_FlexStart
 *        Flex Start strategy uses DWS to queue for resources. (Value:
 *        "FLEX_START")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_LowCost
 *        Deprecated. Low cost by making potential use of spot resources.
 *        (Value: "LOW_COST")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_OnDemand
 *        Deprecated. Regular on-demand provisioning strategy. (Value:
 *        "ON_DEMAND")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_Spot
 *        Spot provisioning strategy uses spot resources. (Value: "SPOT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_Standard
 *        Standard provisioning strategy uses regular on-demand resources.
 *        (Value: "STANDARD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Scheduling_Strategy_StrategyUnspecified
 *        Strategy will default to STANDARD. (Value: "STRATEGY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *strategy;

/** The maximum job running time. The default is 7 days. */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

@end


/**
 *  Schema is used to define the format of input/output data. Represents a
 *  select subset of an [OpenAPI 3.0 schema
 *  object](https://spec.openapis.org/oas/v3.0.3#schema-object). More fields may
 *  be added in the future as needed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Schema : GTLRObject

/**
 *  Optional. The value should be validated against any (one or more) of the
 *  subschemas in the list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Schema *> *anyOf;

/**
 *  Optional. Default value of the data.
 *
 *  Remapped to 'defaultProperty' to avoid language reserved word 'default'.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultProperty;

/**
 *  Optional. The description of the data.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Possible values of the element of Type.STRING with enum format.
 *  For example we can define an Enum Direction as : {type:STRING, format:enum,
 *  enum:["EAST", NORTH", "SOUTH", "WEST"]}
 *
 *  Remapped to 'enumProperty' to avoid language reserved word 'enum'.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enumProperty;

/**
 *  Optional. Example of the object. Will only populated when the object is the
 *  root.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id example;

/**
 *  Optional. The format of the data. Supported formats: for NUMBER type:
 *  "float", "double" for INTEGER type: "int32", "int64" for STRING type:
 *  "email", "byte", etc
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  Optional. SCHEMA FIELDS FOR TYPE ARRAY Schema of the elements of Type.ARRAY.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Schema *items;

/**
 *  Optional. Maximum value of the Type.INTEGER and Type.NUMBER
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  Optional. Maximum number of the elements for Type.ARRAY.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxItems;

/**
 *  Optional. Maximum length of the Type.STRING
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxLength;

/**
 *  Optional. Maximum number of the properties for Type.OBJECT.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxProperties;

/**
 *  Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER Minimum value of the
 *  Type.INTEGER and Type.NUMBER
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

/**
 *  Optional. Minimum number of the elements for Type.ARRAY.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minItems;

/**
 *  Optional. SCHEMA FIELDS FOR TYPE STRING Minimum length of the Type.STRING
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minLength;

/**
 *  Optional. Minimum number of the properties for Type.OBJECT.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minProperties;

/**
 *  Optional. Indicates if the value may be null.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

/**
 *  Optional. Pattern of the Type.STRING to restrict a string to a regular
 *  expression.
 */
@property(nonatomic, copy, nullable) NSString *pattern;

/** Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Schema_Properties *properties;

/**
 *  Optional. The order of the properties. Not a standard field in open api
 *  spec. Only used to support the order of the properties.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *propertyOrdering;

/** Optional. Required properties of Type.OBJECT. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *required;

/** Optional. The title of the Schema. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Optional. The type of the data.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Array OpenAPI
 *        array type (Value: "ARRAY")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Boolean OpenAPI
 *        boolean type (Value: "BOOLEAN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Integer OpenAPI
 *        integer type (Value: "INTEGER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Number OpenAPI
 *        number type (Value: "NUMBER")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_Object OpenAPI
 *        object type (Value: "OBJECT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_String OpenAPI
 *        string type (Value: "STRING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Schema_Type_TypeUnspecified
 *        Not specified, should not be used. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1Schema. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Schema_Properties : GTLRObject
@end


/**
 *  An entry of mapping between color and AnnotationSpec. The mapping is used in
 *  segmentation mask.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaAnnotationSpecColor : GTLRObject

/** The color of the AnnotationSpec in a segmentation mask. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeColor *color;

/**
 *  The display name of the AnnotationSpec represented by the color in the
 *  segmentation mask.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The ID of the AnnotationSpec represented by the color in the segmentation
 *  mask.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  Annotation details specific to image object detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The rightmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMax;

/**
 *  The leftmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMin;

/**
 *  The bottommost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMax;

/**
 *  The topmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMin;

@end


/**
 *  Annotation details specific to image classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageClassificationAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Payload of Image DataItem.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageDataItem : GTLRObject

/**
 *  Required. Google Cloud Storage URI points to the original image in user's
 *  bucket. The image is up to 30MB in size.
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

/**
 *  Output only. The mime type of the content of the image. Only the images in
 *  below listed mime types are supported. - image/jpeg - image/gif - image/png
 *  - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  The metadata of Datasets that contain Image DataItems.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageDatasetMetadata : GTLRObject

/**
 *  Points to a YAML file stored on Google Cloud Storage describing payload of
 *  the Image DataItems that belong to this Dataset.
 */
@property(nonatomic, copy, nullable) NSString *dataItemSchemaUri;

/**
 *  Google Cloud Storage Bucket name that contains the blob data of this
 *  Dataset.
 */
@property(nonatomic, copy, nullable) NSString *gcsBucket;

@end


/**
 *  Annotation details specific to image segmentation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation : GTLRObject

/**
 *  Mask based segmentation annotation. Only one mask annotation can exist for
 *  one image.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation *maskAnnotation;

/** Polygon annotation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation *polygonAnnotation;

/** Polyline annotation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation *polylineAnnotation;

@end


/**
 *  The mask based segmentation annotation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation : GTLRObject

/** The mapping between color and AnnotationSpec for this Annotation. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaAnnotationSpecColor *> *annotationSpecColors;

/**
 *  Google Cloud Storage URI that points to the mask image. The image must be in
 *  PNG format. It must have the same size as the DataItem's image. Each pixel
 *  in the image mask represents the AnnotationSpec which the pixel in the image
 *  DataItem belong to. Each color is mapped to one AnnotationSpec based on
 *  annotation_spec_colors.
 */
@property(nonatomic, copy, nullable) NSString *maskGcsUri;

@end


/**
 *  Represents a polygon in image.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The vertexes are connected one by one and the last vertex is connected to
 *  the first one to represent a polygon.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaVertex *> *vertexes;

@end


/**
 *  Represents a polyline in image.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The vertexes are connected one by one and the last vertex in not connected
 *  to the first one.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaVertex *> *vertexes;

@end


/**
 *  Bounding box matching model metrics for a single intersection-over-union
 *  threshold and multiple label match confidence thresholds.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics : GTLRObject

/**
 *  Metrics for each label-match confidence_threshold from
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived
 *  from them.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics *> *confidenceMetrics;

/**
 *  The intersection-over-union threshold value used to compute this metrics
 *  entry.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iouThreshold;

/**
 *  The mean average precision, most often close to `auPrc`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAveragePrecision;

@end


/**
 *  Metrics for a single confidence threshold.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics : GTLRObject

/**
 *  The confidence threshold value used to compute the metrics.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The harmonic mean of recall and precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  Precision under the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Recall under the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

@end


/**
 *  Metrics for classification evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics : GTLRObject

/**
 *  The Area Under Precision-Recall Curve metric. Micro-averaged for the overall
 *  evaluation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *auPrc;

/**
 *  The Area Under Receiver Operating Characteristic curve metric.
 *  Micro-averaged for the overall evaluation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *auRoc;

/**
 *  Metrics for each `confidenceThreshold` in
 *  0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold` =
 *  INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated
 *  metrics are derived from them. The confidence metrics entries may also be
 *  supplied for additional values of `positionThreshold`, but from these no
 *  aggregated metrics are computed.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics *> *confidenceMetrics;

/** Confusion matrix of the evaluation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix *confusionMatrix;

/**
 *  The Log Loss metric.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logLoss;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics : GTLRObject

/**
 *  Metrics are computed with an assumption that the Model never returns
 *  predictions with score lower than this value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/** Confusion matrix of the evaluation for this confidence_threshold. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix *confusionMatrix;

/**
 *  The harmonic mean of recall and precision. For summary metrics, it computes
 *  the micro-averaged F1 score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  The harmonic mean of recallAt1 and precisionAt1.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1ScoreAt1;

/**
 *  Macro-averaged F1 Score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1ScoreMacro;

/**
 *  Micro-averaged F1 Score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1ScoreMicro;

/**
 *  The number of ground truth labels that are not matched by a Model created
 *  label.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falseNegativeCount;

/**
 *  The number of Model created labels that do not match a ground truth label.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falsePositiveCount;

/**
 *  False Positive Rate for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falsePositiveRate;

/**
 *  The False Positive Rate when only considering the label that has the highest
 *  prediction score and not below the confidence threshold for each DataItem.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falsePositiveRateAt1;

/**
 *  Metrics are computed with an assumption that the Model always returns at
 *  most this many predictions (ordered by their score, descendingly), but they
 *  all still need to meet the `confidenceThreshold`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

/**
 *  Precision for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  The precision when only considering the label that has the highest
 *  prediction score and not below the confidence threshold for each DataItem.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precisionAt1;

/**
 *  Recall (True Positive Rate) for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

/**
 *  The Recall (True Positive Rate) when only considering the label that has the
 *  highest prediction score and not below the confidence threshold for each
 *  DataItem.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recallAt1;

/**
 *  The number of labels that were not created by the Model, but if they would,
 *  they would not match a ground truth label.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trueNegativeCount;

/**
 *  The number of Model created labels that match a ground truth label.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *truePositiveCount;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix : GTLRObject

/**
 *  AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a
 *  special negative AnnotationSpec with empty `id` and `displayName` of "NULL"
 *  will be added as the last element.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef *> *annotationSpecs;

/**
 *  Rows in the confusion matrix. The number of rows is equal to the size of
 *  `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth
 *  of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the
 *  Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the
 *  last element in `annotationSpecs`, i.e. the special negative AnnotationSpec,
 *  `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are
 *  not labeled as any of the ground truth AnnotationSpec. When
 *  annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the
 *  number of entities have ground truth of `annotationSpec[i]` that are not
 *  predicted as an entity by the Model. The value of the last cell, i.e. `rowi`
 *  where i == j and `annotationSpec[i]` is the special negative AnnotationSpec,
 *  is always 0.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray *> *rows;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef : GTLRObject

/** Display name of the AnnotationSpec. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  ID of the AnnotationSpec.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  Metrics for forecasting evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics : GTLRObject

/**
 *  Mean Absolute Error (MAE).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAbsoluteError;

/**
 *  Mean absolute percentage error. Infinity when there are zeros in the ground
 *  truth.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAbsolutePercentageError;

/** The quantile metrics entries for each quantile. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry *> *quantileMetrics;

/**
 *  Root Mean Squared Error (RMSE).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rootMeanSquaredError;

/**
 *  Root mean squared log error. Undefined when there are negative ground truth
 *  values or predictions.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rootMeanSquaredLogError;

/**
 *  Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary
 *  when MSPE is negative.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rootMeanSquaredPercentageError;

/**
 *  Coefficient of determination as Pearson correlation coefficient. Undefined
 *  when ground truth or predictions are constant or near constant.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rSquared;

/**
 *  Weighted Absolute Percentage Error. Does not use weights, this is just what
 *  the metric is called. Undefined if actual values sum to zero. Will be very
 *  large if actual values sum to a very small number.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *weightedAbsolutePercentageError;

@end


/**
 *  Entry for the Quantiles loss type optimization objective.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry : GTLRObject

/**
 *  This is a custom metric that calculates the percentage of true values that
 *  were less than the predicted value for that quantile. Only populated when
 *  optimization_objective is minimize-quantile-loss and each entry corresponds
 *  to an entry in quantiles The percent value can be used to compare with the
 *  quantile value, which is the target value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *observedQuantile;

/**
 *  The quantile for this entry.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantile;

/**
 *  The scaled pinball loss of this quantile.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scaledPinballLoss;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics : GTLRObject

/**
 *  BLEU (bilingual evaluation understudy) scores based on sacrebleu
 *  implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bleu;

/**
 *  ROUGE-L (Longest Common Subsequence) scoring at summary level.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rougeLSum;

@end


/**
 *  Metrics for image object detection evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics : GTLRObject

/**
 *  The single metric for bounding boxes evaluation: the `meanAveragePrecision`
 *  averaged over all `boundingBoxMetricsEntries`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boundingBoxMeanAveragePrecision;

/**
 *  The bounding boxes match metrics for each intersection-over-union threshold
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics *> *boundingBoxMetrics;

/**
 *  The total number of bounding boxes (i.e. summed over all images) the ground
 *  truth used to create this evaluation had.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatedBoundingBoxCount;

@end


/**
 *  Metrics for image segmentation evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics : GTLRObject

/**
 *  Metrics for each confidenceThreshold in
 *  0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve can be
 *  derived from it.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry *> *confidenceMetricsEntries;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry : GTLRObject

/**
 *  Metrics are computed with an assumption that the model never returns
 *  predictions with score lower than this value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/** Confusion matrix for the given confidence threshold. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix *confusionMatrix;

/**
 *  DSC or the F1 score, The harmonic mean of recall and precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diceScoreCoefficient;

/**
 *  The intersection-over-union score. The measure of overlap of the
 *  annotation's category mask with ground truth category mask on the DataItem.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iouScore;

/**
 *  Precision for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Recall (True Positive Rate) for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

@end


/**
 *  Metrics for general pairwise text generation evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics : GTLRObject

/**
 *  Fraction of cases where the autorater agreed with the human raters.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accuracy;

/**
 *  Percentage of time the autorater decided the baseline model had the better
 *  response.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *baselineModelWinRate;

/**
 *  A measurement of agreement between the autorater and human raters that takes
 *  the likelihood of random agreement into account.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cohensKappa;

/**
 *  Harmonic mean of precision and recall.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  Number of examples where the autorater chose the baseline model, but humans
 *  preferred the model.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falseNegativeCount;

/**
 *  Number of examples where the autorater chose the model, but humans preferred
 *  the baseline model.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *falsePositiveCount;

/**
 *  Percentage of time humans decided the baseline model had the better
 *  response.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *humanPreferenceBaselineModelWinRate;

/**
 *  Percentage of time humans decided the model had the better response.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *humanPreferenceModelWinRate;

/**
 *  Percentage of time the autorater decided the model had the better response.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *modelWinRate;

/**
 *  Fraction of cases where the autorater and humans thought the model had a
 *  better response out of all cases where the autorater thought the model had a
 *  better response. True positive divided by all positive.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Fraction of cases where the autorater and humans thought the model had a
 *  better response out of all cases where the humans thought the model had a
 *  better response.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

/**
 *  Number of examples where both the autorater and humans decided that the
 *  model had the worse response.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trueNegativeCount;

/**
 *  Number of examples where both the autorater and humans decided that the
 *  model had the better response.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *truePositiveCount;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics : GTLRObject

/**
 *  The rate at which the input predicted strings exactly match their
 *  references.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exactMatch;

@end


/**
 *  Metrics for regression evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics : GTLRObject

/**
 *  Mean Absolute Error (MAE).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAbsoluteError;

/**
 *  Mean absolute percentage error. Infinity when there are zeros in the ground
 *  truth.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAbsolutePercentageError;

/**
 *  Root Mean Squared Error (RMSE).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rootMeanSquaredError;

/**
 *  Root mean squared log error. Undefined when there are negative ground truth
 *  values or predictions.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rootMeanSquaredLogError;

/**
 *  Coefficient of determination as Pearson correlation coefficient. Undefined
 *  when ground truth or predictions are constant or near constant.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rSquared;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics : GTLRObject

/**
 *  ROUGE-L (Longest Common Subsequence) scoring at summary level.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rougeLSum;

@end


/**
 *  Metrics for text extraction evaluation results.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics : GTLRObject

/**
 *  Metrics that have confidence thresholds. Precision-recall curve can be
 *  derived from them.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics *> *confidenceMetrics;

/**
 *  Confusion matrix of the evaluation. Only set for Models where number of
 *  AnnotationSpecs is no more than 10. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix *confusionMatrix;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics : GTLRObject

/**
 *  Metrics are computed with an assumption that the Model never returns
 *  predictions with score lower than this value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The harmonic mean of recall and precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  Precision for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Recall (True Positive Rate) for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

@end


/**
 *  Model evaluation metrics for text sentiment problems.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics : GTLRObject

/**
 *  Confusion matrix of the evaluation. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix *confusionMatrix;

/**
 *  The harmonic mean of recall and precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  Linear weighted kappa. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *linearKappa;

/**
 *  Mean absolute error. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAbsoluteError;

/**
 *  Mean squared error. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanSquaredError;

/**
 *  Precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Quadratic weighted kappa. Only set for ModelEvaluations, not for
 *  ModelEvaluationSlices.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quadraticKappa;

/**
 *  Recall.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

@end


/**
 *  UNIMPLEMENTED. Track matching model metrics for a single track match
 *  threshold and multiple label match confidence thresholds.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics : GTLRObject

/**
 *  Metrics for each label-match `confidenceThreshold` from
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived
 *  from them.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics *> *confidenceMetrics;

/**
 *  The intersection-over-union threshold value between bounding boxes across
 *  frames used to compute this metric entry.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iouThreshold;

/**
 *  The mean bounding box iou over all confidence thresholds.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanBoundingBoxIou;

/**
 *  The mean mismatch rate over all confidence thresholds.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanMismatchRate;

/**
 *  The mean average precision over all confidence thresholds.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanTrackingAveragePrecision;

@end


/**
 *  Metrics for a single confidence threshold.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics : GTLRObject

/**
 *  Bounding box intersection-over-union precision. Measures how well the
 *  bounding boxes overlap between each other (e.g. complete overlap or just
 *  barely above iou_threshold).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boundingBoxIou;

/**
 *  The confidence threshold value used to compute the metrics.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  Mismatch rate, which measures the tracking consistency, i.e. correctness of
 *  instance ID continuity.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mismatchRate;

/**
 *  Tracking precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trackingPrecision;

/**
 *  Tracking recall.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trackingRecall;

@end


/**
 *  The Evaluation metrics given a specific precision_window_length.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics : GTLRObject

/**
 *  Metrics for each label-match confidence_threshold from
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics *> *confidenceMetrics;

/**
 *  The mean average precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *meanAveragePrecision;

/**
 *  This VideoActionMetrics is calculated based on this prediction window
 *  length. If the predicted action's timestamp is inside the time window whose
 *  center is the ground truth action's timestamp with this specific length, the
 *  prediction result is treated as a true positive.
 */
@property(nonatomic, strong, nullable) GTLRDuration *precisionWindowLength;

@end


/**
 *  Metrics for a single confidence threshold.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics : GTLRObject

/**
 *  Output only. The confidence threshold value used to compute the metrics.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  Output only. The harmonic mean of recall and precision.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *f1Score;

/**
 *  Output only. Precision for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *precision;

/**
 *  Output only. Recall for the given confidence threshold.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recall;

@end


/**
 *  Model evaluation metrics for video action recognition.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics : GTLRObject

/**
 *  The number of ground truth actions used to create this evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatedActionCount;

/** The metric entries for precision window lengths: 1s,2s,3s. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics *> *videoActionMetrics;

@end


/**
 *  Model evaluation metrics for video object tracking problems. Evaluates
 *  prediction quality of both labeled bounding boxes and labeled tracks (i.e.
 *  series of bounding boxes sharing same label and instance ID).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics : GTLRObject

/**
 *  The single metric for bounding boxes evaluation: the `meanAveragePrecision`
 *  averaged over all `boundingBoxMetrics`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boundingBoxMeanAveragePrecision;

/**
 *  The bounding boxes match metrics for each intersection-over-union threshold
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold
 *  0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics *> *boundingBoxMetrics;

/**
 *  UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all
 *  frames) the ground truth used to create this evaluation had.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatedBoundingBoxCount;

/**
 *  UNIMPLEMENTED. The number of video frames used to create this evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatedFrameCount;

/**
 *  UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames)
 *  the ground truth used to create this evaluation had.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *evaluatedTrackCount;

/**
 *  UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the
 *  `meanAveragePrecision` averaged over all `trackMetrics`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trackMeanAveragePrecision;

/**
 *  UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the
 *  `meanBoundingBoxIou` averaged over all `trackMetrics`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trackMeanBoundingBoxIou;

/**
 *  UNIMPLEMENTED. The single metric for tracking consistency evaluation: the
 *  `meanMismatchRate` averaged over all `trackMetrics`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trackMeanMismatchRate;

/**
 *  UNIMPLEMENTED. The tracks match metrics for each intersection-over-union
 *  threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence
 *  threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics *> *trackMetrics;

@end


/**
 *  Prediction input format for Image Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance : GTLRObject

/** The image bytes or Cloud Storage URI to make the prediction on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the image. Only the images in below listed
 *  MIME types are supported. - image/jpeg - image/gif - image/png - image/webp
 *  - image/bmp - image/tiff - image/vnd.microsoft.icon
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Image Object Detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance : GTLRObject

/** The image bytes or Cloud Storage URI to make the prediction on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the image. Only the images in below listed
 *  MIME types are supported. - image/jpeg - image/gif - image/png - image/webp
 *  - image/bmp - image/tiff - image/vnd.microsoft.icon
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Image Segmentation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance : GTLRObject

/** The image bytes to make the predictions on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the image. Only the images in below listed
 *  MIME types are supported. - image/jpeg - image/png
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Text Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance : GTLRObject

/** The text snippet to make the predictions on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the text snippet. The supported MIME types are listed
 *  below. - text/plain
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Text Extraction.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance : GTLRObject

/** The text snippet to make the predictions on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  This field is only used for batch prediction. If a key is provided, the
 *  batch prediction result will by mapped to this key. If omitted, then the
 *  batch prediction result will contain the entire input instance. Vertex AI
 *  will not check if keys in the request are duplicates, so it is up to the
 *  caller to ensure the keys are unique.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The MIME type of the text snippet. The supported MIME types are listed
 *  below. - text/plain
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Text Sentiment.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance : GTLRObject

/** The text snippet to make the predictions on. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the text snippet. The supported MIME types are listed
 *  below. - text/plain
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  Prediction input format for Video Action Recognition.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance : GTLRObject

/**
 *  The Google Cloud Storage location of the video on which to perform the
 *  prediction.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the video. Only the following are supported:
 *  video/mp4 video/avi video/quicktime
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 *  The end, exclusive, of the video's time segment on which to perform the
 *  prediction. Expressed as a number of seconds as measured from the start of
 *  the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision, and "inf" or "Infinity" is allowed, which means the
 *  end of the video.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment on which to perform
 *  the prediction. Expressed as a number of seconds as measured from the start
 *  of the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentStart;

@end


/**
 *  Prediction input format for Video Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance : GTLRObject

/**
 *  The Google Cloud Storage location of the video on which to perform the
 *  prediction.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the video. Only the following are supported:
 *  video/mp4 video/avi video/quicktime
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 *  The end, exclusive, of the video's time segment on which to perform the
 *  prediction. Expressed as a number of seconds as measured from the start of
 *  the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision, and "inf" or "Infinity" is allowed, which means the
 *  end of the video.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment on which to perform
 *  the prediction. Expressed as a number of seconds as measured from the start
 *  of the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentStart;

@end


/**
 *  Prediction input format for Video Object Tracking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance : GTLRObject

/**
 *  The Google Cloud Storage location of the video on which to perform the
 *  prediction.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The MIME type of the content of the video. Only the following are supported:
 *  video/mp4 video/avi video/quicktime
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 *  The end, exclusive, of the video's time segment on which to perform the
 *  prediction. Expressed as a number of seconds as measured from the start of
 *  the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision, and "inf" or "Infinity" is allowed, which means the
 *  end of the video.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment on which to perform
 *  the prediction. Expressed as a number of seconds as measured from the start
 *  of the video, with "s" appended at the end. Fractions are allowed, up to a
 *  microsecond precision.
 */
@property(nonatomic, copy, nullable) NSString *timeSegmentStart;

@end


/**
 *  Represents a line of JSONL in the batch prediction output file.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResult : GTLRObject

/** The error result. Do not set prediction if this is set. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError *error;

/**
 *  User's input instance. Struct is used here instead of Any so that JsonFormat
 *  does not append an extra "\@type" field when we convert the proto to JSON.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResult_Instance *instance;

/** Optional user-provided key from the input instance. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The prediction result. Value is used here instead of Any so that JsonFormat
 *  does not append an extra "\@type" field when we convert the proto to JSON
 *  and so we can represent array of objects. Do not set error if this is set.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id prediction;

@end


/**
 *  User's input instance. Struct is used here instead of Any so that JsonFormat
 *  does not append an extra "\@type" field when we convert the proto to JSON.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResult_Instance : GTLRObject
@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError : GTLRObject

/** Error message with additional details. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Error status. This will be serialized into the enum name e.g. "NOT_FOUND".
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Aborted
 *        The operation was aborted, typically due to a concurrency issue such
 *        as a sequencer check failure or transaction abort. See the guidelines
 *        above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and
 *        `UNAVAILABLE`. HTTP Mapping: 409 Conflict (Value: "ABORTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_AlreadyExists
 *        The entity that a client attempted to create (e.g., file or directory)
 *        already exists. HTTP Mapping: 409 Conflict (Value: "ALREADY_EXISTS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Cancelled
 *        The operation was cancelled, typically by the caller. HTTP Mapping:
 *        499 Client Closed Request (Value: "CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_DataLoss
 *        Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal
 *        Server Error (Value: "DATA_LOSS")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_DeadlineExceeded
 *        The deadline expired before the operation could complete. For
 *        operations that change the state of the system, this error may be
 *        returned even if the operation has completed successfully. For
 *        example, a successful response from a server could have been delayed
 *        long enough for the deadline to expire. HTTP Mapping: 504 Gateway
 *        Timeout (Value: "DEADLINE_EXCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_FailedPrecondition
 *        The operation was rejected because the system is not in a state
 *        required for the operation's execution. For example, the directory to
 *        be deleted is non-empty, an rmdir operation is applied to a
 *        non-directory, etc. Service implementors can use the following
 *        guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and
 *        `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the
 *        failing call. (b) Use `ABORTED` if the client should retry at a higher
 *        level. For example, when a client-specified test-and-set fails,
 *        indicating the client should restart a read-modify-write sequence. (c)
 *        Use `FAILED_PRECONDITION` if the client should not retry until the
 *        system state has been explicitly fixed. For example, if an "rmdir"
 *        fails because the directory is non-empty, `FAILED_PRECONDITION` should
 *        be returned since the client should not retry unless the files are
 *        deleted from the directory. HTTP Mapping: 400 Bad Request (Value:
 *        "FAILED_PRECONDITION")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Internal
 *        Internal errors. This means that some invariants expected by the
 *        underlying system have been broken. This error code is reserved for
 *        serious errors. HTTP Mapping: 500 Internal Server Error (Value:
 *        "INTERNAL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_InvalidArgument
 *        The client specified an invalid argument. Note that this differs from
 *        `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are
 *        problematic regardless of the state of the system (e.g., a malformed
 *        file name). HTTP Mapping: 400 Bad Request (Value: "INVALID_ARGUMENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_NotFound
 *        Some requested entity (e.g., file or directory) was not found. Note to
 *        server developers: if a request is denied for an entire class of
 *        users, such as gradual feature rollout or undocumented allowlist,
 *        `NOT_FOUND` may be used. If a request is denied for some users within
 *        a class of users, such as user-based access control,
 *        `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found (Value:
 *        "NOT_FOUND")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Ok
 *        Not an error; returned on success. HTTP Mapping: 200 OK (Value: "OK")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_OutOfRange
 *        The operation was attempted past the valid range. E.g., seeking or
 *        reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error
 *        indicates a problem that may be fixed if the system state changes. For
 *        example, a 32-bit file system will generate `INVALID_ARGUMENT` if
 *        asked to read at an offset that is not in the range [0,2^32-1], but it
 *        will generate `OUT_OF_RANGE` if asked to read from an offset past the
 *        current file size. There is a fair bit of overlap between
 *        `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using
 *        `OUT_OF_RANGE` (the more specific error) when it applies so that
 *        callers who are iterating through a space can easily look for an
 *        `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400
 *        Bad Request (Value: "OUT_OF_RANGE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_PermissionDenied
 *        The caller does not have permission to execute the specified
 *        operation. `PERMISSION_DENIED` must not be used for rejections caused
 *        by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for
 *        those errors). `PERMISSION_DENIED` must not be used if the caller can
 *        not be identified (use `UNAUTHENTICATED` instead for those errors).
 *        This error code does not imply the request is valid or the requested
 *        entity exists or satisfies other pre-conditions. HTTP Mapping: 403
 *        Forbidden (Value: "PERMISSION_DENIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_ResourceExhausted
 *        Some resource has been exhausted, perhaps a per-user quota, or perhaps
 *        the entire file system is out of space. HTTP Mapping: 429 Too Many
 *        Requests (Value: "RESOURCE_EXHAUSTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unauthenticated
 *        The request does not have valid authentication credentials for the
 *        operation. HTTP Mapping: 401 Unauthorized (Value: "UNAUTHENTICATED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unavailable
 *        The service is currently unavailable. This is most likely a transient
 *        condition, which can be corrected by retrying with a backoff. Note
 *        that it is not always safe to retry non-idempotent operations. See the
 *        guidelines above for deciding between `FAILED_PRECONDITION`,
 *        `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable
 *        (Value: "UNAVAILABLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unimplemented
 *        The operation is not implemented or is not supported/enabled in this
 *        service. HTTP Mapping: 501 Not Implemented (Value: "UNIMPLEMENTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictionResultError_Status_Unknown
 *        Unknown error. For example, this error may be returned when a `Status`
 *        value received from another address space belongs to an error space
 *        that is not known in this address space. Also errors raised by APIs
 *        that do not return enough error information may be converted to this
 *        error. HTTP Mapping: 500 Internal Server Error (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The configuration for grounding checking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig : GTLRObject

/**
 *  If set, skip finding claim attributions (i.e not generate grounding
 *  citation).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAttribution GTLR_DEPRECATED;

/** The sources for the grounding checking. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry *> *sources;

@end


/**
 *  Single source entry for the grounding checking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry : GTLRObject

/**
 *  The uri of the Vertex AI Search data source. Deprecated. Use
 *  vertex_ai_search_datastore instead.
 */
@property(nonatomic, copy, nullable) NSString *enterpriseDatastore GTLR_DEPRECATED;

/**
 *  The grounding text passed inline with the Predict API. It can support up to
 *  1 million bytes.
 */
@property(nonatomic, copy, nullable) NSString *inlineContext;

/**
 *  The type of the grounding checking source.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Enterprise
 *        Uses Vertex AI Search to check the grounding. Deprecated. Use
 *        VERTEX_AI_SEARCH instead. (Value: "ENTERPRISE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Inline
 *        Uses inline context to check the grounding. (Value: "INLINE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Unspecified
 *        Value "UNSPECIFIED"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_VertexAiSearch
 *        Uses Vertex AI Search to check the grounding (Value:
 *        "VERTEX_AI_SEARCH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry_Type_Web
 *        Uses Web Search to check the grounding. (Value: "WEB")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The uri of the Vertex AI Search data source. */
@property(nonatomic, copy, nullable) NSString *vertexAiSearchDatastore;

@end


/**
 *  Prediction model parameters for Image Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams : GTLRObject

/**
 *  The Model only returns predictions with at least this confidence score.
 *  Default value is 0.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The Model only returns up to that many top, by confidence score, predictions
 *  per instance. If this number is very high, the Model may return fewer
 *  predictions. Default value is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

@end


/**
 *  Prediction model parameters for Image Object Detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams : GTLRObject

/**
 *  The Model only returns predictions with at least this confidence score.
 *  Default value is 0.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The Model only returns up to that many top, by confidence score, predictions
 *  per instance. Note that number of returned predictions is also limited by
 *  metadata's predictionsLimit. Default value is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

@end


/**
 *  Prediction model parameters for Image Segmentation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams : GTLRObject

/**
 *  When the model predicts category of pixels of the image, it will only
 *  provide predictions for pixels that it is at least this much confident
 *  about. All other pixels will be classified as background. Default value is
 *  0.5.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

@end


/**
 *  Prediction model parameters for Video Action Recognition.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams : GTLRObject

/**
 *  The Model only returns predictions with at least this confidence score.
 *  Default value is 0.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The model only returns up to that many top, by confidence score, predictions
 *  per frame of the video. If this number is very high, the Model may return
 *  fewer predictions per frame. Default value is 50.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

@end


/**
 *  Prediction model parameters for Video Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams : GTLRObject

/**
 *  The Model only returns predictions with at least this confidence score.
 *  Default value is 0.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The Model only returns up to that many top, by confidence score, predictions
 *  per instance. If this number is very high, the Model may return fewer
 *  predictions. Default value is 10,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

/**
 *  Set to true to request classification for a video at one-second intervals.
 *  Vertex AI returns labels and their confidence scores for each second of the
 *  entire time segment of the video that user specified in the input WARNING:
 *  Model evaluation is not done for this classification type, the quality of it
 *  depends on the training data, but there are no metrics provided to describe
 *  that quality. Default value is false
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *oneSecIntervalClassification;

/**
 *  Set to true to request segment-level classification. Vertex AI returns
 *  labels and their confidence scores for the entire time segment of the video
 *  that user specified in the input instance. Default value is true
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *segmentClassification;

/**
 *  Set to true to request shot-level classification. Vertex AI determines the
 *  boundaries for each camera shot in the entire time segment of the video that
 *  user specified in the input instance. Vertex AI then returns labels and
 *  their confidence scores for each detected shot, along with the start and end
 *  time of the shot. WARNING: Model evaluation is not done for this
 *  classification type, the quality of it depends on the training data, but
 *  there are no metrics provided to describe that quality. Default value is
 *  false
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shotClassification;

@end


/**
 *  Prediction model parameters for Video Object Tracking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams : GTLRObject

/**
 *  The Model only returns predictions with at least this confidence score.
 *  Default value is 0.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceThreshold;

/**
 *  The model only returns up to that many top, by confidence score, predictions
 *  per frame of the video. If this number is very high, the Model may return
 *  fewer predictions per frame. Default value is 50.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPredictions;

/**
 *  Only bounding boxes with shortest edge at least that long as a relative
 *  value of video frame size are returned. Default value is 0.0.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minBoundingBoxSize;

@end


/**
 *  Prediction output format for Image and Text Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult : GTLRObject

/**
 *  The Model's confidences in correctness of the predicted IDs, higher value
 *  means higher confidence. Order matches the Ids.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *confidences;

/**
 *  The display names of the AnnotationSpecs that had been identified, order
 *  matches the IDs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *displayNames;

/**
 *  The resource IDs of the AnnotationSpecs that had been identified.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ids;

@end


/**
 *  Prediction output format for Image Object Detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult : GTLRObject

/**
 *  Bounding boxes, i.e. the rectangles over the image, that pinpoint the found
 *  AnnotationSpecs. Given in order that matches the IDs. Each bounding box is
 *  an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent
 *  the extremal coordinates of the box. They are relative to the image size,
 *  and the point 0,0 is in the top left of the image.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray<NSArray *> *bboxes;

/**
 *  The Model's confidences in correctness of the predicted IDs, higher value
 *  means higher confidence. Order matches the Ids.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *confidences;

/**
 *  The display names of the AnnotationSpecs that had been identified, order
 *  matches the IDs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *displayNames;

/**
 *  The resource IDs of the AnnotationSpecs that had been identified, ordered by
 *  the confidence score descendingly.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ids;

@end


/**
 *  Prediction output format for Image Segmentation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult : GTLRObject

/**
 *  A PNG image where each pixel in the mask represents the category in which
 *  the pixel in the original image was predicted to belong to. The size of this
 *  image will be the same as the original image. The mapping between the
 *  AnntoationSpec and the color can be found in model's metadata. The model
 *  will choose the most likely category and if none of the categories reach the
 *  confidence threshold, the pixel will be marked as background.
 */
@property(nonatomic, copy, nullable) NSString *categoryMask;

/**
 *  A one channel image which is encoded as an 8bit lossless PNG. The size of
 *  the image will be the same as the original image. For a specific pixel,
 *  darker color means less confidence in correctness of the cateogry in the
 *  categoryMask for the corresponding pixel. Black means no confidence and
 *  white means complete confidence.
 */
@property(nonatomic, copy, nullable) NSString *confidenceMask;

@end


/**
 *  Prediction output format for Tabular Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult : GTLRObject

/**
 *  The name of the classes being classified, contains all possible values of
 *  the target column.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *classes;

/**
 *  The model's confidence in each class being correct, higher value means
 *  higher confidence. The N-th score corresponds to the N-th class in classes.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *scores;

@end


/**
 *  Prediction output format for Tabular Regression.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult : GTLRObject

/**
 *  The lower bound of the prediction interval.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lowerBound;

/**
 *  Quantile predictions, in 1-1 correspondence with quantile_values.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantilePredictions;

/**
 *  Quantile values.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantileValues;

/**
 *  The upper bound of the prediction interval.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *upperBound;

/**
 *  The regression value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Prediction output format for Text Extraction.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult : GTLRObject

/**
 *  The Model's confidences in correctness of the predicted IDs, higher value
 *  means higher confidence. Order matches the Ids.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *confidences;

/**
 *  The display names of the AnnotationSpecs that had been identified, order
 *  matches the IDs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *displayNames;

/**
 *  The resource IDs of the AnnotationSpecs that had been identified, ordered by
 *  the confidence score descendingly.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ids;

/**
 *  The end offsets, inclusive, of the text segment in which the AnnotationSpec
 *  has been identified. Expressed as a zero-based number of characters as
 *  measured from the start of the text snippet.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *textSegmentEndOffsets;

/**
 *  The start offsets, inclusive, of the text segment in which the
 *  AnnotationSpec has been identified. Expressed as a zero-based number of
 *  characters as measured from the start of the text snippet.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *textSegmentStartOffsets;

@end


/**
 *  Prediction output format for Text Sentiment
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult : GTLRObject

/**
 *  The integer sentiment labels between 0 (inclusive) and sentimentMax label
 *  (inclusive), while 0 maps to the least positive sentiment and sentimentMax
 *  maps to the most positive one. The higher the score is, the more positive
 *  the sentiment in the text snippet is. Note: sentimentMax is an integer value
 *  between 1 (inclusive) and 10 (inclusive).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sentiment;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *attributeColumns;

/**
 *  attributeWeights
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *attributeWeights;

@property(nonatomic, strong, nullable) NSArray<NSString *> *contextColumns;

/**
 *  TFT feature importance values. Each pair for {context/horizon/attribute}
 *  should have the same shape since the weight corresponds to the column names.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *contextWeights;

@property(nonatomic, strong, nullable) NSArray<NSString *> *horizonColumns;

/**
 *  horizonWeights
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *horizonWeights;

@end


/**
 *  Prediction output format for Time Series Forecasting.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult : GTLRObject

/**
 *  Quantile predictions, in 1-1 correspondence with quantile_values.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantilePredictions;

/**
 *  Quantile values.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantileValues;

/** Only use these if TFt is enabled. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance *tftFeatureImportance;

/**
 *  The regression value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Prediction output format for Video Action Recognition.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult : GTLRObject

/**
 *  The Model's confidence in correction of this prediction, higher value means
 *  higher confidence.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** The display name of the AnnotationSpec that had been identified. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The resource ID of the AnnotationSpec that had been identified.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The end, exclusive, of the video's time segment in which the AnnotationSpec
 *  has been identified. Expressed as a number of seconds as measured from the
 *  start of the video, with fractions up to a microsecond precision, and with
 *  "s" appended at the end.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment in which the
 *  AnnotationSpec has been identified. Expressed as a number of seconds as
 *  measured from the start of the video, with fractions up to a microsecond
 *  precision, and with "s" appended at the end.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentStart;

@end


/**
 *  Prediction output format for Video Classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult : GTLRObject

/**
 *  The Model's confidence in correction of this prediction, higher value means
 *  higher confidence.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** The display name of the AnnotationSpec that had been identified. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The resource ID of the AnnotationSpec that had been identified.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The end, exclusive, of the video's time segment in which the AnnotationSpec
 *  has been identified. Expressed as a number of seconds as measured from the
 *  start of the video, with fractions up to a microsecond precision, and with
 *  "s" appended at the end. Note that for 'segment-classification' prediction
 *  type, this equals the original 'timeSegmentEnd' from the input instance, for
 *  other types it is the end of a shot or a 1 second interval respectively.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment in which the
 *  AnnotationSpec has been identified. Expressed as a number of seconds as
 *  measured from the start of the video, with fractions up to a microsecond
 *  precision, and with "s" appended at the end. Note that for
 *  'segment-classification' prediction type, this equals the original
 *  'timeSegmentStart' from the input instance, for other types it is the start
 *  of a shot or a 1 second interval respectively.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentStart;

/**
 *  The type of the prediction. The requested types can be configured via
 *  parameters. This will be one of - segment-classification -
 *  shot-classification - one-sec-interval-classification
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Prediction output format for Video Object Tracking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult : GTLRObject

/**
 *  The Model's confidence in correction of this prediction, higher value means
 *  higher confidence.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** The display name of the AnnotationSpec that had been identified. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  All of the frames of the video in which a single object instance has been
 *  detected. The bounding boxes in the frames identify the same object.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame *> *frames;

/**
 *  The resource ID of the AnnotationSpec that had been identified.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The end, inclusive, of the video's time segment in which the object instance
 *  has been detected. Expressed as a number of seconds as measured from the
 *  start of the video, with fractions up to a microsecond precision, and with
 *  "s" appended at the end.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentEnd;

/**
 *  The beginning, inclusive, of the video's time segment in which the object
 *  instance has been detected. Expressed as a number of seconds as measured
 *  from the start of the video, with fractions up to a microsecond precision,
 *  and with "s" appended at the end.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeSegmentStart;

@end


/**
 *  The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e.
 *  the rectangle over the video frame pinpointing the found AnnotationSpec. The
 *  coordinates are relative to the frame size, and the point 0,0 is in the top
 *  left of the frame.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame : GTLRObject

/**
 *  A time (frame) of a video in which the object has been detected. Expressed
 *  as a number of seconds as measured from the start of the video, with
 *  fractions up to a microsecond precision, and with "s" appended at the end.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeOffset;

/**
 *  The rightmost coordinate of the bounding box.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMax;

/**
 *  The leftmost coordinate of the bounding box.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMin;

/**
 *  The bottommost coordinate of the bounding box.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMax;

/**
 *  The topmost coordinate of the bounding box.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMin;

@end


/**
 *  The metadata of Datasets that contain tables data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadata : GTLRObject

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig *inputConfig;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource : GTLRObject

/** The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource : GTLRObject

/**
 *  Cloud Storage URI of one or more files. Only CSV files are supported. The
 *  first line of the CSV file is used as the header. If there are multiple
 *  files, the header is the first line of the lexicographically first file, the
 *  other files must either contain the exact same header or omit the header.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uri;

@end


/**
 *  The tables Dataset's data source. The Dataset doesn't store the data
 *  directly, but only pointer(s) to its data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig : GTLRObject

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource *bigquerySource;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource *gcsSource;

@end


/**
 *  Annotation details specific to text classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextClassificationAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Payload of Text DataItem.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextDataItem : GTLRObject

/**
 *  Output only. Google Cloud Storage URI points to the original text in user's
 *  bucket. The text file is up to 10MB in size.
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

@end


/**
 *  The metadata of Datasets that contain Text DataItems.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextDatasetMetadata : GTLRObject

/**
 *  Points to a YAML file stored on Google Cloud Storage describing payload of
 *  the Text DataItems that belong to this Dataset.
 */
@property(nonatomic, copy, nullable) NSString *dataItemSchemaUri;

/**
 *  Google Cloud Storage Bucket name that contains the blob data of this
 *  Dataset.
 */
@property(nonatomic, copy, nullable) NSString *gcsBucket;

@end


/**
 *  Annotation details specific to text extraction.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextExtractionAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The segment of the text content. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextSegment *textSegment;

@end


/**
 *  The metadata of Datasets that contain Text Prompt data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata : GTLRObject

/**
 *  Number of candidates.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *candidateCount;

/** The Google Cloud Storage URI that stores the prompt data. */
@property(nonatomic, copy, nullable) NSString *gcsUri;

/** Grounding checking configuration. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig *groundingConfig;

/**
 *  Whether the prompt dataset has prompt variable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasPromptVariable;

/**
 *  Whether or not the user has enabled logit probabilities in the model
 *  parameters.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logprobs;

/**
 *  Value of the maximum number of tokens generated set when the dataset was
 *  saved.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxOutputTokens;

/** User-created prompt note. Note size limit is 2KB. */
@property(nonatomic, copy, nullable) NSString *note;

/** Type of the prompt dataset. */
@property(nonatomic, copy, nullable) NSString *promptType;

/**
 *  Seeding enables model to return a deterministic response on a best effort
 *  basis. Determinism isn't guaranteed. This field determines whether or not
 *  seeding is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seedEnabled;

/**
 *  The actual value of the seed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seedValue;

/** Customized stop sequences. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *stopSequences;

/** The content of the prompt dataset system instruction. */
@property(nonatomic, copy, nullable) NSString *systemInstruction;

/**
 *  The Google Cloud Storage URI that stores the system instruction, starting
 *  with gs://.
 */
@property(nonatomic, copy, nullable) NSString *systemInstructionGcsUri;

/**
 *  Temperature value used for sampling set when the dataset was saved. This
 *  value is used to tune the degree of randomness.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temperature;

/** The content of the prompt dataset. */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  Top K value set when the dataset was saved. This value determines how many
 *  candidates with highest probability from the vocab would be selected for
 *  each decoding step.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topK;

/**
 *  Top P value set when the dataset was saved. Given topK tokens for decoding,
 *  top candidates will be selected until the sum of their probabilities is
 *  topP.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topP;

@end


/**
 *  The text segment inside of DataItem.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextSegment : GTLRObject

/** The text content in the segment for output only. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Zero-based character index of the first character past the end of the text
 *  segment (counting character from the beginning of the text). The character
 *  at the end_offset is NOT included in the text segment.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endOffset;

/**
 *  Zero-based character index of the first character of the text segment
 *  (counting characters from the beginning of the text).
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startOffset;

@end


/**
 *  Annotation details specific to text sentiment.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextSentimentAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The sentiment score for text.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sentiment;

/**
 *  The sentiment max score for text.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sentimentMax;

@end


/**
 *  The metadata of SavedQuery contains TextSentiment Annotations.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata : GTLRObject

/**
 *  The maximum sentiment of sentiment Anntoation in this SavedQuery.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sentimentMax;

@end


/**
 *  A time period inside of a DataItem that has a time dimension (e.g. video).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSegment : GTLRObject

/**
 *  End of the time segment (exclusive), represented as the duration since the
 *  start of the DataItem.
 */
@property(nonatomic, strong, nullable) GTLRDuration *endTimeOffset;

/**
 *  Start of the time segment (inclusive), represented as the duration since the
 *  start of the DataItem.
 */
@property(nonatomic, strong, nullable) GTLRDuration *startTimeOffset;

@end


/**
 *  The metadata of Datasets that contain time series data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata : GTLRObject

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig *inputConfig;

/**
 *  The column name of the time column that identifies time order in the time
 *  series.
 */
@property(nonatomic, copy, nullable) NSString *timeColumn;

/**
 *  The column name of the time series identifier column that identifies the
 *  time series.
 */
@property(nonatomic, copy, nullable) NSString *timeSeriesIdentifierColumn;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource : GTLRObject

/** The URI of a BigQuery table. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource : GTLRObject

/**
 *  Cloud Storage URI of one or more files. Only CSV files are supported. The
 *  first line of the CSV file is used as the header. If there are multiple
 *  files, the header is the first line of the lexicographically first file, the
 *  other files must either contain the exact same header or omit the header.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uri;

@end


/**
 *  The time series Dataset's data source. The Dataset doesn't store the data
 *  directly, but only pointer(s) to its data.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig : GTLRObject

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource *bigquerySource;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource *gcsSource;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Forecasting Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs : GTLRObject

/** Additional experiment flags for the time series forcasting training. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalExperiments;

/**
 *  Names of columns that are available and provided when a forecast is
 *  requested. These columns contain information for the given entity
 *  (identified by the time_series_identifier_column column) that is known at
 *  forecast. For example, predicted weather for a specific day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableAtForecastColumns;

/**
 *  The amount of time into the past training and prediction data is used for
 *  model training and prediction respectively. Expressed in number of units
 *  defined by the `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextWindow;

/** Expected difference in time granularity between rows in the data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity *dataGranularity;

/**
 *  If probabilistic inference is enabled, the model will fit a distribution
 *  that captures the uncertainty of a prediction. At inference time, the
 *  predictive distribution is used to make a point prediction that minimizes
 *  the optimization objective. For example, the mean of a predictive
 *  distribution is the point prediction that minimizes RMSE loss. If quantiles
 *  are specified, then the quantiles of the distribution are also returned. The
 *  optimization objective cannot be minimize-quantile-loss.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableProbabilisticInference;

/**
 *  Configuration for exporting test set predictions to a BigQuery table. If
 *  this configuration is absent, then the export is not performed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig *exportEvaluatedDataItemsConfig;

/**
 *  The amount of time into the future for which forecasted values for the
 *  target are returned. Expressed in number of units defined by the
 *  `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *forecastHorizon;

/**
 *  Configuration that defines the hierarchical relationship of time series and
 *  parameters for hierarchical forecasting strategies.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig *hierarchyConfig;

/**
 *  The geographical region based on which the holiday effect is applied in
 *  modeling by adding holiday categorical array feature that include all
 *  holidays matching the date. This option only allowed when data_granularity
 *  is day. By default, holiday effect modeling is disabled. To turn it on,
 *  specify the holiday region using this option.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *holidayRegions;

/**
 *  Objective function the model is optimizing towards. The training process
 *  creates a model that optimizes the value of the objective function over the
 *  validation set. The supported optimization objectives: * "minimize-rmse"
 *  (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
 *  Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize
 *  root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize
 *  root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize
 *  the combination of weighted absolute percentage error (WAPE) and
 *  mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the
 *  quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" -
 *  Minimize the mean absolute percentage error.
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Quantiles to use for minimize-quantile-loss `optimization_objective`, or for
 *  probabilistic inference. Up to 5 quantiles are allowed of values between 0
 *  and 1, exclusive. Required if the value of optimization_objective is
 *  minimize-quantile-loss. Represents the percent quantiles to use for that
 *  objective. Quantiles must be unique.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantiles;

/**
 *  The name of the column that the Model is to predict values for. This column
 *  must be unavailable at forecast.
 */
@property(nonatomic, copy, nullable) NSString *targetColumn;

/**
 *  The name of the column that identifies time order in the time series. This
 *  column must be available at forecast.
 */
@property(nonatomic, copy, nullable) NSString *timeColumn;

/**
 *  Column names that should be used as attribute columns. The value of these
 *  columns does not vary as a function of time. For example, store ID or item
 *  color.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *timeSeriesAttributeColumns;

/** The name of the column that identifies the time series. */
@property(nonatomic, copy, nullable) NSString *timeSeriesIdentifierColumn;

/**
 *  Required. The train budget of creating this model, expressed in milli node
 *  hours i.e. 1,000 value in this field means 1 node hour. The training cost of
 *  the model will not exceed this budget. The final cost will be attempted to
 *  be close to the budget, though may end up being (even) noticeably smaller -
 *  at the backend's discretion. This especially may happen when further model
 *  training ceases to provide any improvements. If the budget is set to a value
 *  known to be insufficient to train a model for the given dataset, the
 *  training won't be attempted and will error. The train budget must be between
 *  1,000 and 72,000 milli node hours, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainBudgetMilliNodeHours;

/**
 *  Each transformation will apply transform function to given input column. And
 *  the result will be used for training. When creating transformation for
 *  BigQuery Struct column, the column should be flattened using "." as the
 *  delimiter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation *> *transformations;

/**
 *  Names of columns that are unavailable when a forecast is requested. This
 *  column contains information for the given entity (identified by the
 *  time_series_identifier_column) that is unknown before the forecast For
 *  example, actual weather on a given day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unavailableAtForecastColumns;

/**
 *  Validation options for the data validation component. The available options
 *  are: * "fail-pipeline" - default, will validate against the validation and
 *  fail the pipeline if it fails. * "ignore-validation" - ignore the results of
 *  the validation and continue
 */
@property(nonatomic, copy, nullable) NSString *validationOptions;

/**
 *  Column name that should be used as the weight column. Higher values in this
 *  column give more importance to the row during model training. The column
 *  must have numeric values between 0 and 10000 inclusively; 0 means the row is
 *  ignored for training. If weight column field is not set, then all rows are
 *  assumed to have equal weight of 1.
 */
@property(nonatomic, copy, nullable) NSString *weightColumn;

/** Config containing strategy for generating sliding windows. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig *windowConfig;

@end


/**
 *  A duration of time expressed in time granularity units.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity : GTLRObject

/**
 *  The number of granularity_units between data points in the training data. If
 *  `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
 *  values of `granularity_unit`, must be 1.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The time granularity unit of this time period. The supported units are: *
 *  "minute" * "hour" * "day" * "week" * "month" * "year"
 */
@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation : GTLRObject

/**
 *  autoProperty
 *
 *  Remapped to 'autoProperty' to avoid language reserved word 'auto'.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation *autoProperty;

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation *categorical;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation *numeric;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation *text;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation *timestamp;

@end


/**
 *  Training pipeline will infer the proper transformation based on the
 *  statistic of dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  categorical string as is--no change to case, punctuation, spelling, tense,
 *  and so on. * Convert the category name to a dictionary lookup index and
 *  generate an embedding for each index. * Categories that appear less than 5
 *  times in the training dataset are treated as the "unknown" category. The
 *  "unknown" category gets its own special lookup index and resulting
 *  embedding.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  value converted to float32. * The z_score of the value. * log(value+1) when
 *  the value is greater than or equal to 0. Otherwise, this transformation is
 *  not applied and the value is considered a missing value. * z_score of
 *  log(value+1) when the value is greater than or equal to 0. Otherwise, this
 *  transformation is not applied and the value is considered a missing value. *
 *  A boolean value that indicates whether the value is valid.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  text as is--no change to case, punctuation, spelling, tense, and so on. *
 *  Convert the category name to a dictionary lookup index and generate an
 *  embedding for each index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * Apply
 *  the transformation functions for Numerical columns. * Determine the year,
 *  month, day,and weekday. Treat each value from the timestamp as a Categorical
 *  column. * Invalid numerical values (for example, values that fall outside of
 *  a typical timestamp range, or are extreme values) receive no special
 *  treatment and are not removed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  The format in which that time field is expressed. The time_format must
 *  either be one of: * `unix-seconds` * `unix-milliseconds` *
 *  `unix-microseconds` * `unix-nanoseconds` (for respectively number of
 *  seconds, milliseconds, microseconds and nanoseconds since start of the Unix
 *  epoch); or be written in `strftime` syntax. If time_format is not set, then
 *  the default format is RFC 3339 `date-time` format, where `time-offset` =
 *  `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
 */
@property(nonatomic, copy, nullable) NSString *timeFormat;

@end


/**
 *  Model metadata specific to AutoML Forecasting.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata : GTLRObject

/** BigQuery destination uri for exported evaluated examples. */
@property(nonatomic, copy, nullable) NSString *evaluatedDataItemsBigqueryUri;

/**
 *  Output only. The actual training cost of the model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed the train budget.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainCostMilliNodeHours;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Image Classification Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs : GTLRObject

/**
 *  The ID of the `base` model. If it is specified, the new model will be
 *  trained based on the `base` model. Otherwise, the new model will be trained
 *  from scratch. The `base` model must be in the same Project and Location as
 *  the new Model to train, and have the same modelType.
 */
@property(nonatomic, copy, nullable) NSString *baseModelId;

/**
 *  The training budget of creating this model, expressed in milli node hours
 *  i.e. 1,000 value in this field means 1 node hour. The actual
 *  metadata.costMilliNodeHours will be equal or less than this value. If
 *  further model training ceases to provide any improvements, it will stop
 *  without using the full budget and the metadata.successfulStopReason will be
 *  `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved.
 *  For modelType `cloud`(default), the budget must be between 8,000 and 800,000
 *  milli node hours, inclusive. The default value is 192,000 which represents
 *  one day in wall time, considering 8 nodes are used. For model types
 *  `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`,
 *  `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and
 *  100,000 milli node hours, inclusive. The default value is 24,000 which
 *  represents one day in wall time on a single node that is used.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetMilliNodeHours;

/**
 *  Use the entire training budget. This disables the early stopping feature.
 *  When false the early stopping feature is enabled, which means that AutoML
 *  Image Classification might stop training before the entire training budget
 *  has been used.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableEarlyStopping;

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Cloud
 *        A Model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Default. (Value: "CLOUD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Cloud1
 *        A model type best tailored to be used within Google Cloud, which
 *        cannot be exported externally. Compared to the CLOUD model above, it
 *        is expected to have higher prediction accuracy. (Value: "CLOUD_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Coca
 *        CoCa model for Model Garden training with customizable
 *        hyperparameters. Best tailored to be used within Google Cloud, and
 *        cannot be exported externally. (Value: "COCA")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Efficientnet
 *        EfficientNet model for Model Garden training with customizable
 *        hyperparameters. Best tailored to be used within Google Cloud, and
 *        cannot be exported externally. (Value: "EFFICIENTNET")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Maxvit
 *        MaxViT model for Model Garden training with customizable
 *        hyperparameters. Best tailored to be used within Google Cloud, and
 *        cannot be exported externally. (Value: "MAXVIT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfHighAccuracy1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as TensorFlow or Core
 *        ML model and used on a mobile or edge device afterwards. Expected to
 *        have a higher latency, but should also have a higher prediction
 *        quality than other mobile models. (Value: "MOBILE_TF_HIGH_ACCURACY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfLowLatency1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as TensorFlow or Core
 *        ML model and used on a mobile or edge device afterwards. Expected to
 *        have low latency, but may have lower prediction quality than other
 *        mobile models. (Value: "MOBILE_TF_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_MobileTfVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as TensorFlow or Core
 *        ML model and used on a mobile or edge device with afterwards. (Value:
 *        "MOBILE_TF_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs_ModelType_Vit
 *        ViT model for Model Garden training with customizable hyperparameters.
 *        Best tailored to be used within Google Cloud, and cannot be exported
 *        externally. (Value: "VIT")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

/**
 *  If false, a single-label (multi-class) Model will be trained (i.e. assuming
 *  that for each image just up to one annotation may be applicable). If true, a
 *  multi-label Model will be trained (i.e. assuming that for each image
 *  multiple annotations may be applicable).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiLabel;

/** Trainer type for Vision TrainRequest. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter *tunableParameter;

/**
 *  The ID of `base` model for upTraining. If it is specified, the new model
 *  will be upTrained based on the `base` model for upTraining. Otherwise, the
 *  new model will be trained from scratch. The `base` model for upTraining must
 *  be in the same Project and Location as the new Model to train, and have the
 *  same modelType.
 */
@property(nonatomic, copy, nullable) NSString *uptrainBaseModelId;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata : GTLRObject

/**
 *  The actual training cost of creating this model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed inputs.budgetMilliNodeHours.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *costMilliNodeHours;

/**
 *  For successful job completions, this is the reason why the job has finished.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_BudgetReached
 *        The inputs.budgetMilliNodeHours had been reached. (Value:
 *        "BUDGET_REACHED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_ModelConverged
 *        Further training of the Model ceased to increase its quality, since it
 *        already has converged. (Value: "MODEL_CONVERGED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified
 *        Should not be set. (Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *successfulStopReason;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Image Object Detection
 *  Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs *inputs;

/** The metadata information */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs : GTLRObject

/**
 *  The training budget of creating this model, expressed in milli node hours
 *  i.e. 1,000 value in this field means 1 node hour. The actual
 *  metadata.costMilliNodeHours will be equal or less than this value. If
 *  further model training ceases to provide any improvements, it will stop
 *  without using the full budget and the metadata.successfulStopReason will be
 *  `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved.
 *  For modelType `cloud`(default), the budget must be between 20,000 and
 *  900,000 milli node hours, inclusive. The default value is 216,000 which
 *  represents one day in wall time, considering 9 nodes are used. For model
 *  types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`,
 *  `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and
 *  100,000 milli node hours, inclusive. The default value is 24,000 which
 *  represents one day in wall time on a single node that is used.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetMilliNodeHours;

/**
 *  Use the entire training budget. This disables the early stopping feature.
 *  When false the early stopping feature is enabled, which means that AutoML
 *  Image Object Detection might stop training before the entire training budget
 *  has been used.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableEarlyStopping;

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Cloud1
 *        A model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Compared to the CLOUD_HIGH_ACCURACY_1 and
 *        CLOUD_LOW_LATENCY_1 models above, it is expected to have higher
 *        prediction quality and lower latency. (Value: "CLOUD_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudHighAccuracy1
 *        A model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Expected to have a higher latency, but should also have a
 *        higher prediction quality than other cloud models. (Value:
 *        "CLOUD_HIGH_ACCURACY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudLowLatency1
 *        A model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Expected to have a low latency, but may have lower
 *        prediction quality than other cloud models. (Value:
 *        "CLOUD_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_CloudStreaming1
 *        A model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Expected to best support predictions in streaming with
 *        lower latency and lower prediction quality than other cloud models.
 *        (Value: "CLOUD_STREAMING_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfHighAccuracy1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) and used on a mobile
 *        or edge device with TensorFlow afterwards. Expected to have a higher
 *        latency, but should also have a higher prediction quality than other
 *        mobile models. (Value: "MOBILE_TF_HIGH_ACCURACY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfLowLatency1
 *        A model that, in addition to being available within Google Cloud can
 *        also be exported (see ModelService.ExportModel) and used on a mobile
 *        or edge device with TensorFlow afterwards. Expected to have low
 *        latency, but may have lower prediction quality than other mobile
 *        models. (Value: "MOBILE_TF_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_MobileTfVersatile1
 *        A model that, in addition to being available within Google Cloud can
 *        also be exported (see ModelService.ExportModel) and used on a mobile
 *        or edge device with TensorFlow afterwards. (Value:
 *        "MOBILE_TF_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Spinenet
 *        SpineNet for Model Garden training with customizable hyperparameters.
 *        Best tailored to be used within Google Cloud, and cannot be exported
 *        externally. (Value: "SPINENET")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs_ModelType_Yolo
 *        YOLO for Model Garden training with customizable hyperparameters. Best
 *        tailored to be used within Google Cloud, and cannot be exported
 *        externally. (Value: "YOLO")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

/** Trainer type for Vision TrainRequest. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter *tunableParameter;

/**
 *  The ID of `base` model for upTraining. If it is specified, the new model
 *  will be upTrained based on the `base` model for upTraining. Otherwise, the
 *  new model will be trained from scratch. The `base` model for upTraining must
 *  be in the same Project and Location as the new Model to train, and have the
 *  same modelType.
 */
@property(nonatomic, copy, nullable) NSString *uptrainBaseModelId;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata : GTLRObject

/**
 *  The actual training cost of creating this model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed inputs.budgetMilliNodeHours.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *costMilliNodeHours;

/**
 *  For successful job completions, this is the reason why the job has finished.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_BudgetReached
 *        The inputs.budgetMilliNodeHours had been reached. (Value:
 *        "BUDGET_REACHED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_ModelConverged
 *        Further training of the Model ceased to increase its quality, since it
 *        already has converged. (Value: "MODEL_CONVERGED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified
 *        Should not be set. (Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *successfulStopReason;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Image Segmentation Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs : GTLRObject

/**
 *  The ID of the `base` model. If it is specified, the new model will be
 *  trained based on the `base` model. Otherwise, the new model will be trained
 *  from scratch. The `base` model must be in the same Project and Location as
 *  the new Model to train, and have the same modelType.
 */
@property(nonatomic, copy, nullable) NSString *baseModelId;

/**
 *  The training budget of creating this model, expressed in milli node hours
 *  i.e. 1,000 value in this field means 1 node hour. The actual
 *  metadata.costMilliNodeHours will be equal or less than this value. If
 *  further model training ceases to provide any improvements, it will stop
 *  without using the full budget and the metadata.successfulStopReason will be
 *  `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved.
 *  Or actual_wall_clock_hours = train_budget_milli_node_hours /
 *  (number_of_nodes_involved * 1000) For modelType
 *  `cloud-high-accuracy-1`(default), the budget must be between 20,000 and
 *  2,000,000 milli node hours, inclusive. The default value is 192,000 which
 *  represents one day in wall time (1000 milli * 24 hours * 8 nodes).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetMilliNodeHours;

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_CloudHighAccuracy1
 *        A model to be used via prediction calls to uCAIP API. Expected to have
 *        a higher latency, but should also have a higher prediction quality
 *        than other models. (Value: "CLOUD_HIGH_ACCURACY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_CloudLowAccuracy1
 *        A model to be used via prediction calls to uCAIP API. Expected to have
 *        a lower latency but relatively lower prediction quality. (Value:
 *        "CLOUD_LOW_ACCURACY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_MobileTfLowLatency1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as TensorFlow model
 *        and used on a mobile or edge device afterwards. Expected to have low
 *        latency, but may have lower prediction quality than other mobile
 *        models. (Value: "MOBILE_TF_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata : GTLRObject

/**
 *  The actual training cost of creating this model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed inputs.budgetMilliNodeHours.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *costMilliNodeHours;

/**
 *  For successful job completions, this is the reason why the job has finished.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_BudgetReached
 *        The inputs.budgetMilliNodeHours had been reached. (Value:
 *        "BUDGET_REACHED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_ModelConverged
 *        Further training of the Model ceased to increase its quality, since it
 *        already has converged. (Value: "MODEL_CONVERGED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata_SuccessfulStopReason_SuccessfulStopReasonUnspecified
 *        Should not be set. (Value: "SUCCESSFUL_STOP_REASON_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *successfulStopReason;

@end


/**
 *  A wrapper class which contains the tunable parameters in an AutoML Image
 *  training job.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter : GTLRObject

/**
 *  Optional. An unique name of pretrained model checkpoint provided in model
 *  garden, it will be mapped to a GCS location internally.
 */
@property(nonatomic, copy, nullable) NSString *checkpointName;

/** Customizable dataset settings, used in the `model_garden_trainer`. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_DatasetConfig *datasetConfig;

/**
 *  Optioinal. StudySpec of hyperparameter tuning job. Required for
 *  `model_garden_trainer`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpec *studySpec;

/** Customizable trainer settings, used in the `model_garden_trainer`. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerConfig *trainerConfig;

/**
 *  trainerType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_AutomlTrainer
 *        Value "AUTOML_TRAINER"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_ModelGardenTrainer
 *        Value "MODEL_GARDEN_TRAINER"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerType_TrainerTypeUnspecified
 *        Default value. (Value: "TRAINER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trainerType;

@end


/**
 *  Customizable dataset settings, used in the `model_garden_trainer`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_DatasetConfig : GTLRObject
@end


/**
 *  Customizable trainer settings, used in the `model_garden_trainer`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter_TrainerConfig : GTLRObject
@end


/**
 *  A TrainingJob that trains and uploads an AutoML Tables Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs : GTLRObject

/** Additional experiment flags for the Tables training pipeline. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalExperiments;

/**
 *  Use the entire training budget. This disables the early stopping feature. By
 *  default, the early stopping feature is enabled, which means that AutoML
 *  Tables might stop training before the entire training budget has been used.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableEarlyStopping;

/**
 *  Configuration for exporting test set predictions to a BigQuery table. If
 *  this configuration is absent, then the export is not performed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig *exportEvaluatedDataItemsConfig;

/**
 *  Objective function the model is optimizing towards. The training process
 *  creates a model that maximizes/minimizes the value of the objective function
 *  over the validation set. The supported optimization objectives depend on the
 *  prediction type. If the field is not set, a default objective function is
 *  used. classification (binary): "maximize-au-roc" (default) - Maximize the
 *  area under the receiver operating characteristic (ROC) curve.
 *  "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the
 *  area under the precision-recall curve. "maximize-precision-at-recall" -
 *  Maximize precision for a specified recall value.
 *  "maximize-recall-at-precision" - Maximize recall for a specified precision
 *  value. classification (multi-class): "minimize-log-loss" (default) -
 *  Minimize log loss. regression: "minimize-rmse" (default) - Minimize
 *  root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute
 *  error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error
 *  (RMSLE).
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Required when optimization_objective is "maximize-recall-at-precision". Must
 *  be between 0 and 1, inclusive.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *optimizationObjectivePrecisionValue;

/**
 *  Required when optimization_objective is "maximize-precision-at-recall". Must
 *  be between 0 and 1, inclusive.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *optimizationObjectiveRecallValue;

/**
 *  The type of prediction the Model is to produce. "classification" - Predict
 *  one out of multiple target values is picked for each row. "regression" -
 *  Predict a value based on its relation to other values. This type is
 *  available only to columns that contain semantically numeric values, i.e.
 *  integers or floating point number, even if stored as e.g. strings.
 */
@property(nonatomic, copy, nullable) NSString *predictionType;

/** The column name of the target column that the model is to predict. */
@property(nonatomic, copy, nullable) NSString *targetColumn;

/**
 *  Required. The train budget of creating this model, expressed in milli node
 *  hours i.e. 1,000 value in this field means 1 node hour. The training cost of
 *  the model will not exceed this budget. The final cost will be attempted to
 *  be close to the budget, though may end up being (even) noticeably smaller -
 *  at the backend's discretion. This especially may happen when further model
 *  training ceases to provide any improvements. If the budget is set to a value
 *  known to be insufficient to train a model for the given dataset, the
 *  training won't be attempted and will error. The train budget must be between
 *  1,000 and 72,000 milli node hours, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainBudgetMilliNodeHours;

/**
 *  Each transformation will apply transform function to given input column. And
 *  the result will be used for training. When creating transformation for
 *  BigQuery Struct column, the column should be flattened using "." as the
 *  delimiter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation *> *transformations;

/**
 *  Column name that should be used as the weight column. Higher values in this
 *  column give more importance to the row during model training. The column
 *  must have numeric values between 0 and 10000 inclusively; 0 means the row is
 *  ignored for training. If weight column field is not set, then all rows are
 *  assumed to have equal weight of 1.
 */
@property(nonatomic, copy, nullable) NSString *weightColumnName;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation : GTLRObject

/**
 *  autoProperty
 *
 *  Remapped to 'autoProperty' to avoid language reserved word 'auto'.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation *autoProperty;

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation *categorical;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation *numeric;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation *repeatedCategorical;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation *repeatedNumeric;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation *repeatedText;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation *text;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation *timestamp;

@end


/**
 *  Training pipeline will infer the proper transformation based on the
 *  statistic of dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Treats the column as categorical array and performs following transformation
 *  functions. * For each element in the array, convert the category name to a
 *  dictionary lookup index and generate an embedding for each index. Combine
 *  the embedding of all elements into a single embedding using the mean. *
 *  Empty arrays treated as an embedding of zeroes.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  categorical string as is--no change to case, punctuation, spelling, tense,
 *  and so on. * Convert the category name to a dictionary lookup index and
 *  generate an embedding for each index. * Categories that appear less than 5
 *  times in the training dataset are treated as the "unknown" category. The
 *  "unknown" category gets its own special lookup index and resulting
 *  embedding.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Treats the column as numerical array and performs following transformation
 *  functions. * All transformations for Numerical types applied to the average
 *  of the all elements. * The average of empty arrays is treated as zero.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  If invalid values is allowed, the training pipeline will create a boolean
 *  feature that indicated whether the value is valid. Otherwise, the training
 *  pipeline will discard the input row from trainining data.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidValuesAllowed;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  value converted to float32. * The z_score of the value. * log(value+1) when
 *  the value is greater than or equal to 0. Otherwise, this transformation is
 *  not applied and the value is considered a missing value. * z_score of
 *  log(value+1) when the value is greater than or equal to 0. Otherwise, this
 *  transformation is not applied and the value is considered a missing value. *
 *  A boolean value that indicates whether the value is valid.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  If invalid values is allowed, the training pipeline will create a boolean
 *  feature that indicated whether the value is valid. Otherwise, the training
 *  pipeline will discard the input row from trainining data.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidValuesAllowed;

@end


/**
 *  Treats the column as text array and performs following transformation
 *  functions. * Concatenate all text values in the array into a single text
 *  value using a space (" ") as a delimiter, and then treat the result as a
 *  single text value. Apply the transformations for Text columns. * Empty
 *  arrays treated as an empty text.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  text as is--no change to case, punctuation, spelling, tense, and so on. *
 *  Tokenize text to words. Convert each words to a dictionary lookup index and
 *  generate an embedding for each index. Combine the embedding of all elements
 *  into a single embedding using the mean. * Tokenization is based on unicode
 *  script boundaries. * Missing values get their own lookup index and resulting
 *  embedding. * Stop-words receive no special treatment and are not removed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * Apply
 *  the transformation functions for Numerical columns. * Determine the year,
 *  month, day,and weekday. Treat each value from the * timestamp as a
 *  Categorical column. * Invalid numerical values (for example, values that
 *  fall outside of a typical timestamp range, or are extreme values) receive no
 *  special treatment and are not removed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  If invalid values is allowed, the training pipeline will create a boolean
 *  feature that indicated whether the value is valid. Otherwise, the training
 *  pipeline will discard the input row from trainining data.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidValuesAllowed;

/**
 *  The format in which that time field is expressed. The time_format must
 *  either be one of: * `unix-seconds` * `unix-milliseconds` *
 *  `unix-microseconds` * `unix-nanoseconds` (for respectively number of
 *  seconds, milliseconds, microseconds and nanoseconds since start of the Unix
 *  epoch); or be written in `strftime` syntax. If time_format is not set, then
 *  the default format is RFC 3339 `date-time` format, where `time-offset` =
 *  `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
 */
@property(nonatomic, copy, nullable) NSString *timeFormat;

@end


/**
 *  Model metadata specific to AutoML Tables.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata : GTLRObject

/** BigQuery destination uri for exported evaluated examples. */
@property(nonatomic, copy, nullable) NSString *evaluatedDataItemsBigqueryUri;

/**
 *  Output only. The actual training cost of the model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed the train budget.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainCostMilliNodeHours;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Text Classification Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs : GTLRObject

/**
 *  multiLabel
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiLabel;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Text Extraction Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs : GTLRObject
@end


/**
 *  A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs : GTLRObject

/**
 *  A sentiment is expressed as an integer ordinal, where higher value means a
 *  more positive sentiment. The range of sentiments that will be used is
 *  between 0 and sentimentMax (inclusive on both ends), and all the values in
 *  the range must be represented in the dataset before a model can be created.
 *  Only the Annotations with this sentimentMax will be used for training.
 *  sentimentMax value must be between 1 and 10 (inclusive).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sentimentMax;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Video Action Recognition
 *  Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs : GTLRObject

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_Cloud
 *        A model best tailored to be used within Google Cloud, and which c
 *        annot be exported. Default. (Value: "CLOUD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileCoralVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as a TensorFlow or
 *        TensorFlow Lite model and used on a Coral device afterwards. (Value:
 *        "MOBILE_CORAL_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileJetsonVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) to a Jetson device
 *        afterwards. (Value: "MOBILE_JETSON_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_MobileVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as a TensorFlow or
 *        TensorFlow Lite model and used on a mobile or edge device afterwards.
 *        (Value: "MOBILE_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Video Classification Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs : GTLRObject

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_Cloud
 *        A model best tailored to be used within Google Cloud, and which cannot
 *        be exported. Default. (Value: "CLOUD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_MobileJetsonVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) to a Jetson device
 *        afterwards. (Value: "MOBILE_JETSON_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_MobileVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as a TensorFlow or
 *        TensorFlow Lite model and used on a mobile or edge device afterwards.
 *        (Value: "MOBILE_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs *inputs;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs : GTLRObject

/**
 *  modelType
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_Cloud
 *        A model best tailored to be used within Google Cloud, and which c
 *        annot be exported. Default. (Value: "CLOUD")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileCoralLowLatency1
 *        A model that trades off quality for low latency, to be exported (see
 *        ModelService.ExportModel) and used on a Google Coral device. (Value:
 *        "MOBILE_CORAL_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileCoralVersatile1
 *        A versatile model that is meant to be exported (see
 *        ModelService.ExportModel) and used on a Google Coral device. (Value:
 *        "MOBILE_CORAL_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileJetsonLowLatency1
 *        A model that trades off quality for low latency, to be exported (see
 *        ModelService.ExportModel) and used on an NVIDIA Jetson device. (Value:
 *        "MOBILE_JETSON_LOW_LATENCY_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileJetsonVersatile1
 *        A versatile model that is meant to be exported (see
 *        ModelService.ExportModel) and used on an NVIDIA Jetson device. (Value:
 *        "MOBILE_JETSON_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_MobileVersatile1
 *        A model that, in addition to being available within Google Cloud, can
 *        also be exported (see ModelService.ExportModel) as a TensorFlow or
 *        TensorFlow Lite model and used on a mobile or edge device afterwards.
 *        (Value: "MOBILE_VERSATILE_1")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs_ModelType_ModelTypeUnspecified
 *        Should not be set. (Value: "MODEL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata : GTLRObject

/**
 *  The resource name of the CustomJob that has been created to carry out this
 *  custom task.
 */
@property(nonatomic, copy, nullable) NSString *backingCustomJob;

@end


/**
 *  A TrainingJob that trains a custom code Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask : GTLRObject

/** The input parameters of this CustomTask. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata *metadata;

@end


/**
 *  Configuration for exporting test set predictions to a BigQuery table.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig : GTLRObject

/**
 *  URI of desired destination BigQuery table. Expected format:
 *  `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are
 *  exported to the following auto-created BigQuery table:
 *  `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples`
 */
@property(nonatomic, copy, nullable) NSString *destinationBigqueryUri;

/**
 *  If true and an export destination is specified, then the contents of the
 *  destination are overwritten. Otherwise, if the export destination already
 *  exists, then the export operation fails.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *overrideExistingTable;

@end


/**
 *  Configuration that defines the hierarchical relationship of time series and
 *  parameters for hierarchical forecasting strategies.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig : GTLRObject

/**
 *  A list of time series attribute column names that define the time series
 *  hierarchy. Only one level of hierarchy is supported, ex. 'region' for a
 *  hierarchy of stores or 'department' for a hierarchy of products. If multiple
 *  columns are specified, time series will be grouped by their combined values,
 *  ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted.
 *  If no group columns are specified, all time series are considered to be part
 *  of the same group.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *groupColumns;

/**
 *  The weight of the loss for predictions aggregated over both the horizon and
 *  time series in the same hierarchy group.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groupTemporalTotalWeight;

/**
 *  The weight of the loss for predictions aggregated over time series in the
 *  same group.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groupTotalWeight;

/**
 *  The weight of the loss for predictions aggregated over the horizon for a
 *  single time series.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *temporalTotalWeight;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata : GTLRObject

/**
 *  The resource name of the HyperparameterTuningJob that has been created to
 *  carry out this HyperparameterTuning task.
 */
@property(nonatomic, copy, nullable) NSString *backingHyperparameterTuningJob;

/**
 *  The resource name of the CustomJob that has been created to run the best
 *  Trial of this HyperparameterTuning task.
 */
@property(nonatomic, copy, nullable) NSString *bestTrialBackingCustomJob;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec : GTLRObject

/**
 *  The number of failed Trials that need to be seen before failing the
 *  HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must
 *  fail before the whole job fails.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxFailedTrialCount;

/**
 *  The desired total number of Trials.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTrialCount;

/**
 *  The desired number of Trials to run in parallel.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *parallelTrialCount;

/** Study configuration of the HyperparameterTuningJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpec *studySpec;

/**
 *  The spec of a trial job. The same spec applies to the CustomJobs created in
 *  all the trials.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1CustomJobSpec *trialJobSpec;

@end


/**
 *  A TrainingJob that tunes Hypererparameters of a custom code Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask : GTLRObject

/** The input parameters of this HyperparameterTuningTask. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata *metadata;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Forecasting Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs : GTLRObject

/** Additional experiment flags for the time series forcasting training. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalExperiments;

/**
 *  Names of columns that are available and provided when a forecast is
 *  requested. These columns contain information for the given entity
 *  (identified by the time_series_identifier_column column) that is known at
 *  forecast. For example, predicted weather for a specific day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableAtForecastColumns;

/**
 *  The amount of time into the past training and prediction data is used for
 *  model training and prediction respectively. Expressed in number of units
 *  defined by the `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextWindow;

/** Expected difference in time granularity between rows in the data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity *dataGranularity;

/**
 *  Configuration for exporting test set predictions to a BigQuery table. If
 *  this configuration is absent, then the export is not performed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig *exportEvaluatedDataItemsConfig;

/**
 *  The amount of time into the future for which forecasted values for the
 *  target are returned. Expressed in number of units defined by the
 *  `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *forecastHorizon;

/**
 *  Configuration that defines the hierarchical relationship of time series and
 *  parameters for hierarchical forecasting strategies.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig *hierarchyConfig;

/**
 *  The geographical region based on which the holiday effect is applied in
 *  modeling by adding holiday categorical array feature that include all
 *  holidays matching the date. This option only allowed when data_granularity
 *  is day. By default, holiday effect modeling is disabled. To turn it on,
 *  specify the holiday region using this option.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *holidayRegions;

/**
 *  Objective function the model is optimizing towards. The training process
 *  creates a model that optimizes the value of the objective function over the
 *  validation set. The supported optimization objectives: * "minimize-rmse"
 *  (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
 *  Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize
 *  root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize
 *  root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize
 *  the combination of weighted absolute percentage error (WAPE) and
 *  mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the
 *  quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" -
 *  Minimize the mean absolute percentage error.
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to
 *  5 quantiles are allowed of values between 0 and 1, exclusive. Required if
 *  the value of optimization_objective is minimize-quantile-loss. Represents
 *  the percent quantiles to use for that objective. Quantiles must be unique.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantiles;

/**
 *  The name of the column that the Model is to predict values for. This column
 *  must be unavailable at forecast.
 */
@property(nonatomic, copy, nullable) NSString *targetColumn;

/**
 *  The name of the column that identifies time order in the time series. This
 *  column must be available at forecast.
 */
@property(nonatomic, copy, nullable) NSString *timeColumn;

/**
 *  Column names that should be used as attribute columns. The value of these
 *  columns does not vary as a function of time. For example, store ID or item
 *  color.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *timeSeriesAttributeColumns;

/** The name of the column that identifies the time series. */
@property(nonatomic, copy, nullable) NSString *timeSeriesIdentifierColumn;

/**
 *  Required. The train budget of creating this model, expressed in milli node
 *  hours i.e. 1,000 value in this field means 1 node hour. The training cost of
 *  the model will not exceed this budget. The final cost will be attempted to
 *  be close to the budget, though may end up being (even) noticeably smaller -
 *  at the backend's discretion. This especially may happen when further model
 *  training ceases to provide any improvements. If the budget is set to a value
 *  known to be insufficient to train a model for the given dataset, the
 *  training won't be attempted and will error. The train budget must be between
 *  1,000 and 72,000 milli node hours, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainBudgetMilliNodeHours;

/**
 *  Each transformation will apply transform function to given input column. And
 *  the result will be used for training. When creating transformation for
 *  BigQuery Struct column, the column should be flattened using "." as the
 *  delimiter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation *> *transformations;

/**
 *  Names of columns that are unavailable when a forecast is requested. This
 *  column contains information for the given entity (identified by the
 *  time_series_identifier_column) that is unknown before the forecast For
 *  example, actual weather on a given day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unavailableAtForecastColumns;

/**
 *  Validation options for the data validation component. The available options
 *  are: * "fail-pipeline" - default, will validate against the validation and
 *  fail the pipeline if it fails. * "ignore-validation" - ignore the results of
 *  the validation and continue
 */
@property(nonatomic, copy, nullable) NSString *validationOptions;

/**
 *  Column name that should be used as the weight column. Higher values in this
 *  column give more importance to the row during model training. The column
 *  must have numeric values between 0 and 10000 inclusively; 0 means the row is
 *  ignored for training. If weight column field is not set, then all rows are
 *  assumed to have equal weight of 1. This column must be available at
 *  forecast.
 */
@property(nonatomic, copy, nullable) NSString *weightColumn;

/** Config containing strategy for generating sliding windows. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig *windowConfig;

@end


/**
 *  A duration of time expressed in time granularity units.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity : GTLRObject

/**
 *  The number of granularity_units between data points in the training data. If
 *  `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
 *  values of `granularity_unit`, must be 1.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The time granularity unit of this time period. The supported units are: *
 *  "minute" * "hour" * "day" * "week" * "month" * "year"
 */
@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation : GTLRObject

/**
 *  autoProperty
 *
 *  Remapped to 'autoProperty' to avoid language reserved word 'auto'.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation *autoProperty;

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation *categorical;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation *numeric;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation *text;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation *timestamp;

@end


/**
 *  Training pipeline will infer the proper transformation based on the
 *  statistic of dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  categorical string as is--no change to case, punctuation, spelling, tense,
 *  and so on. * Convert the category name to a dictionary lookup index and
 *  generate an embedding for each index. * Categories that appear less than 5
 *  times in the training dataset are treated as the "unknown" category. The
 *  "unknown" category gets its own special lookup index and resulting
 *  embedding.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  value converted to float32. * The z_score of the value. * log(value+1) when
 *  the value is greater than or equal to 0. Otherwise, this transformation is
 *  not applied and the value is considered a missing value. * z_score of
 *  log(value+1) when the value is greater than or equal to 0. Otherwise, this
 *  transformation is not applied and the value is considered a missing value.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  text as is--no change to case, punctuation, spelling, tense, and so on. *
 *  Convert the category name to a dictionary lookup index and generate an
 *  embedding for each index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * Apply
 *  the transformation functions for Numerical columns. * Determine the year,
 *  month, day,and weekday. Treat each value from the timestamp as a Categorical
 *  column. * Invalid numerical values (for example, values that fall outside of
 *  a typical timestamp range, or are extreme values) receive no special
 *  treatment and are not removed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  The format in which that time field is expressed. The time_format must
 *  either be one of: * `unix-seconds` * `unix-milliseconds` *
 *  `unix-microseconds` * `unix-nanoseconds` (for respectively number of
 *  seconds, milliseconds, microseconds and nanoseconds since start of the Unix
 *  epoch); or be written in `strftime` syntax. If time_format is not set, then
 *  the default format is RFC 3339 `date-time` format, where `time-offset` =
 *  `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
 */
@property(nonatomic, copy, nullable) NSString *timeFormat;

@end


/**
 *  Model metadata specific to Seq2Seq Plus Forecasting.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata : GTLRObject

/** BigQuery destination uri for exported evaluated examples. */
@property(nonatomic, copy, nullable) NSString *evaluatedDataItemsBigqueryUri;

/**
 *  Output only. The actual training cost of the model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed the train budget.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainCostMilliNodeHours;

@end


/**
 *  A TrainingJob that trains and uploads an AutoML Forecasting Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting : GTLRObject

/** The input parameters of this TrainingJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs *inputs;

/** The metadata information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata *metadata;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs : GTLRObject

/** Additional experiment flags for the time series forcasting training. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalExperiments;

/**
 *  Names of columns that are available and provided when a forecast is
 *  requested. These columns contain information for the given entity
 *  (identified by the time_series_identifier_column column) that is known at
 *  forecast. For example, predicted weather for a specific day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableAtForecastColumns;

/**
 *  The amount of time into the past training and prediction data is used for
 *  model training and prediction respectively. Expressed in number of units
 *  defined by the `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextWindow;

/** Expected difference in time granularity between rows in the data. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity *dataGranularity;

/**
 *  Configuration for exporting test set predictions to a BigQuery table. If
 *  this configuration is absent, then the export is not performed.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig *exportEvaluatedDataItemsConfig;

/**
 *  The amount of time into the future for which forecasted values for the
 *  target are returned. Expressed in number of units defined by the
 *  `data_granularity` field.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *forecastHorizon;

/**
 *  Configuration that defines the hierarchical relationship of time series and
 *  parameters for hierarchical forecasting strategies.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig *hierarchyConfig;

/**
 *  The geographical region based on which the holiday effect is applied in
 *  modeling by adding holiday categorical array feature that include all
 *  holidays matching the date. This option only allowed when data_granularity
 *  is day. By default, holiday effect modeling is disabled. To turn it on,
 *  specify the holiday region using this option.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *holidayRegions;

/**
 *  Objective function the model is optimizing towards. The training process
 *  creates a model that optimizes the value of the objective function over the
 *  validation set. The supported optimization objectives: * "minimize-rmse"
 *  (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
 *  Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize
 *  root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize
 *  root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize
 *  the combination of weighted absolute percentage error (WAPE) and
 *  mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the
 *  quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" -
 *  Minimize the mean absolute percentage error.
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to
 *  5 quantiles are allowed of values between 0 and 1, exclusive. Required if
 *  the value of optimization_objective is minimize-quantile-loss. Represents
 *  the percent quantiles to use for that objective. Quantiles must be unique.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *quantiles;

/**
 *  The name of the column that the Model is to predict values for. This column
 *  must be unavailable at forecast.
 */
@property(nonatomic, copy, nullable) NSString *targetColumn;

/**
 *  The name of the column that identifies time order in the time series. This
 *  column must be available at forecast.
 */
@property(nonatomic, copy, nullable) NSString *timeColumn;

/**
 *  Column names that should be used as attribute columns. The value of these
 *  columns does not vary as a function of time. For example, store ID or item
 *  color.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *timeSeriesAttributeColumns;

/** The name of the column that identifies the time series. */
@property(nonatomic, copy, nullable) NSString *timeSeriesIdentifierColumn;

/**
 *  Required. The train budget of creating this model, expressed in milli node
 *  hours i.e. 1,000 value in this field means 1 node hour. The training cost of
 *  the model will not exceed this budget. The final cost will be attempted to
 *  be close to the budget, though may end up being (even) noticeably smaller -
 *  at the backend's discretion. This especially may happen when further model
 *  training ceases to provide any improvements. If the budget is set to a value
 *  known to be insufficient to train a model for the given dataset, the
 *  training won't be attempted and will error. The train budget must be between
 *  1,000 and 72,000 milli node hours, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainBudgetMilliNodeHours;

/**
 *  Each transformation will apply transform function to given input column. And
 *  the result will be used for training. When creating transformation for
 *  BigQuery Struct column, the column should be flattened using "." as the
 *  delimiter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation *> *transformations;

/**
 *  Names of columns that are unavailable when a forecast is requested. This
 *  column contains information for the given entity (identified by the
 *  time_series_identifier_column) that is unknown before the forecast For
 *  example, actual weather on a given day.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unavailableAtForecastColumns;

/**
 *  Validation options for the data validation component. The available options
 *  are: * "fail-pipeline" - default, will validate against the validation and
 *  fail the pipeline if it fails. * "ignore-validation" - ignore the results of
 *  the validation and continue
 */
@property(nonatomic, copy, nullable) NSString *validationOptions;

/**
 *  Column name that should be used as the weight column. Higher values in this
 *  column give more importance to the row during model training. The column
 *  must have numeric values between 0 and 10000 inclusively; 0 means the row is
 *  ignored for training. If weight column field is not set, then all rows are
 *  assumed to have equal weight of 1. This column must be available at
 *  forecast.
 */
@property(nonatomic, copy, nullable) NSString *weightColumn;

/** Config containing strategy for generating sliding windows. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig *windowConfig;

@end


/**
 *  A duration of time expressed in time granularity units.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity : GTLRObject

/**
 *  The number of granularity_units between data points in the training data. If
 *  `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
 *  values of `granularity_unit`, must be 1.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The time granularity unit of this time period. The supported units are: *
 *  "minute" * "hour" * "day" * "week" * "month" * "year"
 */
@property(nonatomic, copy, nullable) NSString *unit;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation : GTLRObject

/**
 *  autoProperty
 *
 *  Remapped to 'autoProperty' to avoid language reserved word 'auto'.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation *autoProperty;

@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation *categorical;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation *numeric;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation *text;
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation *timestamp;

@end


/**
 *  Training pipeline will infer the proper transformation based on the
 *  statistic of dataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  categorical string as is--no change to case, punctuation, spelling, tense,
 *  and so on. * Convert the category name to a dictionary lookup index and
 *  generate an embedding for each index. * Categories that appear less than 5
 *  times in the training dataset are treated as the "unknown" category. The
 *  "unknown" category gets its own special lookup index and resulting
 *  embedding.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  value converted to float32. * The z_score of the value. * log(value+1) when
 *  the value is greater than or equal to 0. Otherwise, this transformation is
 *  not applied and the value is considered a missing value. * z_score of
 *  log(value+1) when the value is greater than or equal to 0. Otherwise, this
 *  transformation is not applied and the value is considered a missing value.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * The
 *  text as is--no change to case, punctuation, spelling, tense, and so on. *
 *  Convert the category name to a dictionary lookup index and generate an
 *  embedding for each index.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

@end


/**
 *  Training pipeline will perform following transformation functions. * Apply
 *  the transformation functions for Numerical columns. * Determine the year,
 *  month, day,and weekday. Treat each value from the timestamp as a Categorical
 *  column. * Invalid numerical values (for example, values that fall outside of
 *  a typical timestamp range, or are extreme values) receive no special
 *  treatment and are not removed.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation : GTLRObject

@property(nonatomic, copy, nullable) NSString *columnName;

/**
 *  The format in which that time field is expressed. The time_format must
 *  either be one of: * `unix-seconds` * `unix-milliseconds` *
 *  `unix-microseconds` * `unix-nanoseconds` (for respectively number of
 *  seconds, milliseconds, microseconds and nanoseconds since start of the Unix
 *  epoch); or be written in `strftime` syntax. If time_format is not set, then
 *  the default format is RFC 3339 `date-time` format, where `time-offset` =
 *  `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
 */
@property(nonatomic, copy, nullable) NSString *timeFormat;

@end


/**
 *  Model metadata specific to TFT Forecasting.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata : GTLRObject

/** BigQuery destination uri for exported evaluated examples. */
@property(nonatomic, copy, nullable) NSString *evaluatedDataItemsBigqueryUri;

/**
 *  Output only. The actual training cost of the model, expressed in milli node
 *  hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
 *  exceed the train budget.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainCostMilliNodeHours;

@end


/**
 *  Config that contains the strategy used to generate sliding windows in time
 *  series training. A window is a series of rows that comprise the context up
 *  to the time of prediction, and the horizon following. The corresponding row
 *  for each window marks the start of the forecast horizon. Each window is used
 *  as an input example for training/evaluation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig : GTLRObject

/**
 *  Name of the column that should be used to generate sliding windows. The
 *  column should contain either booleans or string booleans; if the value of
 *  the row is True, generate a sliding window with the horizon starting at that
 *  row. The column will not be used as a feature in training.
 */
@property(nonatomic, copy, nullable) NSString *column;

/**
 *  Maximum number of windows that should be generated across all time series.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxCount;

/**
 *  Stride length used to generate input examples. Within one time series, every
 *  {$STRIDE_LENGTH} rows will be used to generate a sliding window.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *strideLength;

@end


/**
 *  A vertex represents a 2D point in the image. NOTE: the normalized vertex
 *  coordinates are relative to the original image and range from 0 to 1.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVertex : GTLRObject

/**
 *  X coordinate.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Y coordinate.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  Annotation details specific to video action recognition.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  This Annotation applies to the time period represented by the TimeSegment.
 *  If it's not set, the Annotation applies to the whole video.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSegment *timeSegment;

@end


/**
 *  Annotation details specific to video classification.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  This Annotation applies to the time period represented by the TimeSegment.
 *  If it's not set, the Annotation applies to the whole video.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SchemaTimeSegment *timeSegment;

@end


/**
 *  Payload of Video DataItem.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVideoDataItem : GTLRObject

/**
 *  Required. Google Cloud Storage URI points to the original video in user's
 *  bucket. The video is up to 50 GB in size and up to 3 hour in duration.
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

/**
 *  Output only. The mime type of the content of the video. Only the videos in
 *  below listed mime types are supported. Supported mime_type: - video/mp4 -
 *  video/avi - video/quicktime
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

@end


/**
 *  The metadata of Datasets that contain Video DataItems.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVideoDatasetMetadata : GTLRObject

/**
 *  Points to a YAML file stored on Google Cloud Storage describing payload of
 *  the Video DataItems that belong to this Dataset.
 */
@property(nonatomic, copy, nullable) NSString *dataItemSchemaUri;

/**
 *  Google Cloud Storage Bucket name that contains the blob data of this
 *  Dataset.
 */
@property(nonatomic, copy, nullable) NSString *gcsBucket;

@end


/**
 *  Annotation details specific to video object tracking.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation : GTLRObject

/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
@property(nonatomic, copy, nullable) NSString *annotationSpecId;

/**
 *  The display name of the AnnotationSpec that this Annotation pertains to.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The instance of the object, expressed as a positive integer. Used to track
 *  the same object across different frames.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *instanceId;

/**
 *  A time (frame) of a video to which this annotation pertains. Represented as
 *  the duration since the video's start.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeOffset;

/**
 *  The rightmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMax;

/**
 *  The leftmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *xMin;

/**
 *  The bottommost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMax;

/**
 *  The topmost coordinate of the bounding box.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yMin;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata : GTLRObject

/**
 *  Whether or not the classification label is multi_label.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiLabel;

@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata : GTLRObject
@end


/**
 *  Response message for DatasetService.SearchDataItems.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataItemViews" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchDataItemsResponse : GTLRCollectionObject

/**
 *  The DataItemViews read.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1DataItemView *> *dataItemViews;

/**
 *  A token to retrieve next page of results. Pass to
 *  SearchDataItemsRequest.page_token to obtain that page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Google search entry point.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchEntryPoint : GTLRObject

/**
 *  Optional. Web content snippet that can be embedded in a web page or an app
 *  webview.
 */
@property(nonatomic, copy, nullable) NSString *renderedContent;

/**
 *  Optional. Base64 encoded JSON representing array of tuple.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *sdkBlob;

@end


/**
 *  Response message for FeaturestoreService.SearchFeatures.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "features" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchFeaturesResponse : GTLRCollectionObject

/**
 *  The Features matching the request. Fields returned: * `name` * `description`
 *  * `labels` * `create_time` * `update_time`
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Feature *> *features;

/**
 *  A token, which can be sent as SearchFeaturesRequest.page_token to retrieve
 *  the next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Request message for MigrationService.SearchMigratableResources.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesRequest : GTLRObject

/**
 *  A filter for your search. You can use the following types of filters: *
 *  Resource type filters. The following strings filter for a specific type of
 *  MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` *
 *  `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters.
 *  The following strings filter for resources that either have or have not
 *  already been migrated: * `last_migrate_time:*` filters for migrated
 *  resources. * `NOT last_migrate_time:*` filters for not yet migrated
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The standard page size. The default and maximum value is 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/** The standard page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

@end


/**
 *  Response message for MigrationService.SearchMigratableResources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "migratableResources" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesResponse : GTLRCollectionObject

/**
 *  All migratable resources that can be migrated to the location specified in
 *  the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1MigratableResource *> *migratableResources;

/**
 *  The standard next-page token. The migratable_resources may not fill
 *  page_size in SearchMigratableResourcesRequest even when there are subsequent
 *  pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Request message for
 *  JobService.SearchModelDeploymentMonitoringStatsAnomalies.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest : GTLRObject

/**
 *  Required. The DeployedModel ID of the
 *  [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
 */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  The latest timestamp of stats being generated. If not set, indicates feching
 *  stats till the latest possible one.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The feature display name. If specified, only return the stats belonging to
 *  this feature. Format:
 *  ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name,
 *  example: "user_destination".
 */
@property(nonatomic, copy, nullable) NSString *featureDisplayName;

/** Required. Objectives of the stats to retrieve. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective *> *objectives;

/**
 *  The standard list page size.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token received from a previous
 *  JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The earliest timestamp of stats being generated. If not set, indicates
 *  fetching stats till the earliest possible one.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Stats requested for specific objective.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective : GTLRObject

/**
 *  If set, all attribution scores between
 *  SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and
 *  SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched,
 *  and page token doesn't take effect in this case. Only used to retrieve
 *  attribution score for the top Features which has the highest attribution
 *  score in the latest monitoring run.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topFeatureCount;

/**
 *  type
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_FeatureAttributionDrift
 *        Feature attribution scores to detect skew between Prediction datasets
 *        collected within different time windows. (Value:
 *        "FEATURE_ATTRIBUTION_DRIFT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_FeatureAttributionSkew
 *        Feature attribution scores to detect skew between Training-Prediction
 *        datasets. (Value: "FEATURE_ATTRIBUTION_SKEW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_ModelDeploymentMonitoringObjectiveTypeUnspecified
 *        Default value, should not be set. (Value:
 *        "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_RawFeatureDrift
 *        Raw feature values' stats to detect drift between Serving-Prediction
 *        datasets. (Value: "RAW_FEATURE_DRIFT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective_Type_RawFeatureSkew
 *        Raw feature values' stats to detect skew between Training-Prediction
 *        datasets. (Value: "RAW_FEATURE_SKEW")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Response message for
 *  JobService.SearchModelDeploymentMonitoringStatsAnomalies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "monitoringStats" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse : GTLRCollectionObject

/**
 *  Stats retrieved for requested objectives. There are at most 1000
 *  ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats
 *  in the response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies *> *monitoringStats;

/**
 *  The page token that can be used by the next
 *  JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The request message for FeatureOnlineStoreService.SearchNearestEntities.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesRequest : GTLRObject

/** Required. The query. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborQuery *query;

/**
 *  Optional. If set to true, the full entities (including all vector values and
 *  metadata) of the nearest neighbors are returned; otherwise only entity id of
 *  the nearest neighbors will be returned. Note that returning full entities
 *  will significantly increase the latency and cost of the query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnFullEntity;

@end


/**
 *  Response message for FeatureOnlineStoreService.SearchNearestEntities
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesResponse : GTLRObject

/** The nearest neighbors of the query entity. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighbors *nearestNeighbors;

@end


/**
 *  Segment of the content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Segment : GTLRObject

/**
 *  Output only. End index in the given Part, measured in bytes. Offset from the
 *  start of the Part, exclusive, starting at zero.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/**
 *  Output only. The index of a Part object within its parent Content object.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partIndex;

/**
 *  Output only. Start index in the given Part, measured in bytes. Offset from
 *  the start of the Part, inclusive, starting at zero.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

/** Output only. The text corresponding to the segment from the response. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Configuration for the use of custom service account to run the workloads.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ServiceAccountSpec : GTLRObject

/**
 *  Required. If true, custom user-managed service account is enforced to run
 *  any workloads (for example, Vertex Jobs) on the resource. Otherwise, uses
 *  the [Vertex AI Custom Code Service
 *  Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableCustomServiceAccount;

/**
 *  Optional. Required when all below conditions are met *
 *  `enable_custom_service_account` is true; * any runtime is specified via
 *  `ResourceRuntimeSpec` on creation time, for example, Ray The users must have
 *  `iam.serviceAccounts.actAs` permission on this service account and then the
 *  specified runtime containers will run as it. Do not set this field if you
 *  want to submit jobs using custom service account to this PersistentResource
 *  after creation, but only specify the `service_account` inside the job.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

@end


/**
 *  A set of Shielded Instance options. See [Images using supported Shielded VM
 *  features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ShieldedVmConfig : GTLRObject

/**
 *  Defines whether the instance has [Secure
 *  Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot)
 *  enabled. Secure Boot helps ensure that the system only runs authentic
 *  software by verifying the digital signature of all boot components, and
 *  halting the boot process if signature verification fails.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSecureBoot;

@end


/**
 *  Config for SmoothGrad approximation of gradients. When enabled, the
 *  gradients are approximated by averaging the gradients from noisy samples in
 *  the vicinity of the inputs. Adding noise can help improve the computed
 *  gradients. Refer to this paper for more details:
 *  https://arxiv.org/pdf/1706.03825.pdf
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SmoothGradConfig : GTLRObject

/**
 *  This is similar to noise_sigma, but provides additional flexibility. A
 *  separate noise sigma can be provided for each feature, which is useful if
 *  their distributions are different. No noise is added to features that are
 *  not set. If this field is unset, noise_sigma will be used for all features.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureNoiseSigma *featureNoiseSigma;

/**
 *  This is a single float value and will be used to add noise to all the
 *  features. Use this field when all features are normalized to have the same
 *  distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features
 *  are normalized to have 0-mean and 1-variance. Learn more about
 *  [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization).
 *  For best results the recommended value is about 10% - 20% of the standard
 *  deviation of the input feature. Refer to section 3.2 of the SmoothGrad
 *  paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the
 *  distribution is different per feature, set feature_noise_sigma instead for
 *  each feature.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noiseSigma;

/**
 *  The number of gradient samples to use for approximation. The higher this
 *  number, the more accurate the gradient is, but the runtime complexity
 *  increases by this factor as well. Valid range of its value is [1, 50].
 *  Defaults to 3.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noisySampleCount;

@end


/**
 *  SpecialistPool represents customers' own workforce to work on their data
 *  labeling jobs. It includes a group of specialist managers and workers.
 *  Managers are responsible for managing the workers in this pool as well as
 *  customers' data labeling jobs associated with this pool. Customers create
 *  specialist pool as well as start data labeling jobs on Cloud, managers and
 *  workers handle the jobs using CrowdCompute console.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool : GTLRObject

/**
 *  Required. The user-defined name of the SpecialistPool. The name can be up to
 *  128 characters long and can consist of any UTF-8 characters. This field
 *  should be unique on project-level.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Required. The resource name of the SpecialistPool. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The resource name of the pending data labeling jobs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pendingDataLabelingJobs;

/** The email addresses of the managers in the SpecialistPool. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *specialistManagerEmails;

/**
 *  Output only. The number of managers in this SpecialistPool.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *specialistManagersCount;

/** The email addresses of workers in the SpecialistPool. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *specialistWorkerEmails;

@end


/**
 *  Metadata information for NotebookService.StartNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StartNotebookRuntimeOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  A human-readable message that shows the intermediate progress details of
 *  NotebookRuntime.
 */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for NotebookService.StartNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StartNotebookRuntimeRequest : GTLRObject
@end


/**
 *  Request message for VizierService.StopTrial.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StopTrialRequest : GTLRObject
@end


/**
 *  Assigns input data to the training, validation, and test sets so that the
 *  distribution of values found in the categorical column (as specified by the
 *  `key` field) is mirrored within each split. The fraction values determine
 *  the relative sizes of the splits. For example, if the specified column has
 *  three values, with 50% of the rows having value "A", 25% value "B", and 25%
 *  value "C", and the split fractions are specified as 80/10/10, then the
 *  training set will constitute 80% of the training data, with about 50% of the
 *  training set rows having the value "A" for the specified column, about 25%
 *  having the value "B", and about 25% having the value "C". Only the top 500
 *  occurring values are used; any values not in the top 500 values are randomly
 *  assigned to a split. If less than three rows contain a specific value, those
 *  rows are randomly assigned. Supported only for tabular Datasets.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StratifiedSplit : GTLRObject

/**
 *  Required. The key is a name of one of the Dataset's data columns. The key
 *  provided must be for a categorical column.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The fraction of the input data that is to be used to evaluate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testFraction;

/**
 *  The fraction of the input data that is to be used to train the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingFraction;

/**
 *  The fraction of the input data that is to be used to validate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationFraction;

@end


/**
 *  Request message for PredictionService.StreamingPredict. The first message
 *  must contain endpoint field and optionally input. The subsequent messages
 *  must contain input.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest : GTLRObject

/** The prediction input. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensor *> *inputs;

/** The parameters that govern the prediction. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensor *parameters;

@end


/**
 *  Response message for PredictionService.StreamingPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictResponse : GTLRObject

/** The prediction output. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensor *> *outputs;

/** The parameters that govern the prediction. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensor *parameters;

@end


/**
 *  Request message for
 *  FeaturestoreOnlineServingService.StreamingFeatureValuesRead.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest : GTLRObject

/**
 *  Required. IDs of entities to read Feature values of. The maximum number of
 *  IDs is 100. For example, for a machine learning model predicting user clicks
 *  on a website, an entity ID could be `user_123`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entityIds;

/**
 *  Required. Selector choosing Features of the target EntityType. Feature IDs
 *  will be deduplicated.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureSelector *featureSelector;

@end


/**
 *  Request message for PredictionService.StreamRawPredict.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest : GTLRObject

/** The prediction input. Supports HTTP headers and arbitrary data payload. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleApiHttpBody *httpBody;

@end


/**
 *  A list of string values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StringArray : GTLRObject

/** A list of string values. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  One field of a Struct (or object) type feature value.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StructFieldValue : GTLRObject

/** Name of the field in the struct feature. */
@property(nonatomic, copy, nullable) NSString *name;

/** The value for this field. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue *value;

@end


/**
 *  Struct (or object) type feature value.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StructValue : GTLRObject

/** A list of field values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1StructFieldValue *> *values;

@end


/**
 *  A message representing a Study.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Study : GTLRObject

/** Output only. Time at which the study was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Required. Describes the Study, default value is empty string. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. A human readable reason why the Study is inactive. This should
 *  be empty if a study is ACTIVE or COMPLETED.
 */
@property(nonatomic, copy, nullable) NSString *inactiveReason;

/**
 *  Output only. The name of a study. The study's globally unique identifier.
 *  Format: `projects/{project}/locations/{location}/studies/{study}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The detailed state of a Study.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Active The
 *        study is active. (Value: "ACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Completed The
 *        study is done when the service exhausts the parameter search space or
 *        max_trial_count is reached. (Value: "COMPLETED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_Inactive The
 *        study is stopped due to an internal error. (Value: "INACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Study_State_StateUnspecified
 *        The study state is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Required. Configuration of the Study. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpec *studySpec;

@end


/**
 *  Represents specification of a Study.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpec : GTLRObject

/**
 *  The search algorithm specified for the Study.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_AlgorithmUnspecified
 *        The default algorithm used by Vertex AI for [hyperparameter
 *        tuning](https://cloud.google.com/vertex-ai/docs/training/hyperparameter-tuning-overview)
 *        and [Vertex AI
 *        Vizier](https://cloud.google.com/vertex-ai/docs/vizier). (Value:
 *        "ALGORITHM_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_GridSearch
 *        Simple grid search within the feasible space. To use grid search, all
 *        parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`. (Value:
 *        "GRID_SEARCH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_Algorithm_RandomSearch
 *        Simple random search within the feasible space. (Value:
 *        "RANDOM_SEARCH")
 */
@property(nonatomic, copy, nullable) NSString *algorithm;

/** The automated early stopping spec using convex stopping rule. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec *convexAutomatedStoppingSpec;

/** The automated early stopping spec using decay curve rule. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec *decayCurveStoppingSpec;

/**
 *  Describe which measurement selection type will be used
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_BestMeasurement
 *        Use the best measurement reported. (Value: "BEST_MEASUREMENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_LastMeasurement
 *        Use the last measurement reported. (Value: "LAST_MEASUREMENT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_MeasurementSelectionType_MeasurementSelectionTypeUnspecified
 *        Will be treated as LAST_MEASUREMENT. (Value:
 *        "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *measurementSelectionType;

/** The automated early stopping spec using median rule. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec *medianAutomatedStoppingSpec;

/** Required. Metric specs for the Study. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec *> *metrics;

/**
 *  The observation noise level of the study. Currently only supported by the
 *  Vertex AI Vizier service. Not supported by HyperparameterTuningJob or
 *  TrainingPipeline.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_High
 *        Vertex AI will estimate the amount of noise in metric evaluations, it
 *        may repeat the same Trial parameters more than once. (Value: "HIGH")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_Low
 *        Vertex AI assumes that the objective function is (nearly) perfectly
 *        reproducible, and will never repeat the same Trial parameters. (Value:
 *        "LOW")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpec_ObservationNoise_ObservationNoiseUnspecified
 *        The default noise level chosen by Vertex AI. (Value:
 *        "OBSERVATION_NOISE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *observationNoise;

/** Required. The set of parameters to tune. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec *> *parameters;

/**
 *  Conditions for automated stopping of a Study. Enable automated stopping by
 *  configuring at least one condition.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecStudyStoppingConfig *studyStoppingConfig;

@end


/**
 *  Configuration for ConvexAutomatedStoppingSpec. When there are enough
 *  completed trials (configured by min_measurement_count), for pending trials
 *  with enough measurements and steps, the policy first computes an
 *  overestimate of the objective value at max_num_steps according to the slope
 *  of the incomplete objective value curve. No prediction can be made if the
 *  curve is completely flat. If the overestimation is worse than the best
 *  objective value of the completed trials, this pending trial will be
 *  early-stopped, but a last measurement will be added to the pending trial
 *  with max_num_steps and predicted objective value from the autoregression
 *  model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec : GTLRObject

/**
 *  The hyper-parameter name used in the tuning job that stands for learning
 *  rate. Leave it blank if learning rate is not in a parameter in tuning. The
 *  learning_rate is used to estimate the objective value of the ongoing trial.
 */
@property(nonatomic, copy, nullable) NSString *learningRateParameterName;

/**
 *  Steps used in predicting the final objective for early stopped trials. In
 *  general, it's set to be the same as the defined steps in training / tuning.
 *  If not defined, it will learn it from the completed trials. When use_steps
 *  is false, this field is set to the maximum elapsed seconds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxStepCount;

/**
 *  The minimal number of measurements in a Trial. Early-stopping checks will
 *  not trigger if less than min_measurement_count+1 completed trials or pending
 *  trials with less than min_measurement_count measurements. If not defined,
 *  the default value is 5.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minMeasurementCount;

/**
 *  Minimum number of steps for a trial to complete. Trials which do not have a
 *  measurement with step_count > min_step_count won't be considered for early
 *  stopping. It's ok to set it to 0, and a trial can be early stopped at any
 *  stage. By default, min_step_count is set to be one-tenth of the
 *  max_step_count. When use_elapsed_duration is true, this field is set to the
 *  minimum elapsed seconds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minStepCount;

/**
 *  ConvexAutomatedStoppingSpec by default only updates the trials that needs to
 *  be early stopped using a newly trained auto-regressive model. When this flag
 *  is set to True, all stopped trials from the beginning are potentially
 *  updated in terms of their `final_measurement`. Also, note that the training
 *  logic of autoregressive models is different in this case. Enabling this
 *  option has shown better results and this may be the default option in the
 *  future.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *updateAllStoppedTrials;

/**
 *  This bool determines whether or not the rule is applied based on
 *  elapsed_secs or steps. If use_elapsed_duration==false, the early stopping
 *  decision is made according to the predicted objective values according to
 *  the target steps. If use_elapsed_duration==true, elapsed_secs is used
 *  instead of steps. Also, in this case, the parameters max_num_steps and
 *  min_num_steps are overloaded to contain max_elapsed_seconds and
 *  min_elapsed_seconds.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useElapsedDuration;

@end


/**
 *  The decay curve automated stopping rule builds a Gaussian Process Regressor
 *  to predict the final objective value of a Trial based on the already
 *  completed Trials and the intermediate measurements of the current Trial.
 *  Early stopping is requested for the current Trial if there is very low
 *  probability to exceed the optimal value found so far.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec : GTLRObject

/**
 *  True if Measurement.elapsed_duration is used as the x-axis of each Trials
 *  Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useElapsedDuration;

@end


/**
 *  The median automated stopping rule stops a pending Trial if the Trial's best
 *  objective_value is strictly below the median 'performance' of all completed
 *  Trials reported up to the Trial's last measurement. Currently, 'performance'
 *  refers to the running average of the objective values reported by the Trial
 *  in each measurement.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec : GTLRObject

/**
 *  True if median automated stopping rule applies on
 *  Measurement.elapsed_duration. It means that elapsed_duration field of latest
 *  measurement of current Trial is used to compute median objective value for
 *  each completed Trials.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useElapsedDuration;

@end


/**
 *  Represents a metric to optimize.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec : GTLRObject

/**
 *  Required. The optimization goal of the metric.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_GoalTypeUnspecified
 *        Goal Type will default to maximize. (Value: "GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_Maximize
 *        Maximize the goal metric. (Value: "MAXIMIZE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpec_Goal_Minimize
 *        Minimize the goal metric. (Value: "MINIMIZE")
 */
@property(nonatomic, copy, nullable) NSString *goal;

/**
 *  Required. The ID of the metric. Must not contain whitespaces and must be
 *  unique amongst all MetricSpecs.
 */
@property(nonatomic, copy, nullable) NSString *metricId;

/**
 *  Used for safe search. In the case, the metric will be a safety metric. You
 *  must provide a separate metric for objective metric.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig *safetyConfig;

@end


/**
 *  Used in safe optimization to specify threshold levels and risk tolerance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig : GTLRObject

/**
 *  Desired minimum fraction of safe trials (over total number of trials) that
 *  should be targeted by the algorithm at any time during the study (best
 *  effort). This should be between 0.0 and 1.0 and a value of 0.0 means that
 *  there is no minimum and an algorithm proceeds without targeting any specific
 *  fraction. A value of 1.0 means that the algorithm attempts to only Suggest
 *  safe Trials.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *desiredMinSafeTrialsFraction;

/**
 *  Safety threshold (boundary value between safe and unsafe). NOTE that if you
 *  leave SafetyMetricConfig unset, a default value of 0 will be used.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *safetyThreshold;

@end


/**
 *  Represents a single parameter to optimize.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec : GTLRObject

/** The value spec for a 'CATEGORICAL' parameter. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec *categoricalValueSpec;

/**
 *  A conditional parameter node is active if the parameter's value matches the
 *  conditional node's parent_value_condition. If two items in
 *  conditional_parameter_specs have the same name, they must have disjoint
 *  parent_value_condition.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec *> *conditionalParameterSpecs;

/** The value spec for a 'DISCRETE' parameter. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec *discreteValueSpec;

/** The value spec for a 'DOUBLE' parameter. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec *doubleValueSpec;

/** The value spec for an 'INTEGER' parameter. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec *integerValueSpec;

/**
 *  Required. The ID of the parameter. Must not contain whitespaces and must be
 *  unique amongst all ParameterSpecs.
 */
@property(nonatomic, copy, nullable) NSString *parameterId;

/**
 *  How the parameter should be scaled. Leave unset for `CATEGORICAL`
 *  parameters.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_ScaleTypeUnspecified
 *        By default, no scaling is applied. (Value: "SCALE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitLinearScale
 *        Scales the feasible space to (0, 1) linearly. (Value:
 *        "UNIT_LINEAR_SCALE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitLogScale
 *        Scales the feasible space logarithmically to (0, 1). The entire
 *        feasible space must be strictly positive. (Value: "UNIT_LOG_SCALE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec_ScaleType_UnitReverseLogScale
 *        Scales the feasible space "reverse" logarithmically to (0, 1). The
 *        result is that values close to the top of the feasible space are
 *        spread out more than points near the bottom. The entire feasible space
 *        must be strictly positive. (Value: "UNIT_REVERSE_LOG_SCALE")
 */
@property(nonatomic, copy, nullable) NSString *scaleType;

@end


/**
 *  Value specification for a parameter in `CATEGORICAL` type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec : GTLRObject

/**
 *  A default value for a `CATEGORICAL` parameter that is assumed to be a
 *  relatively good starting point. Unset value signals that there is no offered
 *  starting point. Currently only supported by the Vertex AI Vizier service.
 *  Not supported by HyperparameterTuningJob or TrainingPipeline.
 */
@property(nonatomic, copy, nullable) NSString *defaultValue;

/** Required. The list of possible categories. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Represents a parameter spec with condition from its parent parameter.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec : GTLRObject

/** Required. The spec for a conditional parameter. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpec *parameterSpec;

/**
 *  The spec for matching values from a parent parameter of `CATEGORICAL` type.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition *parentCategoricalValues;

/**
 *  The spec for matching values from a parent parameter of `DISCRETE` type.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition *parentDiscreteValues;

/** The spec for matching values from a parent parameter of `INTEGER` type. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition *parentIntValues;

@end


/**
 *  Represents the spec to match categorical values from parent parameter.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition : GTLRObject

/**
 *  Required. Matches values of the parent parameter of 'CATEGORICAL' type. All
 *  values must exist in `categorical_value_spec` of parent parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Represents the spec to match discrete values from parent parameter.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition : GTLRObject

/**
 *  Required. Matches values of the parent parameter of 'DISCRETE' type. All
 *  values must exist in `discrete_value_spec` of parent parameter. The Epsilon
 *  of the value matching is 1e-10.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Represents the spec to match integer values from parent parameter.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition : GTLRObject

/**
 *  Required. Matches values of the parent parameter of 'INTEGER' type. All
 *  values must lie in `integer_value_spec` of parent parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Value specification for a parameter in `DISCRETE` type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec : GTLRObject

/**
 *  A default value for a `DISCRETE` parameter that is assumed to be a
 *  relatively good starting point. Unset value signals that there is no offered
 *  starting point. It automatically rounds to the nearest feasible discrete
 *  point. Currently only supported by the Vertex AI Vizier service. Not
 *  supported by HyperparameterTuningJob or TrainingPipeline.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultValue;

/**
 *  Required. A list of possible values. The list should be in increasing order
 *  and at least 1e-10 apart. For instance, this parameter might have possible
 *  settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000
 *  values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Value specification for a parameter in `DOUBLE` type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec : GTLRObject

/**
 *  A default value for a `DOUBLE` parameter that is assumed to be a relatively
 *  good starting point. Unset value signals that there is no offered starting
 *  point. Currently only supported by the Vertex AI Vizier service. Not
 *  supported by HyperparameterTuningJob or TrainingPipeline.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultValue;

/**
 *  Required. Inclusive maximum value of the parameter.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Required. Inclusive minimum value of the parameter.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  Value specification for a parameter in `INTEGER` type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec : GTLRObject

/**
 *  A default value for an `INTEGER` parameter that is assumed to be a
 *  relatively good starting point. Unset value signals that there is no offered
 *  starting point. Currently only supported by the Vertex AI Vizier service.
 *  Not supported by HyperparameterTuningJob or TrainingPipeline.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultValue;

/**
 *  Required. Inclusive maximum value of the parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  Required. Inclusive minimum value of the parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

@end


/**
 *  The configuration (stopping conditions) for automated stopping of a Study.
 *  Conditions include trial budgets, time budgets, and convergence detection.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudySpecStudyStoppingConfig : GTLRObject

/**
 *  If the objective value has not improved for this much time, stop the study.
 *  WARNING: Effective only for single-objective studies.
 */
@property(nonatomic, strong, nullable) GTLRDuration *maxDurationNoProgress;

/** If the specified time or duration has passed, stop the study. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudyTimeConstraint *maximumRuntimeConstraint;

/**
 *  If there are more than this many trials, stop the study.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNumTrials;

/**
 *  If the objective value has not improved for this many consecutive trials,
 *  stop the study. WARNING: Effective only for single-objective studies.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNumTrialsNoProgress;

/**
 *  Each "stopping rule" in this proto specifies an "if" condition. Before
 *  Vizier would generate a new suggestion, it first checks each specified
 *  stopping rule, from top to bottom in this list. Note that the first few
 *  rules (e.g. minimum_runtime_constraint, min_num_trials) will prevent other
 *  stopping rules from being evaluated until they are met. For example, setting
 *  `min_num_trials=5` and `always_stop_after= 1 hour` means that the Study will
 *  ONLY stop after it has 5 COMPLETED trials, even if more than an hour has
 *  passed since its creation. It follows the first applicable rule (whose "if"
 *  condition is satisfied) to make a stopping decision. If none of the
 *  specified rules are applicable, then Vizier decides that the study should
 *  not stop. If Vizier decides that the study should stop, the study enters
 *  STOPPING state (or STOPPING_ASAP if should_stop_asap = true). IMPORTANT: The
 *  automatic study state transition happens precisely as described above; that
 *  is, deleting trials or updating StudyConfig NEVER automatically moves the
 *  study state back to ACTIVE. If you want to _resume_ a Study that was
 *  stopped, 1) change the stopping conditions if necessary, 2) activate the
 *  study, and then 3) ask for suggestions. If the specified time or duration
 *  has not passed, do not stop the study.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1StudyTimeConstraint *minimumRuntimeConstraint;

/**
 *  If there are fewer than this many COMPLETED trials, do not stop the study.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNumTrials;

/**
 *  If true, a Study enters STOPPING_ASAP whenever it would normally enters
 *  STOPPING state. The bottom line is: set to true if you want to interrupt
 *  on-going evaluations of Trials as soon as the study stopping condition is
 *  met. (Please see Study.State documentation for the source of truth).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shouldStopAsap;

@end


/**
 *  Time-based Constraint for Study
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1StudyTimeConstraint : GTLRObject

/** Compares the wallclock time to this time. Must use UTC timezone. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Counts the wallclock time passed since the creation of this Study. */
@property(nonatomic, strong, nullable) GTLRDuration *maxDuration;

@end


/**
 *  Details of operations that perform Trials suggestion.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsMetadata : GTLRObject

/**
 *  The identifier of the client that is requesting the suggestion. If multiple
 *  SuggestTrialsRequests have the same `client_id`, the service will return the
 *  identical suggested Trial if the Trial is pending, and provide a new Trial
 *  if the last suggested Trial was completed.
 */
@property(nonatomic, copy, nullable) NSString *clientId;

/** Operation metadata for suggesting Trials. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for VizierService.SuggestTrials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsRequest : GTLRObject

/**
 *  Required. The identifier of the client that is requesting the suggestion. If
 *  multiple SuggestTrialsRequests have the same `client_id`, the service will
 *  return the identical suggested Trial if the Trial is pending, and provide a
 *  new Trial if the last suggested Trial was completed.
 */
@property(nonatomic, copy, nullable) NSString *clientId;

/**
 *  Optional. This allows you to specify the "context" for a Trial; a context is
 *  a slice (a subspace) of the search space. Typical uses for contexts: 1) You
 *  are using Vizier to tune a server for best performance, but there's a strong
 *  weekly cycle. The context specifies the day-of-week. This allows Tuesday to
 *  generalize from Wednesday without assuming that everything is identical. 2)
 *  Imagine you're optimizing some medical treatment for people. As they walk in
 *  the door, you know certain facts about them (e.g. sex, weight, height,
 *  blood-pressure). Put that information in the context, and Vizier will adapt
 *  its suggestions to the patient. 3) You want to do a fair A/B test
 *  efficiently. Specify the "A" and "B" conditions as contexts, and Vizier will
 *  generalize between "A" and "B" conditions. If they are similar, this will
 *  allow Vizier to converge to the optimum faster than if "A" and "B" were
 *  separate Studies. NOTE: You can also enter contexts as REQUESTED Trials,
 *  e.g. via the CreateTrial() RPC; that's the asynchronous option where you
 *  don't need a close association between contexts and suggestions. NOTE: All
 *  the Parameters you set in a context MUST be defined in the Study. NOTE: You
 *  must supply 0 or $suggestion_count contexts. If you don't supply any
 *  contexts, Vizier will make suggestions from the full search space specified
 *  in the StudySpec; if you supply a full set of context, each suggestion will
 *  match the corresponding context. NOTE: A Context with no features set
 *  matches anything, and allows suggestions from the full search space. NOTE:
 *  Contexts MUST lie within the search space specified in the StudySpec. It's
 *  an error if they don't. NOTE: Contexts preferentially match ACTIVE then
 *  REQUESTED trials before new suggestions are generated. NOTE: Generation of
 *  suggestions involves a match between a Context and (optionally) a REQUESTED
 *  trial; if that match is not fully specified, a suggestion will be geneated
 *  in the merged subspace.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TrialContext *> *contexts;

/**
 *  Required. The number of suggestions requested. It must be positive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suggestionCount;

@end


/**
 *  Response message for VizierService.SuggestTrials.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse : GTLRObject

/** The time at which operation processing completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The time at which the operation was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The state of the Study.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Active
 *        The study is active. (Value: "ACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Completed
 *        The study is done when the service exhausts the parameter search space
 *        or max_trial_count is reached. (Value: "COMPLETED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_Inactive
 *        The study is stopped due to an internal error. (Value: "INACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsResponse_StudyState_StateUnspecified
 *        The study state is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *studyState;

/** A list of Trials. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Trial *> *trials;

@end


/**
 *  Input for summarization helpfulness metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInput : GTLRObject

/** Required. Summarization helpfulness instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInstance *instance;

/** Required. Spec for summarization helpfulness score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessSpec *metricSpec;

@end


/**
 *  Spec for summarization helpfulness instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessInstance : GTLRObject

/** Required. Text to be summarized. */
@property(nonatomic, copy, nullable) NSString *context;

/** Optional. Summarization prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for summarization helpfulness result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessResult : GTLRObject

/**
 *  Output only. Confidence for summarization helpfulness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for summarization helpfulness score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Summarization Helpfulness score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for summarization helpfulness score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationHelpfulnessSpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute summarization
 *  helpfulness.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for summarization quality metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInput : GTLRObject

/** Required. Summarization quality instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInstance *instance;

/** Required. Spec for summarization quality score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualitySpec *metricSpec;

@end


/**
 *  Spec for summarization quality instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityInstance : GTLRObject

/** Required. Text to be summarized. */
@property(nonatomic, copy, nullable) NSString *context;

/** Required. Summarization prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for summarization quality result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualityResult : GTLRObject

/**
 *  Output only. Confidence for summarization quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for summarization quality score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Summarization Quality score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for summarization quality score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationQualitySpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute summarization
 *  quality.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Input for summarization verbosity metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInput : GTLRObject

/** Required. Summarization verbosity instance. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInstance *instance;

/** Required. Spec for summarization verbosity score metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbositySpec *metricSpec;

@end


/**
 *  Spec for summarization verbosity instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityInstance : GTLRObject

/** Required. Text to be summarized. */
@property(nonatomic, copy, nullable) NSString *context;

/** Optional. Summarization prompt for LLM. */
@property(nonatomic, copy, nullable) NSString *instruction;

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Optional. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Spec for summarization verbosity result.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbosityResult : GTLRObject

/**
 *  Output only. Confidence for summarization verbosity score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Output only. Explanation for summarization verbosity score. */
@property(nonatomic, copy, nullable) NSString *explanation;

/**
 *  Output only. Summarization Verbosity score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Spec for summarization verbosity score metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SummarizationVerbositySpec : GTLRObject

/**
 *  Optional. Whether to use instance.reference to compute summarization
 *  verbosity.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useReference;

/**
 *  Optional. Which version to use for evaluation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Hyperparameters for SFT.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters : GTLRObject

/**
 *  Optional. Adapter size for tuning.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeEight
 *        Adapter size 8. (Value: "ADAPTER_SIZE_EIGHT")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeFour
 *        Adapter size 4. (Value: "ADAPTER_SIZE_FOUR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeOne
 *        Adapter size 1. (Value: "ADAPTER_SIZE_ONE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeSixteen
 *        Adapter size 16. (Value: "ADAPTER_SIZE_SIXTEEN")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeThirtyTwo
 *        Adapter size 32. (Value: "ADAPTER_SIZE_THIRTY_TWO")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters_AdapterSize_AdapterSizeUnspecified
 *        Adapter size is unspecified. (Value: "ADAPTER_SIZE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *adapterSize;

/**
 *  Optional. Number of complete passes the model makes over the entire training
 *  dataset during training.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *epochCount;

/**
 *  Optional. Multiplier for adjusting the default learning rate.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *learningRateMultiplier;

@end


/**
 *  Dataset distribution for Supervised Tuning.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution : GTLRObject

/**
 *  Output only. Sum of a given population of values that are billable.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *billableSum;

/** Output only. Defines the histogram bucket. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket *> *buckets;

/**
 *  Output only. The maximum of the population values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  Output only. The arithmetic mean of the values in the population.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mean;

/**
 *  Output only. The median of the values in the population.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *median;

/**
 *  Output only. The minimum of the population values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

/**
 *  Output only. The 5th percentile of the values in the population.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *p5;

/**
 *  Output only. The 95th percentile of the values in the population.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *p95;

/**
 *  Output only. Sum of a given population of values.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sum;

@end


/**
 *  Dataset bucket used to create a histogram for the distribution given a
 *  population of values.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket : GTLRObject

/**
 *  Output only. Number of values in the bucket.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Output only. Left bound of the bucket.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *left;

/**
 *  Output only. Right bound of the bucket.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *right;

@end


/**
 *  Tuning data statistics for Supervised Tuning.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDataStats : GTLRObject

/**
 *  Output only. Number of billable characters in the tuning dataset.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalBillableCharacterCount GTLR_DEPRECATED;

/**
 *  Output only. Number of billable tokens in the tuning dataset.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalBillableTokenCount;

/**
 *  The number of examples in the dataset that have been truncated by any
 *  amount.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalTruncatedExampleCount;

/**
 *  Output only. Number of tuning characters in the tuning dataset.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalTuningCharacterCount;

/**
 *  A partial sample of the indices (starting from 1) of the truncated examples.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *truncatedExampleIndices;

/**
 *  Output only. Number of examples in the tuning dataset.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tuningDatasetExampleCount;

/**
 *  Output only. Number of tuning steps for this Tuning Job.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tuningStepCount;

/** Output only. Sample user messages in the training dataset uri. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Content *> *userDatasetExamples;

/** Output only. Dataset distributions for the user input tokens. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution *userInputTokenDistribution;

/** Output only. Dataset distributions for the messages per example. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution *userMessagePerExampleDistribution;

/** Output only. Dataset distributions for the user output tokens. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution *userOutputTokenDistribution;

@end


/**
 *  Tuning Spec for Supervised Tuning for first party models.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningSpec : GTLRObject

/** Optional. Hyperparameters for SFT. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedHyperParameters *hyperParameters;

/**
 *  Required. Cloud Storage path to file containing training dataset for tuning.
 *  The dataset must be formatted as a JSONL file.
 */
@property(nonatomic, copy, nullable) NSString *trainingDatasetUri;

/**
 *  Optional. Cloud Storage path to file containing validation dataset for
 *  tuning. The dataset must be formatted as a JSONL file.
 */
@property(nonatomic, copy, nullable) NSString *validationDatasetUri;

@end


/**
 *  Request message for FeatureOnlineStoreAdminService.SyncFeatureView.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewRequest : GTLRObject
@end


/**
 *  Response message for FeatureOnlineStoreAdminService.SyncFeatureView.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewResponse : GTLRObject

/**
 *  Format:
 *  `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
 */
@property(nonatomic, copy, nullable) NSString *featureViewSync;

@end


/**
 *  A tensor value type.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Tensor : GTLRObject

/**
 *  Type specific representations that make it easy to create tensor protos in
 *  all languages. Only the representation corresponding to "dtype" can be set.
 *  The values hold the flattened representation of the tensor in row major
 *  order. BOOL
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *boolVal;

/**
 *  STRING
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *bytesVal;

/**
 *  DOUBLE
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *doubleVal;

/**
 *  The data type of tensor.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Bool Data
 *        types that all computation devices are expected to be capable to
 *        support. (Value: "BOOL")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_DataTypeUnspecified
 *        Not a legal value for DataType. Used to indicate a DataType field has
 *        not been set. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Double Value
 *        "DOUBLE"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Float Value
 *        "FLOAT"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int16 Value
 *        "INT16"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int32 Value
 *        "INT32"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int64 Value
 *        "INT64"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Int8 Value
 *        "INT8"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_String Value
 *        "STRING"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint16 Value
 *        "UINT16"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint32 Value
 *        "UINT32"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint64 Value
 *        "UINT64"
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Tensor_Dtype_Uint8 Value
 *        "UINT8"
 */
@property(nonatomic, copy, nullable) NSString *dtype;

/**
 *  FLOAT
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *floatVal;

/**
 *  INT64
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *int64Val;

/**
 *  INT_8 INT_16 INT_32
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *intVal;

/** A list of tensor values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Tensor *> *listVal;

/**
 *  Shape of the tensor.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *shape;

/** STRING */
@property(nonatomic, strong, nullable) NSArray<NSString *> *stringVal;

/** A map of string to tensor. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensor_StructVal *structVal;

/**
 *  Serialized raw tensor content.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *tensorVal;

/**
 *  UINT64
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *uint64Val;

/**
 *  UINT8 UINT16 UINT32
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *uintVal;

@end


/**
 *  A map of string to tensor.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1Tensor. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Tensor_StructVal : GTLRObject
@end


/**
 *  Tensorboard is a physical database that stores users' training metrics. A
 *  default Tensorboard is provided in each region of a Google Cloud project. If
 *  needed users can also create extra Tensorboards in their projects.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard : GTLRObject

/**
 *  Output only. Consumer project Cloud Storage path prefix used to store blob
 *  data, which can either be a bucket or directory. Does not end with a '/'.
 */
@property(nonatomic, copy, nullable) NSString *blobStoragePathPrefix;

/** Output only. Timestamp when this Tensorboard was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of this Tensorboard.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Required. User provided name of this Tensorboard. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a Tensorboard. If set, this
 *  Tensorboard and all sub-resources of this Tensorboard will be secured by
 *  this key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Used to perform a consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Used to indicate if the TensorBoard instance is the default one. Each
 *  project & region can have at most one default TensorBoard instance. Creation
 *  of a default TensorBoard instance and updating an existing TensorBoard
 *  instance to be default will mark all other TensorBoard instances (if any) as
 *  non default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  The labels with user-defined metadata to organize your Tensorboards. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. No more than 64 user labels
 *  can be associated with one Tensorboard (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard_Labels *labels;

/**
 *  Output only. Name of the Tensorboard. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The number of Runs stored in this Tensorboard.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *runCount;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Output only. Timestamp when this Tensorboard was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your Tensorboards. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. No more than 64 user labels
 *  can be associated with one Tensorboard (System labels are excluded). See
 *  https://goo.gl/xmQnxf for more information and examples of labels. System
 *  reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
 *  immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard_Labels : GTLRObject
@end


/**
 *  One blob (e.g, image, graph) viewable on a blob metric plot.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlob : GTLRObject

/**
 *  Optional. The bytes of the blob is not present unless it's returned by the
 *  ReadTensorboardBlobData endpoint.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Output only. A URI safe key uniquely identifying a blob. Can be used to
 *  locate the blob stored in the Cloud Storage bucket of the consumer project.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  One point viewable on a blob metric plot, but mostly just a wrapper message
 *  to work around repeated fields can't be used directly within `oneof` fields.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlobSequence : GTLRObject

/** List of blobs contained within the sequence. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlob *> *values;

@end


/**
 *  A TensorboardExperiment is a group of TensorboardRuns, that are typically
 *  the results of a training job run, in a Tensorboard.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment : GTLRObject

/** Output only. Timestamp when this TensorboardExperiment was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of this TensorboardExperiment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User provided name of this TensorboardExperiment. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Used to perform consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your
 *  TensorboardExperiment. Label keys and values cannot be longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed. No
 *  more than 64 user labels can be associated with one Dataset (System labels
 *  are excluded). See https://goo.gl/xmQnxf for more information and examples
 *  of labels. System reserved label keys are prefixed with
 *  `aiplatform.googleapis.com/` and are immutable. The following system labels
 *  exist for each Dataset: *
 *  `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value
 *  is the metadata_schema's title.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment_Labels *labels;

/**
 *  Output only. Name of the TensorboardExperiment. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. Source of the TensorboardExperiment. Example: a custom training
 *  job.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Output only. Timestamp when this TensorboardExperiment was last updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your
 *  TensorboardExperiment. Label keys and values cannot be longer than 64
 *  characters (Unicode codepoints), can only contain lowercase letters, numeric
 *  characters, underscores and dashes. International characters are allowed. No
 *  more than 64 user labels can be associated with one Dataset (System labels
 *  are excluded). See https://goo.gl/xmQnxf for more information and examples
 *  of labels. System reserved label keys are prefixed with
 *  `aiplatform.googleapis.com/` and are immutable. The following system labels
 *  exist for each Dataset: *
 *  `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value
 *  is the metadata_schema's title.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment_Labels : GTLRObject
@end


/**
 *  TensorboardRun maps to a specific execution of a training job with a given
 *  set of hyperparameter values, model definition, dataset, etc
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun : GTLRObject

/** Output only. Timestamp when this TensorboardRun was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of this TensorboardRun.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User provided name of this TensorboardRun. This value must be
 *  unique among all TensorboardRuns belonging to the same parent
 *  TensorboardExperiment.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Used to perform a consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels with user-defined metadata to organize your TensorboardRuns. This
 *  field will be used to filter and visualize Runs in the Tensorboard UI. For
 *  example, a Vertex AI training job can set a label
 *  aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created
 *  within that job. An end user can set a label experiment_id=xxxxx for all the
 *  runs produced in a Jupyter notebook. These runs can be grouped by a label
 *  value and visualized together in the Tensorboard UI. Label keys and values
 *  can be no longer than 64 characters (Unicode codepoints), can only contain
 *  lowercase letters, numeric characters, underscores and dashes. International
 *  characters are allowed. No more than 64 user labels can be associated with
 *  one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf
 *  for more information and examples of labels. System reserved label keys are
 *  prefixed with "aiplatform.googleapis.com/" and are immutable.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun_Labels *labels;

/**
 *  Output only. Name of the TensorboardRun. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Timestamp when this TensorboardRun was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize your TensorboardRuns. This
 *  field will be used to filter and visualize Runs in the Tensorboard UI. For
 *  example, a Vertex AI training job can set a label
 *  aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created
 *  within that job. An end user can set a label experiment_id=xxxxx for all the
 *  runs produced in a Jupyter notebook. These runs can be grouped by a label
 *  value and visualized together in the Tensorboard UI. Label keys and values
 *  can be no longer than 64 characters (Unicode codepoints), can only contain
 *  lowercase letters, numeric characters, underscores and dashes. International
 *  characters are allowed. No more than 64 user labels can be associated with
 *  one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf
 *  for more information and examples of labels. System reserved label keys are
 *  prefixed with "aiplatform.googleapis.com/" and are immutable.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun_Labels : GTLRObject
@end


/**
 *  One point viewable on a tensor metric plot.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTensor : GTLRObject

/**
 *  Required. Serialized form of
 *  https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *value;

/**
 *  Optional. Version number of TensorProto used to serialize value.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *versionNumber;

@end


/**
 *  TensorboardTimeSeries maps to times series produced in training runs
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries : GTLRObject

/** Output only. Timestamp when this TensorboardTimeSeries was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of this TensorboardTimeSeries.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User provided name of this TensorboardTimeSeries. This value
 *  should be unique among all TensorboardTimeSeries resources belonging to the
 *  same TensorboardRun resource (parent resource).
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Used to perform a consistent read-modify-write updates. If not set, a blind
 *  "overwrite" update happens.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. Scalar, Tensor, or Blob metadata for this
 *  TensorboardTimeSeries.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata *metadata;

/** Output only. Name of the TensorboardTimeSeries. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Data of the current plugin, with the size limited to 65KB.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *pluginData;

/**
 *  Immutable. Name of the plugin this time series pertain to. Such as Scalar,
 *  Tensor, Blob
 */
@property(nonatomic, copy, nullable) NSString *pluginName;

/**
 *  Output only. Timestamp when this TensorboardTimeSeries was last updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Required. Immutable. Type of TensorboardTimeSeries value.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_BlobSequence
 *        Used for TensorboardTimeSeries that is a list of blob sequences. E.g.
 *        set of sample images with labels over epochs/time. (Value:
 *        "BLOB_SEQUENCE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_Scalar
 *        Used for TensorboardTimeSeries that is a list of scalars. E.g.
 *        accuracy of a model over epochs/time. (Value: "SCALAR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_Tensor
 *        Used for TensorboardTimeSeries that is a list of tensors. E.g.
 *        histograms of weights of layer in a model over epoch/time. (Value:
 *        "TENSOR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries_ValueType_ValueTypeUnspecified
 *        The value type is unspecified. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  Describes metadata for a TensorboardTimeSeries.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata : GTLRObject

/**
 *  Output only. The largest blob sequence length (number of blobs) of all data
 *  points in this time series, if its ValueType is BLOB_SEQUENCE.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxBlobSequenceLength;

/**
 *  Output only. Max step index of all data points within a
 *  TensorboardTimeSeries.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxStep;

/**
 *  Output only. Max wall clock timestamp of all data points within a
 *  TensorboardTimeSeries.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *maxWallTime;

@end


/**
 *  The storage details for TFRecord output content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TFRecordDestination : GTLRObject

/** Required. Google Cloud Storage location. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GcsDestination *gcsDestination;

@end


/**
 *  The config for feature monitoring threshold.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ThresholdConfig : GTLRObject

/**
 *  Specify a threshold value that can trigger the alert. If this threshold
 *  config is for feature distribution distance: 1. For categorical feature, the
 *  distribution distance is calculated by L-inifinity norm. 2. For numerical
 *  feature, the distribution distance is calculated by Jensen–Shannon
 *  divergence. Each feature must have a non-zero threshold if they need to be
 *  monitored. Otherwise no alert will be triggered for that feature.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  All the data stored in a TensorboardTimeSeries.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData : GTLRObject

/**
 *  Required. The ID of the TensorboardTimeSeries, which will become the final
 *  component of the TensorboardTimeSeries' resource name
 */
@property(nonatomic, copy, nullable) NSString *tensorboardTimeSeriesId;

/** Required. Data points in this time series. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesDataPoint *> *values;

/**
 *  Required. Immutable. The value type of this time series. All the values in
 *  this time series data must match this value type.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_BlobSequence
 *        Used for TensorboardTimeSeries that is a list of blob sequences. E.g.
 *        set of sample images with labels over epochs/time. (Value:
 *        "BLOB_SEQUENCE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_Scalar
 *        Used for TensorboardTimeSeries that is a list of scalars. E.g.
 *        accuracy of a model over epochs/time. (Value: "SCALAR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_Tensor
 *        Used for TensorboardTimeSeries that is a list of tensors. E.g.
 *        histograms of weights of layer in a model over epoch/time. (Value:
 *        "TENSOR")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData_ValueType_ValueTypeUnspecified
 *        The value type is unspecified. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  A TensorboardTimeSeries data point.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesDataPoint : GTLRObject

/** A blob sequence value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardBlobSequence *blobs;

/** A scalar value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Scalar *scalar;

/**
 *  Step index of this data point within the run.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *step;

/** A tensor value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTensor *tensor;

/** Wall clock timestamp when this data point is generated by the end user. */
@property(nonatomic, strong, nullable) GTLRDateTime *wallTime;

@end


/**
 *  Assigns input data to training, validation, and test sets based on a
 *  provided timestamps. The youngest data pieces are assigned to training set,
 *  next to validation set, and the oldest to the test set. Supported only for
 *  tabular Datasets.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TimestampSplit : GTLRObject

/**
 *  Required. The key is a name of one of the Dataset's data columns. The values
 *  of the key (the values in the column) must be in RFC 3339 `date-time`
 *  format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a
 *  piece of data the key is not present or has an invalid value, that piece is
 *  ignored by the pipeline.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The fraction of the input data that is to be used to evaluate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testFraction;

/**
 *  The fraction of the input data that is to be used to train the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trainingFraction;

/**
 *  The fraction of the input data that is to be used to validate the Model.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validationFraction;

@end


/**
 *  Tokens info with a list of tokens and the corresponding list of token ids.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TokensInfo : GTLRObject

/** Optional. Optional fields for the role from the corresponding Content. */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  A list of token ids from the input.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *tokenIds;

/**
 *  A list of tokens from the input.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tokens;

@end


/**
 *  Tool details that the model may use to generate response. A `Tool` is a
 *  piece of code that enables the system to interact with external systems to
 *  perform an action, or set of actions, outside of knowledge and scope of the
 *  model. A Tool object should contain exactly one type of Tool (e.g
 *  FunctionDeclaration, Retrieval or GoogleSearchRetrieval).
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Tool : GTLRObject

/**
 *  Optional. Function tool type. One or more function declarations to be passed
 *  to the model along with the current user query. Model may decide to call a
 *  subset of these functions by populating FunctionCall in the response. User
 *  should provide a FunctionResponse for each function call in the next turn.
 *  Based on the function responses, Model will generate the final response back
 *  to the user. Maximum 128 function declarations can be provided.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1FunctionDeclaration *> *functionDeclarations;

/**
 *  Optional. GoogleSearchRetrieval tool type. Specialized retrieval tool that
 *  is powered by Google search.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GoogleSearchRetrieval *googleSearchRetrieval;

/**
 *  Optional. Retrieval tool type. System will always execute the provided
 *  retrieval tool(s) to get external knowledge to answer the prompt. Retrieval
 *  results are presented to the model for generation.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Retrieval *retrieval;

@end


/**
 *  Input for tool call valid metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInput : GTLRObject

/** Required. Repeated tool call valid instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInstance *> *instances;

/** Required. Spec for tool call valid metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidSpec *metricSpec;

@end


/**
 *  Spec for tool call valid instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Tool call valid metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidMetricValue : GTLRObject

/**
 *  Output only. Tool call valid score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for tool call valid metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidResults : GTLRObject

/** Output only. Tool call valid metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidMetricValue *> *toolCallValidMetricValues;

@end


/**
 *  Spec for tool call valid metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolCallValidSpec : GTLRObject
@end


/**
 *  Tool config. This config is shared for all tools provided in the request.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolConfig : GTLRObject

/** Optional. Function calling config. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1FunctionCallingConfig *functionCallingConfig;

@end


/**
 *  Input for tool name match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInput : GTLRObject

/** Required. Repeated tool name match instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInstance *> *instances;

/** Required. Spec for tool name match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchSpec *metricSpec;

@end


/**
 *  Spec for tool name match instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Tool name match metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchMetricValue : GTLRObject

/**
 *  Output only. Tool name match score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for tool name match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchResults : GTLRObject

/** Output only. Tool name match metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchMetricValue *> *toolNameMatchMetricValues;

@end


/**
 *  Spec for tool name match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolNameMatchSpec : GTLRObject
@end


/**
 *  Input for tool parameter key match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInput : GTLRObject

/** Required. Repeated tool parameter key match instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInstance *> *instances;

/** Required. Spec for tool parameter key match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchSpec *metricSpec;

@end


/**
 *  Spec for tool parameter key match instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Tool parameter key match metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue : GTLRObject

/**
 *  Output only. Tool parameter key match score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for tool parameter key match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchResults : GTLRObject

/** Output only. Tool parameter key match metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue *> *toolParameterKeyMatchMetricValues;

@end


/**
 *  Spec for tool parameter key match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKeyMatchSpec : GTLRObject
@end


/**
 *  Input for tool parameter key value match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInput : GTLRObject

/** Required. Repeated tool parameter key value match instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInstance *> *instances;

/** Required. Spec for tool parameter key value match metric. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchSpec *metricSpec;

@end


/**
 *  Spec for tool parameter key value match instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchInstance : GTLRObject

/** Required. Output of the evaluated model. */
@property(nonatomic, copy, nullable) NSString *prediction;

/** Required. Ground truth used to compare against the prediction. */
@property(nonatomic, copy, nullable) NSString *reference;

@end


/**
 *  Tool parameter key value match metric value for an instance.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue : GTLRObject

/**
 *  Output only. Tool parameter key value match score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Results for tool parameter key value match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchResults : GTLRObject

/** Output only. Tool parameter key value match metric values. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue *> *toolParameterKvMatchMetricValues;

@end


/**
 *  Spec for tool parameter key value match metric.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1ToolParameterKVMatchSpec : GTLRObject

/**
 *  Optional. Whether to use STRCIT string match on parameter values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useStrictStringMatch;

@end


/**
 *  CMLE training config. For every active learning labeling iteration, system
 *  will train a machine learning model on CMLE. The trained model will be used
 *  by data sampling algorithm to select DataItems.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TrainingConfig : GTLRObject

/**
 *  The timeout hours for the CMLE training job, expressed in milli hours i.e.
 *  1,000 value in this field means 1 hour.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutTrainingMilliHours;

@end


/**
 *  The TrainingPipeline orchestrates tasks associated with training a Model. It
 *  always executes the training task, and optionally may also export data from
 *  Vertex AI's Dataset which becomes the training input, upload the Model to
 *  Vertex AI, and evaluate the Model.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline : GTLRObject

/** Output only. Time when the TrainingPipeline was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Required. The user-defined name of this TrainingPipeline. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Customer-managed encryption key spec for a TrainingPipeline. If set, this
 *  TrainingPipeline will be secured by this key. Note: Model trained by this
 *  TrainingPipeline is also secured by this key if model_to_upload is not set
 *  separately.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the TrainingPipeline entered any of the following
 *  states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`,
 *  `PIPELINE_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when the pipeline's state is
 *  `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Specifies Vertex AI owned input data that may be used for training the
 *  Model. The TrainingPipeline's training_task_definition should make clear
 *  whether this config is used and if there are any special requirements on how
 *  it should be filled. If nothing about this config is mentioned in the
 *  training_task_definition, then it should be assumed that the
 *  TrainingPipeline does not depend on this configuration.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1InputDataConfig *inputDataConfig;

/**
 *  The labels with user-defined metadata to organize TrainingPipelines. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_Labels *labels;

/**
 *  Optional. The ID to use for the uploaded Model, which will become the final
 *  component of the model resource name. This value may be up to 63 characters,
 *  and valid characters are `[a-z0-9_-]`. The first character cannot be a
 *  number or hyphen.
 */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Describes the Model that may be uploaded (via ModelService.UploadModel) by
 *  this TrainingPipeline. The TrainingPipeline's training_task_definition
 *  should make clear whether this Model description should be populated, and if
 *  there are any special requirements regarding how it should be filled. If
 *  nothing is mentioned in the training_task_definition, then it should be
 *  assumed that this field should not be filled and the training task either
 *  uploads the Model without a need of this information, or that training task
 *  does not support uploading a Model as part of the pipeline. When the
 *  Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model
 *  had been uploaded into Vertex AI, then the model_to_upload's resource name
 *  is populated. The Model is always uploaded into the Project and Location in
 *  which this pipeline is.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Model *modelToUpload;

/** Output only. Resource name of the TrainingPipeline. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. When specify this field, the `model_to_upload` will not be
 *  uploaded as a new model, instead, it will become a new version of this
 *  `parent_model`.
 */
@property(nonatomic, copy, nullable) NSString *parentModel;

/**
 *  Output only. Time when the TrainingPipeline for the first time entered the
 *  `PIPELINE_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the pipeline.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateCancelled
 *        The pipeline has been cancelled. (Value: "PIPELINE_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateCancelling
 *        The pipeline is being cancelled. From this state, the pipeline may
 *        only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or
 *        PIPELINE_STATE_CANCELLED. (Value: "PIPELINE_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateFailed
 *        The pipeline failed. (Value: "PIPELINE_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStatePaused
 *        The pipeline has been stopped, and can be resumed. (Value:
 *        "PIPELINE_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStatePending
 *        The service is preparing to run the pipeline. (Value:
 *        "PIPELINE_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateQueued
 *        The pipeline has been created or resumed, and processing has not yet
 *        begun. (Value: "PIPELINE_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateRunning
 *        The pipeline is in progress. (Value: "PIPELINE_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateSucceeded
 *        The pipeline completed successfully. (Value:
 *        "PIPELINE_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_State_PipelineStateUnspecified
 *        The pipeline state is unspecified. (Value:
 *        "PIPELINE_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Required. A Google Cloud Storage path to the YAML file that defines the
 *  training task which is responsible for producing the model artifact, and may
 *  also include additional auxiliary work. The definition files that can be
 *  used here are found in
 *  gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI
 *  given on output will be immutable and probably different, including the URI
 *  scheme, than the one given on input. The output URI will point to a location
 *  where the user only has a read access.
 */
@property(nonatomic, copy, nullable) NSString *trainingTaskDefinition;

/**
 *  Required. The training task's parameter(s), as specified in the
 *  training_task_definition's `inputs`.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id trainingTaskInputs;

/**
 *  Output only. The metadata information as specified in the
 *  training_task_definition's `metadata`. This metadata is an auxiliary runtime
 *  and final information about the training task. While the pipeline is running
 *  this information is populated only at a best effort basis. Only present if
 *  the pipeline's training_task_definition contains `metadata` object.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id trainingTaskMetadata;

/** Output only. Time when the TrainingPipeline was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The labels with user-defined metadata to organize TrainingPipelines. Label
 *  keys and values can be no longer than 64 characters (Unicode codepoints),
 *  can only contain lowercase letters, numeric characters, underscores and
 *  dashes. International characters are allowed. See https://goo.gl/xmQnxf for
 *  more information and examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline_Labels : GTLRObject
@end


/**
 *  A message representing a Trial. A Trial contains a unique set of Parameters
 *  that has been or will be evaluated, along with the objective metrics got by
 *  running the Trial.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Trial : GTLRObject

/**
 *  Output only. The identifier of the client that originally requested this
 *  Trial. Each client is identified by a unique client_id. When a client asks
 *  for a suggestion, Vertex AI Vizier will assign it a Trial. The client should
 *  evaluate the Trial, complete it, and report back to Vertex AI Vizier. If
 *  suggestion is asked again by same client_id before the Trial is completed,
 *  the same Trial will be returned. Multiple clients with different client_ids
 *  can ask for suggestions simultaneously, each of them will get their own
 *  Trial.
 */
@property(nonatomic, copy, nullable) NSString *clientId;

/**
 *  Output only. The CustomJob name linked to the Trial. It's set for a
 *  HyperparameterTuningJob's Trial.
 */
@property(nonatomic, copy, nullable) NSString *customJob;

/**
 *  Output only. Time when the Trial's status changed to `SUCCEEDED` or
 *  `INFEASIBLE`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. The final measurement containing the objective value. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Measurement *finalMeasurement;

/**
 *  Output only. The identifier of the Trial assigned by the service.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Output only. A human readable string describing why the Trial is infeasible.
 *  This is set only if Trial state is `INFEASIBLE`.
 */
@property(nonatomic, copy, nullable) NSString *infeasibleReason;

/**
 *  Output only. A list of measurements that are strictly lexicographically
 *  ordered by their induced tuples (steps, elapsed_duration). These are used
 *  for early stopping computations.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1Measurement *> *measurements;

/** Output only. Resource name of the Trial assigned by the service. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The parameters of the Trial. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TrialParameter *> *parameters;

/** Output only. Time when the Trial was started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the Trial.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Active
 *        Indicates that the Trial has been suggested. (Value: "ACTIVE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Infeasible
 *        Indicates that the Trial should not be attempted again. The service
 *        will set a Trial to INFEASIBLE when it's done but missing the
 *        final_measurement. (Value: "INFEASIBLE")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Requested
 *        Indicates that a specific Trial has been requested, but it has not yet
 *        been suggested by the service. (Value: "REQUESTED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_StateUnspecified
 *        The Trial state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Stopping
 *        Indicates that the Trial should stop according to the service. (Value:
 *        "STOPPING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1Trial_State_Succeeded
 *        Indicates that the Trial is completed successfully. (Value:
 *        "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if this trial is part of a
 *  HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field
 *  is `true`. The keys are names of each node used for the trial; for example,
 *  `workerpool0-0` for the primary node, `workerpool1-0` for the first node in
 *  the second worker pool, and `workerpool1-1` for the second node in the
 *  second worker pool. The values are the URIs for each node's interactive
 *  shell.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Trial_WebAccessUris *webAccessUris;

@end


/**
 *  Output only. URIs for accessing [interactive
 *  shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
 *  (one URI for each training node). Only available if this trial is part of a
 *  HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field
 *  is `true`. The keys are names of each node used for the trial; for example,
 *  `workerpool0-0` for the primary node, `workerpool1-0` for the first node in
 *  the second worker pool, and `workerpool1-1` for the second node in the
 *  second worker pool. The values are the URIs for each node's interactive
 *  shell.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Trial_WebAccessUris : GTLRObject
@end


/**
 *  GTLRAiplatform_GoogleCloudAiplatformV1TrialContext
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TrialContext : GTLRObject

/**
 *  A human-readable field which can store a description of this context. This
 *  will become part of the resulting Trial's description field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  If/when a Trial is generated or selected from this Context, its Parameters
 *  will match any parameters specified here. (I.e. if this context specifies
 *  parameter name:'a' int_value:3, then a resulting Trial will have int_value:3
 *  for its parameter named 'a'.) Note that we first attempt to match existing
 *  REQUESTED Trials with contexts, and if there are no matches, we generate
 *  suggestions in the subspace defined by the parameters specified here. NOTE:
 *  a Context without any Parameters matches the entire feasible search space.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TrialParameter *> *parameters;

@end


/**
 *  A message representing a parameter to be tuned.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TrialParameter : GTLRObject

/**
 *  Output only. The ID of the parameter. The parameter should be defined in
 *  StudySpec's Parameters.
 */
@property(nonatomic, copy, nullable) NSString *parameterId;

/**
 *  Output only. The value of the parameter. `number_value` will be set if a
 *  parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'.
 *  `string_value` will be set if a parameter defined in StudySpec is in type
 *  'CATEGORICAL'.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  The Model Registry Model and Online Prediction Endpoint assiociated with
 *  this TuningJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TunedModel : GTLRObject

/**
 *  Output only. A resource name of an Endpoint. Format:
 *  `projects/{project}/locations/{location}/endpoints/{endpoint}`.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Output only. The resource name of the TunedModel. Format:
 *  `projects/{project}/locations/{location}/models/{model}`.
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  TunedModel Reference for legacy model migration.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TunedModelRef : GTLRObject

/**
 *  Support migration from tuning job list page, from bison model to gemini
 *  model.
 */
@property(nonatomic, copy, nullable) NSString *pipelineJob;

/** Support migration from model registry. */
@property(nonatomic, copy, nullable) NSString *tunedModel;

/**
 *  Support migration from tuning job list page, from gemini-1.0-pro-002 to 1.5
 *  and above.
 */
@property(nonatomic, copy, nullable) NSString *tuningJob;

@end


/**
 *  The tuning data statistic values for TuningJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TuningDataStats : GTLRObject

/** The SFT Tuning data stats. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningDataStats *supervisedTuningDataStats;

@end


/**
 *  Represents a TuningJob that runs with Google owned models.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TuningJob : GTLRObject

/** The base model that is being tuned, e.g., "gemini-1.0-pro-002". */
@property(nonatomic, copy, nullable) NSString *baseModel;

/** Output only. Time when the TuningJob was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The description of the TuningJob.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Customer-managed encryption key options for a TuningJob. If this is set,
 *  then all resources created by the TuningJob will be encrypted with the
 *  provided encryption key.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1EncryptionSpec *encryptionSpec;

/**
 *  Output only. Time when the TuningJob entered any of the following JobStates:
 *  `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`,
 *  `JOB_STATE_EXPIRED`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Only populated when job's state is `JOB_STATE_FAILED` or
 *  `JOB_STATE_CANCELLED`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/** Output only. The Experiment associated with this TuningJob. */
@property(nonatomic, copy, nullable) NSString *experiment;

/**
 *  Optional. The labels with user-defined metadata to organize TuningJob and
 *  generated resources such as Model and Endpoint. Label keys and values can be
 *  no longer than 64 characters (Unicode codepoints), can only contain
 *  lowercase letters, numeric characters, underscores and dashes. International
 *  characters are allowed. See https://goo.gl/xmQnxf for more information and
 *  examples of labels.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TuningJob_Labels *labels;

/**
 *  Output only. Identifier. Resource name of a TuningJob. Format:
 *  `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Time when the TuningJob for the first time entered the
 *  `JOB_STATE_RUNNING` state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The detailed state of the job.
 *
 *  Likely values:
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateCancelled
 *        The job has been cancelled. (Value: "JOB_STATE_CANCELLED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateCancelling
 *        The job is being cancelled. From this state the job may only go to
 *        either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
 *        `JOB_STATE_CANCELLED`. (Value: "JOB_STATE_CANCELLING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateExpired
 *        The job has expired. (Value: "JOB_STATE_EXPIRED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateFailed
 *        The job failed. (Value: "JOB_STATE_FAILED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePartiallySucceeded
 *        The job is partially succeeded, some results may be missing due to
 *        errors. (Value: "JOB_STATE_PARTIALLY_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePaused
 *        The job has been stopped, and can be resumed. (Value:
 *        "JOB_STATE_PAUSED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStatePending
 *        The service is preparing to run the job. (Value: "JOB_STATE_PENDING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateQueued
 *        The job has been just created or resumed and processing has not yet
 *        begun. (Value: "JOB_STATE_QUEUED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateRunning
 *        The job is in progress. (Value: "JOB_STATE_RUNNING")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateSucceeded
 *        The job completed successfully. (Value: "JOB_STATE_SUCCEEDED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateUnspecified
 *        The job state is unspecified. (Value: "JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAiplatform_GoogleCloudAiplatformV1TuningJob_State_JobStateUpdating
 *        The job is being updated. Only jobs in the `RUNNING` state can be
 *        updated. After updating, the job goes back to the `RUNNING` state.
 *        (Value: "JOB_STATE_UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Tuning Spec for Supervised Fine Tuning. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SupervisedTuningSpec *supervisedTuningSpec;

/** Output only. The tuned model resources assiociated with this TuningJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TunedModel *tunedModel;

/**
 *  Optional. The display name of the TunedModel. The name can be up to 128
 *  characters long and can consist of any UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *tunedModelDisplayName;

/** Output only. The tuning data statistics associated with this TuningJob. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1TuningDataStats *tuningDataStats;

/** Output only. Time when the TuningJob was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The labels with user-defined metadata to organize TuningJob and
 *  generated resources such as Model and Endpoint. Label keys and values can be
 *  no longer than 64 characters (Unicode codepoints), can only contain
 *  lowercase letters, numeric characters, underscores and dashes. International
 *  characters are allowed. See https://goo.gl/xmQnxf for more information and
 *  examples of labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1TuningJob_Labels : GTLRObject
@end


/**
 *  Runtime operation information for IndexEndpointService.UndeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for IndexEndpointService.UndeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexRequest : GTLRObject

/**
 *  Required. The ID of the DeployedIndex to be undeployed from the
 *  IndexEndpoint.
 */
@property(nonatomic, copy, nullable) NSString *deployedIndexId;

@end


/**
 *  Response message for IndexEndpointService.UndeployIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexResponse : GTLRObject
@end


/**
 *  Runtime operation information for EndpointService.UndeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for EndpointService.UndeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest : GTLRObject

/**
 *  Required. The ID of the DeployedModel to be undeployed from the Endpoint.
 */
@property(nonatomic, copy, nullable) NSString *deployedModelId;

/**
 *  If this field is provided, then the Endpoint's traffic_split will be
 *  overwritten with it. If last DeployedModel is being undeployed from the
 *  Endpoint, the [Endpoint.traffic_split] will always end up empty when this
 *  call returns. A DeployedModel will be successfully undeployed only if it
 *  doesn't have any traffic assigned to it when this method executes, or if
 *  this field unassigns any traffic to it.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest_TrafficSplit *trafficSplit;

@end


/**
 *  If this field is provided, then the Endpoint's traffic_split will be
 *  overwritten with it. If last DeployedModel is being undeployed from the
 *  Endpoint, the [Endpoint.traffic_split] will always end up empty when this
 *  call returns. A DeployedModel will be successfully undeployed only if it
 *  doesn't have any traffic assigned to it when this method executes, or if
 *  this field unassigns any traffic to it.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of intValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest_TrafficSplit : GTLRObject
@end


/**
 *  Response message for EndpointService.UndeployModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelResponse : GTLRObject
@end


/**
 *  Contains model information necessary to perform batch prediction without
 *  requiring a full model import.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UnmanagedContainerModel : GTLRObject

/**
 *  The path to the directory containing the Model artifact and any of its
 *  supporting files.
 */
@property(nonatomic, copy, nullable) NSString *artifactUri;

/**
 *  Input only. The specification of the container that is to be used when
 *  deploying this Model.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ModelContainerSpec *containerSpec;

/** Contains the schemata used in Model's predictions and explanations */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PredictSchemata *predictSchemata;

@end


/**
 *  Runtime operation information for UpdateDeploymentResourcePool method.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateDeploymentResourcePoolOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for ModelService.UpdateExplanationDataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for ModelService.UpdateExplanationDataset.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetRequest : GTLRObject

/** The example config containing the location of the dataset. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Examples *examples;

@end


/**
 *  Response message of ModelService.UpdateExplanationDataset operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetResponse : GTLRObject
@end


/**
 *  Details of operations that perform update FeatureGroup.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateFeatureGroupOperationMetadata : GTLRObject

/** Operation metadata for FeatureGroup. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform update FeatureOnlineStore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateFeatureOnlineStoreOperationMetadata : GTLRObject

/** Operation metadata for FeatureOnlineStore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform update Feature.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateFeatureOperationMetadata : GTLRObject

/** Operation metadata for Feature Update. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform update Featurestore.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata : GTLRObject

/** Operation metadata for Featurestore. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform update FeatureView.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateFeatureViewOperationMetadata : GTLRObject

/** Operation metadata for FeatureView Update. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Runtime operation information for IndexService.UpdateIndex.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateIndexOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** The operation metadata with regard to Matching Engine Index operation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata *nearestNeighborSearchOperationMetadata;

@end


/**
 *  Runtime operation information for
 *  JobService.UpdateModelDeploymentMonitoringJob.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Details of operations that perform update PersistentResource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdatePersistentResourceOperationMetadata : GTLRObject

/** Operation metadata for PersistentResource. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/** Progress Message for Update LRO */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  Output only. The name of the SpecialistPool to which the specialists are
 *  being added. Format:
 *  `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}`
 */
@property(nonatomic, copy, nullable) NSString *specialistPool;

@end


/**
 *  Details of operations that perform update Tensorboard.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata : GTLRObject

/** Operation metadata for Tensorboard. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Metadata information for NotebookService.UpgradeNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpgradeNotebookRuntimeOperationMetadata : GTLRObject

/** The operation generic information. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

/**
 *  A human-readable message that shows the intermediate progress details of
 *  NotebookRuntime.
 */
@property(nonatomic, copy, nullable) NSString *progressMessage;

@end


/**
 *  Request message for NotebookService.UpgradeNotebookRuntime.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest : GTLRObject
@end


/**
 *  Details of ModelService.UploadModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UploadModelOperationMetadata : GTLRObject

/** The common part of the operation metadata. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1GenericOperationMetadata *genericMetadata;

@end


/**
 *  Request message for ModelService.UploadModel.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UploadModelRequest : GTLRObject

/** Required. The Model to create. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1Model *model;

/**
 *  Optional. The ID to use for the uploaded Model, which will become the final
 *  component of the model resource name. This value may be up to 63 characters,
 *  and valid characters are `[a-z0-9_-]`. The first character cannot be a
 *  number or hyphen.
 */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Optional. The resource name of the model into which to upload the version.
 *  Only specify this field when uploading a new version.
 */
@property(nonatomic, copy, nullable) NSString *parentModel;

/**
 *  Optional. The user-provided custom service account to use to do the model
 *  upload. If empty, [Vertex AI Service
 *  Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
 *  will be used to access resources needed to upload the model. This account
 *  must belong to the target project where the model is uploaded to, i.e., the
 *  project specified in the `parent` field of this request and have necessary
 *  read permissions (to Google Cloud Storage, Artifact Registry, etc.).
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

@end


/**
 *  Response message of ModelService.UploadModel operation.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UploadModelResponse : GTLRObject

/**
 *  The name of the uploaded Model resource. Format:
 *  `projects/{project}/locations/{location}/models/{model}`
 */
@property(nonatomic, copy, nullable) NSString *model;

/** Output only. The version ID of the model that is uploaded. */
@property(nonatomic, copy, nullable) NSString *modelVersionId;

@end


/**
 *  Request message for IndexService.UpsertDatapoints
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsRequest : GTLRObject

/** A list of datapoints to be created/updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1IndexDatapoint *> *datapoints;

/**
 *  Optional. Update mask is used to specify the fields to be overwritten in the
 *  datapoints by the update. The fields specified in the update_mask are
 *  relative to each IndexDatapoint inside datapoints, not the full request.
 *  Updatable fields: * Use `all_restricts` to update both restricts and
 *  numeric_restricts.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Response message for IndexService.UpsertDatapoints
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsResponse : GTLRObject
@end


/**
 *  References an API call. It contains more information about long running
 *  operation and Jobs that are triggered by the API call.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1UserActionReference : GTLRObject

/**
 *  For API calls that start a LabelingJob. Resource name of the LabelingJob.
 *  Format:
 *  `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
 */
@property(nonatomic, copy, nullable) NSString *dataLabelingJob;

/**
 *  The method name of the API RPC call. For example,
 *  "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  For API calls that return a long running operation. Resource name of the
 *  long running operation. Format:
 *  `projects/{project}/locations/{location}/operations/{operation}`
 */
@property(nonatomic, copy, nullable) NSString *operation;

@end


/**
 *  Value is the value of the field.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1Value : GTLRObject

/**
 *  A double value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  An integer value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intValue;

/** A string value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  Retrieve from Vertex AI Search datastore for grounding. See
 *  https://cloud.google.com/products/agent-builder
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1VertexAISearch : GTLRObject

/**
 *  Required. Fully-qualified Vertex AI Search data store resource ID. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
 */
@property(nonatomic, copy, nullable) NSString *datastore;

@end


/**
 *  Retrieve from Vertex RAG Store for grounding.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStore : GTLRObject

/** Optional. Deprecated. Please use rag_resources instead. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ragCorpora GTLR_DEPRECATED;

/**
 *  Optional. The representation of the rag source. It can be used to specify
 *  corpus only or ragfiles. Currently only support one corpus or multiple files
 *  from one corpus. In the future we may open up multiple corpora support.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStoreRagResource *> *ragResources;

/**
 *  Optional. Number of top k results to return from the selected corpora.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *similarityTopK;

/**
 *  Optional. Only return results with vector distance smaller than the
 *  threshold.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vectorDistanceThreshold;

@end


/**
 *  The definition of the Rag resource.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1VertexRagStoreRagResource : GTLRObject

/**
 *  Optional. RagCorpora resource name. Format:
 *  `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
 */
@property(nonatomic, copy, nullable) NSString *ragCorpus;

/**
 *  Optional. rag_file_id. The files should be in the same rag_corpus set in
 *  rag_corpus field.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ragFileIds;

@end


/**
 *  Metadata describes the input video content.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1VideoMetadata : GTLRObject

/** Optional. The end offset of the video. */
@property(nonatomic, strong, nullable) GTLRDuration *endOffset;

/** Optional. The start offset of the video. */
@property(nonatomic, strong, nullable) GTLRDuration *startOffset;

@end


/**
 *  Represents the spec of a worker pool in a job.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WorkerPoolSpec : GTLRObject

/** The custom container task. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1ContainerSpec *containerSpec;

/** Disk spec. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1DiskSpec *diskSpec;

/** Optional. Immutable. The specification of a single machine. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1MachineSpec *machineSpec;

/** Optional. List of NFS mount spec. */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1NfsMount *> *nfsMounts;

/** The Python packaged task. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1PythonPackageSpec *pythonPackageSpec;

/**
 *  Optional. The number of worker replicas to use for this worker pool.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *replicaCount;

@end


/**
 *  Contains Feature values to be written for a specific entity.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload : GTLRObject

/** Required. The ID of the entity. */
@property(nonatomic, copy, nullable) NSString *entityId;

/**
 *  Required. Feature values to be written, mapping from Feature ID to value. Up
 *  to 100,000 `feature_values` entries may be written across all payloads. The
 *  feature generation time, aligned by days, must be no older than five years
 *  (1825 days) and no later than one year (366 days) in the future.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload_FeatureValues *featureValues;

@end


/**
 *  Required. Feature values to be written, mapping from Feature ID to value. Up
 *  to 100,000 `feature_values` entries may be written across all payloads. The
 *  feature generation time, aligned by days, must be no older than five years
 *  (1825 days) and no later than one year (366 days) in the future.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAiplatform_GoogleCloudAiplatformV1FeatureValue. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload_FeatureValues : GTLRObject
@end


/**
 *  Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesRequest : GTLRObject

/**
 *  Required. The entities to be written. Up to 100,000 feature values can be
 *  written across all `payloads`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesPayload *> *payloads;

@end


/**
 *  Response message for FeaturestoreOnlineServingService.WriteFeatureValues.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesResponse : GTLRObject
@end


/**
 *  Request message for TensorboardService.WriteTensorboardExperimentData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest : GTLRObject

/**
 *  Required. Requests containing per-run TensorboardTimeSeries data to write.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest *> *writeRunDataRequests;

@end


/**
 *  Response message for TensorboardService.WriteTensorboardExperimentData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse : GTLRObject
@end


/**
 *  Request message for TensorboardService.WriteTensorboardRunData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest : GTLRObject

/**
 *  Required. The resource name of the TensorboardRun to write data to. Format:
 *  `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 */
@property(nonatomic, copy, nullable) NSString *tensorboardRun;

/**
 *  Required. The TensorboardTimeSeries data to write. Values with in a time
 *  series are indexed by their step value. Repeated writes to the same step
 *  will overwrite the existing value for that step. The upper limit of data
 *  points per write request is 5000.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudAiplatformV1TimeSeriesData *> *timeSeriesData;

@end


/**
 *  Response message for TensorboardService.WriteTensorboardRunData.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataResponse : GTLRObject
@end


/**
 *  An explanation method that redistributes Integrated Gradients attributions
 *  to segmented regions, taking advantage of the model's fully differentiable
 *  structure. Refer to this paper for more details:
 *  https://arxiv.org/abs/1906.02825 Supported only by image Models.
 */
@interface GTLRAiplatform_GoogleCloudAiplatformV1XraiAttribution : GTLRObject

/**
 *  Config for XRAI with blur baseline. When enabled, a linear path from the
 *  maximally blurred image to the input image is created. Using a blurred
 *  baseline instead of zero (black image) is motivated by the BlurIG approach
 *  explained here: https://arxiv.org/abs/2004.03383
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1BlurBaselineConfig *blurBaselineConfig;

/**
 *  Config for SmoothGrad approximation of gradients. When enabled, the
 *  gradients are approximated by averaging the gradients from noisy samples in
 *  the vicinity of the inputs. Adding noise can help improve the computed
 *  gradients. Refer to this paper for more details:
 *  https://arxiv.org/pdf/1706.03825.pdf
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudAiplatformV1SmoothGradConfig *smoothGradConfig;

/**
 *  Required. The number of steps for approximating the path integral. A good
 *  value to start is 50 and gradually increase until the sum to diff property
 *  is met within the desired error range. Valid range of its value is [1, 100],
 *  inclusively.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepCount;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleCloudLocationListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleCloudLocationLocation *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRAiplatform_GoogleCloudLocationLocation : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudLocationLocation_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleCloudLocationLocation_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudLocationLocation_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleCloudLocationLocation_Metadata : GTLRObject
@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRAiplatform_GoogleIamV1Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleTypeExpr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRAiplatform_GoogleIamV1Policy : GTLRObject

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleIamV1Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRAiplatform_GoogleIamV1SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleIamV1Policy *policy;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAiplatform_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRAiplatform_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRAiplatform_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRAiplatform_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRAiplatform_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAiplatform_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRAiplatform_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAiplatform_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a color in the RGBA color space. This representation is designed
 *  for simplicity of conversion to and from color representations in various
 *  languages over compactness. For example, the fields of this representation
 *  can be trivially provided to the constructor of `java.awt.Color` in Java; it
 *  can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
 *  method in iOS; and, with just a little work, it can be easily formatted into
 *  a CSS `rgba()` string in JavaScript. This reference page doesn't have
 *  information about the absolute color space that should be used to interpret
 *  the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
 *  applications should assume the sRGB color space. When color equality needs
 *  to be decided, implementations, unless documented otherwise, treat two
 *  colors as equal if all their red, green, blue, and alpha values each differ
 *  by at most `1e-5`. Example (Java): import com.google.type.Color; // ...
 *  public static java.awt.Color fromProto(Color protocolor) { float alpha =
 *  protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new
 *  java.awt.Color( protocolor.getRed(), protocolor.getGreen(),
 *  protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color
 *  color) { float red = (float) color.getRed(); float green = (float)
 *  color.getGreen(); float blue = (float) color.getBlue(); float denominator =
 *  255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red /
 *  denominator) .setGreen(green / denominator) .setBlue(blue / denominator);
 *  int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha(
 *  FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build());
 *  } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ...
 *  static UIColor* fromProto(Color* protocolor) { float red = [protocolor red];
 *  float green = [protocolor green]; float blue = [protocolor blue];
 *  FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if
 *  (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor
 *  colorWithRed:red green:green blue:blue alpha:alpha]; } static Color*
 *  toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color
 *  getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color*
 *  result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green];
 *  [result setBlue:blue]; if (alpha <= 0.9999) { [result
 *  setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return
 *  result; } // ... Example (JavaScript): // ... var protoToCssColor =
 *  function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac =
 *  rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red =
 *  Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue
 *  = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return
 *  rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value ||
 *  0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(',
 *  rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor =
 *  function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green
 *  << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6
 *  - hexString.length; var resultBuilder = ['#']; for (var i = 0; i <
 *  missingZeros; i++) { resultBuilder.push('0'); }
 *  resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
 */
@interface GTLRAiplatform_GoogleTypeColor : GTLRObject

/**
 *  The fraction of this color that should be applied to the pixel. That is, the
 *  final pixel color is defined by the equation: `pixel color = alpha * (this
 *  color) + (1.0 - alpha) * (background color)` This means that a value of 1.0
 *  corresponds to a solid color, whereas a value of 0.0 corresponds to a
 *  completely transparent color. This uses a wrapper message rather than a
 *  simple float scalar so that it is possible to distinguish between a default
 *  value and the value being unset. If omitted, this color object is rendered
 *  as a solid color (as if the alpha value had been explicitly given a value of
 *  1.0).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *alpha;

/**
 *  The amount of blue in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blue;

/**
 *  The amount of green in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *green;

/**
 *  The amount of red in the color as a value in the interval [0, 1].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *red;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRAiplatform_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRAiplatform_GoogleTypeExpr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Represents a time interval, encoded as a Timestamp start (inclusive) and a
 *  Timestamp end (exclusive). The start must be less than or equal to the end.
 *  When the start equals the end, the interval is empty (matches no time). When
 *  both start and end are unspecified, the interval matches any time.
 */
@interface GTLRAiplatform_GoogleTypeInterval : GTLRObject

/**
 *  Optional. Exclusive end of the interval. If specified, a Timestamp matching
 *  this interval will have to be before the end.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. Inclusive start of the interval. If specified, a Timestamp
 *  matching this interval will have to be the same or after the start.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRAiplatform_GoogleTypeMoney : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
