// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Vertex AI API (aiplatform/v1)
// Description:
//   Train high-quality custom machine learning models with minimal machine
//   learning expertise and effort.
// Documentation:
//   https://cloud.google.com/vertex-ai/

#import <GoogleAPIClientForREST/GTLRAiplatformQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRAiplatformViewNotebookExecutionJobViewBasic = @"NOTEBOOK_EXECUTION_JOB_VIEW_BASIC";
NSString * const kGTLRAiplatformViewNotebookExecutionJobViewFull = @"NOTEBOOK_EXECUTION_JOB_VIEW_FULL";
NSString * const kGTLRAiplatformViewNotebookExecutionJobViewUnspecified = @"NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED";
NSString * const kGTLRAiplatformViewPublisherModelVersionViewBasic = @"PUBLISHER_MODEL_VERSION_VIEW_BASIC";
NSString * const kGTLRAiplatformViewPublisherModelViewBasic    = @"PUBLISHER_MODEL_VIEW_BASIC";
NSString * const kGTLRAiplatformViewPublisherModelViewFull     = @"PUBLISHER_MODEL_VIEW_FULL";
NSString * const kGTLRAiplatformViewPublisherModelViewUnspecified = @"PUBLISHER_MODEL_VIEW_UNSPECIFIED";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRAiplatformQuery

@dynamic fields;

@end

@implementation GTLRAiplatformQuery_DatasetsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/datasets";
  GTLRAiplatformQuery_DatasetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.datasets.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasetVersions";
  GTLRAiplatformQuery_DatasetsDatasetVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsDatasetVersionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsGet

@dynamic name, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsDatasetVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasetVersions";
  GTLRAiplatformQuery_DatasetsDatasetVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetVersionsResponse class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsDatasetVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDatasetVersionsRestore

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:restore";
  GTLRAiplatformQuery_DatasetsDatasetVersionsRestore *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.datasets.datasetVersions.restore";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.datasets.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsGet

@dynamic name, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Dataset class];
  query.loggingName = @"aiplatform.datasets.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/datasets";
  GTLRAiplatformQuery_DatasetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetsResponse class];
  query.loggingName = @"aiplatform.datasets.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_DatasetsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_DatasetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Dataset class];
  query.loggingName = @"aiplatform.datasets.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_EndpointsComputeTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:computeTokens";
  GTLRAiplatformQuery_EndpointsComputeTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse class];
  query.loggingName = @"aiplatform.endpoints.computeTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_EndpointsCountTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:countTokens";
  GTLRAiplatformQuery_EndpointsCountTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse class];
  query.loggingName = @"aiplatform.endpoints.countTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_EndpointsGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:generateContent";
  GTLRAiplatformQuery_EndpointsGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.endpoints.generateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_EndpointsStreamGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:streamGenerateContent";
  GTLRAiplatformQuery_EndpointsStreamGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.endpoints.streamGenerateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelBatchPredictionJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.batchPredictionJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/batchPredictionJobs";
  GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob class];
  query.loggingName = @"aiplatform.projects.locations.batchPredictionJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.batchPredictionJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchPredictionJob class];
  query.loggingName = @"aiplatform.projects.locations.batchPredictionJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/batchPredictionJobs";
  GTLRAiplatformQuery_ProjectsLocationsBatchPredictionJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListBatchPredictionJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.batchPredictionJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelCustomJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CustomJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customJobs";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CustomJob class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CustomJob class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customJobs";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListCustomJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsCustomJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.customJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelDataLabelingJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataLabelingJobs";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DataLabelingJob class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataLabelingJobs";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDataLabelingJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDataLabelingJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.dataLabelingJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsGet

@dynamic name, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1AnnotationSpec class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsAnnotationSpecsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.annotationSpecs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasets";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/annotations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListAnnotationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsAnnotationsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.annotations.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataItems";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDataItemsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDataItemsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.dataItems.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasetVersions";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsGet

@dynamic name, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasetVersions";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetVersionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DatasetVersion class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsRestore

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:restore";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDatasetVersionsRestore *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.datasetVersions.restore";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:export";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.export";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsGet

@dynamic name, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Dataset class];
  query.loggingName = @"aiplatform.projects.locations.datasets.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsImport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportDataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:import";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.import";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/datasets";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDatasetsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Dataset *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Dataset class];
  query.loggingName = @"aiplatform.projects.locations.datasets.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/savedQueries";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListSavedQueriesResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSavedQueriesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.datasets.savedQueries.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDatasetsSearchDataItems

@dynamic annotationFilters, annotationsFilter, annotationsLimit, dataItemFilter,
         dataLabelingJob, dataset, fieldMask, orderBy, orderByAnnotationOrderBy,
         orderByAnnotationSavedQuery, orderByDataItem, pageSize, pageToken,
         savedQuery;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"orderByAnnotationOrderBy" : @"orderByAnnotation.orderBy",
    @"orderByAnnotationSavedQuery" : @"orderByAnnotation.savedQuery"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotationFilters" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithDataset:(NSString *)dataset {
  NSArray *pathParams = @[ @"dataset" ];
  NSString *pathURITemplate = @"v1/{+dataset}:searchDataItems";
  GTLRAiplatformQuery_ProjectsLocationsDatasetsSearchDataItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataset = dataset;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SearchDataItemsResponse class];
  query.loggingName = @"aiplatform.projects.locations.datasets.searchDataItems";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/deploymentResourcePools";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/deploymentResourcePools";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeploymentResourcePool *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsQueryDeployedModels

@dynamic deploymentResourcePool, pageSize, pageToken;

+ (instancetype)queryWithDeploymentResourcePool:(NSString *)deploymentResourcePool {
  NSArray *pathParams = @[ @"deploymentResourcePool" ];
  NSString *pathURITemplate = @"v1/{+deploymentResourcePool}:queryDeployedModels";
  GTLRAiplatformQuery_ProjectsLocationsDeploymentResourcePoolsQueryDeployedModels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.deploymentResourcePool = deploymentResourcePool;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1QueryDeployedModelsResponse class];
  query.loggingName = @"aiplatform.projects.locations.deploymentResourcePools.queryDeployedModels";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsComputeTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:computeTokens";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsComputeTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.computeTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsCountTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:countTokens";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsCountTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.countTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsCreate

@dynamic endpointId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Endpoint *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/endpoints";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsDeployModel

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployModelRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:deployModel";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsDeployModel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.deployModel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:directPredict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DirectPredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.directPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectRawPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:directRawPredict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsDirectRawPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1DirectRawPredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.directRawPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsExplain

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExplainRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:explain";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsExplain *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ExplainResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.explain";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:generateContent";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.generateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Endpoint class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/endpoints";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListEndpointsResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsMutateDeployedModel

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MutateDeployedModelRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:mutateDeployedModel";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsMutateDeployedModel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.mutateDeployedModel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Endpoint *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Endpoint class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:predict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.predict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsRawPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:rawPredict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsRawPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleApiHttpBody class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.rawPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsServerStreamingPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:serverStreamingPredict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsServerStreamingPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.serverStreamingPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:streamGenerateContent";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.streamGenerateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamRawPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:streamRawPredict";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsStreamRawPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleApiHttpBody class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.streamRawPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEndpointsUndeployModel

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UndeployModelRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:undeployModel";
  GTLRAiplatformQuery_ProjectsLocationsEndpointsUndeployModel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.endpoints.undeployModel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsEvaluateInstances

@dynamic location;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesRequest *)object
                       location:(NSString *)location {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}:evaluateInstances";
  GTLRAiplatformQuery_ProjectsLocationsEvaluateInstances *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1EvaluateInstancesResponse class];
  query.loggingName = @"aiplatform.projects.locations.evaluateInstances";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsCreate

@dynamic featureGroupId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureGroups";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesCreate

@dynamic featureId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/features";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Feature class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesList

@dynamic filter, latestStatsCount, orderBy, pageSize, pageToken, parent,
         readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/features";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsListWait

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsListWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.operations.listWait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsFeaturesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.features.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureGroups";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureGroupsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsListWait

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsListWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.operations.listWait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureGroup *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureGroups.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresCreate

@dynamic featureOnlineStoreId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureOnlineStores";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsCreate

@dynamic featureViewId, parent, runSyncImmediately;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureView *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureViews";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FeatureViewSync class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureViewSyncs";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewSyncsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues

@dynamic featureView;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesRequest *)object
                    featureView:(NSString *)featureView {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"featureView" ];
  NSString *pathURITemplate = @"v1/{+featureView}:fetchFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.featureView = featureView;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FetchFeatureValuesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.fetchFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FeatureView class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureViews";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureViewsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsListWait

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsListWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.operations.listWait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureView *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities

@dynamic featureView;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesRequest *)object
                    featureView:(NSString *)featureView {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"featureView" ];
  NSString *pathURITemplate = @"v1/{+featureView}:searchNearestEntities";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.featureView = featureView;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SearchNearestEntitiesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.searchNearestEntities";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSync

@dynamic featureView;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewRequest *)object
                    featureView:(NSString *)featureView {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"featureView" ];
  NSString *pathURITemplate = @"v1/{+featureView}:sync";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsSync *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.featureView = featureView;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SyncFeatureViewResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.sync";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresFeatureViewsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.featureViews.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featureOnlineStores";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsListWait

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsListWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.operations.listWait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FeatureOnlineStore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsFeatureOnlineStoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featureOnlineStores.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresBatchReadFeatureValues

@dynamic featurestore;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchReadFeatureValuesRequest *)object
                   featurestore:(NSString *)featurestore {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"featurestore" ];
  NSString *pathURITemplate = @"v1/{+featurestore}:batchReadFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresBatchReadFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.featurestore = featurestore;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.batchReadFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresCreate

@dynamic featurestoreId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Featurestore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featurestores";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesCreate

@dynamic entityTypeId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EntityType *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/entityTypes";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeleteFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:deleteFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesExportFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:exportFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesExportFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateFeaturesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/features:batchCreate";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesCreate

@dynamic featureId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/features";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Feature class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesList

@dynamic filter, latestStatsCount, orderBy, pageSize, pageToken, parent,
         readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/features";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Feature *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesFeaturesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Feature class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.features.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1EntityType class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesImportFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:importFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesImportFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/entityTypes";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListEntityTypesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1EntityType *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1EntityType class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesReadFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:readFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesReadFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:streamingReadFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadFeatureValuesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues

@dynamic entityType;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesRequest *)object
                     entityType:(NSString *)entityType {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"entityType" ];
  NSString *pathURITemplate = @"v1/{+entityType}:writeFeatureValues";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.entityType = entityType;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1WriteFeatureValuesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Featurestore class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/featurestores";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListFeaturestoresResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Featurestore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSearchFeatures

@dynamic location, pageSize, pageToken, query;

+ (instancetype)queryWithLocation:(NSString *)location {
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}/featurestores:searchFeatures";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSearchFeatures *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.location = location;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SearchFeaturesResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.searchFeatures";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsFeaturestoresTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsFeaturestoresTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.featurestores.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudLocationLocation class];
  query.loggingName = @"aiplatform.projects.locations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/hyperparameterTuningJobs";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1HyperparameterTuningJob class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/hyperparameterTuningJobs";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsHyperparameterTuningJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.hyperparameterTuningJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/indexEndpoints";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDeployIndex

@dynamic indexEndpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployIndexRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"indexEndpoint" ];
  NSString *pathURITemplate = @"v1/{+indexEndpoint}:deployIndex";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsDeployIndex *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.indexEndpoint = indexEndpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.deployIndex";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsFindNeighbors

@dynamic indexEndpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"indexEndpoint" ];
  NSString *pathURITemplate = @"v1/{+indexEndpoint}:findNeighbors";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsFindNeighbors *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.indexEndpoint = indexEndpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1FindNeighborsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.findNeighbors";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/indexEndpoints";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListIndexEndpointsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsMutateDeployedIndex

@dynamic indexEndpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1DeployedIndex *)object
                  indexEndpoint:(NSString *)indexEndpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"indexEndpoint" ];
  NSString *pathURITemplate = @"v1/{+indexEndpoint}:mutateDeployedIndex";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsMutateDeployedIndex *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.indexEndpoint = indexEndpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1IndexEndpoint class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsReadIndexDatapoints

@dynamic indexEndpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"indexEndpoint" ];
  NSString *pathURITemplate = @"v1/{+indexEndpoint}:readIndexDatapoints";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsReadIndexDatapoints *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.indexEndpoint = indexEndpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadIndexDatapointsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.readIndexDatapoints";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsUndeployIndex

@dynamic indexEndpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UndeployIndexRequest *)object
                  indexEndpoint:(NSString *)indexEndpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"indexEndpoint" ];
  NSString *pathURITemplate = @"v1/{+indexEndpoint}:undeployIndex";
  GTLRAiplatformQuery_ProjectsLocationsIndexEndpointsUndeployIndex *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.indexEndpoint = indexEndpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexEndpoints.undeployIndex";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Index *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/indexes";
  GTLRAiplatformQuery_ProjectsLocationsIndexesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexes.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexes.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Index class];
  query.loggingName = @"aiplatform.projects.locations.indexes.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/indexes";
  GTLRAiplatformQuery_ProjectsLocationsIndexesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListIndexesResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexes.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.indexes.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.indexes.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexes.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexes.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsIndexesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexes.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Index *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsIndexesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.indexes.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesRemoveDatapoints

@dynamic index;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsRequest *)object
                          index:(NSString *)index {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"index" ];
  NSString *pathURITemplate = @"v1/{+index}:removeDatapoints";
  GTLRAiplatformQuery_ProjectsLocationsIndexesRemoveDatapoints *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.index = index;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1RemoveDatapointsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexes.removeDatapoints";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsIndexesUpsertDatapoints

@dynamic index;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsRequest *)object
                          index:(NSString *)index {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"index" ];
  NSString *pathURITemplate = @"v1/{+index}:upsertDatapoints";
  GTLRAiplatformQuery_ProjectsLocationsIndexesUpsertDatapoints *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.index = index;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1UpsertDatapointsResponse class];
  query.loggingName = @"aiplatform.projects.locations.indexes.upsertDatapoints";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRAiplatformQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudLocationListLocationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsCreate

@dynamic artifactId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Artifact *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/artifacts";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Artifact class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Artifact class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/artifacts";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListArtifactsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Artifact *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Artifact class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeArtifactsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/artifacts:purge";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.purge";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph

@dynamic artifact, filter, maxHops;

+ (instancetype)queryWithArtifact:(NSString *)artifact {
  NSArray *pathParams = @[ @"artifact" ];
  NSString *pathURITemplate = @"v1/{+artifact}:queryArtifactLineageSubgraph";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.artifact = artifact;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions

@dynamic context;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest *)object
                        context:(NSString *)context {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"context" ];
  NSString *pathURITemplate = @"v1/{+context}:addContextArtifactsAndExecutions";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.context = context;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextChildren

@dynamic context;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenRequest *)object
                        context:(NSString *)context {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"context" ];
  NSString *pathURITemplate = @"v1/{+context}:addContextChildren";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsAddContextChildren *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.context = context;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1AddContextChildrenResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.addContextChildren";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsCreate

@dynamic contextId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Context *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/contexts";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Context class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsDelete

@dynamic ETag, force, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Context class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/contexts";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListContextsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Context *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Context class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeContextsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/contexts:purge";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.purge";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph

@dynamic context;

+ (instancetype)queryWithContext:(NSString *)context {
  NSArray *pathParams = @[ @"context" ];
  NSString *pathURITemplate = @"v1/{+context}:queryContextLineageSubgraph";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.context = context;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsRemoveContextChildren

@dynamic context;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenRequest *)object
                        context:(NSString *)context {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"context" ];
  NSString *pathURITemplate = @"v1/{+context}:removeContextChildren";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresContextsRemoveContextChildren *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.context = context;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1RemoveContextChildrenResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.contexts.removeContextChildren";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresCreate

@dynamic metadataStoreId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/metadataStores";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsAddExecutionEvents

@dynamic execution;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsRequest *)object
                      execution:(NSString *)execution {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"execution" ];
  NSString *pathURITemplate = @"v1/{+execution}:addExecutionEvents";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsAddExecutionEvents *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.execution = execution;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1AddExecutionEventsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.addExecutionEvents";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsCreate

@dynamic executionId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Execution *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/executions";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Execution class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Execution class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/executions";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListExecutionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Execution *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Execution class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PurgeExecutionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/executions:purge";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.purge";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs

@dynamic execution;

+ (instancetype)queryWithExecution:(NSString *)execution {
  NSArray *pathParams = @[ @"execution" ];
  NSString *pathURITemplate = @"v1/{+execution}:queryExecutionInputsAndOutputs";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.execution = execution;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1LineageSubgraph class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1MetadataStore class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/metadataStores";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataStoresResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasCreate

@dynamic metadataSchemaId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/metadataSchemas";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.metadataSchemas.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1MetadataSchema class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.metadataSchemas.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/metadataSchemas";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresMetadataSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListMetadataSchemasResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.metadataSchemas.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsMetadataStoresOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.metadataStores.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesBatchMigrate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchMigrateResourcesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migratableResources:batchMigrate";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesBatchMigrate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.batchMigrate";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesSearch

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migratableResources:search";
  GTLRAiplatformQuery_ProjectsLocationsMigratableResourcesSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SearchMigratableResourcesResponse class];
  query.loggingName = @"aiplatform.projects.locations.migratableResources.search";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/modelDeploymentMonitoringJobs";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/modelDeploymentMonitoringJobs";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ModelDeploymentMonitoringJob *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPause

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:pause";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsPause *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.pause";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsResume

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:resume";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsResume *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.resume";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies

@dynamic modelDeploymentMonitoringJob;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest *)object
   modelDeploymentMonitoringJob:(NSString *)modelDeploymentMonitoringJob {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"modelDeploymentMonitoringJob" ];
  NSString *pathURITemplate = @"v1/{+modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies";
  GTLRAiplatformQuery_ProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.modelDeploymentMonitoringJob = modelDeploymentMonitoringJob;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse class];
  query.loggingName = @"aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsCopy

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CopyModelRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/models:copy";
  GTLRAiplatformQuery_ProjectsLocationsModelsCopy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.copy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsDeleteVersion

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:deleteVersion";
  GTLRAiplatformQuery_ProjectsLocationsModelsDeleteVersion *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.deleteVersion";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ImportModelEvaluationRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/evaluations:import";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluation class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.import";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/evaluations";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesBatchImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:batchImport";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesBatchImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.slices.batchImport";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ModelEvaluationSlice class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.slices.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/slices";
  GTLRAiplatformQuery_ProjectsLocationsModelsEvaluationsSlicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.evaluations.slices.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:export";
  GTLRAiplatformQuery_ProjectsLocationsModelsExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.export";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Model class];
  query.loggingName = @"aiplatform.projects.locations.models.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsModelsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.models.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/models";
  GTLRAiplatformQuery_ProjectsLocationsModelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListModelsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsListVersions

@dynamic filter, name, orderBy, pageSize, pageToken, readMask;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:listVersions";
  GTLRAiplatformQuery_ProjectsLocationsModelsListVersions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListModelVersionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.listVersions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsMergeVersionAliases

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1MergeVersionAliasesRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:mergeVersionAliases";
  GTLRAiplatformQuery_ProjectsLocationsModelsMergeVersionAliases *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Model class];
  query.loggingName = @"aiplatform.projects.locations.models.mergeVersionAliases";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsModelsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.models.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.models.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsModelsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsModelsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Model *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsModelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Model class];
  query.loggingName = @"aiplatform.projects.locations.models.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsModelsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.models.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsModelsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.models.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsUpdateExplanationDataset

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpdateExplanationDatasetRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:updateExplanationDataset";
  GTLRAiplatformQuery_ProjectsLocationsModelsUpdateExplanationDataset *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.updateExplanationDataset";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsModelsUpload

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UploadModelRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/models:upload";
  GTLRAiplatformQuery_ProjectsLocationsModelsUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.models.upload";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelNasJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NasJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/nasJobs";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NasJob class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NasJob class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/nasJobs";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListNasJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NasTrialDetail class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.nasTrialDetails.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/nasTrialDetails";
  GTLRAiplatformQuery_ProjectsLocationsNasJobsNasTrialDetailsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListNasTrialDetailsResponse class];
  query.loggingName = @"aiplatform.projects.locations.nasJobs.nasTrialDetails.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsCreate

@dynamic notebookExecutionJobId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookExecutionJobs";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NotebookExecutionJob class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookExecutionJobs";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsNotebookExecutionJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookExecutionJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesAssign

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AssignNotebookRuntimeRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookRuntimes:assign";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesAssign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.assign";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntime class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookRuntimes";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimesResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesStart

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StartNotebookRuntimeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:start";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesStart *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.start";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesUpgrade

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:upgrade";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimesUpgrade *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimes.upgrade";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesCreate

@dynamic notebookRuntimeTemplateId, parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookRuntimeTemplates";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.getIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notebookRuntimeTemplates";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1NotebookRuntimeTemplate class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1Policy class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.setIamPolicy";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions

@dynamic permissions, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAiplatformQuery_ProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAiplatform_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"aiplatform.projects.locations.notebookRuntimeTemplates.testIamPermissions";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesCreate

@dynamic parent, persistentResourceId;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/persistentResources";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/persistentResources";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListPersistentResourcesResponse class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PersistentResource *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesReboot

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RebootPersistentResourceRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:reboot";
  GTLRAiplatformQuery_ProjectsLocationsPersistentResourcesReboot *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.persistentResources.reboot";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchCancel

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/pipelineJobs:batchCancel";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.batchCancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/pipelineJobs:batchDelete";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.batchDelete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelPipelineJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCreate

@dynamic parent, pipelineJobId;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/pipelineJobs";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PipelineJob class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/pipelineJobs";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListPipelineJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsPipelineJobsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.pipelineJobs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsComputeTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:computeTokens";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsComputeTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.computeTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsCountTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:countTokens";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsCountTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.countTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:generateContent";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.generateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:predict";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.predict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsRawPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RawPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:rawPredict";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsRawPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleApiHttpBody class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.rawPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsServerStreamingPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:serverStreamingPredict";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsServerStreamingPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1StreamingPredictResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.serverStreamingPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:streamGenerateContent";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.streamGenerateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamRawPredict

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StreamRawPredictRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:streamRawPredict";
  GTLRAiplatformQuery_ProjectsLocationsPublishersModelsStreamRawPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleApiHttpBody class];
  query.loggingName = @"aiplatform.projects.locations.publishers.models.streamRawPredict";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Schedule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schedules";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Schedule class];
  query.loggingName = @"aiplatform.projects.locations.schedules.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.schedules.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Schedule class];
  query.loggingName = @"aiplatform.projects.locations.schedules.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schedules";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListSchedulesResponse class];
  query.loggingName = @"aiplatform.projects.locations.schedules.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.schedules.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.schedules.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.schedules.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.schedules.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.schedules.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Schedule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Schedule class];
  query.loggingName = @"aiplatform.projects.locations.schedules.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesPause

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1PauseScheduleRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:pause";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesPause *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.schedules.pause";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSchedulesResume

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ResumeScheduleRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:resume";
  GTLRAiplatformQuery_ProjectsLocationsSchedulesResume *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.schedules.resume";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/specialistPools";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsList

@dynamic pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/specialistPools";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListSpecialistPoolsResponse class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SpecialistPool *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsSpecialistPoolsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.specialistPools.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Study *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/studies";
  GTLRAiplatformQuery_ProjectsLocationsStudiesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Study class];
  query.loggingName = @"aiplatform.projects.locations.studies.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Study class];
  query.loggingName = @"aiplatform.projects.locations.studies.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/studies";
  GTLRAiplatformQuery_ProjectsLocationsStudiesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListStudiesResponse class];
  query.loggingName = @"aiplatform.projects.locations.studies.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesLookup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1LookupStudyRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/studies:lookup";
  GTLRAiplatformQuery_ProjectsLocationsStudiesLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Study class];
  query.loggingName = @"aiplatform.projects.locations.studies.lookup";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.studies.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsStudiesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsAddTrialMeasurement

@dynamic trialName;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1AddTrialMeasurementRequest *)object
                      trialName:(NSString *)trialName {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"trialName" ];
  NSString *pathURITemplate = @"v1/{+trialName}:addTrialMeasurement";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsAddTrialMeasurement *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.trialName = trialName;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Trial class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.addTrialMeasurement";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState

@dynamic trialName;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest *)object
                      trialName:(NSString *)trialName {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"trialName" ];
  NSString *pathURITemplate = @"v1/{+trialName}:checkTrialEarlyStoppingState";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.trialName = trialName;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsComplete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CompleteTrialRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:complete";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsComplete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Trial class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.complete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Trial *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trials";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Trial class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Trial class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trials";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTrialsResponse class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsListOptimalTrials

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trials:listOptimalTrials";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsListOptimalTrials *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListOptimalTrialsResponse class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.listOptimalTrials";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsStop

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1StopTrialRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:stop";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsStop *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Trial class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.stop";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsSuggest

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1SuggestTrialsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trials:suggest";
  GTLRAiplatformQuery_ProjectsLocationsStudiesTrialsSuggest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.studies.trials.suggest";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsBatchRead

@dynamic tensorboard, timeSeries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"timeSeries" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithTensorboard:(NSString *)tensorboard {
  NSArray *pathParams = @[ @"tensorboard" ];
  NSString *pathURITemplate = @"v1/{+tensorboard}:batchRead";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsBatchRead *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.tensorboard = tensorboard;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.batchRead";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tensorboards";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:batchCreate";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.batchCreate";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsCreate

@dynamic parent, tensorboardExperimentId;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/experiments";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/experiments";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardExperimentsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardExperiment class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/runs:batchCreate";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsCreate

@dynamic parent, tensorboardRunId;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/runs";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/runs";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardRunsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardRun class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate

@dynamic parent, tensorboardTimeSeriesId;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/timeSeries";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries

@dynamic tensorboardTimeSeries;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest *)object
          tensorboardTimeSeries:(NSString *)tensorboardTimeSeries {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"tensorboardTimeSeries" ];
  NSString *pathURITemplate = @"v1/{+tensorboardTimeSeries}:exportTensorboardTimeSeries";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.tensorboardTimeSeries = tensorboardTimeSeries;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/timeSeries";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TensorboardTimeSeries class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead

@dynamic filter, maxDataPoints, tensorboardTimeSeries;

+ (instancetype)queryWithTensorboardTimeSeries:(NSString *)tensorboardTimeSeries {
  NSArray *pathParams = @[ @"tensorboardTimeSeries" ];
  NSString *pathURITemplate = @"v1/{+tensorboardTimeSeries}:read";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.tensorboardTimeSeries = tensorboardTimeSeries;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData

@dynamic blobIds, timeSeries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"blobIds" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithTimeSeries:(NSString *)timeSeries {
  NSArray *pathParams = @[ @"timeSeries" ];
  NSString *pathURITemplate = @"v1/{+timeSeries}:readBlobData";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.timeSeries = timeSeries;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsWrite

@dynamic tensorboardRun;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataRequest *)object
                 tensorboardRun:(NSString *)tensorboardRun {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"tensorboardRun" ];
  NSString *pathURITemplate = @"v1/{+tensorboardRun}:write";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsRunsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.tensorboardRun = tensorboardRun;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardRunDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.runs.write";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsWrite

@dynamic tensorboardExperiment;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest *)object
          tensorboardExperiment:(NSString *)tensorboardExperiment {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"tensorboardExperiment" ];
  NSString *pathURITemplate = @"v1/{+tensorboardExperiment}:write";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsExperimentsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.tensorboardExperiment = tensorboardExperiment;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.experiments.write";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsList

@dynamic filter, orderBy, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tensorboards";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTensorboardsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1Tensorboard *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.patch";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadSize

@dynamic tensorboard;

+ (instancetype)queryWithTensorboard:(NSString *)tensorboard {
  NSArray *pathParams = @[ @"tensorboard" ];
  NSString *pathURITemplate = @"v1/{+tensorboard}:readSize";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadSize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.tensorboard = tensorboard;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardSizeResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.readSize";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadUsage

@dynamic tensorboard;

+ (instancetype)queryWithTensorboard:(NSString *)tensorboard {
  NSArray *pathParams = @[ @"tensorboard" ];
  NSString *pathURITemplate = @"v1/{+tensorboard}:readUsage";
  GTLRAiplatformQuery_ProjectsLocationsTensorboardsReadUsage *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.tensorboard = tensorboard;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ReadTensorboardUsageResponse class];
  query.loggingName = @"aiplatform.projects.locations.tensorboards.readUsage";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelTrainingPipelineRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trainingPipelines";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TrainingPipeline class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/trainingPipelines";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTrainingPipelinesResponse class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsWait

@dynamic name, timeout;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRAiplatformQuery_ProjectsLocationsTrainingPipelinesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.trainingPipelines.operations.wait";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CancelTuningJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1TuningJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tuningJobs";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TuningJob class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.create";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1TuningJob class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tuningJobs";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ListTuningJobsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.operations.cancel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleProtobufEmpty class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.operations.delete";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.operations.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.operations.list";
  return query;
}

@end

@implementation GTLRAiplatformQuery_ProjectsLocationsTuningJobsRebaseTunedModel

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1RebaseTunedModelRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tuningJobs:rebaseTunedModel";
  GTLRAiplatformQuery_ProjectsLocationsTuningJobsRebaseTunedModel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAiplatform_GoogleLongrunningOperation class];
  query.loggingName = @"aiplatform.projects.locations.tuningJobs.rebaseTunedModel";
  return query;
}

@end

@implementation GTLRAiplatformQuery_PublishersModelsComputeTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:computeTokens";
  GTLRAiplatformQuery_PublishersModelsComputeTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1ComputeTokensResponse class];
  query.loggingName = @"aiplatform.publishers.models.computeTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_PublishersModelsCountTokens

@dynamic endpoint;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1CountTokensRequest *)object
                       endpoint:(NSString *)endpoint {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"endpoint" ];
  NSString *pathURITemplate = @"v1/{+endpoint}:countTokens";
  GTLRAiplatformQuery_PublishersModelsCountTokens *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.endpoint = endpoint;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1CountTokensResponse class];
  query.loggingName = @"aiplatform.publishers.models.countTokens";
  return query;
}

@end

@implementation GTLRAiplatformQuery_PublishersModelsGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:generateContent";
  GTLRAiplatformQuery_PublishersModelsGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.publishers.models.generateContent";
  return query;
}

@end

@implementation GTLRAiplatformQuery_PublishersModelsGet

@dynamic huggingFaceToken, isHuggingFaceModel, languageCode, name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAiplatformQuery_PublishersModelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1PublisherModel class];
  query.loggingName = @"aiplatform.publishers.models.get";
  return query;
}

@end

@implementation GTLRAiplatformQuery_PublishersModelsStreamGenerateContent

@dynamic model;

+ (instancetype)queryWithObject:(GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentRequest *)object
                          model:(NSString *)model {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"model" ];
  NSString *pathURITemplate = @"v1/{+model}:streamGenerateContent";
  GTLRAiplatformQuery_PublishersModelsStreamGenerateContent *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.model = model;
  query.expectedObjectClass = [GTLRAiplatform_GoogleCloudAiplatformV1GenerateContentResponse class];
  query.loggingName = @"aiplatform.publishers.models.streamGenerateContent";
  return query;
}

@end
